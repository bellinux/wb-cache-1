10|424|Public
2500|$|The bridge project {{resulted}} in a realignment of several highway routes in the area. [...] A northern bypass of New Roads was constructed to link LA10 with the bridge, and the old route through town was designated as LA10 Bus. [...] LA420 and LA981 were extended to cover {{the remainder of the}} old route {{on the north side of}} the present route. [...] At the same time, LA1 was re-routed onto Hospital Road, a bypass formerly designated as LA3131, on the west side of New Roads. [...] Its former route through town became LA1 <b>Bus.,</b> <b>sharing</b> pavement with LA10 Bus. [...] On the opposite side of the river, a new highway was constructed to connect the Audubon Bridge with US61 at Starhill, and LA10 now followed US61 into St. Francisville. [...] The old route of LA10 through town became LA1263.|$|E
50|$|The bridge project {{resulted}} in a realignment of several highway routes in the area. A northern bypass of New Roads was constructed to link LA 10 with the bridge, and the old route through town was designated as LA 10 Bus. LA 420 and LA 981 were extended to cover {{the remainder of the}} old route {{on the north side of}} the present route. At the same time, LA 1 was re-routed onto Hospital Road, a bypass formerly designated as LA 3131, on the west side of New Roads. Its former route through town became LA 1 <b>Bus.,</b> <b>sharing</b> pavement with LA 10 Bus. On the opposite side of the river, a new highway was constructed to connect the Audubon Bridge with US 61 at Starhill, and LA 10 now followed US 61 into St. Francisville. The old route of LA 10 through town became LA 1263.|$|E
40|$|The omnipresence of ECU (electronic control units) in {{vehicles}} has {{lead the}} automotive industry to face a great challenge in its transition from mechanical engineering towards mechatronical products. The X-by-wire and X-tainment applications involve efficient networks that allow <b>bus</b> <b>sharing</b> while reducing both cabling costs, number of wires an...|$|E
5000|$|Prince Light Coach (a large {{capacity}} passenger <b>bus</b> <b>shared</b> with the Clipper) ...|$|R
5000|$|... "X O part II" [...] for amplified flute, amplified cello, analog modular sound synthesizers (Make Noise CV <b>Bus</b> <b>Shared</b> System with Tempi, ...|$|R
50|$|JR Bus Tohoku, JR Bus Kanto, JR Tokai Bus and Chugoku JR <b>Bus</b> <b>share</b> {{a common}} livery {{based on the}} JNR Bus livery.|$|R
30|$|A dual-port RAM {{is used by}} its ports A and B {{interfaced}} to the UART and the FLC modules, respectively. The Xilinx core generator tool {{was used}} to generate {{the core of the}} block RAM module. The functionality of dual ports purges <b>bus</b> <b>sharing</b> issues. The address on port A is set to 0 x 00 and increments twice for each membership point or crisp input (2 bytes). Arrival of data over UART triggers address increment and memory write operation. Figure  7 shows the block diagram of the fuzzy inference module.|$|E
40|$|Any data {{exchanged}} {{between the}} processor and main memory uses the memory <b>bus,</b> <b>sharing</b> it with data exchanged between I/O devices and main memory. If the processor and a device try to transfer data {{at the same}} time, an impact {{can be seen on}} the processor {{as well as on the}} device. As a result, the execution time of an application on the processor may increase due to the memory-bus load generated by I/O devices. In real-time environments, this impact can result in missed deadlines and a behavior that is different to that intended by the designer of the system. This pape...|$|E
40|$|Abstract Any data {{exchanged}} {{between the}} processor and mainmemory uses the memory <b>bus,</b> <b>sharing</b> it with data exchanged between I/O devices and main memory. If the pro-cessor and a device try to transfer data {{at the same}} time, an impact {{can be seen on}} the processor {{as well as on the}} de-vice. As a result, the execution time of an application on the processor may increase due to the memory-bus load gener-ated by I/O devices. In real-time environments, this impact can result in missed deadlines and a behavior that is differ-ent to that intended by the designer of the system. This paper gives a method for describing and quantify-ing the impact of such load on applications executed by the processor. 1...|$|E
5000|$|L2 CPU caches (128 KiB to 24 MiB) [...] - [...] {{slightly}} slower access, {{with the}} speed of the memory <b>bus</b> <b>shared</b> between twins of cores ...|$|R
5000|$|L3 CPU caches (2 MiB to 32 MiB) [...] - [...] even slower access, {{with the}} speed of the memory <b>bus</b> <b>shared</b> between even more cores of the same {{processor}} ...|$|R
50|$|US 17 <b>Bus</b> <b>shares</b> brief {{concurrency}} with US 76 and US 421, while {{crossing over}} the Cape Fear River. It {{is also part}} of the Cape Fear Historic Byway, which features scenic urban areas, colonial-era streets, the USS North Carolina battleship and the city parks.|$|R
40|$|In {{order to}} satisfy the request for dealing with Binocular visional signal which needs fast and {{real-time}} processing, the design of multi-DSP parallel system based on four ADSP-TS 201 Ss is proposed. Proceeding from practical requests, a scheme of the multi-DSP parallel processing system which couples the external <b>bus</b> <b>sharing</b> and the link ports is adopted by analyzing the parallel processing structures of three kinds of ADSP-TS 201 Ss. This scheme has ensured the data rate, resources sharing, simple structure, easy controlling, and flexible communication. This study designed the system hardware and the software to describe the data exchange between four ADSP-TS 201 S, which ensured the requirement of binocular vision system of processing mass operation in real-time environment. © 2012 IEEE. IEE...|$|E
40|$|Reliably upperbounding {{contention}} in multicore {{shared resources}} is of prominent {{importance in the}} early design phases of critical real-time systems to properly allocate time budgets to applications. However, during early stages applications are not yet consolidated and IP constraints may prevent sharing them across providers, challenging the estimation of contention bounds. In this paper, we propose a model to estimate the increase in applications' execution time due to on-chip <b>bus</b> <b>sharing</b> when they simultaneously execute in a multicore. The model works with information derived from the execution of each application in isolation, hence, without the need to actually run applications simultaneously. The model improves inaccuracy {{with respect to the}} existing model, and tends to over-estimate. The latter, is very important to prevent that, during late design stages, applications miss their deadline when consolidated into the same multicore, causing costly system redesign. This work has been supported by the Spanish Ministry of Science and Innovation grant TIN 2015 - 65316 -P. Jaume Abella has been partially supported by the MINECO under Ramon y Cajal postdoctoral fellowship number RYC- 2013 - 14717. Carles Hernández is jointly funded by the Spanish Ministry of Economy and Competitiveness and FEDER funds through grant TIN 2014 - 60404 -JIN. Peer ReviewedPostprint (author's final draft...|$|E
40|$|In {{the past}} decade, we {{observed}} {{the trend of}} technological advancement towards the field of portable electronics. As electronic devices shrink in size, constraints emerge {{in the form of}} limited power supply and area for the implementation of information security mechanisms. In this work, our goal is to produce a complete AES block cipher for data encryption and perform optimization in terms of power and size. Unlike the common approach of optimizing the circuitry of the expensive AES S-Box, this work contributes by proposing a compact key expansion mechanism to reduce hardware requirement and deducing the optimal number of S-Boxes to be used in an AES block cipher to achieve the desired performance. In addition, we optimized the design using a series of methodologies which include: (1) implementing the optimized AES S-Box proposed by Wong et al. [2], (2) reducing the number of pipeline registers, and (3) applying input <b>bus</b> <b>sharing.</b> As a result, we achieved three optimized configurations which employ different number of S-Boxes in their architectures. Our best architecture in terms of size and power consumption has a total logic element count of 1818, a total power dissipation of 122. 40 mW, and a throughput of 198. 77 Mbps. The design is implemented on a Cyclone II EP 2 C 20 F 484 C 7 field-programmable gate array (FPGA) ...|$|E
40|$|In this paper, {{the design}} and {{implementation}} of a single <b>shared</b> <b>bus,</b> <b>shared</b> memory multiprocessing system using Intel's single board computers is presented. The hardware configuration and the operating system developed to execute the parallel algorithms are discussed. The performance evaluation studies carried out on Image are outlined...|$|R
50|$|Intercity {{bus service}} is {{provided}} by the Selam <b>Bus</b> Line <b>Share</b> Company.|$|R
5000|$|... machimbombo {{the word}} for <b>bus</b> also <b>shared</b> with other {{lusophone}} African countries.|$|R
40|$|This {{innovation}} {{is used to}} connect between synapse and neuron arrays using nanowire in quantum dot and metal in CMOS (complementary metal oxide semiconductor) technology to enable the density of a brain-like connection in hardware. The hardware implementation combines three technologies: 1. Quantum dot and nanowire-based compact synaptic cell (50 x 50 sq nm) with inherently low parasitic capacitance (hence, low dynamic power approx. l 0 (exp - 11) watts/synapse), 2. Neuron and learning circuits implemented in 50 -nm CMOS technology, to be integrated with quantum dot and nanowire synapse, and 3. 3 D stacking approach to achieve the overall numbers of high density O(10 (exp 12)) synapses and O(10 (exp 8)) neurons in the overall system. In a 1 -sq cm of quantum dot layer sitting on a 50 -nm CMOS layer, innovators were able to pack a 10 (exp 6) -neuron and 10 (exp 10) -synapse array; however, the constraint for the connection scheme is that each neuron will receive a non-identical 10 (exp 4) -synapse set, including itself, via its efficacy of the connection. This is not a fully connected system where the 100 x 100 synapse array only has a 100 -input data bus and 100 -output data bus. Due to the data <b>bus</b> <b>sharing,</b> it poses a great challenge to have a complete connected system, and its constraint within the quantum dot and silicon wafer layer. For an effective connection scheme, there are three conditions to be met: 1. Local connection. 2. The nanowire should be connected locally, not globally from which it helps to maximize the data flow by sharing the same wire space location. 3. Each synapse can have an alternate summation line if needed (this option is doable based on the simple mask creation). The 10 (exp 3) x 10 (exp 3) -neuron array was partitioned into a 10 -block, 10 (exp 2) x 10 (exp 3) -neuron array. This building block can be completely mapped within itself (10, 000 synapses to a neuron) ...|$|E
50|$|Next, routers {{began to}} have {{multiple}} forwarding elements, that communicated through a high-speed <b>shared</b> <b>bus</b> or through a shared memory. Cisco used <b>shared</b> <b>busses</b> until they saturated, while Juniper preferred shared memory.|$|R
50|$|MSRTC <b>BUS</b> and <b>Shared</b> taxis to Nasik Road, jawhar, Mokhada, Rajur and Akole {{are also}} {{available}} from the. station.|$|R
30|$|The last {{stage of}} {{calibration}} process was to calibrate the public mode of transport. Two public modes of transport i.e. train and bus services were simulated. As the <b>bus</b> <b>shares</b> the right-of-way {{on the surface}} street network, its journey time can {{be affected by the}} congestion occurring in the network. The bus journey time is dependent on two parameters namely the average travelling speed of buses and the number of passengers waiting at bus stops.|$|R
50|$|The LM900 {{spacecraft}} is a three-axis stabilized {{bus that}} is designed to carry scientific payloads in LEOs. It provides precision pointing on an ultra stable highly agile platform. Payloads for a variety of scientific and remote sensing applications may be accommodated including laser sensors, imagers, radar sensors, electro-optical and astronomical sensors, as well as planetary sensors. The LM900 <b>bus</b> <b>shares</b> a hardware heritage with Iridium, which is the basis for the LM700 bus.|$|R
5000|$|Bocca {{meets with}} Kei in the illusionary <b>bus.</b> They <b>share</b> {{thoughts}} about their dreams, and Bocca reveals his feelings for Sayoko.|$|R
50|$|The <b>bus</b> <b>shared</b> its chassis {{and other}} {{characteristics}} with Alfa Romeo 140A. Construction was by Macchi. The bus used the Alfa Romeo 1610 diesel engine, it {{was placed in}} the front cabin and had a six -cylinder, bore and stroke were, respectively, 125 mm and 150 mm, which brought the total capacity to 11,050 cc. The power output was 163 hp at 2,000 rpm. It had manual gearbox, and the steering wheel was positioned on the right.|$|R
40|$|AbstractEnhancing the <b>bus</b> <b>share</b> rate {{is a major}} {{measure to}} relieve the traffic congestion. To analyze the effect of public transit policy, this paper {{establishes}} MNL models based on both SP data and combining SP and RP data, which was collected in Jinan city. Then the paper analyzes how the influencing factors affect the choice proportion of bus travel mode for the bus user groups. In the end, the paper obtains some significant conclusions and proposes measures which would enhance the bus attraction...|$|R
50|$|However, this {{approach}} can only work in computer architectures like SGI Challenge and SGI Onyx where a single memory <b>bus</b> is <b>shared</b> between all processors.|$|R
50|$|Intercity {{bus service}} is {{provided}} by the Selam <b>Bus</b> Line <b>Share</b> Company and Sky Bus Transport System, as well as independently-owned buses that depart from the town bus station.|$|R
50|$|In the 1970s, {{parts of}} two {{platforms}} were shortened {{to allow for}} Greyhound Lines to build an intercity <b>bus</b> terminal, <b>sharing</b> the terminal with Amtrak and creating an intermodal facility.|$|R
50|$|A <b>bus</b> <b>shares</b> many {{characteristics}} {{with light}} rail and trams, {{but does not}} run on rails. Trolleybuses are buses that are powered from overhead wires. Vehicles that can travel both on rails and on roads have been tried experimentally, but are not in common use. The term bus rapid transit is {{used to refer to}} various methods of providing faster bus services and the systems which use it have similar characteristics to light rail. Some cities experimenting with guided bus technologies, such as Nancy, have chosen to refer to them as 'trams on tyres' (rubber tyred trams) and given them tram-like appearances.|$|R
40|$|We {{focus on}} control systems in which sensors send data to {{actuators}} via a <b>bus</b> <b>shared</b> with other applications. An approach is proposed for specifying and implementing dynamic scheduling policies {{for the bus}} with performance guarantees. Specifically, we propose an automata-based scheduler which we automatically generate from {{a model of the}} controlled plant and the controller. We show that, in addition to ensuring performance, our approach allows adjustments to dynamic conditions such as varying disturbances and network load. We present a full development path from performance specifications (exponential stability) to a control design and its implementation using Controller Area Network (CAN) ...|$|R
40|$|Abstract — Network-on-Chip (NoC) designs {{attempt to}} solve the {{performance}} bottleneck of traditional <b>shared</b> <b>bus</b> designs. Current NoC solutions have drawbacks in area requirements or power consumption. A new architecture is presented to address these problems. Three models of the architecture are implemented in SystemC: a Globally Asynchronous Locally Synchronous (GALS) NoC model, a synchronous NoC model and a <b>shared</b> <b>bus</b> model. The performance of these three models are compared using Poisson distributed traffic with data-rates up to 4 Gbyte/s. Results show a strong case in favor of NoC design over the standard <b>shared</b> <b>bus</b> in large or high-bandwidth systems. For NoC systems, the performance break-even size (number of nodes) compared to a <b>shared</b> <b>bus</b> can be as low as 5 masters, while at a size of 15 nodes the NoC is already about 300 % faster than the <b>shared</b> <b>bus.</b> The GALS NoC shows a 24 - 27 % improvement in the delay time compared to the synchronous NoC. The additional design effort and the high bit-error sensitivity in the GALS case {{need to be addressed}} before the GALS NoC can be considered as candidate for future on-chip communication...|$|R
40|$|This {{dissertation}} {{studies the}} design of single <b>bus,</b> <b>shared</b> memory multiprocessors. The purpose of the studies is to find optimum points in the design space for different memory system components that include private caches, <b>shared</b> <b>bus</b> and main memory. Two different methodologies are used based on the operating environment of a multiprocessor. For a multiprocessor operating in the throughput-oriented environment, Customized Mean Value Analysis (CMVA) models are developed to evaluate {{the performance of the}} multiprocessor. The accuracy of the models are validated by comparing their results to those generated by actual trace-driven simulation over several thousand multiprocessor configurations. The comparison results show that the CMVA models can be as accurate as trace driven simulation in predicting the multiprocessor throughput and bus utilization. The validated models are then used to evaluate design choices that include cache size, cache block size, cache set-associativity, bus switch [...] ...|$|R
25|$|Dire Dawa {{is served}} by a station on the Addis Ababa–Djibouti Railway. The Dire Dawa Airport also offers flights {{to and from the}} city. Additionally, the Selam <b>Bus</b> Line <b>Share</b> Company {{provides}} inter-city bus service.|$|R
40|$|Abstract. We {{focus on}} {{spatially}} {{distributed control systems}} in which measure-ment and actuation data is sent via a <b>bus</b> <b>shared</b> with other applications. An ap-proach is proposed for specifying and implementing dynamic scheduling policies for the bus with performance guarantees. Specifically, we propose an automata-based scheduler which we automatically generate from {{a model of the}} controlled plant and the controller. We show that, in addition to ensuring performance, our approach allows adjustments to dynamic conditions such as varying disturbances and network load. We present a full development path from performance speci-fications (exponential stability) to a control design and its implementation using Controller Area Network (CAN). ...|$|R
50|$|D-Bus {{can also}} be used as a {{framework}} to integrate different components of a user application. For instance, an office suite can communicate through the session <b>bus</b> to <b>share</b> data between a word processor and a spreadsheet.|$|R
