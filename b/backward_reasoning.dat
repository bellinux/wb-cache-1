102|43|Public
25|$|The {{fact that}} Horn clauses {{can be given}} a {{procedural}} interpretation and, vice versa, that goal-reduction procedures {{can be understood as}} Horn clauses + <b>backward</b> <b>reasoning</b> means that logic programs combine declarative and procedural representations of knowledge. The inclusion of negation as failure means that logic programming is a kind of non-monotonic logic.|$|E
2500|$|In the simplified, propositional case {{in which}} a logic program and a {{top-level}} atomic goal contain no variables, <b>backward</b> <b>reasoning</b> determines an and-or tree, which constitutes the search space for solving the goal. The top-level goal is the root of the tree. Given any node in the tree and any clause whose head matches the node, there exists a set of child nodes corresponding to the sub-goals {{in the body of the}} clause. These child nodes are grouped together by an [...] "and". The alternative sets of children corresponding to alternative ways of solving the node are grouped together by an [...] "or".|$|E
2500|$|In game theory, perfect play is the {{behavior}} or strategy {{of a player}} {{that leads to the}} best possible outcome for that player regardless of the response by the opponent. [...] Based on the rules of a game, every possible final position can be evaluated (as a win, loss or draw). By <b>backward</b> <b>reasoning,</b> one can recursively evaluate a non-final position as identical to that of the position that is one move away and best valued for the player whose move it is. Thus a transition between positions can never result in a better evaluation for the moving player, and a perfect move in a position would be a transition between positions that are equally evaluated. As an example, a perfect player in a drawn position would always get a draw or win, never a loss. If there are multiple options with the same outcome, perfect play is sometimes considered the fastest method leading to a good result, or the slowest method leading to a bad result.|$|E
40|$|Abstract. Based on P-law <b>reasoning,</b> <b>backward</b> P-law <b>reasoning</b> and its {{structure}} are presented, Next, the relation and relation theorems between <b>backward</b> P-law <b>reasoning</b> and general reasoning are given. Using the theory results, {{the application of}} <b>backward</b> P-law <b>reasoning</b> in the information image camouflage-reduction is given...|$|R
30|$|This {{would result}} in nesting the <b>backward</b> {{chaining}} <b>reasoning</b> back to the logic block for Stage 1, followed by processing the logic blocks related to the stages down the hierarchy (Fig.Â  9).|$|R
40|$|Expert systems rules express {{relevant}} {{relations between}} their antecedents and their consequents. If {{the rules are}} manipulated by a logic (usually classical logic) {{in such a way}} that they give rise to new formulas with the form of rules (generated rules), these formulas may not express relevant relations between atecedents and consequents, and then become useless. We propose in this paper, a logic that partially avoids this problem, and in addition deals with both non-monotonicity and uncertainty, A description of the verification concept of consistency in forward and <b>backward</b> <b>reasonings</b> is given in terms of this logic. 1. Motivations and purpose of the paper Expert systems rules express relevant relations betwee...|$|R
2500|$|The efficient-market {{hypothesis}} {{emerged as}} a prominent theory in the mid-1960s. Paul Samuelson had begun to circulate Bachelier's work among economists. In 1964 Bachelier's dissertation along with the empirical studies mentioned above were published in an anthology edited by Paul Cootner. In 1965, Eugene Fama published his dissertation arguing for the random walk hypothesis. Also, Samuelson published a proof showing that if the market is efficient prices will show random-walk behavior. This is often cited {{in support of the}} efficient-market theory, by the method of affirming the consequent, however in that same paper, Samuelson warns against such <b>backward</b> <b>reasoning,</b> saying [...] "From a nonempirical base of axioms you never get empirical results." [...] In 1970, Fama published a review of both the theory and the evidence for the hypothesis. The paper extended and refined the theory, included the definitions for three forms of financial market efficiency: weak, semi-strong and strong (see below).|$|E
5000|$|However, the <b>backward</b> <b>reasoning</b> technique, {{implemented}} by SLD resolution, used {{to solve problems}} in logic programming languages such as Prolog, treats programs as goal-reduction procedures. Thus clauses of the form: ...|$|E
5000|$|With <b>backward</b> <b>reasoning,</b> an {{inference}} engine can determine whether Fritz is green in four steps. To start, the query is phrased {{as a goal}} assertion {{that is to be}} proved: [...] "Fritz is green".|$|E
40|$|Atocha Aliseda {{gives in}} Abductive Reasoning (2006) a {{structural}} {{characterization of the}} forward explanatory reasoning from a theory to observational data. This paper discusses the converse problem of giving structural rules for the <b>backward</b> abductive <b>reasoning</b> from observations to explanatory theories...|$|R
40|$|Auction mechanisms	have	attracted	a	great	deal	of	interest	and	have	been	used	in	diverse	e-marketplaces. In	particular,	 combinatorial	auctions	have	the	potential	to	play	an	important role in	electronic	transactions. Therefore,	 diverse	combinatorial	auction	market	types	have	been	proposed	to	satisfy	market	needs. These	combinatorial	auction	types	have	diverse market characteristics,	 which	require	an	effective	market	design	approach. This	study	proposes	a	comprehensive	and	systematic	market	design	methodology	for	combinatorial auctions based	on	three	phases:	 market	architecture	design,	 auction	rule	design,	 and	winner	determination	design. A	market	architecture	design	is	for	designing	market	architecture types by	<b>Backward</b>	Chain	<b>Reasoning.</b> Auction	rules	design	is	to	design	transaction	rules	for	auctions. The	specific	auction	process	type	is	identified	by	the	<b>Backward</b>	Chain	<b>Reasoning</b> process. Winner	determination	design	is	about	determining	the	decision	model	for	selecting	optimal	bids	and	auctioneers. Optimization	models	are	identified	by	Forward	Chain Reasoning. Also,	 we	propose	an	agent	based	combinatorial	auction	market	design	system	using	Backward	and	Forward	Chain	Reasoning. Then	we	illustrate	a	design	process	for	the general n-bilateral	combinatorial	auction	market. This	study	serves	as	a	guideline	for	practical	implementation	of	combinatorial	auction	markets	design...|$|R
25|$|Palacios-Huerta and Volij (2009) {{find that}} expert chess players play {{differently}} from college students. With a rising Elo, {{the probability of}} continuing the game declines; all Grandmasters in the experiment stopped at their first chance. They conclude that chess players are familiar with using <b>backward</b> induction <b>reasoning</b> and hence need less learning to reach the equilibrium. However, {{in an attempt to}} replicate these findings, Levitt, List, and Sadoff (2010) find strongly contradictory results, with zero of sixteen Grandmasters stopping the game at the first node.|$|R
50|$|Backward {{chaining}} (or <b>backward</b> <b>reasoning)</b> is an inference {{method that}} can be described colloquially as working backward from the goal(s). It is used in automated theorem provers, inference engines, proof assistants and other artificial intelligence applications.|$|E
50|$|An {{opportunistic}} {{reasoning system}} may combine {{elements of both}} forward and <b>backward</b> <b>reasoning.</b> It is useful {{when the number of}} possible inferences is very large and the reasoning system must be responsive to new data that may become known.|$|E
50|$|The {{fact that}} Horn clauses {{can be given}} a {{procedural}} interpretation and, vice versa, that goal-reduction procedures {{can be understood as}} Horn clauses + <b>backward</b> <b>reasoning</b> means that logic programs combine declarative and procedural representations of knowledge. The inclusion of negation as failure means that logic programming is a kind of non-monotonic logic.|$|E
40|$|Auction {{mechanisms}} {{have attracted}} {{a great deal}} of interest and have been used in diverse e-marketplaces. In particular, combinatorial auctions have the potential {{to play an important role}} in electronic transactions. Therefore, diverse combinatorial auction market types have been proposed to satisfy market needs. These combinatorial auction types have diverse market characteristics, which require an effective market design approach. This study proposes a comprehensive and systematic market design methodology for combinatorial auctions based on three phases: market architecture design, auction rule design, and winner determination design. A market architecture design is for designing market architecture types by <b>Backward</b> Chain <b>Reasoning.</b> Auction rules design is to design transaction rules for auctions. The specific auction process type is identified by the <b>Backward</b> Chain <b>Reasoning</b> process. Winner determination design is about determining the decision model for selecting optimal bids and auctioneers. Optimization models are identified by Forward Chain Reasoning. Also, we propose an agent based combinatorial auction market design system using Backward and Forward Chain Reasoning. Then we illustrate a design process for the general n-bilateral combinatorial auction market. This study serves as a guideline for practical implementation of combinatorial auction markets design. Combinatorial Auction, Market Design Methodology, Market Architecture Design, Auction Rule Design, Winner Determination Design, Agent-Based System...|$|R
40|$|Validation and {{diagnosis}} of relay operation {{is very important}} to protection engineers in fault analysis. This paper presents development of an expert system based automated analysis solution, which performs validation and {{diagnosis of}} digital protective relay operation in great detail by analyzing data contained in various relay reports and files. In the system, forward chaining reasoning is used to predict relay behavior while <b>backward</b> chaining <b>reasoning</b> is used to diagnose the reasons for inconsistency between expected and actual relay behavior. An example is given to demonstrate the capability of the prototype system. Index Termsâvalidation, diagnosis, relay operation, relay report, expert system I...|$|R
40|$|AbstractâModern digital {{protective}} relays generate various files and reports which contain abundant data regarding fault disturbances and protection system operation. This paper presents an expert system based application for automated analysis of digital relay data. In this application, forward chaining reasoning {{is used to}} predict expected protection operation while <b>backward</b> chaining <b>reasoning</b> is employed to validate and diagnosis of actual protection operation. An EMTP/C++ based digital relay model with capability of insertion of user-defined errors and generation of files and reports is developed. The analysis capability of this application is tested using the relay model. Index Termsârelay operation, relay files, data analysis, expert system, relay mode...|$|R
5000|$|Abductive logic {{programming}} is a computational framework that extends normal {{logic programming}} with abduction. It separates the theory [...] into two components, {{one of which}} is a normal logic program, used to generate [...] by means of <b>backward</b> <b>reasoning,</b> the other of which is a set of integrity constraints, used to filter the set of candidate explanations.|$|E
50|$|Many {{reasoning}} systems employ deductive reasoning to draw inferences from available knowledge. These inference engines support {{forward reasoning}} or <b>backward</b> <b>reasoning</b> to infer conclusions via modus ponens. The recursive reasoning methods they employ are termed âforward chainingâ and âbackward chainingâ, respectively. Although reasoning systems widely support deductive inference, some systems employ abductive, inductive, defeasible {{and other types}} of reasoning. Heuristics may also be employed to determine acceptable solutions to intractable problems.|$|E
50|$|In 1978 Elstein, Shulman and Sprafka applied {{cognitive}} science methods to investigate physiciansâ clinical competence, developing {{a model of}} hypothetico-deductive reasoning which proposed that physicians reason by generating and testing a set of hypotheses to explain clinical data. This {{is an example of}} backward (hypothesis-to-data) reasoning. In 1986, Patel and Groen demonstrated that experts who accurately diagnosed complex clinical problems used forward reasoning (data to hypothesis), in contrast to novice subjects who used <b>backward</b> <b>reasoning</b> and misdiagnosed or partially diagnosed the same problems.|$|E
40|$|AbstractâThis paper {{presents}} a practical expert {{system for the}} diagnosis of various faults which may occur in the distribution substations. The <b>backward</b> inexact <b>reasoning</b> process is applied for the fault section estimation using the knowledge of topology, the operation rules of protective devices, heuristic knowledge of well-trained operators, and instantaneous alarms. In this paper, the overall structure, detailed knowledge-base and the efficiency of general methodology based on topology will be discussed. The proposed system has been tested in a local control center in Korea {{as a part of}} an intelligent guidance system for the SCADA opera-tors. Index TermsâDistribution substations, expert system, fault di-agnosis, inexact reasoning, knowledge of topology. I...|$|R
40|$|We {{analyze the}} {{sequential}} structure of dynamic games with perfect information. A three-stage account is proposed, that species setup, reasoning and play stages. Accordingly, we define a player {{as a set}} of agents corresponding to these three stages. The notion of agent connectedness is introduced into a type-based epistemic model. Agent connectedness measures the extent to which agents' choices are sequentially stable. Thus describing dynamic games allows to more fully understand strategic interaction over time. In particular, we provide suffcient conditions for backward induction in terms of agent connectedness. Also, our framework makes explicit that the epistemic independence assumption involved in <b>backward</b> induction <b>reasoning</b> is stronger than usually presumed, and makes accessible multiple-self interpretations for dynamic games...|$|R
40|$|Abstract. WUENIC is a {{rule-based}} system implemented as a logic program, {{developed by}} WHO and UNICEF for estimating global, country by country, infant immunization coverage. It possesses {{many of the}} characteristics of rulebased legislation, facilitating decisions that are consistent, transparent and replicable. In this paper, we focus on knowledge representation and problemsolving issues, including the use of logical rules versus production rules, <b>backward</b> versus forward <b>reasoning,</b> and rules and exceptions versus argumentation...|$|R
5000|$|Here [...] is a meta-predicate and the {{variable}} [...] ranges over fluents. The predicates , [...] and [...] {{correspond to the}} predicates , , and [...] respectively. The left arrow [...] is half of the equivalence [...] The other half is implicit in {{the completion of the}} program, in which negation is interpreted as negation as failure. Induction axioms are also implicit, and are needed only to prove program properties. <b>Backward</b> <b>reasoning</b> as in SLD resolution, which is the usual mechanism used to execute logic programs, implements regression implicitly.|$|E
5000|$|In the simplified, propositional case {{in which}} a logic program and a {{top-level}} atomic goal contain no variables, <b>backward</b> <b>reasoning</b> determines an and-or tree, which constitutes the search space for solving the goal. The top-level goal is the root of the tree. Given any node in the tree and any clause whose head matches the node, there exists a set of child nodes corresponding to the sub-goals {{in the body of the}} clause. These child nodes are grouped together by an [...] "and". The alternative sets of children corresponding to alternative ways of solving the node are grouped together by an [...] "or".|$|E
50|$|In The Giant Horse of Oz, she is made {{a princess}} of the Ozure Isles as thanks for her help in {{restoring}} the Munchkin queen Orin to her royal husband and son. In this book, it is stated that Trot arrived in Oz and stopped aging at ten, {{the same age}} as Prince Philador of the Ozure Isles. Based on L. Frank Baum's statement that Trot is one year younger than Dorothy Gale and that Dorothy is one year younger than Betsy Bobbin, we get the other characters' ages through <b>backward</b> <b>reasoning,</b> but since this information is derived from two different authors, it is canon, but not necessarily true to Baum's intentions.|$|E
40|$|All popular {{techniques}} that handle uncertain reasoning in rule-based systems may, under certain circumstances, exhibit inconsistencies or discrepancy of defined semantics with intuitive meaning. The paper investigates a formal system that constitutes a common framework for uncertainty management, and analyses each sequential step in an automated, forward or <b>backward</b> chaining, <b>reasoning</b> process. For each step, existing uncertainty management methods are compared, potential inconsistency revealed, and the correct procedure proposed. Keywords - automated reasoning, expert systems, uncertainty management 1. INTRODUCTION Uncertainty {{is an important}} concept in knowledge based systems, particularly in their subsets such as deductive databases and expert systems. Uncertainty is crucial in automated reasoning systems, because it enables making the best decision in situations lacking adequate information such as process diagnosis and control. A number of theories have been devised to deal wit [...] ...|$|R
40|$|Architecture of the toolkit ESWin and hybrid expert systems, {{supported}} by one, {{are described in}} this report. The knowledge representation by rules, frames and linguistic variables is used in this architecture. The possibility of keeping and extraction of data from external databases, execute of external programs are provided. This architecture supports of forward and <b>backward</b> fuzzy inference, <b>reasoning</b> with past and future events and allows to connect inference engine to neural networks and development of hybrid distributed systems. KEY WORDS Knowledge systems development tools, expert system, hybrid intelligent systems, knowledge representation, knowledge processing...|$|R
40|$|The {{effects of}} food snacks {{consumed}} {{in the late afternoon}} on cognitive performance in college-aged men were investigated in two experiments. The effects of the snacks were tested in the same subjects after they either consumed or skipped lunch. In the first experiment, the calorie-rich snack was a confectionery product, while in the second experiment, the snack was fruit-flavored yogurt. In both experiments, performance on cognitive tasks following consumption of the calorie-rich snack was compared to performance following consumption of a very low calorie snack (lemon-lime flavored diet soda without caffeine). Four cognitive tasks were employed: digit span recall (forward and <b>backward),</b> arithmetic <b>reasoning,</b> reading, and attention. In both experiments, subjects recalled significantly more digits in the backward digit span test and responded significantly faster in the attention task when they had consumed the calorific snack than when they had consumed the diet soft drink. Additionally, in Experiment 2, subjects solved significantly more arithmetic problems and solved these problems in significantly less time after eating a fruit-flavored yogurt than after consuming the diet soft drink. Results of thes...|$|R
5000|$|In clausal logic, an SLD {{refutation}} {{demonstrates that}} the input set of clauses is unsatisfiable. In logic programming, however, an SLD refutation also has a computational interpretation. The top clause [...] {{can be interpreted as}} the denial of a conjunction of subgoals [...] The derivation of clause [...] from [...] is the derivation, by means of <b>backward</b> <b>reasoning,</b> of a new set of sub-goals using an input clause as a goal-reduction procedure. The unifying substitution [...] both passes input from the selected subgoal to the body of the procedure and simultaneously passes output from the head of the procedure to the remaining unselected subgoals. The empty clause is simply an empty set of subgoals, which signals that the initial conjunction of subgoals in the top clause has been solved.|$|E
50|$|In game theory, perfect play is the {{behavior}} or strategy {{of a player}} {{that leads to the}} best possible outcome for that player regardless of the response by the opponent. Based on the rules of a game, every possible final position can be evaluated (as a win, loss or draw). By <b>backward</b> <b>reasoning,</b> one can recursively evaluate a non-final position as identical to that of the position that is one move away and best valued for the player whose move it is. Thus a transition between positions can never result in a better evaluation for the moving player, and a perfect move in a position would be a transition between positions that are equally evaluated. As an example, a perfect player in a drawn position would always get a draw or win, never a loss. If there are multiple options with the same outcome, perfect play is sometimes considered the fastest method leading to a good result, or the slowest method leading to a bad result.|$|E
5000|$|The efficient-market {{hypothesis}} {{emerged as}} a prominent theory in the mid-1960s. Paul Samuelson had begun to circulate Bachelier's work among economists. In 1964 Bachelier's dissertation along with the empirical studies mentioned above were published in an anthology edited by Paul Cootner. In 1965, Eugene Fama published his dissertation arguing for the random walk hypothesis. Also, Samuelson published a proof showing that if the market is efficient prices will show random-walk behavior. This is often cited {{in support of the}} efficient-market theory, by the method of affirming the consequent, however in that same paper, Samuelson warns against such <b>backward</b> <b>reasoning,</b> saying [...] "From a nonempirical base of axioms you never get empirical results." [...] In 1970, Fama published a review of both the theory and the evidence for the hypothesis. The paper extended and refined the theory, included the definitions for three forms of financial market efficiency: weak, semi-strong and strong (see below).|$|E
40|$|Abstract. This paper {{presents}} a logical framework for modeling of complex dialogues between intelligent and autonomous agents. Our overall approach {{builds on the}} assumption that an agent is composed of a set of modules, each of them conveying the appropriate knowledge to carry out a certain dialogue type, such as deliberation, negotiation, persuasion, etc. Much attention has been paid in keeping our framework as operational as possible, in that the architecture of agents and their conversational protocol are thoroughly interrelated. Due to the proposed knowledge structure, set of application-independent rules (called dialogue policies) and the combination of <b>backward</b> and forward <b>reasoning,</b> the framework can generate automatic dialogues between agents. ...|$|R
40|$|Case-Based Reasoning, in short, is {{the process}} of solving new {{problems}} based on solutions of similar past problems, much like humans solve many problems. myCBR, an exten-sion of the ontology editor ProteÌgeÌ, provides such similarity-based retrieval functionality. Moreover, the user is supported in modelling appropriate similarity measures by forward and <b>backward</b> explanations. Case-Based <b>Reasoning</b> Case-Based Reasoning (CBR), according to (Aamodt & Plaza 1994), basically follows this pattern: One formulates a problem as a query case and the repository of already ex-perienced problem and solution pairs (the case base) will be ordered by similarity to the given query. The most similar cases are used to generate the solution for the posed prob...|$|R
40|$|Central {{nervous system}} has the main {{function}} to detect, analyze, and deliver information. The information {{collected by the}} sensory system is integrated in the brain, the signal is passed to the motor system, the autonomic pathways to control movement, visceral activity, and endocrine functions. The nervous system has immune function and support modulate neural activity. Neurological disease commonly found {{due to the lack}} of information and knowledge about the disease. So, this study made by using forward and <b>backward</b> chaining <b>reasoning</b> with healing therapies and the treatment. The system is made so that the patient can see, understand the type of central nervous diseases, their healing therapies and the treatment. This system provides multiple solutions for the prevention of disease according to the type of illness. The methodology for developing the system is using waterfall method. The application software used to create this application program is Dreamweaver MX, XAMPP, Adobe Photoshop, MySQL, Opera / Mozilla Firefox. The results of this research is in the form of an application program that can help user to determine the type of central nervous diseases, provide extensive information about central nervous diseases, the treatment and healing therapy...|$|R
