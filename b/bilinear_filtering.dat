36|55|Public
2500|$|The company's final {{graphics}} chips, the GD546x [...] "Laguna" [...] {{series of}} PCI/AGP 3D-accelerators, were novel {{in that they}} {{were one of the}} few video cards to use Rambus RDRAM. The patented use of tiled memory used by the GD546x chips is still used by nearly all graphics processors today. However, like many other 2D/3D chips at the time were gate limited by the process technology available at the time, the feature set of perspective-correct texture mapping, <b>bilinear</b> <b>filtering,</b> single-pass lighting, gouraud shading, and alpha blending, was incomplete compared to the next generation of 3D chips. The GD546x family was limited by CPU processing at the time, CPU's could not feed it enough triangles which was the real performance block. The raw processing power of the GD546x was nearly 2.5 million 25 pixel triangles per second, much faster than competitors.|$|E
5000|$|... 62.5MP/s (texturing, {{perspective}} correction, <b>bilinear</b> <b>filtering,</b> translucency, Z-buffering) ...|$|E
5000|$|... 31.25 megapixels/second (texturing, {{perspective}} correction, <b>bilinear</b> <b>filtering,</b> translucency, Z-buffering, mipmapping, fog) ...|$|E
30|$|H. 264 {{employs a}} 6 -tap FIR <b>filter</b> and a <b>bilinear</b> <b>filter</b> {{for the first}} and the second steps, {{respectively}} [1].|$|R
50|$|Super Puzzle Fighter II Turbo: HD Remix {{has updated}} high-definition graphics. Each {{of the four}} colours of the gems have been {{associated}} with an element and given a new animation. Backgrounds and characters have also been redrawn, while the character sprites have been run through a <b>bilinear</b> <b>filter.</b>|$|R
40|$|A novel double-sampling (DS) {{technique}} {{for use in}} sigma-delta modulators (Sigma Delta Ms) is presented. The proposed technique uses a digital <b>bilinear</b> <b>filter</b> in the feedback path of the modulator loop. The <b>bilinear</b> <b>filter</b> suppresses the quantisation noise folding (QNF) that results from the DS path mismatch. Unlike other solutions for the QNF, the digital implementation of this filter allows the sharing of the input sampling capacitor with the feedback sampling capacitor without any additional analogue gain stages. This way, the power consumption in the input signal buffer can be greatly reduced, because it benefits from the nullator effect at the input of the Sigma Delta M loop, and hence the current needed to drive the shared sampling capacitor is drastically reduced. Moreover, the proposed DS technique is also suitable for a single-ended circuit implementation of DS...|$|R
5000|$|... #Caption: A zoomed {{small portion}} of a bitmap, using nearest-neighbor {{filtering}} (left), <b>bilinear</b> <b>filtering</b> (center), and bicubic filtering (right).|$|E
50|$|<b>Bilinear</b> <b>{{filtering}}</b> is a texture filtering {{method used}} to smooth textures when displayed larger or smaller {{than they actually}} are.|$|E
50|$|In {{computer}} graphics, <b>bilinear</b> <b>filtering</b> {{is usually}} performed on a texture during texture mapping, or on a bitmap during resizing. In both cases, the source data (bitmap or texture) {{can be seen}} as a two-dimensional array of values , or several (usually three) of these in the case of full-color data. The data points used in <b>bilinear</b> <b>filtering</b> are the 2x2 points surrounding the location for which the color is to be interpolated.|$|E
40|$|Abstract—This paper {{presents}} a multi step-size monic normalization equation-error linear filter. We also extend {{the idea to}} nonlinear adaptive filter and derive a multi step-size monic normalization equation-error <b>bilinear</b> <b>filter</b> (MSS MNEEBF). The algorithms enjoy fast convergence behavior and can remove biased estimates associated with conventional equation-error adaptive filters. Simulation results validate the usefulness of our algorithms...|$|R
25|$|Only <b>bilinear</b> texture <b>filtering</b> is supported; mipmapped {{textures and}} {{anisotropic}} filtering are not supported.|$|R
30|$|Execute the E-step {{by using}} the <b>bilinear</b> Kalman <b>filter</b> and {{smoother}} in (9)-(10) and (15)-(16), respectively.|$|R
5000|$|Hardware features: Detailed {{texture mapping}} with {{perspective}} correction, anti-aliasing, Z-buffering, <b>bilinear</b> <b>filtering,</b> trilinear filtering, Gouraud shading, 8-bit alpha blending, {{level of detail}} management ...|$|E
50|$|Trilinear {{filtering}} is {{a remedy}} {{to a common}} artifact seen in mipmapped bilinearly filtered images: an abrupt and very noticeable change in quality at boundaries where the renderer switches from one mipmap level to the next. Trilinear filtering solves this by doing a texture lookup and <b>bilinear</b> <b>filtering</b> on the two closest mipmap levels (one higher and one lower quality), and then linearly interpolating the results. This results in a smooth degradation of texture quality as distance from the viewer increases, rather than a series of sudden drops. Of course, closer than Level 0 {{there is only one}} mipmap level available, and the algorithm reverts to <b>bilinear</b> <b>filtering.</b>|$|E
50|$|Once this is {{done the}} rest becomes easy: perform <b>bilinear</b> <b>filtering</b> on the two mipmaps with pixel sizes that are {{immediately}} larger and smaller than the calculated size of the pixel, and then interpolate between them as normal.|$|E
50|$|Trilinear {{filtering}} is {{an extension}} of the <b>bilinear</b> texture <b>filtering</b> method, which also performs linear interpolation between mipmaps.|$|R
40|$|Nowadays, image upsampling {{methods have}} become common as large display market is growing. We present a new {{horizontal}} direction upsampling method for high resolution display using <b>filter</b> and <b>bilinear</b> <b>filter.</b> Two parameters δ and λ determine which reconstructed {{results should be}} used as the final value. Simulation results show that the proposed method achieves better results than the traditional methods from both of visual quality and objective performance...|$|R
40|$|This paper {{presents}} the optimal nonlinear <b>filter</b> for <b>bilinear</b> state and linear observation equations confused with white Gaussian disturbances. The general scheme for obtaining the optimal filter {{in case of}} polynomial state and linear observation equations is announced. The obtained <b>bilinear</b> <b>filter</b> is applied to solution of the identification problem for the bilinear terpolymerization process and compared to the optimal linear filter available for the linearized model and to the mixed filter designed as a combination of those filters. ...|$|R
5000|$|NV3's <b>bilinear</b> <b>filtering</b> was {{actually}} [...] "sharper" [...] {{than that of}} 3Dfx Voodoo Graphics. But, while it didn't blur textures as much as Voodoo, it did instead add some light noise to textures, because of a lower-fidelity filtering algorithm. There were also problems with noticeable seams between polygons.|$|E
50|$|<b>Bilinear</b> <b>filtering</b> is {{the next}} step up. In this method the four nearest texels to the pixel center are sampled (at the closest mipmap level), and their colors are {{combined}} by weighted average according to distance. This removes the 'blockiness' seen during magnification, as there is now a smooth gradient of color change from one texel to the next, instead of an abrupt jump as the pixel center crosses the texel boundary. <b>Bilinear</b> <b>filtering</b> for magnification filtering is common. When used for minification it is often used with mipmapping for minification; though it can be used without, it would suffer the same aliasing and shimmering problems as nearest-neighbor filtering when minified too much however for modest minification ratios it can be used as an inexpensive hardware accelerated weighted texture supersample.|$|E
50|$|The Ticket to Ride (Imagine-3) {{supported}} WRAM {{and both}} the AGP and PCI buses, had a 3D floating point setup engine, <b>bilinear</b> <b>filtering</b> and perspective correction, Gouraud shading, alpha blending, interpolated fogging, specular lighting, double and triple display buffering, 16-, 24- and 32-bit Z-buffering, MPEG-1 and MPEG-2, and hardware MIP mapping.|$|E
30|$|Also, {{note that}} the <b>bilinear</b> Kalman <b>filter</b> {{algorithm}} is a generalization of the Kalman filter for the linear case which is given in [17].|$|R
30|$|Before {{starting}} with sub-pixel prediction, the frames must be up-sampled to half-pixel accuracy {{by means of}} a 6 -tap filter, and then they are up-sampled to quarter-pixel accuracy {{by means of a}} <b>bilinear</b> <b>filter.</b> The up-sampling is carried out on the GPU because the frames are transferred to the GPU memory with full-pixel accuracy. It is faster to generate the frames with quarter-pixel accuracy than to transfer them. Three GPU kernels are needed since there are dependencies in the up-sampling process.|$|R
40|$|Adaptive {{and image}} guided {{radiation}} therapy aims to adapt radiotherapy treatment delivery to tumour and patient motion. To achieve this {{it is necessary}} to predict trajectory evolution for a time horizon long enough to facilitate the required changes in radiation delivery. This paper presents a new comparative study between different approaches, namely interactive multiple models (IMM), Kalman filter (KF) assuming constant velocity (CV) and constant acceleration (CA) and adaptive <b>bilinear</b> <b>filter</b> (ABF) models and two structures of neural network (NN...|$|R
50|$|The Trio64V2 {{improved}} on the 64V+ {{by including}} vertical <b>bilinear</b> <b>filtering.</b> The 2D graphics core was later {{used in the}} ViRGE/DX and ViRGE/GX. Like the corresponding ViRGE chips, the 64V2 also came in /DX and /GX variants, with the latter supporting more modern SDRAM or SGRAM. The final version, called the Trio3D, was effectively the 128-bit successor to the ViRGE/GX2.|$|E
50|$|<b>Bilinear</b> <b>filtering</b> {{has several}} {{weaknesses}} {{that make it}} an unattractive choice in many cases: using it on a full-detail texture when scaling to a very small size causes accuracy problems from missed texels, and compensating for this by using multiple mipmaps throughout the polygon leads to abrupt changes in blurriness, which is most pronounced in polygons that are steeply angled relative to the camera.|$|E
50|$|Matrox Simple Interface (in short MSI) is {{the name}} of a {{proprietary}} DOS and Windows 95 application programming interface for Matrox Mystique graphics cards made by Matrox. MSI API supported a maximum of 640x480x16 resolution with z-buffer and no <b>bilinear</b> <b>filtering.</b> It used color look up tables to save memory. When Matrox released the Matrox m3D (using the PowerVR PCX2 chipset), MSI was completely abandoned.|$|E
40|$|Although the volterra filter {{is known}} to be an {{efficient}} adaptive filter in a large variety application for the non-linear system, but its computational complexity is also very high, especially as the orders of the filter increase. To overcome the computational complexity of the Volterra filter, a novel adaptive <b>filter</b> using layered <b>bilinear</b> architecture is proposed in this paper. Compared with the conventional second-order Volterra <b>filter</b> and Direct <b>Bilinear</b> adaptive <b>filter,</b> the layered <b>bilinear</b> adaptive <b>filter</b> exhibits a slightly better convergence performance in terms of convergence speed and steady-state error...|$|R
40|$|Abstract. It {{is shown}} that {{nonlinear}} Volterra, polynomial autoregressive, and <b>bilinear</b> <b>filters</b> {{have the same}} layered implementation procedure. Using the layered structure, the order of nonlinearity can be increased by adding more layers to the structure. The structure is modular and consists of the simple moving average (MA) or autoregressive (AR) filters which {{can be added to}} the structure to achieve a desired degree of complexity. In addition, the modular layered structures admit very large scale integration (VLSI) implementation of the polynomial nonlinear filters. Key words: polynomial filters, layered structures. 1...|$|R
40|$|This paper {{presents}} a quality enhancement method to efficiently enhance {{the resolution of}} the scalable view window on touchable displays. Based on an optimized image interpolation algorithm, the image quality on the display systems can be enhanced. The image interpolation algorithm combines a 6 -tap interpolation <b>filter</b> and a <b>bilinear</b> <b>filter</b> which can be effectively and efficiently optimized to reduce computational complexity. In addition, the cost-effective hardware architecture of the algorithm is also designed and implemented on an FPGA platform with a touchable display. The experimental results demonstrate the feasibility of the proposed method...|$|R
50|$|The texture {{filtering}} {{capabilities of}} R200 are also improved over its predecessor. For anisotropic filtering, Radeon 8500 uses a technique {{similar to that}} used in R100, but improved with trilinear filtering and some other refinements. However, it is still highly angle-dependent and the driver sometimes forces <b>bilinear</b> <b>filtering</b> for speed. NVIDIA's GeForce 4 Ti series offered a more accurate anisotropic implementation, but with a greater performance impact.|$|E
50|$|<b>Bilinear</b> <b>filtering</b> {{is rather}} {{accurate}} until the scaling of the texture gets below half or above double the original {{size of the}} texture - that is, if the texture was 256 pixels in each direction, scaling it to below 128 or above 512 pixels can make the texture look bad, because of missing pixels or too much smoothness. Often, in gaming or other 3-D rendering applications, mipmapping is used to provide a scaled-down version of the texture for better performance; however, the transition between two differently-sized mipmaps on a texture in perspective using <b>bilinear</b> <b>filtering</b> can be very abrupt. Trilinear filtering, though somewhat more complex, can make this transition smooth throughout. In the world of 2-D image resizing, bicubic interpolation is usually preferred for the illusion of sharpness that it creates and for its superior anti-aliasing properties; however, most bicubics achieve this {{through a combination of}} blurring and ringing artifacts. A Hermite filter, which is the only cubic that adds neither blurring nor ringing, does not anti-alias any better than linear interpolation does, but it is still somewhat sharper.|$|E
50|$|In texture mapping, it is {{also known}} as <b>{{bilinear}}</b> <b>filtering</b> or bilinear texture mapping, and {{it can be used to}} produce a reasonably realistic image. An algorithm is used to map a screen pixel location to a corresponding point on the texture map. A weighted average of the attributes (color, alpha, etc.) of the four surrounding texels is computed and applied to the screen pixel. This process is repeated for each pixel forming the object being textured.|$|E
5000|$|Support for <b>bilinear,</b> trilinear, {{anisotropic}} <b>filtering,</b> Alpha to Coverage, hardware Tessellation and Predicated Tiling.|$|R
50|$|For the {{interpolation}} of fractional luma sample positions HEVC uses separable {{application of}} one-dimensional half-sample interpolation with an 8-tap filter or quarter-sample interpolation with a 7-tap filter while, in comparison, H.264/MPEG-4 AVC uses a two-stage process that first derives values at half-sample positions using separable one-dimensional 6-tap interpolation followed by integer rounding and then applies linear interpolation between values at nearby half-sample positions to generate values at quarter-sample positions. HEVC has improved precision {{due to the}} longer interpolation filter {{and the elimination of}} the intermediate rounding error. For 4:2:0 video, the chroma samples are interpolated with separable one-dimensional 4-tap filtering to generate eighth-sample precision, while in comparison H.264/MPEG-4 AVC uses only a 2-tap <b>bilinear</b> <b>filter</b> (also with eighth-sample precision).|$|R
40|$|Abstract: Adaptive {{and image}} guided {{radiation}} therapy aims to adapt radiotherapy treatment delivery to tumour and patient motion. To achieve this {{it is necessary}} to predict trajectory evolution for a time horizon long enough to facilitate the required changes in radiation delivery. This paper presents a new comparative study between different approaches, namely interactive multiple models (IMM), Kalman filter (KF) assuming constant velocity (CV) and constant acceleration (CA) and adaptive <b>bilinear</b> <b>filter</b> (ABF) models and two structures of neural network (NN); a time series prediction (TSP) multi-layer perceptron (MLP) and generalised regression neural network (GRNN), with four different training algorithms. As opposed to existing studies, all algorithms are compared using the same data and new criteria is introduced to demonstrate potential issues with the various algorithms...|$|R
