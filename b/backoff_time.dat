139|23|Public
5000|$|For example, the {{expected}} <b>backoff</b> <b>time</b> {{for the third}} (c = 3) collision, one could first calculate the maximum <b>backoff</b> <b>time,</b> N:and then calculate {{the mean of the}} <b>backoff</b> <b>time</b> possibilities: ...|$|E
5000|$|Given {{a uniform}} {{distribution}} of backoff times, the expected <b>backoff</b> <b>time</b> is {{the mean of}} the possibilities. That is, after c collisions, the number of backoff slots is in 1, ..., N, where N = 2c − 1 and the expected <b>backoff</b> <b>time</b> (in slots) is ...|$|E
5000|$|If {{receiving}} node {{is chosen}} as MPR node by transmitter, it sets up shortest <b>backoff</b> <b>time</b> (waiting time before rebroadcasting).|$|E
30|$|At this point, these {{expressions}} {{can be used}} {{to calculate}} extended <b>backoff</b> <b>times</b> Bofec,d,k(z) and Bzofec,d,k(z), as defined in [3].|$|R
3000|$|... {{the maximum}} {{transmission}} time which includes propagation delay, packet duration, maximum <b>backoff,</b> and <b>time</b> {{to receive an}} acknowledge (if an ARQ technique is used). It is worth mentioning that [...]...|$|R
40|$|Abstract. In many {{parallel}} processing applications, task times have relatively little variability. Accordingly, many nodes will complete a task at {{approximately the same}} time. If the application is run on an Ethernet, the near-simultaneity of the task completion times implies that when the tasks attempt to communicate with some central task manager, they will bump into each other. This in turn can cause a major slowdown in communication, as the Ethernet hardware generates unnecessarily long <b>backoff</b> <b>times.</b> The work here will analyze {{a solution to this}} problem. Key words and phrases: Ethernet collisions; task times; programmed backoff. ...|$|R
5000|$|If {{receiving}} node is {{not chosen}} as MPR node by transmitter, it sets up <b>backoff</b> <b>time</b> depend on its mobility behaviour (distance from a transmitter, speed and vector of motion).|$|E
50|$|An {{advantage}} of VRR Broadcasting {{approach is that}} all receiving nodes have some opportunity to rebroadcast information (not only MPR nodes), {{but only a few}} nodes have the best opportunity (i.e. the shortest <b>backoff</b> <b>time)</b> for rebroadcasting. Another advantage is {{that in the case of}} the multipoint relay node not always receiving the broadcast due to collisions (in a dense busy network) then other nodes who overhear can transmit the information instead.|$|E
5000|$|If A has {{multiple}} data fragments to send, the only instant when node D successfully can initiate a data transfer is during small gaps in between that node A has completed data transfer and completion of node B next CTS (for node A next data transfer request). However, {{due to the}} node D <b>backoff</b> <b>time</b> period the probability to capture the medium during this small time interval is not high. To increase the per-node fairness, MACAW introduces a new control message called [...] "Request for Request to Send" [...] (RRTS).|$|E
30|$|Traditional <b>backoff</b> takes <b>time</b> for (Contention Window) CW to {{correctly}} {{adapt to the}} right value when the active population (of nodes) is large(here, traditional backoff procedure means CSMA/CA scheme with binary exponential backoff (BEB), unless and otherwise specified).|$|R
40|$|In many {{parallel}} processing applications, several nodes will complete a task at {{approximately the same}} time. If the application is run on an Ethernet, the near-simultaneity of the task completion times implies that when the tasks attempt to communicate with some central task manager, they will bump into each other. This in turn can cause a major slowdown in communication, as the Ethernet hardware generates unnecessarily long <b>backoff</b> <b>times.</b> A solution to this problem, called programmed backoff, has been proposed earlier and shown to work well on Ethernets which are dedicated to the particular application. In the present work, the effectiveness of programmed backoff is investigated in settings in which many unrelated applications are sharing the Ethernet...|$|R
40|$|AbstractThe IEEE 802. 11 MAC {{protocol}} now prevailing in wireless LANs {{is vulnerable}} to selfish backoff attacks consisting in selection of short <b>backoff</b> <b>times</b> in the constituent CSMA/CA procedure. Administrative prevention of such attacks fails in ad hoc configurations, where stations' behavior cannot be mandated. In this paper we take an incentive-oriented game-theoretic approach whereby stations are allowed to maximize their payoffs (achieved success rates). Using a fairly accurate performance model we show that a noncooperative CSMA/CA game then arises with a payoff structure characteristic of a Prisoners' Dilemma. For a repeated CSMA/CA game, a novel SPELL strategy is proposed and shown to yield to simple algorithmic design. Assuming that the stations are rational players and wish to maximize a mean-value-type long-term utility, SPELL is further shown to deter a single attacker by providing a disincentive to deviate from SPELL...|$|R
5000|$|The RREQ {{frames are}} {{broadcast}} by the VRR Broadcasting algorithm. If a node doesn't have a route to destination then the node rebroadcasts {{depend on the}} algorithm. If a node has a route to destination, it creates broadcast frame RREP and set up <b>backoff</b> <b>time</b> depend on mobility behaviour (distance from a transmitter, speed and vector of motion). If a RREP is transmitted by a transmitter, all neighbour's nodes received also the RREP and they discards own RREQ or RREP effort except node which is on a way to a source node.Principle of VRR Route Discovery handshake (without MPRs) (animation) ...|$|E
30|$|When {{transmitting}} data using DCW, it {{is called}} upon to obtain the Backoff value regardless of {{the success or failure}} (data retransmission required) of data transmission. After each aSlotTime, the <b>Backoff</b> <b>Time</b> reduces an aSlotTime, and if the medium is busy during an aSlotTime, the reduction of an aSlotTime from <b>Backoff</b> <b>Time</b> is stopped until the medium is once again idle. When the medium becomes idle, it must wait for a DIFS time before continuing the countdown of the <b>Backoff</b> <b>Time.</b> The countdown goes on until the <b>Backoff</b> <b>Time</b> reaches 0, after which data transmission begins.|$|E
40|$|In this paper, {{we propose}} an {{adaptive}} fuzzy control traffic shaping {{scheme based on}} leaky bucket in order to solve the traffic congestion problem over wireless networks. It is found that backpressure algorithm is suitable for low traffic and, it prevents buffer overflows. When buffer exceeds the upper threshold, the source receives a backpressure signal and, it pauses sending frames until it receives a signal from the same server. In <b>backoff</b> <b>time</b> using leaky bucket over traffic shaping mechanism, it is suitable for high traffic, <b>Backoff</b> <b>time</b> computations are widely used {{in order to avoid}} the impact on the network performance whenever the increment of the offered load arises. The fluctuation of offered load will cause the congestion at waiting room. We propose a fuzzy control backpressure and <b>backoff</b> <b>time</b> in traffic shaping that aims at detecting violations in parameter negotiation. We evaluate and compare the performance of fuzzy backpressure and <b>backoff</b> <b>time</b> in traffic shaping schemes. The studied approaches are fuzzy backpressure and exponential <b>backoff</b> <b>time</b> (FBE), backpressure in leaky bucket (BP), and exponential <b>backoff</b> <b>time</b> (EB). The performance of fuzzy control backpressure and <b>backoff</b> <b>time</b> has been investigated through fluctuations in telecommunication traffic streams (burst/silent type). Simulation results show that on wireless frames, the fuzzy logic control scheme helps to improve the performance in traffic shaping schemes much better than conventional backpressure algorithm and exponential <b>backoff</b> <b>time.</b> This has been verified by testing various types of burst/silence traffic...|$|E
40|$|We {{study the}} {{performance}} of Machine-to-Machine (M 2 M) communications in Long Term Evolution Advanced (LTE-A) networks. The proposed analysis {{is applied to the}} random access procedure within LTE-A for the calculation of the average overall delay, by considering multiple classes of M 2 M devices with diverse Quality-of-Service (QoS) requirements. The QoS differentiation is expressed through different Access Class Barring (ACB) parameters and <b>backoff</b> <b>times</b> for the various QoS classes. For the packet arrival process of M 2 M devices we consider an ON-OFF arrival process, which is a realistic approach, especially for M 2 M communications in Smart Grid environments. Furthermore, the proposed analysis is suitable for smart grid communication networks, where multiple M 2 M gateways are installed in different points of the network. The comparison of analytical results with simulations reveals the high accuracy of the proposed analysis...|$|R
40|$|In {{this paper}} we study the {{behaviour}} of the TCP retransmission code in BSD Unix in presence of large losses, and propose {{changes to the}} code, including an adaptive computation of retransmission timeouts, to improve the performance without increasing the congestion on the network. In particular, we point out three features of the TCP retransmission code which {{have a negative impact}} on the performance over lossy networks. First, there exist a poorly chosen upper bound on the number of retransmissions, which we show can cause any connection to fail provided it is sufficiently long. Second, retransmission timeouts are almost completely independent of the actual features of the network, and the values used are only suited to very slow networks. We advocate the use of a more adaptive choice of timeouts, and propose the use of bandwidth estimators in the computation of <b>backoff</b> <b>times.</b> Third, a subtle mistake in computing smoothed averages causes large errors in the case of small numbers (very [...] ...|$|R
30|$|The RAR message {{includes}} {{the identity of}} the detected preamble (random access preamble identifier), uplink channel synchronization information, resource allocation information for the subsequent L 2 /L 3 message transmission, backoff indicator, and the temporary C-RNTI [19]. The backoff indicator is uniformly selected over a period by eNB and is used to instruct UEs to <b>backoff</b> certain <b>time</b> before starting the next random access.|$|R
40|$|When {{congestion}} {{occurs in}} VDSL networks, it will drop incoming frames because the buffer fills up frames until it overflows. In backpressure algo-rithm suitable for low traffic [1], it prevents buffer overflows. In <b>backoff</b> <b>time</b> in leaky bucket over traf-fic policing mechanism suitable for high traffic [2], <b>Backoff</b> <b>time</b> computations are wildly used {{in order to}} avoid the impact on the network performance. In this paper, we propose a fuzzy control double-leaky bucket using backpressure and <b>backoff</b> <b>time</b> de-tects violations in parameter negotiation. We eval-uate and compare the performance of a fuzzy con-trol backpressure and <b>backoff</b> <b>time</b> in double-leaky bucket as a policing mechanism (FBBD), a leaky bucket (LB), a jumping window (JW), a triggered jumping window (TJW) and a double-leaky bucket (DLB). The performance of fuzzy control backpres-sure and <b>backoff</b> <b>time</b> in double-leaky bucket was investigated through fluctuations in telecommunica-tions traffic streams (burst/silent type). Simulation results show that in VDSL frames, the fuzzy logic control system helps improve the performance of our fuzzy control double-leaky bucket using backpressure and <b>backoff</b> <b>time</b> schemes as a policing mechanism much better than conventional policing mechanism by about 25 % in terms of conforming and non-conforming frames once various types of burst/silence traffic are generated...|$|E
30|$|Thus, {{apart from}} traffic {{controlling}} for per-station fairness, which {{is done on}} the IP layer, the <b>backoff</b> <b>time</b> of the wireless access point should also be shorter {{than those of the}} wireless clients in order to increase the transmission opportunities for downlink traffic. As described in the background section, CW is a parameter used to control the <b>backoff</b> <b>time.</b> Therefore, to overcome the domination of uplink, we adopt the idea from [23] which minimizes the <b>backoff</b> <b>time</b> by decreasing the minimum value of contention window (CWmin) parameter in the MAC layer of the access point.|$|E
30|$|The second mechanism, {{adaptive}} pacing, is {{used for}} regulating the data flow in a more balanced and fair way. Adaptive pacing adds an extra interval to the <b>backoff</b> <b>time,</b> which {{is equal to the}} transmission time of the previous data packet. Addition of this extra interval to the <b>backoff</b> <b>time</b> causes a slowdown in the data flow rate and, as a result, poor utilization of the network resources.|$|E
40|$|Abstract—This paper proposes an {{approximate}} method, equiv-alent access intensity (EAI), for the throughput analysis of CSMA wireless networks in which links have finite offered-load and their MAC-layer transmit buffers may be empty {{from time to}} time. Different from prior works that mainly considered the saturated network, we take into account in our analysis the impacts of empty transmit buffers on the interactions and dependencies among links in the network that {{is more common in}} practice. It is known that the empty transmit buffer incurs extra waiting time for a link to compete for the channel airtime usage, since when it has no packet waiting for transmission, the link will not perform channel competition. The basic idea behind EAI is that this extra waiting time can be mapped to an equivalent “longer ” <b>backoff</b> countdown <b>time</b> for the unsaturated link, yielding a lower link access intensity that is defined as the mean packet transmission time divided by the mean <b>backoff</b> countdown <b>time.</b> That is, we can compute the “equivalent access intensity ” of an unsaturated link to incorporate the effects of the empty transmit buffer on its behavior of channel competition. Then, prior saturated ideal CSMA network (ICN) model can be adopted for link throughput computation. Specifically, we propose an iterative algorithm, “Compute-and-Compare”, to identify which links are unsaturated under current offered-load and protocol settings, compute their “equivalent access intensities ” and calculate link throughputs. Simulation shows that our algorithm has high accuracy under various offered-load and protocol settings. We believe the ability to identify unsaturated links and compute links throughputs as established in this paper will serve an important first step toward the design and optimization of general CSMA wireless networks with offered-load control...|$|R
40|$|Abstract—This work {{started out}} with our {{discovery}} of a pattern of throughput distributions among links in IEEE 802. 11 networks from experimental results. This pattern gives rise to an easy computation method, which we term back-of-the-envelop (BoE) computation. For many network configurations, very accurate results {{can be obtained by}} BoE within minutes, if not seconds, by simple hand computation. This allows us to make shortcuts in performance evaluation, bypassing complicated stochastic analysis. To explain BoE, we construct a theory based on the model of an “ideal CSMA network ” (ICN). The BoE computation method emerges from ICN when we take the limit c! 0, where c is the ratio of the mean <b>backoff</b> countdown <b>time</b> to the mean transmission time in the CSMA protocol. Importantly, we derive a new mathematical result: the link throughputs of ICN are insensitive to the distributions of the <b>backoff</b> countdown <b>time</b> and transmission time (packet duration) given the ratio of their means c. This insensitivity result explains why BoE works so well for practical 802. 11 networks, in which the backoff countdown process is one that has memory, and in which the packet size can be arbitrarily distributed. Our results indicate that BoE is a good approximation technique for modest-size networks such as those typically seen in 802. 11 deployments. Beyond explaining BoE, the theoretical framework of ICN is also a foundation for fundamental understanding of very-large-scale CSMA networks. In particular, ICN is similar to the Ising model in statistical physics used to explain phenomena arising out of the interactions {{of a large number of}} entities. Many new research directions arise out of the ICN model. Index Terms—Access schemes, algorithm/protocol design and analysis, protocols and wireless. Ç...|$|R
40|$|This paper proposes an {{approximate}} method, equivalent access intensity (EAI), for the throughput analysis of CSMA wireless networks in which links have finite offered-load and their MAC-layer transmit buffers may be empty {{from time to}} time. Different from prior works that mainly considered the saturated network, we take into account in our analysis the impacts of empty transmit buffers on the interactions and dependencies among links in the network that {{is more common in}} practice. It is known that the empty transmit buffer incurs extra waiting time for a link to compete for the channel airtime usage, since when it has no packet waiting for transmission, the link will not perform channel competition. The basic idea behind EAI is that this extra waiting time can be mapped to an equivalent "longer" <b>backoff</b> countdown <b>time</b> for the unsaturated link, yielding a lower link access intensity that is defined as the mean packet transmission time divided by the mean <b>backoff</b> countdown <b>time.</b> That is, we can compute the "equivalent access intensity" of an unsaturated link to incorporate the effects of the empty transmit buffer on its behavior of channel competition. Then, prior saturated ideal CSMA network (ICN) model can be adopted for link throughput computation. Specifically, we propose an iterative algorithm, "Compute-and-Compare", to identify which links are unsaturated under current offered-load and protocol settings, compute their "equivalent access intensities" and calculate link throughputs. Simulation shows that our algorithm has high accuracy under various offered-load and protocol settings. We believe the ability to identify unsaturated links and compute links throughputs as established in this paper will serve an important first step toward the design and optimization of general CSMA wireless networks with offered-load control. Comment: 6 pages. arXiv admin note: text overlap with arXiv: 1007. 5255 by other author...|$|R
30|$|After {{sensing the}} channel as idle for a DIFS period, the {{wireless}} station begins {{to decrease the}} <b>backoff</b> <b>time</b> counter. Before the counter reaches zero, if the channel is sensed as busy, the wireless station pauses the counter, and it reactivates the counting down only when the channel is sensed as idle for a DIFS period. When the <b>backoff</b> <b>time</b> counter reaches zero, the wireless station transmits the packet.|$|E
3000|$|... } {{denotes the}} <b>backoff</b> <b>time</b> of a node, that is uniformly {{distributed}} in the range [0, 1], similar as in [15, 17, 20, 21]. Although the <b>backoff</b> <b>time</b> is usually not uniformly distributed between [0, 1] in the actual protocol (binary exponential backoff, for example), it is proved in [28] that assuming a uniform distribution for the time marks {{does not affect the}} generality of the model. The power emitted from x [...]...|$|E
3000|$|Specifically, in the {{approximated}} WLAN p-persistent MAC protocol, {{the random}} <b>backoff</b> <b>time</b> is drawn {{according to a}} geometric distribution with parameters s [...]...|$|E
40|$|This paper studies {{behavior}} of {{players in a}} common exclusively-shared channel using a backoff protocol for resolving collisions. We show that when players have freedom to choose <b>backoff</b> parameters (or <b>time</b> to send a next packet), they behave selfishly. The system has an undesirable Nash equilibrium, where every player tries to grasp as much channel as possible. Since the channel is exclusively shared, no player would get a packet through (all packets will collide). Although the result is seemingly obvious, {{we were unable to}} find it in the literature. We also evaluate a simple incentive mechanism based on an arbiter model, which controls channel access by jamming misbehaving players...|$|R
40|$|International audienceCommunication {{protocols}} {{are often}} investigated using simulation. This paper presents a performance {{study of the}} distributed coordination function of 802. 11 networks. Firstly, our study illustrates the different classes of Petri Nets used for modeling network protocols and their robustness in modeling based on formal methods. Next we propose a detailed 802. 11 b model based on Object-oriented Petri Nets that precises <b>backoff</b> procedure and <b>time</b> synchronization. Then, performance analyses are evaluated by simulation for a dense wireless network and compared with other measurements approaches. Our main goal is to propose a modular model that will enable to evaluate the impact of network performances on the performances of distributed discrete event systems...|$|R
40|$|Abstract — This paper {{presents}} a simple method for computing throughputs of links in a CSMA network. We call our method back-of-the-envelop (BoE) computation, because for many network configurations, very accurate {{results can be}} obtained by simple hand computation. BoE beats prior methods in terms of both speed and accuracy. To explain BoE, we construct a theory based on the model of an “ideal CSMA network ” (ICN). We find that link throughputs are insensitive to the distributions of the <b>backoff</b> countdown <b>time</b> and transmission time in ICN given the ratio of their mean c. The BoE computation method emerges from ICN in the limit 0 →c. The insensitivity result explains why BoE works so well for IEEE 802. 11 networks, in which the backoff countdown process is one that has memory and the transmission time can be arbitrarily distributed. Furthermore, c {{does not have to be}} very small for BoE to be highly accurate. BoE allows us to make shortcuts in performance evaluation, bypassing complicated stochastic analysis. An immediate application of BoE is for quick identification of starved links in the network so that remedies can be devised to solve the problem. Index Terms—CSMA, 802. 11, Wi-Fi, multiple access. I...|$|R
3000|$|... [...]) set the <b>Backoff</b> <b>time</b> to [...] " 0 " [...] and are {{not within}} {{transmission}} range of each other (Hidden Terminal problem), [...]...|$|E
3000|$|...] is {{the average}} <b>backoff</b> <b>time</b> in {{contention}} stage i, 0 ≤ i ≤ R. R is the maximum allowed retransmission stage. E[b [...]...|$|E
3000|$|Now let us try to {{estimate}} the average backoff window size at a saturation condition. Since the <b>backoff</b> <b>time</b> is uniformly distributed over [...]...|$|E
40|$|AbstractThe MAC layer misbehavior of the IEEE 802. 11 {{standard}} {{can have}} a negative impact on the wireless network’s performance, similar to the effects of denial of service attacks. The goal of this misbehavior was handling the protocol to increase the greedy nodes transmission rate at the expense of the other honest nodes. In fact, nodes in IEEE 802. 11 standard should wait for a random <b>backoff</b> interval <b>time</b> to access to the channel before initiating any transmission. Greedy nodes use a malicious technique to reduce the channel waiting time and occupy the channel. This paper introduces a new scheme to detect such malicious behavior, which is based on statistical process control (SPC) borrowed from the industrial field in a quality management context. To the best of our knowledge, this approach has not been proposed in state of the art, reports concerning the detection of greedy behaviors in mobile ad hoc networks. The approach has the power to identify greedy nodes in real time by using a graphical tool called «control chart» that measures the throughput and the inter-packet interval time for each node, and raises an alert if this measure is over a defined threshold. The validation of all obtained results is performed in the network simulator NS 2...|$|R
40|$|The belief {{propagation}} (BP) {{algorithm is}} an {{efficient way to}} solve "inference" problems in graphical models, such as Bayesian networks and Markov random fields. The system-state probability distribution of CSMA wireless networks is a Markov random field. An interesting question is how BP can help the analysis and design of CSMA wireless networks. This paper explores three such applications. First, we show how BP can be used to compute the throughputs of different links in the network given their access intensities, defined as the mean packet transmission time divided by the mean <b>backoff</b> countdown <b>time.</b> Second, we propose an inverse-BP algorithm to solve the reverse problem: how to set the access intensities of different links to meet their target throughputs? Third, we introduce a BP-adaptive CSMA algorithm to find the link access intensities that can achieve optimal system utility. BP solves the three problems with exact results in tree networks. It may, however, lose accuracy in networks with a loopy contention graph. We show how a generalized version of BP, GBP, can be designed to solve the three problems with high accuracy for networks with a loopy contention graph. Importantly, we show how the BP and GBP algorithms in this paper can be implemented in a distributed manner, making them useful in practical CSMA network opera-tion. Comment: A technical report of The Chinese University of Hong Kon...|$|R
40|$|Conventional WiFi {{networks}} perform channel contention in time domain. This {{is known}} to be wasteful because the chan-nel is forced to remain idle while all contending nodes are backing off for multiple time slots. This paper proposes to break away from convention and recreate the backing off op-eration in the frequency domain. Our basic idea leverages the observation that OFDM subcarriers can be treated as integer numbers. Thus, instead of picking a random <b>backoff</b> duration in <b>time,</b> a contending node can signal on a randomly cho-sen subcarrier. By employing a second antenna to listen to all the subcarriers, each node can determine whether its cho-sen integer (or subcarrier) is the smallest among all others. In fact, each node can even determine the rank of its chosen subcarrier, enabling the feasibility of scheduled transmissions after every round of contention. We develop these ideas into a Back 2 F protocol that migrates WiFi backoff to the frequency domain. Experiments on a prototype of 10 USRPs confirm fea-sibility, along with consistent throughput gains over 802. 11. Trace based simulations affirm scalability to larger, real-world network topologies...|$|R
