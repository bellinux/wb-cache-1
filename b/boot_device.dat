51|103|Public
25|$|When the {{operating}} system is booted from a read-only medium such as a CD or DVD, any user data {{that needs to be}} retained between sessions cannot be stored on the <b>boot</b> <b>device</b> but must be written to another storage device, such as a USB flash drive or a hard disk drive.|$|E
25|$|Nonetheless, as of 2002 most {{manufacturers}} still provided {{floppy disk}} drives as standard equipment to meet user demand for file-transfer and an emergency <b>boot</b> <b>device,</b> {{as well as}} for the general secure feeling of having the familiar device. By this time, the retail cost of a floppy drive had fallen to around $20, so there was little financial incentive to omit the device from a system. Subsequently, enabled by the widespread support for USB flash drives and BIOS boot, manufacturers and retailers progressively reduced the availability of floppy disk drives as standard equipment. In February 2003, Dell announced that floppy drives would no longer be pre-installed on Dell Dimension home computers, although they were still available as a selectable option and purchasable as an aftermarket OEM add-on. As of January 2007 only 2% of computers sold in stores contained built-in floppy disk drives.|$|E
2500|$|The {{ability to}} pass kernel options to the macOS Server guest OS has been added. To do so, enable the [...] "Select <b>boot</b> <b>device</b> on startup" [...] {{option in the}} virtual machine configuration: it will enable you to specify the {{necessary}} kernel options in the 5-seconds timeout before booting the kernel.|$|E
5000|$|Selecting which <b>devices</b> are {{potential}} <b>boot</b> <b>devices,</b> {{and in which}} order booting from them will be attempted ...|$|R
5000|$|... (In early BIOSes, POST did not {{organize}} {{or select}} <b>boot</b> <b>devices,</b> it simply identified floppy or hard disks, which {{the system would}} try to boot in that order, always.) ...|$|R
5000|$|Organizing {{the network}} so that boot {{images can be}} {{efficiently}} supported, independent of data. Data must not be dependent on <b>boot</b> <b>devices.</b> Use networks to store data on secure servers.|$|R
2500|$|With his 2600 article, Grothe {{shared a}} patch which also {{included}} a feature he had devised allowing the program to shut down a network when a non-whitelisted USB is inserted into any terminal. Nate Brune, another programmer, created Silk Guardian, a version of USBKill that {{takes the form of}} a loadable kernel module, since he [...] " [...] that it could be implemented better than it already is." [...] In the issue of 2600 following Grothe's article, another writer, going by the name Jack D. Ripper, explained how Ninja OS, an operating system designed for live flash drives, handles the issue. It uses a bash script resident in memory that cycles a loop through the <b>boot</b> <b>device</b> (i.e., the flash drive) three times a second to see if it is still mounted and reboots the computer if it is not.|$|E
50|$|Although {{limiting}} the <b>boot</b> <b>device</b> {{options in the}} BIOS may make it slightly less easy to boot another operating system, many BIOSes will prompt the user for the <b>boot</b> <b>device</b> after pressing a specific key during boot. Limiting the <b>boot</b> <b>device</b> options will not prevent the memory module from being removed from the system and read back on an alternative system either. In addition, most chipsets allow the BIOS settings to be reset if the mainboard is physically accessible, allowing the default boot settings to be restored {{even if they are}} protected with a password.|$|E
5000|$|SeaBIOS's <b>boot</b> <b>device</b> {{selection}} menu can {{be accessed}} by pressing [...] during the boot process.|$|E
5000|$|Data {{must not}} be {{dependent}} on <b>boot</b> <b>devices</b> - use networks to store data on secure servers so that data recovery is literally never required even in a disaster recovery situation ...|$|R
5000|$|SRAM - {{based on}} static memory technology. In-system {{programmable}} and re-programmable. Requires external <b>boot</b> <b>devices.</b> CMOS. Currently [...] in use. It {{is worth noting}} that flash or EEPROM devices may often load contents into internal SRAM that controls routing and logic.|$|R
5000|$|Unlike the IBM 360, where a <b>booting</b> <b>device</b> {{could be}} {{selected}} from the system console, an IBM 1130 could only be [...] "booted" [...] (IPL'd: Initial Program Load) from an external device: a card reader or a paper tape reader.|$|R
50|$|Tin Hat is a Security-focused Linux {{distribution}} {{derived from}} Hardened Gentoo Linux. It aims {{to provide a}} very secure, stable, and fast desktop environment that lives purely in RAM. Tin Hat boots from CD, or optionally from USB flash drive, {{but it does not}} mount any file system directly from the <b>boot</b> <b>device.</b> Instead, Tin Hat employs a large SquashFS image from the <b>boot</b> <b>device</b> which expands into tmpfs upon booting. This makes for long boot times, but fast speeds during use.|$|E
50|$|For Deep Freeze {{to protect}} a {{computer}}â€™s configuration, a computer must have its BIOS password-protected and have its hard disk as the first <b>boot</b> <b>device.</b>|$|E
5000|$|Ideally, backups on hand of {{the boot}} image, or even spare {{identical}} computers that can quickly be booted up from the <b>boot</b> <b>device</b> in question to determine {{if it is a}} hard disk, computer or software/image problem.|$|E
50|$|In {{contrast}} to live CDs, the data contained on the <b>booting</b> <b>device</b> {{can be changed}} and additional data stored on the same device. A user can carry his or her preferred operating system, applications, configuration, and personal files with them, {{making it easy to}} share a single system between multiple users.|$|R
25|$|Some {{features}} of Windows 7 are faster <b>booting,</b> <b>Device</b> Stage, Windows PowerShell, less obtrusive User Account Control, multi-touch, and improved window management. Features included with Windows Vista {{and not in}} Windows 7 include the sidebar (although gadgets remain) and several programs that were removed in favor of downloading their Windows Live counterparts.|$|R
50|$|In this {{particular}} case, the BIOS itself may call INT 13 {{to provide a}} list of possible <b>boot</b> <b>devices</b> to the user, and because the SCSI BIOS has hooked the interrupt the user {{will be able to}} choose not only which standard system <b>devices</b> to <b>boot</b> from, but also which SCSI disks as well.|$|R
5000|$|A boot {{image is}} a type of disk image (a {{computer}} file containing the complete contents and structure of a Computer storage media). When it is transferred onto a <b>boot</b> <b>device</b> it allows the associated hardware to boot.|$|E
50|$|Today, IBM PC {{compatible}} computers can still boot from floppies, CD-ROMs/DVDs, USB storage devices etc., if a corresponding drive {{is connected to}} the system. However, it may require to change <b>boot</b> <b>device</b> priority in the BIOS setup utility.|$|E
50|$|The {{interface}} devices are also defined with subclass descriptors. The subclass descriptor {{is used to}} declare a device bootable. A <b>boot</b> <b>device</b> meets a minimum adherence to a basic protocol and will be recognized by a computer's BIOS.|$|E
30|$|Hilger et al. show a {{forensic}} application {{that uses the}} memory of cold <b>booted</b> <b>devices</b> in [21]. They create tools based on the FROST framework to analyze the heap of the Dalvik Virtual Machine. With this approach, {{they are able to}} obtain critical data, for example, the phone call history, the last user input, and passwords [22].|$|R
5000|$|Remote <b>boot,</b> via {{integrated}} <b>device</b> electronics redirect (IDE-R).|$|R
5000|$|Remote/redirected <b>boot</b> (via {{integrated}} <b>device</b> electronics redirect, or IDE-R) ...|$|R
50|$|From release 2.0 onwards it is {{possible}} to enter a boot menu by holding down both mouse buttons at power on or reset. This allows the user to choose a <b>boot</b> <b>device,</b> set parameters for backwards compatibility and examine Autoconfig hardware.|$|E
50|$|A disk is {{identified}} by either its physical name or (more often) by a user-defined logical name. For example, the <b>boot</b> <b>device</b> (system disk) {{may have the}} physical name $3$DKA100, but it is generally referred to by the logical name SYS$SYSDEVICE.|$|E
5000|$|Either a {{computer}} will boot [...] {{from a local}} <b>boot</b> <b>device</b> (like a harddisk, CD-ROM or USB disk), where it loads a small Linux kernel from that device which initializes the system {{and all of the}} peripherals that it recognizes.|$|E
50|$|From AmigaOS release 2.0 onwards Kickstart also {{contained}} <b>device</b> drivers to <b>boot</b> from <b>devices</b> on IDE controllers, support for PC Card ports {{and various other}} hardware built into Amiga models.|$|R
5|$|The Denver <b>Boot,</b> a car-disabling <b>device,</b> {{was first}} used in Denver.|$|R
5000|$|Another porting aid is the {{commercial}} [...] "RD1 BIOS Savior" [...] product from IOSS, {{which is a}} combination of two <b>boot</b> memory <b>devices</b> that plugs into the boot memory socket and has a manual switch to select between the two devices. The computer can <b>boot</b> from one <b>device,</b> and then the switch can be toggled to allow the computer to reprogram or [...] "flash" [...] the second device. A more expensive alternative is an external EPROM/flash programmer.|$|R
5000|$|The BIOS {{performs}} startup tasks {{specific to}} the actual hardware platform. Once the hardware is enumerated and the hardware which is necessary for boot is initialized correctly, the BIOS loads and executes the boot code from the configured <b>boot</b> <b>device.</b>|$|E
50|$|An Option ROM {{typically}} {{consists of}} firmware {{that is called}} by the system BIOS. For example, an adapter card that controls a <b>boot</b> <b>device</b> might contain firmware {{that is used to}} connect the device to the system once the Option ROM is loaded.|$|E
50|$|On an IBM PC {{compatible}} machine, the BIOS {{selects a}} <b>boot</b> <b>device,</b> then copies the first sector from the device (which {{may be a}} MBR, VBR or any executable code), into physical memory at memory address 0x7C00. On other systems, the process may be quite different.|$|E
30|$|The OMAP 3530 CPU of {{our system}} uses a {{multistage}} boot process [23]. On power-up, the system executes the first bootloader stage located in an internal 32 [*]kB ROM. After performing basic hardware configuration, the ROM code creates a list of <b>boot</b> <b>devices.</b> This list is based on six hardware pins of the CPU called SYS_BOOT pins. Upon board design, a certain boot sequence can be defined by hardwiring these pins accordingly. By default, the BeagleBoard boot order is NAND, USB, UART 3, and MMC. With only minor modifications of the board design, this boot sequence can be hardwired to, for example, always boot from UART 3.|$|R
30|$|In this section, we {{evaluate}} our proposed framework. We first {{measure the}} amount of data that degrades due to the cold boot attack and show the feasibility of our approach in Section 7.1. In Section 7.2, we demonstrate the application of our framework on the Samsung Galaxy S 4 device using Volatility. We compare the Volatility analysis on a traditional LiME memory dump with a cold boot-based analysis using our BMA. In the next step, we extract sensitive user data from a cold <b>booted</b> <b>device</b> based on a concrete-use case in order to demonstrate the potential of our framework. In Section 7.3, we discuss the implementational aspects of the framework.|$|R
50|$|In {{most modern}} BIOSes, the boot {{priority}} order of all potentially bootable devices can be freely configured {{by the user}} through the BIOS configuration utility. In older BIOSes, limited boot priority options are selectable; in the earliest BIOSes, a fixed priority scheme was implemented, with floppy disk drives first, fixed disks (i.e. hard disks) second, and typically no other <b>boot</b> <b>devices</b> supported, subject to modification of these rules by installed option ROMs. The BIOS in an early PC also usually would only boot from the first floppy disk drive or the first hard disk drive, {{even if there were}} two drives of either type installed. All more advanced boot priority sequences evolved as incremental improvements on this basic system.|$|R
