68|590|Public
40|$|Abstract- Embedded RAMs {{are those}} whose address, data, and read/write {{controls}} cannot be directly controlled or observed through the chip’s 1 / 0 pins. Testing these memories, which are incorporated {{on a large}} percentage of VLSI devices are harder just {{because of the lack of}} controllability of its inputs and observe ability of its outputs. Testing such RAMs is the main objective of this paper. It is challenging to test embedded RAMs, and hence we will discuss techniques- design for testability (DFT) and <b>built-in</b> <b>self</b> <b>test</b> (<b>BIST),</b> which help in improving the testability of these RAMs. Keywords- <b>Built-In</b> <b>Self</b> <b>Test</b> (<b>BIST),</b> embedded memory fault, Modified March algorithm, Microcode, Transition fault, neighbourhood pattern sensitive faults(NPSF) ...|$|E
40|$|Approved {{for public}} release; {{distribution}} is unlimitedThis thesis investigates aliasing probability in <b>Built-in</b> <b>Self</b> <b>Test</b> (<b>BIST)</b> procedures, {{in which a}} Linear Feedback Shift Register (LFSR) {{is used as a}} pseudo-random pattern generator, with a full-adder as a circuit-under-test (CUT). The Signature Analyzer implements a Multiple Input Signature Register (MISR) as a test response compressor. [URL] Indonesian Air Forc...|$|E
40|$|Abstract—A {{testable}} EXOR-Sum-of-Products (ESOP) circuit realization and a simple, universal {{test set}} which detects all single stuck-at faults {{in the internal}} lines and the primary inputs/outputs of the realization are given. Since ESOP is the most general form of AND-EXOR representations, our realization and test set are more versatile than those described by other researchers for the restricted GRM, FPRM, and PPRM forms of AND-EXOR circuits. Our circuit realization requires only two extra inputs for controllability and one extra output for observability. The cardinality of our test set for an input circuit is (+ 6). For <b>Built-in</b> <b>Self</b> <b>Test</b> (<b>BIST)</b> applications, we show that our test set can be generated internally as easily as a pseudo-random pattern, and that it provides 100 % single stuck-at fault coverage. In addition, our test set requires a much shorter test cycle than a comparable pseudo-exhaustive or pseudo-random test set. Index Terms—Universal test set, AND-EXOR realizations, Reed-Muller expressions, single stuck-at fault model, easily testable combinational networks, Design for Testing (DFT), self testable circuits, <b>Built-in</b> <b>Self</b> <b>Test</b> (<b>BIST),</b> test pattern generation. ...|$|E
40|$|Abstract—Although {{integrated}} circuits (IC) shrink in {{size as the}} fabrication technology progresses, circuit designers always attempt to incorporate as much functionality as possible into a single die. Processor chips, particularly those used in data communications, {{are known to have}} the highest transistor density because they contain the highest percentage of embedded memories. In some cases, embedded memories occupy 50 - 80 % of the die area. With inherently high density of memories, the manufacturing yield can become very poor even in a mature process. Also to keep the test cost affordable, having <b>Built-In</b> <b>Self</b> <b>Tests</b> (<b>BIST)</b> for memories is essential although testing would not improve the yield by itself. It has become a common practice to implement some type of memory repair scheme along with BIST in memory dominant IC designs. In this writing, such an integrated scheme is referred as Memor...|$|R
40|$|For {{the control}} of safety-critical systems in {{automobiles}} a microcontroller-structure has been developed which guarantees the same safety level as a conventional two-channel computer architecture with homogeneous redundancy. The cost-relevant chip area of the new microcontroller is only 25 % larger than {{in the case of}} a microcontroller without safety-technical component. In the new structure the microcontroller is not controlled as a complex unit, but the functional modules of the microcontroller (RAM, ROM, CPU etc.) are checked by additional <b>built-in</b> <b>self</b> <b>tests</b> (<b>BIST)</b> and concurrent checking-hardware. The different BITs are controlled by a BIST-logic unit initialized and triggered by the user software. Final control in the microcontroller manufacturing is realized by a Boundary Scan method. (orig.) SIGLEAvailable from TIB Hannover: F 94 B 1882 +a / FIZ - Fachinformationszzentrum Karlsruhe / TIB - Technische InformationsbibliothekBundesministerium fuer Forschung und Technologie (BMFT), Bonn (Germany) DEGerman...|$|R
40|$|We {{present a}} new pattern {{generation}} approach for deterministic <b>built-in</b> <b>self</b> <b>testing</b> (<b>BIST)</b> of sequential circuits. Our approach {{is based on}} precomputed test sequences, and is especially suited to sequential circuits that contain {{a large number of}} flip-flops but relatively few controllable primary inputs. Such circuits, often encountered as embedded cores and as filters for digital signal processing, are difficult to test and require long test sequences. We show that statistical encoding of precomputed test sequences can be combined with low-cost pattern decoding to provide deterministic BIST with practical levels of overhead. Optimal Huffman codes and near-optimal Comma codes are especially suitable for test set encoding. This approach exploits recent advances in automatic test pattern generation for sequential circuits and, unlike other BIST schemes, does not require access to a gate-level model of the circuit under test. It can be easily automated and integrated with design automati [...] ...|$|R
40|$|Abstract – Testing {{of present}} day VLSI {{circuits}} with standard linear scan procedures using the <b>Built-In</b> <b>Self</b> <b>Test</b> (<b>BIST)</b> takes {{a significant amount}} of time, with the sheer number of sequential elements running into tens of thousands. Using the Illinois Scan Architecture, we propose to significantly reduce the test application time, by dividing the scan chain into multiple partitions and shifting in the same vector to each scan chain through a single scanin input. Experimental results for ISCAS 89 circuits show significant reduction in test application time, with a minor reduction in test coverage...|$|E
40|$|Logic <b>built-in</b> <b>self</b> <b>test</b> (<b>BIST)</b> is {{increasingly}} being adopted to improve test quality and reduce test costs for rapidly growing designs. Compared to deterministic automated {{test pattern generation}} (ATPG), BIST presents inherent fault diagnostic challenges. Previous diagnostic techniques have been limited in their diagnosis resolution and/or require significant hardware overhead. This paper proposes an interval-based scan-unload method that ensures diagnosis resolution down to gate-level faults with minimal hardware overhead. Tester fail-data collection {{is based on a}} novel construct incorporated into the design-extensions of the standard testinterface language (STIL). The implementation of the propose...|$|E
40|$|Abstract—As {{there are}} {{increasing}} functionalities in modern system-on-chip (SOC) design, {{the amount of}} memory being embedded on a chip is growing rapidly. But with the high capacity size of memory, the test process becomes more complex and cannot be controlled from the external environment or the automated test equipment (ATE). By using the separate on-chip test logic, the memory test can be performed to reduce the test time. This paper presents a survey regarding the efficient <b>built-in</b> <b>self</b> <b>test</b> (<b>BIST)</b> structure for embedded memories. Keywords—Memory Test, BIST Architecture, Memory Faults I...|$|E
40|$|Abstract { A cost-e ective <b>built-in</b> <b>self</b> <b>testing</b> (<b>BIST)</b> {{method for}} the {{detection}} of delay faults is presented. A multiple-input signature register (MISR) with a constant parallel input vector is used as a test pattern generator. To reduce the test length of the MISR, a two-step approach is proposed. First, deterministic delay test generation is employed to determine a set of two-pattern tests which detect all testable path delay faults. Second, a minimal number of constant MISR input vectors is calculated such that the state sequences generated by the MISR include the pre-determined test set. The second step is formulated asasetcovering problem. As the number of MISR input vectors may be exponential in the number of stages of the MISR, their calculation and the set covering are performed implicitly with BDDs. Experimental results reveal that in almost all considered cases a maximum robust path delay fault coverage is obtained with less than 100 MISR input vectors. ...|$|R
40|$|<b>Built-in</b> <b>self</b> <b>testing</b> (<b>BIST)</b> {{schemes that}} {{compress}} the test responses from k-output circuit to q signature streams, q << k, {{are known as}} space compactors. In this thesis, we use compression techniques in digital core based systems to facilitate deterministic or pseudorandom testing. Our objective is to minimize the storage requirement of the module under test (MUT) and also to obtain the maximum fault coverage. The objective is {{to achieve the same}} fault coverage as obtained without the compactors. We use some well known switching theory techniques, like cover table and frequency ordering, to the compression schemes. Clique detection algorithm is used to find out the maximal compatibility classes (MCCs) of the MUT outputs. In designing zero-aliasing space compressors, the concept of strong and weak compatibilities of response approach is considered, and in most cases maximal compaction is achieved. The techniques used in this thesis are simple designs that have high or full fault coverage for single stuck-line faults and acceptable area overhead. We used ISCAS 85 combinational benchmark circuits and ISCAS 89 sequential scan circuits with ATALANTA and FSIM simulation programs to simulate the suggested approaches...|$|R
40|$|Production {{testing of}} Radio Frequency (RF) devices is {{challenging}} {{due to the}} complex nature of the tests {{that have to be}} performed to verify functionality. In this dissertation a methodology to replace the complex and expensive RF functional <b>tests</b> with defect-oriented <b>Built-in</b> <b>Self</b> <b>Tests</b> (<b>BiSTs)</b> is detailed. If a design has sufficient margin to RF specifications then RF tests can be replaced with structural tests using a new data analysis technique called quadrant analysis, which is presented. Data from the analysis of over one million production units of said System on Chip (SoC) is presented along with the results of the analysis. The BiST techniques that have been used are discussed and a Texas Instruments 65 nm RF SoC with a Bluetooth and a FM core was used as a case study. The defect models that were used to develop the BiSTs are discussed as well. The scenario in which a design does not have sufficient margin to specification is also discussed. The data analysis method required in such a case is a regression analysis and the data from such an analysis is shown. The results prove {{that it is possible to}} replace expensive RF conventional tests with structural tests and that modern RFCMOS process technology and advances in design like the Digital Radio Processor (DRPTM) technology enable this. The Defective Parts Per Million (DPPM) impact of making this replacement is 27 units and is acceptable for RFCMOS high volume products. Finally, data showing test cost reduction of about 38 % that resulted from the elimination of RF conventional tests is presented...|$|R
40|$|Recently, a new <b>Built-In</b> <b>Self</b> <b>Test</b> (<b>BIST)</b> {{methodology}} {{based on}} balanced bistable sequential kernels {{has been proposed}} that reduces the area overhead and performance degradation associated with the conventional BILBO-oriented BIST methodology. This new methodology guarantees high fault coverage but requires special test sequences and test pattern generator (TPG) designs. In this paper, we demonstrate {{the use of the}} retiming technique in designing TPGs for balanced bistable sequential kernels. Experimental results on ISCAS benchmark circuits demonstrate the effectiveness of the designed TPGs in achieving higher fault coverage than the conventional maximal-lengt...|$|E
40|$|Abstract — A new {{approach}} to adding <b>built-in</b> <b>self</b> <b>test</b> (<b>BIST)</b> capabilities to integrated sigma-delta modulation RF transmitters is presented. An area efficient, all-digital building block generates multitone FM stimulus signals without compromising the perfor-mance of the RF transmitter itself. The RF signal is demodulated and digitized in a on-chip digital FM discriminator. Both blocks are fully testable using standard scan chain methods and consume a chip area of only 0. 03 mm 2 in a 130 nm CMOS technology. The spectral quality and reproducibility of the test signals are suitable for intermodulation distortion tests or PLL frequency response measurements. I...|$|E
40|$|Pseudorandom <b>built-in</b> <b>self</b> <b>test</b> (<b>BIST)</b> {{generators}} {{have been}} widely utilized to test integrated circuit and systems. In this Project an accumulator-based- 3 weight test pattern generation scheme is presented and proposed scheme generates set of test patterns with weights 0, 0. 5 and 1. These accumulators are mostly found in current VLSI chips and that the scheme can be efficiently to drive the hardware of BIST pattern generation. The hardware requirements for this project are FPGA SPARTAN 3 and the software which are used as Modelsim and Xilinx. Finally test patterns are produced for 5 bit and c 880 testbench circuits...|$|E
40|$|Abstract — Motion {{estimation}} plays a {{vital role}} in today’s media applications. Hence testing of such a module is a significant concern. Even though several algorithms have been proposed in the past testing of motion estimators are seldom addressed. The proposed system describes an Error Detection and Correction (EDCA) design that detects and recovers data in the motion estimator. The system uses the Sum of the Absolute Difference (SAD) method to compute the difference in the current and reference frames. The architecture comprises of an Error Detection Circuit (EDC) and a Data Recovery Circuit (DRC) to recover the original data. A Residue-Quotient code is used to compute the change in value between the error and expected values. <b>Built-in</b> <b>Self</b> <b>test</b> Technique (<b>BIST)</b> is included in the MECA and in each of Processing Element in MECA. Thus by introducing the <b>BIST</b> Concept the <b>testing</b> can be done internally without connecting outside testing requirements. So the area (number of gates) required and time is also reduces...|$|R
5000|$|<b>Built-In</b> <b>Self</b> <b>Tests</b> of Logic and Memory (LBIST and MBIST, respectively) (normally boot-time operations) ...|$|R
40|$|International audienceRe-using {{embedded}} {{resources for}} implementing <b>built-in</b> <b>self</b> <b>test</b> mechanisms allows test cost reduction. In this paper we demonstrate how to implement cost-efficient <b>built-in</b> <b>self</b> <b>test</b> functions from the AES cryptoalgorithm hardware implementation in a secure system. Self-test {{of the proposed}} implementation is also presented. A statistical test suite and fault-simulation are used for evaluating {{the efficiency of the}} corresponding cryptocore as pseudo-random test pattern generator; an analytical approach demonstrates the low probability of aliasing when used for test response compaction...|$|R
40|$|In {{this paper}} a new {{structural}} method for linear output space compaction is presented. The method is applicable to concurrent checking and <b>built-in</b> <b>self</b> <b>test</b> (<b>BIST).</b> Based on simple {{estimates for the}} probabilities {{of the existence of}} sensitized paths from the signal lines to the circuit outputs output partitions are determined without fault simulation. For all ISCAS 85 benchmark circuits three groups of compacted outputs are sufficient to achieve 100 % fault coverage in test mode and for 3 to 5 groups an error detection probability of 98 % is obtained in on-line mode. The method can be applied to very large circuits...|$|E
40|$|A central {{problem in}} <b>built-in</b> <b>self</b> <b>test</b> (<b>BIST)</b> {{is how to}} {{efficiently}} generate a small set of test vectors that detect all targeted faults. We propose a novel solution that uses linear algebraic concepts to partition the vector space of tests into subspaces (clusters). A subspace is defined by a compact set of basis vectors. We give an algorithm to compute sets of basis vectors defining the clusters. We also describe a low-cost logic circuit based on Gray codes that reproduces the subspaces from these basis vectors. Experimental results are presented which show that this approach reduces on-chip hardware overhead and test application time, while also guaranteeing full fault coverage. ...|$|E
40|$|Abstract—We {{present a}} {{technique}} {{for making a}} circuit ready for logic built-in self test by masking unknown values at its outputs. In {{order to keep the}} silicon area cost low, some known bits in output responses are also allowed to be masked. These bits are selected based on a stuck-at-detection based metric, such that the impact of masking on the defect coverage is minimal. An analysis based on a probabilistic model for resistive short defects indicates that the coverage loss for unmodeled defects is negligible for relatively low values of. Index Terms—Defect coverage, logic <b>built-in</b> <b>self</b> <b>test</b> (<b>BIST),</b> re-sistive bridging faults (RBFs), X-masking. I...|$|E
50|$|The main {{advantage}} of LBIST {{is the ability}} to test internal circuits having no direct connections to external pins, and thus unreachable by external automated test equipment. Another advantage {{is the ability to}} trigger the LBIST of an integrated circuit while running a <b>built-in</b> <b>self</b> <b>test</b> or power-on <b>self</b> <b>test</b> of the finished product.|$|R
40|$|Abstract—Structural on-line {{self-test}} may {{be performed}} to detect permanent faults and avoid their accumulation. This paper improves concurrent BIST techniques {{based on a}} deterministic test set. Here, the test patterns are specially generated with {{a small number of}} specified bits. This results in very low test latency, which reduces the likelihood of fault accumulation. Experiments with a large number of circuits show that the hardware overhead is significantly lower than the overhead for previously published methods. Furthermore, the method allows to tradeoff fault coverage, test latency and hardware overhead. Index Terms—Concurrent <b>self</b> <b>test,</b> <b>BIST,</b> <b>test</b> generation I...|$|R
40|$|Re-using {{embedded}} {{resources for}} implementing builtin <b>self</b> <b>test</b> mechanisms allows test cost reduction. In this paper we demonstrate how to implement costefficient <b>built-in</b> <b>self</b> <b>test</b> functions from the AES cryptoalgorithm hardware implementation in a secure system. Self-test {{of the proposed}} implementation is also presented. A statistical test suite and fault-simulation are used for evaluating {{the efficiency of the}} corresponding cryptocore as pseudo-random test pattern generator; an analytical approach demonstrates the low probability of aliasing when used for test response compaction...|$|R
40|$|This thesis {{belongs to}} the domain of {{hardware}} synthesis for testability. The objective of our work was {{to develop and implement}} a flexible allocation for testability tool, which is able to operate in conjunction with most of already existing High-Level Synthesis (HLS) systems in order to reach testable circuit data-path with minimal area overhead and performance degradation. The proposed allocation for testability tool performs necessary testability improving modifications of the data-path for external test (insertion of test points or scan) or for internal test - <b>Built-In</b> <b>Self</b> <b>Test</b> (<b>BIST)</b> at circuit RegisterTransfer Level (RTL). The modified RTL design can be then returned to connected HLS system to perform final optimizations...|$|E
40|$|Pseudo-random {{testing is}} popularly used, {{particularly}} in <b>Built-In</b> <b>Self</b> <b>Test</b> (<b>BIST)</b> applications. To achieve a desired fault coverage, pseudo-random patterns are often supplemented with few deterministic patterns. When positions of deterministic {{patterns in the}} pseudo-random sequence are known a priori, pseudo-random sub-sequences can be chosen such that they cover these deterministic patterns. We call this method of test application, pseudo-deterministic testing. The theory of discrete logarithm {{has been applied to}} determine positions of bit-patterns in the pseudo-random sequence generated by a modular form or internal-XOR Linear Feedback Shift Register (LFSR) However, the scheme requires that all the inputs of the combinational logic block (CLB), under test, come from the same LFSR source...|$|E
40|$|In today’s Integrated Circuits (IC’s) designs <b>Built-in</b> <b>Self</b> <b>Test</b> (<b>BIST)</b> is {{becoming}} {{important for the}} memory {{which is the most}} necessary part of the System on Chip. BIST is a design technique that allows a circuit to test itself. The technique can provide shorter test time compared to an externally applied test and allows the use of low-cost test equipment during all stages of production. Due to the randomness properties of Linear Feedback Shift Registers (LFSRs), this requires very little hardware overhead. In this paper, structure design and optimization of a Built-In Self-Test (BIST) design based on Linear Feedback Shift Registers (LFSRs) are described and different types of the Multipliers like Boot...|$|E
50|$|For {{reasons that}} are not clear in {{historical}} sources, the original Liz plans were dropped and only one machine using the new design was released. Announced at a New York City press conference on December 13, 1982, the rechristened 1200XL {{was presented at the}} Winter CES on January 6-9, 1983 and shipped in March 1983. Notable features were 64 KB of RAM, <b>built-in</b> <b>self</b> <b>test,</b> redesigned keyboard (featuring four function keys and a HELP key), and redesigned cable port layout.|$|R
40|$|This paper {{proposed}} a High speed FSM-based controller for programmable memory <b>built-in</b> <b>self</b> <b>test</b> for testing memory devices. This technique is popular {{because of its}} flexibility of new test algorithms. The architecture of controller is designed to implement a new test algorithm has less number of operations and this algorithm emphasis testing of high density memory ICs either faulty or good. The components of controller is studied and designed using Verilog HDL. The analysis of the timing, logic area usage and speed are presented...|$|R
40|$|A {{programmable}} {{built in}} <b>self</b> <b>test,</b> <b>BIST,</b> system for <b>testing</b> a memory, comprises an instruction register {{formed in the}} same chip as the memory; a circuit for loading the register by successive instructions, each instruction comprising at least one address control field, a first number (m) of operation fields, a number-of-operations field specifying a second number t+ 1, with t+ 1 ≦m; a circuit controlled by the address control field to determine successive addresses; and a cycle controller for executing, for each successive address, the second number (t+ 1) of successive operations, {{each of which is}} determined by one of the t+ 1 first operation fields...|$|R
40|$|In today’s Integrated Circuits (IC’s) designs <b>Built-in</b> <b>Self</b> <b>Test</b> (<b>BIST)</b> is {{becoming}} {{important for the}} memory {{which is the most}} necessary part of the System on Chip. The March algorithm has been widely used to test memory core of System on chip (SOC). LFSRs and counters are mainly used to generate the memory addresses, which can be serially applied to the memory cores under test. In this paper Address counters and Data generators (i. e. parts of the MBIST) are designed. These implemented in Hardware Description Language (HDL), and the area and power analyzed for each case. From the analyzed results the low power LFSRs and counters can be identify for the low power memory BIST design...|$|E
40|$|For a {{significant}} number of electronic systems used in safety-critical applications circuit testing is performed periodically. For these systems, power dissipation due to <b>Built-In</b> <b>Self</b> <b>Test</b> (<b>BIST)</b> can represent {{a significant}} percentage of the overall power dissipation. One approach to minimize power consumption in these systems consists of test pattern sequence reordering. Moreover, a key observation is that test patterns are in general expected to exhibit don't cares, which can naturally be exploited during test pattern sequence reordering. In this paper we develop an optimization model and describe an efficient algorithm for reordering pattern sequences in the presence of don't cares. Preliminary experimental results amply confirm that the resulting power savings due to pattern sequence reordering using don't cares can be significant...|$|E
40|$|<b>Built-In</b> <b>Self</b> <b>Test</b> (<b>BIST)</b> schemes {{have been}} {{utilized}} {{in order to}} drive down the number of vectors to achieve complete fault coverage in BIST applications. Weighted sets comprising three weights, namely 0, 1, and 0. 5 have been successfully utilized so far for Test Pattern Generation, since they result in both low testing time and low consumed power. In this paper an Accumulator-based 3 -Weight Test Pattern Generation scheme is presented; the proposed scheme generates set of patterns with weights 0, 0. 5, and 1. Since accumulators are commonly found in current VLSI chips, this scheme can be efficiently utilized to drive down the hardware of BIST pattern generation, as well. The output of this pattern generator is applied to a circuit under test where the errors are detected by using MISR circuit...|$|E
40|$|Power {{dissipation}} is {{a challenging}} problem in current VLSI designs. In general the power consumption of device {{is more in}} the testing mode than in the normal system operation. Built in <b>self</b> <b>test</b> (<b>BIST)</b> and scan-based BIST are the techniques used for testing and detecting the faulty components in the VLSI circuit. Linear Feedback Shift Register (LFSR) in BIST generates pseudo-random patterns for detecting the faults, increasing the power consumption during testing, boosting the need to add power optimizations to BIST pattern generators. This paper identifies the different techniques to modify the BIST architecture thereby finding an optimal choice to reduce power consumption without compromising upon fault coverage...|$|R
40|$|ISBN 978 - 1 - 4244 - 2182 - 4 International audienceCryptographic {{devices have}} to be fully {{testable}} {{in order to ensure}} proper functionalities. On the other hand, security requirements restrict the use of some testing techniques, such as scan chains. <b>Built-In</b> <b>Self</b> <b>Tests</b> may be a solution, but they often require expensive additional components included into the circuitry. The possibility of using the ciphering circuit itself to perform the <b>self</b> <b>test</b> has been proposed. In this paper, we further explore this approach and we analyze the configuration parameters that affect the fault coverage. We show that achieving 100 % coverage is less easy than previously published...|$|R
40|$|This paper {{presents}} a novel BIST (<b>Built-In</b> <b>Self</b> Test) scheme with scan chain segmentation. In the scheme, {{a combination of}} pseudo random patterns and single-weight patterns have been applied to CUT (Circuit Under Test). Scan chain is partitioned into multiple segments delimited by inverters. When a single weighted pattern is applied to a segmented scan chain, successive segments receive bit patterns with complementary weights. Several segment configurations {{may be required to}} achieve full fault coverage. In this scheme the control logic is inside the scan path and <b>built-in</b> <b>self</b> <b>test</b> can be implemented without compromising timing performance of CUT. Experiments show that our scheme can obtain very good fault coverage. Hardware implementation is simple and straightforward. 1...|$|R
