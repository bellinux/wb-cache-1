187|88|Public
50|$|Hybrids {{of these}} DCOP {{algorithms}} also exist. BnB-Adopt, for example, changes the search strategy of Adopt from best-first search to depth-first <b>branch-and-bound</b> <b>search.</b>|$|E
50|$|DCOP {{algorithms}} can {{be classified}} according to the search strategy (best-first search or depth-first <b>branch-and-bound</b> <b>search),</b> the synchronization among agents (synchronous or asynchronous), the communication among agents (point-to-point with neighbors in the constraint graph or broadcast) and the main communication topology (chain or tree).ADOPT, for example, uses best-first search, asynchronous synchronization, point-to-point communication between neighboring agents in the constraint graph and a constraint tree as main communication topology.|$|E
50|$|SLD {{resolution}} is non-deterministic {{in the sense}} that it does not determine the search strategy for exploring the search tree. Prolog searches the tree depth-first, one branch at a time, using backtracking when it encounters a failure node. Depth-first search is very efficient in its use of computing resources, but is incomplete if the search space contains infinite branches and the search strategy searches these in preference to finite branches: the computation does not terminate. Other search strategies, including breadth-first, best-first, and <b>branch-and-bound</b> <b>search</b> are also possible. Moreover, the search can be carried out sequentially, one node at a time, or in parallel, many nodes simultaneously.|$|E
50|$|Other {{libraries}} implement <b>search</b> methods like <b>branch-and-bound,</b> repair-based <b>search,</b> limited discrepancy search.|$|R
30|$|A two-step {{optimization}} algorithm {{is designed to}} first reduce the search space, thereby decreasing the search difficulty, and then obtain the solution using a <b>branch-and-bound</b> <b>searching</b> (BBS) algorithm. To further reduce the complexity for practical communications, we propose a location-based algorithm that divides a single cell into an inner round employing the IA scheme and an outer circle employing the multiplex scheme.|$|R
3000|$|... [...]. Our <b>branch-and-bound</b> tree <b>search</b> {{algorithm}} is enabled by the pick-l algorithms introduced in Sections 2 and 3.|$|R
40|$|A {{branch-and-bound}} {{approach to}} solving influ- ence diagrams {{has been previously}} proposed in the literature, but appears to have never been implemented and evaluated - apparently due to the difficulties of computing effective bounds for the <b>branch-and-bound</b> <b>search.</b> In this paper, we describe how to efficiently compute effective bounds, and we develop a practical implementa- tion of depth-first <b>branch-and-bound</b> <b>search</b> for influence diagram evaluation that outperforms existing methods for solving influence diagrams with multiple stages. Comment: Appears in Proceedings of the Twenty-Sixth Conference on Uncertainty in Artificial Intelligence (UAI 2010...|$|E
40|$|One {{practical}} inconvenience in frequent pattern mining is that {{it often}} yields a flood of common or uninformative patterns, and thus we should carefully adjust the minimum support. To alleviate this inconvenience, based on FP-growth, this paper proposes RP-growth, an efficient algorithm for top-k mining of discriminative patterns which are highly relevant to the class of interest. RP-growth conducts a <b>branch-and-bound</b> <b>search</b> using anti-monotonic upper bounds of the relevance scores such as F-score and χ 2, and the pruning in <b>branch-and-bound</b> <b>search</b> is successfully translated to minimum support raising, a standard, easy-to-implement pruning strategy for top-k mining. Furthermore, by introducing the notion called weakness and an additional, aggressive pruning strategy based on weakness, RP-growth efficiently finds k patterns of wide variety and high relevance to the class of interest. Experimental results on text classification exhibit the efficiency and the usefulness of RP-growth...|$|E
40|$|Scratchpad {{memory is}} a popular choice for on-chip storage in {{real-time}} embedded systems. The allocation of code/data to scratchpad memory is performed at compile time leading to predictable memory access latencies. Current scratchpad memory allocation techniques improve the average-case execution time of tasks. For hard realtime systems, on the other hand, worst case execution time (WCET) is a key metric. In this paper, we propose scratchpad allocation techniques for data memory that aim to minimize a task’s WCET. We first develop an integer linear programming (ILP) based solution which constructs the optimal allocation assuming that all program paths are feasible. Next, we employ <b>branch-and-bound</b> <b>search</b> to more accurately construct the optimal allocation by exploiting infeasible path information. However, the <b>branch-and-bound</b> <b>search</b> is too time-consuming in practice. Therefore, we design fast heuristic searches that achieve near-optimal allocations for all our benchmarks. 1...|$|E
3000|$|Simultaneous {{upper and}} lower bounds. The <b>branch-and-bound</b> tree <b>search</b> {{algorithm}} simultaneously maintains {{upper and lower}} bounds of α [...]...|$|R
3000|$|Novel {{formulations}} using branch-and-bound. Based on the pick-l algorithm, {{we propose}} a <b>branch-and-bound</b> tree <b>search</b> approach to compute tighter bounds {{or even the}} exact value of α [...]...|$|R
3000|$|... or {{its upper}} bound {{by using the}} <b>branch-and-bound</b> tree <b>search</b> {{algorithm}} (for example, based on the pick- 1 -element algorithm). We introduce a novel result (Lemma 3), which can use α [...]...|$|R
3000|$|... {{through the}} pick-l-element algorithm. We {{will present the}} {{performance}} of the pick-l algorithm in Section 5 showing that the pick-l algorithm provides better upper bounds than the previous research [3, 8] even when l= 2. Furthermore, thanks to the pick-l algorithm, we can design a new algorithm based on a <b>branch-and-bound</b> <b>search</b> to calculate α [...]...|$|E
40|$|The paper {{explores the}} {{potential}} of look-ahead meth-ods {{within the context of}} AND/OR search in graphical models using the Mini-Bucket heuristic for combinato-rial optimization tasks (e. g., weighted CSPS or MAP inference). We study how these methods can be used to compensate for the approximation error of the initially generated Mini-Bucket heuristics, within the context of anytime <b>Branch-And-Bound</b> <b>search...</b>|$|E
40|$|AND/OR search {{spaces are}} a unifying {{paradigm}} for advanced algorithmic schemes for graphical models. The main virtue of this representation is its {{sensitivity to the}} structure of the model, which can translate into exponential time savings for search algorithms. In this paper we introduce an AND/OR search algorithm that explores a context-minimal AND/OR search graph in a best-first manner for solving 0 / 1 integer linear programs (0 / 1 ILP). We also extend to the 0 / 1 ILP domain the depth-first AND/OR <b>branch-and-bound</b> <b>search</b> with caching algorithm which was recently proposed by (R. Marinescu and R. Dechter, 2006) for solving optimization tasks in graphical models. The effectiveness of the best-first AND/OR search approach compared to depth-first AND/OR <b>branch-and-bound</b> <b>search</b> is demonstrated on a variety of benchmarks for 0 / 1 ILPs, including instances from the MIPLIB library, real-world combinatorial auctions, random uncapacitated warehouse location problems and MAX-SAT instances. Anglai...|$|E
3000|$|..., when k is {{too large}} for nk {{enumerations}} of exhaustive search [14 – 16]. To this end, we propose a new <b>branch-and-bound</b> tree <b>search</b> algorithm to find tighter bounds on α [...]...|$|R
40|$|Figure 2 - Strict {{consensus}} phylogram of {{two most}} parsimonious trees for species of Bracalba using implicit enumeration (<b>branch-and-bound</b> exact <b>search),</b> score = 166. Bootstrap support values found using TNT new technology search (set initial level = 95). Bremer support values above 1, and bootstrap values about 50 % indicated on branches...|$|R
40|$|Recently, {{techniques}} for supporting efficient similarity search over huge transaction datasets {{have emerged as}} an important research area. Several indexing schemes have been proposed towards this direction. Typically, these schemes provide a tradeoff between searching efficiency and indexing overhead in terms of space. In this paper, we propose a novel indexing scheme for similarity search on transaction data. Based on well-studied clustering techniques, we develop a construction algorithm for the proposed index and a <b>branch-and-bound</b> <b>searching</b> strategy for answering similarity search. Unlike previous techniques, our indexing scheme exhibits high search efficiency and low space requirements by trading-off the pre-computation time. This behavior is ideal for applications with low update but high read volume (e. g., data warehousing, collaborative filtering, etc.). Moreover, our experimental results illustrate that our method is robust to the varying characteristics of the datasets...|$|R
40|$|FIGURES 75. One of six trees {{obtained}} with <b>branch-and-bound</b> <b>search,</b> unordered characters, chosen {{to represent the}} phylogenetic relationships between species of Neoscutops (Length = 23 steps, consistency index = 0. 82 and retention index = 0. 93). Character numbers are represented above and character states below the circles. Black circle = non-homoplasioius apomorphy; white circle = homoplasious apomorphy. All character reconstructions are unambiguous...|$|E
40|$|Abstract A {{radio power}} control {{strategy}} to achieve maximum throughput for the up-link of CDMA wireless systems with variable spreading factor is investigated. The system model includes slow and fast fading, rake receiver, and multi-access interference caused by users with heterogeneous data sources. The {{quality of the}} communication is {{expressed in terms of}} outage probability, while the throughput is de�ned as the sum of the users transmit rates. The outage probability is accounted for by resorting to a lognormal approximation. A mixed integer-real optimization problem P 1, where the objective function is the throughput under outage probability constraints, is investigated. Problem P 1 is solved in two steps: �rstly, we propose a modi�ed problem P 2 to provide feasible solutions, and then the optimal solution is obtained with an ef�cient <b>branch-and-bound</b> <b>search.</b> Numerical results are presented and discussed to assess the validity of our approach. Index Terms CDMA, outage, distributed computation, combinatorial optimization, <b>branch-and-bound</b> <b>search...</b>|$|E
40|$|We address {{verification}} of imprecise datapath circuits with sequential elements. Using Arithmetic Transform (AT) and its extensions, we verify the sequential datapath circuits with finite precision. An efficient {{formulation of the}} precision verification {{is presented as a}} polynomial maximization search over Boolean inputs. Using a <b>branch-and-bound</b> <b>search</b> for the precision error and the block-level composition of ATs, we verify the approximated, rounded and truncated pipelined datapaths. 1...|$|E
40|$|In {{this work}} we {{consider}} the molecular distance geometry problem, which {{can be defined as}} the determination of the three-dimensional structure of a molecule based on distances between some pairs of atoms. We address the problem as a nonconvex least-squares problem. We apply three global optimization algorithms (spatial <b>Branch-and-Bound,</b> Variable Neighbourhood <b>Search,</b> Multi Level Single Linkage) to two sets of instances, one taken from the literature and the other new. Keywords: molecular conformation, distance geometry, global optimization, spatial <b>Branch-and-Bound,</b> variable neighbourhood <b>search,</b> multi level single linkage...|$|R
30|$|In this paper, {{multiple}} device-to-device (D 2 D) communication underlaying cellular multiuser multiple inputs multiple outputs (MU-MIMO) {{systems is}} investigated. This {{type of communication}} can improve spectral efficiency to address future demand, but interference management, user clustering, and resource allocation are three key problems related to resource sharing. Interference alignment (IA) is proposed to better mitigate in-cluster interference compared with a multiplex scheme, and user clustering and resource allocation are jointly investigated using binary-integer programming. In addition to an exhaustive search for a maximum throughput, we propose a two-step suboptimal algorithm by reducing the search space and applying <b>branch-and-bound</b> <b>searching</b> (BBS). To further obtain a good trade-off between performance and complexity, we propose a novel algorithm based on distance-constrained criteria for user clustering. The simulation {{results show that the}} IA and multiplex schemes acquiring user clustering gains outperform the orthogonal scheme without user clustering. Besides, the proposed two-step and location-based algorithms achieve little losses compared with the optimal algorithm under low complexities.|$|R
40|$|Much of the {{research}} on operations scheduling problems has either ignored setup times or assumed that setup times on each machine are independent of the job sequence. This paper considers the problem of scheduling a single machine for minimizing total tardiness in a sequence dependent setup environment. The comparative performance of <b>branch-and-bound,</b> genetic <b>search,</b> simulated annealing and random-start pairwise interchange was evaluated in this problem setting. The experimental results suggest that simulated annealing and random-start pairwise interchange are viable solution techniques that can yield good solutions to a large combinatorial problem when considering the tardiness objective with sequence dependent setup times. However, branch-and-bound may be the preferred solution technique in solving smaller problems, and it is the only solution technique tested that will confirm an optimum solution has been reached. The methods considered in this research offer promise to deal with a class of scheduling problems, which have been considered difficult by both researchers and practitioners. Scheduling Sequence dependent setup times Tardiness <b>Branch-and-bound</b> Genetic <b>search</b> Simulated annealing...|$|R
40|$|We {{describe}} a small, non-intrusive extension to the declarative modelling language Zinc that {{allows users to}} define model-specific search. This is achieved by providing a number of generic search patterns that take Zinc user-defined functions as parameters. We show the generality of the approach by using it to implement three very different kinds of search: backtracking search, <b>branch-and-bound</b> <b>search,</b> and local search. Our approach is competitive with hand-coded search strategies...|$|E
40|$|International audienceIn {{this paper}} we propose a general {{integration}} scheme for a Multi-Criteria Decision Making model of the Multi-Attribute Utility Theory in Constraint Programming. We introduce the Choquet integral as a general aggregation function for multi-criteria optimization problems and define the Choquet global constraint that propagates this function during the <b>Branch-and-Bound</b> <b>search.</b> Finally the benefits of the propagation of the Choquet constraint are evaluated on the examination timetabling problem...|$|E
40|$|Abstract. We {{describe}} a small, non-intrusive extension to the declar-ative modelling language Zinc that {{allows users to}} define model-specific search. This is achieved by providing a number of generic search pat-terns that take Zinc user-defined functions as parameters. We show the generality of the approach by using it to implement three very different kinds of search: backtracking search, <b>branch-and-bound</b> <b>search,</b> and local search. Our approach is competitive with hand-coded search strategies. ...|$|E
40|$|Motivation: Finding common patterns, or motifs, in the {{promoter}} regions of co-expressed genes {{is an important}} problem in bioinformatics. A common representation of the motif is by probability matrix or PSSM (position specific scoring matrix). However, even for a motif of length six or seven, there is no algorithm that can guarantee finding the exact optimal matrix from {{an infinite number of}} possible matrices. Results: T his paper introduces the first algorithm, called EOMM, for finding the exact optimal matrix-represented motif, or simply optimal motif. Based on <b>branch-and-bound</b> <b>searching</b> by partitioning the solution space recursively, EOMM can find the optimal motif of size up to eight or nine, and a motif of larger size with any desired accuracy on the principle that the smaller the error bound, the longer the running time. Experiments show that for some real and simulated data sets, EOMM finds the motif despite very weak signals when existing software, such as MEME and MITRA-PSSM, fails to do so. © The Author 2005. Published by Oxford University Press. All rights reserved. postprin...|$|R
40|$|We {{consider}} {{production planning}} {{problems with the}} restriction that all integer variables model setups. Since finding a feasible solution of such problems is in general NP-complete, the classical approaches have been the use of heuristics to find good feasible solutions on the one hand, or branch and cut on the other hand. In {{the case of the}} former, a dual bound is not available, and there is no guarantee of solution quality. For the latter, the accent has been on improving the dual bound and only the simplest schemes have been used to find good feasible solutions. Here we first show that such simple schemes may run into trouble, even when applied to very simple problems. This motivates the proposed heuristic, IPE, which is designed to be used within a branch-and-cut approach. We test the performance of the heuristic on various published lot-sizing and network-design problems, with and without tightened reformulations. We compare these results with other heuristics and with time truncated <b>branch-and-bound</b> <b>searches.</b> IPE appears to be the best choice for large problems with weak formulation...|$|R
40|$|Abstract—When using architecturally diverse {{systems to}} {{accelerate}} streaming applications, the design search space is often complex. We present a global optimization framework comprising a novel domain-specific variation of <b>branch-and-bound</b> that reduces <b>search</b> complexity by exploiting topology of the application’s pipelining. I...|$|R
40|$|In {{this paper}} we {{investigate}} the parallel complexity of backtrack and <b>branch-and-bound</b> <b>search</b> on the mesh-connected array. We present an ΩΓ p dN= p log N) lower {{bound for the}} time needed by a randomized algorithm to perform backtrack and <b>branch-and-bound</b> <b>search</b> of a tree of depth d on the p N Θ p N mesh, even when {{the depth of the}} tree is known in advance. The lower bound holds also for algorithms that are allowed to move tree-nodes and create multiple copies of the same tree-node. For the upper bounds we give deterministic algorithms that are within a factor of O(log 3 2 N) from our lower bound. Our algorithms do not make any assumption on the shape of the tree to be searched, do not know the depth of the tree in advance and do not move tree-nodes nor create multiple copies of the same node. The best previously known algorithm for backtrack search on the mesh was randomized and required Θ(d p N= log N) time. Our algorithm for branch-and-bound is the fir [...] ...|$|E
40|$|The paper {{investigates the}} {{efficiency}} of parallel <b>branch-and-bound</b> <b>search</b> on multicomputer cluster for the case of parallel solving Sam Loyd’s puzzle. Performance estimation and analysis as well as parallelism profiling have been made for MPI implementation developed {{on the basis of}} the manager/workers parallel algorithmic paradigm. The impact of the number of the processors and the computational workload – the board size – over the performance of the parallel system has been investigated...|$|E
40|$|Abstract — In {{this paper}} we present new methods for the {{automated}} learning of heuristics in knowledge-lean applications and for finding heuristics {{that can be}} generalized to unlearned domains. These applications lack domain knowledge for credit assignment; hence, operators for composing new heuristics are generally modelfree, domain independent, and syntactic in nature. The operators we have used are genetics-based; examples of which include mutation and cross-over. Learning {{is based on a}} generate-and-test paradigm that maintains a pool of competing heuristics, tests them to a limited extent, creates new ones from those that perform well in the past, and prunes poor ones from the pool. We hav e studied three important issues in learning better heuristics: (a) anomalies in performance evaluation, (b) rational scheduling of limited computational resources in testing candidate heuristics in single-objective as well as multiobjective learning, and (c) finding heuristics that can be generalized to unlearned domains. We show experimental results in learning better heuristics for (a) process placement for distributed-memory multicomputers, (b) node decomposition in a <b>branch-and-bound</b> <b>search,</b> (c) generation of test patterns in VLSI circuit testing, and (d) VLSI cell placement and routing. Index Terms — <b>Branch-and-bound</b> <b>search,</b> generalization, genetics-based learning, heuristics, knowledge-lea...|$|E
40|$|AbstractDifficult {{discrete}} optimization {{problems are}} often solved using a <b>Branch-and-Bound</b> approach. Resolution <b>Search</b> is an alternate approach proposed by Chvátal for 0 – 1 problems, allowing {{more flexibility in}} the search process. In this paper, we generalize the Resolution Search approach to any discrete problem...|$|R
40|$|The {{problem of}} finding a maximum clique or {{enumerating}} all maximal cliques is very important and has been explored in several excellent survey papers. Here, we focus our attention on the step-by-step examination {{of a series of}} <b>branch-and-bound</b> depth-first <b>search</b> algorithms: Basics, MCQ, MCR, MCS, and MCT. Subsequently, as with the depth-first search as above, we present our algorithm, CLIQUES, for enumerating all maximal cliques. Finally, we describe some of the applications of the algorithms and their variants in bioinformatics, data mining, and other fields...|$|R
40|$|International audienceDifficult {{discrete}} optimization {{problems are}} often solved using a <b>Branch-and-Bound</b> approach. Resolution <b>Search</b> is an alternate approach proposed by Chvátal for 0 – 1 problems, allowing {{more flexibility in}} the search process. In this paper, we generalize the Resolution Search approach to any discrete problem...|$|R
