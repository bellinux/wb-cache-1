72|69|Public
500|$|Other tools {{designed}} to help artists complete complicated effects included Spaces, which allowed Olaf's deconstructible parts to be moved around and rebuilt, Flourish, which allowed extra movement such as leaves and twigs to be art-directed; Snow <b>Batcher,</b> which helped preview the final look of the snow, especially when characters were interacting with an area of snow by walking through a volume, and Tonic, which enabled artists to sculpt their characters' hair as procedural volumes. Tonic also aided in animating fur and hair elements such as Elsa's hair, which contains 420,000 computer-generated strands, while the average number for a real human being is only 100,000. The number of character rigs in Frozen is 312 {{and the number of}} simulated costumes also reached 245 cloth rigs, which were far beyond all other Disney films to date. Fifty effects artists and lighting artists worked together on the technology to create [...] "one single shot" [...] in which Elsa builds her ice palace. Its complexity required 30 hours to render each frame, with 4,000 computers rendering one frame at a time.|$|E
2500|$|Messerschmitt 262A pilots {{for suicide}} {{missions}} {{to attack the}} bridge, but the aircraft's bomb targeting sight prevented their use in this way. To supplement the propeller-driven aircraft, Göring formed Gefechtsverband Kowalewski, which included about 40 Arado Ar 234 B-2 turbojet bombers of III./Kampfgeschwader 76 (76th Bomber Wing), normally based in Norway. The bombers were escorted by about 30 Messerschmitt Me 262A-2a jet fighter-bombers from II./Kampfgeschwader 51 led by Hansgeorg <b>Bätcher</b> — formerly the commanding officer of III./KG 76 — on their 7 March mission. This {{was the first time}} they were used to attack a tactical target. When fully loaded with external bombs, the bombers were capable of flying at over , faster than almost all Allied aircraft except the latest Tempest Mark V, and so fast that the American anti-aircraft units had trouble tracking them. Over six days, III Gruppe./KG 76 flew nine sorties against the bridges. While extremely fast for their time, they were not accurate and dropped their [...] bombs without success. The Germans lost seven jet aircraft, including two shot down by Allied aircraft. The Americans estimated that from 7 to 17 March they shot down 109 planes, and probably destroyed 36 others, {{out of a total of}} 367 sent to attack the bridge.|$|E
2500|$|Following his 133rd aerial {{victory and}} his last, Wiese {{was awarded the}} Knight's Cross of the Iron Cross with Oak Leaves (...) on 2 March 1944, the 418th officer or soldier of the Wehrmacht so honored. Wiese and fellow JG52 pilots Erich Hartmann, Walter Krupinski, for the Oak Leaves presentation, and Gerhard Barkhorn, for the Swords to his Knight's Cross presentation, {{travelled}} on an overnight train from the Anhalter Bahnhof in Berlin to the Führerhauptquartier (Führer Headquarter) at the Berghof in Berchtesgaden for the award ceremony by Adolf Hitler on 4 April 1944. Also present at the award ceremony were Kurt Bühligen, Horst Ademeit, Reinhard Seiler, Hans-Joachim Jabs, Dr. Maximilian Otte, Bernhard Jope and Hansgeorg <b>Bätcher</b> from the bomber force, and the Flak officer Fritz Petersen, all destined to receive the Oak Leaves. On the train, all of them got drunk on cognac and champagne. Supporting each other and unable to stand, they arrived at Berchtesgaden. Major Nicolaus von Below, Hitler's Luftwaffe adjutant, was shocked. After some sobering up, they were still intoxicated. Hartmann took a German officer's hat from a stand and put it on, {{but it was too}} large. Von Below became upset, told Hartmann it was Hitler's and ordered him to put it back.|$|E
40|$|We {{prove that}} <b>Batcher's</b> odd-even (m; n) -merging {{networks}} are exactly optimal for (m; n) = (3; 4 k + 2) and (4; 4 k + 2) for k 0 {{in terms of}} the number of comparators used. For other cases where m 4, the optimality of <b>Batcher's</b> (m; n) -merging networks has been proved. So we can conclude that <b>Batcher's</b> odd-even merge yields optimal (m; n) -merging networks for every m 4 and for every n. The crucial part of the proof is characterizing the structure of optimal (2; n) -merging networks...|$|R
40|$|AbstractLet M(m,n) be {{the minimum}} number of {{comparators}} which constructs an (m,n) -merging network. <b>Batcher's</b> odd–even merge, which is a merging network constructed by his algorithm, provides the best upper bound for M(m,n) to date. Recently Iwata (Inform. and Comput. 168 (2001) 187) analyzed the property of leftmost comparators, and showed M(m 1 +m 2,n) ⩾⌈(M(m 1,n) +M(m 2,n) +m 1 +m 2 +n- 2) / 2 ⌉. We extend Iwata's proofs and show that <b>Batcher's</b> (6, 8 k+ 7) -, (9, 16 k+ 9) -, (7, 8) -merging networks are optimal for all k⩾ 0. In <b>Batcher's</b> (m,n) -merging network, the ith smallest element out of m elements and another ith smallest element out of n elements are first compared for all i (1 ⩽i⩽min{m,n}). Under an assumption of existence of such min{m,n} comparators in optimal (m,n) -merging networks, we show that M(n,n) =M(n- 1,n) + 1 =M(n- 2,n) + 3...|$|R
50|$|Although it has higher {{complexity}} {{than the}} O(N log N) that is optimal for comparison sorts, Pratt's version {{lends itself to}} sorting networks and has the same asymptotic gate complexity as <b>Batcher's</b> bitonic sorter.|$|R
50|$|In 1917 Western Pipe & Steel {{bought out}} another local San Francisco company, the Schaw <b>Batcher</b> Pipe Works. Schaw <b>Batcher</b> had {{frontage}} on San Francisco Bay {{and had just}} received a contract from the U.S. Shipping Board for the building of 22 merchant ships {{in accordance with the}} Board's strategic goal of developing a naval auxiliary and merchant marine fleet. With the purchase of Schaw <b>Batcher,</b> Western Pipe & Steel inherited these contracts, thus gaining its first foothold into the shipbuilding industry.|$|E
5000|$|Hansgeorg <b>Bätcher</b> (1914-2003), Oberstleutnant in the Luftwaffe ...|$|E
5000|$|Ken <b>Batcher</b> is an emeritus {{professor}} of Computer Science at Kent State University. He also {{worked as a}} computer architect at Goodyear Aerospace in Akron, Ohio for 28 years. In 1964, <b>Batcher</b> received his Ph.D. in electrical engineering from the University of Illinois. He graduated from Brooklyn Technical High School.|$|E
40|$|AbstractA {{lower bound}} theorem is {{established}} {{for the number of}} comparators in a merging network. Let M(m, n) be the least number of comparators required in the (m, n) -merging networks, and let C(m, n) be the number of comparators in <b>Batcher's</b> (m, n) -merging network, respectively. We prove for n≥ 1 that M(4, n) =C(4, n) for n≡ 0, 1, 3 mod 4, M(4, n) ≥C(4, n) − 1 for n≡ 2 mod 4, and M(5, n) =C(5, n) for n≡ 0, 1, 5 mod 8. Furthermore <b>Batcher's</b> (6, 8 k+ 6) -, (7, 8 k+ 7) -, and (8, 8 k+ 8) -merging networks are optimal for k≥ 0. Our lower bound for (m, n) -merging networks, m≤n, has the same terms as C(m, n) has as far as n is concerned. Thus <b>Batcher's</b> (m, n) -merging network is optimal up to a constant number of comparators, where the constant depends only on m. An open problem posed by Yao and Yao (Lower bounds on merging networks, J. Assoc. Comput. Mach. 23, 566 – 571) is solved: limn→∞M(m, n) /n=⌈log m⌉/ 2 +m/ 2 ⌈log m⌉...|$|R
50|$|Note {{that there}} are faster sorting {{algorithms}} available, for example optimal complexity O(log(n)) {{are those of the}} Three Hungarians and Richard Cole and <b>Batcher's</b> bitonic merge sort has an algorithmic complexity of O(log2(n)), all of which have a lower algorithmic time complexity to radix sort on a CREW-PRAM. The fastest known PRAM sorts were described in 1991 by David Powers with a parallelized quicksort that can operate in O(log(n)) time on a CRCW-PRAM with n processors by performing partitioning implicitly, as well as a radixsort that operates using the same trick in O(k), where k is the maximum keylength. However, neither the PRAM architecture or a single sequential processor can actually be built {{in a way that will}} scale without the number of constant fanout gate delays per cycle increasing as O(log(n)), so that in effect a pipelined version of <b>Batcher's</b> bitonic mergesort and the O(log(n)) PRAM sorts are all O(log2(n)) in terms of clock cycles, with Powers acknowledging that <b>Batcher's</b> would have lower constant in terms of gate delays than his Parallel quicksort and radix sort, or Cole's merge sort, for a keylength-independent sorting network of O(nlog2(n)).|$|R
5000|$|A {{concrete}} plant, {{also known}} as a batch plant or batching plant or a concrete batching plant, is equipment that combines various ingredients to form concrete. Some of these inputs include water, air, admixtures, sand, aggregate (rocks, gravel, etc.), fly ash, silica fume, slag, and cement. There are two main types of concrete plants: Dry mix plants and Wet mix plants, and also plants that contain both a transit mix side and a central mix side while utilizing common material storage points. A concrete plant can have a variety of parts and accessories, including: mixers (either tilt drum or horizontal or in some cases both), cement <b>batchers,</b> aggregate <b>batchers,</b> conveyors, radial stackers, aggregate bins, cement bins, heaters, chillers, cement silos, batch plant controls, and dust collectors.|$|R
50|$|In 1990, <b>Batcher</b> {{was awarded}} the ACM/IEEE Eckert-Mauchly Award for his {{pioneering}} work on parallel computers. He holds 14 patents.|$|E
5000|$|<b>Batcher</b> {{is known}} for his half-serious, half-humorous {{definition}} that [...] "A supercomputer is a device for turning compute-bound problems into I/O-bound problems." ...|$|E
50|$|Started in 1905 and {{completed}} in 1907, {{the building was}} originally intended to house commercial businesses such as grocery, dry goods, and hardware. Charles Edward <b>Batcher,</b> the owner and probable architect, halted construction {{for more than a}} year until it was clear that another new building in town, raised by the local Odd Fellows, would not include an opera house. <b>Batcher</b> then decided to include an opera house and restarted construction in the spring of 1907, adding a third story to the design. Yet another new building in town, by Thomas J. Sharkey, did add an opera house, which opened as Sharkey's Opera House at about the same time as the <b>Batcher</b> Opera House opened. Batcher's Opera House was the more influential of the two, and though Sharkey's continued as an entertainment venue, it was lost to fire in 1918.|$|E
40|$|This {{paper is}} {{concerned}} with the average running time of <b>Batcher's</b> odd-even merge sort when implemented on a collection of processors. We consider the case where n, the size of the input, is an arbitrary multiple of the number p of processors used. We show that <b>Batcher's</b> odd-even merge (for two sorted lists of length n each) can be implemented to run in time O((n/p) ((2 +p^ 2 /n))) on the average, and that odd-even merge sort can be implemented to run in time O((n/p) (n+ p (2 +p^ 2 /n))) on the average. In the case of merging (sorting), the average is taken over all possible outcomes of the merging (all possible permutations of n elements). That means that odd-even merge and odd-even merge sort have an optimal average running time if n≥ p^ 2. The constants involved are also quite small...|$|R
40|$|We {{consider}} {{the problem of}} merging two sorted sequences on constant degree networks using comparators only. The classical {{solution to the problem}} are the networks based on <b>Batcher’s</b> Odd-Even Merge and Bitonic Merge running in log(2 n) time. Due to the obvious log n lower bound for the runtime, this is timeoptimal. We present new merging networks that have a novel property of being periodic: for some (small) constant k, each processing unit of the network performs the same operations at steps t and t+k (as long as t+k does not exceed the runtime.) The only operations executed are compare-exchange operations, just like {{in the case of the}} <b>Batcher’s</b> networks. The architecture of the networks is very simple, easy to be laid out. The runtimes achieved are c · log n, for a small constant c...|$|R
40|$|AbstractWe present {{transformation}} {{rules to}} parallelize divide-and-conquer (DC) algorithms over powerlists. These rules convert the parallel control structure of DC into a sequential control flow, thereby making the implicit massive data parallelism in a DC scheme explicit. The results given here are illustrated by many examples including Fast Fourier Transform and <b>Batcher's</b> bitonic sort...|$|R
50|$|A related {{but more}} {{efficient}} sort algorithm is the <b>Batcher</b> odd-even mergesort, using compare-exchange operations and perfect-shuffle operations.Batcher's method is efficient on parallel processors with long-range connections.|$|E
5000|$|In 2007, <b>Batcher</b> {{was awarded}} the IEEE Seymour Cray Computer Engineering Award; [...] "For {{fundamental}} theoretical and practical contributions to massively parallel computation, including parallel sorting algorithms, interconnection networks, and pioneering designs of the STARAN and MPP computers." ...|$|E
5000|$|Hansgeorg <b>Bätcher</b> (13 January 1914 - 23 April 2003) was {{a highly}} {{decorated}} bomber pilot in the Luftwaffe of Nazi Germany during World War II. He was a recipients of the Knight's Cross of the Iron Cross with Oak Leaves.|$|E
40|$|Parallel {{algorithms}} can {{be derived}} from formal problem specifications by applying a sequence of transformations that embody information about algorithms, data structures, and optimization techniques. The KIDS system provides automated support for this approach to algorithm design. This paper carries through the salient parts of a formal derivation for a well-known parallel sorting algorithm [...] <b>Batcher's</b> Even-Odd sort. The main difficulty lies in building up the problem domain theory within which the algorithm is inferred. 1 Introduction This paper is intended as an introduction to formal and automated design of parallel algorithms. The level of formality is somewhat lessened in order to concentrate on the main issues. We derive <b>Batcher's</b> Odd-Even sort [2] and discuss the derivation of several other well-known parallel sorting algorithms. Algorithms can be treated as a highly optimized composition of information about the problem being solved, algorithm paradigms, data structures, targ [...] ...|$|R
40|$|AbstractThis paper {{presents}} a deterministic sorting algorithm, called Sharesort, that sorts n records on an n-processor hypercube, shuffle-exchange, or cube-connected cycles in O(log n(log log n) 2) {{time in the}} worst case. The algorithm requires only a constant amount of storage at each processor. The fastest previous deterministic algorithm for this problem was <b>Batcher's</b> bitonic sort, which runs in O(log 2 n) time...|$|R
40|$|<b>Batcher's</b> bitonic sort (cf. Knuth, v. III, pp. 232 ff) is a sorting network, {{capable of}} sorting n inputs in Q((log n) 2) stages. When adapted to {{conventional}} computers, it {{gives rise to}} an algorithm that runs in time Q(n(log n) 2). The method can also be adapted to ultracomputers (Schwartz [1979]) to exploit their high degree of parallelism. The resulting algorithm will take time Q((log N) 2) for ultracomputers of "size" N. The implicit constant factor is low, so that even for moderate values of N the ultracomputer architecture performs faster than the Q(N log N) time conventional architecture can achieve. The purpose of this note is to describe the adapted algorithm. After some preliminaries a first version of the algorithm is given whose correctness is easily shown. Next, this algorithm is transformed to make it suitable for an ultracomputer. 1. Introduction <b>Batcher's</b> bitonic sort (cf. Knuth, v. III, pp. 232 ff) is a sorting network, capable of sorting n inputs in Q((log n [...] ...|$|R
5000|$|Thomas Latimer {{had worked}} for Ready Mixed Concrete Ltd as a yard <b>batcher</b> from 1959 to 1963. The company {{delivered}} concrete, but had a policy of hiring independent contractor businesses to do the haulage because according to their policy documents, this allows ...|$|E
5000|$|Bitonic mergesort is a {{parallel}} algorithm for sorting. It {{is also used}} as a construction method for building a sorting network. The algorithm was devised by Ken <b>Batcher.</b> The resulting sorting networks consist of [...] comparators and have a delay of , where [...] {{is the number of}} items to be sorted.|$|E
5000|$|Hunt's fourth book, {{released}} in December 2014, is [...] "The Kennedy Wives: Triumph and Tragedy in America's Most Public Family," [...] co-written with longtime friend David <b>Batcher.</b> The {{book was a}} New York Times and Wall Street Journal bestseller. As of Dec. 11, 2014, it had a 4.5 rating on Goodreads.|$|E
40|$|Timing {{comparisons}} are given for three sorting algorithms {{written for the}} CDC STAR computer. One algorithm is Hoare's (1962) Quicksort, which is the fastest or nearly the fastest sorting algorithm for most computers. A second algorithm is a vector version of Quicksort that {{takes advantage of the}} STAR's vector operations. The third algorithm is an adaptation of <b>Batcher's</b> (1968) sorting algorithm, which makes especially good use of vector operations but has a complexity of N(log N) -squared as compared with a complexity of N log N for the Quicksort algorithms. In spite of its worse complexity, <b>Batcher's</b> sorting algorithm is competitive with the serial version of Quicksort for vectors up to the largest that can be treated by STAR. Vector Quicksort outperforms the other two algorithms and is generally preferred. These results indicate that unusual instruction sets can introduce biases in program execution time that counter results predicted by worst-case asymptotic complexity analysis...|$|R
40|$|Many data {{parallel}} algorithms – Fast Fourier Transform, <b>Batcher’s</b> sorting {{schemes and}} prefixsum – exhibit recursive structure. We propose a data structure, powerlist, that permits succinct descriptions of such algorithms, highlighting {{the roles of}} both parallelism and recursion. Simple algebraic properties of this data structure can be exploited to derive properties of these algorithms and establish equivalence of different algorithms that solve the same problem...|$|R
40|$|In a multicenter {{study on}} the {{occupational}} etiology of sinonasal cancer (s. n. c.) carried out in Italy, we collected information about three cases which had arisen among glass workers: an adenocarcinoma, a melanoma, and a squamocellular carcinoma. The three men worked many years as mixers and/or <b>batchers</b> in artistic glass factories in Tuscany (Italy). We propose a possible etiological role of arsenic dust...|$|R
50|$|The <b>Batcher</b> Opera House Block is a {{historic}} 1907 building located in downtown Staples, Minnesota, United States. It contained commercial business {{on the first floor}} and an opera house on the 2nd floor. The opera house was an entertainment venue that featured live theater productions from 1907 until the 1920s. It was placed on the National Register of Historic Places in 2004.|$|E
5000|$|For small, fixed {{numbers of}} inputs , optimal sorting {{networks}} can be constructed, with either minimal depth (for maximally parallel execution) or minimal size (number of comparators). These networks {{can be used}} to increase the performance of larger sorting networks resulting from the recursive constructions of, e.g., <b>Batcher,</b> by halting the recursion early and inserting optimal nets as base cases. The following table summarizes the known optimality results: ...|$|E
5000|$|Batcher's odd-even mergesort is {{a generic}} {{construction}} devised by Ken <b>Batcher</b> for sorting networks of size O(n (log n)2) and depth O((log n)2), where n {{is the number}} of items to be sorted. Although it is not asymptotically optimal, Knuth concluded in 1998, with respect to the AKS network that [...] "Batcher's method is much better, unless n exceeds the total memory capacity of all computers on earth!" ...|$|E
40|$|We prove an (lg 2 n = lg lg n) {{lower bound}} for the depth of n-input sorting {{networks}} based on the shue permutation. The best previously known lower bound was the trivial (lgn) bound, while the best upper bound is given by <b>Batcher's</b> (lg 2 n) -depth bitonic sorting network. The proof technique employed in the lower bound argument may be of independent interest. ...|$|R
40|$|In this paper, we {{concentrate}} {{on the problem of}} computing a Voronoi diagram using Hypercube model of computation. The main contribution of this work is the O(log³ n) parallel algorithm for computing Voronoi diagram on the Euclidean plane. Our technique parallelizes the wellknown seemingly inherent sequential technique of Shamos and Hoey, and makes use of a number of special properties of the dividing polygonal chain and the <b>Batchers</b> bitonic sort...|$|R
40|$|We {{consider}} {{the problem of}} merging two sorted sequences on constant degree networks performing compare-exchange operations only. The classical {{solution to this problem}} is given by the networks based on <b>Batcher's</b> Odd-Even Merge and Bitonic Merge running in log(2 n) time. Due to the obvious log n lower bound for the runtime, this is timeoptimal. We present a new family of merging networks working in a complete different way as the previously known algorithms. They have a novel property of being periodic: this means that for some (small) constant k, each processing unit of the network performs the same operations at steps t and t + k (as long as t + k does not exceed the runtime.) The only operations executed are compare-exchange operations, just like {{in the case of the}} <b>Batcher's</b> networks. The architecture of the networks is very simple, easy to be laid out. We show that even for period 3 there is a network in our family merging two n-element sorted sequences in time O(log n). Since ea [...] ...|$|R
