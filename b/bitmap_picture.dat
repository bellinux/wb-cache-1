3|12|Public
5000|$|Programs that convert bitmaps with {{colors to}} a C128 HIRES or Multi-Color {{compatible}} format {{use the same}} basic logic as the example below, with additional logic to organize the color map. Under Windows on the IBM PC these converted images can then be inserted into C128 [...] "disk images" [...] used by C128 emulators and loaded by programs similar to the C128 Basic 7 programs shown above.// This source code is herewith released by me into the Public Domain.// Bill Buckels, August 25, 2007int SaveFragmentToC64(char *name,char *printshopbuffer){ // creates a banded C64 image from an 88 x 52 monochrome bitmap // ("old printshop" [...] graphic format) which can be bloaded on the C64 // and centered relative to the default screen address at $2000 // the image is padded by 4 scanlines on the bottom to adjust // for C64 block increments of 8 scanlines. // space is padded to {{both sides of the}} image to provide a contiguous load // and for consistency which results in an image of 320 x 56 in actual size. int fh; unsigned char header2; unsigned char buffer320; unsigned x, y, y1, idx, offset, inset; // create in subdirectory if possible _mkdir("c1541"); _chdir("c1541");#ifndef S_IWRITE#define S_IWRITE 0000200 // write permission, owner#endifif((fh = _open(name,O_CREAT|O_TRUNC|O_WRONLY|O_BINARY,S_IWRITE)) == -1) { _chdir(".."); return FAILURE; } // create load address to center on C64 screen header0 = 0x4E; // offset into screen = 72 x 40 = 2880 + 14 + 8192 ($2000) header1 = 0x2B; _write(fh,(char *)&header0,2); // 14 + 11 + 15 = 40 byte scanline // <b>bitmap</b> <b>picture</b> height = 52 scanlines // C64 image height = 56 scanlines // 7 bands of 320 bytes instead of the usual 25 // each band holds 8 scanlines from the original bitmap // except the last one which holds only 4 for (y = 0; y < 7; y++) { // pad the band with blackspace for (idx = 0; idx < 320; idx++)bufferidx = 0; y1 = y * 8 * 11; inset = 8 * 14; for (x = 0; x < 11; x++) { for (idx = 0; idx < 8; idx++) { offset = y1 + (idx * 11) + x; // down 8, across 11 times if (y == 6 && idx > 3) { // the last band only has 4 rasters // skip reading the last 4 inset ++; continue; } bufferinset = printshopbufferoffset; inset ++; } } // band was created so write it out // clip the padding at {{the top and bottom of}} the C64 image // so it can be optionally loaded anywhere on C64 screen // including to top left or bottom right of C64 screen if (y == 0) _write(fh,(char *)&buffer14,(320-14)); // top else if (y==6) _write(fh,(char *)&buffer0,(320-15)); // bottom else _write(fh,(char *)&buffer0,320); } _close(fh); _chdir(".."); return SUCCESS;} ...|$|E
40|$|In {{this work}} we study {{algorithms}} for visualization of sociomaps. We focus on surface-fitting method which converts <b>bitmap</b> <b>picture</b> into {{a sequence of}} closed spline curves. For curve-fitting, we describe tracing algorithm that for a given level of height in a smooth surface finds a contour as a closed BÃ©zier curve. Further we describe algorithm that draws hierarchy of clusters into a 2 D plane. We first create a skeleton of the cluster analysis which we then project into a plane using curve-fitting method. We describe methods of interpolation of surface based on inverse distances weights and also we present a linear interpolation based on Delanauy triangulation. We apply these methods on sociomappig analysis. Sociomapping is a data-mining method for visualization of relations among objects as well as analyzing statistical data. The result of sociomapping analysis is an easy-to-read picture - a sociomap. We explain cluster analysis for model of a sociomap and also we describe statistical test based on fuzzy approach...|$|E
40|$|The aim of {{this thesis}} is to design and {{implement}} an optical simulator focused on spectral light sources and dispersion effects, suitable for educational and experimental purposes. The input of the simulation is an XML scene definition file describing light sources, optical elements and optical sheets. The result of the simulation is one or more pictures containing incident light footprints collected on optical sheets as well as side sheets observing scene from a distance along with track of light passing through the scene. A light source {{can be defined as}} a point light with user-defined spectral distribution or a bitmap light using input <b>bitmap</b> <b>picture</b> as a glowing texture. The shape of any optical element can be defined as a basic solid, or constructed using CSG techniques. The scene definition file specification allows using of arithmetic expressions and user-defined variables. The simulation is based on a distribution of light from light sources toward the scene using a Monte-Carlo algorithm. Behaviour of light incident onto a transparent boundary is computed precisely according to the geometry of an element; a paraxial ray approximation is not used...|$|E
50|$|The game {{presents}} <b>bitmapped</b> <b>pictures</b> of {{the real}} movie actors, such as Harrison Ford and Sean Connery.|$|R
40|$|In {{this work}} we propose {{a method of}} {{automatic}} content-based <b>bitmap</b> <b>pictures</b> classification into classes like buildings, landscapes, photographs etc. The method uses concepts of the machine learning, concretely the mechanism of a decision tree. We extract characteristics like the contrast, the distribution of colors, the presence of straight lines. On {{the basis of these}} characteristics the decision tree is built using the algorithm ID 3. Creation of the program, which allows operations with the database of images based on the classification results - retrieval, sorting into directories etc. is also a part of the work. The method shows rate 75 - 85 % correct within the classes...|$|R
50|$|The {{application}} could convert VHS {{tapes to}} DVD or video CDs, and could capture screen shots from a program, and save {{them as a}} digital <b>picture</b> (<b>Bitmap</b> file) to a hard drive.|$|R
40|$|Abstract: Signwriting's {{thesaurus}} is very large. It {{consists of}} 425 basic symbols, split in 60 groups from 10 categories. Each basic symbol can have 4 different representations, 6 different fillings and 16 different spatial rotations. While signwriting {{is more and}} more used by the deaf community, it currently lacks a complete and platform neutral computer support to let signwriters share documents regardless the applications and the underlying operating system they may be using. Based on previous research, various propositions have been made, resulting in multiple incompatible systems. The main problem currently is the lack of a consistent basis upon which compatibility could be built: the most advanced and used system, SWML [1], is multiplatform thanks to Java but requires dedicated applications like the previous attempts. Moreover, the use of XML based representation requires dozens of lines of code for each symbol, resulting in oversized files which can not be parsed, used or read with standard tools. XML linking to <b>bitmap</b> <b>pictures</b> for on-screen representation prevents the integration of a real font system, needed for a tru...|$|R
40|$|The {{collection}} and concentration of REE minerals from fluvial and Galician coastal sands were performed by gravimetric, electrostatic and magnetic methods. The second step {{was carried out}} under the polarizing microscope by the dull procedure of separating each grain mineral, by hand with a steel-needle, up to 32 different mineral species from the same concentrate that were later identified by the XRD, EMPA and XRF techniques. Finally, in the third step, an automatic mineral identification is proposed using image software (SigmaScan Pro 5. 0) with <b>bitmap</b> <b>pictures</b> of the mineral grains taken by a Nikon Coolpix 950 camera coupled to a microscope Nikon Eclipse E 600 -POL. The counting of grains and the measurement of geometrical factor, size, colour or B/W is automatic. The program allows recording up to different 50 measurements for each grain, however only colour or BW status and geometric factor are valuable to mineralogical identification. The automatic analytical routine needs to be supported on the mineralogical background obtained by the former data of XRD, EMPA and XRF. The technique is proposed for specific detrital mineral research in which the counting ratio of mineral number is needed (garnet, ilmenite, diamond, corundum). Peer Reviewe...|$|R
25|$|Use of Microsoft Object Linking and Embedding (OLE) objects limits interoperability, {{because these}} objects are not widely {{supported}} in programs for viewing or editing files (e.g. embedding of other files inside the file, such as tables or charts from a spreadsheet application {{in a text}} document or presentation file). If software that understands an OLE object is not available, the object is usually replaced by a <b>picture</b> (<b>bitmap</b> representation of the object) or not displayed at all.|$|R
40|$|There {{are various}} types of {{recognition}} available that are face recognition, digit recognition and many more. Various techniques used to recognize pattern such as Neural Network (NN), Genetic Algorithm (GA) and others. This project focuses on isolated digit recognition using GA as the recognition technique. The objective of the project {{is to determine the}} best performance rate between two types of images that are 16 x 16 images and 32 x 32 images with different type of encoding scheme and crossover rate and also to determine the best crossover rates between 0. 6, 0. 7 and O. S. The project is based on a series of experiments that compare performance rate to recognize digit using GA. There are three sources of data involved in the project that are using MNIST database, USPS database and researcher's own data. The data will be in a form of <b>bitmap</b> <b>pictures</b> with 16 x 16 images and 32 x 32 images. In the algorithm, two types of encoding scheme used that are binary encoding and permutation encoding. The type of crossover used is one-point crossover with multiple rates that are 0. 6, 0. 7 and 0. 8 and the type mutation used is inversion with the rate of 0. 01. There are four types of experiment that have been conducted. Firstly, 16 x 16 images represented in binary encoding with different crossover rates. Secondly, 16 x 16 images represented in permutation encoding with different crossover rates. Thirdly, 32 x 32 images represented in binary encoding with different crossover rates. Lastly, 32 x 32 images represented in permutation encodmg with different crossover rates. From the experiment made, it was showed that the best performance to recognize a digit is S hours and 41 minutes for 16 x 16 images using binary encoding and 0. 7 crossover rate. The best crossover rate among the three rates that is being tested is 0. 7. The result of this research shows that the performance rate can be improved {{so that it can be}} implemented in various field...|$|R
40|$|Picture {{which used}} many to a {{collection}} by otentifikasi make a document {{which is very}} worth which can be kept depicting aktifitas or a memory and remind will event. Depository of picture can {{in the form of}} bitmap file represent a text file document in the form of bmp, jpeg. All most picture can modify with processing return by expurgation in the form of renewing contrast, modification and also colour trigging up picture or photo with a purpose to do editing so that some part which is not fair become is better. Pemodifikasian draw in general to do the photo appearance become better but sometimes the existence of some importance to modify picture or photo for the sake of other like modifying photo and picture for the things of which is negative take example to change face picture or body one with body or picture or other shares which non part of the photo so that with modified by negative for the purpose of harming and even photograph pornography which is many in modification for the purpose of certain so that many victim. Keywords : <b>Picture,</b> <b>Bitmap,</b> Modification, Photo, Contra...|$|R
40|$|Both LAT E X and HTML are {{languages}} {{that can}} express {{the structure of}} a document, and similarities between these two systems are shown. A detailed study is made of the La-TeX 2 HTML program, written by Nikos Drakos, that is today the most complete utility for translating LAT E X code into HTML, providing a quasi-automatic translation for most elements. A discussion of a few other tools for translating between HTML and LATEX concludes the article. 1 Similarities between LATEX and HTML HTML and LATEX are both generic markup systems, and a comparison between tags for structural elements in both cases is shown in Table 1. In most cases the di erences are trivial, seeming to indicate that, at rst approximation, translating between these two systems should not prove too di cult. The translation programs described in this article use these similarities, but in order to exploit the richness of the LAT EX language as compared to HTML (especially HTML 2, which has no support for tables or mathematics), an ad hoc approach has to be adopted. To handle correctly LATEX commands that have no equivalent in HTML, such elements can either be transformed into <b>bitmap</b> or PostScript <b>pictures</b> (an approach taken by LaTeX 2 HTML), or the user can specify how the given element should be handled in the target language...|$|R

