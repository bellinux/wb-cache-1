37|79|Public
2500|$|A large {{collection}} of artwork and photographic imagery {{are also available}} (under a license allowing free redistribution), and may be placed inside drawings using Tux Paint's [...] "Rubber Stamp" [...] tool. Stamps can be in either raster (<b>bitmap)</b> <b>format</b> (in PNG format, supporting 24bpp and full alpha transparency), or as vector graphics (in SVG format) on many platforms Tux Paint supports. As of mid-2008, over 800 stamps {{are included in the}} stamps collection.|$|E
5000|$|Wireless Application Protocol <b>Bitmap</b> <b>Format</b> (shortened to Wireless Bitmap {{and with}} file {{extension}} [...]wbmp) is a monochrome graphics file format optimized for mobile computing devices.|$|E
50|$|A WMS server usually {{serves the}} map in a <b>bitmap</b> <b>format,</b> e.g. PNG, GIF or JPEG. In addition, vector {{graphics}} can be included: such as points, lines, curves and text, expressed in SVG or WebCGM format.|$|E
50|$|The {{input of}} photoplotters is a vector {{graphics}} file, typically in Gerber Format. Some photoplotters also accept <b>bitmap</b> <b>formats</b> such as TIFF.|$|R
50|$|The dumps {{are larger}} in size than files in most image file formats - not only {{compressed}} formats such as PNG, but also uncompressed <b>bitmap</b> <b>formats</b> like BMP.|$|R
50|$|Because {{of their}} fixed resolution, {{printing}} bitmap images can easily produce grainy, jaggy, or blurry results if the resolution is not {{ideally suited to}} the printer resolution. In addition, bitmap images become grainy when they are scaled larger than their intended resolution. A few <b>bitmap</b> file <b>formats</b> (such as Apple's PICT format) support alpha channels, which allow bitmap images to have transparent backgrounds or an image selection which uses antialiasing. Most common web-based file formats such as GIF, JPEG, and PNG are <b>bitmap</b> file <b>formats.</b> The GIF file format {{is one of the}} simplest, low-resolution <b>bitmap</b> file <b>formats,</b> only supporting 256 colors per image. As a result, however, GIF files can be extremely small in file size. Other common <b>bitmap</b> file <b>formats</b> are BMP (Windows bitmap), TGA, and TIFF. Most clip art is provided in a low resolution, <b>bitmap</b> file <b>format</b> which is unsuitable for scaling, transparent backgrounds, or good-quality printed materials. However, <b>bitmap</b> file <b>formats</b> are ideal for photos, especially when combined with lossy data compression algorithms such as those available for JPEG files.|$|R
5000|$|The OTA <b>Bitmap</b> <b>format</b> is a monochrome, {{uncompressed}} format {{using one}} bit per pixel. As the format {{was designed for}} cellular phones, there is no standard computer format. It may be stored as a binary file or as hex (usually without spaces) in a text file. Recognized extension is [...]otb.|$|E
50|$|One 1K bank allowed {{redefinition}} {{of most of}} its 128 ASCII based characters in 8&times;8 pixel <b>bitmap</b> <b>format.</b> The other 1K bank stored the full screen display of 24 rows × 32 columns of characters in black and white. Colour could be achieved as expansion. Although a colour graphics board was designed none was ever produced commercially.|$|E
50|$|A Netpbm {{format is}} any {{graphics}} format used and {{defined by the}} Netpbm project.The portable pixmap format (PPM), the portable graymap format (PGM) and the portable <b>bitmap</b> <b>format</b> (PBM) are image file formats designed to be easily exchanged between platforms. They are also sometimes referred to collectively as the portable anymap format (PNM), {{not to be confused}} with the related portable arbitrary map format.|$|E
25|$|Word can import {{and display}} images in common <b>bitmap</b> <b>formats</b> such as JPG and GIF. It {{can also be}} used to create and display simple line-art. No version of Microsoft Word has support for the common SVG vector image format.|$|R
50|$|COM-1. The player {{supports}} the MP3, WMA (secured and unsecured) and ATRAC 3 audio formats. The image viewer supports JPG, PNG, and <b>Bitmap</b> <b>formats.</b> The video player {{supports the}} MPEG-4/AAC video format. The text application {{is a simple}} text editor.|$|R
50|$|Word can import {{and display}} images in common <b>bitmap</b> <b>formats</b> such as JPG and GIF. It {{can also be}} used to create and display simple line-art. No version of Microsoft Word has support for the common SVG vector image format.|$|R
5000|$|A large {{collection}} of artwork and photographic imagery {{are also available}} (under a license allowing free redistribution), and may be placed inside drawings using Tux Paint's [...] "Rubber Stamp" [...] tool. Stamps can be in either raster (<b>bitmap)</b> <b>format</b> (in PNG format, supporting 24bpp and full alpha transparency), or as vector graphics (in SVG format) on many platforms Tux Paint supports. As of mid-2008, over 800 stamps {{are included in the}} stamps collection.|$|E
50|$|Nowadays, color {{quantization}} {{is mainly}} used in GIF and PNG images. GIF, {{for a long}} time the most popular lossless and animated <b>bitmap</b> <b>format</b> on the World Wide Web, only supports up to 256 colors, necessitating quantization for many images. Some early web browsers constrained images to use a specific palette known as the web colors, leading to severe degradation in quality compared to optimized palettes. PNG images support 24-bit color, but can often be made much smaller in filesize without much visual degradation by application of color quantization, since PNG files use fewer bits per pixel for palettized images.|$|E
50|$|Pivotal {{conversion}} {{is similarly}} {{used in other}} areas. Office applications, when employed to convert between office file formats, use their internal, default file format as a pivot. For example, a word processor may convert an RTF file to a WordPerfect file by converting the RTF to OpenDocument and then that to WordPerfect format. An image conversion program does not convert a PCX image to PNG directly; instead, when loading the PCX image, it decodes it to a simple <b>bitmap</b> <b>format</b> for internal use in memory, and when commanded to convert to PNG, that memory image is converted to the target format. An audio converter that converts from FLAC to AAC decodes the source file to raw PCM data in memory first, and then performs the lossy AAC compression on that memory image to produce the target file.|$|E
50|$|The {{input to}} {{vectorization}} is an image, but an image {{may come in}} many forms such as a photograph, a drawing on paper, or one of several raster file formats. Programs that do raster-to-vector conversion may accept <b>bitmap</b> <b>formats</b> such as TIFF, BMP and PNG.|$|R
50|$|The program’s RAW module enables {{conversion}} of RAW-format data into files in standard <b>bitmap</b> <b>formats.</b> The native support {{does not cover}} all the newest cameras at any given moment, but can be expanded to support them by integrating a free DNG converter. Version 17 of the program added support for automatic lens defect corrections during development using LCP profiles.|$|R
5000|$|PhotoLine {{is mainly}} a raster {{graphics}} editor but {{also offers a}} comprehensive set of vector drawing tools including multiple paths per layer, layer groups, color management and full color space support including CMYK and Lab color spaces, and multipage documents. PhotoLine can import and export PDF and SVG files {{as well as all}} major <b>bitmap</b> <b>formats.</b>|$|R
5000|$|The Sansa e200 {{series is}} a {{portable}} media player developed by SanDisk, and released on January 5, 2006. The device {{is available in}} four capacities of Flash memory: 2 GB (e250), 4 GB (e260), 6 GB (e270), and 8 GB (e280). All players have a 1.8-inch, TFT LCD display with a resolution of 176 by 220 pixels. Certain files, if not in a format accepted by the player, must first be converted with the Sansa Media Converter Windows software. This will convert images to <b>bitmap</b> <b>format</b> (.bmp) and videos to MJPEG (in a [...]mov container), for v1 models. On v2 players it will convert videos to DivX and simply resize images. It {{is not possible to}} simply copy videos to the device, even if they seem to be in the correct format; trying to access them displays an error message.|$|E
50|$|For vector images, {{there is}} no {{equivalent}} of resampling an image when it is resized, and {{there is no}} PPI in the file because it is resolution independent (prints equally well at all sizes). However, there is still a target printing size. Some image formats, such as Photoshop format, can contain both bitmap and vector data in the same file. Adjusting the PPI in a Photoshop file will change the intended printing size of the bitmap portion of the data and also change the intended printing size of the vector data to match. This way the vector and bitmap data maintain a consistent size relationship when the target printing size is changed. Text stored as outline fonts in bitmap image formats is handled in the same way. Other formats, such as PDF, are primarily vector formats which can contain images, potentially at a mixture of resolutions. In these formats the target PPI of the bitmaps is adjusted to match when the target print size of the file is changed. This is the converse of how it works in a primarily <b>bitmap</b> <b>format</b> like Photoshop, but has exactly the same result of maintaining the relationship between the vector and bitmap portions of the data.|$|E
5000|$|The Sansa c200 series {{can play}} MP3, WMA, and WAV audio files and reads audio file tags to display song {{information}} such as album, artist, title and album art. c200 series players automatically sort music files into a library by tag users can browse their music by artist, album, track, genre, or year. Version 2 of the c200 firmware also supports Audible's [...]AA format. The player also allows users to shuffle music playlists as well as create their own. C200 series players support viewing image files in either JPEG or <b>bitmap</b> <b>format,</b> and allow users to organize photos into albums and view photo slide-shows. The c200 series features a microphone built into {{one end of the}} player; users can make voice recordings that save as WAV files in the RECORD directory on the player. An FM radio is built into the c200, the player uses the headphones as a radio antenna, so reception varies. Recordings can be made from the FM radio and are stored in the RECORD directory on the player. The c200 series features SanDisk's trademark micro SD card slot. A micro SD card up to 2 GB in capacity can be inserted into this slot on the c200 in order to increase the player's music storage limit. The battery is easily replaceable and requires no tools, allowing users to keep an extra battery and swap them out on the go.|$|E
50|$|Scribus {{supports}} {{most major}} <b>bitmap</b> <b>formats,</b> including TIFF, JPEG, and Adobe Photoshop. Vector drawings can be imported or directly opened for editing. The {{long list of}} supported formats includes Encapsulated PostScript, SVG, Adobe Illustrator, and Xfig. Professional type/image-setting features include CMYK colors and ICC color management. It has a built-in scripting engine using Python. It is available in more than 24 languages.|$|R
5000|$|The LBM file {{extension}} {{is an image}} file in Interchange File Format (IFF) structure to store image or palette data. Most commonly you can find these files in InterLeaved <b>BitMap</b> (ILBM) <b>format,</b> but some games are using a similar, but simpler-to-use Planar <b>BitMap</b> (PBM) <b>format.</b> Both formats commonly exist under the [...]lbm {{file extension}}, occasionally appearing also as [...]bbm extension.|$|R
40|$|This thesis {{deals with}} {{creating}} graphs in application UGE (Universal graphic editor) and facilities it offers for plugins programmers. Goal of the thesis is to design UGML (UGE Graph Markup Language) data format, implement plugin for importing/exporting graph, implement SVG graphic format export and export into several <b>bitmap</b> <b>formats.</b> Thesis extends particular parts of application, especially API (application program interface) and manipulating graphical representation of objects...|$|R
50|$|TrueType/OpenType: Support of OpenType 1.3 formats 8, 10, 12 {{was added}} in 2.0.5. Support of TrueType or OpenType fonts {{embedded}} in PDF documents without 'cmap', 'post' and 'name' was added in 2.0.8. Support of fonts with broken name tables with invalid entries and wild offsets was added in 2.0.9. Support certain 'broken' fonts that load under Windows without problems in 2.1.3. Support for TrueType tables without a 'hmtx' table when using incremental interface was added in 2.1.4-rc1, {{and the depth}} of composite glyphs is limited. Support for tables 'avar', 'cvar', 'fvar', and 'gvar' was added in 2.1.9. Setting family and style in SFNT fonts is handled by TT_NAME_ID_PREFERRED_FAMILY and TT_NAME_ID_PREFERRED_SUBFAMILY strings in 2.1.10. In 2.1.10, FT_Sfnt_Table_Info API was added to retrieve name and size information of SFNT tables, and API FT_OpenType_Validate was added to validate OpenType tables (BASE, GDEF, GPOS, GSUB, JSTF). Bit 1 in the 'head' table of TrueType fonts is supported in FreeType 2.2. Support of loading TrueType name encoded in UTF-16 was added in 2.3.0, and TrueTypeGX validator (gxvalid) started checking the order of glyph IDs in the kern table. Microsoft Unicode cmaps in TrueType fonts became preferred over Apple cmaps by default in 2.3.6. 'MATH' OpenType table validation and cmap 14 support were added in 2.3.6. Ability to pass the dropout mode to the B&W rasterizer was added in 2.3.7. Experimental Type 1 and CID-keyed Type 1 fonts in an SFNT wrapper was added in 2.3.8 (tables 'TYP1' and 'CID ' are passed to the PS Type 1 and CID-keyed PS font drivers). Support for SFNT cmap 13 table format was added in 2.3.10. Support of TrueType fonts without family name via detection of lengths and checksums of Type42-persistent subtables ('cvt ', 'fpgm', and 'prep') was added in 2.4.4, as well as proper support of UVS (TrueType/OpenType cmap format 14). Support for OpenType collections and CFF fonts within an SFNT wrapper are added in 2.4.11. Support of 'CBDT', 'CBLC' tables (embedded coloured bitmaps) were added in 2.5.0. Support of Apple's 'sbix' color <b>bitmap</b> <b>format,</b> and 'OS/2' SFNT table version 5 were added in 2.5.1. In 2.6, advance widths and side bearing values in CFFs (wrapped in an SFNT structure) are now always taken from the 'hmtx' table, and PostScript font name of a CFF font (wrapped in an SFNT structure) is now always taken from the 'name' table. Support of CFF2 font format from OpenType 1.8 was added in 2.7.1. Support for 'VVAR' and 'MVAR' tables (also enabled support of OpenType Variation Fonts), 'Format 1' SFNT 'name' table, OpenType version 1.8.1 were added in 2.8.|$|E
30|$|In {{order to}} verify the {{correctness}} and robustness of this method, the second data in this paper comes from life, using life pictures taken by MI 4, including vehicle, building, and landscape, 200 photos of each type, the picture size is 92 [*]×[*] 112, and the picture is converted to BMP (<b>Bitmap)</b> <b>format</b> using JPEG (Joint Photographic experts group).|$|E
30|$|There are 200 {{images of}} life {{taken by the}} mobile MI 4, and the image size is 92 [*]×  112. The image is {{converted}} into a BMP (<b>Bitmap)</b> <b>format</b> by a JPEG (Joint Photographic Experts Group). In order to avoid specific features, we divided the subjects’ samples into 10 -cross fold methods and divided 200 samples into 10 samples. One sample {{was used as a}} test sample, and 9 samples were used as training samples.|$|E
50|$|JEDMICS C4 and CALS are raster (<b>bitmap)</b> image <b>formats</b> {{developed}} by the US Department of Defense for military use.|$|R
5000|$|Portable Network Graphics (PNG) (a <b>bitmapped</b> image <b>format</b> {{that employs}} {{lossless}} data compression, approved by ISO as ISO/IEC 15948:2004) ...|$|R
50|$|XPaint {{features}} {{a substantial number}} of standard (and less standard) paint operations. It allows for editing and browsing multiple images simultaneously, and supports most of the common <b>bitmap</b> <b>formats,</b> including PNG, GIF, TIFF, TGA, PPM, XPM, XBM, BMP, ICO, JPEG, JPEG2000, PGF etc. It can also read and import certain vector formats such as PostScript, PDF, SVG, as well as plain text or TeX, LaTeX files (whenever a TeX system and PostScript/PDF utilities are installed).|$|R
40|$|Abstract. With {{the road}} construction, an {{automatic}} detection of road surface of rutting {{will be the}} main detection methods. VC-based digital imaging detection technology has an advantage of the vehicle, such as a simple structure, amount of data storage capacity, less affected by vehicle vibration. This article based on digital imaging technology detects grayscale <b>bitmap</b> <b>format</b> captured image information of the rutting. It focused on the grayscale bitmap image processing. The article shows that by generating curve can accurately reflect the actual situation of the road. And it can greatly improve the efficiency of road data and the accuracy of automatic detection. ...|$|E
40|$|International audienceAndroid code smells are bad {{implementation}} practices within Android applications (or apps) {{that may}} lead to poor software quality. These code smells are known to degrade the performance of apps and {{to have an impact on}} energy consumption. However, few studies have assessed the positive impact on energy consumption when correcting code smells. In this paper, we therefore propose a tooled and reproducible approach, called Hot-Pepper, to correct automatically code smells and evaluate their impact on energy consumption. Currently, Hot-Pepper is able to correct automatically three types of Android specific code smells (Internal Getter/Setter, Member Ignoring Method, and HashMap Usage). Hot-Pepper derives four versions of the apps by correcting each detected smell independently, and all of them. Hot-Pepper is able to report on the energy consumption of each app version with a single user scenario test. Our empirical study on five open-source Android apps shows that correcting the three aforementioned Android code smells effectively reduce significantly the energy consumption of apps. In particular, we observed a global reduction of the energy consumption of 4, 83 % on one app when the three code smells are corrected. We also take advantage of the flexibility of Hot-Pepper to investigate the impact of three pictures code smells (bad picture format, compression, and <b>bitmap</b> <b>format)</b> in sample apps. We observed that the usage of optimized JPG pictures with the Android default <b>bitmap</b> <b>format</b> is the most energy efficient combination in Android apps. We believe that developers can benefit from our approach and results to guide their refactoring, and thus improve the energy consumption of their mobile apps...|$|E
3000|$|Given that {{packet loss}} {{is the major}} issue for an MPEG- 4 video {{streaming}} application, in our experiments the induced packet loss percentage varied from 0 % to 1.3 %. Above this threshold, the application cannot longer function (i.e., the connection established between the client and the server breaks), and tests cannot be performed. The test setup is depicted in Figure 9 (b): the MPEG- 4 streaming server we used was the Helix streaming server from Real Networks ([URL] and the MPEG- 4 client was mpeg 4 ip ([URL] We modified the source code of the client to record the received video sequence as individual frames in <b>bitmap</b> <b>format.</b> We ran the tests using three widely used video sequences: [...] "football", [...] "female", and [...] "train", MPEG- 4 coded. The video sequences were 10 seconds long, with 250 frames, each of [...]...|$|E
5000|$|... {{the current}} version of BDF is 2.2. No future {{revisions}} are anticipated. Earlier versions were referred to as the Character <b>Bitmap</b> Distribution <b>Format.</b>|$|R
50|$|A fourth format {{known as}} a EPSI {{includes}} an ASCII-encoded preview <b>bitmap.</b> This <b>format</b> allows for black-and-white previews only. It is mainly used on UNIX systems.|$|R
50|$|The GNU Unifont by Roman Czyborra {{is a free}} {{bitmap font}} that covers the entire Unicode Basic Multilingual Plane (BMP), using an {{intermediate}} <b>bitmapped</b> font <b>format.</b>|$|R
