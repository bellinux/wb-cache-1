32|39|Public
50|$|While {{working to}} sell the company, VREAM {{continued}} {{to work on the}} next generation of its VRML authoring and <b>browsing</b> <b>software.</b> After releasing a new version, the company's VRML browser, WIRL, received the PC Magazine Editor's Choice award in November 1996.|$|E
5000|$|JanusVR is a {{corporation}} based in San Mateo, California, and Toronto, Ontario, that develops immersive web <b>browsing</b> <b>software.</b> [...] It {{was founded by}} James McCrae and Karan Singh in December 2014. Named after Janus, the Roman God of passages, JanusVR portrays web content in multi-dimensional spaces interconnected by portals.|$|E
50|$|Tetzchner {{worked at}} the Norwegian state phone company (now known as Telenor) from 1991 to 1995. There, he and Geir Ivarsøy {{developed}} <b>browsing</b> <b>software</b> called MultiTorg Opera. The project was abandoned by Telenor, but Ivarsøy and von Tetzchner obtained {{the rights to the}} software, formed a company named Opera Software in 1995 and continued working on the Opera browser.|$|E
40|$|This {{research}} {{addresses the}} problem of locating software items in extensive libraries. It aims {{to increase the speed}} and accuracy with which a user may <b>browse</b> <b>software</b> libraries for reusable code. The method proposed for this is called active browsing. The system monitors user actions, made within a normal browser, to infer an analogue representing the user's search goal. A relevancy measure is constructed from this analogue and used by the system to scan the library independently of the user and to evaluate potentially interesting components. The results affect the browser display to emphasize relevant components and thus aid search...|$|R
40|$|Identifying and {{tracking}} evolving software structures at a design level is a challenging task. Although {{there are ways}} to visualize this information statically, {{there is a need for}} methods that help analyzing the evolution of software design elements. In this paper, we present a new visual approach to identify variability zones in software designs and explore how they evolve over time. To verify the usefulness of our approach, we did a user study in which participants had to <b>browse</b> <b>software</b> histories and find visual patterns. Most participants were able to find interesting observations and found our approach intuitive and useful. We present a number of design aspects that were observed by participants and the authors using our IHVis tool on four open-source projects...|$|R
40|$|This paper {{describes}} a system {{we have developed}} to improve the speed and success rate with which users <b>browse</b> <b>software</b> libraries. The system is a learning apprentice: it monitors the user’s normal browsing actions and from these infers {{the goal of the}} user’s search. Itthen searches the library being browsed, uses the inferred goal to evaluate items and presents to the user those that are most relevant. The main contribution of this paper is the development of rules for negative inference (i. e. inferring features that the user is not interested in). These produce a dramatic improvement in the system’s performance. ALearning Apprentice for Browsing &quot;Browsing &quot; is the searching of a computer library for an individual library item. The human doing the search (th...|$|R
50|$|Deepfish was an {{experimental}} <b>browsing</b> <b>software</b> system for Windows Mobile devices that used a zooming user interface, being developed at Microsoft Live Labs. It aimed {{to provide a}} consistent browsing experience on desktops and mobile devices, to display content on the small mobile displays in the same layout as larger displays, and to avoid the need to recode the web-page for small displays.|$|E
50|$|In {{his piece}} summary Napier {{explains}} {{that in his}} view the web is not a physical representation of information {{in the same way}} a magazine or book is, but instead a temporary graphic created when <b>browsing</b> <b>software</b> interprets HTML instruction. The focus of Shredder 1.0 is to reveal this hidden truth behind the Internet and give the user a new interpretation of common web pages.|$|E
50|$|Geir Ivarsøy (June 27, 1957 - March 9, 2006) was {{the lead}} {{programmer}} at Opera Software. He and Jon von Tetzchner {{were part of a}} research group at the Norwegian state phone company (now known as Telenor) where they developed <b>browsing</b> <b>software</b> called MultiTorg Opera. The project was abandoned by Telenor, but in 1995 Geir and Jon obtained the rights to the software, formed a company of their own, and continued working on it.|$|E
40|$|This paper {{describes}} {{a system to}} improve the speed and success rate with which users <b>browse</b> <b>software</b> libraries. The system is a learning apprentice: it monitors the user’s normal browsing actions and from these infers {{the goal of the}} user’s search. It then searches the library being browsed, uses the inferred goal to evaluate items and presents to the user those that are most relevant. The main contribution of this paper is the development of rules for negative inference (i. e. inferring features that the user is not interested in). These produce a dramatic improvement in the system’s performance. The new system is more than twice as effective at identifying the user’s search goal than the original, and it ranks the target much more accurately at all stages of search. ...|$|R
5000|$|The 1541U-I (and 1541U-II) emulates a 1541 {{disk drive}} for Commodore computers. It uses an SD-card or MMC-card to store virtual floppy disks. Disk content can be <b>browsed</b> through <b>software</b> on the {{cartridge}} and navigated through {{buttons on the}} device. The selected disk can be downloaded either through the fully compatible 1541 interface or through a faster but less compatible proprietary interface.|$|R
40|$|In this paper, {{we present}} NavTracks, {{a tool that}} {{supports}} <b>browsing</b> through <b>software.</b> NavTracks keeps track of the navigation history of software developers, forming associations between related files. These associations are then {{used as the basis}} for recommending potentially related files as a developer navigates the software system. We present the reasoning behind NavTracks, its basic algorithm, a case study, and propose some future work. 1...|$|R
50|$|In late 2013, {{soon after}} Snowden’s leaks, it was loosely {{calculated}} that encrypted <b>browsing</b> <b>software,</b> such as Tor, I2P, and Freenet “have combined {{to more than}} double in size… and approximately 1,050,000 total machines ‘legitimately’ use the networks on a daily basis, amounting to an anonymous population that is about 0.011 percent of all machines currently connected to the Internet.” Given that these tools are {{designed to protect the}} identity and privacy of their users, an exact calculation of the growth of the anonymous population cannot be accurately deciphered, but all estimates point to the fast growth of such anonymity networks.|$|E
50|$|Online gaming, {{which in}} {{previous}} generations {{had been almost}} an exclusive domain of PC games, became more prominent in video game consoles during this generation. The Dreamcast initiated this change with its built in modem, internet <b>browsing</b> <b>software,</b> and ability to play certain games online. The PlayStation 2, Xbox and GameCube also offered online gaming, though their approaches and commitment to it varied greatly. The Xbox offered an integrated service called Xbox Live that cost $50 per year and was only compatible with a broadband internet connection. Its ability to connect gamers for online multi-player matches was a considerable factor in allowing the Xbox to gain {{a foothold in the}} western market, especially in the first-person shooter genre. The PlayStation 2 left its online gaming service up to each individual game publisher, and though it was free to use, it was not always an ideal experience, especially with games published by small developers. The SOCOM series {{was one of the most}} popular online competitive games for the PS2. The GameCube did not offer online play for any of its first-party titles, with only Sega's Phantasy Star Online series and Homeland making official use of the console's online capabilities. In addition, online capability was not out-of-the-box; an adapter was needed to hook the GameCube to the internet.|$|E
40|$|Navigation around {{information}} {{resources on the}} Internet is assisted by <b>browsing</b> <b>software</b> such as the gopher, lynx, Mosaic and Netscape. The variety and complexity of resources has meant there have been calls for metainformation {{so that there are}} resident on the network, tools for guidance to the resources using classified or index term approaches. Searching software used in association with the <b>browsing</b> <b>software</b> has functionality that may be compared with that of vendor-operated information retrieval systems. Although this functionality is relatively limited, when used with HTML documents, relevance feedback assists retrieval via associative mechanisms. Documents published electronically using SGML standards are able to contain their own surrogates and therefore be self-indexed and self-classified by the authors, however because the author view does not necessarily represent the user view, it is still necessary to have user-oriented retrieval aids. Menu-linked approaches via gophers or via home pages constructed for WWW <b>browsing</b> <b>software</b> mean that users can superimpose their own classified view of resources. Therefore, rather than attempting an overall classification of what is on the Internet, multiple classification systems may be constructed, reflecting the orientations of the different disciplines of users. A model is suggested for construction of such classified approaches with reference to the way they may use existing retrieval systems, automatic indexing, and thesauri that have been manually or automatically constructed...|$|E
5000|$|The 1541Ultimate-II emulates a 1541 {{disk drive}} for Commodore {{computers}} on a cartridge, using MicroSD or USB disks to store virtual floppy disks. The disk {{can be downloaded}} through fast, but not fully compatible proprietary disk emulation. Disk connector for fully compatibility is integrated, but not yet supported in software (as for the 1541U-I). Disk content can be <b>browsed</b> through <b>software</b> on the cartridge and navigated through buttons on the device.|$|R
40|$|This paper {{describes}} {{our experiences}} with our software visualization tools for web-based visualization of remotely executing object-oriented software. The motivation {{of this work}} is to allow developers to <b>browse</b> web-based <b>software</b> repositories to explore existing code components and frameworks by creating visual documentation. Components are test driven to capture their static and run-time information in program traces and are then transformed into useful visualizations. Visualizations can help developers understand what a component does, how it works, {{and whether or not}} it can be reused in a new program...|$|R
40|$|International audienceIn {{order to}} migrate {{software}} products which are deemed similar into a product line, {{it is essential}} to identify the common features and the variations between the product variants. This can however be tedious and error-prone as it may involve <b>browsing</b> complex <b>software</b> and a lot of more or less similar variants. Fortunately, if arte facts of the product variants (source code files and/or models) are available, feature identification can be at least partially automated. In this paper, we thus propose a three-step approach to feature identification from source code of which the first two steps are automated...|$|R
40|$|Many {{products}} {{are said to}} exhibit “network effects. ” This means that the value a consumer realizes from the product increases {{as the number of}} consumers using the product increases (Arthur, 1989, 1990, and 1996). Telephones, fax machines, computer operating systems, Internet <b>browsing</b> <b>software,</b> and word processing software are several of the mor...|$|E
40|$|Abstract {{copyright}} UK Data Service {{and data}} collection copyright owner. The {{purpose of the study}} was to examine foreign ethnographic material in Scotland, and record it and its environmental conditions. The main disciplines covered include ethnography, social anthropology, fine arts and decorative arts. Main Topics : Location, description, acquisition and provenance of ethnographic object(s); general and environmental conditions of ethnographic collections; museum policies towards ethnographic material. This dataset includes tailor made <b>browsing</b> <b>software...</b>|$|E
40|$|Abstract. Unbounded <b>browsing</b> <b>software</b> is an {{application}} worked in Internet client. It uses a custom encryption protocol {{to break the}} traditional network filtering. In this paper, we can detect this application through classifying the Ultra Surf T mode (TCP packets) packets and using SPID. The experimental results show that we can effectively reduce the false alarm rate and detect the application accurately by classifying the Ultra Surf T mode (TCP packets) packets and using SPID...|$|E
40|$|This {{research}} {{addresses the}} problem of locating software items in extensive libraries. It aims {{to increase the speed}} and accuracy with which a user may <b>browse</b> <b>software</b> libraries for reusable code. The method proposed for this is called active browsing. The system monitors user actions, made within a normal browser, to infer an analogue representing the user's search goal. A relevancy measure is constructed from this analogue and used by the system to scan the library independently of the user and to evaluate potentially interesting components. The results affect the browser display to emphasize relevant components and thus aid search. Although the main interest is software reuse, the approach has a much wider applicability. This is inherited directly from the broad applicability of browsing. Browsing is an important methodology particularly in search tasks where the target is not well defined. This thesis discusses a model of active browsing applicable in general to browseable libraries. An implementation of this model, based around a browser used to explore libraries of object oriented code, is described. In this implementation, an inference engine forward chains on rules to generate the analogue from the user's actions. A relevancy measure, {{in the form of a}} template, is constructed, used to assign a score to library items and to produce a ranked list of classes of potential interest to the user. This implementation is used both to illustrate active browsing in a particular application and to experimentally validate the model...|$|R
40|$|The {{problem of}} science data browse was examined. Given the {{tremendous}} data volumes that {{are planned for}} future space missions, particularly the Earth Observing System in the late 1990 's, the need for access to large spatial databases must be understood. Work was continued to refine the concept of data <b>browse.</b> Further, <b>software</b> was developed to provide a testbed of the concepts, both to locate possibly interesting data, as well as view {{a small portion of}} the data. Build II was placed on a minicomputer and a PC in the laboratory, and provided accounts for use in the testbed. Consideration of the testbed software as an element of in-house data management plans was begun...|$|R
2500|$|To gain {{optical drive}} features, users could either {{purchase}} an external USB SuperDrive or other brand, or the bundled Remote Disc <b>software,</b> only for <b>browsing</b> or <b>software</b> installation {{to access the}} drive of another computer wirelessly that has the program installed. It {{can also be used}} to reinstall the system software from the included installation DVD. Remote Disc supports NetBooting, so the Air can boot from its installation DVD in another computer's drive, which requires Remote Install Mac OS X to be running on that computer. The software does not allow playback or information of DVDs, CDs or installing Windows. [...] For these features, an external USB drive is required. More recent versions of OS X replaced the installation DVD with a USB flash drive containing the software, eliminating remote installation.|$|R
40|$|Beyond the Internet {{as most of}} us know it is the Dark Net. This virtual space, {{accessed}} only by downloading nonstandard <b>browsing</b> <b>software,</b> plays host to {{a number}} of illegal activities including a rapidly expanding online drugs trade. In {{much the same way that}} the conventional retail sector has been decimated by online shopping, author of "Drugs on the Dark Net", criminologist Dr James Martin, spoke with Marcus Costello about how online trading is cutting jobs in crime. 3 page(s...|$|E
40|$|A {{framework}} is developed which allows geoscientists to visualize horizons using remote, network-connected computer systems. This framework employs Virtual Reality Modelling Language (VRML) {{to describe the}} horizons {{so that they may}} be viewed in 3 -D using standard World Wide Web <b>browsing</b> <b>software.</b> A new program is developed to obtain seismic horizons from a commercial interpretation system, translate them to VRML and distribute them via a Web server. The development of a prototype framework shows that it is both feasible and advantageous to convert interpretations to this format and distribute them on the Web...|$|E
40|$|Whether you are {{interested}} in improving the usability of Linux, Macintosh or Windows, there is one restriction you cannot escape - the hierarchical file storage system. The notion of files and folders has been with us for so long that it almost seems axiomatic. In this paper we look at the effects on users of forcing a hierarchical classification of files. We also consider how some of the resultant problems can be tackled with a new piece of file <b>browsing</b> <b>software</b> based on the ideas of relational database systems...|$|E
40|$|Database {{interconnection}} {{requires the}} development of links between related objects fromdifferent databases. We built a database of links, called Virgil, to manage and distribute rich (documented) links between GDB genes andGenBankhumansequences. Virgilcontains 18 667 unique links. In addition to a simple Web form for ad-hocqueries, weproposeagenericWeb interface and a prototype CORBA server for link distribution. Materials described in this paper are available from [URL] BACKGROUND Links between biological objects are frequently used by individuals, e. g., for data <b>browsing,</b> and <b>software,</b> e. g., for data analysis or database interconnection. However, the links as found in the major databases are too often difficult to retrieve, inconsistent, not sufficiently documented or maintained. To address these problems, we propose Virgil, a database dedicated to the management and distribution of rich links. RICH LINKS Virgil focuses on storing rich l [...] ...|$|R
40|$|Understanding {{architectural}} {{characteristics of}} software components that constitute distributed systems {{is crucial for}} maintaining and evolving them. One component framework heavily used for developing component-based software systems is Microsoft’s COM+. In this paper we particularly concentrate on the analysis of COM+ components and introduce an iterative and interactive approach that combines component inspection techniques with source code analysis to obtain a complete abstract model of each COM+ component. The model describes important architectural characteristics such as transactions, security, and persistency, as well as create and use dependencies between components, and maps these higher-level concepts down to their implementation in source files. Based on the model, engineers can <b>browse</b> the <b>software</b> system’s COM+ components and navigate {{from the list of}} architectural characteristics to the corresponding source code statements. We also discuss the Island Hopper application with which our approach has been validated...|$|R
40|$|Previous work in {{software}} visualization has demonstrated {{the advantages of}} presenting programs in a graphical manner in both program understanding and debugging. Among the class of program visualization systems are those which operate non-intrusively on program sources. One of the major challenges faced by users of such systems {{is the problem of}} filtering the enormous amount of run-time information present during the execution of a large system. In this thesis, I describe an evolution of the Software Landscape. The Software Landscape is a tool for <b>browsing</b> a <b>software</b> system's static structure using boxes together with arrow and containment relations. My Run-Time Landscape includes run-time information, utilizes the Landscape paradigm for the elision of unwanted details, and provides a tightly integrated environment for viewing program artifacts from different perspectives. This prototype is useful in debugging, program understanding, and profiling. ii Acknowledgements I am grateful [...] ...|$|R
40|$|A Photomosaic {{arranges}} {{many small}} photographs {{to represent a}} large image. Our study applies the photomosaics to a photograph browser CAT. Our implementation displays photomosaics while zooming out, and individual photographs while zooming in. Here, many photograph <b>browsing</b> <b>software</b> displays a set of photographs {{in the order of}} their times. To maintain this order of photographs, our photomosaic generation technique firstly arranges the given set of photographs in the order of those times, and then retouches so that the set of photographs forms a photomosaic-like scene. This paper presents our technique for photomosaic generation, and a user evaluation to discuss what kinds of photographs are preferable to be applied. We think this discussion should be fruitful for our future development of automatic photograph selection for photomosaic generation...|$|E
40|$|Vision is {{a natural}} tool for human-computer interaction, since it {{provides}} visual feedback to the user and mimics some human behaviors. It requires however the fast and robust computation of motion primitives, which remains a difficult problem. In this work, we propose to apply some recent mathematical results about convex optimization to the TV-L 1 optical flow problem. At {{the cost of a}} small smoothing of the Total Variation (TV), the convergence speed of the numerical scheme is improved, leading to earlier termination. Furthermore, we successfully implement our algorithm on GPU for realtime performance using the OpenCL framework. We demonstrate the potential of our optical flow by using it as primary sensor in a remotely controlled image <b>browsing</b> <b>software.</b> Index Terms — Optical flow, two, three, four, OpenCL 1...|$|E
40|$|Software {{architecture}} visualization tools tend {{to support}} browsing, that is, exploration by following concepts. If architectural diagrams {{are to be}} used during daily software maintenance tasks, these tools also need to support specific fact-finding through searching. Searching is essential to program comprehension and hypothesis testing. Furthermore, searching allows users to reverse the abstractions in architectural diagrams and access facts in the underlying program code. In this paper, we consider the problem of searching and <b>browsing</b> <b>software</b> architectures using perspectives from information retrieval and program comprehension. After analyzing our own user studies and results from the literature, we propose a solution: the Searchable Bookshelf, an architecture visualization tool that supports both navigation styles. We also present a prototype of our tool which {{is an extension of}} an existing architecture visualization tool. Keywords software architecture, information retrieval, p [...] ...|$|E
50|$|Vladeck’s new {{approach}} to online privacy {{can be seen in}} his handling of FTC litigation against Sears in In the Matter of Sears Holdings Management Corporation. In June 2009, shortly after Vladeck assumed office, the Bureau of Consumer Protection settled a case against Sears. The company had offered consumers $10 to download software that tracked their internet <b>browsing.</b> The <b>software</b> collected information such as medical prescriptions and financial information. The software contained a privacy policy with detailed disclosures about the type of information to be collected and how it would be used, and consumers suffered no economic harm when they downloaded it. Nevertheless, the FTC sued the company for its practice. Vladeck stated that “under the harm framework, we couldn’t have brought that case,” but that because “there’s a huge dignity interest wrapped up in having somebody looking at your financial records when they have no business doing that,” the Commission was justified in suing.|$|R
40|$|Virtually {{every window}} of {{time can be}} {{identified}} by its technological advances. The industrial revolution of the 1800 's {{gave way to the}} transportation revolution of the early 20 th century. The development of synthetics such as nylon and plastics were followed by an electronics revolution built on transistors and early computers. The silicon chip lead to personal computers and chip-driven devices as the 20 th century wound down. But these technological changes pale to that which the Internet has brought to the information industry. After 500 years of building on print technologies, the Internet has restructured this industry {{in a way that is}} unmatched by other fields of endeavor. The transformation brought on by the Internet, occurring over a fraction of the industry’s life-cycle, has been nothing short of–to use the cliche–revolutionary. All of these technological transformations operate within a number of legal structures. One of the most critical of these structures, yet often least understood, is patent law. In this article, the author explores and explains the complexities involved in determining patentability for Internet-related technologies, such as e-mail, web <b>browsing,</b> TCP/IP <b>software</b> and e-commerce, and in particular, federated searching by WebFeat...|$|R
40|$|Open Source {{communities}} typically use {{a software}} repository to archive various software projects with their source code, mailing list discussions, documentation, bug reports, and so forth. For example, SourceForge currently hosts over seventy thousand Open Source software systems. Because {{of the size}} of the rich information content, such repositories offer numerous opportunities for sharing information among projects. For example, one would like to know a set of projects that are related or similar to each other, so that the project groups can collaborate and share their work. With thousands of projects in typical repositories, however, manually locating related projects can be difficult. Hence, we propose MUDABlue, a tool that automatically categorizes software systems. MUDABlue has three major aspects: 1) it relies on no other information than the source code, 2) it determines category sets automatically, and 3) it allows a software system to be a member of multiple categories. MUDABlue has a web interface to visualize determined categories, which eases <b>browsing</b> a <b>software</b> repository. We show the effectiveness of MUDABlue’s categorization capability by comparing its generated categories with that of some other existing research tools. ...|$|R
