5|27|Public
40|$|International audienceWe {{define a}} method to {{modularize}} crosscutting concerns in the Behavior Interaction Priority (BIP) component-based framework. Our method is inspired from the Aspect Oriented Programming (AOP) paradigm which was initially conceived to support the separation of concerns during the development of monolithic systems. BIP has a formal operational semantics and makes a clear separation between architecture and behavior to allow for compositional and incremental design and analysis of systems. We thus distinguish local from global aspects. Local aspects model concerns at the component level and are used to refine the behavior of components. Global aspects model concerns at the architecture level, and hence refine communications (synchronization and data transfer) between components. We formalize global aspects {{as well as their}} integration into a <b>BIP</b> <b>system</b> through rigorous transformation primitives and overview local aspects. We present AOP-BIP, a tool for Aspect-Oriented Programming of BIP systems, and demonstrate its use to modularize logging, security, and fault-tolerance in a network protocol...|$|E
40|$|Abstract. Behavior-Interaction-Priority (BIP) is a layered {{embedded}} system design and verification framework that provides separation of functionality, synchronization, and priority concerns to simplify system design {{and to establish}} correctness by construction. The framework comes with a runtime engine and a suite of verification tools that uses D-Finder and NuSMV as model checkers. In this paper we provide a method and a supporting tool that takes a <b>BIP</b> <b>system</b> {{and a set of}} invariants and computes a reduced sequential circuit with a system-specific scheduler and with a designated output that is true when the invariants hold. Our method uses ABC, a sequential circuit synthesis and verification framework to (1) generate an efficient FPGA implementation of the system, and to (2) verify the system and debug it in case a counterexample was found. Moreover we generate a concurrent C implementation of the circuit that can be directly used as a simulator. We evaluated our method with two large systems and our results outperform those possible with existing techniques. ...|$|E
40|$|Behavior-Interaction-Priority (BIP) is a layered {{embedded}} system design and verification framework that provides separation of functionality, synchronization, and priority concerns to simplify system design {{and to establish}} correctness by construction. The framework comes with a runtime engine and a suite of verification tools that uses D-Finder and NuSMV as model checkers. In this paper we provide a method and a supporting tool that takes a <b>BIP</b> <b>system</b> {{and a set of}} invariants and computes a reduced sequential circuit with a system-specific scheduler and with a designated output that is true when the invariants hold. Our method uses ABC, a sequential circuit synthesis and verification framework to (1) generate an efficient FPGA implementation of the system, and to (2) verify the system and debug it in case a counterexample was found. Moreover we generate a concurrent C implementation of the circuit that can be directly used as a simulator. We evaluated our method with two large systems and our results outperform those possible with existing techniques. Comment: arXiv admin note: text overlap with arXiv: 1109. 5505 by other author...|$|E
40|$|International audienceVerification of component-based systems still {{suffers from}} {{limitations}} such as state space explosion since {{a large number}} of different components may interact in a heterogeneous environment. These limitations entail the need for complementary verification methods such as runtime verification. Runtime verification is a dynamic analysis technique and is prone to scalability. In this paper, we integrate runtime verification into the BIP (Behavior, Interaction and Priority) framework. BIP is a powerful and expressive component-based framework for the formal construction of heterogeneous systems. Our method augments <b>BIP</b> <b>systems</b> with monitors to check specifications at runtime. This method has been implemented in RV-BIP, a prototype tool that we used to validate the whole approach on a robotic application...|$|R
40|$|The balloon {{interrogation}} package (BIP), {{an integral}} part of the overall interrogation, recording, and location subsystems (IRLS) for the Nimbus 4 program, is described. The BIP is a self-contained, integrated transponder designed to be carried aloft by a constant altitude, superpressure balloon to an altitude of 67, 000 or 78, 000 feet. After launch the BIP senses high-altitude balloon overpressure and temperature, and upon receipt of an interrogated command from the IRLS aboard the Nimbus 4 satellite, the BIP enodes the data on a real-time basis into a pulse-code modulation (PCM) format and transmits this data to the satellite. A summary of the program activity to produce 30 <b>BIP</b> <b>systems</b> and to support balloon launches from Ascension Island is presented...|$|R
40|$|Abstract. We study {{properties}} of priority synthesis [2], an automatic method to ensure desired safety properties in component-based systems using priorities. Priorities are a powerful concept to orchestrate com-ponents [3], e. g., the BIP 1 framework [1] for designing and modeling embedded and autonomous systems {{is based on}} this concept. We formulate priority synthesis for <b>BIP</b> <b>systems</b> using the automata-theoretic framework proposed by Ramadge and Wonham [5]. In this framework, priority synthesis results in searching for a supervisor from the restricted class of supervisors, in which each is solidly expressible using priorities. While priority-based supervisors are easier to use, e. g., they support the construction of distributed protocols, they are harder to compute. In this paper, {{we focus on the}} hardness of synthesizing prior-ities and show that finding a supervisor based on priorities that ensures deadlock freedom of the supervised system is NP-complete. ...|$|R
40|$|The BIP {{framework}} {{provides a}} methodology {{supported by a}} tool chain for developing software for embedded systems. The design of a <b>BIP</b> <b>system</b> follows the decomposition in behavior, interaction and priority. The first step comprises the division of desired behavior of a system into components. In a second step interactions and their priorities are added between the components. Finally, machine code is generated from the BIP model. While adding interactions {{it is possible to}} overconstrain a system resulting in potential deadlocks. The tool chain crucially depends on an automatic tool, D-Finder, which checks for deadlock-freedom. This paper reports on guaranteeing the correctness of the verdict of D-Finder. We address the problem of formally proving deadlock-freedom of an embedded system {{in a way that is}} comprehensible for third party users and other tools. We achieve this goal by automatically generating certificates for each BIP model declared safe by D-Finder. These certificates comprise a proof of deadlock-freedom of the BIP model which can be checked by an independent checker. We use the Coq theorem prover as certificate checker. Thus, bringing the high level of confidence of a formal proof to the deadlock analysis results. With the help of certificates one gets a deadlockfreedom guarantee of BIP models without having to trust or even take a look at the deadlock checking tool. Part of the proofs encapsulated in certificates are invariants of considered BIP models. Their checking is an important subtask to guarantee deadlock-freedom of the given BIP model...|$|E
40|$|Runtime {{enforcement}} is an increasingly popular and effective dynamic validation technique aiming {{to ensure the}} correct runtime behavior (w. r. t. a formal specification) of systems using a so-called enforcement monitor. In this paper we introduce runtime enforcement of specifications on component-based systems (CBS) modeled in the BIP (Behavior, Interaction and Priority) framework. BIP is a powerful and expressive component-based framework for formal construction of heterogeneous systems. However, because of BIP expressiveness, it remains difficult to enforce at design-time complex behavioral properties. First we propose a theoretical runtime enforcement framework for CBS where we delineate a hierarchy of sets of enforceable properties (i. e., properties that can be enforced) according {{to the number of}} observational steps a system is allowed to deviate from the property (i. e., the notion of k-step enforceability). To ensure the observational equivalence between the correct executions of the initial system and the monitored system, we show that i) only stutter-invariant properties should be enforced on CBS with our monitors, ii) safety properties are 1 -step enforceable. Given an abstract enforcement monitor (as a finite-state machine) for some 1 -step enforceable specification, we formally instrument (at relevant locations) a given <b>BIP</b> <b>system</b> to integrate the monitor. At runtime, the monitor observes and automatically avoids any error in the behavior of the system w. r. t. the specification. Our approach is fully implemented in an available tool that we used to i) avoid deadlock occurrences on a dining philosophers benchmark, and ii) ensure the correct placement of robots on a map. Comment: arXiv admin note: text overlap with arXiv: 1109. 5505 by other author...|$|E
40|$|International audienceThis paper {{addresses}} the monitoring of logic-independent linear-time user-provided properties in multi-threaded component-based systems. We consider intrinsically independent components {{that can be}} executed concurrently with a centralized coordination for multiparty interactions. In this context, the problem that arises is that a global state {{of the system is}} not available to the monitor. A naive solution to this problem would be to plug in a monitor which would force the system to synchronize in order to obtain the sequence of global states at runtime. Such a solution would defeat the whole purpose of having concurrent components. Instead, we reconstruct on-the-fly the global states by accumulating the partial states traversed by the system at runtime. We define transformations of components that preserve their semantics and con-currency and, at the same time, allow to monitor global-state properties. Moreover, we present RVMT-BIP, a prototype tool implementing the transformations for monitoring multi-threaded systems described in the BIP (Behavior, Interaction, Priority) framework, an expressive framework for the formal construction of heterogeneous systems. Our experiments on several multi-threaded <b>BIP</b> <b>systems</b> show that RVMT-BIP induces a cheap runtime overhead...|$|R
40|$|Linear {{invariant}} {{generation has}} been intensively considered {{as an effective}} verification method for concurrent systems. However, none of the existing work on the topic strongly exploits {{the structure of the}} system and the algebra that defines the interactions between its components. This not only has an impact on the computation time, but also on the scalability of the method. In a series of recent work, we developed an incremental approach for generating boolean invariants for systems described in the BIP component framework. BIP is an expressive modeling formalism including a rich algebra to describe component interactions. The objective {{of this paper is to}} extend and propose new techniques dedicated to the computation of linear interactions invariants, i. e., invariants that are described by linear constraints and that relate states of several components in the system. In particular, we propose an incremental approach that allows to discover and reuse invariants that have already been computed on subparts of the model. Those new techniques have been implemented in DFINDER, a tool for checking deadlock freedom on <b>BIP</b> <b>systems</b> using invariants, and evaluated on several case studies. The experiments show that our approach outperforms classical techniques on a wide range of models...|$|R
40|$|International audienceBIP is a component-based {{framework}} sup-porting rigorous {{design of}} embedded <b>systems.</b> <b>BIP</b> sup-ports incremental design of large systems from atomic components that communicates via connectors and whose interactions {{can be described}} with a powerful algebra. This paper presents SBIP, an extension of <b>BIP</b> for stochastic <b>systems.</b> SBIP offers the possibility to add stochastic information to atomic component's behaviors, and hence to the entire system. Atomic component's semantics in SBIP is described by Markov Chains. We show that the semantics of the entire system is described by a Markov chain, showing that the non-determinism arising from system interac-tions is automatically eliminated by BIP. This allows us to verify systems described in SBIP with Statistical Model Checking. This paper introduces SBIP and illustrates its usabil-ity on several industrial case studies...|$|R
30|$|The k ij {{are usually}} {{referred}} as Binary Interaction Parameters (BIP) {{and are usually}} calculated by parameterizing the EOS with experimental K values (Katz and Firoozabadi 1978). For hydrocarbon <b>systems,</b> <b>BIPs</b> are commonly set to zero, except for describing interactions between non-hydrocarbon and hydrocarbon and between light and heavy hydrocarbons.|$|R
40|$|International audienceProgramable logic {{controllers}} (PLCs) {{are complex}} cyber-physical systems which {{are widely used}} in industry. This paper shows the modeling and validation work of a typical PLC control system using the Behavior-Interaction-Priority(BIP) component framework. The gate control system based on PLC is a real industry application. We design general system architecture {{for this kind of}} device control system. The control software and hardware of environment are all modeled as BIP components. Their interactions are described by <b>BIP</b> connectors. <b>System</b> requirements are formalized as monitors. Simulation is applied on the system model. We found a couple of design errors in simulation, which help us to improve the dependability of the original systems...|$|R
40|$|Programmable logic {{controllers}} (PLCs) {{are complex}} embedded {{systems that are}} widely used in industry. This paper presents a component-based modeling and validation method for PLC systems using the behavior-interaction-priority (BIP) framework. We designed a general system architecture and a component library for a type of device control system. The control software and hardware of the environment were all modeled as <b>BIP</b> components. <b>System</b> requirements were formalized as monitors. Simulation was carried out to validate the system model. A realistic example from industry of the gates control system was employed to illustrate our strategies. We found a couple of design errors during the simulation, which helped us to improve the dependability of the original systems. The results of experiment demonstrated the effectiveness of our approach...|$|R
40|$|This {{deliverable}} {{reports on}} the WP 2 activities that have been conducted during months 25 - 36. In Task 2. 1 we further pursued the investigation on the theoretical foundations of the distributed implementation of connectors, including expressiveness issues for classes of dynamic BIP connectors and further investigating the issue of parallel executions for <b>BIP</b> <b>systems</b> with time constraints. We fur- ther continued the study of coalgebraic models for our resource-aware calculus we also discussed last year, and chosen peer-to-peer overlay as a case study. Finally, we freshly tackled nominal automata, investigating the issue of regular expressions for such automata. In Task 2. 2 we focussed mostly on the soft constraints paradigm. A more theoretical investigation concerned the laws for behavioral equivalence in SCCP, the best-known language based on constraints. A more applicative outlook {{lead to the development}} of a technique based on the orchestration of declarative and procedural knowledge for solving locally optimization problems that are global. In Task 2. 3 we kept on investigating about issues related to game semantics for agents, focusing on energy trading scenarios, and looking at the self-organizational aspects of an agent-based system managing the interactions among prosumers introduced early in the project. Furthermore, we pursued the study of coalgebraic semantics for the stochastic calculus introduced early in the project, whose work was previously reported in the sections of Deliverables D 2. 1 and D 2. 2 devoted to Task 2. 1. The deliverable is organized around the above structure of themes. Each subsection includes a short description of the novelty and offer pointers towards future work. A concluding section offers some general remarks on the overall satisfaction of the objectives, on the influences from and towards other work packages, and some comments on the foreseen developments for the forthcoming year...|$|R
40|$|International audienceInvariants {{generation}} has been intensively considered {{as an effective}} verification method for concurrent systems. However, none of the existing work on the topic strongly exploits {{the structure of the}} system and the algebra that defines the interactions between its components. This not only has an impact on the computation time, but also on the scalability of the method. In a series of recent work, we developed an efficient approach for generating invariants for systems described in the BIP component framework. BIP is an expressive modeling formalism including a rich algebra to describe component interactions. Our technique, which focuses on generating Boolean invariants corresponding to a subclass of the conjunctive normal form, was then extended to an incremental one capable of generating global invariants from smaller invariants obtained for sub-systems by exploiting the algebra that describes their interactions. This approach gives a panoply of techniques and libraries to rigurously design potentially complex systems. We also showed that Boolean invariants generated by our methodology correspond to trap of the Petri net induced by the BIP model. Unfortunately, this class of invariants may be too unprecise, and hence leads to discovery of false positive counter examples. The objective {{of this paper is to}} propose new techniques dedicated to the computation of linear interactions invariants, i. e., invariants that are described by linear constraints and that relate states of several components in the system. By definition, such new class is incomparable to the one of Boolean invariants, but we will show that it is generally more precise. In addition, we propose an incremental approach that allows to discover and reuse invariants that have already been computed on subparts of the model. Those new techniques have been implemented in DFINDER, a tool for checking deadlock freedom on <b>BIP</b> <b>systems</b> using invariants, and evaluated on several case studies. The experiments show that our approach outperforms classical techniques on a wide range of models...|$|R
40|$|Abstract—Invariants {{generation}} has been intensively consid-ered {{as an effective}} verification method for concurrent systems. However, none of the existing work on the topic strongly exploits {{the structure of the}} system and the algebra that defines the interactions between its components. This not only has an impact on the computation time, but also on the scalability of the method. In a series of recent work, we developed an efficient approach for generating invariants for systems described in the BIP component framework. BIP is an expressive modeling formalism including a rich algebra to describe component interactions. Our technique, which focuses on generating Boolean invariants corresponding to a subclass of the conjunctive normal form, was then extended to an incremental one capable of generating global invariants from smaller invariants obtained for sub-systems by exploiting the algebra that describes their interactions. This approach gives a panoply of techniques and libraries to rigurously design potentially complex systems. We also showed that Boolean invariants generated by our methodology correspond to trap of the Petri net induced by the BIP model. Unfortunately, this class of invariants may be too unprecise, and hence leads to discovery of false positive counter examples. The objective {{of this paper is to}} propose new techniques dedicated to the computation of linear interactions invariants, i. e., invariants that are described by linear constraints and that relate states of several components in the system. By definition, such new class is incomparable to the one of Boolean invariants, but we will show that it is generally more precise. In addition, we propose an incremental approach that allows to discover and reuse invariants that have already been computed on subparts of the model. Those new techniques have been implemented in DFINDER, a tool for checking deadlock freedom on <b>BIP</b> <b>systems</b> using invariants, and evaluated on several case studies. The experiments show that our approach outperforms classical techniques on a wide range of models. Keywords-component-based systems; model-checking; invari-ants generation; linear algebra...|$|R
40|$|Crabapple (Malus 2 ̆ 7 Donald Wyman 2 ̆ 7) {{and common}} lilac (Syringa vulgaris 2 ̆ 7 Monge 2 ̆ 7) were grown from liners to {{marketable}} size in five production systems: field-grown, plastic container, pot-in-pot (PiP), bag-in-pot (<b>BiP),</b> and above-ground <b>system</b> (AGS). The objectives were to compare growth in modified container systems, which could potentially eliminate overwintering requirements in northern production nurseries and {{to compare the}} effects on tree root growth during landscape establishment. There {{were no significant differences}} in crabapple root or shoot mass after two seasons except PiP dry root weights exceeded field-grown trees. For, lilacs, there were significant differences in growth and shoot dry weight with field-grown and PiP plants being largest. PiP root-zone temperatures (RZTs) were similar to field-grown RZTs. Container, <b>BiP,</b> and AGS <b>systems</b> all exceeded lethal high and low RZT thresholds, resulting in root damage. Five trees from each treatment were transplanted into a low-maintenance landscape and dug up 3 years later. There {{were no significant differences in}} top growth, but the effects of the production systems were evident in the root architecture. BiP and field-grown trees had fewest root defects and the greatest number of roots extending into the landscape soil...|$|R
40|$|BIP is a component-based {{framework}} for system design that has important industrial applications. BIP {{is built on}} three pillars: behavior, interaction, and priority. In this paper, we introduce first-order interaction logic (FOIL) that extends <b>BIP</b> to <b>systems</b> parameterized {{in the number of}} components. We show that FOIL captures classical parameterized architectures such as token-passing rings, cliques of identical components communicating with rendezvous or broadcast, and client-server <b>systems.</b> Although the <b>BIP</b> framework includes efficient verification tools for statically-defined systems, none are available for parameterized systems with an unbounded number of components. The parameterized model checking literature contains a wealth of techniques for systems of classical architectures. However, application of these results requires a deep understanding of parameterized model checking techniques and their underlying mathematical models. To overcome these difficulties, we introduce a framework that automatically identifies parameterized model checking techniques applicable to a BIP design. To our knowledge, it is the first framework that allows one to apply prominent parameterized model checking results in a systematic way...|$|R
40|$|International audienceDesign and {{implementation}} of distributed algorithms often involve many subtleties due to their complex structure, non-determinism, and low atomicity as well as occurrence of unanticipated physical events such as faults. Thus, constructing correct distributed systems {{has always been a}} challenge and often subject to serious errors. We present a methodology for component-based modeling, verification, and performance evaluation of self-stabilizing systems based on the BIP framework. In <b>BIP,</b> a <b>system</b> is modeled as the composition of a set of atomic components by using two types of operators: interactions describing synchronization constraints between components, and priorities to specify scheduling constraints. The methodology involves three steps illustrated using the algorithm due to Arora and Gouda. First, a high-level model of the algorithm is built in BIP from the set of its processes by using powerful primitives for multi-party interactions and scheduling. Then, we use this model for verification of properties of a self-stabilizing algorithm including closure, deadlock-freedom, and finite reachability of the set of legitimate states. Finally, a distributed model which is observationally equivalent to the high-level model is generated. This model is used for performance analysis taking into account the degree of parallelism and convergence times for failure-free behavior {{as well as in the}} presence of faults...|$|R
40|$|International audienceThe paper studies a {{distributed}} {{implementation method}} for the BIP (Behavior, Interaction, Priority) component framework for modeling heterogeneous <b>systems.</b> <b>BIP</b> offers two powerful mechanisms for describing composition of components by combining interactions and priorities. A system model is layered. The lowest layer contains atomic components; the second layer, describes possible interactions between atomic components; the third layer includes priorities between the interactions. The current implementation of BIP {{is based on}} global state operational semantics. An Engine directly interprets the operational semantics rules and computes the possible interactions between atomic components from global states. The implementation method is a translation from BIP models into distributed models involving two steps. The first translates BIP models into partial state models where are known only {{the states of the}} components which are ready to communicate. The second implements interactions in the partial state model by using message passing primitives...|$|R
40|$|An {{approach}} to shift-invariant pattern recognition is presented, {{based on the}} conjunction of Basic Invariant Patterns (BIPs). In this approach, the invariance to complex shapes is built from the invariance to simple basic patterns. Each basic pattern is recognized at any given location by localized detectors for this pattern. Complex shapes are then treated as conjunctions of the basic patterns. To test the ideas, a simple shift-invariant system was implemented with input shapes being line drawings written on a simulated visual field. It was shown by simulation and mathematical analysis that a small set of simple <b>BIPs</b> allowed the <b>system</b> to recognize in a shift-invariant way {{a large number of}} more complicated shapes. The number of inputs having non-unique decompositions into BIPs is negligible compared to the overall number of input shapes. An application of the model to shift-invariant recognition of "real" images was also examined and tested on low resolution gray level images. A biol [...] ...|$|R
40|$|Device Interface Channel Interface NX Check_incoming "short", "eager", P 4 TCP/IP Paragon SP/ 2 Generic ADI code, datatype mgmt, {{heterogeneity}} request queues mgmt " Protocol interface" SGI port. other ports shared-mem port MPL BIP MPI BIP "rendez-vous" Protocols Figure 1 : The {{architecture of}} MPI-BIP implemented {{with one or}} several messages of the underlying communication <b>system</b> (<b>BIP</b> in our case). The cost of MPI-BIP is approximately an overhead of 2 s (mainly CPU) over BIP for the latency on our cluster. Thus, the latency of the non-SMP MPI-BIP is very good, 7 s, and the bandwidth reaches 110 MB/s. 3 Related Work Efficient management of CLUMPs is a new research topic. We have investigated issues related to a multi-protocol message passing interface using both shared memory and the network within a CLUMP. Several projects have proposed solutions for this problem {{in the last few}} years, and BIP-SMP is in this research line. Projects like MPI-StarT [8] or Starf [...] ...|$|R
40|$|The paper studies a {{distributed}} {{implementation method}} for the BIP (Behavior, Interaction, Priority) component framework for modeling heterogeneous <b>systems.</b> <b>BIP</b> offers two powerful mechanisms for describing composition of components by combining interactions and priorities. A system model is layered. The lowest layer contains atomic components; the second layer, describes possible interactions between atomic components; the third layer includes priorities between the interactions. The current implementation of BIP {{is based on}} global state operational semantics. An Engine directly interprets the operational semantics rules and computes the possible interactions between atomic components from global states. The implementation method is a translation from BIP models into distributed models involving two steps. The first translates BIP models into partial state models where are known only {{the states of the}} components which are ready to communicate. The second implements interactions in the partial state model by using message passing primitives. The main results of the paper are conditions for which the three models are observationall...|$|R
40|$|CHEMCAD process {{simulator}} {{was used}} for the analysis of the literature experimental phase equilibrium data of H 2 S with three physical solvents (Sulfolane, Propylene Carbonate (PC), and N-Methyl- 2 -Pyrrolidone (NMP)) at different temperatures (298. 15 o K, 323. 15 o K, and 373. 15 o K). Two thermodynamic models, Peng-Robinson (PR) and Soave-Redlich-Kwong (SRK),  were used. The  equilibrium data of H 2 S- Sulfolane and H 2 S- Propylene Carbonate (PC) systems were successfully correlated using SRK thermodynamic model. The deviation was noticed only for H 2 S-Sulfolane system as the temperature increases to 373 o K, to give a deviation of less than 5 %. The  thermodynamic models used in present study, PR, and SRK, built in CHEMCAD simulator and used as such without modification, fail to correlate the equilibrium data of H 2 S- NMP (N-Methyl- 2 -Pyrrolidone) system for all temperature range used.  Modifications of the thermodynamic models were performed by editing user defined binary interaction parameters (<b>BIP)</b> of the <b>systems</b> used, gives good results.   </p...|$|R
40|$|Abstract. The paper studies a {{distributed}} {{implementation method}} for the BIP (Behavior, Interaction, Priority) component framework for modeling heterogeneous <b>systems.</b> <b>BIP</b> offers two powerful mechanisms for describing composition of components by combining interactions and priorities. A system model is layered. The lowest layer contains atomic components; the second layer, describes possible interactions between atomic components; the third layer includes priorities between the interactions. The current implementation of BIP {{is based on}} global state operational semantics. An Engine directly interprets the operational semantics rules and computes the possible interactions between atomic components from global states. The implementation method is a translation from BIP models into distributed models involving two steps. The first translates BIP models into partial state models where are known only {{the states of the}} components which are ready to communicate. The second implements interactions in the partial state model by using message passing primitives. The main results of the paper are conditions for which the three models are observationally equivalent. We show that in general, the translation from global state to partial state models does not preserve observational equivalence. Preservation can be achieved by strengthening the premises of the operational semantics rules by an oracle. This is a predicate depending on the priorities of the BIP model. We show that there are many possible choices for oracles. Maximal parallelism is achieved for dynamic oracles allowing interaction as soon as possible. Nonetheless, these oracles may entail considerable computational overhead. We study performance trade-offs for different types of oracles. Finally, we provide experimental results illustrating the application of the theory on a prototype implementation. ...|$|R
40|$|Knowledge of in-situ rock stress {{orientation}} {{is crucial for}} the understanding of many processes in the Earth crust such as tectonic development, earthquake occurrence, and fluid transport along faults. In the Forsmark site investigation, the knowledge {{plays an important role}} in storage design and borehole stability. The borehole breakout method is an important indicator of stress orientations, particularly in aseismic regions and intermediate depths (< 5 km). borehole breakouts are stress- induced ovalisations of the cross-sectional shape of the borehole wall. the ovalisation is caused by compressive shear failure on intersecting conjugate shear planes, resulting in piece of rock spalling off the borehole wall. this usually occurs when the borehole stress concentration exceeds that required to cause failure of the intact rock. this thesis presents data from boreholes kfm 01 b and kfm 02 a that are part of forsmark investigation site of the swedish nuclear fuel and waste management co (skb). two types of borehole geometry and image tools, borehole televiewer (bhtv) and borehole image processing <b>system</b> (<b>bips),</b> have been used to reveal the stress orientation using borehole breakout methods. the objectives of this report have been to: (1) determine the downhole orientation of horizontal rock stresses: (2) identify the zones of rock continuum: (3) study the influence of geology on rock stress orientation: and (4) correlate borehole breakouts with measurement while drilling (mwd) parameters. the result from this study shows that borehole breakouts are common in both boreholes. in borehole kfm 01 b, borehole breakouts have been identified starting from 47 meters borehole length (mbl), continuing to 499 mbl. borehole breakouts occupy 203 m of total 500 mbl, which corresponds to almost 41 % of the entire logged borehole. almost 85 % of the identified borehole breakouts were identified in the borehole sections 113 - 270 mbl and 398 - 499 mbl, respectively. the majority of the identified borehole breakouts are shallow and have a limited failure depth. in addition, almost 50 % of the identified borehole breakouts have their orientation of maximum horizontal stress ranging between 138 °- 142 °n whereas 38 % have theirs within the interval 154 °- 166 °n. the length weighted average orientation of maximum horizontal stress is 146 °± 10 °n, which corresponds to quality b according to the wsm ranking scheme, which is essentially assigned for a high quality borehole breakouts [zoback, 1992]. in borehole kfm 02 a, borehole breakouts are detected over almost 29 % of the borehole length between 99 to 1002 mbl. they were identified more in abundance, and with uniform orientation of maximum horizontal stress within the interval 500 - 1002 mbl. the upper 500 mbl of borehole kfm 02 a is characterized by higher variability in the downhole distribution and orientation of borehole breakouts. the result also reveals that the orientation of maximum horizontal stress from borehole breakout is ranging between 126 °- 66 °n with a dominating (89 %) orientation of maximum horizontal stress ranging between 135 °- 159 °n. they suggest a length weighted average maximum horizontal stress orientation of 146 °± 18 °n. this also results in quality b according to the wsm ranking scheme, which is essentially assigned to high quality borehole breakouts. hence, both boreholes yield the same average orientation with slightly higher variation in stress orientation in borehole kfm 02 a than in borehole kfm 01 b. continuous rock stress orientations as well as decoupling zones were identified in both boreholes, which were strongly correlated to the existing geology and structures at the site. in borehole kfm 01 b, a heterogeneous interval existed between 47 - 200 mbl, which corresponds to almost 31 % of the logged borehole whereas the homogeneous (a zone of rock stress continuity) section existed between 200 - 500 mbl. likewise, in borehole kfm 02 a, the heterogeneous interval (zones of rock stress discontinuity) existed between 113 - 499 mbl and also corresponds to about 43 % of the entire cored part of the borehole whereas a homogeneous interval existed between 499 - 1002 mbl. a remarkably good correlation is observed between the sections in both boreholes with scatter in orientation of borehole breakouts and deformation zones. the general observation indicated that deformation zone dz 2 (increased frequency of open fracture with several crushed zones) may have contributed to the scatter observed in the subsurface section 113 to 200 mbl in borehole kfm 01 b. similarly, three deformation zones were suspected to have contributed to that of borehole kfm 02 a. the deformation zone dz 3 (increased frequency of both sealed and open fractures) was suspected to have contributed to the scatter in rock stress orientation observed from 174 to 190 mbl: whereas deformation zone dz 5 (increased frequency of sealed fractures but to a lesser extent of open fractures) may have contributed to the scatter from 296 to 310 mbl: and lastly: deformation zone dz 6 (a wide zone with increased frequency of both sealed and open fractures) may have contributed to the scatter from 419 to 499 mbl. another plausible explanation for the scatter in orientation of borehole breakouts is the coexistence of several rock units in the boreholes and also the contact points where those rock units coexisted (coalesce). in such sections of two or several interlayered rock types, the compressive strength of the rock varies. measurement while drilling (mwd) parameters were collected in borehole kfm 02 a. the general trend observed in the correlated section in the borehole suggest that the water flow rate is directly proportional to the water pressure and inversely related to both rotation speed and penetration rate, while the rotation speed is held constant. this is probably because the deformation zone dz 6 is penetrated in the upper interval. it is expected that in such a zone that the rock strength should be decreased. this is absolutely in order with mwd parameters, decreasing trend in water flow and water pressure, with increasing trend in both rotation pressure and penetration rate is an indication of deep fractures at those points, which serves as conduits by which water or drilling fluid injected into the borehole to cool down the drill-bit and at the same time flush the drill cuttings to the surface are lost. this interval could as well impact less resistance to the drill. Validerat; 20101217 (root...|$|R
40|$|Der Transport in das endoplasmatische Retikulum (ER) ist der erste Schritt in der Biogenese sekretorischer Proteine. Im Säuger erfolgt der Transport hauptsächlich cotranslational, was eine enge Kooperation zwischen Ribosom, Translokon an der ER-Membran und luminalen Proteinen erfordert. Die Hauptkomponente des Translokons ist der Sec 61 -Komplex, der die Translokationspore bildet. Weitere Komponenten, Sec 62 p und Sec 63 p, wurden identifiziert. Diese Proteine (a) kommen in äquimolaren Konzentrationen mit Sec 61 a (Untereinheit des Sec 61 -Komplexes) vor (b) interagieren miteinander und mit dem Sec 61 -Komplex und (c) seine Ho-mologe in der Hefe sind für den posttranslationalen Transport und Sec 63 p auch für den cotranslationalen Transport essentiell. Dies deutet darauf hin, dass Sec 62 p und Sec 63 p des Säugers am cotranslationalen Transport beteiligt sind. Eine Sequenzanalyse von Sec 62 p zeigt die Anwesenheit eines im Hefeprotein nicht konservierten basischen Peptidmotives, das charakteristisch für ribosominteragierende Proteine ist. In der vorliegenden Arbeit wurden Fragmente des Säuger-Sec 62 p in E. coli synthetisiert und es wurde durch klassische Ribosomenbindungs- und Fraktionierungstudien gezeigt, dass Sec 62 p durch seine N-terminale cytosolische Domäne direkt mit Ribosomen interagiert. Hierbei handelt es sich um eine bei physiologischer Salzkonzentration stabile elektrostatische Interaktion, wofür das basische Motiv wichtig ist. Mittels Kompetitionsanalysen für die Bindung an Ribosomen wurde gezeigt, dass die Bindungsstelle von Sec 62 p mit dem Bereich des Ribosoms, das für die Interaktion mit dem Translokon verantworlich ist, überlappt, und dass diese Bindungsstelle auch von dem Hsp 40 -Chaperon Mtj 1 p/ERj 1 p {{verwendet}} wird. Die funktionelle Bedeutung der Sec 62 p-Ribosom-Interaktion wurde in einem zellfreien in vitro-Translationssystem untersucht. Sec 62 p wirkt inhibitorisch auf die Proteinsynthese von sekretorischen und nicht-sekretorischen Proteinen. Hierbei handelt es sich um eine Hemmung der Initiation der Translation. Die Interaktion von Sec 62 p am ribosomalen Tunnelausgang bewirkt Veränderungen in der Translationsfaktorenbindungstelle des Ribosoms, was auf einen allosterischen Wirkungsmechanismus für die Induktion der Translationshemmung hindeutet. Der Einfluss von Sec 62 p auf die Proteinsynthese bei Translokationsvorgängen wird diskutiert und anhand der Analogien mit Mtj 1 p wird eine Regulation von Sec 62 p über seine Interaktion mit Sec 63 p vorgeschlagen. Die in dieser Arbeit gewonnenen Daten unterstützen ein Modell, bei dem Sec 62 p durch die Interaktion mit Ribosomen und wahrscheinlich auch durch Interaktion mit Sec 63 p einen Informationsaustausch zwischen dem Cytosol und dem Lumen des endoplasmatischen Retikulums vermittelt. Das luminale Hsp 70 -Chaperon BiP ist an mehreren Stadien des cotranslationalen Proteintransports beteiligt. Für späte Schritte der Translokation wurde beobachtet, dass BiP durch seine Interaktion mit dem zu transportierenden Substrat die Translokationseffizienz erhöht. Es wurde vorgeschlagen, dass in Analogie zum Hefe-System BiP die naszierende Kette während ihrer Translokati-on bindet und dadurch die Unidirektionalität des Transports zum Lumen gewährleistet. Bei der cotranslationalen Translokation in Vesikeln, die keine luminalen Proteine enthalten, können bereits luminal modifizierte Translokationssubstrate zurück ins Cytosol gelangen. Daher besteht die Möglichkeit, dass die Interaktion von BiP mit dem Substrat tatsächlich erst nach dem vollständigen Transport des Substrats erfolgt, um dieses im ER-Lumen zu halten. In der vorliegenden Arbeit wurde der cotranslationale Transport in einem in vitro-System mit Proteoliposomen rekonstituiert, wobei das Protein Avidin als artifizielles luminales Protein anstelle von BiP und biotinylierte Substrate eingesetzt wurden. Die gewonnenen Daten zeigen, dass die Bindung des Substrats, die zur Erhöhung der Transporteffizienz führt, sowohl während als auch nach seiner Translokation erfolgt. Dies bestätigt die bisher vermutete Funktion von BiP, die Unidirektionalität des cotranslationalen Transports zu sichern, und zeigt darüber hinaus eine erweiterte Funktion von BiP bei der Retention von bereits translozierten Substraten im Lumen des ER. Diese Erkenntnise bringen neue Aspekte im Zusammenhang mit der Termination der Translokation, die in einem Modell dargestellt werden. The transport {{into the}} endoplasmic reticulum (ER) {{is the first}} step in the biogenesis of secretory proteins. In mammalian cells this transport occurs mainly cotranslationally and requires a tight cooperation between the ribosome, the translocon at the ER-membrane, and luminal proteins. The Sec 61 -complex that builds the translocation pore is the main component of the translocon. Further components, namely Sec 62 p and Sec 63 p, have been identified. These proteins a) are present in equimolar concentrations with the Sec 61 a subunit of the Sec 61 -complex, b) interact with each other and with the Sec 61 -complex and c) in yeast are essential for the posttranslational transport (Sec 63 p for the cotranslational transport as well). This suggests that mammalian Sec 62 p and Sec 63 p are involved in cotranslational protein transport. 	 The sequence analysis of Sec 62 p reveals the presence of a basic peptide motif which is not conserved in the yeast homolog and that is characteristic of ribosome interacting proteins. In the present work, fragments of the mammalian Sec 62 p were synthesized in E. coli and analyzed in classical ribosome binding assays. It was shown that Sec 62 p interacts directly with ribosomes through its N-terminal domain. This interaction is an electrostatic and at physiological salt concentrations stable one, for which the basic motif in Sec 62 p is important. Through competition analysis for the binding to ribosomes it was shown, that the binding site of Sec 62 p at the ribosome is overlapping with the binding site of the translocon and of the Hsp 40 -chaperone Mtj 1 p/ERj 1 p. The functional significance of the Sec 62 p-ribosome interaction was analyzed in a cell-free in vitro-translation system. Sec 62 p inhibits the protein synthesis of secretory and non-secretory proteins. To do this, Sec 62 p acts at the level of translation initiation. The interaction of Sec 62 p with the ribosomal tunnel causes changes in the ribosomal binding site for the translation factors. This points to an allosteric mechanism by which Sec 62 p induces the inhibition of translation. The influence of Sec 62 p on protein synthesis is discussed and in analogy to Mtj 1 p a regulation of Sec 62 p through its interaction with Sec 63 p is proposed. The data that have been obtained in this work support a model in which Sec 62 p mediates an information exchange between the cytosol and the lumen of the endoplasmic reticulum through its interaction with ribosomes and probably Sec 63 p. 	 The luminal Hsp 70 -chaperone BiP participates in several stages of cotranslational protein transport. For late steps of translocation it was shown, that BiP increases the translocation efficiency through its interaction with the transport-substrate. It was suggested that, in analogy to the yeast <b>system,</b> <b>BiP</b> binds to the nascent chain during its translocation and determines the unidirectionality of the transport into the lumen. However, studying the cotranslational translocation into vesicles lacking luminal proteins, it was shown, that luminally modified transport-substrates can get back into the cytosol. Thus, there is the possibility that BiP actually interacts with the substrate not during but after its transport to retain it in the ER-lumen. In the present work the cotranslational transport was reconstituted in an in vitro-system with proteoliposomes where biotinylated substrates and the protein avidin, as an artificial luminal protein instead of BiP, were used. The results of this analysis show that the binding of the transport-substrates leads to an increase in transport-efficiency and occurs both during and after translocation of the substrates. This confirms the so far assumed function of BiP in ensuring the unidirectionality of the transport and, additionally, gives evidence of a more extensive function of BiP in the retention of already translocated substrates in the lumen of the endoplasmic reticulum...|$|R

