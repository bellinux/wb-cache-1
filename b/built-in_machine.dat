21|35|Public
500|$|In 2067, at the {{conclusion}} of an investigation into the loss of Zero-X, the Inquiry Board of the Space Exploration Center reaches a verdict of sabotage. In the meantime, a second Mars mission has been planned. Days before the launch of the new Zero-X, International Rescue agrees to a request to organise security in view of the possibility of another sabotage threat. Jeff Tracy dispatches Scott to Glenn Field in Thunderbird 1, while Virgil in Thunderbird 2 and Alan in Thunderbird 3 are assigned to escort Zero-X as it leaves the atmosphere. Posing as a reporter at the pre-launch press conference, Lady Penelope ensures that Travers and the other four crewmembers are delivered St. Christopher brooches. Ostensibly for luck, these are in fact homing devices (a plot device previously used in the episode [...] "The Duchess Assignment"). The next day, a search for Dr Grant's brooch checks negative. Scott unmasks the man waiting for lift-off on board Zero-X as the Hood in another of his disguises. The saboteur flees Glenn Field in a car, which Penelope and Parker pursue in FAB1. The Hood transfers to a speedboat, and then a helicopter piloted by an accomplice; Parker shoots the aircraft down with the Rolls-Royce's <b>built-in</b> <b>machine</b> gun and the Hood is seemingly killed. Meanwhile, the real Grant is returned to Zero-X and the spacecraft launches without further incident.|$|E
5000|$|High-performance and {{parallel}} data transfer to statistical {{tools such as}} <b>built-in</b> <b>machine</b> learning algorithms based on R, {{and the ability to}} store machine learning models, and use them for in-database scoring.|$|E
50|$|IDEDOS is a ROM-based disk {{operating}} system written in 6502/65816 assembly language for the Commodore 64, 128 and SuperCPU. Its main purpose is to control ATA(PI) devices connected to an IDE64 cartridge and present them like normal Commodore drives. Additionally it supports networked drives (PCLink) and has a <b>built-in</b> <b>machine</b> code monitor and file manager.|$|E
5000|$|The {{limitations}} of BASIC 2.0 on the C64 led {{to use of}} <b>built-in</b> ROM <b>machine</b> language from BASIC. To load a file to a designated memory location, the filename, drive, and device number would be read by a call: ...|$|R
50|$|The Compaq MSN Companion shipped with an LCD {{screen and}} a {{wireless}} keyboard with a mouse <b>built-in.</b> Compaq <b>machines</b> had 32MB (+16MB flash) of memory, a 266 MHz AMD processor, four USB ports, a phone jack, and, in some models, an ethernet port for networking.|$|R
2500|$|Impulsator, a temperering <b>machine</b> <b>built-in</b> into {{a grenade}} tip. Temperering {{of the fire}} tube at a cannon at ongoing and varying {{directions}} on aircraft (for Bofors) (1947) ...|$|R
50|$|Unlike the PET, the VIC-20 did {{not include}} a <b>built-in</b> <b>machine</b> {{language}} monitor, but Commodore offered them on disk, tape, or cartridge, with several different executables to load into various memory locations. The monitor programs were the same as the PET monitor, but now added a mini-assembler instead of requiring the user to enter hexadecimal opcodes.|$|E
50|$|Automatix Inc., {{founded in}} January 1980, {{was the first}} company to market {{industrial}} robots with <b>built-in</b> <b>machine</b> vision. Its founders were Victor Scheinman, inventor of the Stanford arm; Phillippe Villers, Michael Cronin, and Arnold Reinhold of Computervision; Jake Dias and Dan Nigro of Data General; Gordon VanderBrug, of NBS, Donald L. Pieper of General Electric and Norman Wittels of Clark University.|$|E
50|$|A big {{selling point}} was the disk and tape turbo feature, which was {{available}} for most commands; this accelerated loading things from disk or tape considerably. However, the biggest strength of this particular cartridge for the Commodore 64 lies in the <b>built-in</b> <b>machine</b> code monitor program, which is capable of the widest range of features, such as text and sprite dump, as well as text and sprite editing.|$|E
40|$|In this brief, a novel {{method that}} {{constructs}} a sparse kernel machine is proposed. The proposed method generates attractors as sparse solutions from a <b>built-in</b> kernel <b>machine</b> via a dynamical system framework. By readjusting the corresponding coefficients and bias terms, a sparse kernel machine that approximates a conventional kernel machine is constructed. The simulation {{results show that}} the constructed sparse kernel machine improves the efficiency of testing phase while maintaining comparable test error...|$|R
5000|$|Low-end copiers {{also use}} digital technology, but tend {{to consist of}} a {{standard}} PC scanner coupled to an inkjet or low-end laser printer, {{both of which are}} far slower than their counterparts in high-end copiers. However, low-end scanner-inkjets can provide color copying at a lower purchase price but with a much higher cost per copy. The cost of electronics is such that combined scanner-printers sometimes have <b>built-in</b> fax <b>machines.</b> (See Multifunction printer.) ...|$|R
50|$|Nested {{virtualization}} {{becomes more}} necessary as widespread operating systems gain built-in hypervisor functionality, {{which in a}} virtualized environment can be used only if the surrounding hypervisor supports nested virtualization; for example, Windows 7 is capable of running Windows XP applications inside a <b>built-in</b> virtual <b>machine.</b> Furthermore, moving already existing virtualized environments into a cloud, following the Infrastructure as a Service (IaaS) approach, is much more complicated if the destination IaaS platform does not support nested virtualization.|$|R
5000|$|Once a drug dealer's car {{is found}} it {{can either be}} followed, {{destroyed}} with the Esprit's <b>built-in</b> <b>machine</b> gun, or repeatedly rammed until it surrenders. Different cars {{may need to be}} dealt with in different ways; for example armoured cars must be rammed as shooting has no effect, whereas randomly occurring [...] "hit cars" [...] are the only other vehicles that can match the Esprit for speed, so ramming them is more difficult. Following a drug dealer's car too closely may arouse suspicion and cause them to abort their mission.|$|E
5000|$|The most {{important}} feature of the microprocessor development board was the ROM based <b>built-in</b> <b>machine</b> language monitor, or [...] "debugger" [...] as it was also sometimes called. Often {{the name of the}} board was related to the name of this monitor program, for example the name of the monitor program of the KIM-1 was [...] "Keyboard Input Monitor", because the ROM based software allowed entry of programs without the rows of cumbersome toggle switches that older systems used. The popular 6800 based systems often used a monitor with a name with the word [...] "bug" [...] for [...] "debugger" [...] in it, for example the popular [...] "MIKBUG".|$|E
5000|$|As the Argonne Offensive rumbled onward; it {{ground to}} a halt, with American {{soldiers}} refusing to be cut down by withering machine-gun fire. On 3 October Marwitz drove out to meet forward observation posts. His troops occupied the high ground. The US 1st Army faced an uphill climb from the plain into an area covered by woods, in which [...] "are <b>built-in</b> <b>machine</b> guns, individual guns, mortars, surveillance posts..." [...] concealing German troops. [...] American artillery was ineffective. Although despondent, the Germans held grimly onto the ground. American operations commenced at 5.30 am on 5 October from the east bank of the Meuse. But almost immediately they stalled in dark dank fog. The tactics had changed, the Germans were cheered by Group But rumours of a possible peace, sapped their morale.|$|E
50|$|MZ MS-DOS executables can be {{run from}} MS-DOS and Windows 9x-based {{operating}} systems. 32-bit Windows NT-based operating systems can execute them using their <b>built-in</b> Virtual MS-DOS <b>machine</b> (although some graphics modes are unsupported). 64-bit versions of Windows cannot execute them. Alternative ways to run these executables include DOSBox, DOSEMU and Wine.|$|R
5000|$|In 1960s, when precision-guided weapons became widespread, {{strafing}} temporarily {{fell out}} of favor as unnecessarily risky— some American fighter aircraft or attack aircraft of that time (such as the F-4 Phantom and A-6 Intruder) did not have <b>built-in</b> cannon or <b>machine</b> guns. In the Vietnam War, this {{was found to be}} a deficiency, and improvised [...] "gunships" [...] had to be used in strafing missions.|$|R
50|$|Among {{applications}} are lighting (interior, exterior, and street lighting), cooking {{devices such as}} ovens, washing machines, and heating and cooling of buildings and vehicles. <b>Built-in</b> automatic washing <b>machine</b> controllers are examples of very complex electromechanical and electronic timers cycles, starting and stopping many processes including pumps and valves to fill and empty the drum with water, heating, and rotating at different speeds, with different combinations of settings for different fabrics.|$|R
5000|$|Load {{relocation}} {{was first}} introduced on the VIC-20 because this machine could start BASIC RAM in several different locations, depending on the memory expansion that was installed. The older Commodore PET series did not support relocation, so [...] and [...] {{would have the same}} effect: the file would be loaded into the same memory region from which it was saved. Load relocation happens in the host, being an exception to what is said above about the secondary address being used only device-internally. Since the PET cannot relocate files, BASIC programs written on later Commodore machines must be modified by using a sector editor to change the header bytes. It is also possible to use the PET's <b>built-in</b> <b>machine</b> language monitor to change the link address for the BASIC program after loading it.|$|E
5000|$|Unlike the C64 which {{emulated}} the 6551 chip in software, the Plus/4 had {{a built-in}} MOS Technology 6551 UART chip that could perform up to 19200 bit/s. This allowed the Plus/4 to use high-speed modems without additional hardware or software tricks (the C64 required specially written software {{to operate at}} 2400 bit/s), but most people could only afford 300- or 1200-bit/s modems in 1984 and Commodore never released a 2400-bit/s modem so this feature went largely unnoticed. The Plus/4's serial port is the standard Commodore user port used since the PET, featuring TTL voltage which is incompatible with RS-232. This requires a voltage converter to use modems or other serial devices from non-Commodore vendors. The Plus/4 keyboard had a separately placed directional [...] "diamond" [...] of four cursor keys, presumably more intuitive to use than the VIC's and C64's two shifted cursor keys. A reset button was added {{on the right side}} of the system, a feature lacking on the C64. The Plus/4 also revived the <b>built-in</b> <b>machine</b> language monitor from the PET days, a feature missing on the VIC-20 and C64.|$|E
5000|$|Though {{still in}} {{military}} school {{when the war}} began in 1914, Wintgens {{was sent to the}} Eastern Front as a leutnant and won the Iron Cross, 2nd Class. On transferring to the German Air Service, Wintgens flew first as an observer, apparently alternating with telegraph duty. However, in early 1915 he entered pilot training at the Fokker school in Schwerin, where Leutnant Otto Parschau had already been brought in by the Fokker factory to prepare an example of an armed (with a Parabellum MG14 synchronized gun) version of the Fokker A.III single-seat monoplane, with IdFlieg military serial number A.16/15 (the very same [...] "green machine" [...] aircraft that Parschau had flown since the summer of 1914) for front-line trials. Wintgens specifically requested the chance [...] "to fly in the field the smallest and fastest Fokker type with the Garros-installation, which enabled a <b>built-in</b> <b>machine</b> gun to fire through the propeller." [...] With that background he was selected, along with Leutnant Parschau, {{as one of the first}} Fokker Eindecker pilots, flying single-seaters that had been assigned to fly alone with various two-seater-equipped field flying detachments, starting with the Bavarian Feldflieger Abteilung 6b, then based near Saarburg.|$|E
40|$|Hardware and {{simulation}} results for a 370 -MHz memory <b>built-in</b> self-test state <b>machine</b> are presented. Dynamic differential cascode voltage switch logic, unique clocking techniques, and logic pipelining {{were used to}} achieve the 370 -MHz performance. Testing of multiple SRAMs and content addressable memories is accomplished with deterministic patterns generated by the state machine. Inclusion of a programmable pattern implemented via scan initialization provides test-pattern flexibility. Failing addresses are stored for redundancy implementation...|$|R
50|$|Sensor nodes {{often make}} use of ISM band, which gives free radio, {{spectrum}} allocation and global availability. The possible choices of wireless transmission media are radio frequency (RF), optical communication (laser) and infrared. Lasers require less energy , but need line-of-sight for communication and are sensitive to atmospheric conditions. Infrared, like lasers, needs no antenna but it is limited in its broadcasting capacity. Radio frequency-based communication is the most relevant that fits most of the WSN applications. WSNs tend to use license-free communication frequencies: 173, 433, 868, and 915 MHz; and 2.4 GHz. The functionality of both transmitter and receiver are combined into a single device known as a transceiver. Transceivers often lack unique identifiers. The operational states are transmit, receive, idle, and sleep. Current generation transceivers have <b>built-in</b> state <b>machines</b> that perform some operations automatically.|$|R
40|$|Part 9 : Trust SoftwareInternational audienceAs {{underlying}} {{infrastructure of}} cloud computing platform, datacenter is seriously underutilized, however, its operating costs is high. In this paper, we implement virtual machines placement algorithm in CloudSim using constraint programming approach. We first formulate {{the problem of}} virtual machines placement in virtualized datacenters as a variant of multi-dimensions bin packing problem, and then exploit constraint solver {{to solve this problem}} with the objective of minimizing number of physical machines that host virtual machines. Finally, we compare different virtual placement algorithms for evaluating constraint programming-based virtual machine placement algorithm including the <b>built-in</b> virtual <b>machine</b> placement algorithm in CloudSim and FFD algorithm. The experimental results show that constraint programming-based virtual machines placement algorithm can efficiently reduce the number of physical machines to achieve the goal of reducing datacenter operating costs and improving resource utilization...|$|R
50|$|Players {{control the}} secret agent name Sly Spy through eight {{different}} stages. Some stages {{have their own}} gameplay. In {{the first part of}} the first stage, players shoot enemies horizontally while sky-diving. The second half of the first, third, fifth, sixth and eighth stages are played in a run and gun format similar to Namco's Rolling Thunder and its sequels, but it lacks the ability to jump between the top and bottom floors while grabbing rails. Also, when out of ammo or attacked by a boss with one hit, Sly Spy drops his firearm while the game becomes a beat'em up in 2D platform manner, much like Shinobi. Players can make Sly Spy do three different kicks: high kicks, low kicks and jump kicks. The second stage shows Sly Spy riding on his motorcycle with a <b>built-in</b> <b>machine</b> gun, which makes this stage a combination of run-and-gun and vehicular combat game formats, much like Moon Patrol. The fourth and seventh stages are in marine-based, side-scrolling shooter format. Minor enemies will drop several different items when defeated, such as extra ammo, cans of Coca-Cola-esque soda and machine guns. Sometimes, enemies will drop a jetpack on land or a DPV while underwater to make transportation easier.|$|E
5000|$|In 2067, at the {{conclusion}} of an investigation into the loss of Zero-X, the Inquiry Board of the Space Exploration Center reaches a verdict of sabotage. In the meantime, a second Mars mission has been planned. Days before the launch of the new Zero-X, International Rescue agrees to a request to organise security in view of the possibility of another sabotage threat. Jeff Tracy dispatches Scott to Glenn Field in Thunderbird 1, while Virgil in Thunderbird 2 and Alan in Thunderbird 3 are assigned to escort Zero-X as it leaves the atmosphere. Posing as a reporter at the pre-launch press conference, Lady Penelope ensures that Travers and the other four crewmembers are delivered St. Christopher brooches. Ostensibly for luck, these are in fact homing devices (a plot device previously used in the episode [...] "The Duchess Assignment"). The next day, a search for Dr Grant's brooch checks negative. Scott unmasks the man waiting for lift-off on board Zero-X as the Hood in another of his disguises. The saboteur flees Glenn Field in a car, which Penelope and Parker pursue in FAB1. The Hood transfers to a speedboat, and then a helicopter piloted by an accomplice; Parker shoots the aircraft down with the Rolls-Royce's <b>built-in</b> <b>machine</b> gun and the Hood is seemingly killed. Meanwhile, the real Grant is returned to Zero-X and the spacecraft launches without further incident.|$|E
40|$|National audienceThe VITA shade {{guide is}} a dental {{instrument}} that allows accurate and secure determination of tooth color and shade, which constitutes {{one of the}} most important but still complex aspects of dental restorations in aesthetics dentistry. In this study, we survey the modern literature in color matching techniques and discuss a logistic regression approach for computational prediction and selection of tooth color in direct restorations using dental composite resins. Test cases were obtained at the school of dentistry of Universidad Central de Venezuela and were further analyzed in a personal computer through the capabilities of the Wolfram language's <b>built-in</b> <b>machine</b> learning package in Mathematica. Altogether, our results exhibit significantly high accuracy rates in front of the classification problem under study, thus emphasizing the impact of this sort of models in current aesthetics dentistry...|$|E
40|$|Purpose - The {{purpose of}} this paper is to {{investigate}} the influence of time steps, integration methods, and saturation modeling on the accuracy of the synchronous machine model. This model is compared with the PSCAD <b>built-in</b> synchronous <b>machine</b> model in order to compare the accuracy of one of the most used synchronous machine models in a commercially available software versus a well-documented and widely accepted state-space synchronous machine model. Design/methodology/approach - In the paper, a synchronous condenser with the saturation phenomenon is modeled using state-space equations in the rotating dq-reference frame and is implemented both in Matlab/Simulink and PSCAD. Integration methods of up to the fifth order are implemented for increased accuracy. The saturation modeling includes modeling of the saturation in both d- and q-axis. A steady-state and dynamic performance comparison towards the <b>built-in</b> PSCAD synchronous <b>machine</b> model is performed. The saturation modeling does not include the saturation of the leakage fluxes. Findings - When the forward Euler method is used, in order to obtain less than 5 percent error, the time step should not exceed 5 its. The third-order Runge-Kutta method is the preferred choice and it provides desired accuracy when the time step is equal or smaller than 1, 000 its. The built-in PSCAD model satisfies the error criteria for time steps smaller than 300 its. A small discrepancy of 2 percent is found during the steady-state test. Originality/value - The paper presents the performance of the higher order integration methods in an EMTP-type software environment where the trapezoidal integration method is most often used. It provides a good guide for building an owner-defined model. A comparison of a dynamic performance between the publicly documented state-space and a synchronous machine models commonly used for power system transient studies is presented...|$|R
50|$|According to The Next Web, one of {{the main}} {{distinguishing}} features of Yandex Launcher is the <b>built-in</b> recommendation service. <b>Machine</b> learning technology provides the basis of the recommendation service, with which Launcher selects apps, games, videos and other forms of content that might interest the user. The key elements of Launcher are the content feed of personal recommendations by Yandex Zen, as well as a system of recommended apps; both elements are built into Launcher and analyze the user’s favorite websites and other aspects of their behavior with the aim of creating a unique model of the user’s preferences.|$|R
40|$|A new {{software}} design and development effort {{has produced a}} Java (Sun Microsystems, Inc.) version of the award-winning Tempest software (refs. 1 and 2). In 1999, the Embedded Web Technology (EWT) team received a prestigious R&D 100 Award for Tempest, Java Version. In this article, "Tempest" will refer to the Java version of Tempest, a World Wide Web server for desktop or embedded systems. Tempest was designed at the NASA Glenn Research Center at Lewis Field to run on any platform for which a Java Virtual Machine (JVM, Sun Microsystems, Inc.) exists. The JVM acts as a translator between the native code of the platform and the byte code of Tempest, which is compiled in Java. These byte code files are Java executables with a ". class" extension. Multiple byte code files can be zipped together as a "*. jar" file for more efficient transmission over the Internet. Today's popular browsers, such as Netscape (Netscape Communications Corporation) and Internet Explorer (Microsoft Corporation) have <b>built-in</b> Virtual <b>Machines</b> to display Java applets...|$|R
40|$|Spark {{has become}} a widely popular {{analytics}} framework that provides an implementation of the equally popular MapReduce programming model. Hadoop is an Apache foundation framework {{that can be used}} for processing large datasets on a cluster of computers using the MapReduce programming model. Mahout is an Apache foundation project developed for building scalable machine learning libraries, which includes <b>built-in</b> <b>machine</b> learning classiﬁers. In this paper, we show how to build a simple text classiﬁer on Spark, Apache Hadoop, and Apache Mahout for extracting out sentiments from a text collection containing millions of text documents. Using a collection of 7 million movie reviews taken from IMDB, a Bayesian classiﬁer was learned to predict sentiments for test reviews. Separate classiﬁers were learned on both Spark and Hadoop, i. e. our contenders for scalable sentiment analytics. Our empirical results showed that the sentiment learning task on Spark ran almost 10 times faster than the learning task on Hadoop...|$|E
40|$|This paper {{presents}} the AFRANCI {{tool for the}} development of Multi-Strategy learning systems. Designing a Multi-Strategy system using AFRANCI is a two step process. The use interactively designs the structure of the system and then chooses the learning strategies for each module. After providing the datasets all modules as automatically trained. The system is aware and takes into consideration the inter-dependency of the modules. The tool has built-in learning algorithms but can use external programs implementing the learning algorithms. The tool has the following facilities. It allows any user to design in an interactive and easy fashion the structure of the target system. The structure of the target system is a collection of interconnected modules. The user may then choose the different learning algorithms to construct each module. The tool has several <b>built-in</b> <b>Machine</b> Learning algorithms has has interfaces that enables it to use external learning tools like WEKA and CN 2. AFRANCI uses the interdependency of the modules to determine the sequence of training. For each module the system uses a wrapper to tune automatically the parameters of the learning algorithm. In the final step of the design sequence AFRANCI generates a compact and legible ready-to-use ANSI C open-source code for the final system...|$|E
40|$|Smart {{electricity}} meters have been replacing conventional meters worldwide, enabling automated collection of fine-grained (every 15 minutes or hourly) consumption data. A variety of smart meter analytics algorithms and applications have been proposed, {{mainly in the}} smart grid literature, but the focus thus far has been on {{what can be done}} with the data rather than how to do it efficiently. In this paper, we examine smart meter analytics from a software per-formance perspective. First, we propose a performance benchmark that includes common data analysis tasks on smart meter data. Sec-ond, since obtaining large amounts of smart meter data is diffi-cult due to privacy issues, we present an algorithm for generat-ing large realistic data sets from a small seed of real data. Third, we implement the proposed benchmark using five representative platforms: a traditional numeric computing platform (Matlab), a relational DBMS with a <b>built-in</b> <b>machine</b> learning toolkit (Post-greSQL/MADLib), a main-memory column store (“System C”), and two distributed data processing platforms (Hive and Spark). We compare the five platforms in terms of application development effort and performance on a multi-core machine as well as a cluster of 16 commodity servers. We have made the proposed benchmark and data generator freely available online. 1...|$|E
40|$|Debugging {{has always}} been a {{difficult}} task for a Java programmer. This specially applies to closed environments with <b>built-in</b> virtual <b>machines</b> like applets, servlets or Lotus Domino Agents. This paper sheds light on an alternate debugging approach, the source code debugger. Usually, Java debuggers work by communicating with a debugging virtual machine (a virtual machine extended with special debugging features and an interface to communicate with a debugger). Browsers, web servers and other applications that include a Java virtual machine usually work with a version without debugging support or with debugging disabled. So most debuggers fail to debug applets, servlets and the like running in their normal environment. In many cases it is possible to debug the code in a modified environment but this often requires expensive configurations which cause the developer to debug his application by adding print statements. The modified environment may have a different behavior than the original one, too. Some development tools also use proprietary approaches for debugging, which means that they can only debug processes that run on their own, speciall...|$|R
5000|$|Since then, Matrox has {{continued}} to shift the focus of its card designs towards specialized, niche markets, moving more deeply into enterprise, industrial, and government applications. This includes solutions for when {{a large amount of}} monitors attached to the same PC is required. In recent years they have held no more than a 3-5% share of the total video card market. Matrox is now divided in three divisions: Matrox Graphics, Matrox Video, and Matrox Imaging. Matrox Graphics is the primary consumer and end-user brand, while Matrox Video markets digital video editing solutions, and Matrox Imaging sells high-end video capture systems and [...] "smart cameras", video cameras with a <b>built-in</b> computer for <b>machine</b> vision applications.|$|R
2500|$|Simple point-and-shoot cameras rely almost {{exclusively}} on their <b>built-in</b> automation and <b>machine</b> intelligence for capturing images {{under a variety of}} situations and offer no manual control over their functions, a trait which makes them unsuitable for use by professionals, enthusiasts and proficient consumers (aka [...] "prosumers"). Bridge cameras provide some degree of manual control over the camera's shooting modes, and some even have hotshoes and the option to attach lens accessories such as filters and secondary converters. DSLRs typically provide the photographer with full control over all the important parameters of photography and have the option to attach additional accessories including hot shoe-mounted flash units, battery grips for additional power and hand positions, external light meters, and remote controls. DSLRs typically also have fully automatic shooting modes.|$|R
