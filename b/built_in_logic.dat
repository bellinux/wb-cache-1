1|10000|Public
40|$|This paper compares two fault {{injection}} techniques: scan chain implemented {{fault injection}} (SCIFI), i. e. fault injection {{in a physical}} system using built in test logic, and fault injection in a VHDL software simulation model of a system. The fault injections were {{used to evaluate the}} error detection mechanisms included in the Thor RISC microprocessor, developed by Saab Ericsson Space AB. The Thor microprocessor uses several advanced error detection mechanisms including control flow checking, stack range checking and variable constraint checking. A newly developed tool called FIMBUL (Fault Injection and Monitoring using <b>BUilt</b> <b>in</b> <b>Logic),</b> which uses the Test Access Port (TAP) of the Thor CPU to do fault injection, is presented. The simulations were carried out using the MEFIS-TO-C tool and a highly detailed VHDL model of the Thor processor. The results show that the larger fault set available in the simulations caused only minor differences in the error detection distribution compared to SCIFI and that the overall error coverage was lower using SCIFI (90 - 94 % vs. 94 - 96 % using simulation based fault injection) ...|$|E
50|$|Global ECS is {{the main}} product {{offering}} from Vinzant Software. It is an event-driven enterprise level job scheduling solution. It supports native Agents for other platforms including Unix, Linux, AS400 and MPE/ix that can all be managed from a single point using either a Windows or browser-based client. In addition to traditional time-based job scheduling, it supports triggers such as {{the existence of a}} file or completion of another job(s)or batch. Global ECS includes user-definable recovery actions that allow for <b>built</b> <b>in</b> job <b>logic</b> to allow the production flow to self-correct. It also includes flexible exception management that allows for multiple methods of notification.|$|R
50|$|The Rice Institute Computer, {{also known}} as the Rice Computer or R1, was a 54-bit tagged {{architecture}} digital computer built during 1958-1961 (partially operational beginning in 1959) on the campus of Rice University, Houston, Texas, United States. Operating as Rice's primary computer until the middle 1960s, the Rice Institute Computer was decommissioned in 1971. The system initially used vacuum tubes and semiconductor diodes for its logic circuits; some later peripherals were <b>built</b> <b>in</b> solid-state emitter-coupled <b>logic.</b> It was designed by Martin H. Graham.A copy of the machine called OSAGE was built and operated at the University of Oklahoma.|$|R
40|$|Proposal of {{abstract}} for LEB 99, Snowmass, Colorado, 20 - 24 September 1999 The PHOton Spectrometer of the ALICE experiment is an electromagnetic calorimeter of high granularity consisting of 17280 lead-tungstate (PWO) crystals of dimensions 22 x 22 x 180 mm 3, read out by large-area PIN-diodes with very low-noise front-end electronics. The crystal assembly is operated at - 25 C {{to increase the}} PWO light yield. A 16. 1 x 17. 1 mm 2 photodiode, optimized for the PWO emissio spectrum at 400 - 500 nm, has been developed. The 20 x 20 mm 2 preamplifier PCB {{is attached to the}} back side of the diode ceramic frame. The charge sensitive preamplifier is <b>built</b> <b>in</b> discrete <b>logic</b> with two input JFETs for optimum matching with the ~ 150 pF PIN-diode. A prototype shaper has been designed and <b>built</b> <b>in</b> discrete <b>logic.</b> For a detector matrix of 64 units the measured ENCs are between 450 - 550 e at - 25 C. Beam tests demonstrate that the required energy resolution is reached. Summary: The PHOton Spectrometer of the ALICE experiment is an electromagnetic calorimeter of high granularity consisting of 17280 lead-tungstate (PWO) crystals of dimensions 22 x 22 x 180 mm 3, coupled to large-area PIN-diodes with matching low-noise preamplifiers. PHOS is optimized for measuring photons, pi 0 s and eta mesons in the momentum ranges 0. 5 - 10, 1 - 10 and 2 - 10 GeV/c, respectively, and is designed for the expected large number of particles that will be produced in central Pb-Pb collisions. Lead tungstate (PWO) is a fast scintillating crystal with a rather complex emission spectrum, consisting of two components: a blue component peaking at 420 nm and a green component peaking at 480 - 520 nm. The light yield of PWO at room temperature is low compared with other heavy scintillating crystals, for instance BGO. However, the yield depends strongly on the temperature with a coefficient of ~- 2 degree. At the selected operating temperature of - 25 C the yield is about a factor of 3 higher compared to room temperature. Still, in order to reach the required energy resolution for a PHOS channel, an ENC noise of less than 600 e for the PIN-diode-preamplifier-shaper stage is required. This is a very low value taking into account the high capacitance of 150 - 200 pF of the large area PIN-diodes. In collaboration with the PHOS project, the company AME (Horten, Norway) has designed and produced a PIN-photodiode optimized for the cross-section and spectral responsivity of the PHOS PWO crystal. The photodiode has an active area of 17. 1 x 16. 1 mm 2 and is fabricated on n-type silicon material of thickness 280 um. The wafer specific resistivity is between 3000 and 6000 ohm-cm, which corresponds to a depletion voltage of 70 V. The photodiode response is optimized for the spectral region 400 - 500 nm in order to match the PWO emission spectrum. The PIN-diode is mounted on a ceramic substrate 0. 65 mm thick. On this substrate the diode is surrounded by a ceramic frame. The preamplifier PCB of dimension 20 x 20 mm 2 is attached to {{the back side of the}} frame. The PIN-diode and bondings to ground and preamplifier input are protected by an optically transparent epoxy layer. The front side of the PIN-diode is glued onto the endface of the PWO crystal with optically transparent glue (Melt-Mount Quick-Stick, Cargille Laboratories, USA). Each crystal is wrapped in White Tyvek to ensure maximum light collection efficiency and optical insulation between the crystals. The PHOS detector consists of four independent modules, each with 4320 channels. The crystal assembly with the photo detectors are operated at - 25 +/- 0. 3 C. The power dissipation per module is ~ 1 kW. The charge sensitive preamplifier is an operational amplifier <b>built</b> <b>in</b> discrete <b>logic</b> and with two input JFETs (BF 861 A). Using two JFETs in parallel gives the lowest noise for detector capacitance > 100 pF. A prototype shaper, comprising three amplification stages, has been designed and <b>built</b> <b>in</b> discrete <b>logic.</b> For a PIN-diode with capacitance ~ 150 pF and a leakage current < 1 nA under cooling, calculations give optimum time differentiation and integration constants around 3 microsec. For a detector matrix of 64 units the measured ENCs are between 450 - 550 e at - 25 C. Beam tests of this matrix show that the required energy resolution for the PHOS is reached...|$|R
40|$|Abstract. In {{traditional}} EDA flow, Technology mapping {{is performed}} after logic synthesis. Besides programmable logic blocks, heterogeneous FPGAs {{also have some}} hard blocks, such as memory block and multiplier, <b>built</b> <b>in</b> it. After <b>logic</b> synthesis, {{it will be difficult}} for technology mapping to find sub-circuits that can be implemented in hard blocks. In this paper, a systematic technology mapping approach is proposed. In the design phase, with the support of CAD tools, a module based design approach is used to map some design block to large hard blocks. During register transfer level synthesis, some functions that are suitable to be implemented in small hard blocks are identified. Other logic functions are mapped into lookup tables with different input size...|$|R
40|$|Abstract. Deduction modulo {{is a way}} {{to express}} a theory using {{computation}} rules instead of axioms. We present in this paper an extension of deduction modulo, called Polarized deduction modulo, where some rules can only be used at positive occurrences, while others can only be used at negative ones. We show that all theories in propositional calculus can be expressed in this framework and that cuts can always be eliminated with such theories. Mathematical proofs are almost never <b>built</b> <b>in</b> pure <b>logic,</b> but besides the deduction rules and the logical axioms that express the meaning of the connectors and quantifiers, they use something else- a theory- that expresses the meaning of the other symbols of the language. Examples of theories are equational theories, arithmetic, type theory, set theory, [...] . The usual definition of a theory, as a set of axioms, is sufficient when one is interested in the provability relation, but, as well-known, it is not when one is interested in the structure of proofs and in the theorem proving process. Fo...|$|R
5000|$|The primary {{advantage}} of superconducting computing is improved power efficiency over conventional CMOS technology. Much {{of the power}} consumed, and heat dissipated, by conventional processors comes from moving information between logic elements rather than the actual logic operations. Because superconductors have zero electrical resistance, little energy is required to move bits within the processor. This is expected to result in power consumption savings of a factor of 500 for an exascale computer. For comparison, in 2014 {{it was estimated that}} a 1 exaFLOPS computer <b>built</b> <b>in</b> CMOS <b>logic</b> is estimated to consume some 500 megawatts of electrical power. [...] Superconducting logic can be an attractive option for ultrafast CPUs, where switching times are measured in picoseconds and operating frequencies approach 770 GHz. [...] However, since transferring information between the processor and the outside world does still dissipate energy, superconducting computing was seen as well-suited for communications-intensive tasks where the data largely stays in the cryogenic environment, rather than big data applications where large amounts of information are streamed from outside the processor.|$|R
30|$|To {{smooth out}} the {{differences}} between the territories and make more effective the policy of “environmental – agricultural” introduced by the greening, the rural development measures should not be <b>built</b> only <b>in</b> the <b>logic</b> of voluntary instruments “substitute” to greening commitments, rather they should foster the acceptance of innovations in the cereal sector, as requested by the European regulatory framework. In this perspective, besides measures to support training in the management of diversified cropping systems (Capitanio et al., 2011), the second pillar of the CAP might help, especially in the areas of southern Italy, covering the transaction costs, including those resulting from structural adjustment, and the increased risk associated with the change in the types of product and their ability to penetrate local markets.|$|R
40|$|This paper proposes and evaluates an {{approach}} to facilitate semantic interoperability between Ontologies <b>built</b> <b>in</b> SHIQ description <b>logic</b> language <b>in</b> an attempt to overcome the heterogeneity problem of Ontologies. The structural definition of Ontologies {{is used as a}} key point to predict their similarities. Based on SHIQ General Concept Inclusion, Ontologies to be mapped are translated into hierarchical trees and a graph matching technique is used to find out similarities between the trees. Similarity between concepts is predicted based on their level of hierarchy and their logical definition. Semantic similarities between concepts are evaluated by putting more emphasis on the logical operators used in defining concepts with less reference to concepts syntactic similarities analysis. The obtained result shows that a pure structural comparison based mainly on logical operators used in defining Ontologies concepts provides a better approximation than a comparison combining the logical and syntactic similarities analysis evaluated based on the edit distance function...|$|R
40|$|Abstract — Embedded systems {{designers}} {{that use}} FPGAs are increasingly including soft processors in their designs (configurable processors <b>built</b> <b>in</b> the programmable <b>logic</b> of the FPGA). While {{there has been}} a significant amount of research on adding custom instructions and accelerators to soft processors, these are typically used to extend an unmodified base ISA targeted by generic compilation such as with unmodified gcc. In this paper we explore several opportunities for the compiler to optimize the code generated for soft processors through application-specific customization of the base ISA—techniques that are orthogonal to adding custom instructions. In particular we explore: (i) low level software-hardware trade-offs between basic instructions; (ii) the utility of ISA-specific features—in particular for the delay slots andHi/Lo registers in the MIPS ISA; and (iii) application specific register management. We find that through these techniques that have no hardware cost we can improve the area efficiency of soft processors by 12 % on average across a suite of benchmarks, and by up to 47 % in the best case. I...|$|R
50|$|Apple {{also made}} changes to ease of use. These include the {{discontinuation}} of the XSKey dongle, and a streamlined interface. Each plug-in {{used in the}} channel strip opens in a new window when double-clicked. Many of the features found <b>in</b> <b>Logic</b> 7 have been consolidated into one screen. Other additions to the new interface included consolidated arrange windows, dual channel strips, <b>built</b> <b>in</b> browsers (like that in GarageBand) and production templates.|$|R
40|$|Abstract: In {{this paper}} we discuss how to develop a smart {{instrument}} i. e. one that has <b>built</b> <b>in</b> scientific <b>logic</b> that allows it to behave intelligently. The instrument will be capable of providing near-real time updates and respond directly to user requests for data. We demonstrate this technique using a Davis Instrument as the &quot;sensor &quot; that is connected to an SBC MediaGX processor board running Windows CE 3. 0. The board supports 100 base-T Ethernet and TCP/IP. Communication with the Davis Instrument is through serial I/O. Requests for data are sent to the instrument over a serial interface. Specific tasks in the project included making hardware connections between the various components and software configuration on the device. A host PC is also {{set up for the}} development and transfer of embedded software using ActiveSync. The tools used include Embedded Visual C++ 3. 0 and other remote tools for editing files and working with the registry. Software approaches explored to provide access to the data include ASP, DCOM and XML data sources. A server on the Windows CE device connects to the Davis Instrument and logs temperature, pressure and humidity values to a file. Data is also recorded as XML. The server also exposes a COM interface so that a remote DCOM client can connect to it and read the data. The frequency with which values are logged can be changed remotely. Plots of the data are also supported using MATLAB on the host PC. Predefined conditions that occur in the data can be detected using XML and XSL and the user can be alerted when they occur. I...|$|R
50|$|In 1912-1916 - Lecturer <b>in</b> <b>Logic,</b> and Assistant <b>in</b> <b>Logic</b> and Metaphysics.|$|R
50|$|In {{addition}} to its research activities, the ILLC is running the Graduate Programme <b>in</b> <b>Logic</b> (GPiL) with a PhD programme and the MSc <b>in</b> <b>Logic,</b> an international and interdisciplinary MSc degree <b>in</b> <b>logic</b> (GPiL webpage).|$|R
50|$|The absurdity rule is a rule <b>in</b> <b>logic,</b> as used by Patrick Suppes <b>in</b> <b>Logic,</b> {{methodology}} and philosophy of science: Proceedings.|$|R
40|$|Rational Pavelka Logic {{does not}} admit infinitesi-mals. We argue that infinitesimals are {{important}} <b>in</b> <b>logic</b> and we present {{an alternative approach}} which admits them. It is <b>built</b> up <b>in</b> a similar style, but based on the Chang’s perfect MV-algebra. We prove a partial result towards the completeness of this logic. We also discuss a combined approach using more complex perfect MV-algebras...|$|R
40|$|In this paper, we {{prove the}} {{correspondence}} between complete extensions in abstract argumentation and 3 -valued stable models <b>in</b> <b>logic</b> programming. This result {{is in line}} with earlier work of [6] that identified the correspondence between the grounded extension in abstract argumentation and the well-founded model <b>in</b> <b>logic</b> programming, as well as between the stable extensions in abstract argumentation and the stable models <b>in</b> <b>logic</b> programming...|$|R
50|$|<b>In</b> <b>logic</b> - which, {{according}} to Hegel, is really metaphysic - {{we have to}} deal with the process of development applied to reality in its most abstract form. According to Hegel, <b>in</b> <b>logic,</b> we deal <b>in</b> concepts robbed of their empirical content: <b>in</b> <b>logic</b> we are discussing the process in vacuo, so to speak. Thus, at the very beginning of Hegel's study of reality, he finds the logical concept of being.|$|R
5000|$|... (with de Oliveira, A.) Geometry of Deduction via Graphs of Proof. <b>In</b> <b>Logic</b> for Concurrency and Synchronisation, R. de Queiroz (ed.), volume 18 of the Trends <b>in</b> <b>Logic</b> series, Kluwer Acad. Pub., Dordrecht, July 2003, , pp. 3-88.|$|R
5000|$|... (with Gabbay, D.) Labelled Natural Deduction. <b>In</b> <b>Logic,</b> Language and Reasoning. Essays in Honor of Dov Gabbay, H.J. Ohlbach and U. Reyle (eds.), volume 5 of Trends <b>in</b> <b>Logic</b> series, Kluwer Academic Publishers, Dordrecht, June 1999, pp. 173-250.|$|R
50|$|These {{principles}} do {{not hold}} <b>in</b> all <b>logics,</b> however. Obviously they {{do not hold}} <b>in</b> non-monotonic <b>logics,</b> nor do they hold <b>in</b> relevance <b>logics.</b>|$|R
40|$|This {{report is}} an attempt to {{describe}} the location of structural synthesis of programs (SSP) in the landscape of different methods of programming <b>in</b> <b>logic</b> by elucidating its relationship to other methods. After a short survey of the essentials of different methods of programming <b>in</b> <b>logic,</b> we present {{a brief description of the}} main ideas of SSP, and then show how SSP relates to these methods. The main claim of the report is that SSP is describable as logic meta-programming. ii SSP as Programming <b>in</b> <b>Logic</b> CONTENTS iii Contents 1 Introduction 1 2 Programming <b>in</b> <b>Logic</b> 2 2. 1 Functional Programming : : : : : : : : : : : : : : : : : : : : : : : 3 2. 2 Logic Programming : : : : : : : : : : : : : : : : : : : : : : : : : : 5 3 Structural Synthesis of Programs (SSP) 6 4 SSP as Programming <b>in</b> <b>Logic</b> 10 5 Conclusions 13 References iv SSP as Programming <b>in</b> <b>Logic</b> Section 1. Introduction 1 1 Introduction Structural synthesis of programs (SSP) is an approach to synthesis of functional program [...] ...|$|R
50|$|Achille Varzi, specializing <b>in</b> <b>logic</b> and metaphysics.|$|R
50|$|Tamar Lando, specializing <b>in</b> <b>logic</b> and epistemology.|$|R
50|$|Formulae <b>in</b> {{predicate}} <b>logic</b> translate {{easily into}} the Prolog artificial intelligence language. The modality is expressed by {{two different types}} of Prolog rules. Rules taken from the language creation stage of model building process are treated as incorrigible. While rules from the knowledge elicitation stage are marked as hypothetical rules. The system is not confined to decision support but has a <b>built</b> <b>in</b> learning capability.|$|R
50|$|LLL = reprinted <b>in</b> <b>Logic,</b> Logic, and Logic.|$|R
5000|$|... #Subtitle level 3: Application: Unification <b>in</b> <b>logic</b> {{programming}} ...|$|R
5000|$|Salva congruitate is a Latin {{scholastic}} term <b>in</b> <b>logic,</b> {{which means}} [...] "without becoming ill-formed", [...] meaning rescue, salvation, welfare and [...] meaning combine, coincide, agree. Salva Congruitate is used <b>in</b> <b>logic</b> {{to mean that}} two terms may be substituted for each other while preserving grammaticality in all contexts.|$|R
5000|$|Donald A. Gillies, The Fregean {{revolution}} <b>in</b> <b>logic</b> (265-305); ...|$|R
5000|$|Die Grundprobleme der Logik (Fundamental {{problems}} <b>in</b> <b>logic,</b> 1882) ...|$|R
5000|$|... #Article: European Summer School <b>in</b> <b>Logic,</b> Language and Information ...|$|R
5000|$|Kit Fine, specializing <b>in</b> <b>logic,</b> metaphysics, {{philosophy}} of language ...|$|R
5000|$|Mihak al-Nazar fi al-mantiq (Touchstone of Reasoning <b>in</b> <b>Logic)</b> ...|$|R
5000|$|<b>In</b> <b>logic,</b> the {{lowercase}} iota {{denotes the}} definite descriptor.|$|R
40|$|Theoretical paper {{discusses}} {{response of}} enhancement-mode metal oxide/semiconductor field-effect transistor to cosmic-ray ion that passes perpendicularly through gate-oxide layers. Even if ion causes no permanent damage, temporary increase of electrical conductivity along track of ion large enough and {{long enough to}} cause change <b>in</b> <b>logic</b> state <b>in</b> <b>logic</b> circuit containing MOSFET...|$|R
50|$|Lehigh University's Coppee Hall (<b>built</b> <b>in</b> 1883) {{was named}} for him; it was first a gymnasium, later {{the home of the}} Department of Arts and Science, and now is home to the Journalism and Communication program. During Coppée's tenure, much {{building}} was done on the new campus. A Moravian church on Packer Avenue was remodeled into Christmas Hall, a house for the president was erected, and Packer Hall, the university center, was <b>built.</b> Coppée lectured <b>in</b> history, <b>logic,</b> rhetoric, political economy and Shakespeare.|$|R
