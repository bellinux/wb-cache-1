131|208|Public
2500|$|Java 1.4 {{and higher}} support both 32-bit and 64-bit {{operation}} on z9. The System z9 also supports the zAAP processor, which allows {{most of the}} Java workload to be offloaded from the normal instruction processors. Java workloads executed by the zAAP processor do not count towards the IBM-rated capacity of the z9. [...] This reduces the z9's {{total cost of ownership}} compared with other IBM platforms, as otherwise IBM would raise a customer's (software) license fees after installing an additional (hardware) processor. [...] The zAAP also enables integration of new Java based Web applications with core z/OS <b>backend</b> <b>database</b> environment for high performance, reliability, availability, and security.|$|E
5000|$|Version 3.1.1 of 19. December 2010 allowed {{data storage}} in a MySQL <b>backend</b> <b>database.</b>|$|E
50|$|GoFish used Java {{with the}} Apache Tomcat web server to drive their website, and used either PostgreSQL or Oracle as their <b>backend</b> <b>database.</b>|$|E
50|$|All clients {{talk to the}} <b>backend</b> <b>databases</b> via ODBC.|$|R
50|$|Support for {{particular}} client OS, server OS, system architecture, <b>Backend</b> <b>Databases</b> and subscription services varies between versions and releases.|$|R
50|$|Database caching is {{a process}} {{included}} {{in the design of}} computer applications which generate web pages on-demand (dynamically) by accessing <b>backend</b> <b>databases.</b>|$|R
50|$|EveryDNS runs on an {{implementation}} of Daniel J. Bernstein's TinyDNS. EveryDNS uses MySQL and Perl to manage TinyDNS's hash tables. PHP {{is used to}} render the user interface, with information out of the MySQL <b>backend</b> <b>database.</b>|$|E
50|$|In reality, the <b>backend</b> <b>database</b> {{and control}} {{software}} consist of several systems, including an image processing cluster {{which is responsible}} for creating the final processed versions of the raw images that are taken by the telescope.|$|E
50|$|PriceRunner uses a {{combination}} of screen scraping retailers' websites and files supplied by the retailers themselves. These prices are matched against a <b>backend</b> <b>database.</b> This is done both by using a fuzzy logic automatching system and manually by admin staff.|$|E
50|$|When these {{applications}} are deployed on multi-tier environments that involve browser-based clients, web application servers and <b>backend</b> <b>databases,</b> middle-tier database caching {{is used to}} achieve high scalability and performance.|$|R
50|$|Traditionally, ClearQuest has {{comprised}} a {{fat client}} {{and a number}} of databases existing on a backend RDBMS server to store all captured data. ClearQuest supports various <b>backend</b> <b>databases</b> including Oracle, SQL Server and IBM DB2.|$|R
50|$|According to The Washington Post and {{national}} security reporter Marc Ambinder, XKeyscore is an NSA data-retrieval system which consists {{of a series of}} user interfaces, <b>backend</b> <b>databases,</b> servers and software that selects certain types of data and metadata that the NSA has already collected using other methods.|$|R
5000|$|... nopCommerce is an {{open-source}} E-commerce solution {{based on}} ASP.NET MVC 4.0 and MS SQL Server 2008 (or higher) <b>backend</b> <b>Database.</b> It is available under the nopCommerce Public License V3 and officially launched in October 2008 for small to medium-sized businesses.|$|E
50|$|The JobScheduler is an {{open-source}} {{computer application}} for enterprise-level scheduling and process automation. It {{is used to}} launch executable files and shell scripts and to automatically run database procedures. The JobScheduler stores status and historical information in a <b>backend</b> <b>database</b> management system.|$|E
50|$|LevelDB {{is used as}} the <b>backend</b> <b>database</b> for Google Chrome's IndexedDB {{and is one of}} the {{supported}} backends for Riak. Additionally, Bitcoin Core stores the blockchain metadata using a LevelDB database. Minecraft: Pocket Edition uses {{a modified}} version for chunk and entity data storage. Autodesk AutoCAD 2016 also uses LevelDB.|$|E
40|$|Wikis are online {{collaboration}} {{tools to}} share information amongst users. Today’s wiki engines typically lack features to integrate structured data from <b>backend</b> <b>databases.</b> We have created a solution for integrating wiki technology with SAP structured data. Our solution will help provide a lightweight end-user programming environment for users to access complex structured data...|$|R
40|$|Large web or {{e-commerce}} {{sites are}} frequently hosted on clusters. Successful open-source tools exist for clustering the front tiers of such sites (web servers and application servers). No comparable {{success has been}} achieved for scaling the <b>backend</b> <b>databases.</b> An expensive SMP machine is required if the database tier becomes the bottleneck. The few tools that exist for clustering databases are often database-specific and/or proprietary...|$|R
40|$|This paper {{proposes a}} {{relational}} constraint driven technique that synthesizes test cases automatically for web applications. Using a static analysis, servlets can be modeled as relational transducers, which manipulate <b>backend</b> <b>databases.</b> We present a synthesis algorithm that generates {{a sequence of}} HTTP requests for simulating a user session. The algorithm relies on backward symbolic image computation for reaching a certain database state, given a code coverage objective. With a slight adaptation, the technique {{can be used for}} discovering workflow attacks on web applications. ...|$|R
5000|$|Programmed using {{primarily}} C#, it {{is written}} using object oriented programming (OOP) techniques and built on the [...]NET platform with a SQL Server <b>backend</b> <b>database.</b> Because it is a web application for use with multiple browsers and operating systems and their various iterations, it integrates various other technologies, programming, and markup languages.|$|E
50|$|Apart {{from the}} {{standard}} ClearQuest user client, a design tool called ClearQuest Designer is also provided. This allows administrators to configure every aspect of not only the client interface but also {{the way in which}} data from specific widgets in the client are captured in the <b>backend</b> <b>database.</b> The ClearQuest Designer is currently only available for Microsoft Windows.|$|E
50|$|As of September 2012, {{the only}} <b>backend</b> <b>database</b> {{supported}} {{has been the}} same since its beginnings, MySQL. The database contains much of the operational data of the system, such as what TV tuners are available to the system and their characteristics/capabilities, what channels can be tuned by that tuning hardware, what recorded programs are available for viewing, program scheduling information, etc.|$|E
50|$|Database {{abstraction}} layers {{may limit}} the number of available database operations to a subset of those supported by the supported <b>database</b> <b>backends.</b> In particular, <b>database</b> abstraction layers may not fully support database backend-specific optimizations or debugging features. These problems magnify significantly with database size, scale, and complexity.|$|R
40|$|Developers {{across the}} world use autonumber or auto {{sequences}} field of the <b>backend</b> <b>databases</b> for developing both the desktop and web based data centric applications which is easier to use at the development and deployment purpose but can {{create a lot of}} problems under varied situations. This paper examines how a database independent autonumber could be developed and reused solving all the problems as well as providing the same degree of easy to use features of autonumber offered by modern Relational Database Systems. Comment: 03 pages, 02 figure...|$|R
40|$|Emerging high-dimensional {{data mining}} {{applications}} {{needs to find}} interesting clusters embeded in arbitrarily aligned subspaces of lower dimensionality. It is difficult to cluster high-dimensional data objects, when they are sparse and skewed. Updations are quite common in dynamic databases and they are usually processed in batch mode. In very large dynamic databases, {{it is necessary to}} perform incremental cluster analysis only to the updations. We present a incremental clustering algorithm for subspace clustering in very high dimensions, which handles both insertion and deletions of datapoints to the <b>backend</b> <b>databases.</b> Â© Springer-Verlag 2003...|$|R
50|$|The MONAHRQ-generated {{reporting}} website supports interactive querying. However, it {{does not}} connect to a <b>backend</b> <b>database.</b> All webpages are static. They use relatively simple client-side technologies such as HTML, Cascading Style Sheets, and JavaScript. This design makes it technically easy to host a MONAHRQ-generated website. However, in order to update the data in the website, the website must be regenerated.|$|E
50|$|Persistence allows Windows Workflow Foundation {{services}} {{to save the}} state of long running workflows to a database. This makes Workflow more durable {{in the event of}} deliberate suspensions or unexpected hardware failures. Hosting facilitates the management of WCF and WF services within IIS and the Windows Process Activation service (WAS). Monitoring stores and correlates service events in a <b>backend</b> <b>database.</b>|$|E
5000|$|Additionally, {{a number}} of {{command-line}} tools are provided to aid administrators, such as [...] "" [...] which is an ODBC SQL client allowing various {{actions to be taken}} on the <b>backend</b> <b>database</b> along with the execution of arbitrary SQL code. Another important example is [...] "" [...] which provides {{a number of}} facilities including the ability to import and export schema versions.|$|E
40|$|This paper {{reports on}} {{findings}} from an ongoing study of recent software applications {{that attempt to}} turn mobile ICT’s into political tools. The software in question endeavors to make new types of political behavior expressible for ICT users. Two troubling trends were found. The first involves incommensurability between <b>backend</b> <b>databases</b> and the data traces generated by users. The second involves the production of data and metadata vulnerabilities. As part of discussing these trends, the authors introduce the idea of “minor apps” and argue for their importance within discussions of sociotechnical aspects of digital infrastructure...|$|R
5000|$|<b>Database</b> <b>backend</b> (no more Revision Control System (RCS) files) ...|$|R
50|$|Easy {{switch between}} <b>database</b> <b>backends,</b> no code change needed. No {{compilation}} needed.|$|R
5000|$|On October 18, 2016, Google {{announced}} a new platform called Nomulus, which is an open source infrastructure that is available for everyone. Nomulus powers Google's top-level domain (TLD) registries, such as [...]google, [...]how, [...]soy. It is Java based and the source code is released under the Apache 2.0 license, {{even though it is}} integrated with Google's Cloud Platform, using Google Cloud Datastore as its <b>backend</b> <b>database.</b>|$|E
50|$|The idealo sites use a {{combination}} of screen scraping retailers' websites and CSV files supplied by the retailers themselves to create a unique database of product offers that is filtered by real people. These prices are matched against a bespoke <b>backend</b> <b>database</b> of products and this matching process is carried out by using a fuzzy logic automated matching system as well as large teams of people also acting as a quality control filter.|$|E
50|$|On August 17, 2008, {{the project}} was founded by Chris Tusa with work on version 1 of the code. A year later, {{development}} on this branch, now known as OpenTG/1, ended. The back-end configuration tool had taken shape using the NCurses library, and database abstraction using ruby-DBI and PostgreSQL for the <b>backend</b> <b>database</b> engine. The developer deemed {{this version of the}} code a failure due to problems maintaining NCurses screen layouts and SQL queries through DBI.|$|E
5000|$|... #Caption: The MKDE model {{allows for}} {{different}} <b>database</b> <b>backends</b> to be plugged into Pervasive's software product.|$|R
5000|$|There are a {{large number}} of {{software}} products that can use PostGIS as a <b>database</b> <b>backend,</b> including: ...|$|R
40|$|Caching {{has become}} an {{important}} technology {{in the development of}} cloud computing-based high-performance web services. Caches reduce the request to response latency experienced by users, and reduce workload on <b>backend</b> <b>databases.</b> They need a high cache-hit rate to be fit for purpose, and this rate is dependent on the cache management policy used. Existing cache management policies are not designed to prevent cache pollution or cache monopoly problems, which impacts negatively on the cache-hit rate. This paper proposes a community-based caching approach (CC) to address these two problems. CC was evaluated for performance against thirteen commercially available cache management policies, and results demonstrate that the cache-hit rate achieved by CC was between 0. 7 % and 55 % better than the alternate cache management policies...|$|R
