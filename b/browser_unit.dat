2|7|Public
50|$|In early 1998, Eich co-founded the Mozilla {{project with}} Mitchell Baker, {{creating}} the website mozilla.org {{that was meant}} to manage open-source contributions to the Netscape source code. He served as Mozilla's chief architect. AOL bought Netscape in 1999. After AOL shut down the Netscape <b>browser</b> <b>unit</b> in July 2003, Eich helped spin out the Mozilla Foundation.|$|E
5000|$|Dotzler is {{currently}} {{an employee of}} the Mozilla Corporation, producers of the Firefox Web browser. Before moving to the Corporation, Dotzler was one of the original employees at the non-profit Mozilla Foundation. Dotzler's first paying job on the cross-platform Mozilla web browser was in Mountain View, California as an employee of Netscape Communications Corporation. He was hired by Netscape in May 2000 to work with the [...] "staff@mozilla.org" [...] team. When AOL shut down the Netscape <b>browser</b> <b>unit</b> in July 2003, Dotzler was an original member of the team to start up the Mozilla Foundation. Before joining Netscape, Dotzler worked on Mozilla as a volunteer for over a year while living in Austin, Texas. Dotzler moved to Austin in 1997 after meeting his spouse, Deanna Pierce.|$|E
50|$|Froala Rich Text Editor is {{constantly}} tested {{in all the}} supported <b>browsers</b> via <b>unit</b> tests. However, there might be small differences from one browser to another according to the browser-specific behaviors. Testing is essential to fully support a browser.Only the last version of the WYSIWYG HTML editor is tested and updated to fix bugs and add features. Users of older versions that find a bug should upgrade to the latest released version {{to determine if the}} bug has already been fixed.|$|R
40|$|Ecological {{monitoring}} is {{an integral}} part of the ecological active adaptive management of wildlife reserves. The present study was conducted as an initial trial of a holistic ecological monitoring programme for Mabula Game Reserve using three existing survey methods. The information gained after each monitoring period and relevant management decisions are: Large herbivore monitoring: This monitoring system gave specific information on which vegetation community each of the types of large herbivores are utilising and selecting. This information was used in conjunction with the two vegetation monitoring systems and the wildlife count data to determine the stocking rate for each large herbivores on the reserve. If required, the populations can be increase or decreased, which was found to be necessary for browsers on Mabula Game Reserve. Herbaceous monitoring: This monitoring system provides information on the economic and ecological grazing capacity of the individual vegetation communities in terms of Grazing Units. The herbivore monitoring provides an estimation of the actual Grazing Units occurring in a vegetation community. The total stocking rate should be less than the economic grazing capacity (70 % of the ecological grazing capacity). Woody monitoring: This monitoring system provides information on the economic and ecological browsing capacity of the individual vegetation communities in terms of <b>Browser</b> <b>Units.</b> The herbivore monitoring provides an estimation of the stocking rate of browsers occurring in a vegetation community, which should be less than the economic grazing capacity (70 % of the cological grazing capacity). The combination of all the results from the three survey methods provided information on the stocking rates for the different types of herbivores, which will ensure optimal wildlife production without diminishing the condition of the vegetation on the reserve. Long-term monitoring will enable the establishment of a large database which can be used to assess the ecological dynamics of the components covered in the holistic monitoring system over time. Changes in habitat selection of the large herbivore can be observed and patterns can be determined in relation to environmental variables such as rainfall. The long-term monitoring of the vegetations layers will provide information on changes in the plant species composition and the structure of the vegetation communities. This information can then be compared to the habitat selection of the large herbivore species and other environmental influence to gain information to help in the determining the cause of any observed changes. CopyrightDissertation (MSc) [...] University of Pretoria, 2010. Animal and Wildlife Sciencesunrestricte...|$|R
40|$|Abstract: The World Wide Web {{illustrates}} {{the power of}} using a common, simple markup language (HTML) to describe distributed documents. To expand this power to other types of data, a system for the markup and visualization of linear data is introduced. The <b>Browser</b> for Linear <b>Units</b> in Java (Bluejay) is composed of three main components: (i) a set of Java foundation classes for data parsing, visualization, and user event handling, (ii) an HTTP proxy server for data conversion, and (iii) Java classes implementing the user interface for a particular application of the browser. Bluejay users can efficiently browse specialized data on the Web, concentrating on information {{of particular interest to}} them. This is achieved through the use of the W 3 C's Extensible Markup Language (XML) as the data format, a data conversion server, and a document components tree which can be configured to restrict the type of data shown. An application of Bluejay for browsing genetic sequence data encoded in BIOML [...] ...|$|R
5000|$|Viewable Impression {{relies on}} Web bugs (or 'tags') {{placed on the}} web pages or in the {{third-party}} ad servers that distribute ads on the website(s) content pages. These tags are placed on a web page and when rendered, employing a [...] "Correlator" [...] (a linear correlation control.) The ad space is then [...] "marked up," [...] an [...] "ad request” (server log impression) is recorded, and the Correlator begins communicating with the web page, <b>browser</b> and ad <b>unit</b> (ad space) embedded in the webpage content. The Correlator can collect additional non-private information from the viewer’s browser, including the viewer’s operating system, browser type and version {{and a list of}} other ads that were previously rendered on the page to prevent duplication of ads on the content page. Once any portion of the ad unit (definable), on a viewer's in focus web page, hits the visible area of the browser window a request is sent to an ad content server to deliver an advertisement.|$|R
40|$|Keywords: Abstract: The World Wide Web {{illustrates}} {{the power of}} using a common, simple markup language (HTML) to describe distributed documents. To expand this power to other types of data, a system for the markup and visualization of linear data is introduced. The <b>Browser</b> for Linear <b>Units</b> in Java (Bluejay) is composed of three main components: (i) a set of Java foundation classes for data parsing, visualization, and user event handling, (ii) an HTTP proxy server for data conversion, and (iii) Java classes implementing the user interface for a particular application of the browser. Bluejay users can efficiently browse specialized data on the Web, concentrating on information {{of particular interest to}} them. This is achieved through the use of the W 3 C’s Extensible Markup Language (XML) as the data format, a data conversion server, and a document components tree which can be configured to restrict the type of data shown. An application of Bluejay for browsing genetic sequence data encoded in BIOML (an XML) is described to demonstrate the principles of the system. Creating an integrated view of heterogeneous, distributed genetics and genomics databases, the application {{illustrates the}} usefulness of borrowing the HTML browser paradigm to create specialized data visualization using XML. Despite the use of proxy servers and drawing abstraction, data retrieval and display performance is kept high through the use of special caching techniques for the proxy, and simple module replacement in the application...|$|R
40|$|This study, {{undertaken}} {{under the}} auspices of the Centre of Wildlife Management and the former Centre for Indigenous Knowledge (University of Pretoria) was conducted in Maputaland, with special reference to the Tembe Elephant Park, Sileza Nature Reserve and in the neighbouring traditional wards (izigodi) of Mbangweni, Bhekabantu, Kwandaba, Zama-zama, Tsokotho, Manqakulani (which includes the Tshanini Community Conservation Area), Lulwane, Mntikini, Ndlondlweni, Ndovu and Sibonisweni. The main objective of this study was to evaluate the range condition and grazing capacity of the natural veld. A management plan for the Tshanni Community Conservation Area is presented, which could potentially serve as template for similar areas. To accomplish these objectives a cattle as well as a vegetation survey were conducted. The cattle surveys were conducted among the local communities (mentioned above) to identify and to evaluate the role played by cattle in the everyday lives of the communual people and to identify the types of grazing regime (practices). The vegetation surveys were undertaken to evaluate the range condition, grazing capacity and grazing quality of the herbaceous vegetation. The study also included methods to determine the number, distribution and health status of cattle present in the study area. The results indicated that social and religious values that were associated with cattle in the older Zulu culture have clearly faded in the Tembe Traditional Area. The current values of local communal people regarding cattle were concentrated on utilization and investment for future uncertainties. Cattle were still seen as wealth and status symbols in the local communities and were highly prized possessions if they could be obtained. The official cattle numbers did not seem to reflect the actual cattle numbers in the study area at the time of study. It was also clear that cattle were distributed in areas where the water supply was sufficient. The main grazing areas were thus in the east of the study area in the hygrophilous vegetation to the east of Manqakulani and mainly in Ndlondlweni. No specific grazing management practices could be identified and the grazing system could be best described by a continuous grazing practice. Grazing was not restricted to any part or piece of land inside the specific isigodi as long as the cattle stayed out of other people’s cultivated land. Overstocking the grazing area was not occurring at the time of the study as the stocking density was well below the area’s capacity. The general perception of the majority of the cattle owners was that their cattle were in a good condition. An analysis of the results obtained from the vegetation survey indicated that the herbaceous biomass yield did not vary noticeably among the management units within a site as well as among the different sites. The small fuel loads in the Tshanini Community Conservation Area did not necessitate burning and were probably below fuel loads needed for fires to spread. However, it was frequently observed that fire could be maintained in areas where the herbaceous biomass yield was below 2 000 kg/ha. The results represented in this study also indicated that the management units of the Tshanini Community Conservation Area were generally in a good condition and that the range condition of the Tshanini Community Conservation Area compared relatively well with the other reserves in the study area. The modified Ecological Index Method was reliable and time saving, yet simplistic enough for assessing the range condition of the management units of the Tshanini Community Conservation Area and the entire Tembe Traditional Area. The stocking density must be adaptable and based on the quantity and quality of grazing available at any time. The model that was used to calculate the stocking density of the study area allows for several elements to be modified to suit the conditions on a particular wildlife reserve at a particular time. For example, in future it may become necessary to adjust the percentage composition of graze and browse in the diet of some animal types for the calculation of Grazer <b>Units</b> (GU) and <b>Browser</b> <b>Units</b> (BU), mainly because the diet of the same type of animal may vary regionally. Finally, changes in the choice of the types of wildlife can be accommodated depending on the preferences and objectives of the management and steering committee of the Tshanini Community Conservation Area. This model can be applied as a tool for active adaptive management because it allows more control over the quantity and quality of available food plant resources and hence the stocking density of animal resources. It is proposed that the results of the present study be combined and integrated into a Geographic Information System (G. I. S.) database that could form the ecological basis for future management planning of the Tembe Traditional Area as part of the Usuthu-Tembe-Futi Transfrontier Conservation Area. Dissertation (MSc) [...] University of Pretoria, 2009. Animal and Wildlife Sciencesunrestricte...|$|R
40|$| the Fall 2005 students, and Appendix B {{presents}} the 12 rule questions {{administered to the}} Spring 2006 students. The questionnaire changed over classes in relationship to updates to the Java tutor. Other questionnaires were also administered, to include demographic items and software self-efficacy (see Emurian, 2005). Following completion of the Java tutor, students in both classes repeated the rule-based questions in a post-tutor assessment. The programmed instruction tutoring system taught a simple Java applet that would display a text string, as a JLabel object, within a browser on the World Wide Web 3. Table 1 {{presents the}} Java code for the tutor version presented to the Fall 2005 students. The program was arbitrarily organized into ten lines of code and 34 items of code. Each item occupies a cell in the table, and PI learn units were based upon cells and lines. Table 2 presents the Java code for the tutor version presented to the Summer 2006 students. The program was arbitrarily organized into 11 lines of code and 37 items of code. Each item occupies a cell in the table, and PI learn units were based upon cells and lines. The symbols in the tables may be cryptic on initial 3 The Behavior Analyst Today Volume 8, Issue 1, 2007 encounter, but {{the objective of the}} tutor was to teach students to understand and use the symbols in the tables, even if the student had never before written a Java computer program. The tutor and the open source code are freely available on the web, as referenced above. Running the tutor {{is the best way to}} understand its components and operation. In brief, the web-based Java tutor consists of the following eight stages: (1) introduction and example of the program running in a <b>browser</b> (learn <b>units</b> = 1), (2) learning to copy an item of code (learn units = 34 or 37), (3) learning to discriminate an item of code in a list (learn units = 34 or 37), (4) learning the semantics of an item of code (learn units = 34 or 37) and learning the syntax by typing the item by recall (learn units = 34 or 37), (5) learning to copy a line of code (learn units = 10 or 11), (6) learning to discriminate a line of code in a list (learn units = 10 or 11), (7) learning the semantics of a line of code (learn units = 10 or 11) and learning the syntax by typing the line by recall (learn units = 10 or 11), and (8) writing the entire program by recall (learn units = 1). Thus, for the Fall 2005 class, the minimum number of learn units to complete the tutor was 178; for the Summer 2006 class, the minimum number of learn units was 194. The multiple-choice 4 The Behavior Analyst Today Volume 8, Issue 1, 2007 tests for items and lines of code, which are embedded in the tutor, had five answer choices. For an incorrect items answer, there was a 5 -sec delay or “time-out” in the tutor’s interaction with the learner. For a correct items answer, a confirmation window appeared stating a general rule associated with the correct answer or an elaboration of the explanation of the meaning of the item. For both tutor versions, the lines stage had no delay interval or confirmation window. Experience suggested that most students in our courses could complete the tutor within two to three hrs. The tutor transitioned automatically between stages, and students were able to take breaks between and within stages. The instructions, however, encouraged students to complete each stage before taking a break. At the completion of each tutor stage, a record of performance, which included stage duration and performance errors, was transmitted to a database on the server. The only identifier was the student’s email username, similar to what appears in any email transmission on the Internet. Students were informed of this record’s transmission, and the instructional protocol was exempt from informed consent. Network interruptions sometimes prevented a record from being written, and this paper includes only those students who had records for all eight stages in the tutor. Procedure For the Fall 2005 class, the first meeting provided orientation to the course. The pre-tutor questionnaire was administered and collected. As homework, students were instructed to complete the Java tutor before the next class meeting. At the completion of the tutor, students downloaded the post-tutor questionnaire from the course Blackboard site, completed it electronically, and returned it to the instructor by email attachment. For the Summer 2006 class, the procedure was similar, but it was the expectation that all students could complete the tutor within the three-hr class period. Thus, the post-tutor questionnaire was administered and collected as students completed the tutor in class. Only one student was not able to complete the tutor during class, and that student was not included in the data to be presented here because the records were not obtained. RESULTS Figure 1 presents scatterplots of total learn units and total correct rule-test answers for the pre-tutor baseline and post-tutor assessments for each of the students in the Fall 2005 class. Regression lines and Pearson correlation parameters are presented on the figure. The figure shows graphically that correct rule answers increased from pre-tutor baseline to post-tutor assessment for all nine students. The figure also shows that pre-tutor correct rule answers were not demonstrably related to subsequent learn unit frequency, and the test of the relationship failed to provide evidence of an orderly relationship. In contrast, the figure shows graphically that total learn units encountered during the tutor were inversely related to subsequent post-tutor correct rule answers, and the test of the relationship was significant. Students who required comparatively fewer learn units during the tutor achieved a higher number of post-tutor correct rule answers in comparison to students who required comparatively more learn units to complete the tutor. Figure 2 presents scatterplots of total learn units and total correct rule-test answers for the pre-tutor baseline and post-tutor assessments for each of the students in the Summer 2006 5 The Behavior Analyst Today Volume 8, Issue 1, 2007 class. Regression lines and Pearson correlation parameters are presented on the figure. The figure shows graphically that correct rule answers increased from pre-tutor baseline to post-tutor assessment for eight of the nine students. The exception was a student who answered 11 correct rule questions on both occasions. The figure also shows that pre-tutor correct rule answers were not demonstrably related to subsequent learn unit frequency, and the test of the relationship failed to provide evidence of an orderly relationship. In contrast, the figure shows graphically that total learn units encountered during the tutor were inversely related to subsequent post-tutor correct Figure 1. Scatterplots of learn units and correct rule answers for pre-tutor and post-tutor assessments for nine students in the Fall 2005 class. Also presented are regression lines and R 2 values for each line. 6 The Behavior Analyst Today Volume 8, Issue 1, 2007 Figure 2. Scatterplots of learn units and correct rule answers for pre-tutor and post-tutor assessments for nine students in the Summer 2006 class. Also presented are regression lines and R 2 values for each line. rule answers, and the test of the relationship was significant. Students who required comparatively fewer learn units during the tutor achieved a higher number of post-tutor correct rule answers in comparison to students who required comparatively more learn units to complete the tutor. Figure 3 presents scatterplots of total learn units to complete the tutor and total time to complete the tutor for each of the students in the Fall 2005 class. The shortest time to complete the tutor was 60. 5 min, and the longest time was 543. 2 min. A Pearson correlation did not support a relationship between time and total learn units. 7 The Behavior Analyst Today Volume 8, Issue 1, 2007 8 Figure 3. Scatterplots of total time required to complete the tutor and total learn units required to complete the tutor for the nine students in the Fall 2005 class. Figure 4 presents scatterplots of total learn units to complete the tutor and total time to complete the tutor for each of the students in the Summer 2006 class. The shortest time to complete the tutor was 60. 0 min, and the longest time was 143. 1 min. A Pearson correlation did not support a relationship between time and total learn units. DISCUSSION The relationship between learn unit frequency and rule-test performance was orderly for students over two different classes. As the number of learn units to complete the tutor increased over students, the number of correct answers produced on the rule test decreased. However, the data did not support a similar relationship between baseline rule-test performance and subsequent learn unit frequency or between time in the tutor and learn unit frequency to complete the tutor. These effects were observed for undergraduate and graduate students, for two versions of the Java program, for two versions of the rule test, and for two ways to complete the tutor: (1) homework, which favored distributed learning, and (2) class work, which supported massed learning. The similarity in outcomes shows the reliability of the behavioral processes under conditions of systematic replication (Sidman, 1960), thereby demonstrating the generality of the findings. The Behavior Analyst Today Volume 8, Issue 1, 2007 Figure 4. Scatterplots of total time required to complete the tutor and total learn units required to complete the tutor for the nine students in the Summer 2006 class. All students in the Fall 2005 class and eight of the nine students in the Summer 2006 class showed improvement in rule-test performance between the pre-tutor baseline and the post-tutor assessment. However, the knowledge transfer from the tutor to the rule test (i. e., “far transfer”) differed across students, despite the fact that all students exited the tutor with equivalent competency, at least as operationalized by tutor performance. In fact, only one student (Summer 2006) showed perfect performance on the post-tutor assessment. The orderliness observed, then, was to predict post-tutor rule-test performance by the number of learn units required to complete the tutor. Surprisingly, however, the evidence was insufficient to show a similar orderly relationship between pre-tutor baseline rule-test performance and the number of learn units later required to complete the tutor. This outcome is consistent with the observation that frequent testing and test feedback that is immediate and corrective, such as occurred within the Java tutor, may sometimes hinder, rather than help, knowledge acquisition by giving learners an overly optimistic opinion of their competency (Mathan & Koedinger, 2005). Although students may sometimes prefer item-by-item feedback (e. g., Buzhardt & Semb, 2002), it is also acknowledged that multiple-choice recognition tests may assess only low-level learning processes and may lead to overconfidence in long-term retention (Halpern & Hakel, 2003). The observation that total correct rule answers on the post-tutor assessment were generally lower for students who used a relatively greater number of learn units suggests that equivalent “knowledge” was not achieved by all students at the completion of the tutor. When multiple-choice tests are used to assess learning, as was the case in the present tutor, the opportunity for repetition may not always occasion the “studying behavior” essential to apply a principle to the selection of the correct alternative on a test. Although the term “learn unit” was applied to the tutor components, the failure of transfer...|$|R

