24|121|Public
2500|$|Hitachi {{produced}} its own 6809-based machines, the MB6890 {{and later}} the S1. These were primarily for the Japanese market, but some were exported to and sold in Australia. There the MB6890 was dubbed the [...] "Peach", probably in ironic reference to {{the popularity of the}} Apple II. The S1 was notable in that it contained paging hardware extending the 6809's native 64 kilobyte (64×210 <b>byte)</b> <b>addressing</b> range to a full 1 megabyte (1×220 byte) in 4 KB pages. It was similar in this to machines produced by SWTPC, Gimix, and several other suppliers. TSC produced a Unix-like operating system uniFlex which ran only on such machines. OS-9 Level II, also took advantage of such memory management facilities. Most other computers of the time with more than 64 KB of memory addressing were limited to bank switching where much if not all the 64 KB was simply swapped for another section of memory.|$|E
50|$|With <b>byte</b> <b>addressing,</b> {{that can}} be {{achieved}} in one instruction: store this character code at that byte address. Text programs are easier to write, smaller, and run faster.|$|E
5000|$|Because Prime's {{hardware}} did {{not perform}} <b>byte</b> <b>addressing,</b> there was no impetus to create a C compiler. Late models of the hardware were eventually modified to support [...] "I-mode", and programs compiled in C.|$|E
50|$|Some {{architectures}} like MIPS {{have special}} unaligned load and store instructions. One unaligned load instruction gets the bytes from the memory word {{with the lowest}} <b>byte</b> <b>address</b> and another gets the bytes from the memory word with the highest <b>byte</b> <b>address.</b> Similarly, store-high and store-low instructions store the appropriate bytes in the higher and lower memory words respectively.|$|R
50|$|Short {{branches}} are 2-byte instructions, and use 256-byte range, single <b>byte</b> <b>address,</b> page {{absolute addressing}} {{in the range}} 0 to 255 (hex FF). There is no relative branching. Therefore, {{care must be taken}} when attempting to cross page boundaries, which is impossible using short branches, except in two cases. There can be 'side effects', or known usage, when performing a short branch and the short branch instruction or the <b>address</b> <b>byte</b> is the last byte on the page. In this instance, because the PC is incremented after retrieving the <b>byte</b> <b>address,</b> or when the <b>address</b> <b>byte</b> is the first byte of the next page, the PC now points to the next page, not the page in which the branch instruction/byte address is located, so the branch will be in that next page.|$|R
50|$|Later {{models of}} the DEC PDP-11 series mapped the {{registers}} onto addresses in the input/output area, but this was primarily intended to allow remote diagnostics. Confusingly, the 16-bit registers were mapped onto consecutive 8-bit <b>byte</b> <b>addresses.</b>|$|R
50|$|At {{least partly}} due {{to the success of the}} S/360, and the {{resultant}} standardization on 8-bit character codes and <b>byte</b> <b>addressing,</b> nine-track tapes were very widely used throughout the computer industry during the 1970s and 1980s.|$|E
50|$|<b>Byte</b> <b>addressing</b> {{refers to}} {{hardware}} architectures which support accessing individual bytes of data rather than only larger units called words, {{which would be}} word-addressable. Such computers are sometimes called byte machines (in contrast to word machines).|$|E
50|$|The {{high-order}} four bits {{specify the}} operation {{to be performed}} (with bit 15 generally selecting word versus <b>byte</b> <b>addressing).</b> Two groups of six bits specify mode and register, as defined above, for each of two operands.|$|E
50|$|An SSI message {{consists}} of a 2-byte header and an n-byte payload. The header {{consists of}} a one <b>byte</b> <b>address</b> (wildcard is '?', 0x3F in ASCII) and a one byte message/command type. The different possible values for the message/command type are presented in SSI v1.2 command base.|$|R
50|$|An ESDS {{may have}} an index defined to it to enable access via keys, by {{defining}} an Alternate Index. Records in ESDS are stored in {{order in which they}} are written by address access. Records are loaded irrespective of their contents and their <b>byte</b> <b>addresses</b> cannot be changed.|$|R
2500|$|MOV , CL Move the {{contents}} of CL into the <b>byte</b> at <b>address</b> ESI+EAX ...|$|R
50|$|To {{illustrate}} why <b>byte</b> <b>addressing</b> is useful, {{consider the}} IBM 7094 which is word addressable {{and has no}} concept of a byte. It has 36 bit words, and stores its six-bit character codes six to a word.|$|E
50|$|When {{computers}} were so costly {{that they were}} only or mainly used for science and engineering, word addressing was the obvious mode. As it became cost-effective to use computers for handling text, hardware designers moved to <b>byte</b> <b>addressing.</b>|$|E
5000|$|SCSI uses a one <b>byte</b> <b>addressing</b> {{scheme for}} {{diagnostic}} pages, {{allowing for a}} total 256 possible pages. There is a standard map of diagnostic page addresses shown below. Note that any given SCSI device type will only support a subset of these diagnostic pages.|$|E
3000|$|... ∗ Flow ID, 13 bytes. For TCP and UDP flows, {{the flow}} ID {{is the sum}} of five-tuples {{including}} 4 <b>bytes</b> source IP <b>addresses,</b> 2 <b>bytes</b> source port numbers, 4 <b>bytes</b> destination IP <b>addresses,</b> 2 <b>bytes</b> destination port numbers, and 1 byte of protocol, which makes 13 bytes in total. For ICMP flows, the flow ID {{is the sum of}} six-tuples including 4 <b>bytes</b> source IP <b>addresses,</b> 4 <b>bytes</b> destination IP <b>addresses,</b> 1 <b>byte</b> protocol, 1 byte ICMP type, 1 byte ICMP code, and 2 bytes ICMP ID, altogether 13 bytes.|$|R
50|$|The {{alternate}} wording b-bit aligned designates a b/8 <b>byte</b> aligned <b>address</b> (ex. 64-bit aligned is 8 bytes aligned).|$|R
50|$|The {{formulation}} above {{checks the}} entire {{result of an}} add. However, in a CPU cache decoder, the entire result of the add is a <b>byte</b> <b>address,</b> and the cache is usually indexed with a larger address, in our example, that of an 8-byte block. It is preferable to ignore {{a few of the}} LSBs of the address. However, the LSBs of the two addends can't be ignored because they may produce a carry-out which would change the doubleword addressed.|$|R
50|$|With no <b>byte</b> <b>addressing</b> {{instructions}} at all, code had to {{be written}} to pack and shift characters into words. The very large words, and comparatively small amount of memory, meant that programmers would frequently economize on memory by packing data into words at the bit level.|$|E
5000|$|<b>Byte</b> <b>addressing</b> {{means that}} the {{physical}} address passed on the Unibus is interpreted as the address of a byte-sized quantity of data. Because the bus actually contains a data path that is two bytes wide, address bit [...] is subject to special interpretation and data on the bus has to travel in the correct byte lanes.|$|E
50|$|The {{high-order}} nine bits {{specify the}} operation {{to be performed}} (with bit 15 generally selecting word versus <b>byte</b> <b>addressing).</b> (There are not as many operations as it seems, as most combinations of the high-order four bits are taken by the double-operand instructions.) A single group of six bits specifies mode and register, as defined above, for the single operand.|$|E
5000|$|An Entry Sequenced Data Set (ESDS) {{is a type}} of {{data set}} used by the VSAM {{computer}} data storage system. Records are accessed based on their sequential order, that is, the order in which they were written to the file; which means that accessing a particular record involves searching all the records sequentially until it is located, or by using a relative physical <b>address</b> (Relative <b>byte</b> <b>address,</b> RBA), i.e. the number of bytes {{from the beginning of the}} file to start reading.|$|R
50|$|Although its {{storage medium}} was tape, the 2321 {{was a direct}} access storage device which could {{directly}} access a record rather than scan all the tape to find a record as would a conventional tape drive. IBM's System 360 operating system addressed the 2321 as a {{direct access storage device}}s, i.e., a disk drive, with a 6-byte seek address of the form ØBBSCH (hexadecimal) where the first byte is zero and the remaining <b>bytes</b> <b>address</b> the Bin (i.e., cell), Bin (i.e., sub-cell), Strip, Cylinder and Head.|$|R
5000|$|If the 8086 is {{to retain}} 8-bit object codes {{and hence the}} {{efficient}} memory use of the 8080, then it cannot guarantee that (16-bit) opcodes and data will lie on an even-odd <b>byte</b> <b>address</b> boundary. The first 8-bit opcode will shift the next 8-bit instruction to an odd byte or a 16-bit instruction to an odd-even byte boundary. By implementing the [...] signal and the extra logic needed, the 8086 has allows instructions to exist as 1-byte, 3-byte or any other odd byte object codes.|$|R
5000|$|Accessing {{individual}} elements can {{be expensive}} and difficult to express in some languages. If random access is more common than sequential and the array is relatively small, a byte array may be preferable on a machine with <b>byte</b> <b>addressing.</b> A word array, however, is probably not justified due to the huge space overhead and additional cache misses it causes, unless the machine only has word addressing.|$|E
50|$|The PDP-11 {{operates}} on bytes and words. Bytes are specified by a register number—identifying the register's low-order byte—or by a memory location. Words are specified by a register number {{or by the}} memory location of the low-order byte, which must be an even number. In most instructions that take operands, bit 15 is set to specify <b>byte</b> <b>addressing,</b> or clear to specify word addressing. In the lists in the following two sections, the assembly-language programmer appended B to the instruction symbol to specify a byte operation; for example, MOV became MOVB.|$|E
50|$|The IBM System/360 (S/360) is a {{mainframe}} computer system family that was announced by IBM on April 7, 1964, and delivered between 1965 and 1978. It {{was the first}} family of computers designed to cover the complete range of applications, from small to large, both commercial and scientific. The design made {{a clear distinction between}} architecture and implementation, allowing IBM to release a suite of compatible designs at different prices. All but the incompatible model 44 and the most expensive systems used microcode to implement the instruction set, which featured 8-bit <b>byte</b> <b>addressing</b> and binary, decimal and (hexadecimal) floating-point calculations.|$|E
25|$|The {{program counter}} is a 64-bit {{register}} which contains a longword-aligned virtual <b>byte</b> <b>address,</b> that is, the low two {{bits of the}} program counter are always zero. The PC is incremented by four to {{the address of the}} next instruction when an instruction is decoded. A lock flag and locked physical address register are used by the load-locked and store-conditional instructions for multiprocessor support. The floating-point control register (FPCR) is a 64-bit register defined by the architecture intended for use by Alpha implementations with IEEE 754-compliant floating-point hardware.|$|R
5000|$|The {{format of}} data on the tape is: 100 bytes with the value 0x16 (SYN, Synchronous Idle), one byte with the value 0x2A (*), the record {{identification}} number, the start address (two characters for the low <b>byte</b> of <b>address,</b> two characters for the high <b>byte),</b> the end <b>address</b> (in the same format), the actual data, one byte with the value 0x2F ("/" [...] character [...] ), a two-byte checksum, and two bytes with the value 0x04 (EOT, End Of Transmission).|$|R
5000|$|... {{the four}} IPv4 <b>address</b> <b>bytes</b> (hex 99 6D 07 5A, or 153.109.7.90 in dotted-decimal notation), ...|$|R
50|$|Magic debug {{values are}} {{specific}} values written to memory during allocation or deallocation, {{so that it}} will later be possible to tell whether or not they have become corrupted, and to make it obvious when values taken from uninitialized memory are being used. Memory is usually viewed in hexadecimal, so memorable repeating or hexspeak values are common. Numerically odd values may be preferred so that processors without <b>byte</b> <b>addressing</b> will fault when attempting to use them as pointers (which must fall at even addresses). Values should be chosen that are away from likely addresses (the program code, static data, heap data, or the stack). Similarly, they may be chosen so that they are not valid codes in the instruction set for the given architecture.|$|E
50|$|This {{means that}} unaligned PER data is {{essentially}} an ordered stream of bits, and not an ordered stream of bytes like with aligned PER, {{and that it will}} be a bit more complex to decode by software on usual processors because it will require additional contextual bit-shifting and masking and not direct <b>byte</b> <b>addressing</b> (but the same remark would be true with modern processors and memory/storage units whose minimum addressable unit is larger than 1 octet). However modern processors and signal processors include hardware support for fast internal decoding of bit streams with automatic handling of computing units that are crossing the boundaries of addressable storage units (this is needed for efficient processing in data codecs for compression/decompression or with some encryption/decryption algorithms).|$|E
5000|$|Hitachi {{produced}} its own 6809-based machines, the MB6890 {{and later}} the S1. These were primarily for the Japanese market, but some were exported to and sold in Australia. There the MB6890 was dubbed the [...] "Peach", probably in ironic reference to {{the popularity of the}} Apple II. The S1 was notable in that it contained paging hardware extending the 6809's native 64 kilobyte (64×210 <b>byte)</b> <b>addressing</b> range to a full 1 megabyte (1×220 byte) in 4 KB pages. It was similar in this to machines produced by SWTPC, Gimix, and several other suppliers. TSC produced a Unix-like operating system uniFlex which ran only on such machines. OS-9 Level II, also took advantage of such memory management facilities. Most other computers of the time with more than 64 KB of memory addressing were limited to bank switching where much if not all the 64 KB was simply swapped for another section of memory.|$|E
50|$|Messages on the CSDB {{consist of}} one <b>address</b> <b>byte</b> {{followed}} by {{any number of}} data bytes.|$|R
25|$|In {{real-world}} exploits {{there are}} a variety of challenges which need to be overcome for exploits to operate reliably. These factors include null <b>bytes</b> in <b>addresses,</b> variability in the location of shellcode, differences between environments and various counter-measures in operation.|$|R
5000|$|Checksum, two hex digits, {{the least}} {{significant}} byte of ones' complement of {{the sum of}} the values represented by the two hex digit pairs for the <b>byte</b> count, <b>address</b> and data fields. See example section for a detailed checksum example.|$|R
