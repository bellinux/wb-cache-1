2276|2761|Public
25|$|Karnaugh {{maps are}} used to {{facilitate}} the simplification of Boolean algebra functions. For example, consider the <b>Boolean</b> <b>function</b> described by the following truth table.|$|E
25|$|Time {{is viewed}} as {{proceeding}} in discrete steps. At each step, the new state of a node is a <b>Boolean</b> <b>function</b> of the prior states of the nodes with arrows pointing towards it.|$|E
25|$|Another natural {{condition}} {{would be}} that the clone generated by F together with the two nullary constant functions be functionally complete or, equivalently, functionally complete in the strong sense of the previous paragraph. The example of the <b>Boolean</b> <b>function</b> given by S(x,y,z)=z if x=y and S(x,y,z)=x otherwise shows that this condition is strictly weaker than functional completeness.|$|E
40|$|Abstract. <b>Boolean</b> <b>Functions</b> are {{fundamental}} {{tools in the}} design of several cryptographic algorithms. They are used for designing S-boxes in block ciphers and utilized as filters in stream ciphers. Constructing balanced <b>boolean</b> <b>functions</b> with high nonlinearity is a significant study area in <b>Boolean</b> <b>functions.</b> In this paper, we construct several classes of highly nonlinear balanced <b>boolean</b> <b>functions</b> by adding two particular <b>boolean</b> <b>functions</b> to a bent function which generalizes Dobbertin’s construction...|$|R
40|$|In this paper, {{we present}} a class of 2 k-variable {{balanced}} <b>Boolean</b> <b>functions</b> and a class of 2 k-variable 1 -resilient <b>Boolean</b> <b>functions</b> for an integer k ≥ 2, which both have the maximal algebraic degree and very high nonlinearity. Based on a newly proposed conjecture by Tu and Deng, it is shown that the proposed balanced <b>Boolean</b> <b>functions</b> have optimal algebraic immunity and the 1 -resilient <b>Boolean</b> <b>functions</b> have almost optimal algebraic immunity. Among all the known results of balanced <b>Boolean</b> <b>functions</b> and 1 -resilient <b>Boolean</b> <b>functions,</b> our new functions possess the highest nonlinearity. Based {{on the fact that}} the conjecture has been verified for all k ≤ 29 by computer, at least we have constructed a class of balanced <b>Boolean</b> <b>functions</b> and a class of 1 -resilient <b>Boolean</b> <b>functions</b> with the even number of variables ≤ 58, which are cryptographically optimal or almost optimal in terms of balancedness, algebraic degree, nonlinearity, and algebraic immunity. Keywords- <b>Boolean</b> <b>functions,</b> balancedness, algebraic immunity, nonlinearity, algebraic degree, 1 -resilient function...|$|R
40|$|In {{digital systems}} where <b>Boolean</b> <b>functions</b> are {{frequently}} manipulated, {{it is important}} to know how evaluation time of <b>Boolean</b> <b>functions</b> is consumed during their execution by the processor. Estimation of the evaluation time of <b>Boolean</b> <b>functions</b> plays an important role in function-architecture co-design. The evaluation time complexity of <b>Boolean</b> <b>functions</b> represented by Binary Decision Diagrams (BDDs) is directly related to the path length of the BDD. This paper describes a BDD approach that gives an estimation method for the time evaluation of <b>Boolean</b> <b>functions.</b> The proposed technique is validated using both experimental and mathematical techniques...|$|R
2500|$|<b>Boolean</b> <b>{{function}},</b> {{a function}} that determines Boolean values or operators ...|$|E
2500|$|Given the Boolean domain B={0,1}, a set F of Boolean {{functions}} ƒi:Bni→B is functionally complete if {{the clone}} on B {{generated by the}} basic functions ƒi contains all functions ƒ:Bn→B, for all strictly positive integers [...] In other words, the set is functionally complete if every <b>Boolean</b> <b>function</b> that takes at least one variable can be {{expressed in terms of}} the functions ƒi. Since every <b>Boolean</b> <b>function</b> of at least one variable can be expressed in terms of binary Boolean functions, F is functionally complete if and only if every binary <b>Boolean</b> <b>function</b> can be expressed in terms of the functions in F.|$|E
2500|$|A <b>Boolean</b> <b>function,</b> or logical connective, is an n-ary {{operation}} [...] for some , where 2 denotes the two-element set {0, 1}. Particular Boolean functions are the projections ...|$|E
40|$|The {{main focus}} of this thesis is on {{interval}} <b>Boolean</b> <b>functions.</b> The thesis presents some fundamental knowledge about <b>Boolean</b> <b>functions,</b> their representations and, in particular, concentrates on positive <b>boolean</b> <b>functions.</b> The thesis quotes several known results about interval functions, such as their various properties, some recognition algorithms and their complexity. Then the thesis introduces commutative <b>Boolean</b> <b>functions</b> and studies the properties of commutative positive <b>Boolean</b> <b>functions</b> and some derived forms. The thesis formulates several propositions about their structure and number of intervals. The most important and new result is the algorithm for recognition of positive 3 -interval functions. Finally the thesis analyzes the structure and number of intervals of a few particular general <b>Boolean</b> <b>functions...</b>|$|R
40|$|Fn ???? ???????? ??????? ??? n ??????????, ? ????? ????? ?????????????? ??????????? ???????? ??????? ?? ?????? ? ?????????? ??????. In {{this article}} was {{examined}} classification of <b>boolean</b> <b>functions</b> on the attitude ecvivalation, which determined on the ensemble Fn of all <b>boolean</b> <b>functions</b> from n arguments, {{as well as some}} cryptographs particularity of <b>boolean</b> <b>functions</b> on one of determined classes...|$|R
40|$|Complexity of <b>Boolean</b> <b>functions</b> {{satisfying}} the propagation criterion(PC), an extended {{notion of the}} perfect nonlinearity, is discussed on several computation models. The following topics are investigated; (i) relationships between the unateness {{and the degree of}} the PC, (ii) the inversion complexity of perfectly nonlinear <b>Boolean</b> <b>functions,</b> (iii) the formula size of <b>Boolean</b> <b>functions</b> that satisfy the PC of degree 1, (iv) the area-time-square complexity of VLSI circuits computing perfectly nonlinear <b>Boolean</b> <b>functions,</b> (v) the OBDD size of perfectly nonlinear <b>Boolean</b> <b>functions.</b> 1 Introduction The aim {{of this paper is to}} characterize the PC in terms of the complexity of <b>Boolean</b> <b>functions</b> {{satisfying the}} criterion. Nonlinearity is an important concept for the design of conventional cryptosystems. The propagation criterion(PC) [8], which is a generalized notion of the perfect nonlinearity[6], is a nonlinearity criteria of <b>Boolean</b> <b>functions.</b> The PC is a measure of randomness of the differen [...] ...|$|R
2500|$|The lattice has {{a natural}} {{symmetry}} mapping each clone C to its dual clone , where [...] is the de Morgan dual of a <b>Boolean</b> <b>function</b> f. For example, , , and [...]|$|E
2500|$|A {{truth table}} {{reduction}} or a weak truth table reduction must present {{all of its}} oracle queries at the same time. In a truth table reduction, the reduction also gives a <b>boolean</b> <b>function</b> (a truth table) which, when given {{the answers to the}} queries, will produce the final answer of the reduction. In a weak truth table reduction, the reduction uses the oracle answers as a basis for further computation depending on the given answers (but not using the oracle). Equivalently, a weak truth table reduction is one for which the use of the reduction is bounded by a computable function. For this reason, weak truth table reductions are sometimes called [...] "bounded Turing" [...] reductions.|$|E
5000|$|Leaves {{labeled with}} [...] (...) {{represent}} the constant <b>Boolean</b> <b>function</b> which always evaluates to 1 (0). A leaf labeled with a Boolean variable [...] is {{interpreted as the}} assignment , i.e. it represents the <b>Boolean</b> <b>function</b> which evaluates to 1 {{if and only if}} [...] The <b>Boolean</b> <b>function</b> represented by a -node is the one that evaluates to 1, if and only if the <b>Boolean</b> <b>function</b> of all its children evaluate to 1. Similarly, a -node represents the <b>Boolean</b> <b>function</b> that evaluates to 1, if and only if the <b>Boolean</b> <b>function</b> of at least one child evaluates to 1. Finally, a -node represents the complemenatary <b>Boolean</b> <b>function</b> its child, i.e. the one that evaluates to 1, if and only if the <b>Boolean</b> <b>function</b> of its child evaluates to 0.|$|E
40|$|In this paper, {{we discuss}} {{the effect of the}} {{cryptographic}} properties of translation transformation rotation symmetric <b>Boolean</b> <b>functions.</b> On construction of rotation symmetric <b>Boolean</b> <b>functions</b> with the optimal algebraic immunity, we construct correlation immunity <b>Boolean</b> <b>functions</b> with the optimal algebraic immunity by translation transformation and concatenation transformation...|$|R
40|$|We {{present some}} {{compositions}} of clones of <b>Boolean</b> <b>functions</b> that imply factorizations of ?, the clone of all <b>Boolean</b> <b>functions,</b> into minimal clones. These {{can be interpreted}} as representation theorems, providing representations of <b>Boolean</b> <b>functions</b> analogous to the disjunctive normal form, the conjunctive normal form, and the Zhegalkin polynomial representations...|$|R
40|$|Propagation {{criterion}} of degree l and order k (PC(l) of order k) for <b>Boolean</b> <b>functions</b> {{is important for}} the design of block ciphers. In [1 - 2] Kurosawa, Stoh and Carlet gave several constructions of <b>Boolean</b> <b>functions</b> satisfying PC(l) of order k from binary linear or nonlinear codes. Matsumoto, Kurosawa and Itoh proved some lower bounds and an nonconstructive upper bound on the input length the <b>Boolean</b> <b>functions</b> in Kurosawa-Satoh construction. In this paper, algebraic-geometric codes over GF(2 m) are inserted in Kurosawa-Satoh construction for giving explicit constructions of <b>Boolean</b> <b>functions</b> satisfying PC(l) of order k by this AG-construction. This method give some constructive upper bound on the minimum input length of <b>Boolean</b> <b>functions</b> satisfying 1 PC(l) of order k in Kurosawa-Satoh construction. Index Terms—Cryptography, block cipher, <b>Boolean</b> <b>functions,</b> algebraic-geometric codes, Garcia-Stichtenoth curve...|$|R
5000|$|Description: this {{function}} takes in a <b>boolean</b> <b>function</b> and 2 or more attribute values or bags. The higher-order function applies the <b>boolean</b> <b>function</b> {{to the remaining}} parameters.|$|E
50|$|In mathematics, a {{symmetric}} <b>Boolean</b> <b>function</b> is a <b>Boolean</b> <b>function</b> whose value {{does not}} depend on the permutation of its input bits, i.e., it depends only on the number of ones in the input.|$|E
5000|$|A propositional {{directed}} acyclic graph (PDAG) is a {{data structure}} {{that is used to}} represent a <b>Boolean</b> <b>function.</b> A <b>Boolean</b> <b>function</b> can be represented as a rooted, {{directed acyclic graph}} of the following form: ...|$|E
40|$|The {{two most}} {{important}} criteria for vectorial <b>Boolean</b> <b>functions</b> used as S-boxes in block ciphers are differential uniformity and nonlinearity. Previous work in this field has focused only on nonlinearity and a different criterion, autocorrelation. In this paper, we describe the results of experiments in using simulated annealing, memetic algorithms, and ant colony optimisation to create vectorial <b>Boolean</b> <b>functions</b> with low differential uniformity. Keywords: Metaheuristics, simulated annealing, memetic algorithms, ant colony optimization, cryptography, <b>Boolean</b> <b>functions,</b> vectorial <b>Boolean</b> <b>functions...</b>|$|R
40|$|The {{description}} {{of the class of}} minimum pi -schemes, realizing linear <b>Boolean</b> <b>functions</b> is the aim of the paper as well as the obtaining of low estimations of the pi -scheme complexity for code <b>Boolean</b> <b>functions.</b> All minimum pi -schemes, realizing linear <b>Boolean</b> <b>functions</b> of 2 _k variables have been found. Low estimations of the pi -scheme complexity for code <b>Boolean</b> <b>functions</b> have been obtainedAvailable from VNTIC / VNTIC - Scientific & Technical Information Centre of RussiaSIGLERURussian Federatio...|$|R
40|$|The work {{is focused}} on <b>Boolean</b> <b>functions.</b> At first, it {{describes}} the ways <b>Boolean</b> <b>functions</b> are represented. Besides the representation using truth- table, vector of values and algebraic normal form which are usually shown we also show some other representations like univariate representation and trace repre- sentation. Moreover, we explain the relations among these representations. Then summary {{of the theory of}} <b>Boolean</b> <b>functions</b> is given, in order to understand important properties of <b>Boolean</b> <b>functions</b> corectly. Finally, these properties are studied, their interconnection is explained and the following cryptographic cri- teria of <b>Boolean</b> <b>functions</b> are describe: the algebraic degree, the nonlinearity, balancedness, resiliency and correlation immunity. ...|$|R
50|$|Any {{particular}} <b>Boolean</b> <b>function</b> can {{be represented}} by one and only one full disjunctive normal form, one of the canonical forms. In contrast, two different plain disjunctive normal forms may denote the same <b>Boolean</b> <b>function,</b> see pictures.|$|E
50|$|Every k-ary <b>Boolean</b> <b>function</b> can be {{expressed}} as a propositional formula in k variables x1, …, xk, and two propositional formulas are logically equivalent {{if and only if}} they express the same <b>Boolean</b> <b>function.</b> There are 22k k-ary functions for every k.|$|E
50|$|In {{mathematics}} and computer science, a balanced <b>boolean</b> <b>function</b> is a <b>boolean</b> <b>function</b> whose output yields as many 0s as 1s over its input set. This means {{that for a}} uniformly random input string of bits, the probability of getting a 1 is 1/2.|$|E
40|$|In this correspondence, {{first we}} give a {{decomposition}} of symmetric <b>Boolean</b> <b>functions,</b> then {{we show that}} almost all symmetric <b>Boolean</b> <b>functions,</b> including these functions with good algebraic immunity, behave badly against fast algebraic attacks. Besides, we improve the relations between algebraic degree and algebraic immunity of symmetric <b>Boolean</b> <b>functions.</b> © 2011 IEEE...|$|R
40|$|Abstract. In this paper, we {{investigate}} {{the problem of}} obtaining new construction methods for resilient <b>Boolean</b> <b>functions.</b> Given n(n odd and n ≥ 35), we firstly provide degree optimized 1 -resilient n-variable functions with currently best known nonlinearity. Then we extend our method to obtain m-resilient(m> 1) <b>Boolean</b> <b>functions</b> with degree n−m − 1, we show that these <b>Boolean</b> <b>functions</b> also achieve currently best known nonlinearity. Finally, the algebraic immunity and immunity against fast algebraic attack of the obtained <b>Boolean</b> <b>functions</b> are in-vestigated...|$|R
40|$|<b>Boolean</b> <b>functions</b> have {{important}} applications in cryptography and coding theory. Two famous classes of binary codes derived from <b>Boolean</b> <b>functions</b> are the Reed-Muller codes and Kerdock codes. In {{the past two}} decades, {{a lot of progress}} on the study of applications of <b>Boolean</b> <b>functions</b> in coding theory has been made. Two generic constructions of binary linear codes with <b>Boolean</b> <b>functions</b> have been well investigated in the literature. The objective of this paper is twofold. The first is to provide a survey on recent results, and the other is to propose open problems on one of the two generic constructions of binary linear codes with <b>Boolean</b> <b>functions.</b> These open problems are expected to stimulate further research on binary linear codes from <b>Boolean</b> <b>functions.</b> Comment: arXiv admin note: text overlap with arXiv: 1503. 06511; text overlap with arXiv: 1505. 07726 by other author...|$|R
50|$|In mathematics, an evasive <b>Boolean</b> <b>function</b> &fnof; (of n variables) is a <b>Boolean</b> <b>function</b> {{for which}} every {{decision}} tree algorithm has running time of exactly n. Consequently, every decision tree algorithm {{that represents the}} function has, at worst case, a running time of n.|$|E
5000|$|In {{algorithmic}} learning theory, {{a concept}} over a domain X is a <b>Boolean</b> <b>function</b> over X. Here we only consider finite domains. A partial approximation S of a concept c is a <b>Boolean</b> <b>function</b> over [...] such that c {{is an extension}} to S.|$|E
5000|$|There are {{two major}} notions of circuit {{complexity}} (these are outlined in Sipser (1997)). The circuit-size complexity of a <b>Boolean</b> <b>function</b> [...] is the minimal size of any circuit computing [...] The circuit-depth complexity of a <b>Boolean</b> <b>function</b> [...] is the minimal depth of any circuit computing [...]|$|E
40|$|Three {{important}} {{criteria for}} cryptographically strong <b>Boolean</b> <b>functions</b> are balance, nonlinearity and the propagation criterion. The main contribution {{of this paper}} is to reveal a number of interesting properties of balance and nonlinearity, and to study systematic methods for constructing <b>Boolean</b> <b>functions</b> that satisfy some or all of the three criteria. We show that concatenating, splitting, modifying and multiplying (in the sense of Kronecker) sequences can yield balanced <b>Boolean</b> <b>functions</b> with a very high nonlinearity. In particular, we show that balanced <b>Boolean</b> <b>functions</b> obtained by modifying and multiplying sequences achieve a nonlinearity higher than that attainable by any previously known construction method. We also present methods for constructing balanced <b>Boolean</b> <b>functions</b> that are highly nonlinear and satisfy the strict avalanche criterion (SAC). Furthermore we present methods for constructing highly nonlinear balanced <b>Boolean</b> <b>functions</b> satisfying the propagation criterion [...] ...|$|R
40|$|AbstractWe give a new {{lower bound}} to the {{covering}} radius of the first order Reed–Muller code RM(1,n), where n∈{ 9, 11, 13 }. Equivalently, we present the n-variable <b>Boolean</b> <b>functions</b> for n∈{ 9, 11, 13 } with maximum nonlinearity found till now. In 2006, 9 -variable <b>Boolean</b> <b>functions</b> having nonlinearity 241, which is strictly greater than the bent concatenation bound of 240, have been discovered {{in the class of}} Rotation Symmetric <b>Boolean</b> <b>Functions</b> (RSBFs) by Kavut, Maitra and Yücel. To improve this nonlinearity result, we have firstly defined some subsets of the n-variable <b>Boolean</b> <b>functions</b> as the generalized classes of “k-RSBFs and k-DSBFs (k-Dihedral Symmetric <b>Boolean</b> <b>Functions)</b> ”, where k is a positive integer dividing n. Secondly, utilizing a steepest-descent like iterative heuristic search algorithm, we have found 9 -variable <b>Boolean</b> <b>functions</b> with nonlinearity 242 within the classes of both 3 -RSBFs and 3 -DSBFs. Thirdly, motivated by the fact that RSBFs are invariant under a special permutation of the input vector, we have classified all possible permutations up to the linear equivalence of <b>Boolean</b> <b>functions</b> that are invariant under those permutations...|$|R
40|$|<b>Boolean</b> <b>functions</b> are the {{building}} blocks of symmetric cryptographic systems. Symmetrical cryptographic algorithms are fundamental tools in the design of all types of digital security systems (i. e. communications, financial and e-commerce). Cryptographic <b>Boolean</b> <b>Functions</b> and Applications is a concise reference that shows how <b>Boolean</b> <b>functions</b> are used in cryptography. Currently, practitioners who need to apply <b>Boolean</b> <b>functions</b> in the design of cryptographic algorithms and protocols need to patch together needed information from a variety of resources (books, journal articles and other sources). This book compiles the key essential information in one easy to use, step-by-step reference. Beginning with the basics of the necessary theory the book goes on to examine more technical topics, some of which are at the frontier of current research. -Serves as a complete resource for the successful design or implementation of cryptographic algorithms or protocols using <b>Boolean</b> <b>functions</b> -Provides engineers and scientists with a needed reference for the use of <b>Boolean</b> <b>functions</b> in cryptography -Addresses the issues of cryptographic <b>Boolean</b> <b>functions</b> theory and applications in one concentrated resource. -Organized logically to help the reader easily understand the topi...|$|R
