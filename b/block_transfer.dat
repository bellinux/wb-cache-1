130|726|Public
2500|$|Unlike the Doctor, the Master {{does not}} usually have {{companion}}s. [...] There {{have been times}} when he made exceptions, though in his case they are not so much [...] "companions" [...] as [...] "tools". In Castrovalva, the Doctor's companion Adric was abducted by the Master and forced to create a <b>block</b> <b>transfer</b> computation. Later, in The King's Demons, Kamelion is controlled by the Master before the Doctor steals him away, with the Master regaining control of Kamelion in Planet of Fire. In the second episode of The Ultimate Foe, Sabalom Glitz chose to go with the Master in search of Time Lord secrets.|$|E
50|$|A <b>block</b> <b>transfer</b> attempt {{begins when}} the first bit of the block crosses the {{functional}} interface between the source user and the telecommunication system. A <b>block</b> <b>transfer</b> attempt ends either in successful <b>block</b> <b>transfer</b> or in <b>block</b> <b>transfer</b> failure.|$|E
50|$|Successful <b>block</b> <b>{{transfer}}</b> is {{the transfer}} of a correct, nonduplicate, user information block between the source user and intended destination user. Successful <b>block</b> <b>transfer</b> occurs when {{the last bit of}} the transferred block crosses the functional interface between the telecommunications system and the intended destination user. Successful <b>block</b> <b>transfer</b> can only occur within a defined maximum <b>block</b> <b>transfer</b> time after initiation of a <b>block</b> <b>transfer</b> attempt.|$|E
40|$|Abstract. We {{present an}} {{efficient}} cache-oblivious {{implementation of the}} shortest-path algorithm for planar graphs by Klein et al., and prove that it incurs no more than O ` N B 1 / 2 −ɛ + N B log N ´ <b>block</b> <b>transfers</b> on a graph with N vertices. This is the first cache-oblivious algorithm for this problem that incurs o(N) <b>block</b> <b>transfers.</b> ...|$|R
50|$|Block Data Transfer: Provides a means <b>transferring</b> <b>Block</b> 1 and Block 2 {{data types}} as <b>block</b> <b>transfers</b> instead of point by point. In some {{situations}} this may reduce bandwidth requirements.|$|R
50|$|Streaming {{computations}} can be efficiently accommodated using software pipelining {{of memory}} <b>block</b> <b>transfers</b> using a multi-buffering strategy.|$|R
50|$|A <b>block</b> <b>transfer</b> {{protocol}} allows several bus {{transfers to}} occur {{with a single}} address cycle. In <b>block</b> <b>transfer</b> mode, the first transfer includes an address cycle and subsequent transfers require only data cycles. The slave is responsible for ensuring that these transfers use successive addresses.|$|E
50|$|The IBM 8514/A display adapter, {{introduced}} {{with the}} IBM Personal System/2 computers in April 1987, includes bit <b>block</b> <b>transfer</b> hardware.|$|E
50|$|The cache-oblivious {{priority}} queue can implement operations including insertion, deletion and delete-min in O(1/B(logM/B N/B)) amortized memory transfers(M and B are memory and <b>block</b> <b>transfer</b> size).|$|E
40|$|Abstract. We {{study the}} problem of {{maintaining}} a dynamic ordered set subject to insertions, deletions, and traversals of k consecutive elements. This problem is trivially solved on a RAM and on a simple two-level memory hierarchy. We explore this traversal problem on more realistic memory models: the cache-oblivious model, which applies to unknown and multi-level memory hierarchies, and sequential-access models, where sequential <b>block</b> <b>transfers</b> are less expensive than random <b>block</b> <b>transfers.</b> ...|$|R
50|$|During {{his third}} season with Aston Villa, de la Cruz became {{frustrated}} at {{his lack of}} first team opportunities and accused O'Leary of <b>blocking</b> <b>transfers</b> for him.|$|R
5000|$|CompactFlash Revision 5.0 (2010) added {{a number}} of features, {{including}} 48-bit addressing (supporting 128 Petabyte of storage), larger <b>block</b> <b>transfers</b> of up to 32 Megabytes, quality-of-service and video performance guarantees, and other enhancements ...|$|R
50|$|Over time, the {{physical}} address {{range of the}} Q-bus was expanded from 16 to 18 and then 22 bits. <b>Block</b> <b>transfer</b> modes were also added to the Q-bus.|$|E
5000|$|A <b>block</b> <b>transfer</b> {{attempt is}} a coordinated {{sequence}} of user and telecommunication system activities undertaken to effect transfer {{of an individual}} block from a source user to a destination user.|$|E
50|$|In addition, the <b>block</b> <b>transfer</b> {{technology}} {{has been applied to}} improve ‘Tibero Active Cluster’- the shared DB clustering technology which is similar to Oracle RAC. Tibero supports self-tuning based performance optimization, reliable database monitoring, and performance management.|$|E
50|$|This {{algorithm}} {{will involve}} nr*bs+ br <b>block</b> <b>transfers</b> and nr+br seeks, where br and bs are number of blocks in relations R and S respectively, and nr {{is the number}} of tuples in relation R.|$|R
25|$|Most {{of the new}} {{instructions}} are modifications of existing instructions to handle {{the existence of the}} additional registers, such as load, store, add, and the like. Genuine 6309 additions include inter-register arithmetic, <b>block</b> <b>transfers,</b> hardware division, and bit-level manipulations.|$|R
50|$|VBE/AF {{provides}} a low-level, standard interface to common acceleration functions available on most hardware. Some {{of the functions}} defined in the standard are access to hardware cursors, Bit <b>Block</b> <b>Transfers</b> (Bit Blt), off screen sprites, hardware panning, drawing and other functions.|$|R
50|$|The 1973 Xerox Alto, {{where the}} term bit blit originated, {{had a bit}} <b>block</b> <b>transfer</b> {{instruction}} implemented in microcode, making it much faster than the same operation written on the CPU. The microcode was implemented by Dan Ingalls.|$|E
5000|$|In the 1980s, when bitmapped {{computer}} displays became popular, some computers provided specialized bit <b>block</b> <b>transfer</b> ("bitblt" [...] or [...] "blit") {{instructions to}} set or copy the bits that corresponded {{to a given}} rectangular area on the screen.|$|E
50|$|Bit blit (also written BITBLT, BIT BLT, BitBLT, Bit BLT, Bit Blt etc., {{which stands}} for bit <b>block</b> <b>transfer)</b> is a data {{operation}} commonly used in computer graphics in which several bitmaps are combined into one using a boolean function.|$|E
40|$|Unlike {{in other}} countries, {{negotiated}} block shares have huge discounts in China. We argue that trading restrictions {{help to explain}} this puzzle. Block shares in China face trading restrictions in the open market and can only be traded {{in the form of}} <b>block</b> <b>transfers</b> at negotiated prices. Using a dataset of 233 <b>block</b> <b>transfers</b> in China between 2002 and 2003, we find that discounts on block share prices increase with the proportion of restricted shares in the ownership. The likelihood of private benefit of control has positive impact on block prices, but the effect diminishes when there are other large shareholders. Furthermore, private institutions offer a higher price than state-owned institutions. G 30 G 12 Trading restrictions Block shares Private benefit of control...|$|R
40|$|Tight bounds on {{the cost}} of cache-oblivious searching are proved. It is shown that no cache-oblivious search {{structure}} can guarantee that a search performs fewer than lg e log B N <b>block</b> <b>transfers</b> between any two levels of the memory hierarchy. This lower bound holds even if all of the block sizes are limited to be powers of 2. A modi ed version of the van Emde Boas layout is proposed, whose expected <b>block</b> <b>transfers</b> between any two levels of the memory hierarchy arbitrarily close to [lg e +O(lg lg B= lg B) ] log B N +O(1). This factor approaches lg e 1 : 443 as B increases. The expectation is taken over the random placement of the rst element of the structure in memory...|$|R
5000|$|Each of the [...] "Records in" [...] and [...] "Records out" [...] lines {{shows the}} number of {{complete}} <b>blocks</b> <b>transferred</b> + {{the number of}} partial blocks, e.g. because the physical medium ended before a complete block was read, or a physical error prevented reading the complete block.|$|R
50|$|A memory copy {{operation}} is {{sometimes referred to}} as a 'block transfer'. This term is sometimes abbreviated as BLT (there's actually a BLT instruction on the PDP-10) and pronounced 'blit'. The term 'blittable' expresses whether it is legal to copy an object using a <b>block</b> <b>transfer.</b>|$|E
50|$|The name {{derives from}} the BitBLT routine for the Xerox Alto computer, {{standing}} for bit-boundary <b>block</b> <b>transfer.</b> Dan Ingalls, Larry Tesler, Bob Sproull, and Diana Merry programmed this operation at Xerox PARC in November 1975 for the Smalltalk-72 system. Dan Ingalls later implemented a redesigned version in microcode.|$|E
50|$|CPU: 8-bit HuC6280A, a {{modified}} 65SC02 running at 1.79, or 7.16 MHz (switchable by software). Features integrated bankswitching hardware (driving a 21-bit {{external address bus}} from a 6502-compatible 16-bit address bus), an integrated general-purpose I/O port, a timer, <b>block</b> <b>transfer</b> instructions, and dedicated move instructions for communicating with the HuC6270A VDC.|$|E
40|$|Tight bounds on {{the cost}} of cache-oblivious searching are proved. It is shown that no cache-oblivious search {{structure}} can guarantee that a search performs fewer than lg e log B N <b>block</b> <b>transfers</b> between any two levels of the memory hierarchy. This lower bound holds even if all of the block sizes are limited to be powers of 2. A modified version of the van Emde Boas layout is proposed, whose expected <b>block</b> <b>transfers</b> between any two levels of the memory hierarchy arbitrarily close to [lg e + O(lg lg B / lg B) ] log B N + O(1). This factor approaches lg e ≈ 1. 443 as B increases. The expectation is taken over the random placement of the first element of the structure in memory. As searching in the Disk Access Model (DAM) can be performed in log B N + 1 <b>block</b> <b>transfers,</b> this result shows a separation between the 2 -level DAM and cache-oblivious memory-hierarchy models. By extending the DAM model to k levels, multilevel memory hierarchies can be modelled. It is shown that as k grows, the search costs of the optimal k-level DAM search structure and of the optimal cache-oblivious search structure rapidly converge. This demonstrates that for a multilevel memory hierarchy, a simple cacheoblivious structure almost replicates the performance of an optimal parameterized k-level DAM structure. ...|$|R
40|$|International audienceGiven string S[1 [...] N] and integer k, the suffix {{selection}} {{problem is}} to determine the kth lexicographically smallest amongst the suffixes S[i [...] . N], 1 ≤ i ≤ N. We study the suffix selection problem in the cache-aware model that captures two-level memory inherent in computing systems, for a cache of limited size M and block size B. The complexity of interest is the number of <b>block</b> <b>transfers.</b> We present an optimal suffix selection algorithm in the cache-aware model, requiring N/B <b>block</b> <b>transfers,</b> for any string S over an unbounded alphabet (where characters can only be compared), under the common tall-cache assumption (i. e. M=B^ 1 +ϵ, where ϵ< 1). Our algorithm beats the bottleneck bound for permuting an input array to the desired output array, which holds for nearly any nontrivial problem in hierarchical memory models...|$|R
40|$|Abstract. We {{study the}} problem of {{maintaining}} a dynamic ordered set subject to insertions, deletions, and traversals of k consecutive elements. This problem is trivially solved on a RAM and on a simple two-level memory hierarchy. We explore this traversal problem on more realistic memory models: the cache-oblivious model, which applies to unknown and multi-level memory hierarchies, and sequential-access models, where sequential <b>block</b> <b>transfers</b> are less expensive than random <b>block</b> <b>transfers.</b> 1 Introduction A basic computational task is to maintain a dynamic ordered set of elements subject to insertions, deletions, and logical traversals. By a logical traversal we mean an in-order access of the k elements following an element x, for a given k and x. These three operations are performed by nearly any computer program that uses even the most common data structures, such as linked lists or search trees...|$|R
50|$|Oregon Tech Klamath Falls {{offers the}} {{following}} associate degrees in Applied Science in Emergency Medical Technology Paramedic (joint degree with OHSU), Respiratory Care, Polysomnographic Technology, Arts (Oregon <b>Block</b> <b>Transfer).</b> There are Associate of Engineering degrees for Computer Engineering Technology, Electronics Engineering Technology (only offered in Wilsonville) and Software Engineering Technology.|$|E
5000|$|The Alto helped popularize {{the use of}} raster {{graphics}} model for all output, including text and graphics. It also introduced {{the concept of the}} bit <b>block</b> <b>transfer</b> operation (bit blit, BitBLT), as the fundamental programming interface to the display. Despite its small memory size, many innovative programs were written for the Alto, including: ...|$|E
50|$|ANT {{can also}} be used for burst messaging; this is a multi-message {{transmission}} technique using the full data bandwidth and running to completion. The receiving node acknowledges receipt and informs of corrupted packets that the transmitter then re-sends. The packets are sequence numbered for traceability. This technique is suited to data <b>block</b> <b>transfer</b> where the integrity of the data is paramount.|$|E
40|$|Given string $S[1 [...] N]$ and integer $k$, the {em suffix selection} {{problem is}} to {{determine}} the $k$th lexicographically smallest amongst the suffixes $S[ildots N]$, $ 1 leq i leq N$. We study the suffix selection problem in the cache-aware model that captures two-level memory inherent in computing systems, for a emph{cache} of limited size $M$ and block size $B$. The complexity of interest is the number of <b>block</b> <b>transfers.</b> We present an optimal suffix selection algorithm in the cache-aware model, requiring $Thetaleft(N/Bright) $ <b>block</b> <b>transfers,</b> for any string $S$ over an unbounded alphabet (where characters can only be compared), under the common tall-cache assumption (i. e. $M=Omegaleft(B^{ 1 +epsilon}right) $, where $epsilon< 1 $). Our algorithm beats the bottleneck bound for permuting an input array to the desired output array, which holds for nearly any nontrivial problem in hierarchical memory models...|$|R
50|$|MXR West Midlands was a {{regional}} commercial digital radio multiplex in the United Kingdom, which served the West Midlands. The multiplex closed on 27 August 2013 after the shareholders Global Radio & Arqiva {{decided not to}} renew the licence. The Bromsgrove transmitter frequency <b>block</b> <b>transferred</b> over to MuxCo Herefordshire and Worcestershire in September 2013.|$|R
40|$|Abstract. Given string S[1 [...] N] and integer k, the suffix {{selection}} {{problem is}} to determine the kth lexicographically smallest amongst the suffixes S[i [...] . N], 1 ≤ i ≤ N. We study the suffix selection problem in the cache-aware model that captures two-level memory inherent in computing systems, for a cache of limited size M and block size B. The complexity of interest is the number of <b>block</b> <b>transfers.</b> We present an optimal suffix selection algorithm in the cache-aware model, requiring Θ (N/B) <b>block</b> <b>transfers,</b> for any string S over an unbounded alphabet (where characters can only be compared), under the common tallcache assumption (i. e. M = Ω ` B 1 +ǫ ´, where ǫ < 1). Our algorithm beats the bottleneck bound for permuting an input array to the desired output array, which holds for nearly any nontrivial problem in hierarchical memory models. 1...|$|R
