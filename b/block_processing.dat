196|724|Public
5000|$|... #Caption: Tillamook plant small cheese <b>block</b> <b>processing</b> lines ...|$|E
50|$|Applications {{may include}} {{financial}} PIN transactions, bank-to-clearing-house transactions, EMV transactions for integrated circuit (chip) based credit cards, basic SET <b>block</b> <b>processing,</b> and general-purpose cryptographic applications using symmetric key, hashing, and public key algorithms.|$|E
5000|$|A {{string of}} records, words, or characters, that for {{technical}} or logical purposes {{are treated as}} a unit. Blocks (a) are separated by interblock gaps, (b) are delimited by an end-of-block signal, and (c) may contain one or more records. A block is usually subjected to some type of <b>block</b> <b>processing,</b> such as multidimensional parity checking, associated with it.|$|E
5000|$|... 256: end of <b>block</b> - stop <b>processing</b> if last <b>block,</b> {{otherwise}} start <b>processing</b> next <b>block.</b>|$|R
50|$|Since a {{convolutional}} code doesn't use <b>blocks,</b> <b>processing</b> instead a continuous bitstream, {{the value of}} t applies to a quantity of errors located relatively near to each other. That is, multiple groups of t errors can usually be fixed when they are relatively far apart.|$|R
50|$|Being {{a neutral}} {{molecule}} (cf other mannosidase inhibitors such as deoxymannojirimycin), it can permeate inside cells. Once inside a cell, kifunensine blocks endoplasmic reticulum (ER) mannosidase I (ERM1). This <b>blocks</b> <b>processing</b> of glycoproteins in the ER, {{to leave them}} with glycoforms with mainly nine mannose residues attached to two N-acetylglucosamine residues (Man9GlcNAc2).|$|R
50|$|Giannakis and {{collaborators}} {{developed a}} multicarrier communication technique that is resilient to frequency-selective multi-user and inter-symbol interference. He showed that designed linear multicarrier precoding {{combined with a}} block spreading operation together render the user signature matrix at the receiver well-conditioned, without power control or bandwidth over-expansion. This result shows that <b>block</b> <b>processing</b> of communication signals becomes an important dimension that can improve communication performance without altering power or bandwidth.|$|E
40|$|Abstract—Digital signal {{processing}} (DSP) applications involve processing long streams of input data. It {{is important to}} take into account this form of processing when implementing embedded software for DSP systems. Task-level vectorization, or <b>block</b> <b>processing,</b> is a useful dataflow graph transformation that can significantly improve execution performance by allowing subsequences of data items to be processed through individual task invocations. In this way, several benefits can be obtained, including reduced context switch overhead, increased memory locality, improved utilization of processor pipelines, and use of more efficient DSPoriented addressing modes. On the other hand, <b>block</b> <b>processing</b> generally results in increased memory requirements since it effectively increases the sizes of the input and output values associated with processing tasks. In this paper, we investigate the memory-performance tradeoff associated with <b>block</b> <b>processing.</b> We develop novel <b>block</b> <b>processing</b> algorithms that take carefully take into account memory constraints to achieve efficient <b>block</b> <b>processing</b> configurations within given memory space limitations. Our experimental results indicate that these methods derive optimal memory-constrained <b>block</b> <b>processing</b> solutions most of the time. We demonstrate the advantages of our <b>block</b> <b>processing</b> techniques on practical kernel functions and applications in the DSP domain. I...|$|E
40|$|A {{parallel}} <b>block</b> <b>processing</b> for remote sensed {{images for}} classification problem {{is presented in}} this paper. Due to increase in computational time for processing the remote sensing images for pixel dimension more than 1000 × 1000. <b>Block</b> <b>processing</b> approach is applied for an image in parallel by distributing the task among the cores. K -means {{is one of the}} widely used clustering method for analyzing features in images. Hence it is considered for the parallel <b>block</b> <b>processing</b> approach. The parallel <b>Block</b> <b>Processing</b> approach was implemented using Matlab 2014 a programming environment. The experiment is carried out on data sets comprising of 200 samples of high resolution orthoimagery satellite images. The result obtained from parallel <b>block</b> <b>processing</b> approach lead to efficient usage of hardware resources, depletion in time compared to sequential K -means algorithm. Results are acceptable and this approach can be applied for image processing operations...|$|E
5000|$|JH is a {{cryptographic}} hash function {{submitted to the}} NIST hash function competition by Hongjun Wu. Though chosen {{as one of the}} five finalists of the competition, JH ultimately lost to NIST hash candidate Keccak. JH has a 1024-bit state, and works on 512-bit input <b>blocks.</b> <b>Processing</b> an input <b>block</b> consists of three steps: ...|$|R
30|$|Because {{the image}} is divided into <b>blocks</b> for <b>processing,</b> multi-threading method can be {{introduced}} {{to speed up the}} processing.|$|R
40|$|In {{orthogonal}} {{transform coding}} of NTSC video signal, {{the data is}} processed in <b>blocks.</b> <b>Processing</b> a <b>block</b> of data that is maximally correlated leads to larger compression. This paper describes a new architecture for arranging the pixels in a block that yields higher correlation than the adjacent pixel blocks. The data is processed using adaptive, intrafield, discrete cosine transform, variable bit allocation coding. In subjective tests, the picture quality was good {{for an average of}} about 2 bits/pel for intrafield processing...|$|R
30|$|This section {{addresses}} {{the problem of}} image reconstruction from Gaussian noise corrupted y. The <b>block</b> <b>processing</b> is applied to reduce the computational cost. <b>Block</b> <b>processing</b> and the vectorization of the wavelet coefficients is described in Section 3.1. The proposed reconstruction process from the ensemble of y is explained in Section 3.2.|$|E
3000|$|... {{should be}} minimized. As the {{algorithm}} is derived for <b>block</b> <b>processing</b> of convolutive mixtures, for each output y [...]...|$|E
3000|$|... controller. This is {{preferred}} when the interleaving <b>block</b> <b>processing</b> times fit {{well within the}} latency constraints for the different streams.|$|E
40|$|It {{has been}} {{noticed that the}} block {{artifact}} grids (BAG), caused by the <b>blocking</b> <b>processing</b> during JPEG compression, are usually mismatched when interpolating or concealing objects by copy-paste operations. In this paper, the BAGs are extracted blindly with a new extraction algorithm, and then abnormal BAGs can be detected with a marking procedure. Then the phenomenon of grid mismatch or grid blank can {{be taken as a}} trail of such forensics. Experimental results show that our method can mark these trails efficiently...|$|R
3000|$|... where |A| {{denotes the}} number of {{elements}} within a set A. The number E(x_ 0, I') indicates {{the number of}} newly discovered basic <b>blocks</b> when <b>processing</b> x [...]...|$|R
30|$|IFFT {{represent}} the induced latency from each <b>processing</b> <b>block.</b>|$|R
40|$|This paper {{presents}} a systematic approach to <b>block</b> <b>processing</b> with iterative correction filters for time-interleaved analog-to-digital con-verters (TI-ADCs). TI-ADCs consist of several channels and can significantly increase the achievable sampling rate, but suffer from mismatches among the channels. Iterative digital correction filters are a general approach {{to mitigate the}} impact of mismatches in TI-ADCs. To reduce the requirements on the digital hardware, we intro-duce <b>block</b> <b>processing</b> for such filters. To this end, the transforma-tion of a single-input single-output linear time-varying (LTV) finite impulse response filter into a multiple-input multiple-output LTV fil-ter {{is described as a}} design equation and applied to two representa-tive iterative correction structures from the literature. Finally, the beneficial properties and advantages of the transformation are high-lighted. Index Terms — time-varying filter, <b>block</b> <b>processing,</b> MIMO, Farrow structure, mismatch correction, time-interleaved ADC...|$|E
40|$|In this report, we {{illustrate}} the lookahead transformation {{in both the}} dependence graph and the signal flow graph domains. Various scheduling approaches for fine-grain pipelined adaptive QR algorithm are proposed, including pipelining, <b>block</b> <b>processing,</b> and incremental <b>block</b> <b>processing.</b> Among them, the incremental <b>block</b> <b>processing</b> offers {{the least amount of}} hardware complexity which is linear increasing with respect to the lookahead step size M with linear factor 2 M Γ 1. Comparisons between algorithm transformations in the dependence graph domain and ones in the signal flow graph domain are also addressed in this report. 1 Introduction In this report, the following problems are addressed: 1. Lookahead transformation interpretation in dependence graph (DG) and signal flow graph (SFG) domains. 2. DG scheduling of the lookahead transformed adaptive QR algorithm (referred as lookahead adaptive QR) on pipelined Cordic processors. 3. SFG scheduling of the lookahead adaptive [...] ...|$|E
3000|$|... {{controller}} has to {{take care}} of the scheduling of <b>block</b> <b>processing</b> for the different streams. Depending on the latency constraints of the standards, there are two options: [...]...|$|E
40|$|Abstract-Based on a modifled Bernoulli-Gaussian model, {{we propose}} an {{adaptive}} maximum-likelihood channel equalizer, {{which is a}} <b>block</b> signal <b>processing</b> algorithm, {{for the detection of}} binary sequences trans-mitted through an unknown slowly time-varying chan-nel. Both computational load and storage required by the proposed adaptive channel equalizer are linearly rather than exponentially proportional to the size of signal <b>processing</b> <b>block.</b> A simulation example is pro-vided to support that it can simultaneously track the variation of slowly time-varying channels and detect unknown binary sequences well. I...|$|R
30|$|Hall {{monitor in}} GOP 8, however, {{is a low}} motion video sequence, and most blocks are skipped; thus, {{functional}} block sub-framing is used. The encoder is therefore partially occupied with the sub-framing <b>block</b> during <b>processing</b> time.|$|R
40|$|AbstractThe {{export of}} colicin A and of colicin E 1 is not equally {{affected}} in both secA and secY mutants of E. Echerichia coli: release of colicin A occurs slowly while that of colicin E 1 is <b>blocked.</b> <b>Processing</b> and functioning of Cal, the colicin A lysis protein, {{seem to be}} slightly {{or not at all}} modified in these mutants, whereas synthesis and assembly of CelA, the colicin E 1 lysis protein, are highly inhibited. These variations observed in the dependence of the two lysis proteins on secA and secY gene products are interpreted as being either the cause or the consequence of the differences observed in their rate of biogenesis...|$|R
40|$|This paper {{presents}} two {{schemes for}} the implemen-tation of high performance and low power FIR filtering Intellectual Property (IP) cores. Low power is achieved through {{the utilization of}} algorithms such as coefficient segmentation, <b>block</b> <b>processing</b> and combined segmenta-tion and <b>block</b> <b>processing</b> algorithms. On the other hand, multiple data paths are utilized for achieving high per-formance. The paper presents the complete architectural implementation of these algorithms for high performance applications. The paper describes the design methodology, evaluation environment, and provides results which show up to 40 % reduction in power consumption. 1...|$|E
40|$|ITC/USA 2011 Conference Proceedings / The Forty-Seventh Annual International Telemetering Conference and Technical Exhibition / October 24 - 27, 2011 / Bally's Las Vegas, Las Vegas, NevadaIn {{this paper}} we study a new {{streaming}} Compressive Sensing (CS) technique {{that aims to}} replace high speed Analog to Digital Converters (ADC) for certain classes of signals and reduce the artifacts that arise from <b>block</b> <b>processing</b> when conventional CS is applied to continuous signals. We compare the performance of both streaming and <b>block</b> <b>processing</b> methods on several types of signals and quantify the signal reconstruction quality when packet loss {{is applied to the}} transmitted sampled data...|$|E
40|$|Abstract—Adaptive pilot-aided channel {{estimation}} {{in frequency}} domain for orthogonal frequency-division multiplexing (OFDM) transmission is considered in this paper. More specifically, adaptive block and non-block processing algorithms {{for the first}} one-dimensional filtering stage of a two-stage channel estimator are compared. The estimator consists of two one-dimensional filtering stages (2 × 1 D) as a common and efficient approximation of the optimal one-stage but two-dimensional (2 D) estimator. The optimal block algorithms for the first stage, namely the normalized block least-mean-square (NBLMS) and block recursive least-squares (BRLS) algorithm, are deduced from the standard nonblock normalized least-mean-square (NLMS) and recursive least-squares (RLS) algorithms, respectively. They are compared by simulations with complexity reduced, simplified versions of the optimal block algorithms (sNBLMS, sBRLS). Most of the <b>block</b> <b>processing</b> gain in terms of improved excess error and increased convergence speed {{can be achieved by}} the simplified approaches, whereas the non-block processing algorithms are always outperformed by their <b>block</b> <b>processing</b> counterparts. Furthermore, if the amount of input data for <b>block</b> <b>processing</b> is reduced, i. e., block size is decreased, nearly the whole <b>block</b> <b>processing</b> gain is preserved by the optimal and the simplified block algorithms. Additionally, the convergence of the NBLMS and sNBLMS can be accelerated by increasing the according step size to values, for which the NLMS algorithm would already suffer from misconvergence. Index Terms—Orthogonal frequency-division multiplexing (OFDM), adaptive channel estimation, normalized block least-mean-square (NBLMS), block recursive least-squares (BRLS) algorithm I...|$|E
50|$|With {{reference}} to the figure, a short description of the signal <b>processing</b> <b>blocks</b> follows.|$|R
40|$|Abstract—This article proposes several {{improvements}} to an adaptive fingerprint enhancement method {{that is based}} on contextual filtering. The term adaptive implies that parameters of the method are automatically adjusted based on the input fingerprint image. Five <b>processing</b> <b>blocks</b> comprise the adaptive fingerprint enhancement method, where four of these blocks are updated in our proposed system. Hence, the proposed overall system is novel. The four updated <b>processing</b> <b>blocks</b> are; preprocessing, global analysis, local analysis and matched filtering. In the pre-processing and local analysis blocks, a nonlinear dynamic range adjustment method is used. In the global analysis and matched filtering blocks, different forms of order statistical filters are applied. These <b>processing</b> <b>blocks</b> yield an improved and new adaptive fingerprint image processing method. The performance of the updated <b>processing</b> <b>blocks</b> is presented in the evaluation part of this paper. The algorithm is evaluated towards the NIST developed NBIS software for fingerprint recognition on FVC databases. Index Terms—Image processing, successive mean quantization transform, directional filtering, fourier transform, spectral feature estimation. I...|$|R
40|$|For the {{wireless}} communication, IEEE 802. 11 {{is one of}} the protocols available. The IEEE 802. 11 b uses the medium access control layer (MAC) for wireless local area network. These wireless local area networks use Carrier Sense multiple access with collision avoidance (CSMA/CS) for the MAC layer. But only the MAC layer for transmitter is considered here for simulation. So, the Wi-Fi transmitter module is divided into 5 blocks i. e. Data Unit Interface block, Controller block, Pay Load Data Storage, MAC Header Register <b>block</b> and Data <b>Processing</b> <b>block.</b> In this paper we consider only the simulation of MAC header register blocks. So, other blocks i. e. Data unit interface block, Controller block, pay load Data Storage <b>block</b> & Data <b>Processing</b> <b>block</b> are not discussed further in this paper. A field programmable gate array (FPGA) device has been used as the hardware implementation platform. The proposed MAC-layer hardware is implemented with Xilinx xcv 300 e Virtex E FPG...|$|R
30|$|The {{proposed}} {{impulsive noise}} rejection method {{is described in}} this section. <b>Block</b> <b>processing</b> and the vectorization of the wavelet coefficients are addressed before {{a description of the}} noise rejection method. The <b>block</b> <b>processing</b> is applied to reduce the computation cost. The proposed noise rejection method is applied before the reconstruction and divided into two stages. In the first stage, the algorithm to detect impulsive noise is applied. Then, OMP-PKS is applied to estimate the information that is lost due to the impulsive noise. The algorithm to detect the impulsive noise and the estimation of the missing information are described in Sections 3.2 and 3.3, respectively.|$|E
40|$|In {{this chapter}} we discuss several time-domain {{algorithms}} {{which are a}} combination of smaller processing blocks like amplitude/phase modulators, filters and delay lines. These effects mainly influence the pitch and the time duration of the audio signal. We will first introduce some basic effects like variable speed replay and pitch-controlled resampling. They are all based on delay-line modulation and amplitude modulation. Then we will discuss two approaches for time stretching (time scaling) of audio signals. They are based on an analysis stage, where the input signal is divided into segments (blocks) of fixed or variable length, and a synthesis stage where the blocks of the analysis stage are recombined by an overlap and add procedure These time-stretching techniques perform time scaling without modifying the pitch of the signal, The fourth section focuses on pitch shifting, and introduces three techniques: <b>block</b> <b>processing</b> based on time stretching and resampling delay line modulation and pitch-synchronous <b>block</b> <b>processing.</b> <b>Block</b> <b>processing</b> based on delay line modulation performs pitch shifting by scaling the spectral envelope of each block. Pitch- synchronous <b>block</b> <b>processing</b> performs pitch shifting by resampling the spectral envelope of each block and thus preserving the spectral envelope. The last section on time shuffling and granulation presents a more creative use of time-segment processing. Short segments of the input signal are freely assembled and placed along time in the output signal. ln this case the input sound can be much less recognizable in the output. The wide choice of strategies for segment organization implies a sound composition attitude from the user...|$|E
3000|$|The fact is that, in {{addition}} to the 1 D time convolution model for each focal point, scanning at an arbitrary resolution rate yields overlap of successive blocks, which naturally characterizes a volumetric convolution between the object (reflectivity tensor), and the space-varying tensor defined by the beam pattern for different focal points. The spatial model for this operation will depend on the number of directions and depths the beam is moved to, whereby, similarly to <b>block</b> <b>processing</b> in time, motion can induce a particular processing structure in space (e.g., <b>block</b> <b>processing,</b> with or without overlap). The overall process is in general a 4 D MIMO space (time)-varying convolution model. For instance, choosing [...]...|$|E
40|$|This article proposes several {{improvements}} to an adaptive fingerprint enhancement method {{that is based}} on contextual filtering. The term adaptive implies that parameters of the method are automatically adjusted based on the input fingerprint image. Five <b>processing</b> <b>blocks</b> comprise the adaptive fingerprint enhancement method, where four of these blocks are updated in our proposed system. Hence, the proposed overall system is novel. The four updated <b>processing</b> <b>blocks</b> are: 1) preprocessing; 2) global analysis; 3) local analysis; and 4) matched filtering. In the preprocessing and local analysis blocks, a nonlinear dynamic range adjustment method is used. In the global analysis and matched filtering blocks, different forms of order statistical filters are applied. These <b>processing</b> <b>blocks</b> yield an improved and new adaptive fingerprint image processing method. The performance of the updated <b>processing</b> <b>blocks</b> is presented in the evaluation part of this paper. The algorithm is evaluated toward the NIST developed NBIS software for fingerprint recognition on FVC databases...|$|R
30|$|The ensuing {{subsections}} {{present a}} more detailed description of each <b>processing</b> <b>block</b> represented in Figure 2.|$|R
40|$|The most {{important}} models and {{results of the}} manufacturing flow line literature are described. These include the major classes of models (asynchronous, synchronous, and continuous); the major features (<b>blocking,</b> <b>processing</b> times, failures and repairs); the major properties (conservation of flow, flow rate-idle time, reversibility, and others); and the relationships among different models. Exact and approximate methods for obtaining quantitative measures of performance are also reviewed. The exact methods are appropriate for small systems. The approximate methods, which are the only means available for large systems, are generally based on decomposition, and {{make use of the}} exact methods for small systems. Extensions are briefly discussed. Directions for future research are suggested. National Science Foundation (U. S.) (Grant DDM- 8914277...|$|R
