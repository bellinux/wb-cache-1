46|162|Public
50|$|On {{a backup}} network, {{there is no}} need for hosts to reach each other. Hosts should only reach their backup destination. Backup clients can be placed in one Isolated VLAN and the <b>backup</b> <b>servers</b> can be placed as {{promiscuous}} on the Primary VLAN, this will allow hosts to communicate only with the <b>backup</b> <b>servers.</b>|$|E
5000|$|Backup Enterprise Manager - a {{centralized}} management web browser interface intended for distributed enterprise environments with multiple <b>backup</b> <b>servers.</b>|$|E
5000|$|Cloud {{storage can}} be used as natural {{disaster}} proof backup, as normally there are 2 or 3 different <b>backup</b> <b>servers</b> located in different places around the globe.|$|E
50|$|The NetVault <b>Backup</b> <b>Server</b> (the master <b>backup</b> <b>server)</b> can be {{deployed}} on Microsoft Windows or Linux.|$|R
5000|$|Standalone Console — a {{lightweight}} console for installation on laptops and desktops {{to enable the}} management of the <b>backup</b> <b>server</b> remotely over the network and eliminate RDP sessions to a <b>backup</b> <b>server.</b>|$|R
50|$|NetVault Backup {{is based}} on a {{client-server}} architecture. A central NetVault <b>Backup</b> <b>Server</b> provides the job management, media management, device management, client management, reporting, notifications and logging functions. The NetVault <b>Backup</b> <b>Server</b> maintains a history of backups in the NetVault Backup database, enabling users to identify the object(s) they want to restore. NetVault Clients are “agents” that work with the NetVault <b>Backup</b> <b>Server</b> to back up and recover the respective servers, applications and data. The client software is installed on each machine to be protected. The NetVault WebUI enables centralized administration of a NetVault <b>Backup</b> <b>Server</b> from any browser.|$|R
50|$|On April 1, 2015, {{citing a}} serious {{technical}} failure, Scripped shuttered its service. As {{part of the}} announcement, it was disclosed that their <b>backup</b> <b>servers</b> had failed as well, losing all of its user's stored scripts.|$|E
50|$|A sender {{subjected}} to greylisting might {{move to a}} backup server and reattempt delivery. In order for greylisting to work in such cases, all backup mail servers (as specified by lower-priority MX records for the domain) should implement the same greylisting policy and share the same database. Traffic to those <b>backup</b> <b>servers</b> increases merely {{as a result of}} greylisting.|$|E
50|$|Unlike NIS, NIS+ uses a {{hierarchical}} structure of multiple domains. A NIS+ domain can, and should, be serviced by multiple servers. The primary server {{is known as}} the master server, and <b>backup</b> <b>servers</b> are known as replica servers. Both types hold copies of the NIS+ tables. Changes are first committed to the master server and then propagated to replica servers in increments.|$|E
40|$|To {{increase}} {{fault tolerance}} in distributed database, {{it is better}} to add a <b>backup</b> <b>server</b> for each primary server in the system. It is clear that the primary <b>server</b> and <b>backup</b> <b>server</b> need to be connected to each other. To connect these computers to each other when they are in a long distance, it is necessary to use a lease line which needs to be charged as data is transferred. As more packets are transferred between primary and <b>backup</b> <b>server,</b> more money need to be paid for charging this line. So if number of transferred packets between these computers reduces, the company can economize in its expenditures. On the other side, when number of updating information from the primary <b>server</b> to <b>backup</b> <b>server</b> reduces, the number of transaction which should be performed in the <b>backup</b> <b>server</b> reduces. To achieve this goal, we introduce a new method which reduces the number of transferred packet between primary and <b>backup</b> <b>server.</b> In this method, the replicated data of primary server is used to backup mechanism. In our method the primary server sends transactions in data which are not replicated in other computers. So the transactions on the replicated data are not transferred to <b>backup</b> <b>server,</b> and as a result the numbers of transferred packet get reduce...|$|R
50|$|Most {{customers}} {{also have}} a <b>backup</b> <b>server</b> in a remote location for disaster recovery. There are standard products to keep the data of the production and the <b>backup</b> <b>server</b> in sync, hence there is fast takeover and no data loss also in a disaster situation with the production server being disabled or destroyed.|$|R
5000|$|... the <b>backup</b> <b>server</b> {{is owned}} by a {{different}} company or organization ...|$|R
50|$|Veritas Backup Exec is a data {{protection}} software product designed for customers who have mixed physical and virtual environments, {{and who are}} moving to public cloud services. Supported platforms include VMware and Hyper-V virtualization, Windows and Linux operating systems, Amazon S3, Microsoft Azure and Google cloud storage, among others. All management and configuration operations are performed with a single user interface. Backup Exec also provides integrated deduplication, replication, and disaster recovery capabilities and helps to manage multiple <b>backup</b> <b>servers</b> or multi-drive tape loaders.|$|E
50|$|Towards {{the end of}} 2008, nolithosting has {{acquired}} the ownership of Radio Pilipinas domain and got a shoutcast server installed {{in one of its}} collocated computers on a datacenter in Dallas, USA. The new development paved the way for Kuyakurt and Nolit to redevelop Radio Pilipinas as a full Internet radio running on shoutcast server. Radio Pilipinas is currently running on one source server with two <b>backup</b> <b>servers</b> all running on state of the art centovacast software. A total of 4 relay servers are also running - three are on 64kbit/s with hundreds of listener capacity. One server is on 32kbit/s which is intended for listeners with dial up connections. This server runs on a random playlist not synch with the main server but of similar content.|$|E
50|$|A {{server farm}} or server cluster is a {{collection}} of computer servers - usually maintained by an organization to supply server functionality far beyond the capability of a single machine. Server farms often consist of thousands of computers which require a large amount of power to run and to keep cool. At the optimum performance level, a server farm has enormous costs (both financial and environmental) associated with it.Server farms often have <b>backup</b> <b>servers,</b> which can take over the function of primary servers {{in the event of a}} primary-server failure. Server farms are typically collocated with the network switches and/or routers which enable communication between the different parts of the cluster and the users of the cluster. Server farmers typically mount the computers, routers, power supplies, and related electronics on 19-inch racks in a server room or data center.|$|E
5000|$|NDMP, or Network Data Management Protocol, is a {{protocol}} invented by the NetApp and PDC, acquired by Legato and now [...] EMC companies, meant to transport data between {{network attached storage}} (NAS) devices and backup devices. This removes the need for transporting the data through the <b>backup</b> <b>server</b> itself, thus enhancing speed and removing load from the <b>backup</b> <b>server.</b>|$|R
5000|$|... the <b>backup</b> <b>server</b> {{does not}} have {{direct access to the}} primary mail storage ...|$|R
50|$|A single <b>Backup</b> Exec <b>server</b> is {{assigned}} the standalone <b>Backup</b> Exec <b>server</b> role. Each <b>server</b> runs the <b>Backup</b> Exec software and {{the services that}} control backup and restore operations of multiple clients. Each <b>Backup</b> Exec <b>server</b> maintains its own Backup Exec database, media catalogs, and device catalogs.|$|R
50|$|In primary-based local-write protocols, primary copy moves between {{processes}} {{willing to}} perform an update. To update a data item, a process first moves it to its location. As a result, in this approach, successive write operations can be performed locally while each process can read their local copy of data items. After the primary finishes its update, the update is forwarded to other replicas and all perform the update locally. This non-blocking approach can lead to an improvement.The diagram of the local-write protocol depicts the local-write approach in primary-based protocols. A process requests a write operation in a data item x. The current server is considered as the new primary for a data item x. The write operation is performed and when the request is finished, the primary sends an update request to other <b>backup</b> <b>servers.</b> Each backup sends an acknowledgment to the primary after finishing the update operation.|$|E
5000|$|Pantheon is a {{combination}} of web development tools in the cloud and web hosting and management services. It is based in the cloud, and the service is free for developers.Developers have a choice between Drupal 6, Drupal 7 and installation of profiles like Open Atrium. Data can be imported onto Pantheon automatically if the business has an existing Drupal-based website. Pantheon Multidev does for a company's website what software-defined data centers do for its infrastructure. Each member of a team can use all the services that power a site on demand, developing on a single platform. As a result, large websites launch faster and cost less to manage over time. Based on Pantheon's multi-tenant containerized architecture, Multidev spins up in seconds, with no need for additional infrastructure or virtual servers. Pantheon makes it easy to deploy different versions of a site on test servers and the live site, as well as <b>backup</b> <b>servers.</b>|$|E
5000|$|Example: Tanenbaum et al., 2007 {{gives an}} example of a primary-backup {{protocol}}. The diagram of primary-backup protocol shows {{an example of}} this protocol. When a client requests a write, the write request is forwarded to a primary server. The primary server sends request to backups to perform the update. The server then receives the update acknowledgement from all backups and sends the acknowledgement of completion of writes to the client. Any client can read the last available update locally. The trade-off of this protocol is that a client who sends the update request might have to wait so long to get the acknowledgement in order to continue. This problem can be solved by performing the updates locally, and then ask other backups perform their updates. The non-blocking primary-backup protocol does not guarantee the consistency of update on all <b>backup</b> <b>servers.</b> However, it improves the performance. In the primary-backup protocol, all processes will see the same order of write operations since this protocol orders all incoming writes based on a globally unique time. Blocking protocols guarantee that processes view the result of the last write operation.|$|E
5000|$|A <b>Backup</b> Exec <b>server</b> is {{the heart}} of a Backup Exec installation. The <b>Backup</b> Exec <b>server</b> is a Windows server that: ...|$|R
5000|$|Backup proxy - an {{appliance}} that retrieves {{backup data}} from the source host and transfers it to the backup repository offloading the Veeam <b>backup</b> <b>server.</b>|$|R
50|$|Large environments {{may contain}} {{multiple}} <b>Backup</b> Exec <b>servers</b> responsible for backing up many different client systems. <b>Backup</b> Exec <b>servers</b> in large environments can run independently {{of each other}} if each server is managed separately. Separate server management {{may not be an}} issue if there are only two or three <b>Backup</b> Exec <b>servers,</b> but it can become unwieldy as the environment grows. Backup Exec can centralize the management of multiple <b>Backup</b> Exec <b>servers</b> using an add-on option called the Backup Exec Central Admin Server Option (CASO). CASO ensures that everything throughout the network is protected by a single system that can be managed from one console and also balances the workload across all <b>Backup</b> Exec <b>servers</b> in the environment.|$|R
40|$|The {{paper is}} focused on {{available}} server management in Internet connected network environments. The local <b>backup</b> <b>servers</b> are hooked up by LAN and replace broken main server immediately and several different types of <b>backup</b> <b>servers</b> are also considered. The remote <b>backup</b> <b>servers</b> are hooked up by VPN (Virtual Private Network) with high-speed optical network. A Virtual Private Network (VPN) {{is a way to}} use a public network infrastructure and hooks up long-distance servers within a single network infrastructure. The remote <b>backup</b> <b>servers</b> also replace broken main severs immediately under the different conditions with local backups. When the system performs a mandatory routine maintenance of main and local <b>backup</b> <b>servers,</b> auxiliary servers from other location are being used for backups during idle periods. Analytically tractable results are obtained by using several mathematical techniques and the results are demonstrated in the framework of optimized networked server allocation problems. The operational workflow give the guidelines for the actual implementations. </p...|$|E
40|$|A key {{strategy}} to build disaster-resilient clouds is to employ backups of virtual machines in a geo-distributed infrastructure. Today, the continuous and acknowledged replication of virtual machines in different servers is a service provided by different hypervisors. This strategy guarantees that the virtual machines {{will have no}} loss of disk and memory content if a disaster occurs, {{at a cost of}} strict bandwidth and latency requirements. Considering this kind of service, in this work, we propose an optimization problem to place servers in a wide area network. The goal is to guarantee that backup machines do not fail {{at the same time as}} their primary counterparts. In addition, by using virtualization, we also aim to reduce the amount of <b>backup</b> <b>servers</b> required. The optimal results, achieved in real topologies, reduce the number of <b>backup</b> <b>servers</b> by at least 40 %. Moreover, this work highlights several characteristics of the backup service according to the employed network, such as the fulfillment of latency requirements. Comment: Computer Networks 201...|$|E
30|$|Due to {{the large}} number of {{possible}} IT security measures, these must be assessed in an economically sound manner, taking into account the cost–benefit aspect and its effect on the overall system. For this, our structured approach helps to assess risks associated with the ever increasing interconnection within smart factories, to assess where interconnections and dependencies should be deliberately avoided and where redundancies should be deliberately created, e.g., by means of <b>backup</b> <b>servers</b> or cloud-based modules.|$|E
50|$|Operational resiliency: Automatically load-balances jobs across {{multiple}} <b>Backup</b> Exec <b>servers,</b> provides job failover from one <b>Backup</b> Exec <b>server</b> to another, centralizes or replicates catalogs for restores.|$|R
3000|$|Installing a <b>backup</b> <b>server</b> (1) is an {{appropriate}} IT security measure because our model in the example application revealed that the server (c_ 1) is the most critical IT component. The VaR sum decreases to 22, 178, which equals a reduction of 24.4 [...]...|$|R
50|$|In a CASO environment, one <b>Backup</b> Exec <b>server</b> can be {{configured}} {{to be the}} Central Admin Server (CAS), {{while other}} Backup Execs become managed <b>Backup</b> Exec <b>servers</b> (MBESs) that are managed by the CAS. The CASO configuration simplifies the management and monitoring of enterprise-level environments.|$|R
40|$|This paper {{describes}} {{the aspects of}} the Echo design {{that are related to}} providing high availability. These aspects include the provision of redundant components (replicated disks and <b>backup</b> <b>servers),</b> the replication of information, and recovery from failures. Further, we discuss some less obvious mechanisms needed for providing truly high availability: load control, dynamic reconfiguration of the system, and the detection and reporting of faults. Finally, we discuss some of the impact of our availability mechanisms on application software...|$|E
40|$|The Echo {{file system}} project {{explored}} several {{issues in the}} design and implementation of distributed file systems. This paper describes the aspects of the Echo design that are related to providing high availability. These aspects include the provision of redundant components (replicated disks and <b>backup</b> <b>servers),</b> the replication of information, and recovery from failures. Further, we discuss some less obvious mechanisms needed for providing truly high availability: load control, dynamic reconfiguration of the system, and the detection and reporting of faults. Finally, we discuss some of the impact of our availability mechanisms on application software...|$|E
40|$|Abstract. It is {{necessary}} to have the precise definition of available performance of high availability systems that can represent the availability and performability of the systems altogether. However, the difference between numeric scales of availability and performance metrics such as waiting time makes quantitative evaluation difficult. A number of previous studies on availability do not include a performance metric in their availability modeling. In this paper, we propose a new availability model for (n,k) -way cluster systems which compose of n primary servers and k <b>backup</b> <b>servers</b> and compute the redundancy levels for the systems to satisfy both the requirements of availability and waiting time performance. ...|$|E
50|$|Similarly to the {{migration}} mechanism described above, failover allows the VM to continue operations if the host fails. However, in this case, the VM continues operation from the last-known coherent state, {{rather than the}} current state, based on whatever materials the <b>backup</b> <b>server</b> was last provided with.|$|R
5000|$|Veeam <b>backup</b> <b>server</b> - a Windows-based {{physical}} or virtual machine where Veeam Backup & Replication is installed. It’s the core component {{responsible for all}} types of administrative activities in a backup infrastructure, including general orchestration of backup, restore and replication tasks, job scheduling and resource allocation.|$|R
40|$|Excellent {{academic}} {{information system}} and high service availability is a demand from the company. This technology {{is used in}} anticipation {{if there is a}} failure or damage in devices on the server computer that can disrupt the performance on the server network. This study uses the method of failover computer cluster is a method that uses two servers in the form of primary server as the main server and secondary <b>server</b> as <b>backup</b> <b>server,</b> this research through the four main stages of the first Installation and configuration of the next support software Installation and configuration failover cluster. The third stage is the installation and configuration Distributed Replicated Block Device (DRBD). The last stage is testing the server by using siege and nettool. This study was conducted to test the initial server that has not done high avaibility and after done high availbility so that if the main server system failure occurs then the <b>backup</b> <b>server</b> will <b>backup</b> the main <b>server</b> automatically to the <b>backup</b> <b>server</b> to minimize the failure of data accessed by the user. This system is implemented using ubuntu 16. 04 LTS operating system as its operating system. Based on the data tested obtained two data for packet data and responsive time data (ms). Packet data obtained average data sent as much as 233. 3; Average data received as much as 228. 3, average lost as much as 2. 3; While data responsive time (ms) obtained average average as much as 59, 7; Minimum average of 2. 7; Average maximum of 633. 8. The data sent is 120 B civil...|$|R
