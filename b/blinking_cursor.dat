16|6|Public
25|$|The Console Command Processor, or CCP, {{accepted}} {{input from}} the keyboard and conveyed results to the terminal. CP/M itself would work with either a printing terminal or a video terminal. All CP/M commands had to be typed in on the command line. The console would most often display the A> prompt, to indicate the current default disk drive. When used with a video terminal, this would usually {{be followed by a}} <b>blinking</b> <b>cursor</b> supplied by the terminal. The CCP would await {{input from the}} user.|$|E
5000|$|... "New Shoes" [...] {{published}} in <b>Blinking</b> <b>Cursor,</b> Issue 5 - Spring 2011 ...|$|E
5000|$|... "A Walk in the Park" [...] {{published}} in <b>Blinking</b> <b>Cursor,</b> Issue 6 - Summer 2011 ...|$|E
5000|$|... #Caption: A <b>blinking</b> text <b>cursor</b> while typing {{the word}} Wikipedia.|$|R
5000|$|In a Reddit [...] AMA, editors {{from the}} site {{described}} their process as follows: [...] "The process depends on the athlete and how comfortable they are sitting down and writing a first draft. Some of them come to us with drafts they've already written, and they want our help {{taking it to the}} next level and really expressing what they want to get across[...] [...] [...] Others come to us {{in the middle of a}} season (or, in some cases, literally in the middle of a playoff series) and they really want to get a story out but they simply don't have the time to bang out a rough draft, or they're freaked out about staring at a blank page with a <b>blinking</b> <b>cursors</b> (aren't we all?) so we either meet up with them or hop on a call and go over what they want to say. They basically dictate it with us doing what editors do -- asking questions, pushing for follow-up detail, and generally just playing the role of 'curious reader.' [...] [...] [...] Ultimately, the athlete has final edits and approval over everything." ...|$|R
5000|$|... "The {{controls}} are the standard point-and-click scheme with the left-click used {{to interact with}} an object and the right-click to look at an object. And you access the inventory by moving the cursor {{to the top of}} the screen, and when you select an object the <b>cursor</b> <b>blinks</b> while the name of the selected object shows at the bottom left of the screen." ...|$|R
5000|$|Some type of <b>blinking</b> <b>cursor</b> {{that can}} be {{positioned}} (with arrow keys and/or [...] "home" [...] and other direct cursor address setting codes).|$|E
5000|$|ADFS on 8-bit systems {{required}} a WD1770 or later 1772-series floppy controller, {{owing to the}} inability of the original Intel 8271 chip to cope with the double-density format ADFS required. ADFS could however be used to support hard discs without a 1770 controller present; in development the use of hard discs was the primary goal, extension to handle floppies came later. The 1770 floppy controller was directly incorporated into the design of the Master Series and B+ models, and was available as an 'upgrade' board for the earlier Model B. The Acorn Electron's floppy interface (Acorn Plus 3) was an add-on unit, initially available through Acorn and later Pres (aka Advanced Computer Products). The ACP implementation of ADFS fixed a flaw in the Acorn version v1.0, that required the use of a file named ZYSYSHELP. On the Electron, Disk corruption could also occur if attempting to use the *COMPACT command without disabling the <b>blinking</b> <b>cursor.</b> This was {{due to the fact that}} the [...] *COMPACT command used screen memory as working space during the operation, and the <b>blinking</b> <b>cursor</b> corrupted that memory space.|$|E
5000|$|The ADFS {{file format}} used the bytes Hugo to delimit the {{directory}} {{names on the}} disc, named after ADFS author Hugo Tyson. Another quirk was {{the presence of the}} file [...] ZYSYSHELP which was required by the system, and created during formatting. This was a kludge. Acorn's v1.0 ADFS implementation on the Electron was unreliable when writing to the first few tracks of a floppy disc, so this was a [...] "fix" [...] and simply involved writing a file full of garbage to the suspect part. The ADFS would then skip it. Disc corruption could also occur if attempting to use the *COMPACT command without disabling the <b>blinking</b> <b>cursor</b> with the following command: This was {{due to the fact that}} the *COMPACT command used screen memory (by default) as working space during the operation, and the software-implemented <b>blinking</b> <b>cursor</b> corrupted that memory space. An alternative would be to give arguments to make it use non-screen memory for workspace, for example *COMPACT 40 20 in MODE 6. Tyson recalls that this bug was found during late testing but not fixed in the initial ROM release in order to avoid late changes, as workarounds exist.|$|E
50|$|Utilization of raster {{interrupts}} is {{an essential}} part of C64 game programming. In the computer's power-on default state, the first CIA chip generates an interrupt 60 times per second which sends the CPU to the kernel IRQ handler at $EA31. This acknowledges the CIA interrupt, updates the clock, scans the keyboard, and <b>blinks</b> the <b>cursor</b> in BASIC. Games normally disable this and instead set up the VIC-II to generate interrupts when a specific scanline is reached, which is necessary for split-screen scrolling and playing music. The game remaps the IRQ vector at $0314/$0315 to its raster handler which performs these functions and then optionally executes a JMP $EA31 instruction to return control to the kernel, provided that the game does not take over the machine and therefore doesn't want to apply kernel's interrupt routine.|$|R
40|$|A report {{describes}} {{the first phase}} {{in an effort to}} enhance the NaviGaze software to enable profoundly disabled persons to operate computers. (Running on a Windows-based computer equipped with a video camera aimed at the user s head, the original NaviGaze software processes the user's head movements and eye <b>blinks</b> into <b>cursor</b> movements and mouse clicks to enable hands-free control of the computer.) To accommodate large variations in movement capabilities among disabled individuals, one of the enhancements was the addition of a graphical user interface for selection of parameters that affect the way the software interacts with the computer and tracks the user s movements. Tracking algorithms were improved to reduce sensitivity to rotations and reduce the likelihood of tracking the wrong features. Visual feedback to the user was improved to provide an indication {{of the state of the}} computer system. It was found that users can quickly learn to use the enhanced software, performing single clicks, double clicks, and drags within minutes of first use. Available programs that could increase the usability of NaviGaze were identified. One of these enables entry of text by using NaviGaze as a mouse to select keys on a virtual keyboard...|$|R
50|$|New {{developments}} in Hands-On Computing {{have led to}} the creation of interfaces that can respond to gestures and facial signaling. Often haptic devices like a glove have to be worn to translate the gesture into a recognizable command. The natural actions of pointing, grabbing, and tapping are common ways to interact with the computer interface. The latest studies include using the eye signals to indicate selection or control the <b>cursor.</b> <b>Blinking</b> and the gaze of the eye are used to communicate selections. Computers can also respond to speech inputs. Developments in this technology have made it possible for users to dictate phrases to the computer instead of type them to display text on an interface. Utilizing human signal inputs allows more people to interact with computers and do so in a way that is humanly natural.|$|R
50|$|Edbrowse is {{sometimes}} described as dense in its code {{and in its}} human interface. It contains many cryptic one and two letter commands, and few interactive help facilities. There is no menu, no dialog, and no screen of intuitive icons to click on. Like bash, edbrowse greets the user with a <b>blinking</b> <b>cursor,</b> waiting for input, and if that input is syntactically incorrect, edbrowse simply prints a question mark. Thus {{it is important to}} read the edbrowse user's guide before diving in.|$|E
50|$|The Plus/4's TED {{has several}} {{advantages}} over C64's VIC+SID. All TED registers {{that are available}} can be read and written. TED may realize the <b>blinking</b> <b>cursor</b> and {{the characters in the}} reverse-video mode. It may display 256 characters in the text mode. It may use graphics split by raster interrupt and show pictures at 320x248 resolution. This, with interlaced mode, makes it possible to show 320x496 images. TED also proves to be a very effective means when it comes to creating 4-bit digital sound.|$|E
5000|$|The Console Command Processor, or CCP, {{accepted}} {{input from}} the keyboard and conveyed results to the terminal. CP/M itself would work with either a printing terminal or a video terminal. All CP/M commands had to be typed in on the command line. The console would most often display the [...] prompt, to indicate the current default disk drive. When used with a video terminal, this would usually {{be followed by a}} <b>blinking</b> <b>cursor</b> supplied by the terminal. The CCP would await {{input from the}} user.|$|E
50|$|A special {{version of}} Office 2013, {{initially}} known as Office 2013 Home & Student RT, is shipped with all Windows RT devices. It initially consisted of Word, Excel, PowerPoint and OneNote. In Windows RT 8.1, the suite was renamed Office 2013 RT and Outlook was added. The edition, whilst visually indistinguishable from normal versions of Office 2013, contains special optimizations for ARM-based devices, such as changes to reduce battery usage (including, for example, freezing the animation of the <b>blinking</b> <b>cursor</b> for text editing {{during periods of}} inactivity), enabling touch mode by default to improve usability on tablets, and using the graphics portion of a device's SoC for hardware acceleration.|$|E
40|$|Select {{the left}} or right cell. If a <b>blinking</b> <b>cursor</b> is {{inserted}} in a cell, move one character left or right through the cell contents. → and ← (arrow keys) → and ← (arrow keys) Select the cell above or below. ↑ and ↓ (arrow keys) ↑ and ↓ (arrow keys) Select multiple adjacent cells in a row. SHIFT + → and SHIFT + ← SHIFT + → and SHIFT + ← Select multiple adjacent cells in a column. SHIFT + ↑ and SHIFT + ↓ (arrow keys) SHIFT + ↑ and SHIFT + ↓ (arrow keys) If a <b>blinking</b> <b>cursor</b> is inserted in a cell, highlight multiple characters to the right or left of the cursor...|$|E
40|$|Beneath its {{deceptively simple}} search form, Google is a remarkably {{powerful}} and flexible search engine that indexes billions of web pages, handling more than 150 million searches a day. You {{know that what}} you're looking for must be in there somewhere, {{but how do you}} make Google work for you? Crafted from our best-selling Google Hacks title, the Google Pocket Guide provides exactly the information you need to make your searches faster and more effective, right from the start. The Google Pocket Guide unleashes the power behind that <b>blinking</b> <b>cursor</b> by delivering: A thorough but concise tour...|$|E
40|$|Access to thesis {{permanently}} {{restricted to}} Ball State community only“Luke Tower {{sat in front}} of his laptop, staring first at the unyielding, <b>blinking</b> <b>cursor</b> and then to the bright red “ 8 : 05 ” displayed on his alarm clock. He always made sure to hide the taskbar on his screen, so that time was never an issue, but somehow it always managed to find him in one way or the other. ” In many ways, this opening passage sums up Luke’s story. His life is almost a constant state of battle, whether it’s against writer’s block, time, or his unrealized feelings. Through the following story, Luke’s character takes a journey, searching for clues to the mystery of the colony of Roanoake, that may also end up leading him to find other things in his own life, some of which he wasn’t even aware were lost. Department of EnglishThesis (M. A. ...|$|E
40|$|Has {{downloading}} {{and running}} the latest applications also drained your smartphone's battery? In this article {{we look at the}} great potential of making software engineering more energy aware. We start at the hardware. In recent years, hardware designers have become very good at low power design. Multiple voltage domains, clock gating, dynamic frequency scaling {{and a host of other}} techniques have helped reduce power consumption. It is a never ending battle as dimensions shrink to just 10 s of atoms, and leakage becomes an ever more pressing problem. For a long time, energy efficiency has been seen as a hardware problem. Yet software can undo all the design efficiency at a stroke. Famously a Linux implementation wasted 70 - 90 % of its power, simply because a <b>blinking</b> <b>cursor</b> woke up the entire system several times a second [1]. One of the authors (Bennett) was involved in a commercial project, where the design team found they had to increase clock frequency (and hence power consumption) three fold because a standard audio codec caused excessive processor stalls through cache conflicts. That project was canceled shortly afterwards. There are three main factors contributing to power loss...|$|E
40|$|My {{friends and}} colleagues in {{psychology}} {{tend to think of}} themselves as scientists and/or clinicians, not as writers, and certainly not as creative writers. Yet we must write, and we must think creatively in order to generate and share ideas, and to maintain job security. Many psychologists are in fact fine writers, but that contingency between writing and job security (not to mention between writing and completion of graduate school) leads to considerable anxiety and, hence, avoidance of the writing desk, the keyboard, and that cursed <b>blinking</b> <b>cursor.</b> This anxiety spans our discipline and is not an issue only for those seeking tenure; for example, I am not on a tenure track, but I must write grants to obtain the funding for my salary. Fortunately, there are books that provide strategies for better and more productive writing. A current favorite of mine is Paul Silvia’s How to Write A Lot (2007; see also Dearing, 2007), which is helping me to conquer my long-ingrained procrastinating and deadline-pushing ways and to develop better writing habits. But right next to Silvia’s book on my office bookshelf I am now placing Robert Richardson’s new book First We Read, Then We Write: Emerson on the Creative Process...|$|E
40|$|Writing for {{publication}} {{is an important}} part of academic and professional practice. This presentation provides a brief review of important points to consider when writing an article to be submitted {{for publication}}. Topics addressed include reasons for publishing, selecting a topic and journal and issues such as referencing, plagiarism and overcoming writer’s block. Writing for Publication: Debbie Fraser An integral component of furthering nursing knowledge, scholarly writing is a part of any advanced practice nursing role. Too often however, as busy professionals we find reasons to allow a writing project to fall off the side of the desk. Sitting down in front of a <b>blinking</b> <b>cursor</b> and an empty screen can be a daunting prospect. This session will provide some insight into the world of publishing and will address selecting a topic and a journal as well as the nitty gritty of the writing process. Nurse Practitioners Readiness for Practice Submitting authors: Dr Kimberley Lamarche, RN NP, DNP; Debbie Fraser, RN NP, MN; Dr Jennifer Knopp-Sihota, RN NP, PhD; Tina MacNamara, RN NP, MN; Dr Roberta Heale, RN NP, DNP Background: Appropriate training and educational programs need to reflect changing and increasing clinical performance expectations and meet the changing needs of the NP student in a modern-day, online learning environment. This research provides information describing how newly graduated NPs perceive that their graduate education has prepared them for practice. When discussing the significance of understanding these perceptions based on the NP Preparedness tool, Hart (2007) reflected that “practicing NPs are the basis of the NP profession, and their views need to be sought, listened to, and reflected upon as we advance toward expanded preparation. ” Purpose: The purpose of this study was to ascertain the perceived level of preparedness of NP program alumni for practice. Specific levels of perceived preparation in select clinical content areas as well as students perceived barriers to online education were determined. Data Sources: 50 participants responded to a two separate surveys: Nurse Practitioners Preparedness for Practice Survey and Survey of Student Barriers to eLearning. Data will be presented to describe the level of perceived preparedness as an NP upon graduation, factors during the first year that affected their ability to integrate into the practice setting (i. e. mentoring, clinical support), and barriers to eLearning. Implications for Practice: A clear need for more data relating to NP preparedness for professional practice is obvious (Keough et al, 2010; Hart et al, 2007, Woolsey, 2006; Dunaway & Running, 2009). This study provides valuable information on how students perceive their preparation for practice as they exit their formal education and transition to working professionals. Further, with a solid understanding of changing NP student needs within the modern-day context of e-learning, faculty, administrators, and nursing peers can appropriately guide the continuing development of NP professional training programs for the betterment of advanced nursing practice in Canada...|$|E

