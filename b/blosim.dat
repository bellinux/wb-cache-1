3|0|Public
50|$|His notable past {{research}} includes {{the advancement of}} digital transmission systems, including contributions that made digital telephony possible over the existing telephone network, the use of VLSI to realize functions in the telephone network, and VLSI architectures to solve signal processing challenges. His work has increasingly been devoted to software. In 1984 Messerschmitt wrote <b>Blosim,</b> a software-based block diagram simulation system for digital signal processing simulations. He also contributed to a successor to <b>Blosim</b> called Ptolemy, which is still being actively developed and used. When the UC Berkeley School of Information was created he co-founded courses on network applications and strategic technology, and later served as interim dean of the school. His research interests and curriculum development {{for the past decade}} have been largely devoted to the business of software and economics of the software industry.|$|E
40|$|Ptolemy is a {{flexible}} and extensible platform for simulations, rapid prototyping, and other software systems. It is our third generation software environment, building on our experience with <b>Blosim,</b> a signal processing simulation system, and Gabriel, a prototyping environment for real-time signal processing. Unlike its predecessors, Ptolemy does not enforce a single simulation or execution model; it supports mixed {{hardware and software}} designs, mixed-mode system descriptions, and mixed prototyping methodologies...|$|E
40|$|Ptolemy is a {{flexible}} and extensible platform for simulations, rapid prototyping, and other software systems. It is our third generation software environment, building on our experience with <b>Blosim,</b> a signal processing simulation system, and Gabriel, a prototyping environment for real-time signal processing. Unlike its predecessors, Ptolemy does not enforce a single simulation or execution model; it supports mixed {{hardware and software}} designs, mixed-mode system descriptions, and mixed prototyping methodologies. The objectives, design, current status, and future directions of the Ptolemy project are summarized in this paper. The use of certain features of the C++ language {{to make it easier}} to design {{a flexible}}, extensible system is discussed. We also describe our experiences in developing a 150 K line (and growing) system in C++, discussing what worked well, what didn't and lessons learned. 1. INTRODUCTION Ptolemy is a flexible and extensible platform for simulation, rapid prototyping, [...] ...|$|E

