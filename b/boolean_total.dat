1|46|Public
5000|$|ORDERS = date : date BUYER : USERS(1) LINES : ORDER_LINES(*) {{opposite}} of ORDER approved : <b>boolean</b> <b>total</b> : decimal(10,2) = sum(LINES.total) summary : text displayed = {total} euro by {BUYER.firstName} {BUYER.lastName} on {date} ...|$|E
40|$|Abstract. In [3], Christine Tasson {{introduces}} an algebraic {{notion of}} totality for a denotational model of linear logic. The notion of <b>total</b> <b>boolean</b> function is, in a way, quite intuitive. This note provides a positive {{answer to the}} question of completeness of the “boolean centroidal calculus ” w. r. t. <b>total</b> <b>boolean</b> functions...|$|R
40|$|Christine Tasson {{introduced}} an algebraic notion of totality for a denotational model of linear logic {{in the category}} of vector spaces. The notion of <b>total</b> <b>boolean</b> function is, in a way, quite intuitive. This note provides a positive {{answer to the question of}} completeness of the "boolean centroidal calculus" w. r. t. <b>total</b> <b>boolean</b> functions. Comment: short not...|$|R
40|$|We {{construct}} a <b>total</b> <b>Boolean</b> function f satisfying R(f) =Ω̃(Q(f) ^ 5 / 2), refuting the long-standing conjecture that R(f) =O(Q(f) ^ 2) for all <b>total</b> <b>Boolean</b> functions. Assuming a conjecture of Aaronson and Ambainis about optimal quantum speedups for partial functions, we improve this to R(f) =Ω̃(Q(f) ^ 3). Our construction {{is motivated by}} the Göös-Pitassi-Watson function but does not use it. Comment: 5 page...|$|R
50|$|A concept over {{a domain}} X is a <b>total</b> <b>Boolean</b> {{function}} over X. A concept class is {{a class of}} concepts. Concept class is a subject of computational learning theory.|$|R
3000|$|... [...]. It {{follows that}} every partial Boolean {{function}} {{on a set}} of pairwise incomparable Boolean vectors can be extended to a cooperative <b>total</b> <b>Boolean</b> function (see Proposition  2.1 of [1]), a fact that we will use several times.|$|R
40|$|In {{this note}} we {{investigate}} {{the relationship between}} worst-case quantum query complexity and average-case classical query complexity. Specifically, we show that if a quantum computer can evaluate a <b>total</b> <b>Boolean</b> function f with bounded error using T queries in the worst case, then a deterministic classical computer ca...|$|R
5000|$|It is {{important}} to note that these polynomial relationships are valid only for <b>total</b> <b>Boolean</b> functions. For partial Boolean functions, that have a domain a subset of , an exponential separation between [...] and [...] is possible; the first example of such a problem was discovered by Deutsch and Jozsa.|$|R
40|$|Abstract. We study {{randomized}} and quantum query (a. k. a. decision tree) complexity for all <b>total</b> <b>Boolean</b> functions, {{with emphasis}} to derandomization and dequantization (removing quantumness from algorithms). Firstly, {{we show that}} D(f) = O(Q 1 (f) 3) for any total function f, where D(f) is the minimal number of queries made by a deterministic query algorithm and Q 1 (f) {{is the number of}} queries made by any quantum query algorithm (decision tree analog in quantum case) with one-sided constant error; both algorithms compute function f. Secondly, we show that for all <b>total</b> <b>Boolean</b> functions f holds R 0 (f) = O(R 2 (f) 2 log N), where R 0 (f) and R 2 (f) are randomized zero-sided (a. k. a Las Vegas) and two-sided (a. k. a. Monte Carlo) error query complexities. ...|$|R
40|$|We {{prove that}} any <b>total</b> <b>boolean</b> {{function}} of rank r can be computed by a deterministic communication protocol of complexity O(√(r) ·(r)). Equivalently, any graph whose adjacency matrix has rank r has chromatic number at most 2 ^O(√(r) ·(r)). This gives a nearly quadratic {{improvement in the}} dependence on the rank over previous results...|$|R
40|$|We {{will show}} that if there exists a quantum query {{algorithm}} that exactly computes some <b>total</b> <b>Boolean</b> function f by making T queries, {{then there is a}} classical deterministic algorithm A that exactly computes f making O(T^ 3) queries. The best know bound previously was O(T^ 4) due to Beals et al. Comment: 5 pages, corrected grammar, some comments adde...|$|R
40|$|We compute some <b>total</b> <b>Boolean</b> {{functions}} with decision trees. The {{complexity of}} Boolean function {{is defined as}} number of queries to the black box (or oracle). We show some Boolean functions that can be computed by probabilistic and quantum decision trees that give a good probability of the correct answer and use less query in comparison with deterministic decision trees. ...|$|R
40|$|AbstractTree series transformations {{computed}} by bottom-up and top-down tree series transducers {{are called}} bottom-up and top-down tree series transformations, respectively. (Functional) compositions of such transformations are investigated. It {{turns out that}} the class of bottom-up tree series transformations over a commutative and complete semiring is closed under left-composition with linear bottom-up tree series transformations and right-composition with boolean deterministic bottom-up tree series transformations. Moreover, it is shown that the class of top-down tree series transformations over a commutative and complete semiring is closed under right-composition with linear, nondeleting top-down tree series transformations. Finally, the composition of a <b>boolean,</b> deterministic, <b>total</b> top-down tree series transformation with a linear top-down tree series transformation is shown to be a top-down tree series transformation...|$|R
40|$|In 1986, Saks and Wigderson conjectured {{that the}} largest {{separation}} between deterministic and zero-error randomized query complexity for a <b>total</b> <b>boolean</b> function is given by the function f on n= 2 ^k bits defined by a complete binary tree of NAND gates of depth k, which achieves R_ 0 (f) = O(D(f) ^ 0. 7537 [...] .). We show this is false by giving {{an example of a}} <b>total</b> <b>boolean</b> function f on n bits whose deterministic query complexity is Ω(n/(n)) while its zero-error randomized query complexity is Õ(√(n)). We further show that the quantum query complexity of the same function is Õ(n^ 1 / 4), giving the first example of a total function with a super-quadratic gap between its quantum and deterministic query complexities. We also construct a <b>total</b> <b>boolean</b> function g on n variables that has zero-error randomized query complexity Ω(n/(n)) and bounded-error randomized query complexity R(g) = Õ(√(n)). This is the first super-linear separation between these two complexity measures. The exact quantum query complexity of the same function is Q_E(g) = Õ(√(n)). These two functions show that the relations D(f) = O(R_ 1 (f) ^ 2) and R_ 0 (f) = Õ(R(f) ^ 2) are optimal, up to poly-logarithmic factors. Further variations of these functions give additional separations between other query complexity measures: a cubic separation between Q and R_ 0, a 3 / 2 -power separation between Q_E and R, and a 4 th power separation between approximate degree and bounded-error randomized query complexity. All of these examples are variants of a function recently introduced by, Pitassi, and Watson which they used to separate the unambiguous 1 -certificate complexity from deterministic query complexity and to resolve the famous Clique versus Independent Set problem in communication complexity. Comment: 25 pages, 6 figures. Version 3 improves separation between Q_E and R_ 0 and updates reference...|$|R
40|$|Tree series transformations {{computed}} by bottom-up and top-down tree series transducers {{are called}} bottom-up and top-down tree series transformations, respectively. (Functional) compositions of such transformations are investigated. It {{turns out that}} the class of bottom-up tree series transformations over a commutative and complete semiring is closed under left-composition with linear bottom-up tree series transformations and right-composition with boolean deterministic bottom-up tree series transformations. Moreover, it is shown that the class of top-down tree series transformations over a commutative and complete semiring is closed under right-composition with linear, nondeleting top-down tree series transformations. Finally, the composition of a <b>boolean,</b> deterministic, <b>total</b> top-down tree series transformation with a linear top-down tree series transformation is shown to be a top-down tree series transformation. Key words: tree series transformation, semiring, composition, tree transducer...|$|R
40|$|AbstractThis work {{studies the}} quantum query {{complexity}} of Boolean functions in an unbounded-error scenario {{where it is}} only required that the query algorithm succeeds with a probability strictly greater than 1 / 2. We show that, {{just as in the}} communication complexity model, the unbounded-error quantum query complexity is exactly half of its classical counterpart for any (partial or <b>total)</b> <b>Boolean</b> function. Moreover, connecting the query and communication complexity results, we show that the “black-box” approach to convert quantum query algorithms into communication protocols by Buhrman–Cleve—Wigderson [STOC’ 98] is optimal even in the unbounded-error setting. We also study a related setting, called the weakly unbounded-error setting, where the cost of a query algorithm is given by q+log(1 / 2 (p− 1 / 2)), where q is the number of queries made and p> 1 / 2 is the success probability of the algorithm. In contrast to the case of communication complexity, we show a tight multiplicative Θ(logn) separation between quantum and classical query complexity in this setting for a partial Boolean function. The asymptotic equivalence between them is also shown for some well-studied <b>total</b> <b>Boolean</b> functions...|$|R
40|$|This work {{studies the}} quantum query {{complexity}} of Boolean functions in a scenario {{where it is}} only required that the query algorithm succeeds with a probability strictly greater than 1 / 2. We show that, {{just as in the}} communication complexity model, the unbounded error quantum query complexity is exactly half of its classical counterpart for any (partial or <b>total)</b> <b>Boolean</b> function. Moreover, we show that the "black-box" approach to convert quantum query algorithms into communication protocols by Buhrman-Cleve-Wigderson [STOC' 98] is optimal even in the unbounded error setting. We also study a setting related to the unbounded error model, called the weakly unbounded error setting, where the cost of a query algorithm is given by q+log(1 / 2 (p- 1 / 2)), where q is the number of queries made and p> 1 / 2 is the success probability of the algorithm. In contrast to the case of communication complexity, we show a tight Theta(log n) separation between quantum and classical query complexity in the weakly unbounded error setting for a partial Boolean function. We also show the asymptotic equivalence between them for some well-studied <b>total</b> <b>Boolean</b> functions. Comment: 14 page...|$|R
40|$|We compare {{classical}} and quantum query complexities of <b>total</b> <b>Boolean</b> functions. It {{has been shown}} that for worst-case complexity, the gap between quantum and classical can be at most polynomial (BBCMW 98). We give (non-uniform) distributions where the gap for average-case complexity of the OR-function can be exponential or even larger. We also prove some general bounds for average-case complexity and show that the average-case quantum complexity of MAJORITY under the uniform distribution is nearly quadratically better than the classical complexity...|$|R
40|$|Abstract. We compare {{classical}} and quantum query complexities of <b>total</b> <b>Boolean</b> functions. It {{is known that}} for worst-case complexity, the gap between quantum and classical can be at most polynomial [3]. We show that for average-case complexity under the uniform distribution, quantum algorithms can be exponentially faster than classical algorithms. Under non-uniform distributions the gap can even be super-exponential. We also prove some general bounds for average-case complexity and show that the average-case quantum complexity of MAJORITY under the uniform distribution is nearly quadratically better than the classical complexity. ...|$|R
40|$|We compare {{classical}} and quantum query complexities of <b>total</b> <b>Boolean</b> functions. It {{is known that}} for worst-case complexity, the gap between quantum and classical can be at most polynomial. We show that for average-case complexity under the uniform distribution, quantum algorithms can be exponentially faster than classical algorithms. Under non-uniform distributions the gap can even be super-exponential. We also prove some general bounds for average-case complexity and show that the average-case quantum complexity of MAJORITY under the uniform distribution is nearly quadratically better than the classical complexity. Comment: 14 pages, LaTeX. Some parts rewritten. This version {{to appear in the}} Journal of Physics...|$|R
40|$|We studythe powerofnonadaptivequantum queryalgorithms,which arealgorithms whose queries to {{the input}} do {{not depend on}} the result of {{previous}} queries. First, we show that any bounded-error nonadaptive quantum query algorithm that computes some <b>total</b> <b>boolean</b> function depending on n variables must make Ω(n) queries to the input in total. Second, we show that, if there exists a quantum algorithm that uses k nonadaptive oracle queries to learn which one of a set of m boolean functions it has been given, there exists a nonadaptive classical algorithm using O(klogm) queries to solve the same problem. Thus, in the nonadaptive setting, quantum algorithms can achieve at most a very limited speed-up over classical query algorithms. ...|$|R
40|$|Given a <b>total</b> <b>Boolean</b> {{function}} f, {{we study}} two natural generalizations of the certificate complexity C (f) [...] the randomized certificate complexity-Re (f) and the quantum certificate complexity QC(f). Us- ing Ambainis' adversary method, we exactly charac- terize QC (f) as the square root of-Re(f). We then use this result {{to prove the}} new relation Ro (f) [...] O(2 (f) 2 to(f) logn), where-Ro, 2, and 0 are zero-error randomized, bounded-error quantum, and zero-error quantum query complexities respectively. Finally we give asymptotic gaps between the mea- sures, including a total f for which (f) is superquadratic in Q (f), and a symmetric partial f for which QC (f) = O (1) yet Q 2 (f) = f (n/logn) ...|$|R
40|$|Partially defined Boolean {{functions}} (pdBf) (T; F), where T; F f 0; 1 g are disjoint sets of true {{and false}} vectors, generalize <b>total</b> <b>Boolean</b> functions by allowing that the function values on some input vectors are unknown. The main issue with pdBfs is the extension problem, which is deciding, given a pdBf, {{whether it is}} interpolated by a function f from a given class of <b>total</b> <b>Boolean</b> functions, and computing a formula for f. In this paper, we consider extensions of bidual Horn functions, which are the Boolean functions f such that both f and its dual function f are Horn. They are intuitively appealing for considering extensions because they give a symmetric role to positive and negative information (i. e., true and false vectors) of a pdBf, which is not possible with arbitrary Horn functions. Bidual Horn functions turn out to constitute an intermediate class between positive and Horn functions which retains several benign properties of positive functions. Besides the extension problem, we study recognition of bidual Horn functions from Boolean formulas and properties of normal form expressions. We show that finding a bidual Horn extension and checking biduality of a Horn DNF is feasible in polynomial time, and that the latter is intractable from arbitrary formulas. We also give characterizations of shortest DNF expressions of a bidual Horn function f and show how to compute such an expression from a Horn DNF for f in polynomial time; for arbitrary Horn functions, this is NP-hard. Furthermore, we show that a polynomial total algorithm for dualizing a bidual Horn function exists {{if and only if}} there is such an algorithm for dualizing a positive function...|$|R
40|$|We {{examine the}} number of queries to input {{variables}} that a quantum algorithm requires to compute Boolean functions on in the black-box model. We show that the exponential quantum speed-up obtained for partial functions (i. e., problems involving a promise on the input) by Deutsch and Jozsa, Simon, and Shor cannot be obtained for any total function: if a quantum algorithm computes some <b>total</b> <b>Boolean</b> function f with small error probability using T black-box queries, {{then there is a}} classical deterministic algorithm that computes f exactly with O(T) queries. We A preliminary version of this paper appeared in Proceedings of the 39 th Annual IEEE Foundations of Computer Science. IEEE Computer Society Press, Los Alamitos, Calif., 1998, pp. 352 [...] 361...|$|R
40|$|We present several {{families}} of <b>total</b> <b>boolean</b> functions which have exact quantum query complexity {{which is a}} constant multiple (between 1 / 2 and 2 / 3) of their classical query complexity, and show that optimal quantum algorithms for these functions cannot be obtained by simply computing parities of pairs of bits. We also characterise the model of nonadaptive exact quantum query complexity in terms of coding theory and completely characterise the query complexity of symmetric boolean functions in this context. These results were originally inspired by numerically solving the semidefinite programs characterising quantum query complexity for small problem sizes. We include numerical results giving the optimal success probabilities achievable by quantum algorithms computing all boolean functions on up to 4 bits, and all symmetric boolean functions on up to 6 bits. ...|$|R
40|$|We {{investigate}} {{the power of}} quantum communication protocols compared to classical probabilistic protocols. In our first result we describe a <b>total</b> <b>Boolean</b> function that has a quantum Las Vegas protocol communicating at most O(N^{ 10 / 11 + epsilon}) qubits for all epsilon > 0, while any classical probabilistic protocol (with bounded error) needs Omega(N/log N) bits. Then we investigate quantum one-way communication complexity. First we show that the VC-dimension lower bound on one-way probabilistic communication of [26] holds for quantum protocols, too. Then we prove that for one-way protocols computing total functions quantum Las Vegas communication is asymptotically as efficient as exact quantum communication, which is exactly as efficient as deterministic communication. We describe applications of the lower bounds for one-way communication complexity to quantum finite automata and quantum formulae...|$|R
40|$|We {{study the}} power of nonadaptive quantum query {{algorithms}}, which are algorithms whose queries to the input do {{not depend on the}} result of previous queries. First, we show that any bounded-error nonadaptive quantum query algorithm that computes some <b>total</b> <b>boolean</b> function depending on n variables must make Omega(n) queries to the input in total. Second, we show that, if there exists a quantum algorithm that uses k nonadaptive oracle queries to learn which one of a set of m boolean functions it has been given, there exists a nonadaptive classical algorithm using O(k log m) queries to solve the same problem. Thus, in the nonadaptive setting, quantum algorithms can achieve at most a very limited speed-up over classical query algorithms. Comment: 9 pages; v 2 : new title, updated with new results on learnin...|$|R
40|$|A quantum {{algorithm}} is exact if, on any input data, it outputs {{the correct answer}} with certainty (probability 1). A key question is: how big is the advantage of exact quantum algorithms over their classical counterparts: deterministic algorithms. For <b>total</b> <b>Boolean</b> functions in the query model, the biggest known gap was just a factor of 2 : PARITY of N inputs bits requires $N$ queries classically but can be computed with N/ 2 queries by an exact quantum algorithm. We present the first example of a Boolean function f(x_ 1, [...] ., x_N) for which exact quantum algorithms have superlinear advantage over the deterministic algorithms. Any deterministic algorithm that computes our function must use N queries but an exact quantum algorithm can compute it with O(N^{ 0. 8675 [...] . }) queries. Comment: 20 pages, v 6 : small number of small correction...|$|R
40|$|It {{is known}} that the {{classical}} and quantum query complexities of a <b>total</b> <b>Boolean</b> function f are polynomially related {{to the degree of}} its representing polynomial, but the optimal exponents in these relations are unknown. We show that the non-deterministic quantum query complexity of f is linearly related to the degree of a "non-deterministic" polynomial for f. We also prove a quantum-classical gap of 1 vs. n for non-deterministic query complexity for a total f. In the case of quantum communication complexity there is a (partly undetermined) relation between the complexity of f and the logarithm of the rank of its communication matrix. We show that the non-deterministic quantum communication complexity of f is linearly related to the logarithm of the rank of a non-deterministic version of the communication matrix. We also exhibit an exponential quantum-classical gap for non-deterministic communication complexity. Keywords: Quantum computing, query complexity, communication c [...] ...|$|R
40|$|We compare {{classical}} and quantum query complexities of <b>total</b> <b>Boolean</b> functions. It {{is known that}} for worst-case complexity, the gap between quantum and classical can be at most polynomial [3]. We show that for average-case complexity under the uniform distribution, quantum algorithms can be exponentially faster than classical algorithms. Under non-uniform distributions the gap can even be super-exponential. We also prove some general bounds for average-case complexity and show that the average-case quantum complexity of MAJORITY under the uniform distribution is nearly quadratically better than the classical complexity. 1 Introduction The field of quantum computation studies the power of computers based on quantum mechanical principles. So far, most quantum algorithms [...] -and all physically implemented ones [...] -have operated in the so-called black-box setting. Examples are [12, 25, 14, 7, 6, 9]; even period-finding, which {{is the core of}} Shor's factoring algorithm [24], {{can be viewed as a}} [...] ...|$|R
40|$|Abstract Tree series transformations {{computed}} by bottom-up and top-down tree series transducers {{are called}} bottom-up and top-down tree series transformations, respectively. (Functional) compositions of such transformations are investigated. It {{turns out that}} the class of bottomup tree series transformations over a commutative and complete semiring is closed under left-composition with linear bottom-up tree series transformations and right-composition with boolean deterministic bottom-up tree series transformations. Moreover, it is shown that the class of top-down tree series transformations over a commutative and complete semiring is closed under right-composition with linear, nondeleting top-down tree series transformations. Finally, the composition of a <b>boolean,</b> deterministic, <b>total</b> top-down tree series transformation with a linear top-down tree series transformation is shown to be a top-down tree series transformation. 1 Introduction Tree series transducers [21, 10, 15] were introduced as the transducing devices corresponding toweighted tree automata [2, 19, 4]. So far, the latter are applied in code selection and tree pattern matching [13, 3]. Weighted transducers on strings are applied in image manipulation [see, e. g., 8],where the images are coded as weighted string automata, and speech processing [see, e. g., 24]. Since natural language processing features many transformations on parse trees, which come equippedwith a degree of certainty, it seems natural to consider finite-state devices capable of transforming weighted trees. For natural language processing, the potential of tree series transducers over thesemiring of the positive real numbers was recently discovered [17]...|$|R
40|$|We show a power 2. 5 {{separation}} between bounded-error randomized and quantum query complexity for a <b>total</b> <b>Boolean</b> function, refuting the widely believed conjecture {{that the best}} such separation could only be quadratic (from Grover's algorithm). We also present a total function with a power 4 {{separation between}} quantum query complexity and approximate polynomial degree, showing severe limitations {{on the power of}} the polynomial method. Finally, we exhibit a total function with a quadratic gap between quantum query complexity and certificate complexity, which is optimal (up to log factors). These separations are shown using a new, general technique that we call the cheat sheet technique. The technique is based on a generic transformation that converts any (possibly partial) function into a new total function with desirable properties for showing separations. The framework also allows many known separations, including some recent breakthrough results of Ambainis et al., to be shown in a unified manner. Comment: 31 pages; subsumes arXiv: 1506. 0810...|$|R
40|$|International audienceD. Lau {{raised the}} problem of {{determining}} the cardinality of the set of all partial clones of <b>Boolean</b> functions whose <b>total</b> part is a given Boolean clone. The key step in the solution of this problem, which was obtained recently by the authors, was {{to show that the}} sublattice of strong partial clones on { 0, 1 } that contain all total functions preserving the relation ρ 0, 2 = {(0, 0), (0, 1), (1, 0) } is of continuum cardinality. In this paper we represent relations derived from ρ 0, 2 in terms of graphs, and we define a suitable closure operator on graphs such that the lattice of closed sets of graphs is isomorphic to the dual of this uncountable sublattice of strong partial clones. With the help of this duality, we provide a rough description of the structure of this lattice, and we also obtain a new proof for its uncountability...|$|R
40|$|We compare {{classical}} and quantum query complexities of <b>total</b> <b>Boolean</b> functions. It {{has been shown}} that for worst-case complexity, the gap between quantum and classical can be at most polynomial [BBC + 98]. We give (non-uniform) distributions where the gap for average-case complexity of the OR-function can be exponential or even larger. We also prove some general bounds for average-case complexity and show that the average-case quantum complexity of MAJORITY under the uniform distribution is nearly quadratically better than the classical complexity. 1 Introduction So far, most algorithms of quantum computation (and all physically implemented ones) have operated in the so-called black-box setting [DJ 92, Sim 97, Gro 96, BHT 97, BHT 98]. Here the input of the function f that we want to compute can only be accessed by means of queries to a "black-box". This returns the ith bit of the input when queried on i. The complexity of computing f is measured by the required number of queries. In thi [...] ...|$|R
40|$|We {{examine the}} number T of queries that a quantum network {{requires}} to compute several Boolean functions on { 0, 1 } N in the black-box model. We show that, in the blackbox model, the exponential quantum speed-up obtained for partial functions (i. e. problems involving a promise on the input) by Deutsch and Jozsa and by Simon cannot be obtained for any total function: if a quantum algorithm computes some <b>total</b> <b>Boolean</b> function f with bounded-error using T black-box queries {{then there is}} a classical deterministic algorithm that computes f exactly with O(T 6) queries. We also give asymptotically tight characterizations of T for all symmetric f in the exact, zero-error, and bounded-error settings. Finally, we give new precise bounds for AND, OR, and PARITY. Our results are a quantum extension of the socalled polynomial method, which has been successfully applied in classical complexity theory, and also a quantum extension of results by Nisan about a polynomial relationship between randomized and deterministic decision tree complexity. ...|$|R
40|$|Optimality of {{decision}} rules (patterns) {{can be measured}} in many ways. One of these is referred to as length. Length signifies the number of terms in a decision rule and is optimally minimized. Another, coverage represents the width of a rule’s applicability and generality. As such, it is desirable to maximize coverage. A totally optimal decision rule is a decision rule that has the minimum possible length and the maximum possible coverage. This paper presents a method for determining the presence of totally optimal decision rules for “complete” decision tables (representations of total functions in which different variables can have domains of differing values). Depending on the cardinalities of the domains, we can either guarantee for each tuple of values of the function that totally optimal rules exist for each row of the table (as in the case of <b>total</b> <b>Boolean</b> functions where the cardinalities are equal to 2) or, for each row, we can find a tuple of values of the function for which totally optimal rules do not exist for this row...|$|R
