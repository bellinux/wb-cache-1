0|4062|Public
50|$|The {{graduates}} of the Information Systems Analysis programme will have a balanced knowledge of the processes occurring in both IT and business systems. They {{will be able to}} participate in devising complex <b>business</b> information systems, <b>applications</b> or services and work as <b>applications</b> <b>integrators,</b> system architects, data systems developers and system analysts.|$|R
40|$|The STRS {{architecture}} detail presentation presents each {{requirement in}} the STRS Architecture Standard with some examples and supporting information. The {{purpose is to}} give a platform provider, application provider, or <b>application</b> <b>integrator</b> a better, more detailed understanding of the STRS Architecture Standard and its use...|$|R
50|$|<b>Business</b> <b>applications</b> {{can fail}} when an {{unexpected}} error occurs. This error could occur {{due to a}} data error (an unexpected data input or a wrong data input), an environment error (an in frastructure related error), a programming error, a human error or a work flow error. When a <b>business</b> <b>application</b> fails one needs to fix the <b>business</b> <b>application</b> error {{as soon as possible}} so that the business users can resume their work. This work of resolving <b>business</b> <b>application</b> errors is known as <b>business</b> <b>application</b> support.|$|R
50|$|<b>Business</b> <b>applications</b> {{are built}} {{based on the}} {{requirements}} from the business users. Also, these <b>business</b> <b>applications</b> are built to use certain kind of Business transactions or data items. These <b>business</b> <b>applications</b> run flawlessly until there are no new business requirements or there is no change in underlying Business transactions. Also, the <b>business</b> <b>applications</b> run flawlessly {{if there are no}} issues with computer hardware, computer networks (Intenet/intranet), computer disks, power supplies, and various software components (middleware, database, computer programs, etc.).|$|R
50|$|A Very Large <b>Business</b> <b>Application</b> (VLBA) is a <b>Business</b> <b>Application,</b> {{which can}} be {{implemented}} through different types of <b>Business</b> <b>Application</b> Systems {{as well as through}} System Landscapes. They support one or more processes of <b>business</b> <b>application</b> fields like accounting, human resources, logistic, distribution or marketing, in which at least one of those processes is a business process. According to that, a VLBA is directly successfully effective and has a strategic relevance through the support of possibly inter-company business processes.|$|R
50|$|A {{function}} {{is used to}} connect a <b>business</b> <b>application</b> with the rule processing framework of BRFplus. The calling <b>business</b> <b>application</b> passes input values to the function which are then processed by the expressions and rulesets {{that are associated with}} the called function. The calculated result is then returned to the calling <b>business</b> <b>application.</b>|$|R
40|$|Abstract: This paper {{provides}} an overview of the Integration Rules (IRules) approach to the interconnection of distributed software components. The intended use of this rule processing technology is for the specification of event-based processing logic in the development of component-based applications for distributed environments, such as E-commerce applications. The IRules approach builds upon the use of the Enterprise JavaBeans (EJB) software component model, providing an environment to facilitate the integration of black-box software components. An <b>application</b> <b>integrator</b> uses the IRules Component Definition Language to extend the definition of an EJB component in the IRules environment with derived and stored attributes, externalized relationships, and events. The <b>application</b> <b>integrator</b> then uses the IRules Integration Rule Language together with a scripting language to develop applications. Integration rules provide active rule capability to the environment so that as distributed components and external sources generate event notifications, integration rules are used to invoke methods on components or on higher-level application transactions. The IRules approach is unique in that it addresses the language and semantic framework needed in the context of software component models for the effective use of rules in distributed environments. Key words: active rules, integration rules, distributed software component integration 1...|$|R
40|$|A {{business}} process, such as {{the process}} followed when ordering a book, describes the order of executing tasks (e. g., check inventory, verify credit card, and ship book). <b>Business</b> <b>applications</b> implement the <b>business</b> processes for the daily operations of an organization. Organizations must continuously modify their <b>business</b> <b>applications</b> to accommodate changes to business processes. However, <b>business</b> <b>applications</b> are often designed and developed without referring to the documented definitions of business processes. Modifying <b>business</b> <b>applications</b> is a time-consuming and error-prone task. To correctly perform this task, developers require an in-depth understanding of multi-tiered applications and the definitions of the business processes which they implement. In this paper, we present an approach which automatically recovers business process definitions from multi-tiered <b>business</b> <b>applications.</b> Given the starting UI screen of a particular business process, the approach recovers the process definition by tracing the flow of control throughout the different tiers of the <b>business</b> <b>application.</b> We demonstrate the effectiveness of our approach through a case study using 15 <b>business</b> <b>applications</b> from three large open-source projects. Our case study demonstrates that our approach can recover business process definitions from the implementation with high precision and recall...|$|R
5000|$|Business Department: <b>Business</b> Technology <b>Application</b> 1, <b>Business</b> Technology <b>Application</b> 2, <b>Business</b> Technology <b>Application</b> 3, <b>Business</b> Math ...|$|R
40|$|A {{business}} process contains {{a set of}} logically related tasks executed to fulfill <b>business</b> goals. <b>Business</b> <b>applications</b> enable organizations to automatically perform their daily operations. Business processes and <b>business</b> <b>applications</b> keep on changing independently due to dynamic business environments. Therefore, {{business process}} definitions are rarely up-to-dated to reflect the processes deployed in <b>business</b> <b>applications.</b> This inconsistency creates difficulties for the communications between business analysts and software developers. We present a business process explorer tool which automatically recovers business processes from <b>business</b> <b>applications</b> and refines the process definitions by detecting business task clones which have similar functionality across processes. 1...|$|R
40|$|Nowadays <b>business</b> <b>applications</b> closely {{collaborate}} with other <b>business</b> <b>applications</b> by sharing {{one or more}} services. Unfortunately, opening your <b>business</b> <b>application</b> {{to the outside world}} also sacrifices security. There is quite a number of standards that aims at protecting these services. However, most of these standards require special knowledge about security and are cumbersome to use. Our JASON 1 framework aims at simplifying the task of securing services. A programmer simply annotates his code with appropriate keywords and our tools will generate the security related code. The programmer can simply concentrate on the <b>business</b> <b>application,</b> while the JASON framework does the necessary cryptography. 1...|$|R
5000|$|Information {{technology}} <b>application</b> {{developers and}} <b>integrators</b> ...|$|R
50|$|VLBAs {{are similar}} to a Business Information System in the manner that they can support several <b>Business</b> <b>Application</b> Fields and in this case, {{they are based on}} several types of <b>Business</b> <b>Application</b> Systems.|$|R
40|$|Abstract Open source <b>business</b> <b>applications</b> {{will require}} {{community}} contribu-tions from business experts with relatively modest technical skills. This position paper briefly examines how active communities have developed around open source platforms that separate core programming code from functional add-ons and user interface add-ons, {{and how this}} separation encourages the sharing of spe-cialized <b>business</b> <b>application</b> knowledge. My interest is in finding community and project structures that accelerate the development of open source <b>applications</b> for <b>business.</b> Open Source <b>Business</b> <b>Applications</b> are a Challenge Open source software {{has its roots in}} developers writing software for their own needs, or programmers “scratching their own itch ” to use Raymond’s phrase [2]. Developers are less likely to have expert knowledge of business needs, making open source development for <b>business</b> <b>applications</b> a challenge [4]. Developing effective user interfaces for <b>business</b> <b>applications</b> can be a challenge for similar reasons [5]...|$|R
40|$|The World Wide Web (WWW, Web) {{has become}} a new {{application}} platform offering most services needed for a distributed operating system. With this, an opportunity is created that allows fusing originally separated <b>business</b> <b>application</b> systems to support new, value-added <b>business</b> <b>applications</b> accessible via the Web. In this paper, we present an approach to facilitate collaboration of <b>business</b> <b>application</b> systems. In particular, we point out how new Web-based <b>business</b> <b>applications</b> are created by fusing services of existing application systems that may reside in heterogeneous environments. Furthermore, we introduce a means to support inter-application communication on a semantic level, thus providing a global information infrastructure for Web-based <b>business</b> <b>applications</b> that supports resource management. Keywords: Information infrastructure; Web-based business applications; WCML; XML; EDI 1. INTRODUCTION In the ensuing decade, {{the use of the}} Web has moved far beyond of its orig [...] ...|$|R
40|$|Abstract:- The current {{generation}} <b>business</b> <b>applications</b> are restricted by the limitations in technology, and {{are unable to}} easily provide powerful enterprise features for developing next generation <b>business</b> <b>applications</b> that need rich user interfaces and support for development of large solutions. Microsoft’s Vista platform and WinFX API address this requirement. A Loan Management application, prototype of a next generation <b>business</b> <b>application,</b> is built using the WinFX API. The application demonstrates rich user interfaces working with business logic components exposed as services. It also illustrates separation of business logic components from workflow and data access components. This application, thus, shares an architecture and design {{that can be used}} for building future <b>business</b> <b>applications...</b>|$|R
40|$|A <b>business</b> <b>application</b> automates a {{collection}} of business processes. A business process describes how a set of logically related tasks are executed, ordered and managed by following business rules to achieve business objectives. An online bookstore <b>business</b> <b>application</b> contains several tasks such as buying a book, ordering a book, and sending out promotions. Business analysts specify business tasks and software developers implement these tasks. Throughout the lifetime of a <b>business</b> <b>application,</b> <b>business</b> analysts may clone (e. g., copy and slightly modify) business processes to handle special circumstances or promotions. Identifying these clones and removing them helps improve the efficiency of an organization. However most clone detection techniques are source code based not business process based. In this paper, we propose an approach that makes use of traditional source code detection techniques to detect clones in <b>business</b> <b>applications.</b> The effectiveness of our approach is demonstrated through a case study on 10 large open source <b>business</b> <b>applications</b> in the Apache Open for Business Project...|$|R
50|$|SAP R/2 was a mainframe-based <b>business</b> <b>application</b> {{software}} suite {{that was very}} successful in the 1980s and early 1990s. It was particularly popular with large multinational European companies that required soft-real-time <b>business</b> <b>applications,</b> with built-in multi-currency and multi-language capabilities.|$|R
50|$|Business {{software}} or a <b>business</b> <b>application</b> is any software or set {{of computer}} programs used by business users to perform various business functions. These <b>business</b> <b>applications</b> are used to increase productivity, to measure productivity and to perform other business functions accurately.|$|R
40|$|This master thesis {{deals with}} the design, programming, {{implementation}} and presentation of on-line <b>business</b> <b>applications</b> for IBM's On-Line Transaction Processing (OLTP) system called Customer Information Control System (CICS). According to the book “Designing and Programming CICS Applications ” ([HOR 00]) published by John Horswill we explain two out of many feasible procedures to present the functionality of CICS resp. CICS <b>business</b> <b>applications.</b> As the main result, we create for each of both procedures a <b>business</b> <b>application</b> representing a little clip of a bank customer account program. These applications access a database-like file stored on an Operating System/ 390 (OS/ 390) server to create, read, update, and delete customer accounts. Both use CICS {{not only as a}} transaction processing system but also as an application server that manages <b>business</b> <b>applications</b> 24 hours a day for 7 days a week. The difference between the two <b>business</b> <b>applications</b> are the data transfer and information display methods. The first procedure describes how to create a <b>business</b> <b>application</b> that uses the legacy 3270 Interface to inquire a customer record stored on the OS/ 390 -server and how to display the information on a 3270 terminal screen (also called as the green screen). In contrast, the second <b>business</b> <b>application</b> uses Message Queuing (MQ) provided by IBM's Message Oriented Middleware (MOM) product MQSeries to transfer the request data to and the response data from the customer account file between CICS and the Java Virtual Machine (JVM). Thi...|$|R
40|$|In this paper, we {{describe}} concepts for a middleware that enables communication between smart items networks and <b>business</b> <b>applications.</b> Smart items networks consist of RFID systems, wireless sensor networks, and embedded systems. The integration of such devices into <b>business</b> <b>applications</b> is challenging, since each device type {{has its own}} protocols and programming interfaces. Existing middleware simplifies development of software which runs on smart items but not integration with back-end systems. We propose middleware concepts that abstract from the smart items network on a serviceoriented level to ease integration into <b>business</b> <b>applications.</b> Our middleware allows the development of <b>business</b> <b>applications</b> which are able to deploy, run and query services from the network without any knowledge of the underlying smart items network. 1...|$|R
40|$|Although mobile {{technologies}} are increasingly utilized for business purposes, many companies {{have found it}} difficult to successfully implement them. Not only do the rapid technological changes increase the risks of companies investments into mobile technologies; many such applications have also failed to gain user acceptance. In contrast to the consumer domain, there are very few empirical studies of mobile applications effectiveness from the perspectives of professional end-users. Furthermore, designing mobile <b>business</b> <b>applications</b> has become an increasingly iterative and incremental activity, and ex post evaluations by actual users can provide crucial feedback to an iterative design process. In this study, we seek to contribute to establishing a design cycle that closely links the building and the evaluation of mobile <b>business</b> <b>applications.</b> Our objectives are to (1) {{gain a better understanding of}} mobile <b>business</b> <b>applications</b> success by means of ex post evaluations from end-users, and to (2) leverage these empirical insights to inform the design of mobile <b>business</b> <b>applications.</b> We carried out the study in collaboration with DEKRA Automotive, which offers expert services in the automotive sector with experience in mobile <b>business</b> <b>applications.</b> Our primary contribution is a systematic approach to using ex post evaluation as input for the iterative design of mobile <b>business</b> <b>applications.</b> We suggest an adapted version of the D&M IS Success Model, which has process quality as additional construct, as a basis for ex post evaluations of a mobile <b>business</b> <b>application</b> by its end -users. Furthermore, we illustrate how a performance-based analysis of the empirical results enables one to derive priorities and recommendations for future design iterations. Our results reveal that system quality and process quality are the main determinants of individual benefits of using mobile <b>business</b> <b>applications.</b> Our findings thus contradict other studies that identify information quality as a significant motivator of (consumer-oriented) mobile data services. We conclude that a mobile <b>business</b> <b>applications</b> design should focus on process quality, emphasizing functional support for operational tasks in a specific work context while ensuring system quality, which is largely affected by technology platform choices...|$|R
5000|$|... :fr:IUP :fr:MIAGE Information {{systems for}} <b>business</b> <b>applications</b> ...|$|R
50|$|Fabasoft app.ducx is an agile, use case-oriented {{development}} {{platform for}} composite <b>business</b> <b>applications</b> based on Fabasoft Folio, Fabasoft Folio Cloud and Fabasoft eGov-Suite. With high-performance and domain-specific languages (DSL), app.ducx is specially designed for fast and cost efficient development of document-centered <b>business</b> <b>applications</b> and Cloud Apps.|$|R
50|$|The <b>business</b> <b>application</b> error {{tracking}} system {{is used to}} review all issues periodically (daily, weekly and monthly) and reports are generated to monitor the resolved issues, repeating issues, and pending issues. Reports are also generated for the IT/IS management for improvement and management of <b>business</b> <b>applications.</b>|$|R
50|$|OpenXava is a web {{framework}} for developing <b>business</b> <b>applications</b> in an effective way. It not only allows rapid and easy development of CRUD modules and report generation, but also provides flexibility to develop complex real life <b>business</b> <b>applications</b> like accounting packages, customer relationship, invoicing, warehouse management, etc.|$|R
5000|$|BS in Mathematics with {{specialization}} in <b>Business</b> <b>Applications</b> ...|$|R
5000|$|Custom configuration, {{embedding}} protection layer for <b>business</b> <b>applications.</b>|$|R
5000|$|Thousands of <b>business</b> <b>applications</b> {{targeted}} to vertical markets ...|$|R
40|$|Abstract. E-{{services}} are {{services that}} can be invoked over the Internet. One likely use of e-services would be to build <b>business</b> <b>applications</b> that can employ e-services from different service providers. This potential use of composite services in business settings highlights the issues of payment mechanisms, reliability, trust, inter-operability and service guarantees between different service providers. It also becomes essential to choose e-services that best fulfil the requirements of a particular <b>business</b> <b>application.</b> We investigate how patterns {{can be used in}} service composition to help in the development of <b>business</b> <b>applications</b> based on e-services...|$|R
40|$|Silverlight 4 has the {{potential}} to revolutionize the way we build <b>business</b> <b>applications.</b> With its flexibility, web deployment, cross-platform capabilities, rich. NET language support on the client, rich user interface control set, small runtime, and more, it comes close to the perfect platform in which to build <b>business</b> <b>applications.</b> It's a very powerful technology, and despite its youth, it's moving forward at a rapid pace and is gaining widespread adoption. This book will guide you through the process of designing and developing enterprise-strength <b>business</b> <b>applications</b> in Silverlight 4 an...|$|R
40|$|International audienceThe {{purpose of}} this paper is to deﬁne a generic {{methodology}} for automatic development of cloud-based <b>business</b> <b>applications.</b> This can be used by non-IT experts, such as business stakeholders, who trigger a <b>business</b> <b>application</b> development by simply stating its requirements in terms of business functionalities and constraints, QoS parameters, and her/his preferences. From these functionalities and constraints, Linked USDL requirements ﬁles are automatically generated. These ﬁles provide the basis for the cloud service discovery and launch the automatic development of cloud <b>business</b> <b>applications.</b> We present the ﬁrst developments of our prototype...|$|R
50|$|The Business User {{calls the}} <b>{{business}}</b> <b>application</b> support team phone number or sends {{an e-mail to}} the <b>business</b> <b>application</b> support team. The <b>business</b> <b>application</b> support team gets {{all the details of}} the error from the business user on the phone or from the e-mail. These details are then entered in a tracking software. The tracking software creates a request number and this request number is given to the business user. This request number is used to track the progress on the support issue. The request is assigned to a support team member.|$|R
40|$|Abstract: Modern {{application}} landscapes {{consist of}} a multitude of inter-connected <b>business</b> <b>applications</b> exchanging data in manifold ways. These <b>business</b> <b>applications</b> are used by employees who take on several organizational roles. However, when broadening the scope to an enterprise-wide perspective, lack of clarity and uncertainty prevail regarding the questions which roles have access on which <b>business</b> <b>applications</b> {{as well as the}} business objects managed by them. In contrast to alternative approaches, e. g. single sign on, this paper focuses on the enterprise-wide availability of business objects. Motivated by a case study from the car manufacturing industry, this article describes a method to analyze and justify an enterprise-wide access matrix. Respective viewpoints are presented facilitating a business object access management on enterprise level. The method and concepts are further substantiated by means of the case study. 1 Introduction and motivating example Nowadays, an enterprise’s typical application landscape is characterized by a plethora of <b>business</b> <b>applications</b> which are interlinked via interfaces used for data exchange. In the course of time, the amount of data stored in these <b>business</b> <b>applications</b> continuousl...|$|R
5000|$|<b>Business</b> <b>Applications</b> & Platform Solutions: {{consulting}} & {{systems integration}} ...|$|R
5000|$|COBOL - {{eventually}} the ubiquitous, standard language for <b>business</b> <b>applications</b> ...|$|R
