51|3|Public
25|$|Tested: Every change must {{be tested}} in a safe test environment, which closely {{reflects}} the actual production environment, before the change {{is applied to the}} production environment. The <b>backout</b> plan must also be tested.|$|E
25|$|Planned: Planning {{a change}} {{involves}} discovering {{the scope and}} impact of the proposed change; analyzing {{the complexity of the}} change; allocation of resources and, developing, testing and documenting both implementation and <b>backout</b> plans. Need to define the criteria on which a decision to back out will be made.|$|E
2500|$|At Chanderkot Jhal, Jathedar Lachhman Singh {{decided to}} wait for Kartar Singh Jhabber and his Jatha. They waited {{for a while in}} vain and finally Jathedar Dharowali decided to cancel the plan for further march to Nankana Sahib. But at this very moment, Jathedar Tehal Singh came forward and {{addressed}} the Shaheedi Jatha not to vacillate even for a moment from forward march since [...] "the prayers having already been said and the action plan having already been decided with Guru's word, it is now imperative for now to move forward". Advising further that [...] "all the members shall keep cool even under extreme provocations". From here-onwards, Jathedar Tehal Singh took over the supreme command of the Shaheedi Jatha and resumed the march to Nankana. By almost at Amritvela, the Shaheedi Jatha reached the Railway-crossing near Nankana Sahib. Some of the Jatha members raced towards Darshani Deori to take possession of the Gurdawara, but at this very moment, Chaudhury Paul Singh Lyallpuri showed up with the latest decision of Shiromani Committee advising to postpone the action for taking possession of the Gurdwara. Having conveyed the information, Bhai Paul Singh grabbed Jathedar Lachhman Singh from his waist behind and persuaded him not to proceed further. Once again, Jathedar Tehal Singh took the initiative and shaking Chaudhury Paul Singh forcefully off from the person of Jathedar Lachhman Singh, he once more challenged the Shaheedi Jatha {{to get ready for the}} sublime action. He once again spoke: [...] " [...] Khalsa ji, the time is not to stop now, but to act. We have come here to achieve martyrdom under Guru's word. This is very un-Sikh-like to <b>backout</b> from one's commitment at the last moment" [...] Saying this, Tehal Singh walked with the Jatha towards the Gurdwara. Lachhman Singh and others repeatedly requested him to relent, but Tehal Singh stuck to his Ardās.|$|E
30|$|In Firefox, 20 % of {{the issues}} contain {{rejected}} patches. Negative reviews, <b>backouts,</b> and issue reopening are relatively independent events; in particular, about 70 % of issue reopenings are premature; 75 % of all inappropriate changes are rejected within four days.|$|R
30|$|In {{order to}} {{characterize}} patch rejection, we relied on issues and source code commits from {{over four years}} of the project’s history. We computed monthly metrics on the occurrence of three indicators of patch rejection—negative code reviews, commit <b>backouts,</b> and bug reopening—and measured {{the time it takes}} both to submit a patch and to reject inappropriate patches.|$|R
30|$|The diagram {{shows that}} most {{resolved}} issues {{are associated with}} a single rejection type, i.e., there are comparatively fewer issues that combine two or three rejection types. This result supports our observation that negative reviews, <b>backouts,</b> and reopenings are three essentially different phenomena (see the Background section) and that it is worthwhile to study all three to better understand patch rejection.|$|R
5000|$|The number 1 {{overall pick}} in the draft was taken by the Houston Oilers who {{selected}} the 1977 Heisman Trophy winner, Earl Campbell [...] a Running <b>Backout</b> of the University of Texas ...|$|E
50|$|Tested: Every change must {{be tested}} in a safe test environment, which closely {{reflects}} the actual production environment, before the change {{is applied to the}} production environment. The <b>backout</b> plan must also be tested.|$|E
50|$|Planned: Planning {{a change}} {{involves}} discovering {{the scope and}} impact of the proposed change; analyzing {{the complexity of the}} change; allocation of resources and, developing, testing and documenting both implementation and <b>backout</b> plans. Need to define the criteria on which a decision to back out will be made.|$|E
50|$|DEDB {{performance}} {{comes from}} use of high performance (Media Manager) access method, asynchronous write after commit, and optimized code paths. Logging is minimized because no data is updated on disk until commit, so UNDO (before image) logging is not needed, nor is a <b>backout</b> function. Uncommitted changes can simply be discarded.Starting with IMS Version 11, DEDBs can use z/OS 64-bit storage for database buffers.DEDBs architecture includes a Unit of Work (UOW) concept which made an effective online reorganization utility simple to implement. This function {{is included in}} the base product.|$|E
5000|$|The {{combined}} Jatha took a Hukamnama {{and started}} for the Gurdwara at about 10 PM on that night so as to reach there by early morning at Amrit vela (nectral hours). On the way 50 more Sikhs joined the Shaheedi Jatha and total number swelled to about 200.At Chanderkot Jhal, Jathedar Lachhman Singh decided to wait for Kartar Singh Jhabber and his Jatha. They waited for a while in vain and finally Jathedar Dharowali decided to cancel the plan for further march to Nankana Sahib. But at this very moment, Jathedar Tehal Singh came forward and addressed the Shaheedi Jatha not to vacillate even for a moment from forward march since [...] "the prayers having already been said and the action plan having already been decided with Guru's word, it is now imperative for now to move forward". Advising further that [...] "all the members shall keep cool even under extreme provocations". From here-onwards, Jathedar Tehal Singh took over the supreme command of the Shaheedi Jatha and resumed the march to Nankana. By almost at Amritvela, the Shaheedi Jatha reached the Railway-crossing near Nankana Sahib. Some of the Jatha members raced towards Darshani Deori to take possession of the Gurdawara, but at this very moment, Chaudhury Paul Singh Lyallpuri showed up with the latest decision of Shiromani Committee advising to postpone the action for taking possession of the Gurdwara. Having conveyed the information, Bhai Paul Singh grabbed Jathedar Lachhman Singh from his waist behind and persuaded him not to proceed further. Once again, Jathedar Tehal Singh took the initiative and shaking Chaudhury Paul Singh forcefully off from the person of Jathedar Lachhman Singh, he once more challenged the Shaheedi Jatha {{to get ready for the}} sublime action. He once again spoke: [...] " [...] Khalsa ji, the time is not to stop now, but to act. We have come here to achieve martyrdom under Guru's word. This is very un-Sikh-like to <b>backout</b> from one's commitment at the last moment" [...] Saying this, Tehal Singh walked with the Jatha towards the Gurdwara. Lachhman Singh and others repeatedly requested him to relent, but Tehal Singh stuck to his Ardās.|$|E
5000|$|On December 13, 1984 Gil {{wrote about}} how he earned the Purple Heart.… 40 years ago today I was a 19 year old combat infantryman in C. F, 309th Inf.Regt., 78th Inf. Division, {{participating}} in {{an attack on the}} German Wehrmacht in theHürtgen Forest in the Ardennes. Freezing cold -- snow covering everything -- in thepre-dawn darkness a flare fired from the German lines suddenly lit up the area andrevealed my company moving down a road - mortar shells and 88 shells began to fallin our midst almost immediately. My friends started dropping all around me - severalkilled instantly, others fatally wounded. I felt a blow on my left leg like someonehad hit me with a baseball bat. I hit the ground and crawled off the road into a lowspot. I realized I had dropped the spare barrel for my machine gun and crawled <b>backout</b> on the road and retrieved it. The company commander (Captain Brey - later killedinstantly) came up and told us to go with him and he would deploy us in the woods. We went in and established our line and came under machine gun fire and mortar fireand more of our company were killed. The captain told us to dig in and I started todig a foxhole in the frozen ground but by this time my leg really hurt and Icouldn’t stand on it and my boot was full of blood. I crawled over to Captain Breyand told him I had been hit in the leg and he told me {{to go back to the}} battalionaid station, which was several hundred yards back near the area where I was woundedin the first place. I had to crawl on my stomach the whole way as the area was underheavy fire but I made it. The medic at the battalion cut off my boot and bandaged myleg and gave me some sulfa pills. Then they put me in a jeep with some other woundedguys - a couple of stretchers and the jeep tore off at high speed for the regimentalaid station under artillery fire most of the way. We finally made it to the aidstation set up in a house and there were a couple of surgeons there working on themost severely wounded. There were quite a few bodies there and numerous guys withsevere head or chest wounds and obviously dying. I was put in an ambulance withseveral others and taken to a railhead where hospital trains were taking the woundedback into France. I don’t remember too much about that except a nurse came aroundevery few hours and gave me a shot of penicillin (pretty new stuff then) and wefinally arrived at Paris where we were taken to a large hospital. A chaplain camearound one day with a copy of general orders awarding a bunch of us the PurpleHeart. I still have my copy. After a week some of us were flown over to England inDC-3’s. I remember all the air force crew had parachutes but none of us wounded hadone. I asked one of the crew what we did if the Luftwaffe shot us down. He said“tough shit buddy.” Fortunately, we made it and when I arrived at the hospital inEngland I was pretty sure that I had probably survived the war. When I look back andrealize how close I came to death at the age of 19 it doesn’t seem possible that Iactually went through that experience and am alive and well today.On Friday October 25, 1985, he again remembered the war when he wrote about a tripto Europe when he worked at Kew and went sightseeing in London. “On the way toTrafalgar Square we and Pat stopped at the site of the War Room in the CabinetBuilding along St. James Park and toured the restored War Museum -very fascinatingto me since I was there at that time and lived through a lot of the history myself.”He remarked that his bad feet, perhaps never recovered from the war, suffered fromthe long walks of sightseeing. On his 72nd birthday (15 January 1997), Gilreflected, “I’m glad to be here when I look back to when I was 19 in the HürtgenForest in December 1944 and didn’t know if I would even get to be 20.” ...|$|E
30|$|As {{shown in}} {{previous}} studies, reopening rate and late <b>backout</b> rate decreased in the period, while early <b>backout</b> increased, supposedly because of integration repositories and better automated testing. In this study, {{we show that}} the negative code review rate also decreased.|$|E
40|$|A {{protocol}} for transaction processing during partition failures is presented which guarantees mutual consistency between copies of data-items after repair is completed. The protocol is “optimistic ” in that transactions are processed without restrictions during failure; conflicts are then detected at repair time using a precedence graph, and are resolved by backing out transactions {{according to some}} <b>backout</b> strategy. The resulting database state then corresponds to a serial execution of some subset of transactions run during the failure. Results from simulation and probabilistic modeling show that the optimistic protocol is a reasonable alternative in many cases. Conditions under which the protocol performs well are noted, and suggestions are made as to how performance can be improved. In particular, a <b>backout</b> strategy is presented which takes into account individual transaction costs and attempts to minimize total <b>backout</b> cost. Although the problem of choosing transactions to minimize total <b>backout</b> cost is, in general, NP-complete, the <b>backout</b> strategy is efficient and produces very good results...|$|E
30|$|After {{the patch}} is committed, the Mozilla {{integration}} server checks out the code from Mozilla-central, builds it for multiple platforms and runs automated tests. The whole process takes hours to complete, and developers who commit code to Mozilla-central {{are expected to}} wait and see if the build was successful and all tests pass. If this is the case, the developer should change the issue resolution to FIXED. Otherwise, the developer is expected to <b>backout</b> his commit. A <b>backout</b> that occurs before a successful build is called an early <b>backout.</b>|$|E
30|$|After a {{successful}} build, a tester downloads a nightly build and manually tests it to check if all issues marked as RESOLVED were actually resolved. If {{this is the}} case, the issue report is marked as VERIFIED; otherwise, it is marked as REOPENED, and the corresponding commit is backed out. A <b>backout</b> that occurs after {{a successful}} build is called a late <b>backout.</b>|$|E
3000|$|... {{the late}} <b>backout</b> rate, the reopening rate, and the {{negative}} review rate decreases under rapid releases; [...]...|$|E
3000|$|... {{rejection}} by negative review, <b>backout,</b> and issue reopening are three events that, although related, are relatively independent; [...]...|$|E
30|$|A <b>backout</b> {{indicates}} that a patch that was eventually approved by a reviewer and committed to a code repository was then deemed inappropriate. Usually, in this case, it {{means that there is}} a problem with the solution: a performance issue, incorrect outputs, uncovered corner cases, and so on. A <b>backout</b> is classified as early when it occurs before the corresponding issue report is closed (i.e., its status is changed to RESOLVED with resolution FIXED), which happens when the patch has been integrated into a successful build. Therefore, early backouts are likely an indicator that the corresponding patch failed compilation or automated testing. A <b>backout</b> is classified as late when it occurs after the issue report is closed, meaning that the problem was likely discovered during manual testing.|$|E
30|$|The issue latency {{perspective}} {{is concerned with}} {{how long it takes}} to reject an inappropriate patch. For instance, the metric time to <b>backout</b> measures that time it takes to <b>backout</b> for the first time an inappropriate commit. Other metrics include time to negative review and time to reopening. If it takes too long to reject inappropriate patches, it is more likely that developers write changes that rely on source code with problems.|$|E
3000|$|... almost 70 % {{of issue}} reopenings are premature, {{because they are}} not {{accompanied}} by the <b>backout</b> of the corresponding patch; [...]...|$|E
30|$|It {{should be}} noted that an issue report may, over its history, receive {{multiple}} patches, which may be rejected multiple times. For the sake of simplicity, we study only the first rejection, the first early <b>backout,</b> the first late <b>backout,</b> and the first reopening of an issue report. Therefore, we do not measure directly the number of patches that were rejected; instead, we measure the number of issue reports that had at least one patch rejected.|$|E
30|$|All commits whose message {{matched the}} regular {{expression}} “back.{ 0, 5 }out”, i.e., the words “back” and “out”separated {{by up to}} five characters, were interpreted as <b>backout</b> commits. The purpose of the five characters separation is to match common variations, such as “backed out” and “backing out”. In a <b>backout</b> commit, all decimal numbers with 5 to 6 digits were interpreted as issue report identifiers, and all hexadecimal numbers with 7 to 12 digits were interpreted as commit hashes.|$|E
30|$|The table can be {{directly}} obtained by summing numbers obtained from Fig. 5 and from Fig. 6. For instance, the negative review rate {{is the sum of}} the four percentages inside the negative review circle in Fig. 5. Small discrepancies in the summation are {{due to the fact that}} all values are rounded to one decimal place. Notice that the overall rejection rate is smaller than the sum of negative review, <b>backout</b> and reopening, since it is possible for a single issue to be associated with more than one kind of rejection (e.g., <b>backout</b> and reopening).|$|E
30|$|With {{integration}} repositories, only {{code that}} passes build and automated tests are merged into Mozilla-central, keeping it more stable. Furthermore, because of sheriffs, developers {{do not need}} to watch builds and <b>backout</b> commits anymore.|$|E
40|$|The {{transaction}} <b>backout</b> problem {{arises in}} the area of distributed databases. Suppose failures partition a data-redundant distributed database, and each partition continues to function {{as if it were the}} entire database. When the database is reconnected, the transactions executed by different partitions may not be serializable, and hence it may be necessary to back out some of the transactions. The transaction <b>backout</b> problem is to remove the smallest set of transactions that will leave the remaining ones serializable. The general problem is NP-complete, and in this paper we show that the special case of a fixed-size database can be solved in polynomial time by dynamic programming...|$|E
30|$|The {{specific}} timestamp used {{to determine}} the group of an issue depends on the metric. For instance, when computing time to commit, we are interested {{in the time it takes}} to commit a patch for an issue that was created in a certain period; therefore, for this specific metric, issues are classified according to their creation time. When computing time to <b>backout,</b> on the other hand, the question is “how long it takes to <b>backout</b> a patch that was commited under rapid/traditional releases”; therefore, the timestamp of the first issue-resolving commit is used. For some metrics, issues were groupped by month and a time series was plotted to understand their variation over time.|$|E
40|$|The first {{anterior}} cervical fusion {{was performed}} by Bailey and Badgley in the early 1950 s. Cloward, 6, 7 Smith and Robinson, 22 and others offered early contributions to the improvement of techniques of cervical fusion. These pioneers encountered high rates of pseudarthrosis and kyphosis in multilevel anterior procedures. This {{led to the development}} of an anterior internal cervical fixation device by Bohler in 1964, which was the foundation of the numerous plates available today. 3 During the last 20 years ACPs have evolved. There have been improvements in fusion rates in patients undergoing multilevel anterior cervical fusion as well as in patients undergoing single-level fusion. Anterior cervical fusion has been shown to contribute to earlier patient mobilization, a decreased need for cervical collars postoperatively, an increased loading force applied to the graft, a decreased incidence of graft dislodgment, and an improved ability to fix spinal deformities. 1, 2, 4, 5, 8 – 10, 12, 14, 17, 21, 23 The proliferation of ACPs in the last two decades has warranted a need for a classification scheme, which was organized by Haid and colleagues in 2002. 11 In this classification system, ACPs are first divided into two categories: unrestricted <b>backout</b> and restricted <b>backout.</b> Unrestricted <b>backout</b> plates, such as Orozco and Caspar plates...|$|E
30|$|Also, in our analyses, we {{considered}} {{only the first}} negative review, the first <b>backout,</b> and the first reopening of each issue report. We believe this simplification did not change significantly the results, since few issue reports contain more than one ocurrence {{of each of these}} events.|$|E
30|$|Whenever a commit {{is deemed}} inappropriate, it is backed out, {{a process that}} creates a new commit {{reverting}} the inappropriate commit. By convention, <b>backout</b> commit messages contain the expression “backout”—or one the variations “back out”, “backing out”, and “backed out”—, followed by the hash of the commit being backed out.|$|E
30|$|Since 2011, the {{conventions}} used in commit messages are enforced by a Mercurial hook that prevents pushing to Mozilla repositories any commits whose message does {{not conform to}} conventions 3. In addition to patches to issues and <b>backout</b> commits, there are conventions for merge commits {{and a few other}} special cases.|$|E
30|$|In {{previous}} studies, {{we evaluated}} how rapid releases impacted the issue reopening rate (Souza et al. 2014) and the <b>backout</b> rate (Souza et al. 2015), {{two forms of}} patch rejection. In this study, we add another form of patch rejection—negative code reviews—and focus on characterizing and comparing, using data from Firefox, the three forms of patch rejection.|$|E
30|$|In {{previous}} studies (Souza et al. 2014, 2015), we explored {{the evolution of}} patch rejection over time by analyzing issue reopening and <b>backout</b> metrics under two periods: traditional releases, from February 2009 to February 2011, and rapid releases, from July 2011 to July 2013. In this study, we replicate the analyses adding another form of patch rejection, negative code reviews.|$|E
40|$|STUDY DESIGN: A multicenter, {{retrospective}} case series. OBJECTIVE: In {{the past}} several years, screw fixation of the cervical spine has become commonplace. For the most part, this is a safe, low-risk procedure. While rare, screw <b>backout</b> or misplaced screws can lead to morbidity and increased costs. We report our experiences with this uncommon complication. METHODS: A multicenter, retrospective case series was undertaken at 23 institutions in the United States. Patients were included who underwent cervical spine surgery from January 1, 2005, to December 31, 2011, and had misplacement of screws requiring reoperation. Institutional review board approval was obtained at all participating institutions, and detailed records were sent to a central data center. RESULTS: A total of 12 [*] 903 patients met the inclusion criteria and were analyzed. There were 11 instances of screw <b>backout</b> requiring reoperation, for an incidence of 0. 085 %. There were 7 posterior procedures. Importantly, there were no changes in the health-related quality-of-life metrics due to this complication. There were no new neurologic deficits; a patient most often presented with pain, and misplacement was diagnosed on plain X-ray or computed tomography scan. The most common location for screw <b>backout</b> was C 6 (36 %). CONCLUSIONS: This study represents the largest series to tabulate the incidence of misplacement of screws following cervical spine surgery, which led to revision procedures. The data suggest this is a rare event, despite {{the widespread use of}} cervical fixation. Patients suffering this complication can require revision, but do not usually suffer neurologic sequelae. These patients have increased cost of care. Meticulous technique and thorough knowledge of the relevant anatomy are the best means of preventing this complication...|$|E
30|$|Wrapping up, {{there are}} three types of patch {{rejection}} in the process: the negative review of a patch submitted to code review, the <b>backout</b> of a commit, and the reopening of an issue report. Backouts can be further split into early backouts, for commits that were not integrated into a successful build, and late backouts, for commits that passed compilation and automated tests but were later discovered to be inappropriate.|$|E
30|$|After that, {{events were}} {{aggregated}} by issue, so all previously described per-issue metrics could be computed, such as reopening rate {{and time to}} <b>backout</b> (step 8). This resulted in 52832 issues created between 1999 and 2013, which received commits between 2007 and 2014 (it may seem counterintuitive that an issue reported created in 1999 would receive a commit in 2007, but that actually happens in our data set).|$|E
