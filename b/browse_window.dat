0|24|Public
5000|$|<b>Browse</b> <b>Windows</b> Live Spaces in 3D {{graphics}} {{with new}} [...] "Gallery" [...] views and full keyword search ...|$|R
40|$|We {{propose a}} method to enhance web {{browsing}} history records by considering <b>browsing</b> <b>window</b> attributes. The <b>browsing</b> <b>window</b> attributes means properties of web browser window such as size, location, z-order, activated status, etc. We often open multiple web documents for each <b>window</b> and <b>browse</b> the contents through handling these windows at the same time. Since a series of the window attributes describe the user’s browsing activities, we exploit the attributes to enrich the browsing records to help the user find previously visited web pages...|$|R
50|$|One area of {{particular}} note is performance. Areas of improvement include file copy operations, hibernation, logging off on domain-joined machines, JavaScript parsing in Internet Explorer, network file share <b>browsing,</b> <b>Windows</b> Explorer ZIP file handling, and Windows Disk Defragmenter. The ability to choose individual drives to defragment is being reintroduced as well.|$|R
5000|$|On April 5, 2006, version 8.6 was {{released}} {{and was also}} the first version to support Symbian OS 9. New to this version is the ability to support multiple <b>browsing</b> <b>windows,</b> support for Scalable Vector Graphics, introduction of URL autocompletion as well several changes in the customization aspect. It {{was also the first}} version of Opera Mobile that allowed for the possibility to configure it as the device's default browser, allowing for it to be launched whenever a web page was requested to be opened.|$|R
40|$|This paper {{explores the}} {{possibilities}} of visualizing document similarities and differences in both spatial and topical domains. Building on previous studies of geographical information retrieval and textual information retrieval (IR) systems, {{we report on the}} development of an information browsing tool, GeoVIBE. The system consists of two types of <b>browsing</b> <b>windows,</b> GeoView and VibeView, that work in coordination for visual navigation in the document space. GeoView imposes a geographical order to the document space based on the idea of hypermaps where "icons" and "footprints" may be embedded in maps as the clickable hotspots linking to relevant documents...|$|R
25|$|Server Explorer: The Server Explorer tool is used {{to manage}} {{database}} connections on an accessible computer. It {{is also used to}} <b>browse</b> running <b>Windows</b> Services, performance counters, Windows Event Log and message queues and use them as a datasource.|$|R
40|$|AbstractOnline {{shopping}} {{has witnessed}} explosive growth: {{there are hundreds}} of millions of online shoppers that are part of an online retail industry worth of hundreds of billions of dollars. While online shopping has its own advantages (such as convenience, product reviews, price and selection range), recent focus has been in using technology to mimic the social interactions found in physical shopping malls and stores in what is called as “social shopping”. Put simply, in social shopping shoppers’ friends become involved in the shopping experience. An important aspect of social shopping is “co-shopping” where ad-hoc collaborative shopping groups are formed in which one person can drive an online shopping experience for one or more other people. This requires a mechanism that provisions multiple users to conduct real time online shopping collaboratively from multiple locations. For example, family members at remote locations can view the product online simultaneously as if they are shopping together in real time. To this end we have designed a special collaborative <b>browsing</b> <b>window</b> in which all the co-shoppers need to login. One user becomes the leader and invites others from his friends’ list for shopping. Other users need to accept this invitation and join the shopping. The leader upon liking a product initiates the co-shopping by clicking on “Share this product with selected friends” button. On clicking this button an AJAX request, which contains URL of the product and list of IDs of selected friends, goes to the server. The server receives the URL of the product and list of IDs of friends and pushes this URL to all the selected friends in an asynchronous manner using PUSH AJAX technology. This URL gets loaded into an HTML iFrame on every client's <b>browsing</b> <b>window.</b> Shoppers can communicate with each other using a simple chat window...|$|R
50|$|In addition, table- and grid-based layouts were {{replaced}} by fluid layouts {{in an attempt to}} respond to the growing use of mobile devices to access web content. These design methodologies abandoned the attempt to control two-dimensional layout between elements. Instead the elements would be offered to the reader's browser and the browser would place them as best it could, according {{to the size of the}} reader's <b>browsing</b> <b>window.</b> Fluid design layouts made the setting of page element sizes on the user's browser less important. This was particularly evident where it removed the need to set sizes in absolute units such as pixels. As the web designer had never been able to control the size of the reader's screen window, the attempt to set sizes rigidly had always been a mistake.|$|R
40|$|In {{this article}} we present CONQUEST, a constraint-based {{querying}} system able to support the intrinsically exploratory (i. e., human-guided, interactive and iterative) nature of pattern discovery. Following the inductive database vision, our framework provides users with an expressive constraint-based query language, which allows the discovery process to be effectively driven toward potentially interesting patterns. Such constraints are also exploited {{to reduce the cost}} of pattern mining computation. CONQUEST is a comprehensive mining system that can access real-world relational databases from which to extract data. Through the interaction with a friendly graphical user interface (GUI), the user can deﬁne complex mining queries by means of few clicks. After a pre-processing step, mining queries are answered by an efﬁcient and robust pattern mining engine which entails the state-of-the-art of data and search space reduction techniques. Resulting patterns are then presented to the user in a pattern <b>browsing</b> <b>window,</b> and possibly stored back in the underlying database as relations...|$|R
40|$|When several {{information}} {{items are}} presented simultaneously, the potential exists for users {{to interact with}} information in a rich and rewarding way. The MultiBrowser system supports such interaction via an information foraging style of hypermedia <b>browsing.</b> Multiple <b>windows,</b> colored bars that provide visual cues, and automatically inserted hyperlinks among the paragraphs in a document set contribute {{to the structure of}} repositories created by MultiBrowser. These repositories are browsable over the Web using an ordinary Web browser...|$|R
25|$|As of July 2016, macOS is the second-most-active {{general-purpose}} {{desktop client}} operating system in {{use on the}} World Wide Web following Microsoft Windows, with a 4.90% usage share according to statistics compiled by the Wikimedia Foundation. It {{is the second most}} widely-used desktop operating system (for web <b>browsing),</b> after <b>Windows,</b> and is estimated at approximately five times the usage of Linux (which has 1.01%). Usage share generally continues to shift away from the desktop and toward mobile operating systems such as iOS and Android.|$|R
50|$|The tab {{browsing}} feature {{allows users}} to open multiple tabs or pages on one window. This is convenient for users who enjoy <b>browsing</b> from one <b>window</b> and is also advantageous in ensuring ease of browsing. The tabs are easily made accessible and users can close tabs {{that are not in}} use for better usability.|$|R
5000|$|C4 {{came with}} a new {{template}} set and class library called [...] "Application Builder Classes" [...] or “ABC”. The original template set generated procedural code, which was becoming increasingly complex. The ABC template set generated far less code, and leveraged the class library, which contained most of the actual logic for <b>windows,</b> <b>browses,</b> forms, etc. C4 enhanced OOP by adding Constructors and Destructors (without parameters).|$|R
40|$|New Features Applications mne_dipole_fit mne_launch MNE Scan Improved display {{usability}} EEGo Sports Amplifier Support gTec Amplifier Support Real-Time Noise reduction PlugIn (Temporal Filtering, SSP, SPHARA) HPI Fitting Overall Improvement of the BabyMEG Plugin Improved Real-Time Averaging Visualization (2 D Layout, Butterfly) Neuronal Connectivity Plugin Real-Time Functional Connectivity Visualization SSVEP BCI Plugin MNE <b>Browse</b> Filter <b>Window</b> MNE Lib Connectivity Library Display Library Time Frequency Plot Spline Plot ** Histogram Plot Disp 3 D ** Rewrite {{using new}} qt 3 d API Inverse ** Dipole Fit Real-Time Processing Refactored Real-Time Averaging Real-Time Filter ** Real-Time HPI Utils Detect Trigger Class Matrix IO Routines Spectogram Warping Class Refactoring Major Renaming Reduced Compilation times by {{extensive use of}} forward declaration...|$|R
40|$|Abstract A Web-based {{automated}} homework submission {{system has}} been developed to allow students to submit their homework across the Internet. This system is composed of three modules: a front-end GUI interface module, an on-line homework submission acceptance module, and a back-end GUI interface module. The front-end GUI interface module includes a standard Web browser {{and a set of}} CGI programs and HTML documents to interact with the users for prompting them to submit their files. The on-line homework submission acceptance module accepts files received from students and organizes them into hierarchical directory structures based on courses, assignments, and student IDs. The back-end GUI interface is structured similarly to the front-end interface; however, it is to be used by instructors for grading purposes. All homework files submitted will be confirmed in two ways. First, it is confirmed at the time of submission by displaying a message on the screen. Second, it emails the filename to the submitting student for a personal record. Each file received is timestamped automatically at the time of submission by the host operating system. Files of any data type, text or binary can be submitted in the same manner. Ease of use is a major design goal for this system. For students, menus and <b>browse</b> <b>windows</b> are used to navigate the Web pages for submitting homework and checking grades received. The only typing needed is for entering in student names and IDs. For instructors, grading can be done on-line via the HTML forms, or the student files can be downloaded and then graded later. All grades can be reported electronically once the instructor has finished grading the homework submitted...|$|R
50|$|In {{addition}} to the themes provided in Windows Live Wave 3, the release of Windows Live Wave 4 provided additional themes for users to customise their pages on Windows Live, with several dynamic themes that changes according {{to the time of}} day and weather conditions at the user's location. Several of these newly added themes are similar to wallpapers originating from Windows 7. In addition, the Windows Live Wave 4 header features a reorganised dynamic navigation menu that displays the number of the user's current online contacts and the number of unread e-mails, as well as an in-built Windows Live Web Messenger service allowing users to connect to the Microsoft Messenger service and Facebook chat service to chat with their online contacts while <b>browsing</b> any <b>Windows</b> Live properties using a web browser. This theme remains in use on sites such as Family Safety.|$|R
25|$|Version 3.0 {{retained}} {{all of the}} functionality {{from previous}} versions and added new features and tools. Support for DirectX 8.1 and OpenGL was added, allowing Mac users to play some Windows games without the need to boot into Windows with Boot Camp. A new feature called SmartSelect offers cross OS file and application integration by allowing the user to open Windows files with Mac OS X programs and vice versa. Parallels Explorer was introduced, which allows the user to <b>browse</b> their <b>Windows</b> system files in Mac OS X without actually launching Windows. A new snapshot feature was included, allowing one to restore their virtual machine environment to a previous state in case of issues. Further, Parallels added a security manager to {{limit the amount of}} interaction between the Windows and Mac OS X installations. This version included a long-awaited complete “Parallels tools'” driver suite for Linux guest operating systems. Therefore, integration between Mac OS X and Linux guest-OS's has been greatly improved.|$|R
40|$|When several {{information}} {{items are}} presented simultaneously, the potential exists for users {{to interact with}} information in a rich and rewarding way. The MultiBrowser system supports such interaction via an information foraging style of hypermedia <b>browsing.</b> Multiple <b>windows,</b> colored bars that provide visual cues, and automatically inserted hyperlinks among the paragraphs in a document set contribute {{to the structure of}} repositories created by MultiBrowser. These repositories are browsable over the Web using an ordinary Web browser.;Using these repositories as a platform, we investigate hypertext repositories with automatically generated hyperlinks among paragraphs. The algorithms that generate the links yield results with significant common characteristics despite large differences among the algorithms. Furthermore, different repositories generated from the return lists of different search engines show significant common characteristics. Finally, repositories generated for different domains also have common characteristics. This suggests that these characteristics are pervasive properties of judiciously retrieved document sets. The common characteristics revolve around a tendency for some documents (called the kernel) to be destinations of a disproportionately high fraction of the hyperlinks in the repository. An emergent property of such repositories with practical significance is that browsing activities will have a tendency to trap users within the kernel, perhaps without them realizing it. To enable users to choose to avoid being trapped, we propose a ring structure for hypertext repositories. This structure is exposed to the user by annotations to the hyperlinks...|$|R
40|$|The {{huge amount}} of gene {{expression}} data generated by microarray and next-generation sequencing technologies present challenges to exploit their biological meanings. When searching for the coexpression genes, the data mining process is largely affected by selection of algorithms. Thus, it is highly desirable to provide multiple options of algorithms in the user-friendly analytical toolkit to explore the gene expression signatures. For this purpose, we developed GESearch, an interactive graphical user interface (GUI) toolkit, which is written in MATLAB and supports a variety of gene expression data files. This analytical toolkit provides four models, including the mean, the regression, the delegate, and the ensemble models, to identify the coexpression genes, and enables the users to filter data and to select gene expression patterns by <b>browsing</b> the display <b>window</b> or by importing knowledge-based genes. Subsequently, the utility of this analytical toolkit is demonstrated by analyzing two sets of real-life microarray datasets from cell-cycle experiments. Overall, we have developed an interactive GUI toolkit that allows for choosing multiple algorithms for analyzing the gene expression signatures...|$|R
5000|$|Windows Vista, by default, {{references}} {{the profile}} of the user who originally created a saved search as part of the query's scope, which includes the disk partition. This design choice does not prevent saved searches from being shared with other users, but it prevents them from operating on different partitions or user profiles. While users can manually modify the contents of a saved search so that the scope references the %USERPROFILE% environment variable, which will enable it to operate on other machines or profiles regardless of the original author or location, Microsoft has released a SearchMelt Creator utility that automates this process for the user.In early development builds of Windows Vista, there existed pre-configured Search Folders for the default user profile folders (e.g., Documents, Music, and Pictures) that replaced the links to these folders seen on the Windows Start menu. When <b>browsing</b> directories in <b>Windows</b> Explorer, the navigation pane would feature predefined Search Folders that were relevant to a currently viewed directory. When viewing the Documents folder, for example, the navigation pane would populate with individual Search Folders based on authors of documents, their ratings, their keywords, their types, and documents that were recently changed.|$|R
40|$|This paper {{develops}} {{a model of}} conversion behavior (i. e., converting store visits into purchases) that predicts each customer's probability of purchasing based on an observed history of visits and purchases. We offer an individual-level probability model that allows for different forms of customer heterogeneity in a very flexible manner. Specifically, we decompose an individual's conversion behavior into two components: one for accumulating visit effects and another for purchasing threshold effects. Each component is allowed to vary across households as well as over time. Visit effects capture the notion that store visits can play different roles in the purchasing process. For example, some visits are motivated by planned purchases, while others are associated with hedonic <b>browsing</b> (akin to <b>window</b> shopping); our model is able to accommodate these (and several other) types of visit-purchase relationships in a logical, parsimonious manner. The purchasing threshold captures the psychological resistance to online purchasing that may grow or shrink as a customer gains more experience with the purchasing process at a given website. We test {{different versions of the}} model that vary in the complexity of these two key components and also compare our general framework with popular alternatives such as logistic regression. We find that the proposed model offers excellent statistical properties, including its performance in a holdout validation sample, and also provides useful managerial diagnostics about the patterns underlying online buyer behavior. stochastic models, e-commerce, online purchasing conversion, buyer behavior...|$|R

