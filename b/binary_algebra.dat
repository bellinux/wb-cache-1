9|51|Public
40|$|In {{this paper}} we develop a new, {{computationally}} friendly approach to Lie coalgebras through graph coalgebras, and we apply {{this approach to}} Harrison homology. There are two standard to presentations of a Lie algebra through “simpler ” algebras. One is as a quotient of a non-associative <b>binary</b> <b>algebra</b> by Jacobi and anti-commutativity identities. Another presentation is as as embedded as Hopf algebra primitives i...|$|E
40|$|We study {{partially}} {{and totally}} associative ternary algebras of {{first and second}} kind. Assuming the vector space underlying a ternary algebra to be a topological space and a triple product to be continuous mapping we consider the trivial vector bundle over a ternary algebra and show that a triple product induces a structure of <b>binary</b> <b>algebra</b> in each fiber of this vector bundle. We find the sufficient and necessary condition for a ternary multiplication to induce a structure of associative <b>binary</b> <b>algebra</b> in each fiber of this vector bundle. Given two modules over the algebras with involutions we construct a ternary algebra which {{is used as a}} building block for a Lie algebra. We construct ternary algebras of cubic matrices and find four different totally associative ternary multiplications of second kind of cubic matrices. It is proved that these are the only totally associative ternary multiplications of second kind in the case of cubic matrices. We describe a ternary analog of Lie algebra of cubic matrices of second order which is based on a notion of j-commutator and find all commutation relations of generators of this algebra. Comment: 17 pages, 1 figure, to appear in "Journal of Generalized Lie Theory and Applications...|$|E
40|$|AbstractWe {{define the}} notion of an oracle {{branching}} program in order to investigate space-bounded computation. Within this new framework we examine the P-complete problem GEN which consists of determining membership in a subalgebra of a general (not necessarily associative) <b>binary</b> <b>algebra</b> (input as a multiplication table). Our work begins with the statement of a conceptually simple conjecture highlighting the combinatorics which underlie the relationship between Logspace and P. We show that natural subclasses of P can be expressed as natural subproblems for GEN. Finally, we prove optimal lower bounds on the size of branching programs for GEN with certain natural oracles...|$|E
40|$|Left {{distributive}} left quasigroups are <b>binary</b> <b>algebras</b> {{with unique}} left division satisfying the left distributive identity x(yz) ≈ (xy) (xz). In other words, <b>binary</b> <b>algebras</b> where all left translations are automorphisms. We provide a description {{and examples of}} non-idempotent subdirectly irreducible algebras in this class...|$|R
3000|$|... a Moreover, Calciano [20] has {{extended}} the monotone comparative statics results of Milgrom and Shannon [21] to general <b>binary</b> <b>algebras.</b>|$|R
40|$|In this paper, we {{characterize}} {{exactly the}} class of languages that are recognizable by finite loops, i. e. by cancellative <b>binary</b> <b>algebras</b> with an identity. This {{turns out to be}} the well-studied class of regular open languages. Our proof technique is interesting in itself: we generalize the operation of block product of monoids, which is so useful in the associative case, to the situation where the left factor in the product is non-associative...|$|R
40|$|We {{consider}} 48 parastrophically uncancellable quadratic functional equations {{with four}} object variables and two quasigroup operations in two classes: balanced non [...] Belousov (consists of 16 equations) and non [...] balanced non [...] gemini (consists of 32 equations). A linear {{representation of a}} group (Abelian group) {{for a pair of}} quasigroup operations satisfying one of these parastrophically uncancellable quadratic equations is obtained. As a consequence of these results, a linear representation for every operation of a <b>binary</b> <b>algebra</b> satisfying one of these hyperidentities is presented. Comment: 23 pages, 2 figures, submitted to Buletinul Academiei de Ştiinţe a Republicii Moldova. Matematic...|$|E
40|$|By {{grouping}} 2 r sites {{together into}} one, a cellular automaton with radius r {{can be transformed}} into one with a two-site neighborhood, which {{can be thought of}} as a <b>binary</b> <b>algebra.</b> We show that if this block algebra is in one of four large classes of algebras (commutative, associative with identity, inverse property loop, or anticommutative with identity) then the underlying rule only depends on its leftmost and rightmost inputs, and the block algebra is simply the direct product of 2 r copies of the underlying algebra. Therefore, although this algebraic approach to cellular automata has been useful to some extent, we cannot expect complex rules on several-site neighborhoods to be equivalent to binary algebras with these simplifying properties. 1 Introduction A Cellular Automaton (CA) is a dynamical system on sequences, a 0 i = f(a i; : : :; a i; : : :; a i+r) where each a i is a symbol in a finite alphabet A, and r is the radius of the rule. We can also consider half-int [...] ...|$|E
40|$|D'ep. de Math'ematiques et d'Informatique, Universit'e de Sherbrooke, Sherbrooke, Qu'ebec J 1 K 2 R 1 Canada. Abstract We {{study the}} {{context-free}} languages recognized by a groupoid G {{in terms of}} the algebraic properties of the multiplication monoid M(G) of G. Concentrating on the case where M(G) is group-free, we show that all regular languages can be recognized by groupoids for which M(G) is J-trivial of threshold 2 and that all groupoids for which M(G) belongs to the larger variety DA recognize only regular languages. Further, we give an example of a groupoid such that M(G) is in the smallest variety outside of DA, and which recognizes all context-free languages not containing the empty word. This is the journal version of an extended abstract presented under the same title at the STACS' 96 conference. I. Introduction A groupoid is a <b>binary</b> <b>algebra</b> G with no restriction on its operation "Δ "; in particular "Δ " {{does not have to be}} associative. Just like monoids recognize regular languages, finite groupoids recognize languages: a language L ` A...|$|E
50|$|Mathematics in China emerged {{independently}} by the 11th century BC. The Chinese independently developed {{very large}} and negative numbers, decimals, a place value decimal system, a <b>binary</b> system, <b>algebra,</b> geometry, and trigonometry.|$|R
40|$|With {{the help}} of the multigraded Nijenhuis [...] Richardson bracket and the multigraded Gerstenhaber bracket from [7] for every n 2 we define n-ary {{associative}} algebras and their modules and also n-ary Lie algebras and their modules, and we give the relevant formulas for Hochschild and Chevalley cohomogy. Table of contents 1. Introduction............................ 1 2. Review of <b>binary</b> <b>algebras</b> and bimodules................ 2 3. n-ary G-graded associative algebras and n-ary modules.......... 5 4. Review of G-graded Lie algebras and modules.............. 7 5. n-ary G-graded Lie algebras and their modules............. 10 6. Relations between n-ary algebras and Lie algebras............ 12 7. Hochschild operations and non commutative differential calculus...... 12 8. Remarks on Filipov's n-ary Lie algebras................ 15 9. Dynamical aspects.......... [...] . ...|$|R
40|$|Note. The {{paper is}} in {{progress}} (probably forever) and may contain inaccurate citations, so I strongly recommend to check original papers, whenever a reader becomes interested in a particular result. Also, I believe I found almost all Englishwritten references dealing with LSLDI groupoids, however, the survey is far from making a big picture about them, it is rather just overview of papers related to the topic. The stress on particular results depends on my mood in time I held the respective paper and {{it is far from}} being balanced (and I doubt the topic is worth of the effort to make the survey nice and complete). We present a survey of results about groupoids, i. e. <b>binary</b> <b>algebras,</b> satisfying the following identities: (left symmetry) (left distributivity) (idempotency) x(xy) ≈ y, x(yz) ≈ (xy) (xz) ...|$|R
40|$|The Cayley Group Membership problem (CGM) is {{to input}} a groupoid (<b>binary</b> <b>algebra)</b> G given as a {{multiplication}} table, a subset X of G, and an element t of G, {{and to determine}} whether t can be expressed {{as a product of}} elements of X. For general groupoids CGM is P-complete, and for associative algebras (semigroups) it is NL-complete. Here we investigate CGM for particular classes of groups. The problem for general groups is in SL (symmetric log space), but any kind of hardness result seems difficult because it would require constructing the entire multiplication table of a group. We introduce the complexity class FOLL, or FO(log log n), of problems solvable by uniform polysize circuit families of unbounded fan-in and depth O(log log n). Since parity is not in FOLL, no problem in FOLL can be complete for any class containing parity, such as NC 1, L, or SL. But FOLL is not known to be contained even in SL. We show that CGM for cyclic groups is in FOLL " L and that CGM for abelian gro [...] ...|$|E
40|$|AbstractThe Cayley group {{membership}} problem (CGM) is to input a groupoid (<b>binary</b> <b>algebra)</b> G given as a multiplication table, a subset X of G, and an element t of G {{and to determine}} whether t can be expressed {{as a product of}} elements of X. For general groupoids CGM is P-complete, and for associative algebras (semigroups) it is NL-complete. Here we investigate CGM for particular classes of groups. The problem for general groups is in SL (symmetric log space), but any kind of hardness result seems difficult because proving it would require constructing the entire multiplication table of a group. We introduce the complexity class FOLL, or FO(loglogn), of problems solvable by uniform poly-size circuit families of unbounded fan-in and depth O(loglogn). No problem in FOLL can be hard for L or for any other class containing parity, but FOLL is not known to be contained even in SL. We show that CGM for cyclic groups is in FOLL∩L and that CGM for abelian groups is in FOLL. We then examine the case of some solvable groups, showing in particular that CGM for nilpotent groups is also provably not hard for any class containing parity. We also consider the problem of testing for various properties of a group input as a table: we prove that cyclicity and nilpotency can each be tested in FOLL∩L. Finally, we examine the implications of our results for the complexity of iterated multiplication, powering, and division of integers {{in the context of the}} recent results of Chiu, Davida, and Litow and of Hesse...|$|E
40|$|Graduation date: 1978 Bilinear systems, {{encountered}} in many important applications of engineering, biological and socio-economic systems, represent the logical step in complexity between the linear systems which are inadequate in the modeling of various dynamic processes and the difficult realm of nonlinear systems. This dissertation studies two functional expansions in bilinear system analysis- - the Volterra series approach and the Walsh-function approach. The Volterra series for bilinear systems is developed {{by means of}} the Reversion technique. The uniform convergence of the series is provedand estimates on the bound of the output of the system and on the error due to the truncation of the series are obtained. The above development leads to a direct synthesis of the Volterra kernels which characterize the bilinear system. This result is related to Bush's canonic forms and it is shown that synthesized kernels facilitate the computation of the Volterra transfer functions. The notions of "weakly" bilinear, which are systems that can be represented by a finite Volterra series, and "strongly" bilinear, which cannot be so represented, are introduced. A method is proposed to estimate the parameters of the system using discrete Volterra kernels. A neutron kinetics model is included as an application of the method. In the second approach, a finite orthonormal set of functions is used in the expansion of input/output functions for parameter estimation and input/parameter functions for output computation of deterministic systems. Walsh functions form the basis of the expansions as a consequence of their group properties with respect to <b>binary</b> <b>algebra</b> and of their relationship with the integrals of Walsh functions. This method is applicable to time-variant bilinear systems and to systems with polynomial type nonlinearities as well. The effectiveness of the proposed method for parameter estimation of deterministic systems subject to modeling and measurement noise is examined. Several computational examples are presented to demonstrate the accuracy of the method...|$|E
40|$|Abstract. For ideal monads in Set (e. g. {{the finite}} list monad, the finite bag monad etc.) we have {{recently}} proved that every set generates a free iterative algebra. This {{gives rise to}} a new monad. We prove now that this monad is iterative in the sense of Calvin Elgot, in fact, this is the iterative reflection of the given ideal monad. This shows how to freely add unique solutions of recursive equations to a given algebraic theory. Examples: the monad of free commutative <b>binary</b> <b>algebras</b> has the monad of binary rational unordered trees as iterative reflection, and the finite list monad has the iterative reflection given by adding an absorbing element. In mathematics you don’t understand things. You just get used to them. John von Neumann (1903 – 1957) 1...|$|R
40|$|The aim of {{this paper}} is to extend to ternary algebras the {{classical}} theory of formal deformations of algebras introduced by Gerstenhaber. The associativity of ternary algebras is available in two forms, totally associative case or partially associative case. To any partially associative algebra corresponds by anti-commutation a ternary Lie algebra. In this work, we summarize the principal definitions and properties as well as classification in dimension 2 of these algebras. Then we focuss ourselves on the partially associative ternary algebras, we construct the first groups of a cohomolgy adapted to formal deformations and then we work out a theory of formal deformation in a way similar to the <b>binary</b> <b>algebras.</b> 2000 MSC: 17 A 40, 20 N 10, 16 E 40, 14 D 15, 55 N 2...|$|R
40|$|It is {{explained}} how the time {{evolution of the}} operadic variables may be introduced by using the operadic Lax equation. The operadic Lax representations for the harmonic oscillator are constructed in 3 -dimensional <b>binary</b> anti-commutative <b>algebras.</b> As an example, an operadic Lax representation for the harmonic oscillator in the Lie algebra sl(2) is constructed. ...|$|R
5000|$|The {{process of}} {{removing}} literals from a Boolean term is called expanding the term. Expanding by one literal doubles {{the number of}} input combinations for which the term is true (in <b>binary</b> Boolean <b>algebra).</b> Using the example function above, we may expand [...] to [...] or to [...] without changing the cover of [...]|$|R
40|$|Herein, a {{processing}} net {{consisting of}} a set of interconnected high performance array processor nodes, which composes object binary relations along all the possible net directions, is investigated. Object binary relation compositions are required for the query processing of an object oriented database, whose functionality is based upon the <b>binary</b> relations <b>algebra.</b> An object <b>binary</b> relation is a set of ordered object pairs consisting of ids of objects, which are holding references one of the other. The net architecture is the mapping of the object oriented system, the derived objects of which constitute the object oriented database. For every object oriented system and its corresponding object database, the required array processor net architecture can be obtained, by applying the same mapping methodology. The basic elements of the net processing nodes are multiple copies of a high performance array processor, which can synthesize a new object binary relation from two existing ones, by applying the <b>binary</b> relations <b>algebra</b> composition operator. © 2009 American Institute of Physics...|$|R
40|$|In {{the present}} article we {{investigate}} the possibility of combining the usual Grassmann algebras with their ternary Z_ 3 -graded counterpart, thus creating a more general algebra with coexisting quadratic and cubic constitutive relations. We recall the classification of ternary and cubic algebras according to the symmetry properties of ternary products under {{the action of the}} S_ 3 permutation group. Instead of only two kinds of <b>binary</b> <b>algebras,</b> symmetric or antisymmetric, here we get four different generalizations of each of these two cases. Then we study a particular case of algebras generated by two types of variables, the generators of Grassmann algebra and generators of ternary analog of Grassmann algebra, satisfying quadratic and cubic relations respectively, i. e. the generators of Grassmann algebra anticommute and a triple product of any three generators of a ternary analog of Grassmann algebra is equal to cyclic permutation of generators in this product multiplied by a primitive 3 rd root of unity. The invariance group of the generalized algebra is introduced and investigated. Comment: 19 pages, 2 figure...|$|R
40|$|Herein, an {{enhanced}} square array processor {{which is the}} mapping of the <b>binary</b> relational <b>algebra</b> composition operator is investigated. The processor, which can compose a new binary relation from two existing ones, attempts to eliminate the complications added to the processing procedure because of the partitioning applied to the long input relations under processing. A part of an input relation must be processed with {{all parts of the}} other input relation, so as a new relation to be composed. The processor under investigation, consisting of n 2 processing elements - pe, using as inputs its two sides of n pe each and applying parallel processing techniques, can process concurrently multiple parts of relations having length n. The complexity of the corresponding concurrent processing algorithm is low, ensuring the high performance of the proposed processor. It can be used to improve considerably the efficiency of the <b>binary</b> relations <b>algebra</b> based advanced applications, such as object oriented software architecture restructuring and object oriented parallel query processing. © 2009 American Institute of Physics...|$|R
40|$|To {{construct}} ternary "quaternions" following Hamilton we must introduce two "imaginary "units, q_ 1 and q_ 2 with propeties q_ 1 ^n= 1 and q_ 2 ^m= 1. The {{general is}} enough difficult, and {{we consider the}} m=n= 3. This case gives us the example of non-Abelian groupas was in Hamiltonian quaternion. The Hamiltonian quaternions help us to discover the SU(2) =S^ 3 group and also the group L(2,C). In ternary case we found the generalization of U(3) which we called TU(3) group and also we found the the SL(3,C) group. On the matrix language we are going from binary Pauly matrices to three dimensional nine matrices which are called by nonions. This way was initiated by algebraic classification of CY_m-spaces for all m= 3, 4, [...] . where in reflexive Newton polyhedra we found the Berger graphs which gave in the corresponding Cartan matrices the longest simple roots B_ii= 3, 4, [...] comparing with the case of <b>binary</b> <b>algebras</b> in which the Cartan diagonal element is equal 2, i. e. A_ii= 2...|$|R
40|$|AbstractTwo {{procedures}} for computing closures in <b>binary</b> partial <b>algebras</b> (BPA) are introduced: a Fibonacci-style procedure for closures in associative BPAs, and a multistage procedure for closures in associative, commutative and idempotent BPAs. Ramifications {{in areas such}} as resolution theorem proving, graph-theoretic algorithms, formal languages and formal concept analysis are discussed. In particular, the multistage procedure, when applied to formal concept analysis, results in a new algorithm outperforming leading algorithms for computing concept sets...|$|R
40|$|The Calabi-Yau spaces with SU(m) holonomy can {{be studied}} by the {{algebraic}} way through the integer lattice where one can construct the Newton reflexive polyhedra or the Berger graphs. Our conjecture is that the Berger graphs can be directly related with the n-ary algebras. To find such algebras we study the n-ary generalization of the well-known <b>binary</b> norm division <b>algebras,</b> R, C, H, O, which helped to discover the most important "minimal" binary simple Lie groups, U(1), SU(2) and G(2). As the most important example, we consider the case n= 3, which gives the ternary generalization of quaternions and octonions, 3 ^p, p= 2, 3, respectively. The ternary generalization of quaternions {{is directly related to}} the new ternary algebra and group which are related to the natural extensions of the <b>binary</b> su(3) <b>algebra</b> and SU(3) group. Using this ternary algebra we found the solution for the Berger graph: a tetrahedron. Comment: Revised version with minor correction...|$|R
40|$|New results, {{concerning}} the determinability of <b>binary</b> relation incidence <b>algebras</b> and rings, given on them, {{have been obtained}} in the paper. Automorphisms of incidence algebras and rings have been describedAvailable from VNTIC / VNTIC - Scientific & Technical Information Centre of RussiaSIGLERURussian Federatio...|$|R
40|$|In {{the paper}} we {{will develop a}} {{combinatorial}} approach {{to the study of}} quandle coverings as defined in [3]. In the paper of Eisermann there is a complete categorical charaterization of connected coverings of a given quandle X, but it involves the construction of the adjoint group of X, which is not easy to do and it has been computed just in some particular cases. The quandle structure of a covering (Y,f) of a connected quandle X can be described by a cocycles which is a map β : X× X⟶ S^S (where S is a set of size equal {{to the size of the}} blocks of ker(f)) satisfying some further condition. The same construction can be carried on in a more general setting and it works whenever the blocks of the congruence relative to a surjective morphism of <b>binary</b> <b>algebras</b> have all the same size and the properties of the map β depends on which kind of algebra you are dealing with. Different cocycles can describe isomorphic coverings, then it is enough to study a proper quotient of the set of the cocycle (see [1]). We will prove that for latin quandle there exists a special representative of any class of cocycles and using this particular features we will show that some classes of latin quandle have no proper coverings...|$|R
40|$|This paper {{presents}} {{an application of}} relation algebra to lexical databases. The semantics of knowledge representation formalisms and query languages can be provided either via a set-theoretic semantics or via an algebraic structure. With respect to formalisms based on n-ary relations (such as relational databases or power context families), a variety of algebras is applicable. In standard relational databases and in formal concept analysis (FCA) research, the algebra of choice is usually some form of Cylindric Set Algebra (CSA) or Peircean Algebraic Logic (PAL). A completely different choice of <b>algebra</b> is a <b>binary</b> Relation <b>Algebra</b> (RA). In this paper, it is shown how RA {{can be used for}} modelling FCA applications with respect to lexical databases...|$|R
40|$|This {{paper is}} a {{retrospective}} arising from a WCRE paper published in 1998 promoting a relational approach to manipulate software architecture {{and to help}} solve various problems in software analysis. That paper explains how Tarski’s <b>binary</b> relational <b>algebra,</b> embedded in a language such as Grok, can solve such problems. Tarski’s notation is elegant and often efficiently executable when the subject at hand is characterized by parts with binary relations between them. Software architecture, especially as-built architecture, is such a subject. This paper concentrates on the following three questions. What impact can a relational approach have on our understanding of software architecture? What Groklanguages exist and what are their strengths? How have Grok-like languages been used to solve problems in software architecture or software analysis...|$|R
25|$|In {{the history}} of the Chinese, there were those who were {{familiar}} with the sciences of arithmetic, geometry, mechanics, optics, navigation, and astronomy. Mathematics in China emerged independently by the 11th century BC. It is indeed almost certain that the Chinese were acquainted with several geometrical or rather architectural implements; with mechanical machines; that they knew of the characteristic property of the magnetic needle; and were aware that astronomical events occurred in cycles. Chinese of that time had made attempts to classify or extend the rules of arithmetic or geometry which they knew, and to explain the causes of the phenomena with which they were acquainted beforehand. The Chinese independently developed very large and negative numbers, decimals, a place value decimal system, a <b>binary</b> system, <b>algebra,</b> geometry, and trigonometry.|$|R
40|$|AbstractLet B be the <b>binary</b> Boolean <b>algebra.</b> The Boolean rank, or {{factorization}} rank, of {{a matrix}} A in Mm,n(B) {{is the smallest}} k such that A can be factored as an m×k times a k×n matrix. The isolation number of a matrix, A, is {{the largest number of}} entries equal to 1 in the matrix such that no two ones are in the same row, no two ones are in the same column, and no two ones are in a submatrix of A of the form 1111. It is known that the isolation number of A is always at most the Boolean rank. This paper investigates for each k, if the isolation number of A is k {{what are some of the}} possible values of the Boolean rank of A...|$|R
40|$|The error {{handling}} method in traditional communication protocols is error detection and retransmission. This method is inappropriate for distributed multimedia systems for two reasons: It introduces variable delay unacceptable for isochronous streams, {{and it is}} very inefficient and difficult to use in the multicast environment typical for many multimedia applications. We propose AdFEC, an adaptable Forward Error Correction scheme based on <b>binary</b> polynomial <b>algebra.</b> It produces an adaptable amount of redundancy allowing different packet types to be protected according to their importance. The scheme was implemented in the framework of the XMovie project and proved to be very efficient. Permanent address: Praktische Informatik IV, University of Mannheim, 68131 Mannheim, Germany y Permanent address: Fachhochschule Gieen-Friedberg, Wilhelm-Leuschner-Str. 13, 61169 Friedberg 1 Introduction Two different approaches can be used to correct transmission errors in computer networks: [...] ...|$|R
50|$|In {{the history}} of the Chinese, there were those who were {{familiar}} with the sciences of arithmetic, geometry, mechanics, optics, navigation, and astronomy. Mathematics in China emerged independently by the 11th century BC. It is indeed almost certain that the Chinese were acquainted with several geometrical or rather architectural implements; with mechanical machines; that they knew of the characteristic property of the magnetic needle; and were aware that astronomical events occurred in cycles. Chinese of that time had made attempts to classify or extend the rules of arithmetic or geometry which they knew, and to explain the causes of the phenomena with which they were acquainted beforehand. The Chinese independently developed very large and negative numbers, decimals, a place value decimal system, a <b>binary</b> system, <b>algebra,</b> geometry, and trigonometry.|$|R
40|$|We {{propose a}} Clifford algebra {{approach}} to chiral symmetry breaking and fermion mass hierarchies {{in the context}} of composite Higgs bosons. Standard model fermions are represented by algebraic spinors of six-dimensional <b>binary</b> Clifford <b>algebra,</b> while ternary Clifford algebra-related flavor projection operators control allowable flavor-mixing interactions. There are three composite electroweak Higgs bosons resulted from top quark, tau neutrino, and tau lepton condensations. Each of the three condensations gives rise to masses of four different fermions. The fermion mass hierarchies within these three groups are determined by four-fermion condensations, which break two global chiral symmetries. The four-fermion condensations induce axion-like pseudo-Nambu-Goldstone bosons and can be dark matter candidates. In addition to the 125 GeV Higgs boson observed at the Large Hadron Collider, we anticipate detection of tau neutrino composite Higgs boson via the charm quark decay channel. Comment: 22 page...|$|R
40|$|Abstract. <b>Binary</b> {{relational}} <b>algebra</b> provides semantic {{foundations for}} major areas of computing, such as database design, state-based specification, and functional programming. Remarkably, static checking support {{in these areas}} fails to exploit the full semantic content of relations. In particular, properties such as the simplicity or injectivity of relations are not statically enforced in operations that manipulate relations, such as database queries, state transitions, or composition of functional components. We describe how a pointfree treatment of relations, their properties, their operators, and the laws that govern them can be captured in a type-directed strategic rewriting system for transformation of relational expressions. This rewriting tool {{can be used to}} simplify relational proof obligations and ultimately reduce them to tautologies. We demonstrate how such reductions provide extended static checking (ESC) for design contraints commonly found in software modeling and development...|$|R
40|$|<b>Binary</b> {{relational}} <b>algebra</b> provides semantic {{foundations for}} major areas of computing, such as database design, state-based modeling and functional programming. Remarkably, static checking support {{in these areas}} fails to exploit the full semantic content of relations. In particular, properties such as the simplicity or injectivity of relations are not statically enforced in operations such as database queries, state transitions, or composition of functional components. When data models, their constraints and operations are represented by point-free binary relational expressions, proof obligations can be expressed as inclusions between relational expressions. We developed a type-directed, strategic term rewriting system {{that can be used}} to simplify relational proof obligations and ultimately reduce them to tautologies. Such reductions can be used to provide extended static checking for design contraints commonly found in software modeling and development. XIII Workshop Ingeniería de Software (WIS) ...|$|R
