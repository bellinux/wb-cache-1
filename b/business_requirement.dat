122|1896|Public
5|$|There was {{no longer}} a <b>business</b> <b>requirement</b> to remain in Albuquerque so Microsoft wanted to {{relocate}} to a larger city that would be more attractive to new employees. The San Francisco bay area was considered but Allen and Gates decided to return home to Seattle. Microsoft moved to Bellevue, Washington in January 1979.|$|E
2500|$|Companies {{with very}} {{frequent}} releases {{may require a}} DevOps awareness or orientation program. For example, the company that operates the image hosting website Flickr developed a DevOps approach, to support a <b>business</b> <b>requirement</b> of ten deployments per day; this daily deployment cycle would be much higher at organizations producing multi-focus or multi-function applications. This {{is referred to as}} continuous deployment or continuous delivery [...] and has been associated with the lean startup methodology. Working groups, professional associations and blogs have formed on the topic since 2009.|$|E
5000|$|The {{input of}} SPADE are end result {{oriented}} <b>business</b> <b>requirement</b> specifications. These explain: ...|$|E
50|$|Such {{confusion}} can {{be avoided}} by recognizing that <b>business</b> <b>requirements</b> are not objectives, but rather meet objectives (i.e., provide value) when satisfied. <b>Business</b> <b>requirements</b> whats do not decompose into product/system/software requirement hows. Rather, products and their requirements represent a response to <b>business</b> <b>requirements</b> — presumably, how to satisfy what. <b>Business</b> <b>requirements</b> exist within the business environment and must be discovered, whereas product requirements are human-defined (specified). <b>Business</b> <b>requirements</b> {{are not limited to}} high-level existence, but need to be driven down to detail. Regardless of their level of detail, however, <b>business</b> <b>requirements</b> are always <b>business</b> deliverable whats that provide value when satisfied; driving them down to detail never turns <b>business</b> <b>requirements</b> into product requirements.|$|R
5000|$|<b>Business</b> <b>requirements</b> are {{specifications}} {{which once}} delivered, provide value. Products, systems, software, and processes are ways {{of how to}} deliver, satisfy, or meet <b>business</b> <b>requirements</b> [...] Consequently, <b>business</b> <b>requirements</b> are often discussed {{in the context of}} developing or procuring software or other systems.|$|R
50|$|Templates help prompt inquiry {{regarding}} particular {{topics that}} often may {{be relevant to}} <b>business</b> <b>requirements.</b> They can foster standardized documentation regarding <b>business</b> <b>requirements,</b> which can facilitate understanding. Templates do not ensure accuracy or completeness of <b>business</b> <b>requirements.</b> In fact, commonly misused, templates often negatively impact requirement research, since they tend to promote superficiality and mainly mechanical definition without meaningful analysis.|$|R
5000|$|... “Separate {{affiliated}} group” {{rule for}} satisfaction of active trade or <b>business</b> <b>requirement</b> under Section 355 ...|$|E
5000|$|... 1. Mark all {{the fields}} from <b>business</b> <b>requirement</b> {{documents}} {{which should be}} visible in the UI.|$|E
50|$|Enterprise data {{management}} {{as an essential}} <b>business</b> <b>requirement</b> {{has emerged as a}} priority for many organizations. The objective is confidence and trust in data as the glue that holds business strategy together.|$|E
5000|$|Although {{commonly}} {{considered a}} means of evaluating requirements, prototyping actually usually shifts attention from <b>business</b> <b>requirements</b> to the product, system, or software being built. Prototypes are working software, which means they are three steps (product/system/software requirements, engineering/technical design of said product/system/software, {{and implementation of the}} design in program code) removed from <b>business</b> <b>requirements.</b> Prototypes are preliminary versions of the software the developer intends to implement. Because prototypes are fairly concrete, stakeholders who try out the prototype can give more meaningful feedback regarding some aspects of what the developer is creating, which is the developer's interpretation of a way to satisfy <b>business</b> <b>requirements,</b> not the <b>business</b> <b>requirements.</b> Moreover, {{in order to create a}} prototype early and quickly, the Graphical User Interface (GUI) is emphasized and the [...] "guts" [...] are shortcut. The guts are the bulk of the program logic, and are where most <b>business</b> <b>requirements</b> would be addressed. In other words, issues that prototypes reveal are very unlikely to involve <b>business</b> <b>requirements.</b>|$|R
50|$|BI Application Design {{deals with}} {{designing}} and selecting some applications {{to support the}} <b>business</b> <b>requirements.</b> BI Application Development use the design to develop and validate applications to support the <b>business</b> <b>requirements.</b>|$|R
30|$|The {{trade-offs}} between tenant {{isolation and}} <b>business</b> <b>requirements</b> {{is a key}} consideration in architecting the design and deployment of cloud-hosted services. As the degree of isolation increases from top to bottom, the ease and flexibility to implement <b>business</b> <b>requirements</b> that cannot be compensated for at the application level reduces. The shared component, which offers a low degree of isolation, {{can be used to}} handle <b>business</b> <b>requirements</b> that can be compensated at the application level. Examples of such <b>business</b> <b>requirements</b> include performance and availability. The architect can easily modify the application architecture of the GSD tool to address this type of requirement.|$|R
5000|$|The list may {{not reflect}} {{relationships}} and dependencies between requirements. While a list does {{make it easy}} to prioritize each individual item, removing one item out of context can render an entire use case or <b>business</b> <b>requirement</b> useless.|$|E
5000|$|... "Why {{invent a}} new term? ... {{there is no}} such thing as a WES, WCS, or WMS. (There is) simply Warehouse Software {{functionality}} needed to suit a <b>business</b> <b>requirement.</b> If the term WES fits fine, but as soon as you draw too many boundaries you create is another layer of interface and support." ...|$|E
50|$|In December 2008, IBM {{introduced}} new technology, EGL Rich UI, {{to simplify}} the creation of Web 2.0-style Rich Internet Applications. This technology simplifies development by hiding the complexities of Ajax, JavaScript, REST, and SOAP from the developer, which enables them {{to focus on the}} <b>business</b> <b>requirement</b> and not on the underlying technologies.|$|E
40|$|According to the Zachman {{framework}} for system architecture, <b>business</b> <b>requirements</b> and user information requirements should be separately modelled {{to enhance the}} maintainability and adaptability of the information systems and to improve {{the flexibility of the}} system development process. The measurement of <b>business</b> <b>requirements</b> is largely an unexplored field since requirements specification measures (e. g., function points) have focused almost exclusively on user information requirements. However, as a problem domain model, <b>business</b> <b>requirements</b> are worth measuring. In this paper a measurement model is presented that builds upon a formal specification language. The model allows to define meaningful viewpoints on <b>business</b> <b>requirements</b> complexity. Using a Measure Theoretic approach, a number of complexity measures are defined in an attempt to extent the life cycle coverage of software measurement to the <b>business</b> <b>requirements</b> specification phase...|$|R
5000|$|In {{the case}} of a {{dismissal}} due to operational requirements, the purpose is to get rid of employees who do not meet the <b>business</b> <b>requirements</b> of the employer, so that new employees who will meet the <b>business</b> <b>requirements</b> can be employed.|$|R
5000|$|<b>Business</b> <b>requirements</b> in {{the context}} of {{software}} engineering or the software development life cycle, is the concept of eliciting and documenting <b>business</b> <b>requirements</b> of <b>business</b> users such as customers, employees, and vendors early in the development cycle of a system to guide the design of the future system. <b>Business</b> <b>requirements</b> are often captured by business analysts, who analyze business activities and processes, and often study [...] "as-is" [...] process to define a target [...] "to-be" [...] process.|$|R
50|$|There was {{no longer}} a <b>business</b> <b>requirement</b> to remain in Albuquerque so Microsoft wanted to {{relocate}} to a larger city that would be more attractive to new employees. The San Francisco bay area was considered but Allen and Gates decided to return home to Seattle. Microsoft moved to Bellevue, Washington in January 1979.|$|E
50|$|Use of best {{practices}} eases {{compliance with requirements}} such as IFRS, Sarbanes-Oxley, or Basel II. They can also help comply with de facto industry standards, such as electronic funds transfer. This is because the procedure can be readily codified within the ERP software, and replicated with confidence across multiple businesses who share that <b>business</b> <b>requirement.</b>|$|E
50|$|Social media {{analytics}} is {{an industry}} agnostic practice and is commonly used in different approaches on business decisions, marketing, customer service, reputation management, sales and others.There is an array of tools that offers the social media analysis, varying from the level of <b>business</b> <b>requirement.</b> Logic behind algorithms that are designed for these tools is selection, data pre-processing, transformation, mining and hidden pattern evaluation.|$|E
5000|$|... 2) BusinessA {{website that}} is not aligned to {{business}} or market objectives is ultimately doomed to fail. The User and <b>Business</b> <b>requirements</b> will often match, but will rarely ever be a perfect fit. The Web Strategist) will need to obtain <b>business</b> <b>requirements</b> from stakeholders, whether that be execs, sponsors, sales, or even shareholders. Understanding the market, competitors (and key milestones) and other external forces are also required -a <b>business</b> <b>requirements</b> model will be formed, these are you objectives.|$|R
50|$|<b>Business</b> <b>requirements</b> {{are often}} listed in a <b>Business</b> <b>Requirements</b> Document or BRD. The {{emphasis}} in a BRD is {{on what is}} required, rather than on how to achieve it; this is usually delegated to a Systems Requirements Specification or Document (SRS or SRD), or other variation such as a Functional Specification Document. Confusion can arise between a BRD and a SRD when the distinction between <b>business</b> <b>requirements</b> and system requirements is disregarded. Consequently, many BRDs actually describe requirements of a product, system, or software.|$|R
5000|$|<b>Business</b> <b>requirements</b> {{for health}} summary records—Part 1: Requirements ...|$|R
50|$|Intranets {{are often}} static sites; {{they are a}} shared drive, serving up {{centrally}} stored documents alongside internal articles or communications (often one-way communication). By leveraging firms which specialise in 'social' intranets, organisations are beginning to think of how their intranets can become a 'communication hub' for their entire team.The actual implementation would include steps such as securing senior management support and funding., conducting a <b>business</b> <b>requirement</b> analysis and identifying users' information needs.|$|E
50|$|In {{common with}} other {{products}} in the Microsoft Office suite, the other programming language used in Access is Microsoft VBA. It is similar to Visual Basic 6.0 (VB6) and code {{can be stored in}} modules, classes, and code behind forms and reports. To create a richer, more efficient and maintainable finished product with good error handling, most professional Access applications are developed using the VBA programming language rather than macros, except where web deployment is a <b>business</b> <b>requirement.</b>|$|E
50|$|The LIST {{command is}} {{somewhat}} {{analogous to the}} SQL SELECT statement, but incorporates formatting, totaling, and other elements helpful for tailoring output to a <b>business</b> <b>requirement.</b> The SELECT statement, in contrast, is essentially a data query tool: its results would be processed or formatted as required using other mechanisms. This distinction is highlighted by SQL's classification as a 'Data Sublanguage' (DSL): SQL is a powerful formalism for controlling data retrieval. The LIST command is a comprehensive report writer addressing broader functionality.|$|E
5000|$|<b>Business</b> <b>requirements</b> {{for health}} summary records—Part 2: Environmental scan ...|$|R
5000|$|Increased {{adaptability}} {{and speed}} of response to <b>business</b> <b>requirements.</b>|$|R
5000|$|Provides {{traceability}} from service definitions back to <b>business</b> <b>requirements.</b>|$|R
50|$|Removing the necktie as {{a social}} and sartorial <b>business</b> <b>requirement</b> (and {{sometimes}} forbidding it) is a modern trend often attributed {{to the rise of}} popular culture. Although it was common as everyday wear as late as 1966, over the years 1967-69, the necktie fell out of fashion almost everywhere, except where required. There was a resurgence in the 1980s, but in the 1990s, ties again fell out of favor, with many technology-based companies having casual dress requirements, including Apple Inc., Amazon.com, eBay, Genentech, Microsoft, Monsanto, and Google.|$|E
5000|$|Companies {{with very}} {{frequent}} releases {{may require a}} DevOps awareness or orientation program. For example, the company that operates the image hosting website Flickr developed a DevOps approach, to support a <b>business</b> <b>requirement</b> of ten deployments per day; this daily deployment cycle would be much higher at organizations producing multi-focus or multi-function applications. This {{is referred to as}} continuous deployment or continuous delivery [...] and has been associated with the lean startup methodology. Working groups, professional associations and blogs have formed on the topic since 2009.|$|E
5000|$|It is {{important}} to recognize the changes to requirements, document them, and keep the definition of requirements up-to-date. However, business requirements tend not to change nearly so much as the awareness of them. A <b>business</b> <b>requirement</b> may be present, but not recognized or understood by the stakeholders, analysts, and project team. Change is more apparent in regard to what is usually referred to as [...] "requirements changes" [...] - the product/system/software requirements. These tend to reflect the presumed ways of satisfying inadequately identified business requirements. Much of the difficulties attributed to achieving business requirements in fact reflect the common practice of devoting almost all [...] "requirements" [...] effort to what is actually high-level design of a product, system, or software. This stems from failing to first adequately define the business requirements the product/system/software must satisfy in order to provide value. Development practices commonly keep revising the product/system/software until they eventually [...] "back into" [...] a solution that seems to do what is needed, i.e., apparently addresses a <b>business</b> <b>requirement.</b> Ironically, such costly trial-and-error indirect ways of identifying business requirements are the basis for much of [...] "iterative development," [...] including popular Agile development methods, that are touted as [...] "best practices." ...|$|E
50|$|The {{concept of}} {{integration}} warehousing {{dates back to}} mid 2000. In the reinsurance industry it became quite obvious that data warehouses didn't cover all the <b>business</b> <b>requirements</b> and therefore IT started {{to focus more on}} the integration aspects. This finally led to solutions that now specifically fit the reinsurance <b>business</b> <b>requirements.</b>|$|R
2500|$|The <b>business</b> <b>requirements</b> for {{recovery}} of the critical function, and/or ...|$|R
5000|$|<b>Business</b> <b>requirements,</b> i.e. <b>business</b> plan, key {{performance}} indicator, project plan...|$|R
