1|5|Public
40|$|Decoding tree {{consisting}} of 40 -bit semiconductor read-only memories interconverts binary and decimal numbers 50 to 100 {{times faster than}} current methods. Decimal-to-binary conversion algorithm {{is based on a}} divided-by- 2 iterative equation, <b>binary-to-decimal</b> <b>conversion</b> algorithm utilizes multiplied-by- 2 iterative equation...|$|E
40|$|This note {{discusses}} the main issues in performing correctly rounded decimal-to-binary and <b>binary-to-decimal</b> <b>conversions.</b> It reviews recent work by Clinger and by Steele and White on these conversions and describes some efficiency enhancements. Computational experience with {{several kinds of}} arithmetic suggests that the average computational cost for correct rounding can be small for typical conversions. Source for conversion routines that support this claim is available from netlib...|$|R
5000|$|The {{system was}} fixed-point binary and used 45 binary digits per word (44 numerical, plus {{one for the}} sign). Instruction words were the same length as data words, and the {{computer}} used 19 total instructions and three-address code instruction type. All numbers were scaled to less than 1 in absolute value. It had built-in automatic decimal-to-binary and <b>binary-to-decimal</b> number <b>conversion</b> that worked at 500 words/second. The system clock ran at 1 MHz. Addition operations took, on average, 850 microseconds, whereas multiplications and divisions took 3300 microseconds.|$|R
40|$|Declmal-to-binary end <b>binary-to-decimal</b> floatinq-polnt <b>conversion</b> {{is often}} {{performed}} {{by using a}} table of the powers 10 i (i a positive integer) for convertinq from base lO to base 2, end by using o table of the ceefflclents of a polynomial opproximation of lOx for convertinq from base 2 to base 10. These tables OCCUPY a lorge storaqe region {{in the case of}} a nonsingle precision ccnversion. This paper shows that a single small table suffices for o floatinq-point conversion from decimal to blnary, end vice versa, in any useful precision...|$|R
50|$|The first UNIVAC 418-III was {{delivered}} in 1969. It was available with 32,768 to 131,072 words of memory. Memory cycle time {{was reduced to}} 750 nanoseconds. New instructions were added for floating-point arithmetic, <b>binary-to-decimal</b> and decimal-to-binary <b>conversions,</b> and block transfers up to 64 words. The SR register was expanded to 6 bits.The 418-III had two unique hardware features which enabled it to handle continuously high speed serial character streams. One was called the buffer overflow interrupt and the other hardware buffer chaining. By the 1990s, all the 418 hardware was gone, but the California Department of Water Resources was still running 418 emulation on a UNIVAC 1100/60.|$|R
40|$|The decimal {{multiplication}} {{is one of}} {{the most}} important decimal arithmetic operations which have a growing demand in the area of commercial, financial, and scientific computing. It has been revived in recent years due to the large amount of data in commercial applications. In this paper, we propose a parallel decimal multiplication algorithm with three components, which are a partial product generation, a partial product reduction, and a final digit-set conversion. First, a redundant number system is applied to recode not only the multiplier, but also multiples of the multiplicand in Signed-Digit (SD) numbers. Furthermore, we present a multi operand SD addition algorithm to reduce the partial product array. We consider the problem of multi operand parallel decimal addition with an approach that uses binary arithmetic, suggested by the adoption of Binary-Coded Decimal (BCD) numbers. This involves corrections in order to obtain the BCD result or a <b>Binary-to-Decimal</b> (BD) <b>conversion.</b> The BD conversion moreover allows an easy alignment of the sums of adjacent columns. We treat the design of BCD digit adders using fast carry-free adders and the conversion problem through a known parallel scheme using elementary conversion cells. Spread sheets have been developed for adding several BCD digits and for simulating the BD conversion as a design tool. In this project Xilinx-ISE tool is used for simulation, logical verification, and further synthesizing...|$|R

