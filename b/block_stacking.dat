29|191|Public
5000|$|In AI Planning, {{planners}} typically input {{a domain}} model (a {{description of a}} set of possible actions which model the domain) as well as the specific problem to be solved specified by the initial state and goal. Such planners are called [...] "Domain Independent" [...] to emphasis the fact that they can solve planning problems {{from a wide range of}} domains. Typical examples of domains are <b>block</b> <b>stacking,</b> logistics, workflow management, and robot task planning. Hence a single domain independent planner can be used to solve planning problems in all these various domains. On the other hand, a route planner is typical of a domain specific planner.|$|E
30|$|Inter-container {{communication}} is possible, but the wireless ranges {{are limited to}} one 40 -ft container in a <b>block</b> <b>stacking</b> and four 40 -ft containers in a row stacking.|$|E
40|$|The aim of {{this thesis}} was to {{investigate}} the influence of short-term experience on action understanding. To this end, we conducted three studies in which we employed a <b>block</b> <b>stacking</b> task in a pre-post eye tracking design. We assumed that short-term experience with the <b>block</b> <b>stacking</b> task should activate task-specific action plans supporting a direct matching process during the observation of posttest trials. Specifically, in the first and in the third study we questioned whether short-term experience with the <b>block</b> <b>stacking</b> task would have a task-specific influence on the ability to predict the action goals of the same <b>block</b> <b>stacking</b> task during observation. Results of these two studies indeed indicated that participants who had performed the <b>block</b> <b>stacking</b> task directed their gaze significantly earlier towards the action goals of the <b>block</b> <b>stacking</b> task during post-test trials. However, this effect could only be found in participants older than 10 years of age. Within the second study, we aimed to investigate whether short-term experience would also have a task-specific influence on the extent of surprise when participants observed unexpected action outcomes indicated by pupil dilation. Results of this study revealed that participants’ expectations were violated when they observed unexpected action outcomes, indicated by a pronounced prediction error in form of pupil dilation after unexpected events. However, no influence of short-term experience on pupil dilation could be found. In sum, we were able to demonstrate that different measures of action understanding deliver specific types of information about action understanding. Moreover, we could show that own experience with an action only impacts predictive gaze behavior during the observation of the same action. Crucially, this effect emerges around the age of 11 years, indicating a developmental change during childhood. Gegenstand dieser Arbeit war die Untersuchung des Einflusses von kurzzeitger Erfahrung auf das Handlungsverständnis. In drei Experimenten wurden antizipatorische Augenbewegungen bzw. die Pupillenweite gemessen, um den spezifischen Einfluss der Erfahrung mit einer Klötzchen-Bau-Aufgabe zu bestimmen. In zwei der drei durchgeführten Experimente dieser Dissertation konnte gezeigt werden, dass kurzfristige Erfahrung einen aufgabenspezifischen Einfluss auf die Latenzzeit der antizipatorischen Augenbewegungen hat. Dieser Effekt trat ab einem Alter von 11 Jahren auf. In einem weiteren Experiment wurde untersucht, ob Handlungserfahrung ebenfalls einen Einfluss auf die Erwartungsverletzung bei fehlerhaft ausgeführten Handlungen hat. Hierzu wurde die Pupillenweite gemessen und die Ergebnisse zeigten, dass Personen mit einer vergrößerten Pupille auf fehlerhaft vorgeführte Handlungen reagierten, allerdings unabhängig von eigener Handlungserfahrung mit der beobachteten Aufgabe...|$|E
50|$|Stack-Up {{comes with}} five trays, five {{different}} colored blocks, and two claws worn by R.O.B. for grabbing the blocks. In the Direct game mode, the player makes their <b>block</b> <b>stack</b> match {{with the one}} on screen by moving Professor Hector to the button that corresponds to the desired movement. In Memory, the player {{has to make a}} list of commands to recreate the displayed block set up, and then R.O.B. follows the list afterward. In Bingo, the player makes the shown <b>block</b> <b>stack,</b> where the color of the block does not matter. There are two enemies: one causes the player to lose a life, and the other makes R.O.B. perform undesired actions.|$|R
30|$|In other words, {{when using}} this strategy, the Anscombe {{transformed}} data {{is used to}} fill the 3 D <b>block</b> <b>stacks</b> with {{the values of the}} matched blocks but not to determine the positions of the matched blocks in the 3 D stacks.|$|R
3000|$|... = 0.55 {{works well}} in {{practice}} and thus we use this value wherever the Poisson maximum-likelihood ratios are employed in this work. The reduced set Š_̌x̌^̌P̌ and the <b>block</b> <b>stack</b> Z_x^P [...] are defined analogously to Š_x [...] and Z_x, respectively, just replacing S [...]...|$|R
40|$|Understanding {{physical}} phenomena is a {{key component}} of human intelligence and enables physical interaction with previously unseen environments. In this paper, we study how an artificial agent can autonomously acquire this intuition through interaction with the environment. We created a synthetic <b>block</b> <b>stacking</b> environment with physics simulation in which the agent can learn a policy end-to-end through trial and error. Thereby, we bypass to explicitly model physical knowledge within the policy. We are specifically interested in tasks that require the agent to reach a given goal state that may be different for every new trial. To this end, we propose a deep reinforcement learning framework that learns policies which are parametrized by a goal. We validated the model on a toy example navigating in a grid world with different target positions and in a <b>block</b> <b>stacking</b> task with different target structures of the final tower. In contrast to prior work, our policies show better generalization across different goals...|$|E
40|$|Artificial curiosity {{tries to}} {{maximize}} learning progress. We apply this concept to a physical system. Our Katana robot arm curiously plays with wooden blocks, using vision, reaching, and grasping. It is intrinsically motivated to explore its world. As a by-product, it learns how to place blocks stably, {{and how to}} stack blocks. learned as a by-product of its curiosity-satisfying drive is a <b>block</b> <b>stacking</b> skill...|$|E
40|$|Teleo-reactive {{programs}} and the triple tower architecture have been proposed {{as a framework for}} linking perception and action in agents. The triple tower architecture continually updates the agent 9 ̆ 2 s knowledge of the world and evokes actions according to teleo-reactive control structures. This paper uses <b>block</b> <b>stacking</b> problems to demonstrate how genetic programming may be used to evolve hierarchical and recursive teleo-reactive programs...|$|E
3000|$|Here, Ŷ_x,k^P(y) [...] {{is defined}} in analogy to (8). Also note that due to the {{application}} of the Anscombe transform to the 3 D <b>block</b> <b>stacks</b> in (19), the values of the basic estimate (20) after Poisson maximum-likelihood-ratio-based block matching are still in the Anscombe transform domain. Thus, the Wiener filtering iteration remains unchanged.|$|R
50|$|The {{child can}} do a variety of {{exercises}} with these materials, including matching them with the cylinder <b>blocks,</b> <b>stacking</b> them {{on top of each}} other to form a tower, and arranging them in size or different patterns. When the yellow, red, and green cylinders are placed {{on top of each other}}, they all are the same height.|$|R
40|$|In a {{first part}} of this article, the {{synthesis}} of AB type block copoly(3 -alkylthiophene) s initiated by Ni(dppp) Cl- 2, the most commonly used initiator for these polymers, is investigated. For this study the respective H- 1 NMR resonances of all possible end-groups are identified. This result confirms the hypothesis that the Ni(dppp) species can walk {{back to the beginning of}} the polymer chain and that propagation can occur at both chain ends. The next part of the article studies the chiroptical behavior of AB-type block copoly(3 -alkylthiophene) s with one chiral block and compares the results with those of the corresponding random copolymers. In order to obtain exclusively AB-type block copolymers, the polymers were prepared from a modified Ni initiator. They all have the same degree of polymerization but vary in the length of the respective blocks. The chiroptical behavior was studied by changing the ratio solvent/nonsolvent, meanwhile monitoring the UV-vis and circular dichroism (CD) spectra. Three series were investigated: one in which both blocks aggregate simultaneously, one in which the achiral <b>block</b> <b>stacks</b> before the chiral block, and one in which the chiral <b>block</b> <b>stacks</b> first followed by the achiral block. It was found that when the <b>blocks</b> <b>stack</b> independently, the (chiral/achiral) stacking of the latter is significantly influenced by the former. If both blocks of the polymer chains aggregate simultaneously, Cotton effects which are significantly larger than those of the chiral homopolymer are found. status: publishe...|$|R
40|$|We {{reformulate}} a {{class of}} non-linear stochastic optimal control problems introduced by [1] as a KL minimization problem. As a result, the optimal control computation reduces to an inference computation and approximate inference methods {{can be applied to}} efficiently compute approximate optimal controls. We show that the path integral control problem introduced in [2] can be obtained as a special case of the KL control problem. We provide an example of a <b>block</b> <b>stacking</b> task where we demonstrate how approximate inference can be successfully applied to instances that are too large for exact computation...|$|E
40|$|We {{reformulate}} a {{class of}} non-linear stochastic optimal control problems introduced by Todorov (2007) as a Kullback-Leibler (KL) minimization problem. As a result, the optimal control computation reduces to an inference computation and approximate inference methods {{can be applied to}} efficiently compute approximate optimal controls. We show how this KL control theory contains the path integral control method as a special case. We provide an example of a <b>block</b> <b>stacking</b> task and a multi-agent cooperative game where we demonstrate how approximate inference can be successfully applied to instances that are too complex for exact computation. We discuss the relation of the KL control approach to other inference approaches to control. Comment: 26 pages, 12 Figures; Machine Learning Journal (2012...|$|E
40|$|Polycrystalline {{samples of}} the n= 2 Ruddlesden-Popper {{compositions}} Pr 2 BaLiRuO 7 and La 2 BaLiRuO 7 have been synthesised by solid-state techniques and characterised by X-ray and neutron diffraction, electron microscopy and 7 Li MAS NMR. The 6 -coordinate sites are occupied by a 1 : 1 ordered arrangement of Li and Ru, the 12 -coordinate sites within the perovskite-like blocks are occupied by Ba, and the cation sites on the block edges are occupied by La or Pr. Although the cation ordering is maintained within each <b>block,</b> <b>stacking</b> faults occur on passing between neighbouring blocks; the concentration of stacking faults is greater for Ln = La. © 2006 Elsevier SAS. All rights reserved...|$|E
40|$|Dynamic {{sensitivity}} of a one-dimensional stack of four rigid blocks with controlled initial gaps, undergoing external harmonic vibrations is investigated. Time {{variation of the}} mass inertia and the relative kinetic energy are considered as dynamic <b>block</b> <b>stack</b> attributes. Numerical simulation {{is based on the}} Non Smooth Contact Dynamics (NSCD) time integration framework Solfec ([URL] Sensitivity space parameters include a range of excitation frequencies and velocity amplitudes...|$|R
40|$|Photograph of {{the view}} looking west from Grand View Trail, Grand Canyon, ca. 1900 - 1930. Trees and other plants grow in the {{foreground}} below. A pile of rocks, looking almost like hewn <b>blocks</b> <b>stacked</b> to form a wall, from an outcropping at left. The canyon stretches out into the distance. The deep ravine in which the Colorado River (not visible) flows winds into the distance at right...|$|R
40|$|Switched-path {{adjustable}} optical delay {{lines with}} ladderlike configurations proposed {{for use in}} photonically controlling phases of radio signals in radiating elements of phased-array antennas and in adaptive filtering of signals. Lines relatively simple, compact, easy to fabricate, and inexpensive. Switchable delay <b>blocks</b> <b>stacked</b> like building <b>blocks</b> to form incrementally adjustable delay lines. Delay lines also stacked to form high-density multiple-channel delay systems. To reduce number of blocks, heights of blocks increased successively by factor of 2, similar to crystal arrangement described in article "Switched-Polarization Birefringent Optical Delay Lines" (NPO- 19412) ...|$|R
40|$|Abstract — The {{ability to}} learn is {{essential}} for robots {{if they are to}} function within human environments. Learning requires an understanding of the underlying structure of what has been observed. This paper proposes a learning method that automatically creates Petri nets from observation of human demonstrations to model the underlying structure of tasks. The Petri net can be learned via a single or multiple demonstrations. The learned Petri nets are capable of generating action sequences to allow a robot to imitate the task. The proposed model also allows for generalization and variations in performing the task. The proposed method is tested on demonstrations of <b>block</b> <b>stacking</b> tasks and verified through robot imitation of the tasks in simulation and in physical experiments. I...|$|E
40|$|We have {{investigated}} the synthesis conditions, and the magnetic properties of the Sr 2 Ni 2 X-type hexagonal ferrite, Sr 2 Ni 2 Fe 28 O 46. The Sr 2 Ni 2 X-type hexaferrite was synthesized at 1240 ∘C. The spontaneous magnetization at 5 K was 44. 2 μB/f. u., suggesting {{that most of the}} Ni 2 + ions are at the up-spin octahedral sites in the spinel-structure blocks within the model of a Néel-type collinear ferrimagnetic structure. The Curie temperature of the Sr 2 Ni 2 X-type hexaferrite was estimated to be TC[Sr 2 Ni 2 X] = 472 ∘C. This is consistent with the difference of the <b>block</b> <b>stacking</b> structures of SrM-type, Sr 2 Ni 2 X-type, SrNi 2 W-type, and nickel spinel ferrites...|$|E
40|$|This letter {{presents}} empirical {{path loss}} models for {{an environment of}} stacked shipping containers. Specifically, a system for wireless monitoring of containers is considered for which three different types of wireless links are identified, namely intra-, inter-, and extra-container links. Furthermore, the inter-container link is investigated for the two most common types of container stacking: row and <b>block</b> <b>stacking.</b> Intra-and inter-container path loss are investigated at IEEE 802. 15. 4 frequencies of 433, 868, and 2400 MHz. Extra-container path loss is examined at GSM/UMTS frequencies of 900, 1850, and 2100 MHz. Distance-dependent path loss models are proposed for the inter-and extra-container links (high-correlation coefficients between 0. 76 and 0. 86). The resulting path loss models {{can be used in}} link budget calculations for container monitoring systems...|$|E
5000|$|In the 3-D Tetris mode, a layer disappears when it's {{filled with}} blocks, scoring the player points which are {{displayed}} in the HUD. If <b>blocks</b> <b>stack</b> {{over the top of}} the Well, the number of layers will go down by one. The game is over when the final layer is lost. One of its gametypes, [...] "Type A", requires the player to gain as many points as possible, and its other gametype, [...] "Clear It!", contains multiple stages which the player progresses through by clearing five layers on each stage.|$|R
5000|$|Multi-wide stacks using {{counterbalancing}} {{can give}} larger overhangs {{than a single}} width stack. Even for three <b>blocks,</b> <b>stacking</b> two counterbalanced <b>blocks</b> {{on top of another}} block can give an overhang of 1, while the overhang in the simple ideal case is at most 11/12. As [...] showed, asymptotically, the maximum overhang that can be achieved by multi-wide stacks is proportional to the cube root of the number of blocks, in contrast to the single-wide case in which the overhang is proportional to the logarithm of the number of blocks.|$|R
50|$|The {{blocks world}} {{is one of}} the most famous {{planning}} domains in artificial intelligence. Imagine a set of wooden blocks of various shapes and colors sitting on a table. The goal is to build one or more vertical <b>stacks</b> of <b>blocks.</b> The catch is that only one block may be moved at a time: it may either be placed on the table or placed atop another block. Because of this, any blocks that are, at a given time, under another block cannot be moved. Moreover, some kinds of blocks cannot have other <b>blocks</b> <b>stacked</b> on top of them.|$|R
40|$|The {{purpose of}} this article is to {{investigate}} the potentials of implementing an integrated Automated Storage and Retrieval System (ASRS) and Automated Guided Vehicle System (AGVS) in maritime container terminals. We first define the main components of the proposed configuration and justify the potential impacts of each and that of the integrated system. A 3 D simulation (and animation) model is developed for quantitative comparison of the proposed system and current practices. The key ideas are examined using a set of measures of effectiveness including space utilization and throughput. A single criteria measure of effectiveness is also defined as the number of moves per acre per hour. Based on this criteria, the performance of the proposed configuration is 3 - 4 times the current <b>block</b> <b>stacking</b> practice...|$|E
40|$|Abstract—The {{ability to}} recover from errors is {{necessary}} for robots to cope with unexpected situations in a dynamic environment. Efficient error recovery should allow the robot to utilise existing knowledge of the task and learn new error recovery strategies from observation. This paper proposes an automatic error recovery procedure that allows the robot to handle both known and unknown error states using a Petri net representation of the task. For known error states, the robot can directly adjust the sequencing of actions using the Petri net representation to complete the task, while for unknown error states, the robot {{can learn how to}} perform error recovery from a human demonstrator by extending the existing Petri net. The proposed method is verified on a real robot performing a <b>block</b> <b>stacking</b> task. I...|$|E
40|$|How has a {{stack of}} n blocks to be {{arranged}} in order to max-imize its overhang over a table edge while being stable? This question {{can be seen as}} an example application for applied statics {{and at the same time}} leads to a challenging optimization problem that was discussed recently in two theoretical studies. Here, we address this problem by designing an evolutionary algorithm; the proposed method is applied to two instances of the <b>block</b> <b>stacking</b> problem, maximizing the overhang for 20 and 50 block stacks. The study demonstrates that the stacking problem is worthwhile to be investigated in the context of randomized search algorithms: it represents an abstract, but still demanding instance of many real-world applications. Furthermore, the proposed algorithm may become useful in empirically testing the tightness of theoretical upper bounds proposed for this problem...|$|E
5000|$|An XSL-FO list is, essentially, {{two sets}} of <b>blocks</b> <b>stacked</b> side by side. An entry {{consists}} of a block on the [...] "left", or start inline direction, and a block sequence on the [...] "right", or end inline direction. The block {{on the left is}} conceptually what would be the number or bullet in a list. However, it could just as easily be a string of text, as one might see in a glossary entry. The block on the right works as expected. Both of these blocks can be block containers, or have multiple blocks in a single list entry.|$|R
50|$|The classic Collapse! game {{is played}} on a board of twelve columns by fifteen rows. Randomly colored blocks fill the board, rising from below. By {{clicking}} {{on a group of}} 3 or more blocks of the same color, the whole group disappears in a collapse and any <b>blocks</b> <b>stacked</b> above fall down to fill in the vacant spaces. If a whole column is cleared, the elements slide {{to the center of the}} field. If one or more blocks rise beyond the top row of the board, the game is lost. If the player manages to survive a specified number of lines without losing, they win the level and are awarded points for successful completion.|$|R
25|$|Scratch – a cross {{platform}} teaching IDE using visual <b>blocks</b> that <b>stack</b> like Lego™ originally developed by MIT's Life Long Kindergarten group. The Pi version is very heavily optimised for the limited compute resources available and is {{implemented in the}} Squeak Smalltalk system.|$|R
40|$|Effective AI {{agents and}} robots require {{the ability to}} adapt to real world {{situations}} and perform multiple tasks. This requires them {{to take into account}} the important sensory information. Extraction of this information can be made tractable using mechanisms of focus of attention that select perceptual features that have to be processed. This mechanism alone however is inadequate for tasks in real world situations since it still requires the robot to maintain all past information, rendering decision making computationally intractable. This requires the robots and AI agents to have the capability to remember only the past events that are required for successful completion of a task. Here we present an approach (illustrated using <b>block</b> <b>stacking</b> and block copying tasks) that extends a previous focus of attention mechanism by incorporating short term memory to remember past events. The result is a taskspecific control, sensing, and memory policy...|$|E
40|$|AI {{is moving}} away from "toy tasks" such as <b>block</b> <b>stacking</b> towards {{real-world}} problems. This trend is positive, but the amount of preliminary groundwork required to tackle a real-world task can be staggering, particularly when developing an integrated agent architecture. To address this problem, we advicate real-world software environments, such as operating systems or databases, as domains for agent research. The cost, effort, and expertise required to develop and systematically experiment with software agents is relatively low. Furthermore, software environments circumvent many thorny, but peripheral, research issues that are inescapable in other environments. Thus, software environments enable us to test agents ina real world yet focus on core AI research issues. To support this claim, we describe our project to develop UNIX softbots (software robots) [...] intelligent agnets that interact with UNIX. Existing softbots accept a diverse set of high-level goals, generate and execute plans to achieve these goals in real time, and recover from errors when necessary...|$|E
40|$|Gene {{expression}} programming, a genotype/phenotype {{genetic algorithm}} (linear and ramified), is presented {{here for the}} first time as a new technique for the creation of computer programs. Gene expression programming uses character linear chromosomes composed of genes structurally organized in a head and a tail. The chromosomes function as a genome and are subjected to modification by means of mutation, transposition, root transposition, gene transposition, gene recombination, and one- and two-point recombination. The chromosomes encode expression trees which are the object of selection. The creation of these separate entities (genome and expression tree) with distinct functions allows the algorithm to perform with high efficiency that greatly surpasses existing adaptive techniques. The suite of problems chosen to illustrate the power and versatility of gene expression programming includes symbolic regression, sequence induction with and without constant creation, <b>block</b> <b>stacking,</b> cellular automata rules for the density-classification problem, and two problems of boolean concept learning: the 11 -multiplexer and the GP rule problem. Comment: 22 pages, 17 figure...|$|E
500|$|During {{this time}} the <b>blocks</b> should be <b>stacked</b> and kept from drying out by {{sprinkling}} water over them.|$|R
40|$|This study {{presents}} microstructural {{investigations of}} graphite precipitates found in cast irons. Binary Fe eC, FeeCeSb and FeeCeCe alloys containing different graphite morphologies (flake and spheroidal) were produced and compared to commercial irons {{in an attempt}} to rationalize the effect of Sb and Ce on graphite growth. The extensive use of transmission electron microscopy (mainly electron diffraction and high resolution lattice fringe imaging) enabled further understanding of graphite growth mechanisms. It was found that the inner structure of graphite precipitates consists of growth <b>blocks</b> <b>stacked</b> upon each other, for all investigated morphologies. This suggests that graphite crystals develop mainly by a 2 D nucleation and growth mechanism, and that the final shape of the precipitates is associated to the occurrence of crystallographic defects in the graphite lattice (such as twins, misorientations and rotations) during growth...|$|R
40|$|View of the Brazil Clay Company in Brazil, Indiana. Several round domed buildings, presumably kilns, {{line the}} company grounds. Tall brick chimney {{structures}} are interspersed among the domed buildings. Concrete <b>blocks</b> are <b>stacked</b> in the foreground. Postcard addressed to: Herbert Kretsch of Indianapolis, Indiana. Number on back of postcard: R T- 20475...|$|R
