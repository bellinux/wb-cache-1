251|445|Public
500|$|This {{field is}} called a finite field with four elements, and is denoted [...] or [...] The subset {{consisting}} of [...] and [...] (highlighted in red in the tables at the right) is also a field, known as the <b>binary</b> <b>field</b> [...] or [...] In the context of computer science and Boolean algebra, [...] and [...] are often denoted respectively by false and true, the addition is then denoted XOR (exclusive or), and the multiplication is denoted AND. In other words, {{the structure of the}} <b>binary</b> <b>field</b> is the basic structure that allows computing with bits.|$|E
2500|$|Storage of a {{combined}} {{date and time}} within a fixed <b>binary</b> <b>field</b> is often considered a solution, but the possibility for software to misinterpret dates remains because such date and time representations must be relative to some known origin. Rollover of such systems is still a problem but can happen at varying dates and can fail in various ways. For example: ...|$|E
2500|$|There exist no bijections {{for even}} sized inputs/outputs with 2-uniformity. [...] They exist in odd fields (such as GF(27)) using either cubing or {{inversion}} (there are other exponents {{that can be}} used as well). [...] For instance S(x) = x3 in any odd <b>binary</b> <b>field</b> is immune to differential and linear cryptanalysis. [...] This is in part why the MISTY designs use 7- and 9-bit functions in the 16-bit non-linear function. [...] What these functions gain in immunity to differential and linear attacks they lose to algebraic attacks. [...] That is, they are possible to describe and solve via a SAT solver. [...] This is in part why AES (for instance) has an affine mapping after the inversion.|$|E
5000|$|Five <b>binary</b> <b>fields</b> [...] for m equal 163, 233, 283, 409, and 571. For {{each of the}} <b>binary</b> <b>fields,</b> one {{elliptic}} curve and one Koblitz curve was selected.|$|R
40|$|López-Dahab {{coordinates}} {{are usually}} the system of choice for implementations of elliptic curves over <b>binary</b> <b>fields.</b> We give new formulas for doubling which need one squaring less and one more addition. This leads to a speed-up for <b>binary</b> <b>fields</b> in polynomial basis representation if the parameters are not fixed. ...|$|R
40|$|Abstract — The ideal class {{groups of}} hyperelliptic curves (HECs) {{can be used}} in cryptosystems based on the {{discrete}} logarithm problem. Recent developments of computational technologies for scalar multiplications of divisor classes have shown that the performance of hyperelliptic curve cryptosystems (HECC) is compatible to that of elliptic curve cryptosystems (ECC). Especially, genus 3 HECC are well suited for all kinds of embedded processor architectures, where resources such as storage, time or power are constrained, because of their short operand sizes. In this paper, we investigate the efficient explicit formulae for genus 3 HECs over both prime <b>fields</b> and <b>binary</b> <b>fields,</b> and analyze how many field operations are needed. First, we improve the explicit formulae for genus 3 HECs over <b>binary</b> <b>fields</b> using the theta divisors which can save about 20 % ∼ 50 % multiplications for four cases, and extend the method to genus 3 HECs over prime fields. We then discuss acceleration of the divisor class doubling for genus 3 HECs over <b>binary</b> <b>fields.</b> By constructing birational transformations of variables, we find four types of curves which can lead to much faster divisor class doubling and give the corresponding explicit formulae. Especially, for special genus 3 HECs over <b>binary</b> <b>fields</b> with h(X) = 1, we obtain the fastest explicit doubling formula which only requires 1 I + 10 M + 11 S. Thirdly, we propose the inversion-free explicit formulae for genus 3 HEC over both prime <b>fields</b> and <b>binary</b> <b>fields</b> by introducing one more coordinate to collect the common denominator of the usual six coordinates. Finally, comparisons with the known results in terms of field operations and an implementation of genus 3 HECC over three <b>binary</b> <b>fields</b> on a Pentium- 4 processor are provided. Index Terms — Genus 3 hyperelliptic curves, explicit formulae, Cantor’s algorithm, Harley’s algorithm, theta divisors, inversionfree, efficient implementation. I...|$|R
5000|$|The {{generating}} {{series of}} T over the <b>binary</b> <b>field</b> is the {{formal power series}} ...|$|E
5000|$|As a Cyclic code: The perfect G23 code can be {{constructed}} via the factorization of [...] over the <b>binary</b> <b>field</b> GF(2): ...|$|E
50|$|The hardest ECC scheme (publicly) broken to date had a 112-bit key for {{the prime}} field case and a 109-bit key for the <b>binary</b> <b>field</b> case. For the prime field case, this was broken in July 2009 using {{a cluster of}} over 200 PlayStation 3 game {{consoles}} and could have been finished in 3.5 months using this cluster when running continuously. The <b>binary</b> <b>field</b> case was broken in April 2004 using 2600 computers over 17 months.|$|E
40|$|The {{intrinsic}} {{structure of}} <b>binary</b> <b>fields</b> poses a challenging complexity problem from both {{hardware and software}} point of view. Motivated by applications to modern cryptography, we describe some simple techniques aimed at performing computations over <b>binary</b> <b>fields</b> using systems with limited resources. This is particularly important when such computations {{must be carried out}} by means of very small and simple machines. The algorithms described in the present paper provide an increased efficiency in computations, when compared to the previously known algorithms for the arithmetic over prime fields...|$|R
40|$|Abstract. Pollardrhomethodanditsparallelized variantsareatpresent {{known as}} the best generic {{algorithms}} for computing elliptic curve discrete logarithms. We propose new iteration function for the rho method by exploiting the fact that point halving is more efficient than point addition for elliptic curves over <b>binary</b> <b>fields.</b> We present a careful analysis of the alternative rho method with new iteration function. Compared to the previous r-adding walk, generally the new method can achieve a significant speedup for computing elliptic curve discrete logarithms over <b>binary</b> <b>fields.</b> For instance, for certain NIST-recommended curves over <b>binary</b> <b>fields,</b> the new method is about 27 % faster than the previous best methods in single-instance Pollard rho method. When running several instances of Pollard rho method concurrently, and computing the inversions using the simultaneous inversion algorithm by Peter Montgomery, the new method is about 12 - 17 % faster than the previous best methods. Keywords:Pollardrhomethod, ellipticcurvediscretelogarithm,pointhalving, random walk. ...|$|R
40|$|Elliptic Curve Cryptography is {{generally}} are implemented over prime <b>fields</b> or <b>binary</b> <b>fields.</b> Arithmetic in <b>binary</b> <b>fields</b> {{can be classified}} according to the basis representation being used. Two {{of the most common}} basis used in <b>binary</b> <b>fields</b> are polynomial basis and normal basis. The optimal normal basis is especially known to be more efficient than polynomial basis because the inversion can be achieved by performing repeated multiplication using the method of Itoh and Tsujii, and squaring can be executed by performing only one cyclic shift operation. In previous research we have built algorithms and implementations on basis conversion between polynomial basis and normal basis. In this paper we will present implementation of arithmetic operation algorithms on both polynomial basis and optimal normal basis representation and the conversion method between them. We will also give comparison of time and space between implementation by using optimal basis representation with conversion and without conversion...|$|R
5000|$|This {{field is}} called a finite field with four elements, and is denoted [...] or [...] The subset {{consisting}} of [...] and [...] (highlighted in red in the tables at the right) is also a field, known as the <b>binary</b> <b>field</b> [...] or [...] In the context of computer science and Boolean algebra, [...] and [...] are often denoted respectively by false and true, the addition is then denoted XOR (exclusive or), and the multiplication is denoted AND. In other words, {{the structure of the}} <b>binary</b> <b>field</b> is the basic structure that allows computing with bits.|$|E
5000|$|The Well Equidistributed Long-period Linear (WELL) is a {{pseudorandom}} number generator {{developed in}} 2006 by F. Panneton, P. L'Ecuyer, and M. Matsumoto [...] {{that is based}} on linear recurrences modulo 2 over a finite <b>binary</b> <b>field</b> [...]|$|E
50|$|On March 29, 2011, two {{researchers}} {{published an}} IACR paper demonstrating {{that it is}} possible to retrieve a TLS private key of a server using OpenSSL that authenticates with Elliptic Curves DSA over a <b>binary</b> <b>field</b> via a timing attack. The vulnerability was fixed in OpenSSL 1.0.0e.|$|E
40|$|International audienceIn this paper, {{we present}} a new model for {{elliptic}} curves that we call the level four theta model. This model is defined over any finite field and is obtained from Riemann theta functions of level four. We show that the group law is unified and study its completeness. Over <b>binary</b> <b>fields,</b> {{we present a}}n efficient arithmetic of this curve. We also provide competitive differential addition formulas over non-binary fields and we show in particular that in <b>binary</b> <b>fields,</b> the level four theta model presents the fastest formulas for differential addition among well known models of elliptic curve...|$|R
40|$|We {{theoretically}} formulate {{the problem}} of processing <b>binary</b> random <b>field</b> images by means of mathematical morphology. This may allow us employ mathematical morphology {{in order to develop}} new statistical techniques for the processing and analysis of random shapes modeled as <b>binary</b> random <b>fields.</b> Since, in general, morphological transformations of continuous space <b>binary</b> random <b>fields</b> are not measurable, we are naturally forced to employ intermediate steps which require generation of an equivalent random closed set. The relationship between <b>binary</b> random <b>fields</b> and random closed sets is thoroughly investigated. As a by-product of this investigation, a number of useful new results, regarding separability of random closed sets, are presented. Our plan, however, suffers from few undesirable problems, which are prominent in the continuous case. As a remedy, we suggest morphological discretization of <b>binary</b> random <b>fields,</b> random closed sets, as well as morphological operators, thereby effectiv [...] ...|$|R
40|$|Abstract. This paper {{presents}} an extensive {{study of the}} software implementation on workstations of the NIST-recommended elliptic curves overprimefields. WepresenttheresultsofourimplementationinC and assembler on a Pentium II 400 MHz workstation. We also provide a comparison with the NIST-recommended curves over <b>binary</b> <b>fields.</b> ...|$|R
5000|$|To be more precise, letand assume [...] and [...] {{are related}} by the {{discrete}} Fourier transform. Then the coefficients {{and values of}} [...] and [...] are related as follows: for all , [...] and [...] {{or in the case}} of a <b>binary</b> <b>field</b> where addition is effectively xor, [...]|$|E
5000|$|A new mode called Sophie Germain Counter Mode (SGCM) {{has been}} {{proposed}} as {{a variant of the}} Galois/Counter Mode of operation for block ciphers. Instead of the <b>binary</b> <b>field</b> GF(2128), it uses modular arithmetic in GF(p) where p is a safe prime 2128 + 12451 with corresponding Sophie Germain prime [...] = 2127 + 6225.|$|E
5000|$|Storage of a {{combined}} {{date and time}} within a fixed <b>binary</b> <b>field</b> is often considered a solution, but the possibility for software to misinterpret dates remains because such date and time representations must be relative to some known origin. Rollover of such systems is still a problem but can happen at varying dates and can fail in various ways. For example: ...|$|E
40|$|Multiple-point {{multiplication}} on elliptic curves is {{the highest}} computational complex operation in the elliptic curve cyptographic based digital signature schemes. We describe three algorithms for multiple-point multiplication on elliptic curves over prime and <b>binary</b> <b>fields,</b> based on the representations of two scalars, as sums of mixed powers of 2 and 3. Our approaches include sliding window mechanism and some precomputed values of points on the curve. A proof for formulae to calculate the number of double-based elements, doublings and triplings below 2 n is listed. Affine coordinates and Jacobian coordinates are considered in both prime <b>fields</b> and <b>binary</b> <b>fields.</b> We have achieved upto 24 % of improvements in new algorithms for multiple-point multiplication...|$|R
40|$|Abstract L'opez-Dahab {{coordinates}} {{are usually}} the system of choice for implementations of elliptic curves over <b>binary</b> <b>fields.</b> We give new formulas for doubling which need one squaring less and one more addition. This leads to a speed-up for <b>binary</b> <b>fields</b> in polynomial basis representation if the parameters are not fixed. 1 Introduction Elliptic curves are studied for cryptographic applications as a group in whichthe discrete logarithm problem {{is believed to be}} hard. In a general cyclic group G = hP i, for an element Q 2 G this is the problem of finding an integer nsuch that Q = [n]P, where [n]P denotes the result of P added to itself n times. In protocols based on the discrete logarithm problem the most time consumin...|$|R
40|$|Data {{dependencies}} play {{an important}} role in analyzing and explaining the data. In this paper, we look at dependencies between discrete values and a~aalyze several dependency measures. We examine a special case of <b>binary</b> <b>fields</b> and show how to efficiently use SQL interface for analyzing dependencies in large databases. ...|$|R
5000|$|In April 2014, Erich Wenger and Paul Wolfger from Graz University of Technology {{solved the}} {{discrete}} logarithm of a 113-bit Koblitz curve in extrapolated 24 days using an 18-core Virtex-6 FPGA cluster. [...] In January 2015,the same researchers solved the discrete logarithm of an elliptic curve defined over a 113-bit <b>binary</b> <b>field.</b> The average runtime is around 82 days using a 10-core Kintex-7 FPGA cluster.|$|E
50|$|PUSH works over HTTP/2, {{which at}} its core is a frames protocol, meaning that {{information}} is exchanged in groups of bytes called frames. Additionally, frames are part of streams, and streams are identified by a number. The stream number is present in each frame as a <b>binary</b> <b>field.</b> Streams allow matching requests to responses, e.g. the response to request GET /index.html at stream 3 must also be at stream 3.|$|E
50|$|In the {{labeling}} given, {{the lines}} are precisely the subsets {{of the points that}} consist of three points whose labels add up to zero using nim addition. Alternatively, each number, when written in binary, can be identified with a non-zero vector of length three over the <b>binary</b> <b>field.</b> Three vectors that generate a subspace form a line; in this case, that is equivalent to their vector sum being the zero vector.|$|E
40|$|This paper {{presents}} an extensive {{study of the}} software implementation on workstations of the NIST-recommended elliptic curves over prime fields. We present {{the results of our}} implementation in C and assembler on a Pentium II 400 MHz workstation. We also provide a comparison with the NIST-recommended curves over <b>binary</b> <b>fields...</b>|$|R
40|$|AbstractWe {{introduce}} analogues of the Zak Transform on <b>binary</b> <b>fields,</b> {{and show}} that they are bounded linear operators on Lp for p= 1 and 2. We also show that positivity of Zak transforms can be used to decide whether orthonormal systems generated by multiplying characters of F by a weight function are complete or not...|$|R
40|$|AbstractUsing the Stickelberger–Swan theorem, the parity of {{the number}} of {{irreducible}} factors of a self-reciprocal even-degree polynomial over a finite field will be hereby characterized. It will be shown {{that in the case of}} <b>binary</b> <b>fields</b> such a characterization can be presented in terms of the exponents of the monomials of the self-reciprocal polynomial...|$|R
5000|$|The Mersenne Twister {{algorithm}} {{is based on}} a matrix linear recurrence over a finite <b>binary</b> <b>field</b> F2. The {{algorithm is}} a twisted generalised feedback shift register (twisted GFSR, or TGFSR) of rational normal form (TGFSR(R)), with state bit reflection and tempering. The basic idea is to define a series [...] through a simple recurrence relation, and then output numbers of the form , where [...] is an invertible F2 matrix called a tempering matrix.|$|E
50|$|STDF is {{a binary}} format, {{but can be}} {{converted}} either to an ASCII format known as ATDF or to a tab delimited text file. Decoding the STDF variable length <b>binary</b> <b>field</b> data format to extract ASCII text is non-trivial as it involves a detailed comprehension of the STDF specification, the current (2007) version 4 specification being over 100 pages in length. Software tools exist for processing STDF generated files and performing statistical analysis on a population of tested devices.|$|E
5000|$|Curves {{such that}} n divides [...] (where p is the {{characteristic}} of the field - q for a prime field, or [...] for a <b>binary</b> <b>field)</b> for sufficiently small B are vulnerable to Menezes-Okamoto-Vanstone (MOV) attack which applies usual Discrete Logarithm Problem (DLP) in a small degree extension field of [...] to solve ECDLP. The bound B should be chosen so that discrete logarithms in the field [...] {{are at least as}} difficult to compute as discrete logs on the elliptic curve [...]|$|E
40|$|Abstract. Authentication {{protocols}} are indispensable in wireless sensor networks. Commonly {{they are}} based on asymmetric cryptographic algorithms. In this paper we investigate all categories of finite fields suitable for elliptic curve cryptography on the ATmega 128 microcontroller: Fp, F 2 d, and F p d. It turns out that <b>binary</b> <b>fields</b> enable the most efficient implementations...|$|R
40|$|Abstract [...] This survey paper reviews latest {{existing}} encryption {{techniques and}} their security issues. Elliptic Curve Cryptography is gaining attraction with their {{high level of}} security with low cost,small key size and smaller hardware realization. A review on various algorithms to perform scalar multiplication on both prime <b>fields</b> and <b>binary</b> <b>fields</b> more effectively has been done. Initially, the double and add algorithm performed in different multipliers always resulted in a long serial point operations and also maintained a challenging critical path delay. But later on, efficient high speed Elliptic Curve Cryptographic processor for <b>binary</b> <b>fields</b> in projective coordinates to improve performance of scalar multiplication has been designed. The recently proposed architecture considers the karatsuba multiplier which is designed for high speed and area constrained applications that reduces the number of clock cycles and the multiplication steps. The new architecture provides integrated high throughput with high power efficiency...|$|R
40|$|Elliptic Curve Cyrptography {{has gained}} a lot of {{significance}} in recent times. This is mostly due to the small key sizes associated with Elliptic Curve Cryptograhic systems. This paper presents a study of various algorithms for performing underlying field arithmetic and point representation useful in software implementations of Elliptic curve cyptography over prime fileds as well as <b>binary</b> <b>fields.</b> 1...|$|R
