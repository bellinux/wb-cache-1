1|3|Public
5000|$|Utah {{was a major}} {{center for}} {{computer}} animation in this period. The computer science faculty was founded by David Evans in 1965, {{and many of the}} basic techniques of 3D computer graphics were developed here in the early 70s with ARPA funding (Advanced Research Projects Agency). Research results included Gouraud, Phong, and <b>Blinn</b> <b>shading,</b> texture mapping, hidden surface algorithms, curved surface subdivision, real-time line-drawing and raster image display hardware, and early virtual reality work. In the words of Robert Rivlin in his 1986 book The Algorithmic Image: Graphic Visions of the Computer Age, [...] "almost every influential person in the modern computer-graphics community either passed through the University of Utah or came into contact with it in some way".|$|E
25|$|In {{relation}} to the game's graphics, he explained Call of Juarez was using {{a new version of}} Techland's own game engine, the Chrome Engine. The engine had last been used in Xpand Rally Xtreme, but since then, Techland had been working with nVidia to incorporate Shader Model 3.0. The enhanced version of the engine, Chrome Engine 3, also features per-pixel lighting, and rendering techniques such as normal mapping, phong <b>shading,</b> <b>Blinn</b> lighting, virtual displacement mapping, shadow mapping, HDR environment mapping, and post processing effects (such as enhanced depth-of-field, light blooms, refraction and heat distortion). The engine also facilitated multi-morph facial mimics, Shader Model 3.0-based simulation and animation of vegetation, fumes and smoke, changes in daytime and the position of global lighting, wind effects, rigid body dynamics, and alterations to object properties when interacting with liquids.|$|R
40|$|In the {{real-time}} 3 D graphics pipeline framework, rendering quality greatly {{depends on}} illumination and shading models. The highest-quality shading method in this framework is Phong shading. However, {{due to the}} computational complexity of Phong shading, current graphics hardware implementations use a simpler Gouraud shading. Today, programmable hardware shaders are becoming available, and, although real-time Phong shading is still not possible, {{there is no reason}} not to improve on Gouraud shading. This thesis analyzes four different methods for approximating Phong shading: quadratic <b>shading,</b> environment map, <b>Blinn</b> map, and quadratic <b>Blinn</b> map. Quadratic <b>shading</b> uses quadratic interpolation of color. Environment and Blinn maps use texture mapping. Finally, quadratic Blinn map combines both approaches, and quadratically interpolates texture coordinates. All four methods adequately render higher-resolution methods. However, only Blinn map and quadratic Blinn map provide reasonable quality on coarse...|$|R

