0|2468|Public
40|$|Recently, CT <b>burst</b> <b>errors</b> {{originally}} dened for block codes havebeen {{generalized to}} CT <b>burst</b> <b>errors</b> for array codes [6]. In {{order to establish}} aRieger's type bound for array codes with respect to CT <b>burst</b> <b>errors.</b> Here, weintroduce a CT <b>burst</b> <b>error</b> weight enumerator whose coecients represent thenumber of CT <b>burst</b> <b>errors</b> of a particular weight. The method of obtainingthe CT <b>burst</b> <b>error</b> weight enumerator is obtained by generating function likeapproach {{and it does not}} involve solving equations as presented in [6]...|$|R
40|$|Abstract- Using {{the concept}} of unequal <b>burst</b> <b>error</b> {{protection}} codes, codes which provide different protection levels against <b>bursts</b> of <b>errors,</b> we have constructed such codes {{by means of a}} computable method. Optimal <b>burst</b> <b>error</b> correcting short codes together with their generator matrices for linear unequal <b>burst</b> <b>error</b> protection codes are presented...|$|R
2500|$|Theorem (<b>Burst</b> <b>error</b> {{correction}} ability). The <b>burst</b> <b>error</b> correction {{ability of}} any [...] code satisfies ...|$|R
5000|$|Theorem (<b>Burst</b> <b>error</b> {{correction}} ability). The <b>burst</b> <b>error</b> correction {{ability of}} any [...] code satisfies ...|$|R
5000|$|From Hamming {{distance}} concept, a code {{with minimum}} distance [...] can correct any [...] errors. But in many channels error pattern {{is not very}} arbitrary, it occurs within very short segment of the message. Such kind of <b>errors</b> are called <b>burst</b> <b>errors.</b> So, for correcting such errors we will get a more efficient code of higher rate because of the less constraints. Cyclic codes are used for correcting <b>burst</b> <b>error.</b> In fact, cyclic codes can also correct cyclic <b>burst</b> <b>errors</b> along with <b>burst</b> <b>errors.</b> Cyclic <b>burst</b> <b>errors</b> are defined as ...|$|R
40|$|Approved {{for public}} release; {{distribution}} is unlimitedThe <b>burst</b> <b>error</b> is generated in digital communication networks by various unpredictable conditions, which occur at high error rates, for short durations, and can impact services. To completely describe a <b>burst</b> <b>error</b> {{one has to}} know the bit pattern. This is impossible in practice on working systems. Therefore, under the memoryless binary symmetric channel (MBSC) assumptions, the performance evaluation or estimation schemes for digital signal 1 (DS 1) transmission systems carrying live traffic is an interesting and important problem. This study will present some analytical methods, leading to efficient detecting algorithms of <b>burst</b> <b>error</b> using cyclic redundancy check (CRC) code. The definition of <b>burst</b> <b>error</b> is introduced using three different models. Among the three <b>burst</b> <b>error</b> models, the mathematical model is used in this study. The probability density function, function(b) of <b>burst</b> <b>error</b> of length b is proposed. The performance of CRC-n codes is evaluated and analyzed using function(b) {{through the use of}} a computer simulation model within CRC block <b>burst</b> <b>error.</b> The simulation result shows that the mean block <b>burst</b> <b>error</b> tends to approach the pattern of the <b>burst</b> <b>error</b> which random bit errors generate[URL] Korean Nav...|$|R
2500|$|Theorem. If the <b>burst</b> <b>error</b> {{correcting}} {{ability of}} some code is [...] then the <b>burst</b> <b>error</b> correcting ability of its -way interleave is ...|$|R
40|$|In {{this thesis}} {{properties}} of two-dimensional arrayed circulant parity check matrix {{are used in}} order to determine a good estimation for determining <b>burst</b> <b>error</b> correcting capability of cyclic codes. The Thesis Project will highlight the computation of <b>burst</b> <b>error</b> correcting codes of code rates that are higher than (2 / 7) and possessing relatively higher minimum weights as compared to legacy <b>burst</b> <b>error</b> correcting codes such as the Reed Solomon (RS) codes and Bose, Ray-Chaudhuri and Hocquenghem (BCH). Thesis project starts by developing a circulant parity check matrix. For instance, for an (n, k) cyclic code, an (n x n) circulant parity check matrix, corrects <b>burst</b> <b>errors</b> of lengths up to the error-bust correcting limit of the circulant cyclic code. This {{is due to the fact}} that circulant parity check matrices are a class of linear block codes. The code will have maximum <b>burst</b> <b>error</b> correcting capability because the code specification regulates the maximum <b>burst</b> <b>error</b> correction capacity...|$|R
25|$|Although this {{definition}} {{is sufficient to}} describe what a <b>burst</b> <b>error</b> is, {{the majority of the}} tools developed for <b>burst</b> <b>error</b> correction rely on cyclic codes. This motivates our next definition.|$|R
2500|$|Proof. [...] Let [...] be {{distinct}} <b>burst</b> <b>errors</b> {{of length}} [...] which lie in same coset of code [...] [...] Then [...] is a codeword. Hence, if we receive [...] we can decode it either to [...] or [...] In contrast, {{if all the}} <b>burst</b> <b>errors</b> [...] and [...] do not lie in same coset, then each <b>burst</b> <b>error</b> is determined by its syndrome. The error can then be corrected through its syndrome. Thus, a linear code [...] is an -burst-error-correcting code {{if and only if}} all the <b>burst</b> <b>errors</b> of length [...] lie in distinct cosets of [...]|$|R
40|$|Detecting and {{correcting}} errors {{is one of}} {{the main}} tasks in coding theory. The bounds are important in terms of error-detecting and -correcting capabilities of the codes. Solid <b>Burst</b> <b>error</b> is common in several communication channels. This paper obtains lower and upper bounds on the number of parity-check digits required for linear codes capable of correcting any solid <b>burst</b> <b>error</b> of length b or less and simultaneously detecting any solid <b>burst</b> <b>error</b> of length s(>b) or less. Illustration of such a code is also provided. Keywords: Parity check matrix, Syndromes, Solid <b>burst</b> <b>errors,</b> Standard arrayDOI:  10. 18495 /comengapp. 21. 143150...|$|R
5000|$|Proof. Let [...] be {{distinct}} <b>burst</b> <b>errors</b> {{of length}} [...] which lie in same coset of code [...] Then [...] is a codeword. Hence, if we receive [...] we can decode it either to [...] or [...] In contrast, {{if all the}} <b>burst</b> <b>errors</b> [...] and [...] do not lie in same coset, then each <b>burst</b> <b>error</b> is determined by its syndrome. The error can then be corrected through its syndrome. Thus, a linear code [...] is an -burst-error-correcting code {{if and only if}} all the <b>burst</b> <b>errors</b> of length [...] lie in distinct cosets of [...]|$|R
40|$|AbstractCampopiano [C. N. Campopiano, Bounds on <b>burst</b> <b>error</b> {{correcting}} codes, IRE Trans. IT- 8 (1962) 257 – 259] obtained {{an upper}} bound for <b>burst</b> <b>error</b> correction in classical coding systems where codes are subsets/subspaces {{of the space}} Fqn, the space of all n-tuples with entries from a finite field Fq equipped with the Hamming metric. In [S. Jain, Bursts in m-metric array codes, Linear Algebra Appl., in press], the author introduced the notion of <b>burst</b> <b>errors</b> for m-metric array coding systems where m-metric array codes are subsets/subspaces of the space Matm×s(Fq), the linear space of all m×s matrices with entries from a finite field Fq, endowed with a non-Hamming metric and obtained some lower bounds for <b>burst</b> <b>error</b> correction. In this paper, we obtain various construction upper bounds on the parameters of m-metric array codes for the detection and correction of <b>burst</b> <b>errors...</b>|$|R
40|$|Paper is {{dedicated}} to solving the problem of increasing the efficiency of detecting and correcting the data transmission <b>burst</b> <b>errors</b> brought on by external noises. For <b>burst</b> <b>errors</b> correction the utilization of special weighed check sum modification has been proposed. Algorithm for <b>burst</b> <b>error</b> detection and correction has been worked out. It {{has been shown that}} proposed techniques ensure superior data transformation error detecting and correcting effectiveness in compare to known correcting code. ?????? ????????? ??????? ???????? ????????? ????????????? ??????????? ? ??????????? ??????? ?????? ???????? ??????, ????????? ???????? ????????. ??? ??????????? ??????? ?????? ?????????? ???????????? ??????????? ??????????? ?????????? ??????????? ?????. ?????????? ???????? ??????????? ? ????????? ??????? ??????. ????????, ??? ???????????? ?????????? ???????????? ??????? ????????????? ??????????? ? ??????????? ?????? ?? ????????? ? ?????????? ??????????????? ??????...|$|R
40|$|This thesis {{presents}} {{high performance}} forward error correcting codes suitable for random and <b>burst</b> <b>errors.</b> It initially verifies {{the performance of}} <b>burst</b> <b>error</b> correcting convolutional codes. Then constructed codes are combined with other high performance random error correcting codes to form new schemes of serially concatenated codes. The performance of newly proposed codes is tested under random and <b>burst</b> <b>error</b> channels and compared with other well-known codes to investigate their effectiveness in constructing a reliable error protection system for different applications...|$|R
40|$|The paper {{presents}} {{lower and}} upper bounds {{on the number}} of parity-check digits required for a linear code that is capable of detecting repeated low-density <b>burst</b> <b>errors</b> of length $b$ (fixed) with weight w or less $(w leq b) $. A bound for codes which can correct and simultaneously detect such <b>burst</b> <b>errors</b> has also been derived. An illustration has been provided for the code detecting 2 -repeated <b>burst</b> <b>errors</b> of length 3 (fixed) with weight 2 or less over GF(2) ...|$|R
40|$|The Bose, Chaudhuri, and Hocquenghem (BCH) codes form a large {{class of}} {{powerful}} error-correcting cyclic codes. Among the non-binary BCH codes, {{the most important}} subclass is the Reed Solomon (RS) codes. Reed Solomon codes {{have the ability to}} correct random and <b>burst</b> <b>errors.</b> It is well known that an (n,k) RS code can correct up to (n-k) / 2 random <b>errors.</b> When <b>burst</b> <b>errors</b> are involved, the error correcting ability of the RS code can be increased beyond (n-k) / 2. It has previously been show that RS codes can reliably correct <b>burst</b> <b>errors</b> of length greater than (n-k) / 2. In this paper, a new decoding algorithm is given which can also correct a <b>burst</b> <b>error</b> of length greater than (n-k) / 2...|$|R
2500|$|Cyclic codes {{can detect}} all bursts of length up to [...] We will see {{later that the}} <b>burst</b> <b>error</b> {{detection}} ability of any [...] code is bounded from above by [...] Cyclic codes are considered optimal for <b>burst</b> <b>error</b> detection since they meet this upper bound: ...|$|R
25|$|C's Ware's EVE <b>Burst</b> <b>Error</b> (1995) {{allowed the}} player to switch between both protagonists {{at any time}} during the game. EVE <b>Burst</b> <b>Error</b> often {{requires}} the player to have both protagonists co-operate with each other at various points during the game, with choices in one scenario affecting the other.|$|R
40|$|This paper {{deals with}} the ability of coset codes {{derivable}} from (n, k) cyclic codes to detect and correct loss of synchronization, or slip, in a burst-error channel. Results are presented both for general cyclic codes and <b>burst</b> <b>error</b> correcting cyclic codes. In particular, the Fire codes, which correct single <b>burst</b> <b>errors,</b> are considered. Two classes of burst-error channels are considered, namely, Type I and Type II. In Type I channels, slip and additive <b>burst</b> <b>errors</b> cannot occur simultaneously in any received n-tuple. In the more general Type II channels, this restriction is removed. It is shown that certain coset codes can correct slip and <b>burst</b> <b>errors</b> even when they occur simultaneously. Furthermore, both the magnitude and {{the direction of the}} slip can be determined by examining the syndrome of the received n-tuple...|$|R
5000|$|... #Subtitle level 3: <b>Burst</b> <b>error</b> {{correcting}} {{capacity of}} interleaver ...|$|R
40|$|Abstract — Multimedia data {{transmission}} over wireless networks is challenging due lower bandwidth, delay composition, air interface and occurrence of <b>burst</b> <b>errors.</b> Packet loss caused by <b>burst</b> <b>errors</b> seriously limits the maximum achievable throughput of wireless networks. <b>Burst</b> <b>errors</b> {{are critical for}} Quality of Service (QoS) in terms of error detection, correction and retransmission of erroneous packets. Codecs {{for most of the}} multimedia traffic like voice, video transmissions are usually designed to conceal single <b>error</b> but not <b>burst</b> of packet <b>error.</b> To tailor efficient transmission schemes, it is essential to design a wireless error model and develop techniques that can provide insight into the behaviour of wireless transmissions...|$|R
2500|$|This contradicts [...] Thus, the <b>burst</b> <b>error</b> {{descriptions}} are identical.|$|R
5000|$|EVE <b>Burst</b> <b>Error</b> (PC-98, FM Towns, Saturn, Windows, PlayStation 2) ...|$|R
5000|$|This contradicts [...] Thus, the <b>burst</b> <b>error</b> {{descriptions}} are identical.|$|R
5000|$|... #Subtitle level 3: Upper bounds on <b>burst</b> <b>error</b> {{detection}} and correction ...|$|R
3000|$|... {{will contain}} {{erroneous}} decisions, which will propagate through the DFE and will cause <b>burst</b> <b>errors.</b> If an interleaver {{is not used}} then the Log-MAP decoding algorithm {{will not be able}} to correct these long <b>burst</b> <b>errors.</b> However, when the correct decisions on the symbols are fed back in the iterative mode, the estimate [...]...|$|R
2500|$|While cyclic {{codes in}} general are {{powerful}} tools for detecting <b>burst</b> <b>errors,</b> we now consider a family of binary cyclic codes named Fire Codes, which possess good single <b>burst</b> <b>error</b> correction capabilities. By single burst, say of length , we mean that all errors that a received codeword possess lie within a fixed span of [...] digits.|$|R
5000|$|In {{an analog}} channel model, the {{transmitted}} message is modelled as an analog signal. The {{model can be}} a linear or non-linear, time-continuous or time-discrete (sampled), memoryless or dynamic (resulting in <b>burst</b> <b>errors),</b> time-invariant or time-variant (also resulting in <b>burst</b> <b>errors),</b> baseband, passband (RF signal model), real-valued or complex-valued signal model. The model may reflect the following channel impairments: ...|$|R
5000|$|While cyclic {{codes in}} general are {{powerful}} tools for detecting <b>burst</b> <b>errors,</b> we now consider a family of binary cyclic codes named Fire Codes, which possess good single <b>burst</b> <b>error</b> correction capabilities. By single burst, say of length , we mean that all errors that a received codeword possess lie within a fixed span of [...] digits.|$|R
40|$|ABSTRACT The paper {{contains}} {{a report on}} Simulation of the <b>Burst</b> <b>Error</b> Correction. Most of the practical communica-tion channels such as magnetic storage systems, telephone lines, optical discs used to store digital data such as CD,DVD etc are affected by errors which are concentrated in a certain locality rather than randoms errors. These errors {{may be due to}} physical damage such as scratch on a disc or a stroke of lightning in case of wireless channel. Such errors occur in a burst (called as burst because they are occurring in many consecutive bits). The methods used to correct random errors are inefficient to correct such <b>burst</b> <b>errors.</b> This motivates <b>burst</b> <b>error</b> correcting codes. The idea of interleaving is used to convert convolutional codes used to random <b>error</b> correction for <b>burst</b> <b>error</b> correction. During the message transmission, an impairment occurs from time to time i. e. an error arises which is caused by interfering signals during the transmission. The situation requires that the respective coding is adapted as much as possible to the given conditions of the transmission. The convolutional coding is suitable for the correction of <b>burst</b> <b>errors.</b> However, the procedure of the majority of <b>burst</b> <b>error</b> correction solutions is very demanding. This article therefore explains a complex procedure of design and simulation in Matlab on a specific case which is suitable for its simplicity and makes the explanation of the lesson easier...|$|R
50|$|In telecommunication, a <b>burst</b> <b>error</b> or <b>error</b> <b>burst</b> is a {{contiguous}} sequence of symbols, received over a data transmission channel, {{such that the}} first and last symbols are in error and there exists no contiguous subsequence of m correctly received symbols within the <b>error</b> <b>burst.</b>|$|R
40|$|Abstract — An {{efficient}} error protection {{scheme is}} proposed for video delivery over lossy channels. Flexible Macroblock Ordering {{is used to}} generate spatial descriptions that are sent over disjoint paths. Additionally, descriptions are partitioned to allow unequal <b>error</b> protection against <b>burst</b> <b>errors.</b> Experimental results show that a significant quality gain can be achieved (up to 3 dB) {{in the presence of}} <b>burst</b> <b>errors.</b> I...|$|R
2500|$|Many codes {{have been}} {{designed}} to correct random errors. [...] Sometimes, however, channels may introduce errors which are localized in a short interval. Such errors occur in a <b>burst</b> (called <b>burst</b> <b>errors)</b> because they occur in many consecutive bits. Examples of <b>burst</b> <b>errors</b> can be found extensively in storage mediums. These errors may be due to physical damage such as scratch on a disc or a stroke of lightning in case of wireless channels. They are not independent; they tend to be spatially concentrated. If one bit has an error, {{it is likely that the}} adjacent bits could also be corrupted. The methods used to correct random errors are inefficient to correct <b>burst</b> <b>errors.</b>|$|R
50|$|Reed-Solomon {{codes are}} {{specifically}} useful in combating mixtures of random and <b>burst</b> <b>errors.</b> CIRC corrects <b>error</b> <b>bursts</b> up to 3,500 bits in sequence (2.4 mm in length as seen on CD surface) and compensates for <b>error</b> <b>bursts</b> up to 12,000 bits (8.5 mm) {{that may be}} caused by minor scratches.|$|R
50|$|Reed-Solomon coding is very {{widely used}} in mass storage systems to correctthe <b>burst</b> <b>errors</b> {{associated}} with media defects.|$|R
