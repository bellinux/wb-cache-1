1447|833|Public
25|$|The area of {{a drawing}} {{is the size of}} its {{smallest}} <b>bounding</b> <b>box,</b> relative to the closest distance between any two vertices. Drawings with smaller area are generally preferable to those with larger area, because they allow the features of the drawing to be shown at greater size and therefore more legibly. The aspect ratio of the <b>bounding</b> <b>box</b> may also be important.|$|E
25|$|It is also {{possible}} {{to carry out the}} process of subdividing a triangle to form an Apollonian network in such a way that, at every step, the edge lengths are rational numbers; it is an open problem whether every planar graph has a drawing with this property. It is possible in polynomial time to find a drawing of a planar 3-tree with integer coordinates minimizing the area of the <b>bounding</b> <b>box</b> of the drawing, and to test whether a given planar 3-tree may be drawn with its vertices on a given set of points.|$|E
2500|$|Many {{variants}} of the algorithms are obtained by choosing {{something other than}} a sphere for [...] If one chooses axis-aligned bounding boxes, one gets AABBTrees. Oriented <b>bounding</b> <b>box</b> trees are called OBBTrees. Some trees are easier to update if the underlying object changes. Some trees can accommodate higher order primitives such as splines instead of simple triangles.|$|E
50|$|<b>Bounding</b> <b>boxes</b> (or <b>Bounding</b> volumes) {{are most}} often a 2D {{rectangle}} or 3D cuboid, but other shapes are possible. The bounding diamond, the minimum bounding parallelogram, the convex hull, the bounding circle or bounding ball, and the bounding ellipse have all been tried, but <b>bounding</b> <b>boxes</b> remain the most popular due to their simplicity. <b>Bounding</b> <b>boxes</b> are typically used in the early (pruning) stage of collision detection, so that only objects with overlapping <b>bounding</b> <b>boxes</b> need be compared in detail.|$|R
25|$|The {{bounding}} diamond, {{the minimum}} bounding parallelogram, the convex hull, the bounding circle or bounding ball, and the bounding ellipse {{have all been}} tried, but <b>bounding</b> <b>boxes</b> remain the most popular due to their simplicity. <b>Bounding</b> <b>boxes</b> are typically used in the early (pruning) stage of collision detection, so that only objects with overlapping <b>bounding</b> <b>boxes</b> need be compared in detail.|$|R
3000|$|Given the segmentation, the <b>bounding</b> <b>boxes</b> of blobs with {{at least}} a certain area are {{detected}} using the approach described in [18]. Then, a recursive process is undertaken to join <b>boxes</b> into larger <b>bounding</b> <b>boxes</b> which satisfy d [...]...|$|R
2500|$|Conway {{originally}} conjectured that no pattern {{can grow}} indefinitely—i.e., that for any initial configuration with {{a finite number}} of living cells, the population cannot grow beyond some finite upper limit. In the game's original appearance in [...] "Mathematical Games", Conway offered a $50 prize to the first person who could prove or disprove the conjecture before the end of 1970. The prize was won in November of the same year by a team from the Massachusetts Institute of Technology, led by Bill Gosper; the [...] "Gosper glider gun" [...] produces its first glider on the 15th generation, and another glider every 30th generation from then on. For many years this glider gun was the smallest one known. In 2015 a period-120 gun was discovered that has fewer live cells but a larger <b>bounding</b> <b>box.</b>|$|E
50|$|The {{arbitrarily}} oriented minimum <b>bounding</b> <b>box</b> is {{the minimum}} <b>bounding</b> <b>box,</b> calculated subject to no constraints {{as to the}} orientation of the result. Minimum <b>bounding</b> <b>box</b> algorithms based on the rotating calipers method can be used to find the minimum-area or minimum-perimeter <b>bounding</b> <b>box</b> of a two-dimensional convex polygon in linear time, and of a two-dimensional point set {{in the time it takes}} to construct its convex hull followed by a linear-time computation. A three-dimensional rotating calipers algorithm can find the minimum-volume arbitrarily-oriented <b>bounding</b> <b>box</b> of a three-dimensional point set in cubic time.|$|E
50|$|It is also {{possible}} to approximate the minimum <b>bounding</b> <b>box</b> volume, to within any constant factor greater than one, in linear time. The algorithm for doing this involves finding an approximation to {{the diameter of the}} point set, and using a box oriented towards this diameter as an initial approximation to the minimum volume <b>bounding</b> <b>box.</b> Then, this initial <b>bounding</b> <b>box</b> is partitioned into a grid of smaller cubes, and grid points near the boundary of the convex hull of the input are used as a coreset, a small set of points whose optimum <b>bounding</b> <b>box</b> approximates the optimum <b>bounding</b> <b>box</b> of the original input. Finally, O'Rourke's algorithm is applied to find the exact optimum <b>bounding</b> <b>box</b> of this coreset.|$|E
40|$|We propose an {{unsupervised}} {{framework for}} recognizing animals in videos using subtitles. In this framework, the alignment between animals and their names {{is performed using}} an Expectation Maximization algorithm which is adapted to two very dierent circumstances- 1) when the <b>bounding</b> <b>boxes</b> are available and 2) when the frame {{as a whole is}} used instead of <b>bounding</b> <b>boxes.</b> With the goal of maximizing precision, recall and F-measure, the experiments compare a multitude of natural language processing approaches and visual features when associating animal names in the subtitles with visual patterns. The proposed unsupervised methods obtain 83. 1 % F 1 using <b>bounding</b> <b>boxes</b> and 65. 7 % F 1 without <b>bounding</b> <b>boxes</b> in a fully automated pipeline. status: publishe...|$|R
30|$|These {{two steps}} in the processing, barely, take into account {{specific}} features of pedestrians; in fact, only symmetrical and size considerations are used to compute the list of <b>bounding</b> <b>boxes.</b> Therefore, independent validation modules are {{used to evaluate the}} presence of human shapes inside the <b>bounding</b> <b>boxes.</b> These stages exploit specific pedestrian characteristics to discard false positives from the list of <b>bounding</b> <b>boxes.</b> In the following paragraphs the two validators shown as bold in Figure 2 are described and detailed.|$|R
40|$|Few {{geospatial}} data representations are more basic than the bounding box; a rectangle surrounding a geographic feature or dataset. <b>Bounding</b> <b>boxes</b> {{are a key}} component of geospatial metadata and {{lie at the heart of}} many computational geometry algorithms as well as spatial indexing systems. Despite their ubiquity and common use, <b>bounding</b> <b>boxes</b> are more complicated than they first appear. The phrase that ?spatial is special? applies to this humble representation as well as to more sophisticated geospatial representations. This paper explores the nuances of correctly understanding, using, and interpreting <b>bounding</b> <b>boxes...</b>|$|R
5000|$|In many {{applications}} the <b>bounding</b> <b>box</b> is {{aligned with the}} axes of the co-ordinate system, and it is then known as an axis-aligned <b>bounding</b> <b>box</b> (...) [...] To distinguish the general case from an AABB, an arbitrary <b>bounding</b> <b>box</b> is sometimes called an oriented <b>bounding</b> <b>box</b> (...) , or an [...] when an existing object's local coordinate system is used. AABBs are much simpler to test for intersection than OBBs, but have the disadvantage that when the model is rotated they cannot be simply rotated with it, but need to be recomputed.|$|E
50|$|The minimum <b>bounding</b> <b>box</b> of a {{point set}} {{is the same as}} the minimum <b>bounding</b> <b>box</b> of its convex hull, a fact which may be used heuristically to speed up computation.|$|E
5000|$|As in a K-d tree, {{a relaxed}} K-d tree of size n induces a {{partition}} of the domain D into n+1 regions, each corresponding to a leaf in the K-d tree. The <b>bounding</b> <b>box</b> (or bounds array) of a node {x,j} is {{the region of}} the space delimited by the leaf in which x falls when it is inserted into the tree. Thus, the <b>bounding</b> <b>box</b> of the root {y,i} is 0,1K, the <b>bounding</b> <b>box</b> of the left subtree's root is 0,1 × ... × 0,yi × ... × 0,1, and so on.|$|E
5000|$|... #Caption: Visual {{representation}} of a well-separated pair computed with the <b>bounding</b> <b>boxes</b> ...|$|R
40|$|This paper {{describes}} a motion adaptive indexing scheme for efficient evaluation of moving continual queries (MCQs) over moving objects. It uses {{the concept of}} motion-sensitive <b>bounding</b> <b>boxes</b> (MSBs) to model moving objects and moving queries. These <b>bounding</b> <b>boxes</b> automatically adapt their sizes to the dynamic motion behaviors of individual objects. Instead of indexing frequently changing object positions, we index less frequently changing object and query MSBs, where updates to the <b>bounding</b> <b>boxes</b> are needed only when objects and queries move across the boundaries of their boxes. This helps decrease the number of updates to the indexes. More importantly, we use predictive query results to optimistically precalculate query results, decreasing the number of searches on the indexes. Motion-sensitive <b>bounding</b> <b>boxes</b> are used to incrementally update the predictive query results. Our experiments show that the proposed motion adaptive indexing scheme is efficient {{for the evaluation of}} moving continual range queries...|$|R
40|$|R-trees {{can be used}} {{to store}} and query sets of point data in two or more dimensions. An easy way to {{construct}} and maintain R-trees for two-dimensional points, due to Kamel and Faloutsos, is to keep the points in the order in which they appear along the Hilbert curve. The R-tree will then store <b>bounding</b> <b>boxes</b> of points along contiguous sections of the curve, and the efficiency of the R-tree depends {{on the size of the}} <b>bounding</b> <b>boxes</b> - smaller is better. Since there are many different ways to generalize the Hilbert curve to higher dimensions, this raises the question which generalization results in the smallest <b>bounding</b> <b>boxes.</b> Familiar methods, such as the one by Butz, can result in curve sections whose <b>bounding</b> <b>boxes</b> are a factor Omega(2 ^{d/ 2 }) larger than the volume traversed by that section of the curve. Most of the volume bounded by such <b>bounding</b> <b>boxes</b> would not contain any data points. In this paper we present a new way of generalizing Hilbert's curve to higher dimensions, which results in much tighter bounding boxes: they have at most 4 times the volume of the part of the curve covered, independent of the number of dimensions. Moreover, we prove that a factor 4 is asymptotically optimal...|$|R
5000|$|... #Caption: Comparison of <b>bounding</b> <b>box</b> of Panamax and Seawaymax.|$|E
5000|$|<b>Bounding</b> <b>box,</b> {{the minimal}} axis-aligned hyperrectangle that {{contains}} all geometric data ...|$|E
5000|$|... #Caption: An ellipse, its minimum <b>bounding</b> <b>box,</b> and its {{director}} circle.|$|E
40|$|We {{present an}} {{algorithm}} that recognizes tables in document images and extracts their structural information. We use region growing to locate <b>bounding</b> <b>boxes</b> around text, and cluster them into columns by examining spatial relationships between <b>bounding</b> <b>boxes</b> and their vertical neighbors. Once initial clustering is complete, {{a series of}} post-processing steps are applied to the clusters to find columns that line up horizontally and may form tables. ...|$|R
30|$|The {{foreground}} image {{is used to}} generate blobs or groups of connected pixels, which are described by their <b>bounding</b> <b>boxes</b> (shown in Figure 1 as red rectangles). At this point, {{the rest of the}} processing is carried out only on the data structures that describe these <b>bounding</b> <b>boxes,</b> so that no other image processing stage is required. Therefore, the computational cost of the following steps is significantly reduced.|$|R
40|$|In this article, we {{developed}} a Bayesian model to characterize text line and text block structures on document images using the text word <b>bounding</b> <b>boxes.</b> We posed the extraction problem as finding the text lines and text blocks that maximize the Bayesian probability of the text lines and text blocks given the text word <b>bounding</b> <b>boxes.</b> In particular, we derived the so-called probabilistic linear displace-ment model (PLDM) to model the text line structures from text word <b>bounding</b> <b>boxes.</b> We also developed an augmented PLDM model to characterize the text block structures from text line <b>bounding</b> <b>boxes.</b> By systematically gathering statistics from a large population of document images, {{we are able to}} validate our models through experiments and determine the proper model parameters. We de-signed and implemented an iterative algorithm that used these probabilistic models to extract the text lines and text blocks. The quantitative performances of the algorithm in terms of the rates of miss, false, correct, splitting, merging, and spurious detections of the text lines and text blocks are reported. o 1996 John Wiley & Sons, Inc. 1...|$|R
5000|$|... {{geometric}} {{information for}} each element with a <b>bounding</b> <b>box</b> [...] "bbox" ...|$|E
50|$|From these results, geo-references are {{extracted}} {{and assigned}} spatial coordinates. A <b>bounding</b> <b>box</b> is then applied and the <b>bounding</b> <b>box</b> {{is used to}} find coordinates of other regions and points, apparently lying outside the candidate region. Thus {{it is possible to}} compute a boundary for the imprecise region using the points inside and outside.|$|E
5000|$|Complete {{control over}} the {{generation}} of molecular surfaces (<b>bounding</b> <b>box</b> and resolution) ...|$|E
40|$|In any {{hierarchical}} radiosity method, {{the most}} expensive part is {{the evaluation of the}} visibility. Many methods use sampling and ray casting to determine this term. Space partitioning considerably speeds up the computation process. Partitioning with shafts, leads to a quite precise subdivision of 3 D space, as far as interactions between pair of objects are concerned. The use of <b>bounding</b> <b>boxes</b> allows to speed-up many computations, such as collision or intersection detection. Those intersections can profitably be used to determine visibility between objects. Axis aligned <b>bounding</b> <b>boxes</b> allow very fast evaluation of intersection, but are not that precise, whereas oriented <b>bounding</b> <b>boxes,</b> much closer to the 3 D object achieve more accurate visibility evaluation. We present here a method that allow to quickly and accurately determine the relative position of an object and a shaft (inside, outside, occluding), and how to implement it in a hierarchical radiosity algorithm, in order to limit the hierarchy construction where not necessary. Keywords: Radiosity, shaft, visibility, occlusion, <b>bounding</b> <b>boxes.</b> 1 Institut de Recherche en Informatique de Toulouse, Computer Science Research Institute, Toulouse 1...|$|R
40|$|This paper {{describes}} a motion-adaptive indexing scheme for efficient evaluation of moving continual queries (MCQs) over moving objects. It uses {{the concept of}} motion-sensitive <b>bounding</b> <b>boxes</b> (MSBs) to model moving objects and moving queries. These <b>bounding</b> <b>boxes</b> automatically adapt their sizes to the dynamic motion behaviors of individual objects. Instead of indexing frequently changing object positions, we index less frequently changing object and query MSBs, where updates to the <b>bounding</b> <b>boxes</b> are needed only when objects and queries move across the boundaries of their boxes. This helps decrease the number of updates to the indexes. More importantly, we use predictive query results to optimistically precalculate query results, decreasing the number of searches on the indexes. Motion-sensitive <b>bounding</b> <b>boxes</b> are used to incrementally update the predictive query results. Furthermore, we introduce the concepts of guaranteed safe radius and optimistic safe radius to extend our motion-adaptive indexing scheme to evaluating moving continual k-nearest neighbor ðkNNÞ queries. Our experiments show that the proposed motion-adaptive indexing scheme is efficient {{for the evaluation of}} both moving continual range queries and moving continual kNN queries...|$|R
40|$|The {{traditional}} algorithm {{analysis for}} geometric problems {{has focused on}} worst-case asymptotic complexity. Such analyses have often concluded that certain simple algorithms are worthless because they have poor worst-case performance. However, empirical experience shows that these algorithms tend to perform very well in practice. How does one explain this disparity? This dissertation uses shape sensitive analysis to explores this phenomenon by investigating two problems: the use of <b>bounding</b> <b>boxes</b> in collision detection, and the complexity of geometric permutations in visibility computation. <b>Bounding</b> <b>boxes</b> are used widely in computer graphics as simple approximations of complex objects. Because of their simpler shape, computing with boxes is almost always easier and faster than with the original objects. Experience {{has shown that the}} use of <b>bounding</b> <b>boxes</b> greatly impr [...] ...|$|R
5000|$|... #Caption: A 3D {{model with}} its <b>bounding</b> <b>box</b> drawn in dashed lines.|$|E
50|$|The minimum {{bounding}} rectangle (MBR), {{also known}} as <b>bounding</b> <b>box</b> or envelope, {{is an expression of}} the maximum extents of a 2-dimensional object (e.g. point, line, polygon) or set of objects within its (or their) 2-D (x, y) coordinate system, in other words min(x), max(x), min(y), max(y). The MBR is a 2-dimensional case of the minimum <b>bounding</b> <b>box.</b>|$|E
50|$|The area of {{a drawing}} {{is the size of}} its {{smallest}} <b>bounding</b> <b>box,</b> relative to the closest distance between any two vertices. Drawings with smaller area are generally preferable to those with larger area, because they allow the features of the drawing to be shown at greater size and therefore more legibly. The aspect ratio of the <b>bounding</b> <b>box</b> may also be important.|$|E
2500|$|<b>Bounding</b> <b>boxes</b> (or <b>Bounding</b> volumes) {{are most}} often a 2D {{rectangle}} or 3D cuboid, but other shapes are possible.|$|R
50|$|Even in Roman fonts, letters such as Q, a, f are redesigned. The overall <b>bounding</b> <b>boxes</b> were widened in Optima nova.|$|R
40|$|Object {{detection}} {{with deep}} neural networks is often performed by passing {{a few thousand}} candidate <b>bounding</b> <b>boxes</b> through a deep neural network for each image. These <b>bounding</b> <b>boxes</b> are highly correlated since they originate from the same image. In this paper we investigate how to exploit feature occurrence at the image scale to prune the neural network which is subsequently applied to all <b>bounding</b> <b>boxes.</b> We show that removing units which have near-zero activation in the image allows us to significantly {{reduce the number of}} parameters in the network. Results on the PASCAL 2007 Object Detection Challenge demonstrate that up to 40 % of units in some fully-connected layers can be entirely eliminated with little change in the detection result. Comment: Accepted at ICLR 2016 workshop track as a poster presentatio...|$|R
