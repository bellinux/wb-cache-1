96|220|Public
25|$|NAND flash {{also uses}} floating-gate transistors, {{but they are}} {{connected}} {{in a way that}} resembles a NANDgate: several transistors are connected in series, and the <b>bit</b> <b>line</b> is pulled low only if all the word lines are pulled high (above the transistors' VT). These groups are then connected via some additional transistors to a NOR-style <b>bit</b> <b>line</b> array {{in the same way that}} single transistors are linked in NORflash.|$|E
25|$|To read data, {{first the}} desired group is {{selected}} (in {{the same way}} that a single transistor is selected from a NOR array). Next, most of the word lines are pulled up above the VT of a programmed bit, while one of them is pulled up to just over the VT of an erased bit. The series group will conduct (and pull the <b>bit</b> <b>line</b> low) if the selected bit has not been programmed.|$|E
2500|$|In NOR flash, {{each cell}} has one end {{connected}} directly to ground, {{and the other}} end connected directly to a <b>bit</b> <b>line.</b> This arrangement is called [...] "NOR flash" [...] because it acts like a NORgate: {{when one of the}} word lines (connected to the cell's CG) is brought high, the corresponding storage transistor acts to pull the output <b>bit</b> <b>line</b> low. NOR flash continues to be the technology of choice for embedded applications requiring a discrete non-volatile memory device. The low read latencies characteristic of NORdevices allow for both direct code execution and data storage in a single memory product.|$|E
5000|$|Read <b>bit</b> <b>lines</b> {{are often}} precharged to {{something}} between Vdd and Vss.|$|R
25|$|Despite the {{additional}} transistors, {{the reduction in}} ground wires and <b>bit</b> <b>lines</b> allows a denser layout and greater storage capacity per chip. (The ground wires and <b>bit</b> <b>lines</b> are actually much wider than the lines in the diagrams.) In addition, NANDflash is typically permitted to contain {{a certain number of}} faults (NORflash, as is used for a BIOSROM, is expected to be fault-free). Manufacturers try to maximize the amount of usable storage by shrinking the size of the transistors.|$|R
50|$|The {{technique}} of microprogramming as first described by Maurice Wilkes {{in terms of}} a second diode matrix added to a diode matrix control store. Later computers used a variety of alternative implementations of the control store, but eventually returned to a diode matrix or transistor matrix. A person would microprogram the control store on such early computers by manually attaching diodes to selected intersections of the word <b>lines</b> and <b>bit</b> <b>lines.</b> In schematic diagrams, the word lines are usually horizontal and the <b>bit</b> <b>lines</b> are usually vertical.|$|R
6000|$|... 'Ta duinhe-wassel might please himsell; ta auld rudas loon {{had never}} done Callum nae ill. But here's a <b>bit</b> <b>line</b> frae ta Tighearna, tat he bade me gie your honour ere I came back.' ...|$|E
6000|$|... "Hegh, sirs, and ye were sparing of your trouble, that wadna write a <b>bit</b> <b>line,</b> or send a bit message!--Ye might hae thought folk wad hae been vexed eneugh about ye, forby {{undertaking}} journeys, {{and hiring}} folk to seek for your dead body." ...|$|E
6000|$|... "And ye'll say to {{him from}} ME that a more honorable, noble, and generous man, and a kinder, truer, and better friend than he, cannot be found anywhere! And that the foolishest and most extravagant thing he ever did {{is better than the}} wisest and most prudent thing that anybody else ever did, could, or would do! And if he was a bit overproud--it was only because those about him were overproud and foolish. And you'll tell him that we're wearying for him! And when you give him that daft letter from father you'll give him this <b>bit</b> <b>line</b> from me," [...] she went on rapidly as she laid a tiny note in his hand. [...] "And," [...] with wicked dancing eyes that seemed to snap the last bond of repression, [...] "ye'll give him THAT too, and say I sent it!" ...|$|E
40|$|In {{very deep}} {{sub-micron}} designs, cross coupling capacitances {{become the dominant}} factor of the total bus loading and {{have a significant impact}} on the energy consumption. In this paper, we propose a re-configurable bus encoding scheme, which is based on the correlation among the <b>bit</b> <b>lines,</b> to reduce the energy consumption of the cross coupling capacitances of the instruction buses. The instruction is encoded by reordering the <b>bit</b> <b>lines</b> during compilation time to reduce the total cross coupling switching. A crossbar is used as a decoder to map back the data to the original instruction codeword before sending to the instruction decoder. The reordering can be reconfigured during run-time by using different configurations in the crossbar. Experimental results show that by using the proposed scheme, significant energy reduction, on average about 20 %, can be achieved. Comparisons with existing fixed <b>bit</b> <b>lines</b> reordering encoding scheme have also been made and on average more than 15 % reduction can be obtained using our method...|$|R
5000|$|Write <b>bit</b> <b>lines</b> may be braided, so {{that they}} couple equally to the nearby read bitlines. Because write bitlines are full swing, they can cause {{significant}} disturbances on read bitlines.|$|R
3000|$|..., the {{embedding}} begins {{from the}} first bit plane (also known as the least significant <b>bits)</b> <b>line</b> by line. If there is more secret information bit stream to be embedded, it can be embedded into the higher level until it is finished. While [...]...|$|R
6000|$|Mause could forbear no longer. Proud alike of her {{cause and}} her sufferings, she {{commenced}} with an affected humility of tone, [...] "It has pleased Heaven, an it like your honour, to distinguish us by a visitation"--"Deil's in {{the wife and}} nae gude!" [...] whispered Cuddie to his mother, [...] "an ye come out wi' your whiggery, they'll no daur open a door to us through the haill country!" [...] Then aloud and addressing Morton, [...] "My mother's auld, stir, and she has rather forgotten hersell in speaking to my leddy, that canna weel bide to be contradickit, (as I ken nae-body likes it if they could help themsells,) especially by her ain folk,--and Mr Harrison the steward, and Gudyill the butler, they're no very fond o' us, and it's ill sitting at Rome and striving wi' the Pope; sae I thought it best to flit before ill came to waur--and here's a wee <b>bit</b> <b>line</b> to your honour frae a friend will maybe say some mair about it." ...|$|E
50|$|For {{reading the}} Word line drives a logic 1 (voltage high) into {{the gate of}} the nMOS {{transistor}} (3) which makes it conductive and the charge stored at the capacitor (4) is then transferred to the <b>bit</b> <b>line.</b> The <b>bit</b> <b>line</b> will have a parasitic capacitance (5) that will drain part of the charge and slow the reading process. The capacitance of the <b>bit</b> <b>line</b> will determine the needed size of the storage capacitor (4). It is a trade-off. If the storage capacitor is too small, the voltage of the <b>bit</b> <b>line</b> would take too much time to raise or not even rise above the threshold needed by the amplifiers {{at the end of the}} <b>bit</b> <b>line.</b> Since the reading process degrades the charge in the storage capacitor (4) its value is rewritten after each read.|$|E
50|$|Dynamic RAM is {{arranged}} in a rectangular array. Each row is selected by a horizontal word line. Sending a logical high signal along a given row enables the MOSFETs present in that row, connecting each storage capacitor to its corresponding vertical <b>bit</b> <b>line.</b> Each <b>bit</b> <b>line</b> is connected to a sense amplifier that amplifies the small voltage change produced by the storage capacitor. This amplified signal is then output from the DRAM chip as well as driven back up the <b>bit</b> <b>line</b> to refresh the row.|$|E
50|$|If {{the word}} line is not asserted, the access {{transistors}} M5 and M6 disconnect the cell from the <b>bit</b> <b>lines.</b> The two cross-coupled inverters formed by M1M4 {{will continue to}} reinforce each other {{as long as they}} are connected to the supply.|$|R
40|$|Abstract: The {{gradually}} increasing {{performance of}} memory devices increases {{the complexity of}} memory circuitry and causes new, previously unknown, failure mechanisms to take place. This paper describes a recently identified failure mechanism, observed during the design stage of a high speed DRAM. The failure mechanism {{is caused by the}} inability of the precharge circuits to set the proper voltages on memory <b>bit</b> <b>lines</b> {{at the end of each}} operation, a problem that is made even worse by the coupling effects <b>bit</b> <b>lines</b> have with each other. This paper gives a detailed analysis of this problem, and suggests effective tests to detect it. The paper also describes the results of an industrial study performed to validate the effectiveness of the new tests...|$|R
50|$|When no word line is active, {{the array}} is idle and the <b>bit</b> <b>lines</b> {{are held in}} a precharged state, with a voltage halfway between high and low. This {{indeterminate}} signal is deflected towards high or low by the storage capacitor when a row is made active.|$|R
50|$|NAND flash {{also uses}} floating-gate transistors, {{but they are}} {{connected}} {{in a way that}} resembles a NAND gate: several transistors are connected in series, and the <b>bit</b> <b>line</b> is pulled low only if all the word lines are pulled high (above the transistors' VT). These groups are then connected via some additional transistors to a NOR-style <b>bit</b> <b>line</b> array {{in the same way that}} single transistors are linked in NOR flash.|$|E
50|$|Where Cwire {{denotes the}} <b>bit</b> <b>line</b> wiring {{capacitance}} {{per unit length}} and Ccell denotes the loading due to a single cell hanging off the <b>bit</b> <b>line.</b> The clock capacitance {{is based on the}} assumption of an H-tree distribution network. Activity is modelled using a UWN model.As can be seen by the equation the power consumption of each components is related to the number of columns (Ncol) and rows (Nrow) in the memory array.|$|E
50|$|Both {{northbound}} and southbound links {{can operate}} {{at full speed}} with one <b>bit</b> <b>line</b> disabled, by discarding 12 bits of CRC information per frame.|$|E
40|$|The {{effect of}} copper {{interconnects}} on memories is investigated. HSPICE simulations indicate a 30 % {{improvement in the}} access time of a 2 K 16 bit SRAM with copper interconnects compared to aluminum. Circuit techniques that utilize the transmission-line effect of copper interconnects for low-power operation are presented. HSPICE simulation results indicate upto a 25 % energy savings in the <b>bit</b> <b>lines</b> for write operations. 1. Introduction Copper interconnects open many new avenues for circuit techniques that can exploit their low resistance compared to traditional aluminum interconnects. Memories are a class of circuits that can extensively benefit from copper interconnects for both speed and power. Typically, memory circuits contain long interconnects such as address, word, <b>bit,</b> and data <b>lines.</b> An approach to reduce delay in long interconnects is to break them in shorter pieces and use repeaters to drive the shorter pieces. This approach {{does not apply to}} <b>bit</b> <b>lines</b> because it is inc [...] ...|$|R
40|$|Low power SRAM cell is a {{critical}} component in modern VLSI systems. The major portion of the power dissipation in the SRAM cell is due to large voltage swing on the <b>bit</b> <b>lines</b> during write operation. In this paper, a low-power reliable (LPR) SRAM cell is proposed for minimizing the power consumption and to enhance the performance. A new write mechanism is proposed to reduce the charging/discharging activity on the respective <b>bit</b> <b>lines.</b> The cell is simulated in terms of power, delay and static noise margin (SNM). The simulated results show that write and read power of the proposed LPR cell are reduced up to 78 % and 50 % at 0. 7 V (in 65 nm technology) respectively compared to the 6 T cell. The proposed design achieves 2. 4 × higher read static noise margin (SNM) than the 6 T cell...|$|R
5000|$|... #Caption: Gate level {{circuit diagram}} {{of a single}} <b>bit</b> 4-to-2 <b>line</b> encoder ...|$|R
5000|$|Contrary to {{ordinary}} coincident-current magnetic-core memory, {{which was used}} for RAM at the time, the ferrite cores in a core rope are just used as transformers. The signal from a word line wire passing through a given core is coupled to the <b>bit</b> <b>line</b> wire and interpreted as a binary [...] "one", while a word line wire that bypasses the core is not coupled to the <b>bit</b> <b>line</b> wire and is read as a [...] "zero". In the AGC, up to 64 wires could be passed through a single core.|$|E
5000|$|Read bit lines often swing only a {{fraction}} of the way to Vdd or Vss. A sense amplifier converts this small-swing signal into a full logic level. Small swing signals are faster because the <b>bit</b> <b>line</b> has little drive but a great deal of parasitic capacitance.|$|E
5000|$|Diode matrix ROM, used {{in small}} amounts in many {{computers}} in the 1960s as well as electronic desk calculators and keyboard encoders for terminals. This ROM was programmed by installing discrete semiconductor diodes at selected locations between a matrix of word line traces and <b>bit</b> <b>line</b> traces on a printed circuit board.|$|E
5000|$|The long {{horizontal}} lines connecting each row {{are known}} as word-lines. Each column of cells is composed of two bit-lines, each connected to every other storage cell in the column (the illustration to the right does not include this important detail). They are generally known as the [...] "+" [...] and [...] "−" [...] <b>bit</b> <b>lines.</b>|$|R
5000|$|Jonas Brothers - Jonas Brothers, A Little <b>Bit</b> Longer, <b>Lines,</b> Vines and Trying Times ...|$|R
40|$|Abstract- Data in {{conventional}} six transistor (6 T) static {{random access memory}} (SRAM) cells are vulnerable to noise due to the direct access to the data storage nodes through the <b>bit</b> <b>lines</b> during a read operation. A new nine transistor (9 T) SRAM cell is proposed in this paper for simultaneously enhancing read stability and reducing leakage power consumption. The proposed 9 T SRAM cell isolates the data from the <b>bit</b> <b>lines</b> during a read operation. The read static-noise-margin (SNM) of the proposed circuit is enhanced by 2 × as compared to a standard 6 T SRAM cell in a 65 nm CMOS technology. Furthermore, leakage power consumption of the new 9 T SRAM cell is reduced by 22. 9 % as compared to the 6 T SRAM cell. The read stability enhancement and leakage power reduction provided by the new circuit technique are also verified under process parameter variations. Index Terms – Low leakage, SRAM, static noise margin, process variations, read stability, noise immunity...|$|R
50|$|All {{the bits}} at {{the output of}} one counter, together, {{represent}} a digital bus. Thus, in a PLL frequency synthesizer there are two buses, one for the reference counter, the other for the output (or VCO) counter. In a uni-bit PLL, of the two digital buses, only one <b>bit</b> (<b>line)</b> of each is used. All {{the rest of the}} information is lost.|$|E
5000|$|The {{writing process}} is similar, the {{difference}} is that now the new value that we want to store in the memory cell is driven into the <b>bit</b> <b>line</b> (...) and into its complement (...) [...] Next transistors M5 and M6 are open by driving a logic one (voltage high) into the word line (...) connecting the bit lines to the loop. There are two possible cases: ...|$|E
50|$|The {{writing process}} is the easiest, the desired value logic 1 (high voltage) or logic 0 (low voltage) is driven into the <b>bit</b> <b>line.</b> The word line {{activates}} the nMOS transistor (3) connecting it to the storage capacitor (4). The only issue is to keep it open enough time {{to ensure that the}} capacitor is fully charged or discharged before turning off the nMOS transistor (3).|$|E
40|$|Data in {{conventional}} six transistor (6 T) static {{random access memory}} (SRAM) cells are vulnerable to noise due to the direct access to the data storage nodes through the <b>bit</b> <b>lines</b> during a read operation. A new nine transistor (9 T) SRAM cell is proposed in this paper for simultaneously enhancing read stability and reducing leakage power consumption. The proposed 9 T SRAM cell isolates the data from the <b>bit</b> <b>lines</b> during a read operation. The read static-noise-margin (SNM) of the proposed circuit is enhanced by 2 × as compared to a standard 6 T SRAM cell in a 65 nm CMOS technology. Furthermore, leakage power consumption of the new 9 T SRAM cell is reduced by 22. 9 % as compared to the 6 T SRAM cell. The read stability enhancement and leakage power reduction provided by the new circuit technique are also verified under process parameter variations. © 2007 IEEE...|$|R
40|$|SUMMARY This paper {{presents}} a novel low-energy memory design technique based on variable analysis for on-chip data memory (RAM) in application-specific systems, which called VAbM technique. It targets {{the exploitation of}} both data locality and effective data width of variables to reduce energy consumed by data transfer and storage. Variables with higher access frequency and smaller effective data width are assigned into a smaller low-energy memory with fewer <b>bit</b> <b>lines</b> and word lines, placed closer the processor. Under constraints {{of the number of}} memory banks, VAbM technique use variable analysis results to perform allocating and assigning on-chip RAM into multiple banks, which have different size with different number of word lines and different number of <b>bit</b> <b>lines</b> tailored to each application requirements. Experimental results with several real embedded applications demonstrate significant energy reduction up to 64. 8 % over monolithic memory, and 27. 7 % compared to memory designed by memory banking technique...|$|R
40|$|Intermediate Signed Digit (SD) {{representation}} {{can facilitate}} fast and compact VLSI implementations of partial product accumulation trees. It achieves a reduction ratio of 2 : 1 {{at every level}} and also leads to more regular layouts. Its disadvantage is {{that the number of}} <b>bit</b> <b>lines</b> that need to routed can be high. This can lead to a significant area overhead especially at smaller feature sizes where the wire/interconnect area and delay can be dominant. A Hybrid Signed Digit (HSD) representation lets some of the digits be unsigned bits, thereby reducing the number of <b>bit</b> <b>lines.</b> By arbitrarily varying the positions of and distances between consecutive signed digits, this representation can trade off latency for area and offers a continuum of choices between the two’s complement representation {{on the one hand and}} fully Signed Digit (FSD or simply SD) representation on the other. In this paper, we illustrate an A ¡ T(area ¢ delay) efficient multiplier based on the HSD– 1 representation which is one of the many possible HSD formats, wherein every alternate digit is signed and the rest are unsigned (ordinary) bits. It is seen that multipliers based on HSD– 1 format require more transistors than those based on FSD format. However, they require fewer <b>bit</b> <b>lines</b> to be routed, which substantially reduces the interconnect area; thereby leading to a reduction in the total VLSI area and a lower A ¡ T product. The design reaffirms that the interconnect area can be siginficant especially at small feature sizes. 1...|$|R
