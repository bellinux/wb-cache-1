3|4|Public
40|$|The {{concurrent}} {{fault simulation}} technique {{is widely used}} to analyse the behavior of digital circuits {{in the presence of}} faults. We show how this technique can be applied to metal-oxide-semiconductor (MOS) digital circuits when modeled at the switch-level as a set of charge storage nodes connected by <b>bidirectional</b> <b>transistor</b> switches. The algorithm we present is capable of analysing the behavior {{of a wide variety of}} MOS circuit failures, such as stuck-at-zero or stuck-at-one nodes, stuck-open or stuck-closed transistors, or resistive opens or shorts. We have implemented a fault simulator FMOSSIM based on this algorithm. The capabilities and the peformance of this program demonstrate the advantages of combining switch-level and concurrent simulation techniques...|$|E
40|$|Thls thesis {{presents}} an algorithm for fault simulation of metal-oxide-semiconductor (MOS), field-effect transistor (FET) digital circuits. The circuits are modeled at the switch-level as networks of charge storage nodes connected with <b>bidirectional</b> <b>transistor</b> switches. Since the transistor {{structure of a}} NOS circuit is explicitly represented by its switch-level network, and since the circuit's logical behavior is modeled directly, the algorithm describes the behavior of defective MOS circuits with more accuracy than is possible with traditional logic gate fault simulation techniques. The algorithm is capable of analyzing a variety of MOS circuit defects including the classical stuck-at-zero and stuck-at-one node faults, stuck-open and stuck-closed transistor faults, and resistive short and open faults in wires. By using the concurrent simulation technique, the algorithm requires far less computation than a simple serial simulation of each defective circuit...|$|E
40|$|This paper {{presents}} measurements obtained {{while performing}} fault simulations of MOS circuits modeled at the switch level. In this model the transistor {{structure of the}} circuit is represented explicitly as a network of charge storage nodes connected by <b>bidirectional</b> <b>transistor</b> switches. Since the logic model of the simulator closely matches the actual structure of MOS circuits, such faults as stuck-open and closed transistors as well as short and open-circuited wires can be simulated. By using concurrent simulation techniques, we obtain a performance level comparable to fault simulators using logic gate models. Our measurements indicate that fault simulation times grow {{as the product of}} the circuit size and number of patterns, assuming the number of faults to be simulated is proportional to the circuit size. However, fault simulation times depend strongly on {{the rate at which the}} test patterns detect the faults...|$|E
5000|$|... #Caption: A six-transistor CMOS [...] SRAM [...] cell. M5 and M6 are <b>bidirectional</b> pass <b>transistors.</b>|$|R
40|$|The program TRANALYZE {{generates a}} gate-level {{representation}} of an MOS transistor circuit. The resulting model contains only four-valued unit and zero delay logic primitives, suitable for evaluation by conventional gate-level simulators and hardware simulation accelerators. TRANALYZE {{has the same}} generality and accuracy as switch-level simulation, generating models {{for a wide range}} of technologies and design styles, while expressing the detailed effects of <b>bidirectional</b> <b>transistors,</b> stored charge, and multiple signal strengths. It produces models with size comparable to ones generated by han...|$|R
40|$|The cosmos {{simulator}} provides {{fast and}} accurate switch-level modeling of mos digital circuits. It attains high performance by preprocessing the transistor network into a functionally equivalent Boolean representation. This description, {{produced by the}} symbolic analyzer anamos, captures all aspects of switch-level networks including <b>bidirectional</b> <b>transistors,</b> stored charge, different signal strengths, and indeterminate (X) logic values. The lgcc program translates the Boolean representation into a set of machine language evaluation procedures and initialized data structures. These procedures and data structures are compiled along with code implementing the simulation kernel and user interface to produce the simulation program. The simulation program runs {{an order of magnitude}} faster than our previous simulator mossim ii...|$|R
40|$|The COSMOS {{symbolic}} fault simulator generates {{test sets}} for combinational and sequential MOS circuits represented at the switch level. All aspects of switch-level networks including <b>bidirectional</b> <b>transistors,</b> stored charge, different signal strengths, and indeterminate (X) logic values are captured. To generate tests for a circuit, the program derives Boolean functions representing {{the behavior of}} the good and faulty circuits over a sequence of symbolic input patterns. It then determines a set of assignments to the input variables that will detect all faults. Symbolic simulation provides a natural framework for the user to supply an overall test strategy, letting the program determine the detailed conditions to detect a set of faults. Symbolic preprocessing of switch-level networks, combined with efficient Boolean manipulation makes this approach feasible...|$|R

