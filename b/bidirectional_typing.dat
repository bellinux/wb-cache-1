2|54|Public
40|$|Bidirectional typechecking, {{in which}} terms either {{synthesize}} a type or are checked against a known type, has become popular for its scalability (unlike Damas-Milner type inference, <b>bidirectional</b> <b>typing</b> remains decidable even for very expressive type systems), its error reporting, and its relative ease of implementation. Following design principles from proof theory, <b>bidirectional</b> <b>typing</b> {{can be applied}} to many type constructs. The principles underlying a bidirectional approach to polymorphism, however, are less obvious. We give a declarative, bidirectional account of higher-rank polymorphism, grounded in proof theory; this calculus enjoys many properties such as eta-reduction and predictability of annotations. We give an algorithm for implementing the declarative system; our algorithm is remarkably simple and well-behaved, despite being both sound and complete. Comment: 13 pages + 78 -page appendix, to appear in International Conference on Functional Programming (ICFP) 201...|$|E
40|$|Bidirectional typechecking, {{in which}} terms either {{synthesize}} a type or are checked against a known type, has become popular for its scalability, its error reporting, and its ease of implementation. Fol-lowing principles from proof theory, <b>bidirectional</b> <b>typing</b> can be ap-plied to many type constructs. The principles underlying a bidirec-tional approach to indexed types (generalized algebraic datatypes) are less clear. Building on proof-theoretic treatments of equality, we give a declarative specification of typing based on focaliza-tion. This approach permits declarative rules for coverage of pat-tern matching, {{as well as}} support for first-class existential types using a focalized subtyping judgment. We use refinement types to avoid explicitly passing equality proofs in our term syntax, making our calculus close to languages such as Haskell and OCaml. An explicit rule deduces when a type is principal, leading to reliable substitution principles for a rich type system with significant type inference. We also give a set of algorithmic typing rules, and prove that it is sound and complete {{with respect to the}} declarative system. The proof requires a number of technical innovations, including proving soundness and completeness in a mutually-recursive fashion. 1...|$|E
50|$|Matita {{implements}} a <b>bidirectional</b> <b>type</b> inference algorithm exploiting both inferred {{and expected}} types.|$|R
40|$|A {{controller}} is {{an environment}} {{for a system}} that achieves a particular control objective by providing inputs to the system without constraining the choices of the system. For synchronous systems, where system and controller make simultaneous and interdependent choices, {{the notion that a}} controller must not constrain the choices of the system can be formalized by type systems for composability. In a previous paper, we solved the control problem for static and dynamic types: a static type is a dependency relation between inputs and outputs, and composition is well-typed if it does not introduce cyclic dependencies; a dynamic type is a set of static types, one for each state. Static and dynamic types, however, cannot capture many important digital circuits, such as gated clocks, bidirectional buses, and random-access memory. We therefore introduce more general type systems, so-called dependent and <b>bidirectional</b> <b>types,</b> for modeling these situations, and we solve the corresponding control problems. In a system with a dependent type, the dependencies between inputs and outputs are determined gradually through a game of the system against the controller. In a system with a <b>bidirectional</b> <b>type,</b> also the distinction between inputs and outputs is resolved dynamically by such a game. The game proceeds in several rounds. In each round the system and the controller choose to update some variables dependent on variables that have already been updated. The solution of the control problem for dependent and <b>bidirectional</b> <b>types</b> is based on algorithms for solving these games...|$|R
40|$|Completely {{annotated}} lambda terms (such as are {{arrived at}} via the straightforward encodings {{of various types}} from System F) contain much redundant type information. Consequently, the completely annotated forms are almost never used in practice, since partially annotated forms can be defined which still allow syntax directed type checking. An additional optimization that is used in some proof and type systems is {{to take advantage of}} the context of occurrence of terms to further elide <b>type</b> information using <b>bidirectional</b> <b>type</b> checking rules. While this technique is generally effective, we show that there exist bidirectional terms which exhibit asymptotic increases in the size of their type decorations when sequentialized into a named-form calculus (a common first step in compilation). In this paper, we introduce a refinement of the <b>bidirectional</b> <b>type</b> system based on strict logic which allows additional type decorations to be eliminated, and show that it is well-behaved under sequentialization. Categories and Subject Descriptor...|$|R
40|$|The {{paradigm}} of type-based termination is explored for functional programming with recursive data types. The article introduces, a lambda-calculus with recursion, inductive types, subtyping and bounded quanti cation. Decorated type variables representing approximations of inductive types {{are used to}} track the size of function arguments and return values. The system is shown to be type safe and strongly normalizing. The main novelty is a <b>bidirectional</b> <b>type</b> checking algorithm whose soundness is established formally...|$|R
40|$|Abstract. Martin-Löf’s Logical Framework is {{extended}} by strong Σ-types and presented via judgmental equality with rules for extensionality and surjective pairing. Soundness of the framework rules is proven via a generic PER model on untyped terms. An algorithmic {{version of the}} framework is given through an untyped βη-equality test and a <b>bidirectional</b> <b>type</b> checking algorithm. Completeness is proven by instantiating the PER model with η-equality on β-normal forms, which is shown equivalent to the algorithmic equality. 1...|$|R
40|$|Abstract. The {{paradigm}} of type-based termination is explored for functional programming with recursive data types. The article introduces Λ + µ, a lambda-calculus with recursion, inductive types, subtyping and bounded quantification. Decorated type variables representing approximations of inductive types {{are used to}} track the size of function arguments and return values. The system is shown to be type safe and strongly normalizing. The main novelty is a <b>bidirectional</b> <b>type</b> checking algorithm whose soundness is established formally...|$|R
40|$|We {{devise a}} typed {{equality}} judgement for a predicative version of Miquel’s Implicit Calculus and complete {{it with a}} calculus for explicit substitutions. The resulting theory IITT, Implicit Intensional Type Theory, is shown consistent by a partial equivalence model. We further present a <b>bidirectional</b> <b>type</b> checking and extraction algorithm and briefly sketch the integration of another notion of irrelevance, Awodey and Bauer’s bracket types. This work is aimed at providing a solid an practical foundation for extraction of efficient programs from type theory...|$|R
30|$|The {{existence}} of globally attracting waves for arbitrary wave number in some range {{is reminiscent of}} the inertia-free dynamics of tilted Frenkel–Kontorova chains, which constitute coupled oscillator models for spatially modulated structures in solid-state physics [23]. There are, however, essential differences between the two situations. Instead of a unidirectional interaction, the coupling is of <b>bidirectional</b> <b>type</b> in Frenkel–Kontorova chains and involves left and right neighbors. More importantly, the overall dynamics there is monotonic and, as mentioned in the introduction, this property is critical for the proof of the existence and stability of waves [24].|$|R
40|$|AbstractUniaxially {{anisotropic}} antiferromagnets {{in a field}} {{along the}} easy axis are studied {{with the help of}} ground state considerations and Monte Carlo simulations. For classical models, the XXZ model as well as variants, we analyze the role of non-collinear spin configurations of biconical or <b>bidirectional</b> <b>type</b> interpolating between the well-known antiferromagnetic and spin–flop structures. Possible experimental applications to layered cuprate antiferromagnets are discussed. Finally, results of quantum Monte Carlo simulations for the S= 1 / 2 XXZ model on a square lattice are presented, and compared with previous findings...|$|R
40|$|In this paper, {{we present}} an {{explicit}} substitution calculus which distinguishes between ordinary bound variables and meta-variables. Its typing discipline {{is derived from}} contextual modal type theory. We first present a dependently typed lambda calculus with explicit substitutions for ordinary variables and explicit meta-substitutions for meta-variables. We then present a weak head normalization procedure which performs both substitutions lazily and {{in a single pass}} thereby combining substitution walks for the two different classes of variables. Finally, we describe a <b>bidirectional</b> <b>type</b> checking algorithm which uses weak head normalization and prove soundness. Comment: In Proceedings LFMTP 2010, arXiv: 1009. 218...|$|R
40|$|This paper explores a {{new point}} in the design space of {{functional}} programming: functional programming with dependentlytyped higher-order data structures described in the logical framework LF. This allows us to program with proofs as higher-order data. We present a decidable <b>bidirectional</b> <b>type</b> system that distinguishes between dependently-typed data and computations. To support reasoning about open data, our foundation makes contexts explicit. This provides us with a concise characterization of open data, which is crucial to elegantly describe proofs. In addition, we present an operational semantics for this language based on higherorder pattern matching for dependently typed objects. Based on this development, we prove progress and preservation...|$|R
5000|$|Another {{alternative}} {{presentation of}} simply typed lambda calculus {{is based on}} <b>bidirectional</b> <b>type</b> checking, which requires more type annotations than Hindley-Milner inference but is easier to describe. The type system {{is divided into two}} judgments, representing both checking and synthesis, written [...] and [...] respectively. Operationally, the three components , , and [...] are all inputs to the checking judgment , whereas the synthesis judgment [...] only takes [...] and [...] as inputs, producing the type [...] as output. These judgments are derived via the following rules:Observe that rules 1-4 are nearly identical to rules (1)-(4) above, except for the careful choice of checking or synthesis judgments. These choices can be explained like so: ...|$|R
40|$|Bidirectional typechecking {{has become}} a popular {{technique}} for advanced type systems. In this paper, I show how to extend past work on bidirectional typechecking to handle parametric polymorphism bidirectionally. The first key contribution is a simple <b>bidirectional</b> <b>type</b> system that supports first-class (higher-rank and impredicative) polymorphism; its algorithm is complete for predicative polymorphism (including ML-style polymorphism and higher-rank polymorphism). The second key contribution extends that system with subtyping; the combination of bidirectional typechecking with intersection and union types fortuitously yields a simple but fairly powerful algorithm. Both of these systems, inspired by Cardelli’s early work on System F<:, rely on a “greedy ” method for finding polymorphic instances. Finally, I present a more powerful algorithm that forms intersections and unions automatically. ...|$|R
40|$|Uniaxially {{anisotropic}} antiferromagnets {{in a field}} {{along the}} easy axis are studied {{with the help of}} ground state considerations and Monte Carlo simulations. For classical models, the XXZ model as well as variants, we analyze the role of non-collinear spin configurations of biconical or <b>bidirectional</b> <b>type</b> interpolating between the well-known antiferromagnetic and spin-flop structures. Possible experimental applications to layered cuprate antiferromagnets are discussed. Finally, results of quantum Monte Carlo simulations for the S= 1 / 2 XXZ model on a square lattice are presented, and compared with previous findings. Comment: 15 pages, 11 figures, to appear in Computer Simulation Studies in Condensed Matter Physics XXI, Eds. D. P. Landau, S. P. Lewis, and H. B. Schuttler (Springer-Verlag, Heidelberg, Berlin, 2008...|$|R
40|$|We {{propose a}} full-spectrum dependently typed {{programming}} language, Zombie, which supports general recursion natively. The Zombie implementation is an elaborating typechecker. We prove type saftey {{for a large}} subset of the Zombie core language, including features such as computational irrelevance, CBV-reduction, and propositional equality with a heterogeneous, completely erased elimination form. Zombie does not automatically beta-reduce expressions, but instead uses congruence closure for proof and type inference. We give a specification of {{a subset of the}} surface language via a <b>bidirectional</b> <b>type</b> system, which works "up-to-congruence, " and an algorithm for elaborating expressions in this language to an explicitly typed core language. We prove that our elaboration algorithm is complete with respect to the source type system. Zombie also features an optional termination-checker, allowing nonterminating programs returning proofs as well as external proofs about programs...|$|R
40|$|Functional {{programming}} with dependently-typed higher-order data This paper explores a {{new point}} in the design space of functional programming: functional programming with dependently typed higher-order data structures described in the logical framework LF. This allows us to program with proofs. The contributions of this paper are twofold: First, we present a syntax-directed <b>bidirectional</b> <b>type</b> system that distinguishes between dependently typed data and computations and locally resolves constraints arising from dependent types using unification. Our foundation is unique {{in the sense that}} data objects may be open and encoded in higher-order abstract syntax. In addition, our language supports first-class substitutions, a feature which is absent in the competing proposals. Second, we describe an operational semantics for this language based on higher-order pattern matching for dependently typed objects and prove progress and preservation for our language. 1...|$|R
40|$|We {{introduce}} a new compile–time notion of type subsumption based on type simulation. We show how to apply this static sub-sumption relation to support a more intuitive, object oriented ap-proach to generic programming of reusable, high performance con-tainer types. As a first step towards an efficient implementation of the resulting type system in a compiler we present a novel algo-rithm for <b>bidirectional</b> <b>type</b> inference over arbitrary syntax graphs. The algorithm uses the new static type subsumption relation to compress the data {{that has to be}} stored for each node in the typeflow graph. During typeflow analysis this means that the set of types for a given node can be symbolically represented using antichains in-stead of using bitvectors or some other explicit set representation. This results in a typing algorithm that is both flexible and precise and shows good performance on representative instances. 1...|$|R
40|$|Bidirectional typechecking {{has become}} popular in {{advanced}} type systems because {{it works in}} many situations where inference is undecidable. In this paper, I show how to cleanly handle parametric polymorphism in a bidirectional setting, even {{in the presence of}} subtyping. The first contribution is a <b>bidirectional</b> <b>type</b> system that supports first-class (higher-rank and impredicative) polymorphism but is complete for predicative polymorphism (including ML-style polymorphism and higher-rank polymorphism). This power comes from bidirectionality combined with a “greedy ” method of finding polymorphic instances inspired by Cardelli’s early work on System F<:. The second contribution adds subtyping; combining bidirectional typechecking with intersection and union types fortuitously yields a simple but rather powerful system. Finally, I present a more powerful algorithm that forms intersections and unions automatically. This paper demonstrates that bidirectionality is a strong foundation for traditionally vexing features like first-class polymorphism and subtyping. 1...|$|R
40|$|This paper {{presents}} {{the design of}} ZOMBIE, a dependently-typed programming language that uses an adaptation of a congruence closure algorithm for proof and type inference. This algorithm allows the type checker to automatically use equality assumptions from the context when reasoning about equality. Most dependently typed languages automatically use equalities that follow from -reduction during type checking; however, such reasoning is incompatible with congruence closure. In contrast, ZOMBIE does not use automatic -reduction because types may contain potentially diverging terms. Therefore ZOMBIE provides {{a unique opportunity to}} explore an alternative definition of equivalence in dependently typed language design. Our work includes the specification of the language via a <b>bidirectional</b> <b>type</b> system, which works “up-to-congruence,” and an algorithm for elaborating expressions in this language to an explicitly typed core language. We prove that our elaboration algorithm is complete with respect to the source type system, and always produces well typed terms in the core language. This algorithm has been implemented in the ZOMBIE language, which includes general recursion, irrelevant arguments, heterogeneous equality and data types...|$|R
40|$|A new acousto-optic radio {{spectrometer}} {{has observed}} the 1 - 2 GHz radio emission of solar flares with unprecedented sensitivity. The number of detected decimeter type III bursts is greatly enhanced compared to observations by conventional spectrometers observing only one frequency at the time. The observations indicate {{a large number}} of electron beams propagating in dense plasmas. For the first time, we report weak, reversed drifting type III bursts at frequencies above simultaneous narrowband decimeter spikes. The type III bursts are reliable signatures of electron beams propagating downward in the corona, apparently away from the source of the spikes. The observations contradict the most popular spike model that places the spike sources at the footpoints of loops. Conspicuous also was an apparent <b>bidirectional</b> <b>type</b> U burst forming a fish-like pattern. It occurs simultaneously with an intense U-burst at 600 - 370 MHz observed in Tremsdorf. We suggest that it intermodulated with strong terrestrial interference (cellular phones) causing a spurious symmetric pattern in the spectrogram at 1. 4 GHz. Symmetric features in the 1 - 2 GHz range, some already reported in the literature, therefore must be considered with utmost caution. Comment: Astronomy and Astrophysics, in pres...|$|R
50|$|A dial test {{indicator}}, {{also known}} as a lever arm test indicator or finger indicator, has a smaller measuring range than a standard dial indicator. A test indicator measures the deflection of the arm, the probe does not retract but swings in an arc around its hinge point. The lever may be interchanged for length or ball diameter, and permits measurements to be taken in narrow grooves and small bores where the body of a probe type may not reach. The model shown is <b>bidirectional,</b> some <b>types</b> may have to be switched via a side lever to be able to measure in the opposite direction.|$|R
40|$|AbstractAs part of {{my master}} thesis I have take part in Isolated Bidirectional DC_DC LLC {{resonant}} converter from Eltak company. Application of power exchanges takes place in either direction using two unidirectional DC-DC converters. Even though {{it is common to}} use power flow in unidirectional, but later due to many application growing emphasis on small size, compact the two unidirectional way of power flow and efficient power systems. This gives increasing interest to develop a <b>bidirectional</b> <b>type</b> of power flow with bidirectional converter. This is especially for DC power application like motor drives, uninterruptible power supplies(UPS), alternate energy system, telecommunication, space technology, hybrid Automotives, battery charger and battery discharger. After a literature study of different types of converter topology, the isolated bidirectional DC-DC LLC resonant converter has been selected. This resulted in LLC resonant tank have for both mode of operation. The converter is dual active bridge with isolated high switching frequency transformer. The bridge on the high side is voltage-fed and current-fed on the low side of the converter. Since the isolated bidirectional DC-DC converters have the capability to perform the bidirectional power flow in a compact form or a single device to perform such application. Therefore for this specialization project it is proposed to have dual full-bridge isolated bidirectional DC-DC LLC resonant converter in a compact and single device converter. The topology computable for this <b>type</b> of isolated <b>bidirectional</b> DC-DC converter. In this bidirectional converter mainly discussed about the role LLC resonant arrangement instead of PWM for reducing power loss in high switching frequency. </p...|$|R
40|$|This paper {{presents}} the results of research on carbon fiber angle orientation and quantity of carbon fi bers in yarn on bending properties of plywood. For that purpose the specimens have been defined as multilayer composites made from carbon fibers and veneer. Carbon fibers were inserted {{in the second and third}} glue line of the composite with angle variation of 15 °. Stresses and strain were analyzed in significant layers together with displacement of the whole composite plate. The influence of carbon fiber angle orientation on properties of the composite (amount of stresses and related strains) was significant. The best results have been achieved with carbon fiber angle of 0 °, and <b>bidirectional</b> carbon fiber <b>type</b> (BCF) with the orientation angle of 90 °. The lowest values have been achieved with carbon fiber angle of 65 ° (unidirectional carbon fibers-UCF), and <b>bidirectional</b> carbon fiber <b>type</b> (BCF) with the orientation angle of 45 °. Greater quantity of carbon fibers per one yarn has positive influence on decrease of stresses and strains in veneer layers and provides better stiffness of plywood...|$|R
40|$|This memo {{provides}} {{information for the}} Internet community. It does not specify an Internet standard of any kind. Distribution of this memo is unlimited. Copyright Notice Copyright (C) The Internet Society (2005). This document gives examples of Session Description Protocol (SDP) offer/answer exchanges. Examples include codec negotiation and selection, hold and resume, and addition and deletion of media streams. The examples show multiple media <b>types,</b> <b>bidirectional,</b> unidirectional, inactive streams, and dynamic payload types. Commo...|$|R
40|$|In this paper, {{we discuss}} the {{conditions}} under which we can correctly extract a variety of module parameters of single mode bidirectional optoelectronic duplexer and diplexer modules during relatively slow thermal cycling between - 40 °C and + 85 °C. The obtained values of parameters such as tracking error, optical crosstalk, and the laser diode characteristic temperature have been compared for bidirectional modules from different manufacturers and the impact on these parameters of different interconnect techniques, like microoptic (Mo), silicon optical bench, and planar lightwave circuit technologies is discussed. It is shown that there is a conflict between small threshold currents and good temperature stability for InGaAsP-based Fabry-Perot laser diodes emitting at 1300 and 1550 nm. Then the results of spatially low coherence reflectometry for the different <b>bidirectional</b> module <b>types</b> are presented...|$|R
40|$|Improvements {{in remote}} sensing {{capabilities}} hinge very directly upon attaining {{an understanding of}} the physical processes contributing to the measurements. In order to devise new measurement strategies and to learn better techniques for processing remotely gathered data, it is necessary to understand and to characterize the complex radiative interactions of the atmosphere-surface system. In particular, {{it is important to understand}} the role of atmospheric structure, ground reflectance inhomogeneity and ground <b>bidirectional</b> reflectance <b>type.</b> The goals, then, are to model, analyze, and parameterize the observable effects of three dimensional atmospheric structure and composition and two dimensional variations in ground albedo and bidirectional reflectance. To achieve these goals, a Monte Carlo radiative transfer code is employed to model and analyze the effects of many of the complications which are present in nature...|$|R
40|$|Boxy Types: Inference for Higher-Rank Types and Impredicativity Languages {{with rich}} type systems are {{beginning}} to employ a blend of type inference and type checking, so that the type inference engine is guided by programmer-supplied type annotations. In this paper we show, for the first time, how to combine the virtues of two well-established ideas: unification-based inference, and <b>bidirectional</b> propagation of <b>type</b> annotations. The result is a type system that conservatively extends Hindley-Milner, and yet supports both higher-rank types and impredicativity...|$|R
40|$|Abstract Background Projections from hippocampal CA 1 -subiculum (CA 1 /SB) {{areas to}} the prefrontal cortex (PFC), which are {{involved}} in memory and learning processes, produce long term synaptic plasticity in PFC neurons. We examined modifying effects of these projections on nociceptive responses recorded in the prelimbic and cingulate areas of the PFC. Results Extracellular unit discharges evoked by mechanical noxious stimulation delivered to the rat-tail and field potentials evoked by a single stimulus pulse delivered to CA 1 /SB were recorded in the PFC. High frequency stimulation (HFS, 100 Hz) delivered to CA 1 /SB, which produced long-term potentiation (LTP) of field potentials, induced long-term enhancement (LTE) of nociceptive responses in 78 % of cases, while, conversely, in 22 % responses decreased (long-term depression, LTD). These neurons were scattered throughout the cingulate and prelimbic areas. The results obtained for field potentials and nociceptive discharges suggest that CA 1 /SB-PFC pathways can produce heterosynaptic potentiation in PFC neurons. HFS had no effects on Fos expression in the cingulated cortex. Low frequency stimulation (LFS, 1 Hz, 600 bursts) delivered to the CA 1 /SB induced LTD of nociceptive discharges in all cases. After recovery from LTD, HFS delivered to CA 1 /SB had the opposite effect, inducing LTE of nociceptive responses in the same neuron. The <b>bidirectional</b> <b>type</b> of plasticity was evident in these nociceptive responses, as in the homosynaptic plasticity reported previously. Neurons inducing LTD are found mainly in the prelimbic area, in which Fos expression was also shown to be inhibited by LFS. The electrophysiological results closely paralleled those of immunostaining. Our results indicate that CA 1 /SB-PFC pathways inhibit excitatory pyramidal cell activities in prelimbic areas. Conclusion Pressure stimulation (300 g) applied to the rat-tail induced nociceptive responses in the cingulate and prelimbic areas of the PFC, which receives direct pathways from CA 1 /SB. HFS and LFS delivered to the CA 1 /SB induced long-term plasticity of nociceptive responses. Thus, CA 1 /SB-PFC projections modulate the nociceptive responses of PFC neurons. </p...|$|R
40|$|UnrestrictedFluid {{shear stress}} is an {{important}} factor to consider when studying the behavior of endothelial cells in vascular system. The main focus {{of this study is to}} relate the spatial and temporal variations in shear stress with the extent of oxidative stress, specifically in arterial branching points in comparison with straight regions in the vessels. For this purpose, a micro shear stress sensor has been designed and fabricated with the backside wire binding feature. The sensors were flush mounted in a 3 -D scaled up model of carotid arterial bifurcation to measure the spatial variations in shear stress. These measurements were validated by computational fluid dynamics simulations. Arteries with complex geometries develop a low profile and <b>bidirectional</b> <b>type</b> of shear stress, namely oscillatory however unidirectional and high profile of shear stress, namely pulsatile shear stress develops at straight regions of the vessels. We compared the extent of oxidative stress for the endothelial cells which were exposed to these types of flow profiles which were reconstructed by a programmed step motor.; Reactive oxygen species (ROS), particularly superoxide anion initiate the oxidative modification of low density lipoprotein (LDL) which is one of the fundamental processes to develop plaque formation in cardiovascular disease. NADPH oxidase and mitochondrial respiratory chain are considered as major sources of generation of superoxide. Conversely, nitric oxide is considered atheroprotective and vasodilator. This research has studied the pathways for expression of the enzymes and proteins involved in the generation of free radicals or antioxidants in response to oscillatory and pulsatile shear stress including: subunit NOX 4 of NADPH oxidase, eNOS, SOD isoforms, nitrotyrosine, LDL oxidation and nitration using different biochemical techniques. This investigation demonstrated that oscillatory shear stress induced LDL oxidation and nitrotyrosine formation however pulsatile shear stress downregulated both. We studied if 17 beta-estradial as a cardioprotective reagent could attenuate the oscillatory shear stressmediated LDL oxidation. Finally an application of nanotechnology for detection of oxidized LDL is introduced by application of indium oxide nanowire and carbon nanotube based field effect transistors. We observed chemical gating of these transistors upon exposure to oxidized LDL. In conclusion, this interdisciplinary study interfaces fluid shear stress with vascular oxidative stress by application of micro and nano sensors for measurement of shear stress and oxidative modification of LDL...|$|R
40|$|This {{artifact}} {{contains the}} accompanying code for the ECOOP 2015 paper: "A Pattern Calculus for Rule Languages: Expressiveness, Compilation, and Mechanization". It contains source files {{for a full}} mechanization of the three languages presented in the paper: CAMP (Calculus for Aggregating Matching Patterns), NRA (Nested Relational Algebra) and NNRC (Named Nested Relational Calculus). Translations between all three languages and their attendant proofs of correctness are included. Additionally, a mechanization of a type system for the main languages is provided, along with <b>bidirectional</b> proofs of <b>type</b> preservation and proofs of the time complexity of the various compilers...|$|R
40|$|The {{improved}} {{power quality}} ac-dc converters (IPQCs) provide enhanced power quality at the utility interface. This paper presents single and three phase topologies of the <b>bidirectional</b> buck-boost <b>type</b> IPQC, which outputs variable bidirectional dc voltage and reversible current, employing discrete (power MOSFET) component based four quadrant switches (4 QSWs). The converter topologies, capable of functioning as bidirectional buck and bidirectional boost converters, are simulated for buck and boost modes. The simulations are conducted for frequencies of 50 Hz and 5 KHz of the ac supply. The simulations, involving switching frequencies up to 50 KHz, are conducted; adopting pseudorandom switching of the 4 QSWs based on innovative timing sequence logic based numerical programming. Performance {{analysis of the}} converter suggests a correlation between the switching frequency and magnitudes of reactive elements. The currents at the ac interface are waveshaped by suitably altering the switching pattern, rendering operation of the converter in any quadrant, in any mode and at any power factor. The results of the simulations confirm the feasibility and predicted performance of the proposed converter topologies and {{the efficacy of the}} switching strategy. 1...|$|R
40|$|Abstract—Bidirectional dc-dc {{converters}} (BDC) {{have recently}} {{received a lot}} of attention due to the increasing need to systems with the capability of bidirectional energy transfer between two dc buses. This paper introduces an improved non-isolated bidirectional DC–DC converter. The proposed converter have wide voltage gain than the conventional and coupled inductor <b>type</b> <b>bidirectional</b> converters in both step-up as well as step-down modes. Therefore the proposed converter can be operated in wide-voltage-conversion range. The voltage stresses on the switches of the proposed converter are a half of the high voltage side. In addition, the operating principle and steady-state analyses are explained. Simulations were carried out in MATLAB/SIMULINK. Keywords—Bidirectional dc-dc converter, Coupled inductor...|$|R
40|$|Intersection {{and union}} types denote conjunctions and disjunctions of properties. Using <b>bidirectional</b> typechecking, {{intersection}} <b>types</b> are relatively straightforward, but union types present challenges. For union types, we can case-analyze a subterm of union type when {{it appears in}} evaluation position (replacing the subterm with a variable, and checking that term twice under appropriate assumptions). This technique preserves soundness in a call-by-value semantics. Sadly, {{there are so many}} choices of subterms that a direct implementation is not practical. But carefully transforming programs into let-normal form drastically reduces the number of choices. The key results are soundness and completeness: a typing derivation (in the system with too many subterm choices) exists for a program if and only if a derivation exists for the let-normalized program. ...|$|R
40|$|The {{relationship}} between sleep and epilepsy is <b>bidirectional.</b> While certain <b>types</b> of seizures occur almost exclusively during sleep, sleep deprivation can precipitate seizures and can activate interictal epileptiform discharges (IEDs) in the electroencephalogram (EEG). While non-{{rapid eye movement}} sleep is an activator of IEDs and seizures, {{rapid eye movement sleep}} suppresses them. Nocturnal seizures need to be distinguished from parasomnias. Epileptic seizures and IEDs result in changes of sleep architecture, while antiepileptic drugs have variable effect on sleep and wakefulness. Nearly one-third of patients with epilepsy complain day time somnolence. In addition to nocturnal seizures and antiepileptic drugs (AEDs), associated sleep disorders such as sleep apnoea and restless leg syndromes might be responsible for daytime sleepiness in persons with epilepsy...|$|R
