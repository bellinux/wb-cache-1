9|515|Public
40|$|Abstract: The {{combined}} control problem of connection admission, flow rate, and bandwidth allocation (capacity, service-rate) in ATM based networks under nonstationary conditions has recently attained considerable importance. In an earlier paper we adopted a nonlinear control approach to derive an integrated control strategy (for the finite buffer and finite server case) that is insensitive to any propagation delay. The {{performance of the}} proposed scheme was carried out using analysis and simulation. In this paper we report and analyse {{the results of a}} comparative evaluation with a well known method of flow control: that of BECN (<b>Backward</b> <b>Explicit</b> <b>Congestion</b> <b>Notification).</b> 1...|$|E
40|$|Stochastically timed process algebras are {{emerging}} as a promising formalism to support performance modeling and evaluation of concurrent and distributed systems. To become well accepted, such formalisms have to be proved {{to be able to}} provide readable, modular, scalable formal descriptions of more and more complex systems which can be automatically analyzed with a reasonable computational effort. To this aim, we present an algebraic model of an ATM switch which supports the four service categories defined by the ATM Forum and implements explicit rate marking for ABR traffic, <b>backward</b> <b>explicit</b> <b>congestion</b> <b>notification,</b> and connection admission control. As performance measures of interest, we assess via simulation the cell loss ratio, the mean queue length, and the link utilization for the outgoing link in several different configurations...|$|E
40|$|International audienceCurrent {{congestion}} control mechanisms in today's Internet rely on end-to-end TCP congestion avoidance algorithms that back off sources when congestion occurs, detected by packet loss or {{explicit congestion notification}} signals. But {{one of the major}} setbacks of such mechanisms is making sure that all sources respond correctly in applying congestion avoidance measures during periods of high congestion; non-compliant sources can aggravate the network congestion state and yield to unfairness, worsening the state of the network. In this paper, we propose a network-centric solution for {{congestion control}}-called TRIC (TCP rate implicit control), that shapes the behavior of TCP {{from the edge of the}} network, using TCP's window manipulation and ACK pacing, based on <b>backward</b> <b>explicit</b> <b>congestion</b> <b>notification</b> in ACK packets going back to the source, generated by routers experiencing incipient congestion in the forward path. We also present simulation results that show how TRIC helps improve the throughput of TCP...|$|E
40|$|Applications of <b>explicit</b> <b>congestion</b> <b>notification</b> in {{providing}} service quality differentiation and price/quality guaranteesApplications of <b>explicit</b> <b>congestion</b> <b>notification</b> in [...] . R&D Report R 18 / 2002 Title Applications of <b>explicit</b> <b>congestion</b> <b>notification</b> {{in providing}} service quality differentiation and price/quality guarantees ISBN 82 - 423 - 0535 -...|$|R
5000|$|Parameter type = 32768 : This {{parameter}} {{is reserved}} for <b>explicit</b> <b>congestion</b> <b>notification</b> support.|$|R
5000|$|Lack of {{widespread}} support for <b>explicit</b> <b>congestion</b> <b>notification</b> and Quality of Service management on the Internet ...|$|R
40|$|The {{application}} of <b>backward</b> <b>explicit</b> <b>congestion</b> <b>notification</b> (BECN) to an ATM LAN is investigated {{in order to}} support the dynamic sharing of bandwidth between high-speed, bursty, data traffic sources. The results of a simulation study are presented which suggest that a BECN mechanism may provide simple and effective traffic management for an ATM LAN or campus backbone network of up to at least 50 km diameter. Cell loss due to congestion may be prevented and a link utilization in excess of 80 % may be maintained with only 0. 08 % of the link bandwidth, per active source, carrying backward congestion notification traffic during a congestion event. 1 Introduction Over the last few years the physical topology of local area networks has migrated from the ring and the multidrop bus toward a star configuration [...] - the hub. A star topology is easier to manage and offers higher reliability. However, the technology remains shared medium, resulting in the "LAN-in-abox ". As the power of the deskto [...] ...|$|E
40|$|This paper {{evaluates the}} {{suitability}} of <b>Backward</b> <b>Explicit</b> <b>Congestion</b> <b>Notification</b> (BECN) for IP networks. The BECN mechanism has previously been used in non-IP networks, {{but there has been}} limited experimental investigation into the application of the BECN scheme as congestion control mechanism in IP networks. In this paper, we consider an enhanced algorithm for BECN which uses Internet Control Message Protocol (ICMP) Source Quenches for backward congestion notification in IP networks and undertake comparative performance evaluation of Random Early Detection (RED), Explicit Congestion Notification (ECN) and our enhanced BECN mechanism using both longlived TCP bulk transfers and short-lived webtraffic workloads. Our results show that for webtraffic workloads, BECN offers only slight improvement in transfer delay while average goodput for bulk transfers is no worse than that of ECN. For paths that have a high bandwidth delay product our results show that not only can BECN offer significant improvement in average goodput for bulk transfers over the ECN mechanism, but packet drops and transfer delay for short-lived webtraffic connections are also comparatively reduced. Additional observations show that on such paths TCP (NewReno) with RED can offer higher goodput for bulk transfers compared to ECN...|$|E
40|$|Abstract—We have {{recently}} proposed {{the use of}} <b>Backward</b> <b>Explicit</b> <b>Congestion</b> <b>Notification</b> (BECN) with video multicasting over IP net-works [1]. This proposal improved bandwidth utilization and reduced time to react to congestion. In this paper, we present {{a comparison of the}} use of different ECN techniques, namely ECN, BECN, and MECN, for IP multicast congestion control. We investigate this in the context of MPEG 4 multicasting over IP. We use these ECN techniques in an IP network that supports priority dropping of packets during congestion using RED’s extension for service differentiation. This extension rec-ognizes the priority of packets when they need to be dropped and drops lower priority packets first. ECN techniques will provide early notifi-cation to the sender and/or the receivers about congestion while it is developing in the network. Based on which ECN technique is used, the sender and/or the receivers will react to this notification to reduce the congestion in the network. We show {{the advantages and disadvantages of}} each ECN technique. Also, through the results, we advocate the use of network support in the form of explicit congestion notification for IP multicast congestion control. I...|$|E
40|$|Using ns- 2 simulations, {{this paper}} evaluates an Adaptive <b>Explicit</b> <b>Congestion</b> <b>Notification</b> (AECN) router. By {{receiving}} round-trip time (RTT) source hints from each TCP flow, AECN divides flows into flow {{groups based on}} RTT ranges. AECN uses distinct flow group drop probabilities and a mark front scheme to provide higher goodput and better fairness than Random Early Detection (RED) and <b>Explicit</b> <b>Congestion</b> <b>Notification</b> (ECN) routers. 1...|$|R
5000|$|<b>Explicit</b> <b>Congestion</b> <b>Notification</b> an {{extension}} to IP and TCP communications protocols that adds a flow control mechanism ...|$|R
5000|$|... 8) Since RFC 3168, the {{remaining}} two bits (the two least significant bits) are used for <b>Explicit</b> <b>Congestion</b> <b>Notification</b> ...|$|R
40|$|Abstract. Stochastically timed process algebras are {{emerging}} as a promising formalism to support performance modeling and evaluation of concurrent and distributed systems. To become well accepted, such formalisms have to be proved {{to be able to}} provide readable, modular, scalable formal descriptions of more and more complex systems which can be automatically analyzed with a reasonable computational effort. To this aim, we present an algebraic model of an ATM switch which supports the four service categories defined by the ATM Forum and implements explicit rate marking for ABR traffic, <b>backward</b> <b>explicit</b> <b>congestion</b> <b>notification,</b> and connection admission control. As performance measures of interest, we assess via simulation the cell loss ratio, the mean queue length, and the link utilization for the outgoing link in several different configurations. 1 Introduction Many computing systems consist of a possibly huge number of components that not only work independently but also communicate with each other from time to time. Examples of such systems are communication protocols, operating systems, embedded control systems for automobiles, airplanes and medical equipment, railway signaling systems, air traffic control systems, distributed systems and algorithms, computer architectures, and integrated circuits. The catastrophic consequences of failures, such as loss of human lives, environmental damages, and financial losses, in many of these critical systems compel computer scientists and engineers to develop formal description techniques for ensuring that these systems are implemented correctly despite of their complexity...|$|E
40|$|Abstract — We {{propose a}} novel {{architecture}} for multicasting of adaptively-encoded layered MPEG 4 over a QoS-aware IP network. We require a QoS-aware IP network {{in this case}} to (1) Support priority dropping of packets in time of congestion. (2) Provide congestion notification to the multicast sender. For the first requirement, we use RED’s extension for service differentiation. It recognizes the priority of packets {{when they need to}} be dropped and drops lower priority packets first. We couple RED with our proposal for the second requirement which is the adoption of <b>Backward</b> <b>Explicit</b> <b>Congestion</b> <b>Notification</b> (BECN) for use with IP multicast. BECN will provide early congestion notification at the IP layer level to the video sender. BECN detects upcoming congestion based on size of the RED queue in the routers. The MPEG 4 adaptive-encoder can change the sending rate and also can divide the video packets into lower priority packets and high priority packets. Based on BECN messages from the routers, a simple flow controller at the sender sets the rate for the adaptive MPEG 4 encoder and also sets the ratio between the high priority and low priority packets within the video stream. We use a TES model for generating the MPEG 4 traffic that is based on real video traces. Simulation results show that combining priority dropping, MPEG 4 adaptive encoding, and multicast BECN: (1) Improves bandwidth utilization (2) Reduces time to react to congestion and hence improves the received video quality (3) Maintains graceful degradation in quality with congestion and provides minimum quality even if congestion persists. I...|$|E
40|$|Thesis (M. Sc. Eng.) -University of KwaZulu-Natal, 2006. The Internet has {{experienced}} a tremendous growth {{over the past two}} decades and with that growth have come severe congestion problems. Research efforts to alleviate the congestion problem can broadly be classified into three groups: Cl) Router based congestion detection; (2) Generation and transmission of congestion notification signal to the traffic sources; (3) End-to-end algorithms which control the flow of traffic between the end hosts. This dissertation has largely addressed the first two groups which are basically router initiated. Router based congestion detection mechanisms, commonly known as Active Queue Management (AQM), can be classified into two groups: conventional mathematical analytical techniques and fuzzy logic based techniques. Research has shown that fuzzy logic techniques are more effective and robust compared to the conventional techniques because they do not rely on the availability of a precise mathematical model of Internet. They use linguistic knowledge and are, therefore, better placed to handle the complexities associated with the non-linearity and dynamics of the Internet. In spite of all these developments, there still exists ample room for improvement because, practically, there has been a slow deployment of AQM mechanisms. In the first part of this dissertation, we study the major AQM schemes in both the conventional and the fuzzy logic domain in order to uncover the problems that have hampered their deployment in practical implementations. Based on the findings from this study, we model the Internet congestion problem as a multi-objective problem. We propose a Fuzzy Logic Congestion Detection (FLCD) which synergistically combines the good characteristics of the fuzzy approaches with those of the conventional approaches. We design the membership functions (MFs) of the FLCD algorithm automatically by using Multi-objective Particle Swarm Optimization (MOPSO), a population based stochastic optimization algorithm. This enables the FLCD algorithm to achieve optimal performance on all the major objectives of Internet congestion control. The FLCD algorithm is compared with the basic Fuzzy Logic AQM and the Random Explicit Marking (REM) algorithms on a best effort network. Simulation results show that the FLCD algorithm provides high link utilization whilst maintaining lower jitter and packet loss. It also exhibits higher fairness and stability compared to its basic variant and REM. We extend this concept to Proportional Differentiated Services network environment where the FLCD algorithm outperforms the traditional Weighted RED algorithm. We also propose self learning and organization structures which enable the FLCD algorithm to achieve a more stable queue, lower packet losses and UDP traffic delay in dynamic traffic environments on both wired and wireless networks. In the second part of this dissertation, we present the congestion notification mechanisms which have been proposed for wired and satellite networks. We propose an FLCD based dual explicit congestion notification algorithm which combines the merits of the Explicit Congestion Notification (ECN) and the <b>Backward</b> <b>Explicit</b> <b>Congestion</b> <b>Notification</b> (BECN) mechanisms. In this proposal, the ECN mechanism is invoked based on the packet marking probability while the BECN mechanism is invoked based on the BECN parameter which helps to ensure that BECN is invoked only when congestion is severe. Motivated by the fact that TCP reacts to tbe congestion notification signal only once during a round trip time (RTT), we propose an RTT based BECN decay function. This reduces the invocation of the BECN mechanism and resultantly the generation of reverse traffic during an RTT. Compared to the traditional explicit notification mechanisms, simulation results show that the new approach exhibits lower packet loss rates and higher queue stability on wired networks. It also exhibits lower packet loss rates, higher good-put and link utilization on satellite networks. We also observe that the BECN decay function reduces reverse traffic significantly on both wired and satellite networks while ensuring that performance remains virtually the same as in the algorithm without BECN traffic reduction. Print copy complete; page numbering of 105 - 108 incorrect...|$|E
30|$|Detection of non-{{congestion}} RTOs (NRT-detection): To detect non-congestion RTOs from congestion RTOs {{using the}} improved <b>explicit</b> <b>congestion</b> <b>notification</b> (ECN) mechanism.|$|R
5000|$|Under Windows Vista, SecuROM {{will prevent}} a game from running if <b>explicit</b> <b>congestion</b> <b>notification</b> is enabled in Vista's {{networking}} configuration.|$|R
50|$|FECN means forward <b>explicit</b> <b>congestion</b> <b>notification.</b> The FECN bit {{can be set}} to 1 to {{indicate}} that congestion was experienced {{in the direction of}} the frame transmission, so it informs the destination that congestion has occurred.BECN means backwards <b>explicit</b> <b>congestion</b> <b>notification.</b> The BECN bit can be set to 1 {{to indicate}} that congestion was experienced in the network in the direction opposite of the frame transmission, so it informs the sender that congestion has occurred.|$|R
5000|$|... a 3-bit Traffic Class {{field for}} QoS (quality of service) {{priority}} and ECN (<b>Explicit</b> <b>Congestion</b> <b>Notification).</b> Prior to 2009 this field was called EXP.|$|R
40|$|The Addition of <b>Explicit</b> <b>Congestion</b> <b>Notification</b> (ECN) to IP Status of this Memo This {{document}} specifies an Internet standards track {{protocol for}} the Internet community, and requests discussion {{and suggestions for}} improvements. Please refer to the current edition of the &quot;Internet Official Protocol Standards &quot; (STD 1) for the standardization state and status of this protocol. Distribution of this memo is unlimited. Copyright Notice Copyright (C) The Internet Society (2001). All Rights Reserved. This memo specifies the incorporation of ECN (<b>Explicit</b> <b>Congestion</b> <b>Notification)</b> to TCP and IP, including ECN’s use of two bits in th...|$|R
25|$|Floyd {{is also a}} {{co-author}} on {{the standard}} for TCP Selective acknowledgement (SACK), <b>Explicit</b> <b>Congestion</b> <b>Notification</b> (ECN), the Datagram Congestion Control Protocol (DCCP) and TCP Friendly Rate Control (TFRC).|$|R
50|$|Dr. Jain is the {{co-inventor}} of the DEC-bit {{scheme for}} congestion avoidance in computer networks {{which has been}} adapted for implementation in Frame Relay networks as forward <b>explicit</b> <b>congestion</b> <b>notification</b> (FECN), ATM Networks as <b>Explicit</b> Forward <b>Congestion</b> Indication (EFCI), and TCP/IP networks as <b>Explicit</b> <b>Congestion</b> Notification(ECN).|$|R
40|$|Abstract — This letter {{proposes a}} {{deterministic}} packet marking scheme that estimates the maximum link price on a communication path. The proposed scheme {{is simple and}} IP-compatible because it uses two-bit <b>Explicit</b> <b>Congestion</b> <b>Notification</b> (ECN) field and IP identification (IPid) field in the standard IP header for the estimation. Through simulations using real IP packet traces, we show that our scheme indeed works as designed with small estimation errors, and thus enables existing max-min flow control algorithms to serve their purpose without the need of separate out-of-band control packets to carry link prices. Index Terms — <b>Explicit</b> <b>Congestion</b> <b>Notification</b> (ECN), packet marking, max-min fairness, distributed flow control. I...|$|R
50|$|RFC 2474 (which was {{released}} in the year 1998) reserved the first six bits of DS field (or IPv4 ToS) for the DiffServ Code Points (DSCP), and RFC 3168 reserved the last two bits for <b>Explicit</b> <b>Congestion</b> <b>Notification.</b>|$|R
5000|$|... 2) The TOS {{field has}} then been redefined as the Differentiated Services Code Point (DSCP-> RFC 2474) which {{consists}} of the first 6 bits and 2 bits used for a TCP mechanism called <b>Explicit</b> <b>Congestion</b> <b>Notification</b> (ECN) defined in RFC 3168.|$|R
40|$|Computer {{networks}} use congestion {{feedback from}} the routers and destinations to control the transmission load. Delivering timely congestion feedback {{is essential to the}} performance of networks. Reaction to the congestion can be more effective if faster feedback is provided. Current TCP/IP networks use timeout, duplicate Acknowledgement Packets (ACKs) and <b>explicit</b> <b>congestion</b> <b>notification</b> (ECN) to deliver the congestion feedback, each provides a faster feedback than the previous method. In this paper, we propose a markfront strategy that delivers an even faster congestion feedback. With analytical and simulation results, we show that mark-front strategy reduces buffer size requirement, improves link efficiency and provides better fairness among users. Keywords: <b>Explicit</b> <b>Congestion</b> <b>Notification,</b> mark-front, <b>congestion</b> control, buffer size requirement, fairness...|$|R
40|$|The paper {{discusses}} <b>Explicit</b> <b>Congestion</b> <b>Notification</b> (ECN) in {{the context}} of the commercial Internet. It presents possible threats to ECN and shows the gain malicious ECN sources could achieve from ECN subverting. Besides, the paper analyses the relationships between ECN and Service Level Agreements (SLAs) ...|$|R
40|$|Abstract: Congestion is a {{major problem}} which really degrades network performance. Its effect on the delay is quite high which {{decrease}} the throughput in considerable amount. In this paper we have proposed a new congestion scheme which will enhance performance of network transmission by considering delay and throughput as main components. For this we are using Adaptive <b>Explicit</b> <b>Congestion</b> <b>Notification</b> method which allows us to control the network transmission from source to a receiver in a hierarchical manner by alterations in the receiving sending capacity. To achieve predictable average delays with adaptive <b>explicit</b> <b>congestion</b> <b>notification</b> would require constant tuning of the parameters to adjust to current traffic conditions. The sending and receiving ends are tuned according to its capacity and current network traffic condition once ECN (<b>Explicit</b> <b>congestion</b> <b>notification)</b> notification packet comes into action. The aim {{of this paper is to}} solve the parameter tuning problem of the AECN by dynamically setting up the network parameters to overcome delay in network transmission and hence to increase throughput. We will be comparing the performance of the ECN enabled system with the AECN enabled system. For this we are going to use JAVA, JNETPCAP and WINPCAP API’s by which we can create TCP packets, alter the fields of headers, send and receive packets etc...|$|R
50|$|A DCCP {{connection}} contains acknowledgment traffic {{as well as}} data traffic. Acknowledgments inform a sender {{whether its}} packets have arrived, and whether they were marked by <b>Explicit</b> <b>Congestion</b> <b>Notification</b> (ECN). Acknowledgements are transmitted as reliably as the congestion control mechanism in use requires, possibly completely reliably.|$|R
50|$|Another {{approach}} is to use IP <b>Explicit</b> <b>Congestion</b> <b>Notification</b> (ECN). ECN is used only when two hosts signal {{that they want to}} use it. With this method, a protocol bit is used to signal <b>explicit</b> <b>congestion.</b> This is better than the indirect packet delete <b>congestion</b> <b>notification</b> performed by the RED/WRED algorithms, but it requires explicit support by both hosts. ECN coauthor Sally Floyd published detailed information on ECN, including the version required for Cisco IOS.|$|R
50|$|The Per-Hop Behavior is {{determined}} by the DS field of the IP header. The DS field contains a 6-bit Differentiated Services Code Point (DSCP) value. <b>Explicit</b> <b>Congestion</b> <b>Notification</b> (ECN) occupies the least-significant 2 bits of the IPv4 Type of Service field (TOS) and IPv6 Traffic Class field (TC).|$|R
50|$|In {{computer}} networking, the Datagram Congestion Control Protocol (DCCP) is a message-oriented {{transport layer}} protocol. DCCP implements reliable connection setup, teardown, <b>Explicit</b> <b>Congestion</b> <b>Notification</b> (ECN), <b>congestion</b> control, and feature negotiation. The IETF published DCCP as RFC 4340, a proposed standard, in March 2006. RFC 4336 provides an introduction.|$|R
30|$|Popular {{approaches}} {{that use the}} built-in congestion mechanism to regulate the TCP transmission rates across a gateway are the random early detection (RED) [3] and the <b>explicit</b> <b>congestion</b> <b>notification</b> (ECN) [4, 5], while the smart access point with limited advertised window (SAP-LAW) [6] {{is based on the}} flux control mechanism.|$|R
50|$|AIMD {{requires}} a binary signal of congestion. Most frequently, packet loss {{serves as the}} signal; the multiplicative decrease is triggered when a timeout or acknowledgement message indicates a packet was lost. It is also possible for in-network mechanisms to mark congestion (without discarding packets) as in <b>Explicit</b> <b>Congestion</b> <b>Notification</b> (ECN).|$|R
40|$|We {{study the}} effect of <b>Explicit</b> <b>Congestion</b> <b>Notification</b> on TCP {{performance}} for large file transfers. We compare this performance with the performance achieved using other congestion avoidance mechanisms, namely Drop Tail and RED. Our results show that TCP performance improves significantly with ECN both for individual flows and the network as a whole...|$|R
40|$|<b>Explicit</b> <b>Congestion</b> <b>Notification</b> (ECN) for RTP over UDP This memo {{specifies}} how <b>Explicit</b> <b>Congestion</b> <b>Notification</b> (ECN) can be {{used with}} the Real-time Transport Protocol (RTP) running over UDP, using the RTP Control Protocol (RTCP) as a feedback mechanism. It defines a new RTCP Extended Report (XR) block for periodic ECN feedback, a new RTCP transport feedback message for timely reporting of congestion events, and a Session Traversal Utilities for NAT (STUN) extension used in the optional initialisation method using Interactive Connectivity Establishment (ICE). Signalling and procedures for negotiation of capabilities and initialisation methods are also defined. Status of This Memo This is an Internet Standards Track document. This document {{is a product of the}} Internet Engineering Task Force (IETF). It represents the consensus of the IETF community. It has received public review and has been approved for publication by th...|$|R
