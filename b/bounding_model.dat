22|2903|Public
40|$|International audienceWe study queuing delays for Weighted Round Robin (WRR) {{scheduling}} policies. The delay {{characteristics of}} these policies can be estimated through worst-case bounds as other fair queuing scheduling policies. However, these deterministic bounds are in general not accurate and they require that the input process has been shaped. Under Markovian arrival hypothesis, the delay of WRR policies can be evaluated through Markovian numerical analysis. Nevertheless, this analysis is limited to small parameter sizes because of the state space explosion problem. We propose to apply the stochastic comparison approach. We build a <b>bounding</b> <b>model</b> based on the aggregation of sessions, and we show that under the same arrivals, the packet delays in the <b>bounding</b> <b>model</b> are larger in the ⩽st⩽st stochastic order sense than the packet delays in the original model. Due to this aggregation, the state space size is drastically reduced and {{we are able to}} provide stochastic delay bounds for WRR policies. We discuss the accuracy of the proposed bounds through numerical examples...|$|E
40|$|<b>Bounding</b> <b>model</b> {{parameters}} Occam’s inversion {{seeks to}} minimize the functional U = ‖∂m‖ 2 + µ− 1 [‖W((d) −F(m)) ‖ 2 − χ 2 ∗], (1) where the first term is the model roughness and the second term is the fit of model m’s forward response F(m) to the data d. This equation is linearized about a starting model mk and the minimization is accomplished iteratively using: mk+ 1...|$|E
40|$|A {{family of}} {{equivalence}} tools for bounding network capacities is introduced. Part I treats networks of point-to-point channels. The main result is roughly as follows. Given {{a network of}} noisy, independent, memoryless point-to-point channels, a collection of communication demands can be met on the given network {{if and only if}} it can be met on another network where each noisy channel is replaced by a noiseless bit pipe with throughput equal to the noisy channel capacity. This result was known previously for the case of a single-source multicast demand. The result given here treats general demands [...] including, for example, multiple unicast demands [...] and applies even when the achievable rate region for the corresponding demands is unknown in the noiseless network. In part II, definitions of upper and lower bounding channel models for general channels are introduced. By these definitions, a collection of communication demands can be met on a network of independent channels if it can be met on a network where each channel is replaced by its lower <b>bounding</b> <b>model</b> and only if it can be met on a network where each channel is replaced by its upper <b>bounding</b> <b>model.</b> This work derives general conditions under which a network of noiseless bit pipes is an upper or lower <b>bounding</b> <b>model</b> for a multiterminal channel. Example upper and lower bounding models for broadcast, multiple access, and interference channels are given. It is then shown that bounding the difference between the upper and lower bounding models for a given channel yields bounds on the accuracy of network capacity bounds derived using those models. By bounding the capacity of a network of independent noisy channels by the network coding capacity of a network of noiseless bit pipes, this approach represents one step towards the goal of building computational tools for bounding network capacities...|$|E
40|$|The monadic logics M 2 L-Str and WS 1 S {{have been}} {{successfully}} used for verication, although they are nonelementary decidable. Motivated by ideas from <b>bounded</b> <b>model</b> checking, we investigate procedures for <b>bounded</b> <b>model</b> construction for these logics. The problem is, given a formula and a bound k, does there exist a word model for of length k. We give a <b>bounded</b> <b>model</b> construction algorithm for M 2 L-Str that runs in a time exponential in k. For WS 1 S, we prove a negative result: <b>bounded</b> <b>model</b> construction is as hard as validity checking, i. e., it is nonelementary. From this, negative results for other monadic logics, such as S 1 S, follow. We present too preliminary tests using a SAT-based implementation of <b>bounded</b> <b>model</b> construction; for certain problem classes it can nd counter-examples substantially faster than automata-based decision procedures...|$|R
40|$|This thesis {{deals with}} the {{application}} of <b>bounded</b> <b>model</b> checking method for self-healing assurance of concurrency related problems. The self-healing is currently interested in the Java programming language. Therefore, it concetrate mainly on the model checker Java PathFinder which is built for handling Java programs. The verification method is implemented like the Record&Replay trace strategy for navigation through a state space and performance <b>bounded</b> <b>model</b> checking from reached state {{through the use of}} Record&Replay trace strategy. Java PathFinder was extended by new moduls and interfaces in order to perform the <b>bounded</b> <b>model</b> checking for self-healing assurance. <b>Bounded</b> <b>model</b> checking is applied at the neighbourhood of self-healing...|$|R
40|$|Abstract. <b>Bounded</b> <b>model</b> {{checking}} is a verification technique {{based on}} searching for counter-examples to {{the validity of}} the specification using an encoding to propositional sastisfiability. The paper identifies a number of inefficiencies in prior encodings for <b>bounded</b> <b>model</b> checking for a logic of knowledge and branching time. An alternate encoding is developed, and theoretical and experimental results are presented that show this leads to improved performance of <b>bounded</b> <b>model</b> checking for a range of examples. ...|$|R
40|$|A {{technique}} for bounding the capacities of networks of independent channels is introduced. Parts I and II treat point-to-point and multiterminal channels, respectively. Bounds are derived {{using a new}} tool called a <b>bounding</b> <b>model.</b> Channel 1 is an upper (lower) <b>bounding</b> <b>model</b> for channel 2 if replacing channel 2 by channel 1 in any network yields a new network whose capacity region is a superset (subset) of the capacity region of the original network. This paper derives bounding models from noiseless links, with lower bounding models corresponding to points in the channel's capacity region and upper bounding models corresponding to points in a new channel characterization called an emulation region. Replacing all channels in a network by their noiseless upper (lower) bounding models yields a network of lossless links whose capacity region is a superset (subset) of the capacity region for the original network. This converts a general (often stochastic) network into a network coding instance, enabling the application of tools and results derived in that domain. A channel's upper and lower bounding models differ when the channel can carry more information in some networks than in others. Bounding the difference between upper and lower bounding models bounds both {{the accuracy of the}} technique and the price of separating source-network coding from channel coding...|$|E
40|$|The {{framework}} of network equivalence theory developed by Koetter et al. introduces {{a notion of}} channel emulation to construct noiseless networks as upper (resp. lower) bounding models, {{which can be used}} to calculate the outer (resp. inner) bounds for the capacity region of the original noisy network. Based on the network equivalence framework, this paper presents scalable upper and lower bounding models for wireless networks with potentially many nodes. A channel decoupling method is proposed to decompose wireless networks into decoupled multiple-access channels (MACs) and broadcast channels (BCs). The upper <b>bounding</b> <b>model,</b> consisting of only point-to-point bit pipes, is constructed by firstly extending the "one-shot" upper bounding models developed by Calmon et al. and then integrating them with network equivalence tools. The lower <b>bounding</b> <b>model,</b> consisting of both point-to-point and point-to-points bit pipes, is constructed based on a two-step update of the lower bounding models to incorporate the broadcast nature of wireless transmission. The main advantages of the proposed methods are their simplicity {{and the fact that they}} can be extended easily to large networks with a complexity that grows linearly with the number of nodes. It is demonstrated that the resulting upper and lower bounds can approach the capacity in some setups. Comment: Accepted for publication in IEEE Transactions on Information Theor...|$|E
40|$|Abstract—Motivated by the {{framework}} of network equivalence theory [1], [2], we present capacity lower bounding models for wireless networks by construction of noiseless networks {{which can be used}} to calculate an inner bound for the corresponding wireless network. We first extend the “one-shot ” lower <b>bounding</b> <b>model</b> [6] to many-user scenarios, and then propose a two-step update of the one-shot models to incorporate the broadcast nature of wireless transmission. The main advantage of the proposed lower bounding method is its simplicity {{and the fact that it}} can be easily extended to larger networks. We demonstrate by examples that the resulting lower bounds can even approach the capacity in some setups. I...|$|E
40|$|SAL 2 augments the {{specification}} language and explicit-state model checker of SAL 1 with high-performance symbolic and <b>bounded</b> <b>model</b> checkers, and with novel infinite <b>bounded</b> and witness <b>model</b> checkers. The <b>bounded</b> <b>model</b> checker can use several di#erent SAT solvers, while the infinite <b>bounded</b> <b>model</b> checker similarly can use several different ground decision procedures. SAL 2 provides a scriptable API for its basic model checking and analysis functions {{that can be}} used to extend the system. All four new model checkers are implemented using this interface...|$|R
40|$|IEEE Comp Soc, IFIP, Tianjin Normal UnivIn {{this paper}} we give {{a new and}} {{improved}} <b>Bounded</b> <b>Model</b> Checking encoding method for the universal fragment of CTL (ACTL). More specifically, the new encoding method works for verification of ACTL properties, instead Of error-hunting. Combine our verification encoding and bug-hunting encoding proposed before, we get a <b>Bounded</b> <b>Model</b> Checking procedure that works for both valid and invalid A CTL properties. The underlying idea and intuition are summarized in this paper and we implement our tool BMV (<b>Bounded</b> <b>Model</b> Verification) {{on top of the}} well-known model checker NuSMV 2, and conduct experiments that show the strength and weakness of ACTL <b>Bounded</b> <b>Model</b> Checking compared to traditional BDD-based model checking procedure...|$|R
40|$|Abstract—Formalizing the {{semantics}} {{of programming}} languages like C or C++ for <b>bounded</b> <b>model</b> checking can be cumbersome if complete coverage of all language features {{is to be}} achieved. On the other hand, low-level languages that occur during translation (compilation) have a much simpler semantics since they are closer to the machine level. It thus makes sense to use these low-level languages for <b>bounded</b> <b>model</b> checking. In this paper we present a highly precise memory <b>model</b> suitable for <b>bounded</b> <b>model</b> checking of such low-level languages. Our method also takes memory protection (malloc/free) into account. I...|$|R
40|$|This work {{addresses}} {{the design and}} application of robust controllers for structural acoustic control. Both simulation and experimental results are presented. H ∞ and µ-synthesis design methods were used to design feedback controllers which minimize power radiated from a panel while avoiding instability due to unmodeled dynamics. Specifically, highorder structural modes which couple strongly to the actuator-sensor path were poorly modeled. This model error was analytically bounded with an uncertainty model, which allowed controllers to be designed without artificial limits on control effort. It is found that robust control methods provide the control designer with physically meaningful parameters with which to tune control designs and can be very useful in determining limits of performance. Experimental results also showed, however, poor robustness properties for control designs with ad-hoc uncertainty models. The importance of quantifying and <b>bounding</b> <b>model</b> errors is discussed...|$|E
40|$|Branch-and-Bound (B&B) {{algorithms}} are time intensive tree-based exploration {{methods for}} solving to optimality combinatorial optimization problems. In this paper, we investigate {{the use of}} GPU computing as a major complementary way to speed up those methods. The focus is put on the bounding mechanism of B&B algorithms, {{which is the most}} time consuming part of their exploration process. We propose a parallel B&B algorithm based on a GPU-accelerated <b>bounding</b> <b>model.</b> The proposed approach concentrate on optimizing data access management to further improve the performance of the bounding mechanism which uses large and intermediate data sets that do not completely fit in GPU memory. Extensive experiments of the contribution have been carried out on well known FSP benchmarks using an Nvidia Tesla C 2050 GPU card. We compared the obtained performances to a single and a multithreaded CPU-based execution. Accelerations up to x 100 are achieved for large problem instances...|$|E
40|$|This paper {{presents}} a new mixed integer linear program (MILP) for the optimal short-term scheduling of single stage batch plants with sequence dependent changeovers and optimal {{selection of the}} number of batches to produce. It is a continuous-time formulation employing multiple time grids that is based on the resource-task network (RTN) process representation. The main novelty is that aggregated processing and changeover tasks are considered that account for the time required to produce all batches of the product, plus the changeover time to the next product in the sequence. When compared to the traditional approach of considering a single processing task per batch, fewer event points are needed, which results in significantly lower computational effort as illustrated through the solution of several example problems. The new formulation is further compared to a continuous-time model with global precedence sequencing variables to a <b>bounding</b> <b>model</b> with immediate precedence sequencing variables and to a constraint programming model...|$|E
40|$|Date of {{submission}} 31. 03. 2008 iiIn my diploma thesis, I {{discuss the}} theoretical background for a {{graphical user interface}} to model probabilistic hybrid automata and translate them to a stochastic satisfiability modulo theories problem in order to perform probabilistic <b>bounded</b> <b>model</b> checking. The tool which represents the practical part of this work is an extention to “HySAT GUI”, a fronted for hybrid automata, developed during my individual project, supports not only simple probabilistic hybrid automata but systems of these. For the <b>bounded</b> <b>model</b> checking problem, in addition to simple state reachability, probabilistic verification of LTL-formulae is implemented. Altogether, this thesis deals with the translation of systems of probabilistic hybrid automata conjoined with either state reachability or a transformation of LTL-formulae to a <b>bounded</b> <b>model</b> checking problem as {{the target of a}} probabilistic <b>bounded</b> <b>model</b> checking problem. For the LTL-transformation, a symbolic and an automaton based approach are presented. As the result of the translation a predicative input language for the probabilistic <b>bounded</b> <b>model</b> checker SiSAT, currently developed in the scope of the AVACS project, i...|$|R
40|$|Abstract. We {{present a}} new and very simple {{translation}} of the <b>bounded</b> <b>model</b> checking problem which is linear both {{in the size of}} the formula and the length of the bound. The resulting CNF-formula has a linear number of variables and clauses. Keywords: <b>bounded</b> <b>model</b> checking, LTL, linear translation, NuSMV. ...|$|R
40|$|Verification {{techniques}} like SAT-based <b>bounded</b> <b>model</b> checking {{have been}} successfully applied {{to a variety of}} system <b>models.</b> Applying <b>bounded</b> <b>model</b> checking to compositional process algebras is, however, not a trivial task. One challenge is that the number of system states for process algebra models is not statically known, whereas exploring the full state space is computationally expensive. This paper presents a compositional encoding of hierarchical processes as SAT problems and then applies state-of-theart SAT solvers for <b>bounded</b> <b>model</b> checking. The encoding avoids exploring the full state space for complex systems so as to deal with state space explosion. We developed an automated analyzer which combines complementing model checking techniques (i. e., <b>bounded</b> <b>model</b> checking and explicit on-the-fly model checking) to validate system models against event-based temporal properties. The experiment results show the analyzer handles large systems. 1...|$|R
40|$|In {{this paper}} a new model-based {{optimizing}} controller {{for a set}} of nonlinear systems is proposed. The nonlinear model set is based on a convex combination of two bounding linear models. An optimal control sequence is computed for each of the two bounding models. The proposed control algorithm is based on a convex combination of the two control sequences. A novel feature in these two optimizations is an added constraint related to the feasibility of the 'other' <b>bounding</b> <b>model.</b> The control algorithm can for example be used in model predictive control. We provide robust feasibility guarantees and an upper bound on the optimal criterion if the bounding models are linear FIR models. Further, simulation examples demonstrate significant feasibility improvements in the case where the bounding models are general linear state-space models. The proposed method guarantees robust feasibility for a 1 -step ahead prediction in the general case. This can be of interest in MPC applications. 1 Introducti [...] ...|$|E
40|$|This paper {{presents}} {{results from}} a coupled thermal, hydrological and mechanical analysis of thermally-induced permeability changes during heating and cooling of fractured volcanic rock at the Drift Scale Test at Yucca Mountain, Nevada. The analysis extends the previous analysis of the four-year heating phase to include newly available data from the subsequent four year cooling phase. The new analysis of the cooling phase shows that the measured changes in fracture permeability follows that of a thermo-hydro-elastic model on average, but at several locations the measured permeability indicates (inelastic) irreversible behavior. At {{the end of the}} cooling phase, the air-permeability had decreased at some locations (to as low as 0. 2 of initial), whereas it had increased at other locations (to as high as 1. 8 of initial). Our analysis shows that such irreversible changes in fracture permeability are consistent with either inelastic fracture shear dilation (where permeability increased) or inelastic fracture surface asperity shortening (where permeability decreased). These data are important for <b>bounding</b> <b>model</b> predictions of potential thermally-induced changes in rock-mass permeability at a future repository at Yucca Mountain...|$|E
40|$|International audienceSolving exactly Combinatorial Optimization Problems (COPs) using a Branch-and-Bound (B&B) {{algorithm}} {{requires a}} huge amount of computational resources. Therefore, we recently investigated designing B&B algorithms on top of graphics processing units (GPUs) using a parallel <b>bounding</b> <b>model.</b> The proposed model assumes parallelizing the evaluation of the lower bounds on pools of sub-problems. The results demonstrated that the size of the evaluated pool has {{a significant impact on the}} performance of B&B and that it depends strongly on the problem instance being solved. In this paper, we design an adaptative parallel B&B algorithm for solving permutation-based combinatorial optimization problems such as FSP (Flow-shop Scheduling Problem) on GPU accelerators. To do so, we propose a dynamic heuristic for parameter auto-tuning at runtime. Another challenge of this work is to exploit larger degrees of parallelism by using the combined computational power of multiple GPU devices. The approach has been applied to the permutation flow-shop problem. Extensive experiments have been carried out on well-known FSP benchmarks using an Nvidia Tesla S 1070 Computing System equipped with two Tesla T 10 GPUs. Compared to a CPU-based execution, accelerations up to 105 are achieved for large problem instances...|$|E
40|$|<b>Bounded</b> <b>model</b> {{checking}} (BMC) {{has recently}} {{emerged as a}} very powerful methodology for the verification of purely discrete systems. Given a horizon of interest, <b>bounded</b> <b>model</b> checking verifies whether all finite-horizon trajectories satisfy a temporal logic formula by first translating the problem to a large satisfiability SAT-problem and then relying on extremely powerful state-of-the art SAT-solvers for a counterexample or a certification of safety. In this paper we consider the problem of <b>bounded</b> <b>model</b> checking for a general class of discrete-time hybrid systems. Critical to our approach is the abstraction of continuous trajectories under discrete observations with a purely discrete system that captures the same discrete sequences. <b>Bounded</b> <b>model</b> checking can then {{be applied to the}} purely discrete, abstracted system. The performance of our approach is illustrated by verifying temporal properties of a hybrid model of an electronic height controller...|$|R
40|$|AbstractGiven a timed {{automaton}} M, {{a linear}} temporal logic formula φ, and a <b>bound</b> k, <b>bounded</b> <b>model</b> checking for timed automata determines {{if there is}} a falsifying path of length k to the hypothesis that M satisfies the specification φ. This problem can be reduced to the satisfiability problem for Boolean constraint formulas over linear arithmetic constraints. We show that <b>bounded</b> <b>model</b> checking for timed automata is complete, and we give lower and upper bounds for the length k of counterexamples. Moreover, we define <b>bounded</b> <b>model</b> checking for networks of timed automata in a compositional way...|$|R
40|$|Checking safety {{properties}} {{is mandatory}} in the validation process of critical software. When formal verification tools fail to prove some properties, the automatic generation of counterexamples {{for a given}} loop depth is achievable, and is therefore an important issue in practice. We propose in this paper a dynamic constraint based exploration strategy for software <b>bounded</b> <b>model</b> checking. Constraint solving is integrated with state exploration to prune state space. Experiments on a real industrial Flasher Manager controller show that our system outperforms {{state of the art}} <b>bounded</b> <b>model</b> checking tools. Keywords <b>bounded</b> <b>model</b> checking, dynamic exploration strategy, constraint programming, counterexamples, program testing 1...|$|R
40|$|Modeling and {{analysis}} techniques {{are used to}} investigate {{the performance of a}} massively parallel version of DIRECT, a global search algorithm widely used in multidisciplinary design optimization applications. Several highdimensional benchmark functions and real world problems are used to test the design effectiveness under various problem structures. Theoretical and experimental results are compared for two parallel clusters with different system scale and network connectivity. The present work aims at studying the performance sensitivity to important parameters for problem configurations, parallel schemes, and system settings. The performance metrics include the memory usage, load balancing, parallel efficiency, and scalability. An analytical <b>bounding</b> <b>model</b> is constructed to measure the load balancing performance under different schemes. Additionally, linear regression models are used to characterize two major overhead sources—interprocessor communication and processor idleness, and also applied to the isoefficiency functions in scalability analysis. For a variety of highdimensional problems and large scale systems, the massively parallel design has achieved reasonable performance. The results of the performance study provide guidance for efficient problem and scheme configuration. More importantly, the generalized design considerations {{and analysis}} techniques are beneficial for transforming many global search algorithms to become effective large scale parallel optimization tools...|$|E
40|$|A {{numerical}} simulation of coupled multiphase fluid flow, heat transfer, and mechanical deformation {{was carried out}} to study coupled thermal-hydrological-mechanical (THM) processes at the Yucca Mountain Drift Scale Test (DST) and for validation of a coupled THM numerical simulator. The ability of the numerical simulator to model relevant coupled THM processes at the DST was evaluated by comparison of numerical results to in situ measurements of temperature, water saturation, displacement, and fracture permeability. Of particular relevance for coupled THM processes are thermally induced rock-mass stress and deformations, with associated changes in fracture aperture and fractured rock permeability. Thermally induced rock-mass deformation and accompanying changes in fracture permeability were reasonably well predicted using a continuum elastic model, although some individual measurements of displacement and permeability indicate inelastic mechanical responses. It is concluded that fracture closure/opening caused by a change in thermally induced normal stress across fractures is an important mechanism for changes in intrinsic fracture permeability at the DST, whereas fracture shear dilation appears to be less significant. Observed and predicted maximum permeability changes at the DST are within one order of magnitude. These data are important for <b>bounding</b> <b>model</b> predictions of potential changes in rock-mass permeability at a future repository in Yucca Mountain...|$|E
40|$|Abstract. Propositional model {{counting}} (#SAT), i. e., {{counting the}} number of satisfying assignments of a propositional formula, is a problem of significant theoretical and practical interest. Due to the inherent complexity of the problem, approximate model counting, which counts {{the number of}} satisfying assignments to within given tolerance and confidence level, was proposed as a practical alternative to exact model counting. Yet, approximate model counting has been studied essentially only theoretically. The only reported implementation of approximate model counting, due to Karp and Luby, worked only for DNF formulas. A few existing tools for CNF formulas are <b>bounding</b> <b>model</b> counters; they can handle realistic problem sizes, but fall short of providing counts within given tolerance and confidence, and, thus, are not approximate model counters. We present here a novel algorithm, as well as a reference implementation, that is the first scalable approximate model counter for CNF formulas. The algorithm works by issuing a polynomial number of calls to a SAT solver. Our tool, ApproxMC, scales to formulas {{with tens of thousands of}} variables. Careful experimental comparisons show that ApproxMC reports, with high confidence, bounds that are close to the exact count, and also succeeds in reporting bounds with small tolerance and high confidence in cases that are too large for computing exact model counts. ...|$|E
40|$|<b>Bounded</b> <b>Model</b> Checking (BMC) {{based on}} SAT methods {{consists}} {{in searching for}} a counterexample of a particular length and to generate a propositional formula that is satis able i such a counterexample exists. Our paper shows how the concept of <b>bounded</b> <b>model</b> checking can be extended to deal with TACTL (the universal fragment of TCTL) properties of Timed Automata...|$|R
40|$|Abstract. <b>Bounded</b> <b>model</b> {{checking}} (BMC) is {{a technique}} for overcoming the state explosion problem which has gained wide industrial acceptance. <b>Bounded</b> <b>model</b> checking is typically applied only for linear-time properties, with a few exceptions, which search for a counter-example {{in the form of}} a tree-like structure with a pre-determined shape. We suggest a new approach to <b>bounded</b> <b>model</b> checking for universal branching-time logic, in which we encode an arbitrary graph and allow the SAT solver to choose both the states and edges of the graph. This significantly reduces the size of the counter-example produced by BMC. A dynamic completeness criterion is presented which can be used to halt the <b>bounded</b> <b>model</b> checking when it becomes clear that no counterexample can exist. Thus, verification of the checked property can also be achieved. Experiments show that our approach outperforms another recent encoding for µ-calculus on complex ACTL properties. ...|$|R
40|$|<b>Bounded</b> <b>Model</b> Checking is one {{the most}} {{successful}} techniques for finding bugs in program. However, for programs with loops iterating over large-sized arrays, <b>bounded</b> <b>model</b> checkers often exceed the limit of resources available to them. We present a transformation that enables <b>bounded</b> <b>model</b> checkers to verify a certain class of array properties. Our technique transforms an array-manipulating program in ANSI-C to an array-free and loop-free program. The transformed program can efficiently be verified by an off-the-shelf <b>bounded</b> <b>model</b> checker. Though the transformed program is, in general, an abstraction of the original program, we formally characterize the properties for which the transformation is precise. We demonstrate the applicability and usefulness of our technique on both industry code as well as academic benchmarks. Comment: Pre-proceedings {{paper presented at the}} 26 th International Symposium on Logic-Based Program Synthesis and Transformation (LOPSTR 2016), Edinburgh, Scotland UK, 6 - 8 September 2016 (arXiv: 1608. 02534...|$|R
40|$|International audienceBranch-and-bound (B&B) {{algorithms}} {{are attractive}} methods for solving to optimality combinatorial opti-mization problems using an implicit enumeration of a dynamically built tree-based search space. Neverthe-less, they are time-consuming {{when dealing with}} large problem instances. Therefore, pruning tree nodes (subproblems) is traditionally used as a powerful mechanism {{to reduce the size}} of the explored search space. Pruning requires to perform the bounding operation, which consists of applying a lower bound function to the subproblems generated during the exploration process. Preliminary experiments performed on the Flow-Shop scheduling problem (FSP) have shown that the bounding operation consumes over 98 % of the execution time of the B&B algorithm. In this paper, we investigate the use of graphics processing unit (GPU) computing as a major complementary way to speed up the search. We revisit the design and implementation of the parallel <b>bounding</b> <b>model</b> on GPU accelerators. The proposed approach enables data access optimiza-tion. Extensive experiments have been carried out on well-known FSP benchmarks using an Nvidia Tesla C 2050 GPU card. Compared to a CPU-based single core execution using an Intel Core i 7 - 970 processor without GPU, speedups higher than 100 times faster are achieved for large problem instances. At an equiv-alent peak performance, GPU-accelerated B&B is twice faster than its multi-core counterpart...|$|E
40|$|Solving exactly Combinatorial Optimization Problems (COPs) using a Branch-and-Bound (B&B) {{algorithm}} {{requires a}} huge amount of computational resources. Therefore, we recently investigated designing B&B algorithms on top of graphics processing units (GPUs) using a parallel <b>bounding</b> <b>model.</b> The proposed model assumes parallelizing the evaluation of the lower bounds on pools of sub-problems. The results demonstrated that the size of the evaluated pool has {{a significant impact on the}} performance of B&B and that it depends strongly on the problem instance being solved. In this paper, we design an adaptative parallel B&B algorithm for solving permutation-based combinatorial optimization problems such as FSP (Flow-shop Scheduling Problem) on GPU accelerators. To do so, we propose a dynamic heuristic for parameter auto-tuning at runtime. Another challenge of this work is to exploit larger degrees of parallelism by using the combined computational power of multiple GPU devices. The approach has been applied to the permutation flow-shop problem. Extensive experiments have been carried out on well-known FSP benchmarks using an Nvidia Tesla S 1070 Computing System equipped with two Tesla T 10 GPUs. Compared to a CPU-based execution, accelerations up to 105 are achieved for large problem instances. Comment: 14 th IEEE International Conference on High Performance Computing and Communications, HPCC 2012 (2012...|$|E
40|$|Propositional model {{counting}}} (#SAT), i. e., {{counting the}} number of satisfying assignments of a propositional formula, is a problem of significant theoretical and practical interest. Due to the inherent complexity of the problem, approximate model counting, which counts {{the number of}} satisfying assignments to within given tolerance and confidence level, was proposed as a practical alternative to exact model counting. Yet, approximate model counting has been studied essentially only theoretically. The only reported implementation of approximate model counting, due to Karp and Luby, worked only for DNF formulas. A few existing tools for CNF formulas are <b>bounding</b> <b>model</b> counters; they can handle realistic problem sizes, but fall short of providing counts within given tolerance and confidence, and, thus, are not approximate model counters. We present here a novel algorithm, as well as a reference implementation, that is the first scalable approximate model counter for CNF formulas. The algorithm works by issuing a polynomial number of calls to a SAT solver. Our tool, ApproxMC, scales to formulas {{with tens of thousands of}} variables. Careful experimental comparisons show that ApproxMC reports, with high confidence, bounds that are close to the exact count, and also succeeds in reporting bounds with small tolerance and high confidence in cases that are too large for computing exact model counts. Comment: Conference version will appear in CP 201...|$|E
40|$|Abstract. A {{method of}} {{automatic}} abstraction is presented that uses proofs of unsatisfiability derived from SAT-based <b>bounded</b> <b>model</b> checking {{as a guide}} to choosing an abstraction for unbounded model checking. counterexamples. The performance of this approach on benchmarks derived from microprocessor verification indicates that SAT solvers are quite effective in eliminating logic that is not relevant to a given property. Moreover, benchmark results suggest that when <b>bounded</b> <b>model</b> checking successfully terminates, and the problem is unsatisfiable, the number of state variables in the proof of unsatisfiability tends to be small. In almost all cases tested, when <b>bounded</b> <b>model</b> checking succeeded, unbounded model checking of the resulting abstraction also succeeded. ...|$|R
40|$|Abstract. SAL 2 augments the {{specification}} language and explicit-state model checker of SAL 1 with high-performance symbolic and <b>bounded</b> <b>model</b> checkers, and with novel infinite <b>bounded</b> and witness <b>model</b> checkers. The <b>bounded</b> <b>model</b> checker can use several different SAT solvers, while the infinite <b>bounded</b> <b>model</b> checker similarly can use several different ground decision procedures. SAL 2 provides a scriptable API for its basic model checking and analysis functions {{that can be}} used to extend the system. All four new model checkers are implemented using this interface. Its high-level {{specification language}} and wide range of model checkers make SAL convenient for those seeking a ready-to-use solution, while its scriptability and flexible choice of backend analyzers should make it attractive to those seeking an experimental platform. ...|$|R
40|$|Abstract—Timed automata (TAs) are {{a common}} {{formalism}} for <b>modeling</b> timed systems. <b>Bounded</b> <b>model</b> checking (BMC) is a verification method that searches for runs violating a property using a SAT or SMT solver. MITL is a real-time extension of the linear time logic LTL. Originally, MITL was defined for traces of non-overlapping time intervals rather than the “super-dense ” time traces allowing for intervals overlapping in single points that are employed by the nowadays common semantics of timed automata. In this paper we extend the semantics of a fragment of MITL to super-dense time traces and devise a <b>bounded</b> <b>model</b> checking encoding for the fragment. We prove correctness and completeness {{in the sense that}} using a sufficiently large bound a counter-example to any given non-holding property can be found. We have implemented the proposed <b>bounded</b> <b>model</b> checking approach and experimentally studied the efficiency and scalability of the implementation. Keywords-timed automaton; metric interval temporal logic; <b>bounded</b> <b>model</b> checking; satisfiability modulo theories I...|$|R
