22|1081|Public
50|$|The {{number of}} {{switching}} elements required to realize a non-blocking network in highest, followed by rearrangeable non-blocking. <b>Blocking</b> <b>network</b> uses least switching elements.|$|E
5000|$|Omega:An {{omega network}} {{consists}} of multiple stages of 2*2 switching elements. Each input has a dedicated connection to an output. An N*N omega network, has log(N) {{number of stages}} and N\2 number of switching elements in each stage for perfect shuffle between stages. Thus network has complexity of 0(N log(N)). Each switching element can employ its own switching algorithm. Consider an 8*8 omega network. There are 8! = 40320 1-to-1 mappings from input to output. There are 12 switching element for total permutation of 2^12 = 4096. Thus, it is a <b>blocking</b> <b>network.</b>|$|E
30|$|The RBP in real-life {{is a very}} {{large-scale}} {{problem with}} billions of decision variables. To solve it, we need to design the underlying <b>blocking</b> <b>network,</b> which is a virtual network that is overlaid on the physical network, and to route different commodities, where each set of railcars with the same origin-destination pair of nodes defines a separate commodity on the <b>blocking</b> <b>network</b> to minimize the system-wide transportation costs. Multicommodity flow and network-design problems {{are among the most}} difficult combinatorial problems in research operations. When they comprise a few hundred design variables, we try solving them optimally. However, the real-life RBP often contain over a million design variables and hundreds of billions of flow variables. Modeling and solving them, using commercial software, is nearly impossible.|$|E
40|$|Abstract—The energy {{conservation}} of lossless network reflects {{a series of}} novel symmetry in S parameter. This paper presents the generalized modulus symmetry, spurious reciprocity, constant characteristic phase and determinant of the lossless <b>block</b> <b>network.</b> The perfect matching condition of <b>block</b> load <b>network</b> [Γl] and the invariable lossless property of S parameter of generalized <b>block</b> <b>network</b> are developed. Application examples are given to illustrate the application {{and validity of the}} proposed theory. 1...|$|R
5000|$|Composite {{function}} block - CFB: Its functionality {{is defined by}} a function <b>block</b> <b>network.</b>|$|R
30|$|Firewalls, {{hardware}} or software-based, {{to allow}} or <b>block</b> <b>network</b> traffic based on pre-defined set of rules.|$|R
40|$|As {{clinical}} MRI systems {{continue to}} advance, larger focus {{is being given}} to image uniformity. Good image uniformity begins with generating uniform magnetic elds, which are easily distorted by induced currents on receive-only surface coils. It has become an industry standard to combat these induced currents by placing RF blocking networks on surface coils. This paper explores eect of <b>blocking</b> <b>network</b> impedance of phased array surface coils on B 1 distortion. It has been found and veried, that traditional approaches for <b>blocking</b> <b>network</b> design in complex phased arrays can leave undesirable B 1 distortions at 3 Tesla. The traditional approach of LC tank blocking is explored, but shifts from the idea that higher impedance equals better B 1 distortion at 3 T. The result is a ne...|$|E
30|$|In the {{proposed}} method, each gene represents one commodity, {{and the value}} of this gene is the legal blocking path number (on the <b>blocking</b> <b>network)</b> which this commodity can select. To determine this legal path for each commodity, a comprehensive preprocess is needed. In the preprocess procedure, the legal paths for each commodity, cost of each path, number and type of block on each path are determined.|$|E
30|$|In this section, we {{describe}} the RBP and rail operations in general. In the RBP, the physical rail network (the railroad terminals and tracks) is already defined. The <b>blocking</b> <b>network</b> to be constructed is a virtual network that is overlaid on the physical network. The blocks are virtual express arcs which a commodity may take to have uninterrupted service between two terminals that are not necessarily connected by a physical link (Newton [1996]).|$|E
2500|$|... : An {{open source}} utility that uses BITS to perform file {{synchronization}} on Server Message <b>Block</b> <b>network</b> shares.|$|R
5000|$|Subapplication: Its {{functionality}} is also {{defined as}} a function <b>block</b> <b>network.</b> In contrast to CFBs, subapplications can be distributed.|$|R
40|$|This paper {{presents}} {{a new approach}} to modelling and verification of function block applications of the IEC 61499 standard. The approach uses the language of logic programming Prolog to represent a model of function <b>block</b> <b>network</b> and to verify its properties. The class of properties that can be checked is extended to more substantial queries providing in return not only “yes ” or “no”, but also the parameters explaining the reasons. The models essentially use the topological properties of the function <b>block</b> <b>network</b> and allow data of arbitrary types (not only Boolean) be used in the queries. 1...|$|R
3000|$|The {{objective}} is to minimize {{the sum of the}} costs of delivering each commodity using the <b>blocking</b> <b>network</b> formed by blocks for which y a [*]=[*] 1. For each terminal, constraints (2) are balance equations for the flow of each commodity. For each potential block, constraints (3) prevent flow on blocks, which are not built and enforce the upper bound u a [...] on flow for blocks, which are built. The constraints (4) enforce the terminal limit B(i) for the sum of the blocks which leave the terminal. The constraints (5) model the volume of cars, which may be classified at each terminal.|$|E
40|$|With ever {{increasing}} network speed, scalable and reliable detection of network port scans {{has become a}} major challenge. In this paper, we present a scalable and flexible architecture and a novel algorithm, to detect and block port scans in real time. The proposed architecture detects fast scanners as well as stealth scanners having large inter-probe periods. FPGA implementation of the proposed system gives an average throughput of 2 Gbps with a system clock frequency of 100 MHz on Xilinx Virtex-II Pro FPGA. Experimental results on real network trace show the effectiveness of the proposed system in detecting and <b>blocking</b> <b>network</b> scans with very low false positives and false negatives...|$|E
40|$|Abstract. Queueing network {{models have}} been {{extensively}} used to represent and analyze resource sharing systems, such as production, communication and information systems. Queueing networks with blocking are used to represent systems with finite capacity resources and with resource constraints. Different blocking mechanisms have been defined and analyzed in the literature to represent distinct behaviors of real systems with limited resources. Exact product form solutions of queueing networks with blocking have been derived, under special constraints, for different blocking mechanisms. In this paper we present a survey of product form solutions of queueing networks with blocking and equivalence properties among different <b>blocking</b> <b>network</b> models. By using such equivalences we can extend product form solution to queueing network models with different blocking mechanisms. The equivalence properties include relationships between open and closed product form queueing networks with different blocking mechanisms. Index terms- queueing networks, finite capacity queue, blocking, equivalence, performance analysis, product-form...|$|E
5000|$|While a {{hardware}} appliance can limit {{the rate for}} a given range of IP-addresses on layer 4, it risks to <b>block</b> <b>networks</b> with many users, which are masked by NAT with a single IP-address of an ISP.|$|R
30|$|BEACON_CMM is {{used for}} the {{detection}} of blocking attacks; attacks launched by powerful jammers that completely <b>block</b> <b>network's</b> operation. During a blocking attack, AP is unable to transmit packets, hence beacon loss reaches 100 %. This algorithm uses as metric the estimated beacon loss within a time window.|$|R
40|$|AbstractChannel graphs {{have been}} widely used in the study of <b>blocking</b> <b>networks.</b> In this paper, we show that a bit {{permutation}} network has a unique channel graph if and only if it is connected, and two connected bit permutation networks are isomorphic if and only if their channel graphs are isomorphic...|$|R
40|$|Machine {{learning}} based {{system are}} increasingly being used for sensitive tasks such as security surveillance, guiding autonomous vehicle, taking investment decisions, detecting and <b>blocking</b> <b>network</b> intrusion and malware etc. However, recent {{research has shown that}} machine learning models are venerable to attacks by adversaries at all phases of machine learning (eg, training data collection, training, operation). All model classes of machine learning systems can be misled by providing carefully crafted inputs making them wrongly classify inputs. Maliciously created input samples can affect the learning process of a ML system by either slowing down the learning process, or affecting the performance of the learned mode, or causing the system make error(s) only in attacker's planned scenario. Because of these developments, understanding security of machine learning algorithms and systems is emerging as an important research area among computer security and machine learning researchers and practitioners. We present a survey of this emerging area in machine learning...|$|E
40|$|Network {{intrusion}} prevention systems {{provide an}} important proactive defense capability against se-curity threats by detecting and <b>blocking</b> <b>network</b> attacks. This task {{can be highly}} complex, and software-based network intrusion prevention systems are currently not capable of handling high speed links. This work focuses on the design and implementation of a high-performance, low-cost, flexible, and scalable network intrusion prevention system that combines software-based network intrusion detection engines and a network processor board. The network processor acts as a customized load balancer that cooperates {{with a set of}} content-based network intrusion detection engines in processing network traffic. We show that the components of such a system, if designed properly, can achieve high performance, by eliminating redundant processing and communication. We describe a system architecture and present a prototype built using low-cost, off-the-shelf technol-ogy: an IXP 1200 network processor evaluation board and commodity PCs. Our evaluation shows that our enhancements reduce the processing load of the network intrusion detection engines by at least 45 %. The result is a system that can handle a fully-loaded Gigabit Ethernet link using at most four detectio...|$|E
40|$|Abstract. Effective and {{efficient}} knowledge dissemination and reason-ing in distributed, real-time, and embedded (DRE) systems remains a hard problem {{due to the}} need for tight time constraints on evaluation of rules and scalability in dissemination of knowledge events. Limita-tions in satisfying the tight timing properties stem from the fact that most knowledge reasoning engines continue to be developed in managed languages like Java and Lisp, which incur performance overhead in their interpreters due to wasted precious clock cycles on managed features like garbage collection and indirection. Limitations in scalable dissemination stem from the presence of ontologies and <b>blocking</b> <b>network</b> communi-cations involving connected reasoning agents. This paper addresses the existing problems with timeliness and scalability in knowledge reasoning and dissemination by presenting a C++-based knowledge reasoning so-lution that operates over a distributed and anonymous publish/subscribe transport mechanism provided by the OMG’s Data Distribution Service (DDS). Experimental results evaluating the performance of the C++-based reasoning solution illustrate microsecond-level evaluation laten-cies, while the use of the DDS publish/subscribe transport illustrates significant scalability in dissemination of knowledge events while also tolerating joining and leaving of system entities...|$|E
50|$|On 3 June 2007, Propeller TV began airing anime {{as part of}} its Anime <b>Network</b> <b>block,</b> {{which was}} {{produced}} by A.D. Vision.† The Anime <b>Network</b> <b>block</b> was aired 2 hours with 4 different anime series from 8:00pm to 10:00pm daily. Propeller TV ended its Anime <b>Network</b> <b>block</b> on 1 January 2008.|$|R
5000|$|Paravirtualized Xen devices: <b>block</b> device, <b>network</b> card, console, framebuffer {{and input}} device ...|$|R
50|$|Starting in the mid-1990s, {{the station}} added more talk and reality shows, and {{shifted away from}} {{incorporating}} classic sitcoms and movies on its schedule. In 2003, network-supplied children's programs were dropped from the station after UPN discontinued the network's Disney's One Too <b>block</b> (<b>network</b> children's shows eventually returned to WJZY when the station became a CW affiliate in 2006).|$|R
40|$|SDN. ?? ???????? ????????????? ?? ?????? ??????????? "???????????" ??????? ? ????? ????? ?????? ????????? ????????????? ?????????????. ?? ???????? ????? ????????????? DDoS-?????. ?????????? ??????????? ?????? ?????? ?? ?????????? ?? ????????, ?? ???????? ??????? ??????? ????????? ?????? ?? ??????????????? ?????? ? ??????. ? ???? ????????? ??????? ???????? ????????? ?? ??????????? ?????, ????? ?????????? ?? IP-????????. ??? ?????????? ???????????? ??????????????? ????????? ???????????? ????????? ???????? ? ????????? ????????? ???? ????????? ???????????????? ???????????. ??? ??????????? SDN ????? ???????????????? ???????? ????? Mininet. ?????????? ?????? ????????? ????????????? ?????????????. ?????? ??????????? ???????????, ??, ?????????????? ???????? SDN, ? ???? ????????????? ?????????, ?????????, ??????? ??????????? ?????????? ????????, ?? ??????? ?????? ??? ?????? ? ?????????????? ????????? ???? ? DDoS. This paper {{examines}} {{the problem of}} detecting and <b>blocking</b> <b>network</b> attacks using SDN. This problem is formulated as the problem of finding the "correct" vector, in fact, it is {{the task of the}} binary integer programming. The DDoS-attack is used as a network attack. A mathematical model of the problem and algorithm to identify sets of attacking hosts from the recorded data is developed. Upon detection of the set, the problem is reduced to the problem of preventing the attack, which means blocking IP-addresses. To evaluate the effectiveness of the proposed algorithm of intrusion detection, experimental studies have been conducted. To simulate SDN networks, Mininet network emulator was used. The task of the binary integer programming was solved. The analysis of results confirms that using SDN advantages, namely, centralized management and flexibility, we were able to implement a genetic algorithm, which protected the network from {{one of the most common}} network attacks ? DDoS. ??????????? ???????? ??????????? ? ???????????? ??????? ???? ??? ?????? SDN. ??? ???????? ?????????????? ??? ?????? ?????????? ????????????? ??????? ? ???????? ??????? ????????? ?????????????? ????????????????. ? ???????? ??????? ????? ??????????????? DDoS-?????. ????????? ?????????????? ?????? ?????? ? ?????????? ?? ????????, ??????????? ??????? ????????? ????????? ?????? ?? ?????????????????? ?????? ? ????. ??? ??????????? ????????? ?????? ????????? ? ?????????????? ?????, ?. ?. ?????????? ?? IP-???????. ??? ?????? ????????????? ????????????? ????????? ???????????? ?????????? ???????? ? ??????????? ??????? ???? ???? ????????? ????????????????? ????????????. ??? ????????????? SDN ????? ????????????? ???????? ????? Mininet. ?????? ?????? ????????? ?????????????? ????????????????. ?????? ??????????? ????????????, ???, ????????? ???????????? SDN, ? ?????? ????????????? ??????????, ????????, ??????? ??????????? ???????????? ????????, ?????????? ???? ?? ????? ?? ????? ???????????????? ??????? ???? ? DDoS...|$|E
40|$|Approved {{for public}} release; {{distribution}} is unlimited. Computer networks {{are constantly being}} actively probed in attempts to build topological maps of intermediate nodes and discover endpoints, either for academic research or nefarious schemes. While some networks employ recommended conventional countermea-sures to simply block such probing at the boundary or shunt such traffic to honey pot systems, other networks remain completely open either by design or neglect. Our research builds on previous work {{on the concept of}} presenting a deceptive network topology, which goes beyond conventional network security countermeasures of detecting and <b>blocking</b> <b>network</b> probe traffic. By employing the technologies from the emerging field of Software-Defined Networking and the OpenFlow protocol, we constructed a custom-built SDN controller to listen for network probes and craft customized deceptive replies to those probes. Through employment of various network probing utilities against our custom-built SDN controller in a test network environment, we are able to present a believable deceptive representation of the network topology to an adversary. Therefore, this work demonstrates that the primitives of the expand-ing OpenFlow protocol show strong potential for constructing an enterprise-grade dynamic deceptive network topology solution to protect computer networks. US Navy (USN) autho...|$|E
40|$|Network {{intrusion}} prevention systems {{provide an}} important proactive defense capability against security threats by detecting and <b>blocking</b> <b>network</b> attacks. This task {{can be highly}} complex and traditional firewall system are currently not capable of handling fast attack through the operating system. The problems arise when many exploits attempt {{to take advantage of}} weaknesses in every protocols that are allowed through our perimeter firewalls, and once the Web server has been compromised, this can often be used as a springboard to launch additional attacks on other internal services. Once a “rootkit” or “back door” has been installed on a computer, the hacker has ensured that he will have unfettered access to that machine at any point in the future. Thus, iptables also called as Netfilter can also be implement as an intrusion prevention system. Iptables works by filtering the traffic flow between your computer and the Internet. It can limit access to and from the Internet to only specific computers on your network. It can also limit the type of communication, selectively permitting or denying various Internet services. Hence, to harden the iptables rule, another tool need to be apply to work with the iptables rule script. The psad tool is good in implementing some additional feature like an e-mail alert and logfile analysi...|$|E
40|$|We define, in this paper, {{for every}} n 1, n-dimensional block algebra {{as a set}} of relations, the block relations, {{together}} with the fundamental operations of composition, conversion and intersection. We examine the 13 n atomic relations of this algebra which constitute the exhaustive list of the permitted relations that can hold between two blocks whose sides are parallel to the axes of some orthogonal basis in the n-dimensional Euclidean space over the field of real numbers. We organize these atomic relations in ascending order with the intention of defining the concept of convexity as well as the one of preconvexity. We will confine ourselves to the issue of the consistency of <b>block</b> <b>networks</b> which consist of sets of constraints between a finite number of blocks. Showing that the concepts of convexity and preconvexity are preserved by the fundamental operations, we prove the tractability of the problem of the consistency of strongly preconvex <b>block</b> <b>networks,</b> on accoun [...] ...|$|R
40|$|Abstract—The Sliding Window Protocol {{has long}} been {{established}} as an important network protocol in the ISO-OSI protocol stack. However the protocol cannot prevent the possibility of severe network degradation due to link failures. The paper explores a scenario when this might occur and proposes {{a solution to the}} problem using existing protocols and techniques. We analyze the behavior of the network at the Data Link Layer and use stochastic process modeling and the theory of <b>blocking</b> <b>networks</b> to identify parts of the protocol that might reduce the probability of backpressure from degrading the performance of the network at one of its lowest layers. Concurrent to the development of the mathematical models, we have created a tool to simulate and test the operation of the Sliding Window Protocol over multiple machines that are sequentially connected. The results we arrived at by using both the formal and empirical approaches are also described. Index Terms—Fault-tolerant networks, sliding window protocol, multi-hop networks, stochastic process, backpressure, <b>blocking</b> <b>networks,</b> data link layer...|$|R
50|$|The third {{layer of}} defense is a longterm block of the entire network segment. Google has <b>blocked</b> large <b>network</b> <b>blocks</b> for months. This sort of block is likely {{triggered}} by an administrator and only happens if a scraping tool is sending a very high amount of requests.|$|R
40|$|Coordinated {{changes at}} {{excitatory}} and inhibitory synapses {{are essential for}} normal brain development and function. It is well established that excitatory neurons undergo structural changes, but our knowledge about inhibitory structural plasticity is rather scarce. Here we present a quantitative analysis {{of the dynamics of}} GABAergic boutons in the dendritic region of the hippocampal CA 1 area using time-lapse two-photon imaging in organotypic hippocampal cultures from GAD 65 -GFP mice. We show that ~ 20 % of inhibitory boutons are not stable. They are appearing, disappearing and reappearing at specific locations along the inhibitory axon and reflect immature or incomplete synapses. Furthermore, we observed that persistent boutons show large volume fluctuations over several hours, suggesting that presynaptic content of inhibitory synapses is not constant. Our data show that inhibitory boutons are highly dynamic structures and suggest that inhibitory axons are continuously probing potential locations for inhibitory synapse formation by redistributing presynaptic material along the axon. In addition, we found that neuronal activity affects the exploratory dynamics of inhibitory axons. <b>Blocking</b> <b>network</b> activity rapidly reduces the number of transient boutons, whereas enhancing activity reduces the number of persistent inhibitory boutons, possibly reflecting enhanced competition between boutons along the axon. The latter effect requires signaling through GABAA receptors. We propose that activity-dependent regulation of bouton dynamics contributes to inhibitory synaptic plasticity...|$|E
40|$|Accepted at The Workshop on the Economics of Information Security (WEIS), 2016 Free {{content and}} {{services}} on the Web are often supported by ads. However, with {{the proliferation of}} intrusive and privacy-invasive ads, a significant proportion of users have started to use ad blockers. As existing ad blockers are radical (they block all ads) and are not designed taking into account their economic impact, ad-based economic model of the Web is in danger today. In this paper, we target privacy-sensitive users and provide them with fine-grained control over tracking. Our working assumption is that some categories of web pages (for example, related to health, religion, etc.) are more privacy-sensitive to users than others (education, science, etc.). Therefore, our proposed approach consists in providing users with an option to specify the categories of web pages that are privacy-sensitive to them and block trackers present on such web pages only. As tracking is prevented by <b>blocking</b> <b>network</b> connections of third-party domains, we avoid not only tracking but also third-party ads. Since users will continue receiving ads on web pages belonging to non-sensitive categories, our approach essentially provides a trade-off between privacy and economy. To test the viability of our solution, we implemented it as a Google Chrome extension, named MyTrackingChoices (available on Chrome Web Store). Our real-world experiments with MyTrackingChoices show that the economic impact of ad blocking exerted by privacy-sensitive users can be significantly reduced...|$|E
40|$|In {{order to}} install an Android application, users are {{commonly}} re-quired to grant these application both the permission to access in-formation on the device, {{some of which}} users may consider private, as well as access the network, {{which could be used}} to leak this in-formation. We present two privacy controls to empower users to protect their data from exfiltration by permission-hungry applica-tions: (1) covertly substituting shadow data in place of data that the user wants to keep private, and (2) <b>blocking</b> <b>network</b> transmissions that contain data the user made available to the application for on-device use only. We retrofit the Android operating system to implement these two controls for use with unmodified applications. A key challenge of imposing shadowing and exfiltration blocking on existing applica-tions is that these controls could cause side effects that interfere with user-desired functionality. To measure the impact of side ef-fects we develop an automated testing methodology that records the visual output of application executions both with and without pri-vacy controls, then automatically highlights the visual differences between the different executions. We evaluate our privacy con-trols on 50 applications from the Android marketplace, selected from those that were both popular and permission-hungry. We find that our privacy controls can successfully reduce the effective per-missions of the application without causing side effects for 66 % of the tested applications. The remaining 34 % of applications im-plemented user-desired functionality that required violating the pri-vacy requirements our controls were designed to enforce; there was an unavoidable choice between privacy and user-desired function-ality. 1...|$|E
40|$|We revisit {{smoothing}} networks [3], {{which are}} made up of balancers and wires. Tokens arrive arbitrarily on w input wires and propagate asynchronously through the network; each token gets service on the output wire it arrives at. The smoothness is the maximum discrepancy among the numbers of tokens arriving at the w output wires. We assume that balancers are oriented independently and uniformly at random. We present a collection of lower and upper bounds on smoothness, which are to some extent surprising: • The smoothness of a single <b>block</b> <b>network</b> [7] is lg lg w+ Θ(1) (with high probability), where the additive constant is between − 2 and 4. This tight bound improves vastly over the upper bound of O (√ lg w) from [9], and it significantly improves our understanding of the smoothing properties of the <b>block</b> <b>network.</b> • Most significantly, the smoothness of the cascade of two <b>block</b> <b>networks</b> is no more than 16 (with high probability); this is the first known randomized network with so small depth (2 lg w) and so good smoothness. The proof introduces some novel combinatorial and probabilistic structures and techniques which may be further applicable. This result demonstrates the full power of randomization in smoothing networks. • There is no randomized 1 -smoothing network of width w and depth d that achieves 1 -smoothness with prob-d ability better than. In view of the determinis-w− 1 tic 1 -smoothing network in [14], this result implies the first separation between deterministic and randomized smoothing networks, which demonstrates an unexpected limitation of randomization: it can get t...|$|R
5000|$|Paravirtualized VirtIO devices: <b>block</b> device, <b>network</b> card, SCSI controller, serial interface, balloon driver, 9pfs {{filesystem}} driver ...|$|R
5000|$|End2End Direct Messaging {{has several}} {{advantages}} over indirect messaging via intermediary servers. End2End Direct traffic is highly decentralized, going only via the shortest network path between communicating parties. This {{makes it more}} difficult to intercept, monitor or block. Intermediary servers introduce reliability, salability and security issues. It is much easier to monitor or <b>block</b> <b>network</b> traffic that must go through a small number of [...] "choke points".|$|R
