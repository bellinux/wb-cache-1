1337|1|Public
50|$|<b>Burstiness</b> of inter-event times {{dramatically}} slows spreading processes on networks. Since many real-world networks exhibit <b>burstiness</b> {{this has}} implications for the spread of disease, computer viruses, information, and ideas.|$|E
50|$|In statistics, <b>burstiness</b> is the {{intermittent}} {{increases and}} decreases in activity or frequency of an event.One of measures of <b>burstiness</b> is the Fano factor—a ratio between the variance and mean of counts.|$|E
50|$|<b>Burstiness</b> is {{observable}} {{in natural}} phenomena, such as natural disasters, or other phenomena, such as network/data/email network traffic or vehicular traffic. <b>Burstiness</b> is, in part, due {{to changes in}} the probability distribution of inter-event times. Distributions of bursty processes or events are characterised by heavy, or fat, tails.|$|E
5000|$|<b>Burstiness</b> of web traffic {{requires}} spare bandwidth {{to rapidly}} accommodate the bursty traffic ...|$|E
50|$|The {{bandwidth}} {{limit and}} <b>burstiness</b> limit for the connection may be specified in a traffic contract. A bandwidth limit may be specified as a packet or frame rate, a byte or bit rate, {{or as an}} emission interval between the packets. A limit on <b>burstiness</b> may be specified as a jitter or delay variation tolerance, or as a maximum burst size (MBS).|$|E
50|$|The {{limit value}} or delay {{variation}} tolerance also controls how many packets can arrive in a burst, {{determined by the}} excess depth of the bucket over the capacity required for a single packet. Hence MBS is also a measure of <b>burstiness</b> or jitter, {{and it is possible}} to specify the <b>burstiness</b> as an MBS and derive the limit value τ from this or to specify it as a jitter/delay variation tolerance/limit value, and derive the MBS from this.|$|E
50|$|Traffic {{policing}} is the dropping (discarding) or {{reduction in}} priority (demoting) of packets (or frames) that exceed some specified bandwidth and or <b>burstiness</b> limit.|$|E
50|$|In {{the case}} of the leaky bucket {{algorithm}} as a meter, the limits on the traffic can be a bandwidth and a <b>burstiness</b> of the output.|$|E
50|$|A {{conforming}} flow {{can thus}} contain traffic {{with an average}} rate up to {{the rate at which}} tokens are added to the bucket, and have a <b>burstiness</b> determined by the depth of the bucket. This <b>burstiness</b> may be expressed in terms of either a jitter tolerance, i.e. how much sooner a packet might conform (e.g. arrive or be transmitted) than would be expected from the limit on the average rate, or a burst tolerance or maximum burst size, i.e. how much more than the average level of traffic might conform in some finite period.|$|E
50|$|<b>Burstiness</b> {{varies from}} −1 to 1. B = 1 {{indicates}} a maximally bursty sequence, B = 0 indicates a Poisson distribution, and B = −1 indicates a periodic sequence.|$|E
50|$|The {{ability to}} {{accurately}} forecast request patterns {{is an important}} requirement of capacity planning. A practical consequence of <b>burstiness</b> and heavy-tailed and correlated arrivals is difficulty in capacity planning.|$|E
5000|$|There is an {{interesting}} consequence of seeing the leaky bucket as a queue for variable packet lengths as a specific implementation of the token bucket or leaky bucket as a meter in traffic shaping. This is that the bucket of the meter has a depth, n, and, as is always {{the case with the}} token bucket, this depth determines the <b>burstiness</b> of the output traffic (perhaps in relation to the average or minimum number of tokens required by the packets). Hence, it is possible to quantify the <b>burstiness</b> of the output of this [...] "byte counting" [...] leaky bucket as a meter, unless all packets are of the maximum length when it becomes pointless. However, this ability to define a <b>burstiness</b> for the output is in direct contradiction to the statement that the leaky bucket (as a queue) necessarily gives an output with a rigid rate, no matter how bursty the input.|$|E
5000|$|<b>Burstiness</b> of inter-contact {{time between}} nodes in a {{time-varying}} network can decidedly slow spreading processes over the network. This {{is of great}} interest for studying the spread of information and disease.|$|E
50|$|Multiple sets of {{contract}} parameters {{can be applied}} concurrently to a connection using multiple instances of the leaky bucket algorithm, each of which may take a bandwidth and a <b>burstiness</b> limit: see Dual Leaky Bucket Controller.|$|E
50|$|Given the {{ubiquity of}} scale-invariant <b>burstiness</b> {{observed}} across diverse networking contexts, finding an effective traffic control algorithm capable of detecting and managing self-similar traffic has become an important problem. The problem of controlling self-similar network traffic {{is still in its}} infancy.|$|E
50|$|The {{points to}} note {{are that the}} leaky bucket algorithm, when used as a meter, can allow a {{conforming}} output packet stream with jitter or <b>burstiness,</b> {{can be used in}} traffic policing as well as shaping, and can be implemented for variable length packets.|$|E
5000|$|<b>Burstiness</b> as an {{empirical}} quantity {{can be calculated}} for any sequence of inter-event times, , by comparing the sequence to one generated by a Poisson process. The ratio of the standard deviation, , to the mean, , of a Poisson process is 1. This measure compares [...] to 1.|$|E
50|$|Traffic shaping is the {{retiming}} (delaying) of packets (or frames) {{until they}} meet specified bandwidth and or <b>burstiness</b> limits. Since such delays involve queues that are nearly always finite and, once full, excess traffic is nearly always dropped (discarded), traffic shaping nearly always implies traffic policing as well.|$|E
50|$|<b>Burstiness</b> is a {{well-known}} phenomenon in many real-world networks, e.g. email or other human communication networks. Additional dimensions of communication provide a more faithful representation of reality and may highlight these patterns or diminish them. Therefore it is of critical importance that our methods for detecting bursty behavior in networks accommodate multidimensional networks.|$|E
5000|$|Observe {{that the}} pdf is the Beta-binomial {{distribution}} when [...] It {{can also be}} shown that it approaches the multinomial distribution as [...] approaches infinity. The parameter [...] governs the degree of overdispersion or <b>burstiness</b> relative to the multinomial. Alternative choices to denote [...] {{found in the literature}} are S and A.|$|E
50|$|In {{the modern}} network {{environment}} with multimedia and other QoS sensitive traffic streams comprising a growing fraction of network traffic, second order performance {{measures in the}} form of “jitter” such as delay variation and packet loss variation are of import to provisioning user specified QoS. Self-similar <b>burstiness</b> is expected to exert a negative influence on second order performance measures.|$|E
5000|$|The {{token bucket}} is an {{algorithm}} used in packet switched computer networks and [...] telecommunications networks. It {{can be used}} to check that data transmissions, in the form of packets, conform to defined limits on bandwidth and <b>burstiness</b> (a measure of the unevenness or variations in the traffic flow). It can also be used as a scheduling algorithm to determine the timing of transmissions that will comply with the limits set for the bandwidth and burstiness: see network scheduler.|$|E
5000|$|It {{is used in}} packet {{switched}} computer networks and [...] telecommunications networks in both the traffic policing and traffic shaping of data transmissions, {{in the form of}} packets, to defined limits on bandwidth and <b>burstiness</b> (a measure of the unevenness or variations in the traffic flow). It can also be used as a scheduling algorithm to determine the timing of transmissions that will comply with the limits set for the bandwidth and <b>burstiness</b> applied by the network: see network scheduler. A version of the leaky bucket, the Generic Cell Rate Algorithm, is recommended for Asynchronous Transfer Mode (ATM) networks in Usage/Network Parameter Control at User-Network Interfaces or Inter-Network Interfaces or Network-Network Interfaces to protect a network from excessive traffic levels on connections routed through it. The Generic Cell Rate Algorithm, or an equivalent, may also be used to shape transmissions by a Network Interface Card onto an ATM network (i.e. on the user side of the User-Network Interface), e.g. to levels below the levels set for Usage/Network Parameter Control in the network to prevent it taking action to further limit that connection. The leaky bucket algorithm is also used in leaky bucket counters, e.g. to detect when the average or peak rate of random or stochastic events or stochastic processes, such as faults or failures, exceed defined limits.|$|E
50|$|The leaky bucket as a queue is {{essentially}} a way of describing a simple FIFO buffer or queue that is serviced at a fixed rate to remove <b>burstiness</b> or jitter. A description of it is given by Andrew S. Tanenbaum, in his book Computer Networks as “The leaky bucket consists of a finite queue. When a packet arrives, if there is room on the queue it is appended to the queue; otherwise it is discarded. At every clock tick one packet is transmitted (unless the queue is empty)”. An implementation of the leaky bucket as a queue is therefore always a form of traffic shaping function.|$|E
50|$|Burst {{transmission}} or <b>burstiness,</b> i.e. transmitting a {{burst of}} traffic at a high rate followed by an interval or period of lower rate transmission, may {{also be seen as}} a form of jitter, as it represents a deviation from the average transmission rate. However, unlike the jitter caused by variation in latency, transmitting in bursts is commonly seen a desirable feature, e.g. in variable bitrate transmissions. Usage/Network Parameter Control (UPC and NPC), as implemented in ATM networks, allows both a Maximum Burst Size (MBS) parameter on the average or Sustained Cell Rate (SCR), and a Cell Delay Variation tolerance (CDVt) on the Peak Cell Rate (PCR) at which the bursts are transmitted.|$|E
50|$|Consider {{a bucket}} {{that is exactly}} filled to the top by {{preceding}} traffic, i.e. when the maximum permitted <b>burstiness</b> has already occurred, i.e. {{the maximum number of}} packets or cells have just arrived in the minimum amount of time for them to still conform to the bandwidth and jitter limits. The minimum interval before the next packet can conform is then the time it takes for the bucket to leak exactly the amount of water delivered by a packet, and if a packet is tested and conforms at that time, this will exactly fill the bucket once more. Thus, once the bucket is filled, the maximum rate that packets can conform is with this interval between each packet.|$|E
50|$|However, {{offloading}} {{does not}} always mean reduction of resource consumption (required system capacity) in the network of the operator. Under certain conditions and due to an increase of the <b>burstiness</b> of the non-offloaded traffic (i.e. traffic that eventually reaches the network of the operator in a regular way), the amount of network resources to offer a given level of QoS is increased. In this context, the distribution of offloading periods {{turns out to be}} the main design parameter to deploy effective offloading strategies in the network of MNOs making non-offloaded traffic less heavy-tailed, hence reducing the resources needed in the network of the operator.. The energy consumption in offloading is also another concern.|$|E
50|$|Turner {{refers to}} this rate as the average, {{implying}} that its inverse is the average interval. There is, however, some ambiguity in what the average rate and interval are. Since, packets can arrive at any lower rate, this is an upper bound, rather than a fixed value, so it could at best be called the maximum for the average rate. Also, during the time the maximum <b>burstiness</b> occurs, packets can arrive with smaller intervals and thus {{a higher rate than}} this. So, for any period less than infinity, the actual average rate can be (but isn’t necessarily) greater than this and the average interval can be (but isn’t necessarily) less than the emission interval. Hence, because of this ambiguity, the term emission interval is used hereafter. However, it is still true that the minimum value that the long term average interval can take tends to be the emission interval.|$|E
50|$|In {{the second}} version, the {{analogue}} of the bucket is a queue {{in the flow}} of traffic. This queue is used to directly control that flow: Packets are entered into the queue as they arrive, equivalent to the water being added to the bucket. These packets are then removed from the queue (first come, first served), usually at a fixed rate, e.g. for onward transmission, equivalent to water leaking from the bucket. As a result, {{the rate at which the}} queue is serviced directly controls the onward transmission rate of the traffic. Thus it imposes conformance rather than checking it, and where the queue is serviced at a fixed rate (and where the packets are all the same length), the resulting traffic stream is necessarily devoid of <b>burstiness</b> or jitter. So in this version, the traffic itself is the analogue of the water passing through the bucket. It is not clear how this version of applying the analogy might be used to the check the rates of discrete events. This version is referred to here as the leaky bucket as a queue.|$|E
50|$|The leaky bucket as a meter {{can be used}} {{in either}} traffic shaping or traffic policing. For example, in ATM networks, {{in the form of the}} Generic Cell Rate Algorithm, it is used to compare the {{bandwidth}} and <b>burstiness</b> of traffic on a Virtual Channel (VC) or Virtual Path (VP) against the specified limits on the rate at which cells may arrive and the maximum jitter, or variation in inter-arrival intervals, for the VC or VP. In traffic policing, cells that do not conform to these limits (nonconforming cells) may be discarded (dropped) or may be reduced in priority (for downstream traffic management functions to drop if there is congestion). In traffic shaping, cells are delayed until they conform. Traffic policing and traffic shaping are commonly used in UPC/NPC to protect the network against excess or excessively bursty traffic, see bandwidth management and congestion avoidance. Traffic shaping is commonly used in the network interfaces in hosts to prevent transmissions exceeding the bandwidth or jitter limits and being discarded by traffic management functions in the network, see network scheduling and network scheduler.|$|E
50|$|In {{one version}} of {{applying}} the analogy, the analogue of the bucket is a counter or variable, separate from the flow of traffic or scheduling of events. This counter is used only to check that the traffic or events conform to the limits: The counter is incremented as each packet arrives {{at the point where}} the check is being made or an event occurs, which is equivalent to the way water is added intermittently to the bucket. The counter is also decremented at a fixed rate, equivalent to the way the water leaks out of the bucket. As a result, the value in the counter represents the level of the water in the analogous bucket. If the counter remains below a specified limit value when a packet arrives or an event occurs, i.e. the bucket does not overflow, that indicates its conformance to the bandwidth and <b>burstiness</b> limits or the average and peak rate event limits. So in this version, the analogue of the water is carried by the packets or the events, added to the bucket on their arriving or occurring, and then leaks away. This version is referred to here as the leaky bucket as a meter.|$|E
5000|$|Measurements {{are useful}} and {{necessary}} for verifying the actual network performance. However, measurements {{do not have}} the level of abstraction that makes traffic models useful. Traffic models can be used for hypothetical problem solving whereas traffic measurements only reflect current reality. In probabilistic terms, a traffic trace is a realization of a random process, whereas a traffic model is a random process. Thus, traffic models have universality. A traffic trace gives insight about a particular traffic source, but a traffic model gives insight about all traffic sources of that type. Traffic models have many uses, but at least three major ones. One important use of traffic models is to properly dimension network resources for a target level of QOS. It was mentioned earlier that Erlang developed models of voice calls to estimate telephone switch capacity to achieve a target call blocking probability. Similarly, models of packet traffic are needed to estimate the bandwidth and buffer resources to provide acceptable packet delays and packet loss probability. Knowledge of the average traffic rate is not sufficient. It is known from queuing theory that queue lengths increase with the variability of traffic (Kleinrock, 1976). Hence, an understanding of traffic <b>burstiness</b> or variability is needed to determine sufficient buffer sizes at nodes and link capacities (Barakat, et al., 2003). A second important use of traffic models is to verify network performance under specific traffic controls. For example, given a packet scheduling algorithm, {{it would be possible to}} evaluate the network performance resulting from different traffic scenarios. For another example, a popular area of research is new improvements to the TCP congestion avoidance algorithm. It is critical that any algorithm is stable and allows multiple hosts to share bandwidth fairly, while sustaining a high throughput. Effective evaluation of the stability, fairness, and throughput of new algorithms would not be possible without realistic source models. A third important use of traffic models is admission control. In particular, connection oriented networks such as ATM depends on admission control to block new connections to maintain QOS guarantees. A simple admission strategy could be based on the peak rate of a new connection; a new connection is admitted if the available bandwidth is greater than the peak rate. However, that strategy would be overly conservative because a variable bit-rate connection may need significantly less bandwidth than its peak rate. A more sophisticated admission strategy is based on effective bandwidths (Kelly, 1996). The source traffic behavior is translated into an effective bandwidth between the peak rate and average rate, which is the specific amount of bandwidth required to meet a given QoS constraint. The effective bandwidth depends on the variability of the source.1 ...|$|E
40|$|In this paper, {{we propose}} a two-layer model for TCP traffic with <b>burstiness</b> effect. We {{show that the}} backlog in {{bottleneck}} queue is bounded by the sum of two components: the long term effect of congestion window control algorithm and the short term effect of <b>burstiness.</b> This motivates a formal definition of <b>burstiness.</b> A simple algorithm is proposed to measure and control <b>burstiness</b> at the sender’s side. We present experimental results to illustrate the effectiveness of <b>burstiness</b> control...|$|E
40|$|<b>Burstiness</b> {{property}} {{plays an}} important role in the variable bit rate (VBR) video traffic. One of the most significant issues in providing quality-of-service (QoS) guarantees for the real-time multimedia communications in a high-speed network is to estimate the <b>burstiness</b> accurately. In this paper, an efficient <b>burstiness</b> estimation model (Fractal exponent model) for VBR video stream is proposed. In order to improve the accuracy of the <b>burstiness</b> measure, a new operator is firstly introduced, which is similar to the convolution operator. Then, using <b>burstiness</b> index derived from the fractal exponent function, we can estimate the <b>burstiness</b> characteristics of VBR video correctly. Simulation results using 20 VBR MPEG video traces indicate good performance of the proposed algorithm with significantly improved <b>burstiness</b> estimation accuracy...|$|E
40|$|The {{clustering}} {{phenomenon of}} arrivals known as <b>burstiness</b> {{is an important}} and poorly understood characteristic of broadband traffic. Most of the B-ISDN services produce bursty traffic and the <b>burstiness</b> has {{a significant impact on}} the network performance. However, the nature of <b>burstiness</b> of the various traffic types can be very different. Since, for the time being, there is no well established notion of <b>burstiness</b> there is need for finding an easily computable measure which can express the inherent nature of <b>burstiness</b> in such a way that it fits well to the practical network dimensioning tasks. In this paper we review the most popular <b>burstiness</b> measures and give an analysis study by evaluating them with different kinds of traffic produced by a large set of traffic models. Our aim is to contribute to the understanding of the behaviour of the candidate <b>burstiness</b> descriptors which could take us a step closer to establishing a generally acceptable <b>burstiness</b> measure. ...|$|E
40|$|Abstract — Aggregate {{network traffic}} {{exhibits}} strong <b>burstiness</b> and non-Gaussian marginals, which popular models like fractional Gaussian noise (fGn) fail to capture. To {{better understand the}} cause of traffic <b>burstiness,</b> we look into connection-level information of traffic trace. A careful study reveals that traffic <b>burstiness</b> {{is directly related to}} the heterogeneity in connection bandwidths (and round-trip times), and that a small number of high-bandwidth connections are solely responsible for <b>burstiness.</b> This leads to a new model for network traffic: the mixture of fGn and stable Lévy noise, which captures both long-range dependence and <b>burstiness.</b> This decomposition has far-reaching implications on network control. I...|$|E
