3|0|Public
50|$|The Amiga 1000 {{features}} an 86-pin expansion port (electrically {{identical to the}} later Amiga 500 expansion port, though the A500's connector is inverted). This port is used by third-party expansions such as memory upgrades and SCSI adapters. These resources are handled by the Amiga Autoconfig standard. Other expansion options are available including a <b>bus</b> <b>expander</b> which provides two Zorro-II slots.|$|E
50|$|Level C was a {{card cage}} and S-100 <b>bus</b> <b>{{expander}}</b> card. This card would plug {{into one of}} the S-100 bus sockets on the motherboard. You could then plug up to five more S-100 bus cards into the expander card. One of the two original slots on the motherboard was still available for use, giving the Level C Explorer 85 a capacity of six S-100 bus cards. The card cage held all of the cards in place. In 1982 the Level C upgrade sold for $39.95, and $4.85 for each S-100 bus connector.|$|E
40|$|Abstract — The {{influence}} of interconnects on processor performance and cost {{is becoming increasingly}} pronounced with technology scaling. In this paper, we present a fast compression scheme that exploits the spatial and temporal locality of addresses to dynamically compress them to different extents depending upon {{the extent to which}} they match the higher-order portions of recently-occurring addresses saved in a very small “compression cache ” of capacity less than 500 bits. When a maximal match occurs, the address is compressed to the maximum extent and is transmitted on a narrow bus in one cycle. When a partial match occurs, one or more extra cycles are required for address transmission depending upon the extent of the partial match. To minimize this transmission cycle penalty (TCP), we use an efficient algorithm to determine the optimal set of partial matches to be supported in our partial match compression (PMC) scheme— we refer to this scheme as performance-optimized PMC (PO-PMC). A previously-proposed scheme called <b>bus</b> <b>expander</b> (BE) supports only a single, fixed-size match for compression. We show that all addresses that result in (maximal) matches in BE also result in the same in PMC, but the remaining addresses that are considered “no matches ” in BE frequently result in partial matches in PMC, thus helping curtail the latter’s TCP significantly. Across many SPEC CPU 2000 integer and floating-point benchmarks, we find that average program performance improves by 3 % when using PO-PMC compared to that when using BE. Further, we investigate how area slack arising from compression can be exploited for bus latency improvement by increasing inter-wire spacing. We find that, on the average, it can reduce bus latency by up to 84. 63 % and thereby improve program performance by about 16 %. I...|$|E

