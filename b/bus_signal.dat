44|226|Public
25|$|The PCI bus {{requires}} {{that every time}} the device driving a PCI <b>bus</b> <b>signal</b> changes, one turnaround cycle must elapse between the time the one device stops driving the signal and the other device starts. Without this, {{there might be a}} period when both devices were driving the signal, which would interfere with bus operation.|$|E
2500|$|At most one unique <b>bus</b> <b>signal</b> per device (chip select); {{all others}} are shared ...|$|E
2500|$|A {{number of}} Silver Line {{expansion}} corridors were {{considered in the}} 2003 Program for Mass Transportation (PMT); most were given brief consideration but not acted upon. One, a BRT express overlay for the #28 bus route (which runs from Ruggles Station to Mattapan via Dudley), was revived in 2006 as part of Phase III plans. In 2009, the state proposed to replace the 28 bus entirely with a BRT route called 28X, including the installation of dedicated bus lanes, <b>bus</b> <b>signal</b> priority, and on-platform fare collection. However, the application for federal stimulus funding was withdrawn due to local opposition, as the plan would have taken parking along Blue Hill Avenue and {{reduced the number of}} bus stops along the route in order to speed up service. This rejection, plus the 2009 failure of the SL3 City Point route (which had been rated a medium-priority and [...] "very cost-effective" [...] project in 2003), tempered remaining enthusiasm [...] for BRT in Boston. (However, in 2012, the Roxbury-Dorcester-Mattapan Transit Needs Study recommended the 28X bus to be implemented with no new infrastructure as an express bus adding additional trips to the corridor.) ...|$|E
40|$|In the Smart In-Car project, {{in-vehicle}} signals {{obtained from}} the CAN (Controller Area Network) bus are collected along with the GPS position from 200 equipped vehicles. The main CAN <b>bus</b> <b>signals</b> in the available data set from the Smart In-Car project are: speedometer, brake usage, steering position, rpm, indicator usage and fuel consumption, but many more CAN <b>bus</b> <b>signals</b> exist, offering possibilities for many applications. In this thesis, the applicability of CAN <b>bus</b> <b>signals</b> for estimating the Level of Service (LOS) on motorways is assessed. The real CAN bus data of single equipped vehicles, {{obtained from the}} Smart In-Car project, is used to estimate the LOS, using loop detector data as ground truth. To assess the LOS estimation accuracy at higher penetration rates, simulation data is used. The available real CAN <b>bus</b> <b>signals</b> provide a correct LOS estimation of 37 % with single vehicles. The simulation results show correct LOS estimation rates ranging from 52 % at 1 % penetration to 70 % at 100 % penetration. LOS estimation using only positional data (GPS) is found to outperform LOS estimation using CAN bus data for most penetration rates, showing that the CAN <b>bus</b> <b>signals</b> do not contribute to better LOS estimation. There are however many other applications which may benefit from CAN <b>bus</b> <b>signals.</b> These will require further research. Transport & PlanningCivil Engineering and Geoscience...|$|R
50|$|SMBus defines both {{rise and}} fall time of <b>bus</b> <b>signals.</b> I²C does not.|$|R
5000|$|... #Caption: School <b>Bus</b> <b>signals</b> (orange lights will flash when {{children}} are boarding and disembarking) ...|$|R
5000|$|At most one unique <b>bus</b> <b>signal</b> per device (chip select); {{all others}} are shared ...|$|E
5000|$|New {{technologies}} (<b>bus</b> <b>signal</b> {{priority and}} queue jump lanes) {{that are used}} to move through traffic quickly ...|$|E
5000|$|Occasional outside {{broadcasts}} {{are made}} in a specially built outside broadcast studio on a converted <b>bus.</b> <b>Signal</b> Radio hosts events for local children's charities every year under the [...] "Help a Signal Child" [...] banner.|$|E
5000|$|System Configuration Description {{includes}} all system {{information and the}} information that must be agreed between different ECUs (e.g. definition of <b>bus</b> <b>signals).</b>|$|R
50|$|The <b>bus</b> <b>signals</b> are digital {{single-ended}} {{open collector}} 5 volt TTL and active when negative. Bus devices {{have to provide}} their own power.|$|R
5000|$|FPDP/TM (transmitter master) - drives {{data and}} timing signals onto the FPDP, and also terminates the <b>bus</b> <b>signals</b> {{at one end}} of the ribbon cable ...|$|R
50|$|The PCI bus {{requires}} {{that every time}} the device driving a PCI <b>bus</b> <b>signal</b> changes, one turnaround cycle must elapse between the time the one device stops driving the signal and the other device starts. Without this, {{there might be a}} period when both devices were driving the signal, which would interfere with bus operation.|$|E
50|$|The S-100 bus is {{a passive}} {{backplane}} of 100-pin {{printed circuit board}} edge connectors wired in parallel. Circuit cards measuring 5 × 10-inches serving the functions of CPU, memory, or I/O interface plugged into these connectors. The <b>bus</b> <b>signal</b> definitions closely follow those of an 8080 microprocessor system, since the Intel 8080 microprocessor was the first microprocessor hosted on the S-100 bus. The 100 lines of the S-100 bus can be grouped into four types: 1) Power, 2) Data, 3) Address, and 4) Clock and control.|$|E
50|$|The {{following}} signals {{were generated}} by an FPGA, {{which was the}} master for the communication with a DS2432 (EEPROM) chip, and measured with a logic analyzer. A logic high on the 1-wire output, means {{the output of the}} FPGA is in tri-state mode and the 1-wire device can pull the bus low. A low means the FPGA pulls down the bus. The 1-wire input is the measured <b>bus</b> <b>signal.</b> On input sample time high, the FPGA samples the input for detecting the device response and receiving bits.|$|E
50|$|Systems {{that have}} more than one bus master have {{additional}} control <b>bus</b> <b>signals</b> that control which bus master drives the address bus, avoiding bus contention on the address bus.|$|R
40|$|A nanogrid {{is a small}} DC {{power system}} that uses {{distributed}} energy sources to power local loads. DC <b>bus</b> <b>signalling,</b> a novel control strategy that schedules sources in a decentralised fashion, brings the non-renewable sources in a nanogrid online when the renewable sources have been exhausted. This paper presents a prototype model nanogrid that uses power electronic converters to interface the sources and loads to the nanogrid. The design {{of the system is}} discussed and experimental results are presented. The results show that DC <b>bus</b> <b>signalling</b> allows the sources to be consumed in a prioritised fashion. ...|$|R
25|$|Adding modules to {{the single}} memory bus creates {{additional}} electrical load on its drivers. To mitigate the resulting <b>bus</b> <b>signaling</b> rate drop and overcome the memory bottleneck, new chipsets employ the multi-channel architecture.|$|R
5000|$|The LPC bus derives its {{electrical}} conventions {{from those}} of conventional PCI. In particular, it shares the restriction that two idle cycles are required to [...] "turn around" [...] any <b>bus</b> <b>signal</b> so that a different device is [...] "speaking". In the first, the bus is actively driven high. In the second, the bus is undriven and held high by the pull-up resistors. A new device may begin sending data over the bus on the third cycle. LPC operations spend a large fraction of their time performing such turn-arounds.|$|E
50|$|Bi-directional data <b>bus</b> <b>signal</b> is {{available}} in SX-bus of the central unit. Standard connectors of SX bus are 5 pin DIN 45500 plugs and sockets. The topology of bus connections is free and Selectrix accessories can be connected together in closed circle, chained or daisy chain style. SX bus accepts any type of Selectrix accessories apart from system boosters. For connecting boosters to the central unit or to each other Selectrix systems have a dedicated PX-bus available. SX-bus signal of the first SX bus (in case the central unit {{has more than one}} SX bus available) {{is available}} in the track also and connected through two cables directly from central unit (or booster) to the track.|$|E
50|$|Not {{long after}} the 1541's introduction, {{third-party}} developers demonstrated that performance could be improved with software that took {{over control of the}} serial <b>bus</b> <b>signal</b> lines and implemented a better transfer protocol between the computer and disk. In 1984 Epyx released its FastLoad cartridge for the C64, which replaced some of the 1541's slow routines with its own custom code, thus allowing users to load programs in a fraction of the time. Despite being incompatible with many programs' copy protection schemes, the cartridge became so popular among grateful C64 owners (likely the most-widespread third-party enhancement for the C64 of all time) that many Commodore dealers sold the Epyx cartridge as a standard item when selling a new C64 with the 1541.|$|E
5000|$|Cascade - Used {{to cascade}} {{additional}} DMA controllers. DREQ and DACK is matched with HRQ and HLDA {{from the next}} chip to establish a priority chain. Actual <b>bus</b> <b>signals</b> is executed by cascaded chip.|$|R
30|$|The {{measured}} and ACCURATE model data match, mainly regarding to <b>bus</b> <b>signals</b> voltage slope. The FAST and MODERATE model results match on voltage levels, but they exhibit steeper voltage slopes. The architecture choice {{must consider the}} user requirements.|$|R
40|$|Abstract. Crosstalk {{between high}} speed {{parallel}} <b>bus</b> <b>signals</b> {{is one of}} the most important signal integrity(SI) issues. In this article, a crosstalk simulation method based on full-wave scattering parameters extraction for transmission lines is researched. First, the coupling mechanism between transmission lines is analyzed using S-Parameter network theory and a fast frequency-domain method for crosstalk calculation is introduced. Then based on this method, some basic rules of crosstalk are studied in details and the method is validated by simulation results which agree well with those of RLGC model. At the end of this paper, a practical crosstalk simulation example between high speed data <b>bus</b> <b>signals</b> on a 8 -layered printed circuit board is demonstrated step by step...|$|R
5000|$|An {{aspect of}} a {{downtown}} circulator plan was revived when the United States Department of Transportation announced a Livability Program, Urban Circulator Grant to the Chicago Department of Transportation for the [...] "Chicago Central Transitway," [...] a project to establish designated bus priority lanes, <b>bus</b> <b>signal</b> priority, [...] "next bus" [...] information, and bus shelter branding on Madison, Washington, Canal, and Clinton Streets. The city noted that the [...] "project would meet {{the goals of the}} Chicago Central Area Action Plan by promoting transit, bicycle use and walking, thereby making the Central Area even more of an attractive place to do business, visit and live.". The project is known as [...] "Loop Link" [...] and broke ground in 2015. It was formerly called Central Loop BRT, because it contains some elements of bus rapid transit (BRT) systems like dedicated bus lanes, stations shared by several routes, level boarding, and traffic signal priority.|$|E
50|$|When {{the block}} {{is in the}} Modified (M) state, neither a {{processor}} read (PrRd) nor a processor write (PrWr) request generates a snooped signal since the block already indicates that the most recent and correct value resides only in that cache. Hence, it {{does not change the}} state and stays in modified (M) state.While the block is in the Shared (S) state and there is processor read (PrRd) request, since the value of the cache block is the same in every other processor and in the main memory, there is no <b>bus</b> <b>signal</b> that is generated after a processor read (PrRd). A bus write request (BusUpgr) is generated once there is a processor write (PrWr) request to a block in the shared (S) state because the cache block is now no longer valid in all the other caches and the state of the block changes from shared (S) to being modified (M).|$|E
5000|$|A {{number of}} Silver Line {{expansion}} corridors were {{considered in the}} 2003 Program for Mass Transportation (PMT); most were given brief consideration but not acted upon. One, a BRT express overlay for the #28 bus route (which runs from Ruggles Station to Mattapan via Dudley), was revived in 2006 as part of Phase III plans. In 2009, the state proposed to replace the 28 bus entirely with a BRT route called 28X, including the installation of dedicated bus lanes, <b>bus</b> <b>signal</b> priority, and on-platform fare collection. However, the application for federal stimulus funding was withdrawn due to local opposition, as the plan would have taken parking along Blue Hill Avenue and {{reduced the number of}} bus stops along the route in order to speed up service. This rejection, plus the 2009 failure of the SL3 City Point route (which had been rated a medium-priority and [...] "very cost-effective" [...] project in 2003), tempered remaining enthusiasm for BRT in Boston. (However, in 2012, the Roxbury-Dorcester-Mattapan Transit Needs Study recommended the 28X bus to be implemented with no new infrastructure as an express bus adding additional trips to the corridor.) ...|$|E
30|$|References [60] and [61] show {{distributed}} {{secondary control}} based on DC <b>bus</b> <b>signaling.</b> In [60], the DC bus voltage threshold monitors {{the action of}} interface converters of sources and loads {{in the operation of}} a DC nanogrid. Four different operation modes of a PV modular system are presented in [61].|$|R
40|$|This paper {{illustrates}} the {{system on chip}} (SoC) debugging and analyses its behavior at several test conditions by verifying the functional aspects of the on-chip bus. Here an Advanced High performance bus (AHB) is selected, since the AHB <b>bus</b> <b>signals</b> are difficult to observe as they are deeply embedded in the system on chip and these I/O pins to access these signals is not possible. Hence we embed a bus tracer in SoC to capture and compress the <b>bus</b> <b>signals.</b> The tracer is successfully verified in FPGA. In this manuscript the selected software is XILINX ISE software design environment for RTL synthesis and model-Sim simulation software to verify the timing diagrams of the AHB SoC modules designed. The FPGA used is SPARTAN 3 E (XC 3 S 500 E) ...|$|R
40|$|Theabilitytoaccuratelyprofileenergyconsumptionisof great {{importance}} for energy management in low-power devices. This work presents a novel energy profiling architecture {{by combining the}} high-speed CPLD <b>bus</b> <b>signaling</b> capabilityof mPlatformwith the smartTwinStar powerboard. ByrunningmPlatformunderdifferentmodes,weareableto utilizeanMMSEestimatortoanalyzeper-componentenergy consumption rates with sufficient accuracy. In our experiment, we use the profiling results to determine the working conditionofindividualcomponents,aswell asthe hardware configurationofthe sensornode...|$|R
40|$|This paper firstly proposes an {{improved}} genetic algorithm (GA) for optimization in adaptive <b>bus</b> <b>signal</b> priority control at signalized intersections. Unlike conventional genetic algorithms with slow convergence speed, this algorithm {{can increase the}} convergence speed by utilizing the compensation rule between consecutive signal cycles to narrow new possible generated population spaces. Secondly, the paper would like to present a way to apply the algorithm to a simple adaptive <b>bus</b> <b>signal</b> priority control as well as compare how much the computation time is saved when applying the improved algorithm. Then the research thirdly investigates {{the efficiency of the}} proposed algorithm under various flow rate situations. The results show that the improved genetic algorithm can reduce the computation time considerably, by up to 48. 39 % for the studied case. With high saturation degrees on the cross street, the convergence rate performance of the improved genetic algorithm is significantly good. The figure can be up to 36. 2 % when compared with the convergence rate of the conventional GA...|$|E
40|$|Developing public {{transportation}} and giving priority to buses is a feasible solution {{for improving the}} level of {{public transportation}} service, which facilitates congestion alleviation and prevention, and contributes to urban development and city sustainability. This paper presents a novel bus operation control strategy including both holding control and speed control to improve the level of service of transit systems within a connected vehicle environment. Most previous work focuses on optimization of signal timing to decrease the <b>bus</b> <b>signal</b> delay by assuming that holding control is not applied; the speed of buses is given as a constant input and the acceleration and deceleration processes of buses can be neglected. This paper explores {{the benefits of a}} bus operation control strategy to minimize the total cost, which includes <b>bus</b> <b>signal</b> delay, bus holding delay, bus travel delay, acceleration cost due to frequent stops and intense driving. A set of formulations are developed to explicitly capture the interaction between bus holding control and speed control. Experimental analysisand simulation tests have shown that the proposed integrated operational model outperforms the traditional control, speed control only, or holding control only strategies in terms of reducing the total cost of buses. The sensitivity analysis has further demonstrated the potential effectiveness of the proposed approach to be applied in a real-time bus operation control system under different levels of traffic demand, bus stop locations, and speed limits...|$|E
40|$|This paper {{proposes a}} new <b>bus</b> <b>signal</b> {{priority}} model which {{takes into account}} the delay caused by the existing queues at the intersection. In existing methods, a bus sometimes experiences delay even under the bus priority control because bus travel time between the upstream beacon and the downstream intersection is fixed. On the other hand, in our method, bus arrival time at the intersection is more precisely as well as dynamically estimated based on the upstream infrared beacon and traffic detector information. It is confirmed that the proposed method provides the better priority service than the conventional method...|$|E
50|$|On the PCI bus, as {{mentioned}} above, the ANS uses the Bandit PCI bridge, {{just as the}} PM9500 does. The PCI bus arbiters are also identical (343S0182). The bus arbiters receive the PCI <b>Bus</b> Request <b>signals</b> and issue the <b>Bus</b> Grant <b>Signals</b> to the PCI slots and to the PCI bridge chips (Bandit).|$|R
40|$|The XPS Ethernetlite {{peripheral}} {{does not}} provide any mechanism to access the Ethernet PHY registers. These registers are used to configure auto negotiation parameters and to obtain PHY status. This application note provides reference systems and associated software to access PHY registers by connecting the serial management <b>bus</b> <b>signals</b> MDC and MDIO to GPIOs which the software controls directly...|$|R
40|$|International audienceIn {{order to}} develop a {{sustainable}} datacenter, which would help to validate energy management and task scheduling algorithms, a low voltage direct current (LVDC) microgrid (MG) has been deployed in the ADREAM Building-Integrated Photovoltaic (BIPV) of the LAAS-CNRS in Toulouse, France. This MG is composed of a 1 kWp PV source, 300 Ah – 36 V lead-acid batteries, 330 F – 48 V supercapacitor (SC) pack and DC loads (cloud servers, USB chargers, sensors monitoring an apartment…). A very simple and efficient energy flow management strategy, based on the " DC <b>bus</b> <b>signaling</b> " approach has been implemented. It {{takes advantage of the}} DC bus architecture and enables a scalable electrical structure constituted of several sources, loads and storage elements easy to connect/disconnect via their converters. The development of this MG put in evidence the need for future theoretical developments regarding the determination of optimal DC <b>bus</b> <b>signaling</b> thresholds...|$|R
