127|10000|Public
25|$|Bitrate is {{the product}} of the sample rate and number of <b>bits</b> <b>per</b> <b>sample</b> used to encode the music. CD audio is 44100 samples per second. The number of <b>bits</b> <b>per</b> <b>sample</b> also depends on the number of audio channels. CD is stereo and 16 bits per channel. So, {{multiplying}} 44100 by 32 gives 1411200—the bitrate of uncompressed CD digital audio. MP3 was designed to encode this 1411kbit/s data at 320kbit/s or less. As less complex passages are detected by MP3 algorithms then lower bitrates may be employed. When using MPEG-2 instead of MPEG-1, MP3 supports only lower sampling rates (16000, 22050 or 24000 samples per second) and offers choices of bitrate as low as 8kbit/s but no higher than 160kbit/s. By lowering the sampling rate, MPEG-2 layer III removes all frequencies above half the new sampling rate that may have been present in the source audio.|$|E
2500|$|For example, the {{bit rate}} of a CD-DA {{recording}} (44.1kHz sampling rate, 16 <b>bits</b> <b>per</b> <b>sample</b> and two channels) {{can be calculated}} as follows: ...|$|E
5000|$|Eight <b>bits</b> <b>per</b> <b>sample</b> (24 bits per pixel) seem {{adequate}} for most uses, but faint banding artifacts {{may still be}} visible in some smoothly varying images, especially those subject to processing. Particularly demanding applications may use 10 <b>bits</b> <b>per</b> <b>sample</b> or more.|$|E
5000|$|Delta {{modulation}} {{is a form}} of DPCM {{which uses}} one <b>bit</b> <b>per</b> <b>sample.</b>|$|R
2500|$|... about [...] As a comparison, each extra <b>bit</b> <b>per</b> <b>sample</b> {{increases}} the dynamic range with ...|$|R
50|$|CVSD encodes at 1 <b>bit</b> <b>per</b> <b>sample,</b> so that audio sampled at 16 kHz is encoded at 16 kbit/s.|$|R
5000|$|... 64 kbit/s bitrate (8 kHz {{sampling}} frequency × 8 <b>bits</b> <b>per</b> <b>sample)</b> ...|$|E
50|$|In {{digital audio}} using pulse-code {{modulation}} (PCM), bit depth {{is the number}} of bits of information in each sample, and it directly corresponds to the resolution of each sample. Examples of bit depth include Compact Disc Digital Audio, which uses 16 <b>bits</b> <b>per</b> <b>sample,</b> and DVD-Audio and Blu-ray Disc which can support up to 24 <b>bits</b> <b>per</b> <b>sample.</b>|$|E
50|$|Common sample depths for LPCM are 8, 16, 20 or 24 <b>bits</b> <b>per</b> <b>sample.</b>|$|E
50|$|The {{dynamic range}} {{required}} for an FM receiver is 120 dB while DAB only requireabout 90 dB. As a comparison, each extra <b>bit</b> <b>per</b> <b>sample</b> increases the dynamic range with 6 dB.|$|R
40|$|A {{real time}} {{implementation}} of an adaptive transform coding algorithm (ATC) which fits {{on a single}} height Euro Card is discribed. Bit rate reduction from 16 bit (compact disc) down to 3 <b>bit</b> <b>per</b> <b>sample</b> at sampling rates up to 48 kHz can be demonstrated. This was achieved by modifying an ATC algorithm {{in order to minimize}} the number of calculations needed for coding and decoding. High quality is obtained by including psychoacoustic criteria in the coding algorithm. At 3. 5 <b>bit</b> <b>per</b> <b>sample</b> quality degradation compared to the original from CD is not audible for most signals. The system is designed around a single chip signal processor which uses on chip 32 bit floating point hardware. One signal processor serves a stereo pair of sound channels. (AIS-A...|$|R
50|$|The RTAudio encoder {{is capable}} of {{encoding}} single-channel (mono), 16 <b>bit</b> <b>per</b> <b>sample</b> audio signals. The encoder can be configured to operate either in the Narrow Band mode (8 kHz sampling rate) or the Wide Band mode (16 kHz sampling rate). The RTAudio decoder has a built-in jitter control module {{as well as an}} error concealment module.|$|R
5000|$|Audio SMPTE 382M {{uncompressed}} PCM audio at 48 kHz and 20 <b>bits</b> <b>per</b> <b>sample</b> ...|$|E
5000|$|Video SMPTE 384M {{uncompressed}} 4:2:2 video at 8 <b>bits</b> <b>per</b> <b>sample</b> in UYVY format ...|$|E
5000|$|Digital Y′CbCr (8 <b>bits</b> <b>per</b> <b>sample)</b> {{is derived}} from analog R'G'B' as follows:or simply componentwise ...|$|E
40|$|First work on ASIC {{realization}} of the decoder for OCF (optimum coding in the frequency domain) has been done. High quality low bit rate coding algorithms like OCF are now ready to be integrated into professional consumer audio equipment. OCF allows coding of CD-quality signals down to 2. 0 <b>bit</b> <b>per</b> <b>sample.</b> An OCF-decoder chip can be realized using today's available technology...|$|R
50|$|Note that mid-riser uniform quantizers do {{not have}} a zero output value - their minimum output {{magnitude}} is half the step size. When the input data can be modeled as a random variable with a probability density function (pdf) that is smooth and symmetric around zero, mid-riser quantizers also always produce an output entropy of at least 1 <b>bit</b> <b>per</b> <b>sample.</b>|$|R
40|$|New trellis constructions for {{compression}} of short data sequences are presented. Traditional low rate trellis source coding suffers {{from having a}} too small a reproduction alphabet. Governed by alphabet-constrained rate-distortion theory we propose a simple method which for a source coding rate of 1 <b>bit</b> <b>per</b> <b>sample</b> allows 2 n reconstruction values for a trellis with 2 n states. The proposed method {{is based on the}} maximum a posteriori probability criterion distortion measure and it employs tailbiting. Simulation results are compared to TCQ-like methods...|$|R
50|$|The actual {{choice of}} rate {{was the point}} of some debate, with other {{alternatives}} including 44.1 × 0.999 ≈ 44.056 kHz (corresponding to the NTSC color field rate of 60 × 0.999 = 59.94 Hz) or approximately 44 kHz, proposed by Philips. Ultimately Sony prevailed on both sample rate (44.1 kHz) and bit depth (16 <b>bits</b> <b>per</b> <b>sample,</b> rather than 14 <b>bits</b> <b>per</b> <b>sample).</b>|$|E
50|$|The HEVC {{specification}} {{incorporates the}} Main 10 profile {{on their first}} version that supports 10 <b>bits</b> <b>per</b> <b>sample.</b>|$|E
5000|$|... sample width: {{measured}} in some number of <b>bits</b> <b>per</b> <b>sample</b> (such as 8, 16, 24, or 32 bits/sample) ...|$|E
5000|$|Multiple {{resolution}} representation: PGF provides seamless {{compression of}} multiple image components, with each component carrying from 1 to 31 <b>bits</b> <b>per</b> component <b>sample.</b> With this feature {{there is no}} need for separately stored preview images (thumbnails).|$|R
5000|$|... by {{applying}} a spectral scaling law, removing the offset and applying a bit mask to the merged spectra, the transmission is done {{at an average}} rate of 8.2 <b>bits</b> <b>per</b> spectral <b>sample,</b> without losing useful information ...|$|R
5000|$|However, it {{is common}} to assume that for many sources, the slope of a {{quantizer}} SQNR function can be approximated as 6 dB/bit when operating at a sufficiently high bit rate. At asymptotically high bit rates, cutting the step size in half increases the bit rate by approximately 1 <b>bit</b> <b>per</b> <b>sample</b> (because 1 <b>bit</b> is needed to indicate whether the value is in the left or right half of the prior double-sized interval) and reduces the mean squared error by a factor of 4 (i.e., 6 dB) based on the [...] approximation.|$|R
5000|$|Support {{of sample}} bit depth {{precision}} ranging from 8 to 14 <b>bits</b> <b>per</b> <b>sample</b> (depending on the selected profile).|$|E
50|$|BPG is {{essentially}} a wrapper for uses of the HEVC's Main 4:4:4 16 Still Picture profile up to 14 <b>bits</b> <b>per</b> <b>sample.</b>|$|E
5000|$|DAT {{could only}} record 2 tracks of audio for stereo at a time, {{much like a}} PCM adaptor, but the smaller size of the {{equipment}} and media, {{as well as being}} able to accept multiple sampling rates (the standard 44.1 kHz, as well as 48 kHz, and 32 kHz, all at 16 <b>bits</b> <b>per</b> <b>sample,</b> and a special [...] "LP" [...] recording mode using 12 <b>bits</b> <b>per</b> <b>sample</b> at 32 kHz for extended recording time) gave DAT many advantages over PCM adaptor-based systems.|$|E
40|$|We {{consider}} {{the problem of}} control of open-loop unstable systems over a networked control architecture. We focus on the case where the system state is measured and where control commands are transmitted over a fixed bit-rate channel. We describe a novel nonlinear decoder model predictive controller which utilizes 1 <b>bit</b> <b>per</b> <b>sample.</b> The required <b>bit</b> rate can then be adjusted by varying the number of <b>samples</b> <b>per</b> unit time. We establish practical stability for the algorithm. We also compare the minimum fixed bit rate required by our algorithm with known results on the minimum bit rate necessary to achieve stability...|$|R
50|$|As {{there is}} no header, {{compatible}} audio players require information from the user that would normally be stored in a header, such as the encoding, sample rate, number of <b>bits</b> used <b>per</b> <b>sample,</b> {{and the number of}} channels.|$|R
30|$|To {{obtain the}} {{training}} data, we {{carried out the}} following preparations. The first step was {{the conversion of the}} original audio data from original.ses format to the.wavformat - we used (16 kHz, mono 16 <b>bit</b> <b>per</b> <b>sample</b> PCM). From the transcriptions, we removed the punctuation marks, replaced the numbers with their word forms (e.g. 512 = ‘quinientos doce’), and processed some special symbols (mainly units of areas or distances). To annotate noises, we employed our forced aligner module (see ‘Acoustic and language model’ section), which was able to detect and annotate the noises and select the best alternative phonetic representation for each word.|$|R
5000|$|For example, the {{bit rate}} of a CD-DA {{recording}} (44.1 kHz sampling rate, 16 <b>bits</b> <b>per</b> <b>sample</b> and two channels) {{can be calculated}} as follows: ...|$|E
50|$|Technical uses (e.g. {{in medical}} imaging or remote sensing applications) often require more levels, to make {{full use of}} the sensor {{accuracy}} (typically 10 or 12 <b>bits</b> <b>per</b> <b>sample)</b> and to guard against roundoff errors in computations. Sixteen <b>bits</b> <b>per</b> <b>sample</b> (65,536 levels) is a convenient choice for such uses, as computers manage 16-bit words efficiently. The TIFF and the PNG (among other) image file formats support 16-bit grayscale natively, although browsers and many imaging programs tend to ignore the low order 8 bits of each pixel.|$|E
50|$|Profiles {{supporting}} bit depths beyond 10 <b>bits</b> <b>per</b> <b>sample.</b> Profiles {{that support}} {{a range of}} bit depths can use different bit depths for luma and chroma with YCbCr color spaces.|$|E
40|$|Abstract—A fixed-rate shape–gain {{quantizer}} for the memoryless Gaussian {{source is}} proposed. The shape quantizer is constructed from wrapped spherical codes that map a sphere packing in 1 onto a sphere in, and the gain codebook is a globally optimal scalar quantizer. A wrapped Leech lattice shape quantizer {{is used to}} demonstrate a signal-to-quantization-noise ratio within 1 dB of the distortion-rate function for rates above 1 <b>bit</b> <b>per</b> <b>sample,</b> and an improvement over existing techniques of similar complexity. An asymptotic analysis of the tradeoff between gain quantization and shape quantization is also given. Index Terms—Data compression, Gaussian source, lattice coding, vector quantization...|$|R
50|$|In computing, {{although}} the grayscale can be computed through rational numbers, image pixels {{are stored in}} binary, quantized form. Some early grayscale monitors can only show up to sixteen (4-bit) different shades, but today grayscale images (as photographs) intended for visual display (both on screen and printed) are commonly stored with 8 <b>bits</b> <b>per</b> <b>sampled</b> pixel, which allows 256 different intensities (i.e., shades of gray) to be recorded, typically on a non-linear scale. The precision provided by this format is barely sufficient to avoid visible banding artifacts, but very convenient for programming because a single pixel then occupies a single byte.|$|R
40|$|This paper {{deals with}} the problem of {{simulating}} a discrete memoryless channel and proposes two algorithms for channel simulation by using the interval algorithm. The first algorithm provides exact channel simulation and the number of fair random <b>bits</b> <b>per</b> input <b>sample</b> approaches the conditional resolvability of the channel with probability one. The second algorithm provides approximate channel simulation and the approximation error measured by the variational distance vanishes exponentially as the block length tends to infinity, when the number of fair random <b>bits</b> <b>per</b> input <b>sample</b> is above the conditional resolvability. Further, some asymptotic properties of these algorithms as well as the original interval algorithm for random number generation are clarified. Keywords: channel simulation, interval algorithm, conditional resolvability, conditional entropy, random number generation 2 I...|$|R
