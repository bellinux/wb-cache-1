14|2959|Public
25|$|Business {{rules have}} been used by systems to provide {{definitions}} for governing behavior, and a <b>business</b> <b>rule</b> <b>engine</b> can be used to drive process execution and resolution.|$|E
5000|$|The DMN {{standard}} is complementary to the BPMN standard. BPMN defines {{a special kind}} of activity, the Business Rule Task, which [...] "provides a mechanism for the process to provide input to a <b>business</b> <b>rule</b> <b>engine</b> and to get the output of calculations that the <b>business</b> <b>rule</b> <b>engine</b> might provide".|$|E
50|$|In November 2007, Versata {{acquired}} Gensym. Gensym is {{a provider}} of <b>business</b> <b>rule</b> <b>engine</b> software.|$|E
50|$|PRR {{was mostly}} defined {{by and for}} vendors of <b>Business</b> <b>Rule</b> <b>Engines</b> (BREs) (sometimes termed <b>Business</b> <b>Rules</b> <b>Engine(s),</b> like in Wikipedia). Contributors have {{included}} all the major BRE vendors, members of RuleML, and leading UML vendors.|$|R
5000|$|Oracle <b>Business</b> <b>Rules,</b> {{contains}} a JSR 94 <b>Business</b> <b>rules</b> <b>engine</b> ...|$|R
5000|$|<b>Business</b> <b>rules</b> <b>engine</b> (BRE). This is a Rete {{algorithm}} <b>rule</b> <b>engine.</b>|$|R
50|$|Business {{rules have}} been used by systems to provide {{definitions}} for governing behavior, and a <b>business</b> <b>rule</b> <b>engine</b> can be used to drive process execution and resolution.|$|E
50|$|Drools {{supports}} the JSR-94 standard for its <b>business</b> <b>rule</b> <b>engine</b> and enterprise {{framework for the}} construction, maintenance, and enforcement of business policies in an organization, application, or service.|$|E
50|$|The OpenL Tablets {{project was}} started as an {{in-house}} development project in 2003 {{and later in}} 2006 was uploaded to SourceForge.Initially it was a Open Source <b>business</b> <b>rule</b> <b>engine</b> for Java. Starting from version 5 it became a BRMS.|$|E
5000|$|Gensym G2, a {{real-time}} {{expert system}} and <b>business</b> <b>rules</b> <b>engine</b> (BRE) ...|$|R
40|$|E-business {{provides}} important {{opportunities of}} trade for businesses, and the supporting business system must handle this environment efficiently. One current trend in business systems {{is to move}} business logic, such as business processes and <b>business</b> <b>rules,</b> out from the application logic and into separate support systems. The reason to make this separation {{is to increase the}} agility of the business, to make the system able to change more rapidly when the business situation changes. This report focus on <b>business</b> <b>rules</b> enforced in <b>business</b> <b>rule</b> <b>engines.</b> Specific interest is on how such <b>rule</b> <b>engines</b> meet the requirements of the e-business domain. The report presents an overview of <b>business</b> <b>rule</b> <b>engines.</b> Five general categories of characteristics are proposed. The proposed characteristics are then used in a comparison of three <b>business</b> <b>rule</b> <b>engines...</b>|$|R
5000|$|Data {{standardization}} - a <b>business</b> <b>rules</b> <b>engine</b> {{that ensures}} that data conforms to quality rules ...|$|R
5000|$|One {{common use}} case for rules engines is {{standardized}} access control to applications. OASIS defines a rules engine architecture and standard dedicated to access control called XACML (eXtensible Access Control Markup Language).One key {{difference between a}} XACML rule engine and a <b>business</b> <b>rule</b> <b>engine</b> {{is the fact that}} a XACML rule engine is stateless and cannot change the state of any data.The XACML rule engine, called a Policy Decision Point (PDP), expects a binary Yes/No question e.g. [...] "Can Alice view document D?" [...] and returns a decision e.g. Permit / deny.|$|E
40|$|Business rules {{provide an}} elegant {{solution}} to manage dynamic business logic by separating business knowledge from its implementation logic. The drawback of most existing business rule approaches {{is the lack}} of standardization and interoperability. The lack of service-orientation and remote accessibility of business rule engines makes it hard to use business rules in distributed environments. This paper contributes the design and implementation of VIDRE (Vienna Distributed Rules Engine), a service-oriented <b>business</b> <b>rule</b> <b>engine</b> based on RuleML. VIDRE enables enterprise applications to access business rules as easy as accessing a database, by exposing rules as Web services. VIDRE uses RuleML as an interlingua to represent facts, rules, and queries. One of the main contributions of the VIDRE approach is the ability to distribute rules and facts across various rule engines, therefore, enabling powerful ways of separating and executing business rules within intra- and interorganizational boundaries. 1...|$|E
40|$|Today’s {{business}} processes are not static, {{they need to}} be adapted frequently to reflect changing business requirements. Several business process languages such as WS-BPEL have emerged for specifying {{business processes}} based on Web service technologies. Activities in such business processes are typically implemented as Web services by using modern programming languages. These services encapsulate the business logic in terms of application-specific code. This approach lacks flexibility in terms of capturing and executing the business rules that define how certain activities work and how decisions are made. Changing “hard-coded ” business rules leads to changes in the service implementations and it cannot be done efficiently without redeploying the service which may affect running business processes. Therefore, we propose VIDRE a distributed service-oriented <b>business</b> <b>rule</b> <b>engine,</b> which enables business processes or enterprise applications to access business rules as easily as a database by exposing them as Web services. Furthermore, VIDRE enables the definition of distributed business rules, a novel feature allowing a distributed execution of rules. 1...|$|E
5000|$|<b>Business</b> <b>Rules</b> <b>Engine</b> - Drools Expert {{using the}} Rete {{algorithm}} and the Drools Rule Language (DRL) ...|$|R
5000|$|A runtime environment, {{allowing}} {{applications to}} invoke decision logic managed within the BRMS and execute it using a <b>business</b> <b>rules</b> <b>engine</b> ...|$|R
50|$|As {{more and}} more BPM vendors either add <b>business</b> <b>rules</b> <b>engines</b> to their BPM <b>engines</b> or OEM <b>business</b> <b>rules</b> {{management}} systems, <b>business</b> <b>rules</b> seems to be becoming a subset of BPM.|$|R
40|$|Abstract. Process/work ow mining aims at {{discovering}} the underlying processes {{to help in}} improving or rebuilding business processes. Most of the current practices of pro-cess mining are based on event logs from Transactional Information Systems (TIS) (such as WFM, ERP, CRM, SCM and B 2 B systems). However, with the popular deployment and use of <b>business</b> <b>rule</b> <b>engine</b> with TIS, {{a great number of}} rule logs are generated, but they are rarely utilized for discovering processes. This paper intends to propose a differ-ent perspective for process discovery as compared with the traditional way based on the event logs. Firstly, it illustrates a motivation scenario about process mining from rule logs and then brings forward a framework for process discovery based on rule logs. After that, the mining algorithm called Alpha-r with a case study is introduced to discover a process through mining the relations of traces in rule ow log. Finally, some experiments show the effectiveness and performance of the method...|$|E
40|$|Businesses are {{changing}} rapidly and organizations tend to act worldwide and are increasingly becoming distributed over the continents. As a consequence, distributed software systems {{have to keep}} track with rapidly changing markets. Business rules provide support for capturing some knowledge that changes frequently. Current business rule systems manage and execute business rules, however, typically lack support for increasingly distributed software systems, in particular, with respect to flexibility and reuse of business rules across distributed rule engines. In this {{paper we propose a}} service-oriented distributed business rules system that manages and deploys business rules to various business rule engines. Furthermore, we present the design and some implementation aspects of a service-oriented business rules system based on WS-Coordination. The system supports management and deployment of business rules to various business rules engines. Furthermore, we present a framework that unifies the access to several heterogeneous business rules engines, and we propose a solution that automatically generates and provisions Web services for executing business rules managed by a <b>business</b> <b>rule</b> <b>engine...</b>|$|E
40|$|Abstract—Since the {{creation}} of the World Wide Web and the emergence of search engines, the web has become the major media for researchers to explore and share data. In 2009, Berners-Lee started a movement to encourage researchers to put their data on the web. He wanted researchers to open and link their data to the public to increase the use and reuse of content. However, the lack of proper mechanisms to assist researchers publishing data on the web has prevented them from effective sharing. We create mechanisms to help researchers open and link their data using the integrated Rule-Oriented Data System, iRODS. iRODS is a data grid software that has been widely used to manage research data in large-scale European, American, and Asian national research projects, such as at the "Bibliothèque Nationale de France". iRODS comes with a <b>business</b> <b>rule</b> <b>engine</b> which allows researchers to create rules to manage and process data. In this paper, we show how to configure iRODS rules to transmit and open linked data in a distributed data cloud setting. Keywords-linked data; policy-based data management. I...|$|E
50|$|OpenL Tablets is a <b>business</b> <b>rule</b> {{management}} system (BRMS) and a <b>business</b> <b>rules</b> <b>engine</b> (BRE) based on table representation of <b>rules.</b> <b>Engine</b> implements optimized sequential algorithm. OpenL includes such table types as decision table, decision tree, spreadsheet-like calculator.|$|R
50|$|Cleverpath AION <b>Business</b> <b>Rules</b> Expert (formerly Platinum AIONDS, {{and before}} that Trinzic AIONDS, and {{originally}} Aion) is an expert system and <b>Business</b> <b>rules</b> <b>engine</b> owned by Computer Associates by 2000.|$|R
50|$|<b>Business</b> <b>Rule</b> Management Tools. JBoss Developer Studio {{includes}} {{support for}} {{the most widely used}} <b>Business</b> <b>rules</b> <b>engine</b> in the market, Drools. It offers graphical tools to create, edit and manage <b>business</b> <b>rules,</b> rule resources and decision tables.|$|R
40|$|Abstract—Management {{of energy}} {{consumption}} in Cloud has recently received considerable attention. Most existing {{research focuses on}} designing algorithms for dynamically managing the running of virtual machines in Cloud, such as placement and migration algorithms. Despite the use such on-line algorithms being essential, another equally important dimension that is related to High-level policies and guidelines that are set by Cloud Mangers or Administrators for management energy consumption. Such policies often stem from business, legal and financial requirements. Currently, most implementations of High-level policies such as Management Energy Consumption Policies are done manually via the use of low-level programming languages and APIs for accessing Cloud interfaces. Since High-level policies can change frequently, the manual implementation for such policies increases the cost {{and the time of}} the development and maintainability. Thus, there is a clear need for a methodical way of executing High-level policies automatically in Cloud. In this paper, we propose a generic architectural framework for enforcing High-level policies particularly Management Energy Consumption Policy in Cloud via using a <b>Business</b> <b>Rule</b> <b>Engine.</b> The generic architecture is implemented to execute Energy Management Business Rules to fire management actions in Open-Nebula cloud environment...|$|E
40|$|The {{plethora of}} medical studies that are {{published}} annually leaves many health professionals (HPs) overwhelmed with new health information. To assist HPs, information from research is often summarised and {{presented in a}} practice ready fashion through disease specific guidelines, drug monographs, and up-date newsletters. Although these have been effective in {{improving the quality of}} medical care, criticisms of these resources are focused on their inability to deal with complex patients such as those with comorbidities and the aged. Resources tailored specifically to the aged are either simplistic and do not take into account all issues surrounding complex patient management, drug therapy individualisation and end of life care or are impractical to use at the point of care. The hypothesis of this research was that HPs’ information needs were not currently being met and would require the identification, development and testing of an information delivery framework that would address their needs. The overall aim of this research was to identify HP information needs when delivering healthcare to complex patients, such as the aged, and was conducted in three phases. The first phase of this research used fifteen personal interviews with key HPs (geriatricians, GPs and accredited pharmacist) from the Melbourne metropolitan area to explore whether they felt currently available information resources meet their needs during complex patient healthcare delivery. Specifically it explored what HPs consider when making a clinical decision during healthcare delivery, what resources they use to assist in decision making and what features they desire in an information resource. Findings suggested that currently available resources did not meet HPs information needs. Issues identified included exclusion of complex patients from the literature, lack of relevance to the Australian environment and inability to access the literature due to lack of time to search for appropriate information and costs associated with subscriptions. Other identified hurdles included HPs inability to interpret and contextualise the literature and incomplete patient information that would otherwise influence their management choices. Features that were thought to make an information resource useful included clear formatting, simplicity, use of peer-reviewed evidence-based recommendations, local relevance and ready access via an easy to use electronic interface. A new framework for delivering disease state management information to HPs that took into account all the complexities of care but did not jeopardise clinical autonomy was designed and developed in the second phase of this research. Past successes and failures of other electronic systems were identified to inform the basis of system design. These fundamental elements included adherence to usability guidelines when developing user interface, provision of recommendations based on up-to-date reputable information sources accompanied by rationale and additional information links or references, identification of all important interactions clearly identifiable by level of importance, good integration into workflow and HP involvement throughout the design and development process. In order to take into account all of the complexities of appropriate care, the clinical decision making process was modelled by reviewing Australian and international literature regarding quality prescribing, medication review, disease state management and drug monographs. Features common across all sources included making a correct diagnosis, making a decision whether to treat a patient with non-pharmacological or pharmacological treatment, documenting care, and reviewing progress. Common considerations that influence treatment choice can be divided into patient characteristics and drug attributes. The clinical decision making model developed was used to design the system framework. Issues with updating the system knowledge and subsequent retesting were overcome by developing a <b>business</b> <b>rule</b> <b>engine</b> rather than coding decision making algorithms. Clinical autonomy was maintained by allowing HPs to choose the guideline for the system to use as the basis of decision support, as well as display of recommendations and associated potential issues based on patient data rather than providing absolute recommendations. The usefulness {{of the way in which}} information is provided by the system was evaluated in phase three using ‘think out aloud’, questionnaire and focus group techniques. Five pharmacy academics were asked to think-out aloud while using the system to make decisions regarding the management of newly diagnosed osteoarthritis in a complex patient in order to give insight into the usability, aesthetics and usefulness of information presentation. Although there were some minor issues identified, overall participants found the way in which information was displayed useful. A validated modified computer system usability questionnaire (mCSUQ) was used to gain feedback from pharmacists and medical practitioners regarding system usefulness after a demonstration of the programme. The 17 question mCSUQ used a 7 -point scale (1 = strongly disagree, 7 = strongly agree) and allows for open-ended feedback to measure user satisfaction with the system overall, its usefulness, the information and interface quality. When validated it demonstrated good internal consistency and congruent validity. Fifty-two HPs completed the mCSUQ and were invited to participate in focus group feedback. The system scored well on all domains: overall usability (mean 5. 05, SD 1. 07), system usefulness (mean 5. 06, SD 1. 11), interface quality (mean 4. 84, SD 1. 25) and highest on information quality (mean 5. 09, SD 1. 24). Two HPs were successfully recruited for focus group feedback. Results were used to confirm findings from open-ended question answers. Participants felt that the system interface was simple, clear and could be easy to learn but required colour to help identify important issues. Positive aspects to the system included linking information to patient data and the comprehensive nature of the information given. Additional information desired included statistical information on treatment efficacy and provision of medication review and deprescribing guidance. Major determinants to using the system included ability to integrate with electronic health records (EHR) and use of high quality information within the knowledge base. Barriers identified to CDSS implementation in general included lack of access to accurate and complete patient information and inconsistent medical terminology use among HPs. This research defines the types of information required during clinical decision-making as well information delivery preferences of HPs. It has resulted in the development of a new framework for delivering the information HPs need when requiring guidance during complex patient healthcare delivery. The framework developed is universal as the clinical decision making model is based on local and international literature. Only alterations to knowledge are required, rather than changes to code, to reflect local practice and drug availability. Future work could expand system knowledge, develop EHR integration capability, implement identified desired features and further evaluate the usability of the system and whether it is able to improve quality of prescribing...|$|E
40|$|<b>Business</b> <b>rules</b> change quite often. These changes {{cannot be}} handled effciently by {{representing}} <b>business</b> <b>rules</b> {{embedded in the}} source code of the business logic. Effcient handling of rules that govern ones business is one factor for success. That is where <b>business</b> <b>rules</b> <b>engines</b> play an important role. The service-oriented computing paradigm {{is becoming more and}} more popular. Services offered by di#erent providers, are composed to new services by using Web service composition languages such as BPEL. Such process-based composition languages lack the ability to use <b>business</b> <b>rules</b> managed by different <b>business</b> <b>rules</b> <b>engines</b> in the composition process. In this paper, we propose an approach on how to use and integrate <b>business</b> <b>rules</b> in a serviceoriented way into BPEL...|$|R
40|$|<b>Business</b> <b>rules</b> define or {{constrain}} {{some business}} [24]. Many different <b>business</b> <b>rules</b> <b>engines</b> exist {{to capture and}} manage the rules that comprise ones business. The lack of standards in the <b>business</b> <b>rule</b> area leads to different engine implementations and various rule representation formats. Furthermore, accessing rule-based knowledge in a uniform way from different heterogeneous applications in an enterprise computing environment poses many integration challenges. In this paper, we propose the design and implementation of a service-oriented approach on how to integrate different heterogeneous <b>business</b> <b>rule</b> <b>engines</b> by using our <b>Business</b> <b>Rules</b> Broker architecture. Furthermore, we present a method to automatically expose the rule-based business knowledge as Web services by generating the Web service code at design-time...|$|R
50|$|The NMIS <b>{{business}}</b> <b>rules</b> <b>engine</b> classifies {{events on}} their business impact, {{not just the}} technical nature. The <b>rules</b> <b>engine</b> is extremely powerful; however it can be configured in minutes for a network with {{a small number of}} devices to hours for networks with large numbers of devices.|$|R
50|$|As argued by Christopher J. Date, <b>business</b> <b>rules</b> {{translate}} into data integrity constraints when one thinks {{in terms of}} the relational model of database management. Thus, a true RDBMS could be thought of in terms of a declarative <b>business</b> <b>rules</b> <b>engine</b> with added data management capability.|$|R
50|$|The {{purpose of}} <b>Business</b> <b>Rules</b> <b>Engines</b> is {{to define a}} {{representation}} of business logic in as human readable fashion as possible. This allows both subject matter experts and developers {{to work with and}} understand the same representation of the <b>business</b> logic. Most <b>Rules</b> <b>Engines</b> provide both an approach to simplifying the control structures for business logic (for example, using Declarative Rules or Decision Tables) coupled with alternatives to programming syntax in favor of DSLs.|$|R
50|$|AI systems first {{provided}} automated {{logical inference}} and these were once extremely popular research topics, leading to industrial applications under the form of expert systems and later <b>business</b> <b>rule</b> <b>engines.</b> More recent work on automated theorem proving has had a strongerbasis in formal logic.|$|R
50|$|Corticon’s <b>business</b> <b>rules</b> <b>engine</b> {{works with}} service {{oriented}} architectures (SOA). Traditional <b>rules</b> <b>engines</b> use a Rete algorithm to execute rules. To avoid potential issues with rule execution as data becomes more complex, Corticon uses a patented Design-Time-Interfacing (DeTI) algorithm. That algorithm {{is designed to}} scale linearly regardless {{of the number of}} rules or complexity of the data.|$|R
40|$|Abstract. EasyMiner (easyminer. eu) is {{a web-based}} {{association}} rule mining software {{based on the}} LISp-Miner system. This paper presents a proof-of-concept workflow for learning <b>business</b> <b>rules</b> with EasyMiner from transactional data. The approved rules are exported to the Drools <b>business</b> <b>rules</b> <b>engine</b> in the DRL format. The main focus is the transformation of GUHA association rules to DRL. ...|$|R
50|$|Various <b>Business</b> <b>Rules</b> <b>Engines</b> {{have been}} {{developed}} for automating policy and <b>business</b> <b>rules</b> used in both government and private industry. ILOG, Oracle Policy Automation, DTRules, Drools and others provide support for DSLs aimed to support various problem domains. DTRules {{goes so far as to}} define an interface for the use of multiple DSLs within a Rule Set.|$|R
25|$|A {{market has}} {{developed}} for enterprise software leveraging the business process management concepts {{to organize and}} automate processes. The recent convergence of these software from distinct pieces such as <b>business</b> <b>rules</b> <b>engine,</b> <b>business</b> process modelling, business activity monitoring and Human Workflow has given birth to integrated Business Process Management Suites.|$|R
