94|74|Public
2500|$|Phase-locked loops {{are widely}} used for {{synchronization}} purposes; in space communications for coherent demodulation and threshold extension, <b>bit</b> <b>synchronization,</b> and symbol synchronization. Phase-locked loops {{can also be used}} to demodulate frequency-modulated signals. [...] In radio transmitters, a PLL is used to synthesize new frequencies which are a multiple of a reference frequency, with the same stability as the reference frequency.|$|E
50|$|In a {{communication}} system, the receiver side BER {{may be affected}} by transmission channel noise, interference, distortion, <b>bit</b> <b>synchronization</b> problems, attenuation, wireless multipath fading, etc.|$|E
50|$|In digital transmission, {{the number}} of bit errors is {{the number of}} {{received}} bits of a data stream over a communication channel that have been altered due to noise, interference, distortion or <b>bit</b> <b>synchronization</b> errors.|$|E
5000|$|SSRC: (32 <b>bits)</b> <b>Synchronization</b> source {{identifier}} uniquely identifies {{the source of}} a stream.|$|R
50|$|The raw (maximum) {{data rates}} {{shown in the}} figures are what is {{available}} for Tactical Data transmission, after the low level overheads (Error Detection And Correction (EDAC) <b>bits,</b> <b>synchronization</b> <b>bits,</b> etc.) have been taken into consideration.|$|R
25|$|SSRC: (32 <b>bits)</b> <b>Synchronization</b> source {{identifier}} uniquely identifies {{the source of}} a stream. The synchronization sources within the same RTP session will be unique.|$|R
50|$|For a given data {{signaling}} rate, i.e., bit rate, the NRZ code {{requires only}} half the baseband bandwidth required by the Manchester code (the passband bandwidth is the same). When used to represent data in an asynchronous communication scheme, {{the absence of a}} neutral state requires other mechanisms for <b>bit</b> <b>synchronization</b> when a separate clock signal is not available.|$|E
50|$|Phase-locked loops {{are widely}} used for {{synchronization}} purposes; in space communications for coherent demodulation and threshold extension, <b>bit</b> <b>synchronization,</b> and symbol synchronization. Phase-locked loops {{can also be used}} to demodulate frequency-modulated signals. In radio transmitters, a PLL is used to synthesize new frequencies which are a multiple of a reference frequency, with the same stability as the reference frequency.|$|E
50|$|The IBM {{patented}} {{encoding method}} used for encoding 8-bit data bytes to 10-bit Transmission Characters. Data bytes are converted to Transmission Characters {{to improve the}} physical signal such that the following benefits are achieved: <b>bit</b> <b>synchronization</b> is more easily achieved, design of receivers and transmitters is simplified, error detection is improved, and control characters (i.e., the Special Character) can be distinguished from data characters.|$|E
5000|$|... 24 bit buffer {{used for}} <b>bit</b> stuffing, <b>synchronization</b> jitter and {{distance}} delay.|$|R
5000|$|... 32 <b>bits</b> - <b>synchronization</b> code (S-field): {{constant}} {{bit string}} AAAAE98AH for FP transmission, 55551675H for PP transmission ...|$|R
30|$|In fact, mean {{modulation}} with a fixed {{quantization step}} {{has previously been}} explored for the embedding of synchronization codes in the time domain for many audio watermarking algorithms [14, 15, 17, 23, 38]. In principle, watermark <b>bits</b> and <b>synchronization</b> codes are hidden in different segments of the audio file to avoid mutual interference. In this study, we propose embedding watermark <b>bits</b> and <b>synchronization</b> codes within separate DWT subbands. This arrangement offers additional advantages other than an increase in payload capacity. For example, the successful detection of synchronization codes in one subband can signify {{the presence of a}} data sequence in another subband.|$|R
50|$|In {{asynchronous}} {{serial communication}} the physical protocol layer, the data blocks are code {{words of a}} certain word length, for example octets (bytes) or ASCII characters, delimited by start bits and stop bits. A variable length space can be inserted between the code words. No <b>bit</b> <b>synchronization</b> signal is required. This is sometimes called character oriented communication. Examples are the RS-232C serial standard, and MNP2 and V.2 modems and older.|$|E
50|$|The packets may be {{encapsulated}} in a data frame, with a {{frame synchronization}} bit sequence indicating {{the start of}} the frame, and sometimes also a <b>bit</b> <b>synchronization</b> bit sequence, typically 01010101, for identification of the bit transition times. Note that at the physical layer, this is considered as synchronous serial communication. Examples of packet mode data link protocols that can be/are transferred using synchronous serial communication are the HDLC, Ethernet, PPP and USB protocols.|$|E
50|$|A message {{begins with}} five normal 1 bits (A driven low for 500 ns, then B driven low for 500 ns) for <b>bit</b> <b>synchronization,</b> {{followed}} by a special frame sync pattern, three bit times long, that violates the usual Manchester encoding rules. A is driven low for 1500 ns, then B is driven low for 1500 ns. This is like a 1 bit sent at 1/3 normal speed (although the preemphasis pulses remain 250 ns long).|$|E
40|$|This paper {{presents}} carrier synchronization {{in software}} defined radio for 8 PSK technique. Software Defined Radio (SDR) plays a major solution for the need for flexibility, upgradability, and the problems of implementing multiple radio standards alternatively and even running several services in parallel. Previously carrier synchronization in {{software defined radio}} is implemented using QPSK technique and synchronization is done using PLL concept. The drawback in this we can transmit only few (only two) number of <b>bits</b> while <b>synchronization</b> is performed. The carrier synchronization by software defined radio using 8 PSK technique will allow more number (three) of <b>bits</b> during <b>synchronization,</b> and the same bandwidth which is used for QPSK technique. The main advantage is the transmitting of three bits which reduces the time consumption and the synchronization is performed using COSTAS LOOP. The purpose and advantage of Costas loop compared to PLL is error voltage. The error voltage is less in Costas loop, due to this synchronization is performed effectively. The complete codings are coded using MATLAB...|$|R
40|$|Abstract: We {{present a}} local area {{sub-network}} design avoiding optical buffering, <b>bit</b> level <b>synchronization</b> and regeneration. Using currently available components we calculate acceptable utilisation when scalability {{is limited to}} local, system, storage and desk area networks. The architecture draws upon well-understood computer networking concepts, and uses wavelength striping of the packets {{as a method of}} achieving low latency and high capacity for use in the target systems. ...|$|R
30|$|In this study, we {{introduce}} a robust blind watermarking scheme for hiding {{two types of}} information (watermark <b>bits</b> and <b>synchronization</b> codes) within embeddable regions of DWT subbands designated as information packages. The position of the synchronization codes is used in frame alignment to indicate the start of packaged binary data. This scheme allows the watermark to be dissembled into parts during the embedding phase and reassembled during extraction.|$|R
50|$|In telecommunications, {{transmission}} (abbreviation: Tx) is {{the process}} of sending and propagating an analogue or digital information signal over a physical point-to-point or point-to-multipoint transmission medium, either wired, optical fiber or wireless. One example of transmission is the sending of a signal with limited duration, for example a block or packet of data, a phone call, or an email. Transmission technologies and schemes typically refer to physical layer protocol duties such as modulation, demodulation, line coding, equalization, error control, <b>bit</b> <b>synchronization</b> and multiplexing, but the term may also involve higher-layer protocol duties, for example, digitizing an analog message signal, and source coding (compression).|$|E
30|$|This section {{gives the}} {{theoretical}} performance models for <b>bit</b> <b>synchronization</b> and decoding.|$|E
30|$|This section gives a brief {{overview}} of the ML algorithms for <b>bit</b> <b>synchronization</b> and decoding used in this paper.|$|E
30|$|In this study, we {{embedded}} {{two types}} of binary data (watermark <b>bits</b> and <b>synchronization</b> codes) within the same time frame under the same framework. This was achieved using DWT to conduct signal decomposition, thus allowing the embedding {{of different types of}} binary data within separate DWT subbands. However, the detectability of the embedded binary information differs somewhat between the watermark <b>bits</b> and <b>synchronization</b> codes. Unlike watermarks, where each bit conveys individual information, the bit sequence of a synchronization code can be considered a distinct entity. The existence of the synchronization code depends on a certain number of bits being recognizable, which means that the synchronization code may have some tolerance for faults. Thus, the watermark bits in our design are inserted within the lowest subband, wherein the coefficient magnitudes are larger than that observed in the subband used for the insertion of synchronization codes. Larger coefficients enable the use of stronger strengths to embed watermark bits. This is conducive to the robustness of the watermark and helps to keep it perceptually imperceptible.|$|R
30|$|The {{remainder}} {{of this paper is}} organized as follows. SectionÂ  2 describes the watermarking framework, whereby information <b>bits</b> and <b>synchronization</b> codes are embedded in selected DWT subbands. SectionÂ  3 discusses configuring the watermark to cope with speech signals. We also outline a package strategy used for information grouping and synchronization and delineate the complete watermarking process. SectionÂ  4 presents experiment results aimed at evaluating speech quality and watermark robustness against commonly encountered attacks. Conclusions are drawn in SectionÂ  5.|$|R
50|$|Many {{techniques}} such as carrier recovery, clock recovery, <b>bit</b> slip, frame <b>synchronization,</b> rake receiver, pulse compression, Received Signal Strength Indication, error detection and correction, etc., are only performed by demodulators, although any specific demodulator may perform only some or none of these techniques.|$|R
30|$|The {{performance}} of ML bit decoding being assessed {{in this paper}} assumes that successful <b>bit</b> <b>synchronization</b> has been achieved.|$|E
30|$|The ML <b>bit</b> <b>synchronization</b> {{is first}} {{introduced}} in [12], {{and a brief}} assessment has showed that it outperforms the conventional histogram method in weak GNSS signal environments. However, all analyses in [12] were based on simulation results and no theoretical performance model had been developed. The ML bit decoding, introduced in [13] is reported to outperform other algorithms either in performance or complexity. However, the effect of different numbers of bits to be decoded {{at a time and}} the effect of Doppler error was not assessed in [13]. In [14], the requirements of ML <b>bit</b> <b>synchronization</b> and bit decoding algorithms were analyzed {{in terms of the number}} of data bits required for <b>bit</b> <b>synchronization</b> and the number of data bits that can be decoded at a time for bit decoding.|$|E
30|$|The {{contributions}} {{of this paper}} are three-fold. First, it systematically assesses the performance of ML <b>bit</b> <b>synchronization</b> and decoding {{as a function of}} the number of data bits, the effect of Doppler error and received signal power in phase-locked mode and frequency-locked mode by using Monte Carlo test. Second, it develops theoretical performance models of ML <b>bit</b> <b>synchronization</b> and decoding based on statistical theory. The performance models and analysis are experimentally validated. Third, it gives and compares different implementation schemes in a software-based GNSS receiver in weak signal environments.|$|E
40|$|This paper {{introduces}} Pica, a fine-grain, {{message passing}} architecture designed to efficiently support high-throughput parallel applications. This focus on high-throughput applications allows a small local memory of 4096 36 -bit words. The architecture minimizes overhead for basic parallel operations. An operand-addressed context cache and round-robin task manager allow single cycle task swaps. Fixed-sized activation contexts simplify storage management. Word-tag <b>synchronization</b> <b>bits</b> provide low-cost <b>synchronization.</b> Several applications {{have been developed}} for this architecture including thermal relaxation, matrix multiplication, JPEG image compression, and positron emission tomography image reconstruction. These applications have been implemented and executed on the Pica architecture using an instrumented instruction-level simulator. Using these results, the architectural features of Pica are evaluated. 1 Introduction There are many approaches to exploiting fine-grain parallelism: in [...] ...|$|R
40|$|Ph. D. (Electrical & Electronic Engineering) In {{the ideal}} {{communication}} system no noise is present and error free communication is possible. In practice, however, several factors influence the correctness ofÂ· the communication. One {{of the most}} important of these factors is the synchronization of the message. Synchronization techniques form an integral part of data communication systems and without synchronization no comprehensible message can be received. An example of a communication system in which synchronization errors occur is the plesiochronous communication network which is used in many telephone networks [49, 50]. A common problem with the use of the multiplexers in such a network is that output pulses may occur that do not contain valid data, due to minor discrepancies in the clock frequencies of the incoming signals. These inserted bits are termed ''justification bits" and their presence is signaled over the link by the justification control bits or stuffing control bits, which are included in the frame [49 and 50]. Synchronization of the network is dependent, among other factors, on the correct decoding of the stuffing control <b>bits.</b> <b>Synchronization</b> at the receiver can also be lost when the frame markers are not recognizable due to errors on the channel [...] ...|$|R
3000|$|... where DC is {{the duty}} cycle, Ndata the {{sampling}} data bits within one frame time, Noh the overhead bits within one frame time, Nsync the <b>synchronization</b> <b>bits</b> within one frame time, fc the communication data rate (bits per s) and fs the sampling data rate (bits per s).|$|R
30|$|Generally, longer {{coherent}} {{integration time}} periods such as 2 Â s (100 bits) would {{have concerns about}} oscillator stability and code Doppler. However, the ML <b>bit</b> <b>synchronization</b> process with {{a high number of}} bits such as 100 bits only sums the correlator output samples coherently to the length of the window function in (4) (i.e., the length of 1 bit, which equals to 20 Â ms for GPS L 1 -C/A signals), followed by non-coherent accumulation to 2 Â s. Therefore, the oscillator stability and code Doppler will not have obvious impact on ML <b>bit</b> <b>synchronization.</b>|$|E
30|$|In this section, {{simulation}} results assessing {{the performance of}} ML <b>bit</b> <b>synchronization</b> and decoding under different conditions are reported. Monte Carlo simulations have been performed to estimate the performance curve.|$|E
3000|$|Bit {{decoding}} is {{the process}} of determining bit values after the <b>bit</b> <b>synchronization</b> has been completed. The likelihood function used in the ML algorithm is the inner product between T [...]...|$|E
50|$|Each voice {{time slot}} in the TDM frame is called a channel. In European systems, {{standard}} TDM frames contain 30 digital voice channels (E1), and in American systems (T1), they contain 24 channels. Both standards also contain extra bits (or bit time slots) for signaling and <b>synchronization</b> <b>bits.</b>|$|R
5000|$|In 1965, that {{permitted}} the TDM multiplexing of 24digital telephone channels of 64 kbit/s into a 1.544-Mbit/s signal with a formatcalled T1 (see Figure 11). For the T1 signal, a <b>synchronization</b> <b>bit</b> {{is added to}} the24 TDM time slots, {{in such a way}} that the aggregate transmission rate is: ...|$|R
40|$|This paper {{introduces}} Pica, a fine-grain, {{message passing}} architecture designed to efficiently support high-throughput parallel applications. The architecture minimizes overhead for basic parallel operations. An operand-addressed context cache and round-robin task manager allow single cycle task swaps. Fixed-sized activation contexts simplify storage management. Wordtag <b>synchronization</b> <b>bits</b> provide low-cost <b>synchronization.</b> The focus on high-throughput applications allows a small local memory (1024 36 -bit words). A complete node (including memory) {{can be implemented}} using {{a fraction of a}} chip. A multi-node chip prototype (four nodes/chip) is being designed. In order to meet chip I/O requirements, a high-bandwidth, threedimensional optical network is also being designed. Using recent developments in epitaxial liftoff of optoelectronic devices and through-chip transmission, a network is presented that provides 3. 2 Gbits/sec offchip bandwidth. 1 High-Bandwidth Parallelism There are many [...] ...|$|R
