1|18|Public
50|$|The Motorola MC10800 was a 4-bit <b>bit-sliced</b> <b>processor</b> {{designed}} by Motorola and introduced in 1979. It was implemented in ECL logic and {{was part of}} the M10800 family.|$|E
5000|$|... 4060: {{entry-level}} model based on AMD Am2900 <b>bit-slice</b> <b>processors</b> ...|$|R
50|$|The ND-100 was {{implemented}} using medium-scale integration (MSI) logic and <b>bit-slice</b> <b>processors.</b>|$|R
5000|$|A600+ - {{based on}} Am2900 <b>bit-slice</b> <b>processor,</b> {{supports}} code and data separation, optional ECC (error correcting) memory. Codename: LIGHTNING ...|$|R
5000|$|A700 - {{based on}} AMD AM2903 <b>bit-slice</b> <b>processor,</b> {{optional}} hardware floating point processor, 1MIPS, 204kFLOPS, microprogramming, optional ECC memory. Codename: PHOENIX ...|$|R
5000|$|DECSYSTEM-2020: <b>bit-slice</b> <b>processor</b> {{with up to}} 512 kilowords {{of solid}} state RAM (The ADP OnSite version of the DECSYSTEM-2020 {{supported}} 1 MW of RAM) ...|$|R
5000|$|AES Data Systems C20 Multiuser Word Processors. AES of Montreal {{designed}} {{a series of}} modules and systems based on their AES-800 <b>bit-slice</b> <b>processors.</b> 8- 12- and 16-bit buses {{were part of the}} design.|$|R
5000|$|The Arithmetical and Logical Unit {{gate array}} (ALU, {{also known as}} the [...] "BUFALU"). Replaced four Am2901 <b>bit-slice</b> <b>processors,</b> and some {{additional}} registers like the data bus register the general purpose register, and the internal register block.|$|R
50|$|The IMP-16 is a <b>bit-slice</b> <b>processor.</b> Each RALU chip {{provides}} a 4-bit {{slice of the}} register and arithmetic portion of a processor. Multiple RALU chips work in parallel, providing a longer word length. Each RALU chip provides 4 bits of the program counter, several registers, the ALU, a 16-word LIFO stack, and the status flags.|$|R
50|$|The DISER Lilith is {{a custom}} built {{workstation}} computer {{based on the}} AMD 2901 <b>bit-slice</b> <b>processor,</b> created by a group led by Niklaus Wirth at ETH Zürich. The project started in 1977 and by 1984 several hundred workstations were in use. It had a high resolution full page display, a mouse, a laser printer interface, and a network interface. Its software was written completely in Modula-2 and included a relational database program called Lidas.|$|R
40|$|This conference, {{dedicated}} to a specialized field in high-energy physics experimentation, attracted a large audience from Europe and the United States. The number and variety of contributions surpassed {{the expectations of the}} Organizing Committee. Not all these contributions concerned the use of microprocessors in the proper sense of the term. Hardwired and <b>bit-sliced</b> <b>processors</b> received a large amount of attention, as is natural, considering the characteristics of high-energy physics experiments. Without doubt, the micro-electronics - of which the microprocessor is only a part - revolution is profoundly affecting the instrumentation for particle physics...|$|R
50|$|Prior to {{the advent}} of {{stand-alone}} DSP chips discussed below, most DSP applications were implemented using <b>bit-slice</b> <b>processors.</b> The AMD 2901 bit-slice chip with its family of components was a very popular choice. There were reference designs from AMD, but very often the specifics of a particular design were application specific. These bit slice architectures would sometimes include a peripheral multiplier chip. Examples of these multipliers were a series from TRW including the TDC1008 and TDC1010, some of which included an accumulator, providing the requisite multiply-accumulate (MAC) function.|$|R
50|$|One of the 90x's biggest {{advantages}} over {{the competition was}} its asynchronous serial port controller (the ITS or Intelligent Terminal Server) based on a 16-bit <b>bit-slice</b> <b>processor.</b> The ITS interfaced to 16 serial ports, and it could run them at very high speeds, using DMA to feed from daisy-chained output data blocks. A machine could have many ITSs installed, each one with its own I/O processor. Other machines at the time (including the 11/780) required CPU intervention every few bytes for interactive users, which added significantly to the system component of the CPU load. As a result, the 90x scored very well on benchmarks with a realistic amount of serial I/O.|$|R
5000|$|The second {{model was}} the 4052, which {{in spite of}} the similar name was a very {{different}} system. This had a CPU based on four AMD 2901 4-bit <b>bit-slice</b> <b>processors</b> used together to make a single 16-bit processor. It could also be used in a 6800-compatible mode, allowing it to run software from the 4051, although it did so much faster than the original 4051. Released in 1978, it came with a full 32 kB of RAM for $9,795, and could be expanded to 64 kB for another $1,995. The 4054 was a version of the 4052 built around the 19" [...] screen from the 4014 terminal rather than the 11" [...] screen from the 4012, increasing resolution to 4,096 by 3,072.|$|R
40|$|This paper {{describes}} a hardware {{solution to the}} problem of updating bitmap displays very rapidly. Starting from requirements of the man-machine interface of a powerful personal computing system, it is seen that it is essential to have hardware support for the `RasterOp' graphics algorithm which operates on two-dimensional (rectangular) bitmaps. The DisArray hardware employs an array of 256 1 -bit processor/memory pairs in a 16 Θ 16 configuration, thus directly supporting the manipulation of two-dimensional bitmaps. A separate, conventional, <b>bit-slice</b> <b>processor</b> provides the array instruction sequence to execute RasterOp and other graphics algorithms (such as polygon filling). Video data is asynchronously extracted from array memory using a double buffering scheme. The system can be used in a `display list' mode in which DisArray continuously interprets an applications-oriented data structure which describes the screen layout in terms of windows, text strings and pictures. This opera [...] ...|$|R
50|$|In 1981, with a {{small number}} of BNR colleagues, Pearson left to found Orcatech Inc., one of the first {{companies}} specialising in the design and development of high resolution intelligent graphics workstations for the computer-aided engineering market. In the early 1980s, the availability of bit-slice and 16-bit microprocessors started to revolutionise high resolution computer graphics terminals which now increasingly became intelligent, semi-standalone and standalone workstations. Graphics and application processing were increasingly migrated to the intelligence in the workstation, rather than continuing to rely on central mainframe and mini-computers. The Orca 3000 was based on Motorola 68000 and AMD <b>bit-slice</b> <b>processors</b> and had Unix as its operating system. It was targeted squarely at the sophisticated end of the design engineering sector and included General Motors, Nortel, Boeing and Lockheed as clients. After developing a portfolio of successful workstation products and a rich portfolio of blue-chip clients, Orcatech went public on the Toronto Stock Exchange in 1983 at a valuation of over $100m, at that time one of the highest valued young technology companies ever to go public on the TSX.|$|R
2500|$|In {{the early}} 1980s, the {{availability}} of bit-slice and 16-bit microprocessors started to revolutionize high-resolution computer graphics terminals which now increasingly became intelligent, semi-standalone and standalone workstations. Graphics and application processing were increasingly migrated to the intelligence in the workstation, rather than continuing to rely on central mainframe and mini-computers. Typical of the early move to high-resolution computer graphics intelligent workstations for the computer-aided engineering market were the Orca 1000, 2000 and 3000 workstations, developed by Orcatech of Ottawa, a spin-off from Bell-Northern Research, and led by David Pearson, an early workstation pioneer. The Orca 3000 was based on Motorola 68000 and AMD <b>bit-slice</b> <b>processors</b> and had Unix as its operating system. It was targeted squarely at the sophisticated end of the design engineering sector. Artists and graphic designers {{began to see the}} personal computer, particularly the Commodore Amiga and Macintosh, as a serious design tool, one that could save time and draw more accurately than other methods. [...] The Macintosh remains a highly popular tool for computer graphics among graphic design studios and businesses. Modern computers, dating from the 1980s, often use graphical user interfaces (GUI) to present data and information with symbols, icons and pictures, rather than text. Graphics are one of the five key elements of multimedia technology.|$|R
40|$|This work is {{concerned}} with the design and development of real-time algorithms for industrial inspection applications. Rather than implement algorithms in dedicated hardware, microprogrammable machines were considered essential in order to maintain flexibility. After a survey of image pattern recognition where algorithms applicable to real-time use are cited, this thesis presents industrial inspection algorithms that locate and scrutinise actual manufactured products. These are fast and robust - a necessary requirement in industrial environments. The National Physical Laboratory have developed a Linear Array Processor (LAP) specifically designed for industrial recognition work. As with most array processors, the LAP has a greater performance than conventional processors, yet is strictly limited to parallel algorithms for optimum performance. It was therefore necessary to incorporate sequentialism into the design of a multiprocessor system. A microcoded <b>bit-slice</b> Sequential Image <b>Processor</b> (SIP) has been designed and built at RHBNC in conjunction with the NPL. This was primarily intended as a post-processor for the LAP based on the VMEbus but in fact has proved its usefulness as a stand-alone processor. This is described along with an assembler written for SIP which translates assembly language mnemonics to microcode. This work, which includes a review of current architectures, leads to the specification of a hybrid (SIMD/NIMD) architecture consisting of multiple autonomous sequential processors. This involves an analysis of various configurations and entails an investigation of the source of bottlenecks within each design. Such systems require a significant amount of interprocessor communication: methods for achieving this are discussed, some of which have only become practical with the decrease incost of electronic components. This eventually leads to a system for which algorithm execution speed increases approximately linearly with the number of processors. The algorithms described in earlier chapters are examined on the system and the practicalities of such a design are analysed in detail. Overall, this thesis has arrived at designs of programmable real-time inspection systems, and has obtained guidelines which will help with the implementation of future inspection systems. <p...|$|R

