102|545|Public
2500|$|Turret presses, most {{commonly}} of the [...] "C" [...] type, {{are similar to}} single stage presses, but permit mounting all of the dies for one cartridge (or sometimes two cartridges) simultaneously, with each die being installed and correctly locked in position with lock rings onto the press at the same time. [...] <b>Batch</b> <b>operations</b> are performed similar as to on a single stage press, but to switch dies, the turret is simply rotated, placing another die in position. [...] Although turret presses operate much like single stage presses, they eliminate much of the setup time required in positioning individual dies correctly.|$|E
2500|$|The first Wang VS {{computer}} {{was introduced in}} 1977, {{about the same time}} as Digital Equipment Corporation's VAX, and continues to be in use 39 years later. Its instruction set was compatible with the IBM 360 series, but it did not run any IBM 360 system software. The VS operating system and all system software were built from the ground up to support interactive users as well as <b>batch</b> <b>operations.</b> The VS was aimed directly at the business data processing market in general, and IBM in particular. While many programming languages were available, the VS was typically programmed in COBOL. Other languages supported in the VS integrated development environment included Assembler, COBOL 74, COBOL 85, BASIC, Ada, RPG II, C, PL/I, FORTRAN, Glossary, MABASIC, SPEED II and Procedure (a scripting language). Pascal was also supported for I/O co-processor development. The Wang PACE (Professional Application Creation Environment) 4GL and database was used from the mid-1980s onward by customers and third party developers to build complex applications sometimes involving many thousands of screens, hundreds of distinct application modules, and serving many hundreds of users. Substantial vertical applications were developed for the Wang VS by third party software houses throughout the 1980s in COBOL, PACE, BASIC, PL/I and RPG II. The Wang OFFICE family of applications and Wang WP were both popular applications on the VS. Word Processing ran on the VS through services that emulated the OIS environment and downloaded the WP software as [...] "microcode" [...] (in Wang terminology) to VS workstations.|$|E
50|$|Image locking {{to prevent}} {{accidental}} description changes during <b>batch</b> <b>operations.</b>|$|E
50|$|Chemical {{processes}} may be run {{in continuous}} or <b>batch</b> <b>operation.</b>|$|R
5000|$|... {{possibility}} of <b>batch</b> <b>operation</b> of control system, in hostile contexts where {{the connection is}} not continuous; ...|$|R
40|$|This report {{presents}} {{our first}} results and conclusions {{with respect to}} - a simple specification formalism for hard real-time problems, - a method allowing to derive the specification of a control program in a systematic way from {{the properties of the}} plant to be controlled, - the application of the specification method, - the formal verification of the specification of a program for single <b>batch</b> <b>operation</b> with respect to the specification of the overall plant using PVS, - a control program for single <b>batch</b> <b>operation</b> written in SFC, - an informal verification of the specification of the program for multiple <b>batch</b> <b>operation</b> with respect to the specification of the overall plant using PVS, - extensions in the functionality of the control program in an informal way...|$|R
50|$|Many truly {{continuous}} {{processes of}} today were originally <b>batch</b> <b>operations.</b>|$|E
50|$|Some common {{applications}} of plate columns are distillation, gas-liquid absorption and liquid-liquid extraction. In general, plate columns {{are suitable for}} both continuous and <b>batch</b> <b>operations.</b>|$|E
5000|$|TFSs: “Standalone” TFS {{functions}} called {{directly by}} the runtime library, but intended only for single-process use (if multiple threads are used, each must be accessing a different database only). To be used for high-throughput <b>batch</b> <b>operations</b> while the database(s) are otherwise offline. Unsafe (but fast) updates are allowed.|$|E
50|$|Automated proof {{checking}} {{can be done}} {{either as}} a <b>batch</b> <b>operation,</b> or interactively, {{as part of an}} interactive theorem proving system.|$|R
40|$|AbstractIn {{pharmaceuticals}} manufacturing, {{the conversion}} of conventional batch crystallisations to continuous mode {{has the potential for}} intensified, compact operation and more consistent production via quality-by-design. A pragmatic conversion approach is to utilise existing stirred tank batch crystallisers as continuous mixed-suspension mixed-product removal (MSMPR) stages. In this study, a rigorous and general mathematical model is developed for a pharmaceutical crystallisation process under continuous MSMPR operation. In the proposed changeover from <b>batch</b> to continuous <b>operation,</b> concentration control (C-control), which has been well accepted in <b>batch</b> crystallisation <b>operation,</b> is further extended to facilitate the convenient design of the steady-state operating point of a continuous MSMPR crystalliser; an objective is to ensure that the start-up procedures and on-line control conditions fall within the design-space of the original <b>batch</b> <b>operation.</b> Both single-stage and cascaded two-stage MSMPR crystallisers were investigated and compared to the conventional <b>batch</b> <b>operation.</b> It was observed that despite the production of a smaller number-based mean crystal size, the proposed continuous MSMPR operation achieved higher production capacity with shorter mean residence time and comparable product yield to the <b>batch</b> <b>operation.</b> Lastly, the robustness of C-control strategy against uncertainties in crystallisation kinetics was also demonstrated for the proposed continuous MSMPR operation...|$|R
30|$|The {{experimental}} datasets, {{which were}} obtained from the <b>batch</b> <b>operation,</b> were used as inputs to the ANN model to provide the reasonable predictive performance of the biosorbent.|$|R
50|$|Pyxplot {{is a free}} {{software}} command-line graph-plotting and vector graphics package. Its interface {{is similar to that}} of gnuplot, but its graphics engine is optimised to produce output in a style appropriate for inclusion in academic journals. The LaTeX typesetting system is used to render all text labels, making it easy to annotate graphs with mathematical expressions. In addition, Pyxplot has many more flow control constructs than gnuplot, making it much easier to perform <b>batch</b> <b>operations.</b>|$|E
5000|$|MM {{was unusual}} for its {{time in its}} support of [...] "message sequences," [...] which allowed the user to select a subset of {{messages}} in a mailbox for <b>batch</b> <b>operations.</b> The message sequence feature proved so popular with MM users that TOPS-20 MM author Mark Crispin went on to implement similar filtering capabilities in Pine. Columbia MM also offered context-sensitive help, command completion, and command history, carried over from the TOPS-20 version, before such features were commonplace in Unix software.|$|E
5000|$|Turret presses, most {{commonly}} of the [...] "C" [...] type, {{are similar to}} single stage presses, but permit mounting all of the dies for one cartridge (or sometimes two cartridges) simultaneously, with each die being installed and correctly locked in position with lock rings onto the press at the same time. <b>Batch</b> <b>operations</b> are performed similar as to on a single stage press, but to switch dies, the turret is simply rotated, placing another die in position. Although turret presses operate much like single stage presses, they eliminate much of the setup time required in positioning individual dies correctly.|$|E
40|$|This is an Open Access Article. It is {{published}} by Elsevier as Open Access at: [URL] pharmaceuticals manufacturing, the conversion of conventional batch crystallisations to continuous mode {{has the potential for}} intensified, compact operation and more consistent production via quality-by-design. A pragmatic conversion approach is to utilise existing stirred tank batch crystallisers as continuous mixed-suspension mixed-product removal (MSMPR) stages. In this study, a rigorous and general mathematical model is developed for a pharmaceutical crystallisation process under continuous MSMPR operation. In the proposed changeover from <b>batch</b> to continuous <b>operation,</b> concentration control (C-control), which has been well accepted in <b>batch</b> crystallisation <b>operation,</b> is further extended to facilitate the convenient design of the steady-state operating point of a continuous MSMPR crystalliser; an objective is to ensure that the start-up procedures and on-line control conditions fall within the design-space of the original <b>batch</b> <b>operation.</b> Both single-stage and cascaded two-stage MSMPR crystallisers were investigated and compared to the conventional <b>batch</b> <b>operation.</b> It was observed that despite the production of a smaller number-based mean crystal size, the proposed continuous MSMPR operation achieved higher production capacity with shorter mean residence time and comparable product yield to the <b>batch</b> <b>operation.</b> Lastly, the robustness of C-control strategy against uncertainties in crystallisation kinetics was also demonstrated for the proposed continuous MSMPR operation...|$|R
40|$|The {{possibility}} of preparation of ophthalmic drug delivery systems using compressed anti-solvent technology was evaluated. and RL 100 {{were used as}} drug carriers, acetazolamide was the model drug processed. Compressed anti-solvent experiments were carried out as a semi-continuous or a <b>batch</b> <b>operation</b> from a liquid solution of polymer(s) + solute dissolved in acetone. Both techniques allowed the recovery of composite particles, but the semi-continuous operation yielded smaller and less aggregated populations than the <b>batch</b> <b>operation.</b> The release behaviour of acetazolamide from the prepared microparticles was studied and most products exhibited a slower release than the single drug. Moreover, the release could be controlled to some extent by varying {{the ratio of the}} two Eudragit used in the formulation and by selecting one or the other anti-solvent technique. Simple diffusion models satisfactorily described the release profiles. Composites specifically produced by semi-continuous technique have a drug release rate controlled by a diffusion mechanism, whereas for composites produced by the <b>batch</b> <b>operation,</b> the polymer swelling also contributes to the overall transport mechanism...|$|R
50|$|In <b>batch</b> <b>operation,</b> {{production}} {{occurs in}} time-sequential steps in discrete batches. A batch of feedstock(s) is fed (or charged) into a process or unit, then the chemical process takes place, then the product(s) {{and any other}} outputs are removed. Such batch production may be repeated over again and again with new batches of feedstock. <b>Batch</b> <b>operation</b> is commonly used in smaller scale plants such as pharmaceutical or specialty chemicals production, for purposes of improved traceability as well as flexibility.Continuous plants are usually used to manufacture commodity or petrochemicals while batch plants are more common in speciality and fine chemical production as well as pharmaceutical active ingredient (API) manufacture.|$|R
50|$|Pigging has a {{significant}} {{role to play in}} reducing the environmental impact of <b>batch</b> <b>operations.</b> Traditionally, the only way that an operator of a batch process could ensure a product was completely cleared from a line was to flush the line with a cleaning agent such as water or a solvent, or even with the next product. The cleaning agent then had to be subjected to effluent treatment or solvent recovery. If a product was used to clear the line, it was necessary to downgrade or dump the contaminated portion of the product. All of these problems can now be eliminated due to the very precise interface produced by modern pigging systems.|$|E
50|$|VS/9 is a {{discontinued}} computer {{operating system}} {{available for the}} UNIVAC Series 90 mainframes (90/60, 90/70, and 90/80) during the late 1960s through 1980s. The 90/60 and 90/70 were repackaged Univac 9700 computers. After the RCA acquisition by Sperry, {{it was determined that}} the RCA TSOS operating system was far more advanced than the Univac counterpart, so the company opted to merge the Univac hardware with the RCA software and introduced the 90/70. The 90/60 was introduced shortly thereafter as a slower, less expensive 90/70. It wasn't until the introduction of the 90/80 that VS/9 finally had a hardware platform optimized {{to take full advantage of}} its capability to allow both interactive and <b>batch</b> <b>operations</b> on the same computer.|$|E
50|$|MIM {{decided to}} work with Netzsch, which was {{a pioneer in the}} fine {{grinding}} field, and still a leader. Test work was undertaken using one of Netzsch’s horizontal bead mills. It showed that such a mill could achieve the required grind size. However, the mills used in these industries were used on a small scale and were often <b>batch</b> <b>operations.</b> They used expensive grinding media that frequently needed to be removed, screened and replaced so that the mills would continue to operate properly. The traditional grinding medium consisted of silica-alumina-zirconium beads that, in those days, cost about US$25 per kilogram ("kg") and lasted for only a few hundred hours. Such a high-cost and short-lived grinding medium would be uneconomic in an industry processing hundreds of tonnes of ore an hour.|$|E
40|$|Operation {{scheduling}} and planning Process Control- Soft sensing / Inferential measurement- Optimal control (<b>batch</b> <b>operation)</b> - On-line optimization (continuous operation) - On-line control (Single loop / multivariable) Online performance monitoring Fault diagnosis / fault prognosis 1 / 18 / 2006 System Identification...|$|R
30|$|This paper {{studied the}} ability of using treated old {{newspaper}} (TNP) as synthetic adsorbent {{for the removal of}} Cd(II) from aqueous solutions by <b>batch</b> <b>operation.</b> Various operating parameters such as pH, initial metal ion concentration, adsorbent dosage, and equilibrium contact time have been studied.|$|R
40|$|Workflow {{is a key}} {{technology}} for eScience. It enables scientific tools to be composed and the resulting workflows to be managed. Workflow and most other computing tools typically distinguish <b>batch</b> from interactive <b>operation.</b> This distinction is ill-suited to scientific experimentation which typically starts interactively and then may progress to <b>batch</b> <b>operation</b> for larger or repeated runs of experiments. In this paper we present a scientific workflow model which unifies <b>batch</b> and interactive <b>operation.</b> This supports seamless experimentation by scientists. The model is implemented in a web based environment through the Microsoft Windows Workflow system and features a novel model for workflow components...|$|R
5000|$|The first Wang VS {{computer}} {{was introduced in}} 1977, {{about the same time}} as Digital Equipment Corporation's VAX, and continues to be in use 39 years later. Its instruction set was compatible with the IBM 360 series, but it did not run any IBM 360 system software. The VS operating system and all system software were built from the ground up to support interactive users as well as <b>batch</b> <b>operations.</b> The VS was aimed directly at the business data processing market in general, and IBM in particular. While many programming languages were available, the VS was typically programmed in COBOL. Other languages supported in the VS integrated development environment included Assembler, COBOL 74, COBOL 85, BASIC, Ada, RPG II, C, PL/I, FORTRAN, Glossary, MABASIC, SPEED II and Procedure (a scripting language). Pascal was also supported for I/O co-processor development. The Wang PACE (Professional Application Creation Environment) 4GL and database was used from the mid-1980s onward by customers and third party developers to build complex applications sometimes involving many thousands of screens, hundreds of distinct application modules, and serving many hundreds of users. Substantial vertical applications were developed for the Wang VS by third party software houses throughout the 1980s in COBOL, PACE, BASIC, PL/I and RPG II. The Wang OFFICE family of applications and Wang WP were both popular applications on the VS. Word Processing ran on the VS through services that emulated the OIS environment and downloaded the WP software as [...] "microcode" [...] (in Wang terminology) to VS workstations.|$|E
30|$|To {{determine}} {{the performance of}} a newly prepared adsorbent in adsorption systems, batch and column operations are the two types of laboratory experiments usually applied. <b>Batch</b> <b>operations</b> are usually performed to evaluate the ability of a material to adsorb as well as the adsorption capacity of the material (Sekhula et al. 2012). The data obtained from <b>batch</b> <b>operations</b> are, in most cases, limited to a laboratory scale and thus do not provide data which can be accurately applied in industrial and household systems. Column operations, on the other hand, are necessary to provide data which can be applied for industrial and household purposes (Maji et al. 2007; Ranjan et al. 2009).|$|E
30|$|Process {{intensification}} {{studies have}} already been well-established in continuous operation, especially using reactive distillation. In view {{of the importance of}} <b>batch</b> <b>operations</b> in the current market-driven scenario, the present study aims to explore different options of process intensification in batch mode for a particular class of reactions.|$|E
40|$|A {{facility}} {{which produces}} electrodes for spacecraft power supplies is described. The electrode assembly procedures are discussed. A number of design {{features in the}} production process are reported including a <b>batch</b> <b>operation</b> mode and an independent equipment module design approach for transfering the electrode materials from process tank to process tank...|$|R
40|$|Catalyzed Esterification of Propionic Anhydride with 2 -Butanol is {{commonly}} applied in semi batch reactors where the process variables undergo significant changes during {{the duration of}} the batch. In this semi <b>batch</b> <b>operation,</b> there is no steady state and thus no constant setpoints around which the key variables can be regulated...|$|R
40|$|Hospital wastewaters have a {{high load}} of {{pharmaceutical}} active compounds (PhACs). Fungal treatments could be appropriate for source treatment of such effluents but the transition to non-sterile conditions proved to be difficult due to competition with indigenous microorganisms, resulting in very short-duration operations. In this article, coagulation-flocculation and UV-radiation processes were studied as pretreatments to a fungal reactor treating non-sterile hospital wastewater in sequential <b>batch</b> <b>operation</b> and continuous operation modes. The influent was spiked with ibuprofen and ketoprofen, and both compounds were successfully degraded by over 80 %. UV pretreatment did not extent the fungal activity after coagulation-flocculation measured as laccase production and pellet integrity. Sequential <b>batch</b> <b>operation</b> did not reduce bacteria competition during fungal treatment. The best strategy was {{the addition of a}} coagulation-flocculation pretreatment to a continuous reactor, which led to an operation of 28 days without biomass renovation...|$|R
40|$|AbstractWe give a brief {{introduction}} to FORM, a symbolic programming language for massive <b>batch</b> <b>operations,</b> designed by Vermaseren. In particular, we stress various methods to efficiently use FORM under the UNIX operating system. Several scripts and examples are given, and {{suggestions on how}} to use the vim editor as development platform...|$|E
30|$|Our {{implementation}} provides such extensions for {{the selected}} ONDMs (Hibernate OGM, DataNucleus EclipseLink, Kundera and Apache Gora). Especially the implementations for the JPA-compliant ONDMs are highly similar. To avoid skewing {{the results and}} to ensure comparability of the results, we did not make use of any performance optimization strategies offered by the ONDMs, such as caching, native queries and <b>batch</b> <b>operations.</b>|$|E
40|$|Adaptive Model Predictive Control {{was applied}} on a semi-batch reactor and a batch {{distillation}} column. It was shown that AMPC {{is capable of}} regulating <b>batch</b> <b>operations</b> with product performances {{similar to that of}} NMPC and it requires a computational time significantly lower. Furthermore, the robustness of AMPC was tested introducing some process mismatch in the process model. Therefore, it was shown that some recursive tuning might be necessary to increase robustnes...|$|E
40|$|A novel {{threefold}} {{optimization algorithm}} is proposed to simultaneously solve the nonlinear model predictive control and dynamic real-time optimization for batch processes while optimizing the <b>batch</b> <b>operation</b> time. Object-oriented programming and parallel computing are exploited to make the algorithm effective to handle industrial cases. A well-known literature case is selected to validate the algorithm...|$|R
50|$|Opera 28 was {{released}} on March 10, 2015, based on Chromium 41. Starting with this version, bookmarks can be synchronized between Opera on the desktop, Opera Mobile on Android and Opera Mini on Android and iOS. Support for <b>batch</b> <b>operation</b> {{was added to the}} bookmark manager and bookmark suggestions now appear when typing in the address bar.|$|R
50|$|The {{river was}} a key aspect of colonial Braintree for its river herring. Later its strong flow was useful for early {{industry}} such as grist mills. It has remained a relatively clean river to date, with wildlife including birds, turtles, muskrats and fish, but recently has not been polluted by sediments from the Graziano Inc. concrete <b>batching</b> <b>operation.</b>|$|R
