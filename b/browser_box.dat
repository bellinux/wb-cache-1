0|10|Public
50|$|It {{was one of}} the first-known music {{stores to}} seal record albums in {{cellophane}} and put them in display racks for customers to browse. The racks were tabletop height trapezoid-shaped <b>browser</b> <b>boxes</b> (designed by Capitol Records' Frederick Rice) that allowed the covers they contained to be viewed like a card index without damaging the sleeves. The store was also the first to have demonstration booths for listening to records.|$|R
50|$|The {{web browser}} choice screen, {{also known as}} the web <b>browser</b> ballot <b>box,</b> was a screen {{displayed}} in Internet Explorer that offered ten to twelve browsers in a random order.|$|R
5000|$|In this case, one simply {{needs to}} {{determine}} the URL, and then download that, either by pasting it into one's web <b>browser</b> (location <b>box</b> or [...] "Open location..."), or via a specialized download manager.|$|R
5000|$|... #Caption: Stock <b>browser.</b> The search <b>box</b> is {{somewhat}} narrow, with instruction text cut off.|$|R
25|$|Opera TV is a <b>browser</b> for set-top <b>boxes</b> {{and smart}} TVs. It {{comes with an}} {{extension}} app store (containing HTML5 web apps) called Opera TV Store.|$|R
50|$|There {{are various}} types of video game consoles, {{including}} home video game consoles, handheld game consoles, microconsoles and dedicated consoles. Although Ralph Baer had built working game consoles by 1966, it was nearly a decade before the Pong game made them commonplace in regular people's living rooms. Through evolution over the 1990s and 2000s, game consoles have expanded to offer additional functions such as CD players, DVD players, Blu-ray disc players, web <b>browsers,</b> set-top <b>boxes</b> and more.|$|R
40|$|The {{transition}} from command-line interfaces to graphical interfaces {{has resulted in}} programs that are easier to learn and use, but harder to automate and reuse. Another transition is now underway, to HTML interfaces hosted by a web browser. To help users automate HTML interfaces, we propose the browser-shell, a web browser that integrates a command interpreter into the <b>browser's</b> Location <b>box.</b> The browser-shell's command language is designed for extracting and manipulating HTML and text, and commands can also invoke local programs. Command input is drawn from the current browser page, and command output is displayed as a new page. The browser-shell brings to web browsing many advantages of the Unix shell, including scripting web services and creating pipelines of web services and local programs. A browser-shell also allows legacy command-line programs to be wrapped with an HTML/CGI interface that is graphical but still scriptable, and offers a new shell interaction model, different from [...] ...|$|R
40|$|The {{very nature}} {{of the success of the}} Web lies in its ca-pability for linking resources. However, the {{unidirectional}} hyperlink structures of the Web today cannot meet the grow-ing needs for upcoming XML world. The official W 3 C so-lution for linking in XML, called XLink (XML Linking Lan-guage), includes several advanced linking capabilities, such as third-party links, multiple link set, and multidirectional links. In this paper, we propose a novel <b>Browser</b> cOm-patible XLink (<b>BOX)</b> application development framework which represents links via XLink and translates those links into hyperlinks of HTML. Follow the BOX framework, two XLink applications, multiple link set and multidirectional, are illustrated. ...|$|R
40|$|Genome <b>Browser</b> in a <b>Box</b> (GBiB) {{is a small}} {{virtual machine}} version of the popular University of California Santa Cruz (UCSC) Genome Browser that can be run on a researcher's own computer. Once GBiB is installed, a {{standard}} web browser is used to access the virtual server and add personal data files from the local hard disk. Annotation data are loaded on demand through the Internet from UCSC or can be downloaded to the local computer for faster access. Availability and Implementation: Software downloads and installation instructions are freely available for non-commercial use at [URL] GBiB requires the installation of open-source software VirtualBox, available for all major operating systems, and the UCSC Genome Browser, which is open source and free for non-commercial use. Commercial use of GBiB and the Genome Browser requires a license ([URL] genome@soe. ucsc. edu...|$|R

