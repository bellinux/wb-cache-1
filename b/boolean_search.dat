162|142|Public
5000|$|... a <b>boolean</b> <b>search</b> at Yahoo for Dino DiMuro, yields about 22,000 pages.|$|E
5000|$|Search term {{forwarders}} like , {{which runs}} searches on multiple external platforms {{derived from the}} original <b>boolean</b> <b>search</b> terms.|$|E
50|$|Added value {{services}} are also available, which allow <b>Boolean</b> <b>search,</b> alerts on new legislation regarding subjects {{defined by the}} user, etc.|$|E
50|$|Developed by Meyer Mike Kessler at MIT around 1964, {{some of the}} {{innovations}} in TIP included the use of wild cards, and <b>boolean</b> <b>searching.</b>|$|R
5000|$|Information on what file searching {{features}} the file managers support. RegExp include {{the possibilities of}} nested <b>Boolean</b> <b>searches,</b> thus implicitly all file managers supporting RegExp <b>search</b> support also <b>Boolean</b> searches.Column Definitions (D)Entry Notes (s) ...|$|R
50|$|Questia {{offers some}} {{information}} free of charge, including several public domain works, publication information, tables of contents, {{the first page}} of every chapter, <b>Boolean</b> <b>searches</b> of the contents of the library, and short bibliographies of available books and articles on some 6500 topics.|$|R
5000|$|Powerful query facilities, with boolean searches, wildcards, phrases, proximity, filter on {{file types}} and {{directory}} tree. GUI <b>Boolean</b> <b>search</b> build tool.|$|E
50|$|The USPTO {{web site}} {{provides}} free electronic copies of issued patents and patent applications as multiple-page TIFF (graphic) documents. The site also provides <b>Boolean</b> <b>search</b> and analysis tools.|$|E
50|$|The library has fully {{computerized}} {{its most}} actively used collection, which is searchable through OPAC. The OPAC allows search by author, title, subject, call number, keywords, and <b>Boolean</b> <b>search.</b> The Call Number indicates {{the location of}} the book on the self.|$|E
50|$|Recoll is {{a desktop}} search tool that {{provides}} efficient full text search (from single-word to arbitrarily complex <b>boolean</b> <b>searches)</b> {{in a friendly}} GUI, with minimum technical sophistication and few mandatory external dependencies. It runs under many Unix-like operating systems, and is mostly independent of the desktop environment.|$|R
50|$|Genome Viewer: The Genome Viewer (GViewer) tool {{provides}} users with complete genome views of genes, QTLs and mapped strains annotated to a function, biological process, cellular component, phenotype, disease, pathway, or chemical interaction. GViewer allows <b>Boolean</b> <b>searches</b> across multiple ontologies. Output is displayed against a karyotype {{of the rat}} genome.|$|R
5000|$|The eDonkey network {{supports}} searching {{of files}} {{by name and}} a number of secondary characteristics such as size, extension, bitrate, etc. The Lugdunum versions of eserver (eDonkey server software) support complex <b>boolean</b> <b>searches</b> like 'one AND two AND (three OR four) AND ("five four three" [...] OR [...] "two one") NOT seven'.|$|R
50|$|The list {{of items}} that meet the {{criteria}} specified by the query is typically sorted, or ranked. Ranking items by relevance (from highest to lowest) reduces {{the time required to}} find the desired information. Probabilistic search engines rank items based on measures of similarity (between each item and the query, typically on a scale of 1 to 0, 1 being most similar) and sometimes popularity or authority (see Bibliometrics) or use relevance feedback. <b>Boolean</b> <b>search</b> engines typically only return items which match exactly without regard to order, although the term <b>boolean</b> <b>search</b> engine may simply refer to the use of boolean-style syntax (the use of operators AND, OR, NOT, and XOR) in a probabilistic context.|$|E
50|$|In 2016, {{the company}} {{launched}} a new service for book publishers. The service delivers collections of books in their original print format, primarily into academic institutions using IP-authenticated, site-wide access, and offers research tools such as <b>Boolean</b> <b>Search</b> and static URLs for referencing.|$|E
50|$|In 2016, {{coverage}} of 11 additional patent offices was announced. Support for the USPTO and EPO <b>boolean</b> <b>search</b> syntax (proximity, wildcards, title/abstract/claims fields) was introduced, {{as well as}} visual graphs of inventors, assignees and CPCs by date, a thumbnail grid view of search results and downloadable result sets as CSV.|$|E
50|$|<b>Boolean</b> <b>searches,</b> where a user may specify {{terms such}} as use of {{specific}} words or judgments by a specific court, {{are the most common}} type of search available via legal information retrieval systems. They are widely implemented by services such as Westlaw, LexisNexis, and Findlaw. However, they overcome few of the problems discussed above.|$|R
40|$|Elementary-age {{children}} {{are among the}} largest user groups of computers and the Internet, so {{it is important to}} design searching and browsing tools that support them. However, many interfaces for children do not consider their skills and preferences. Children are capable of doing <b>Boolean</b> <b>searches,</b> but have difficulty with the sequential presentation of hierarchical structures used in man...|$|R
40|$|Abstract [...] Although <b>Boolean</b> <b>searching</b> {{has been}} the {{standard}} model for commercial information retrieval systems {{for the past three}} decades, natural language input and partial-match weighted retrieval have recently emerged from the laboratories to become a searching option in several well-known online systems. The purpose of this investigation is to compare the performance of one of these partial match options, LEXIS/NEXIS's Freestyle, with that of traditional Boolean retrieval. To create a context for the investigation, the definition of natural language and the natural language search engines currently available are discussed. Although the <b>Boolean</b> <b>searches</b> had better results more often than the Freestyle searches, neither mechanism demonstrated superior performance for every query. These results do not in any way prove the superiority of partial match techniques or exact match techniques, but they do suggest that different queries demand different techniques. Further study and analysis are needed to determine which elements of a query make it best suited fo...|$|R
50|$|TREX {{supports}} {{various kinds}} of text search, including exact search, <b>boolean</b> <b>search,</b> wildcard search, linguistic search (grammatical variants are normalized for the index search) and fuzzy search (input strings that differ by a few letters from an index term are normalized for the index search). Result sets are ranked using term frequency-inverse document frequency (tf-idf) weighting, and results can include snippets with the search terms highlighted.|$|E
50|$|WiseNut was a crawler-based {{search engine}} owned by Looksmart. It debuted as a beta in July 2001 and was officially {{launched}} in September 2001. Like Teoma, WiseNut automatically clustered search results, a technology called WiseGuide. Despite a good start, WiseNut {{never managed to}} become a major search engine. It lacked <b>boolean</b> <b>search</b> in the standard search and other advanced search features. Unlike other search engines, WiseNut did not Cache (computing)cache pages.|$|E
5000|$|The AULIMP can be {{accessed}} {{by the general public}} through the Muir S. Fairchild Research Information Center homepage or through the Defense Technical Information Center website. The index can be searched using both basic and advanced search interfaces with the option to search by author, title, journal title, keyword, and subject heading. <b>Boolean</b> <b>search</b> tools ("and", [...] "or", and [...] "not") are also available to further refine the search results.|$|E
40|$|Abstract. We {{present a}} pattern-based {{question}} answering system for Romanian {{that participated in}} the Romanian monolingual task of the QA@CLEF 2007 track. We aim to prove that working with a good <b>Boolean</b> <b>searching</b> engine and using question type driven answer extraction heuristics and structural matching between the linkage representations of the question and candidate sentences, one can achieve acceptable results (30 % overall accuracy) ...|$|R
5000|$|Although {{not widely}} advertised, Spotlight can perform <b>boolean</b> <b>searches.</b> By default if one {{includes}} more than one word, Spotlight performs the search as if an [...] "AND" [...] was included in between words. If one places a '|' between words, Spotlight performs an OR query. Placing a '-' before a word tells Spotlight to search for results that do not include that word (a NOT query).|$|R
5000|$|Nota Bene calls Orbis a textbase. It is a free-form text-retrieval system {{accessible}} {{from within}} Nota Bene. Its {{purpose is to}} retrieve information from text using simple or complex <b>Boolean</b> <b>searches.</b> The retrieved information can be viewed, saved, or incorporated into existing or new documents. It can index PDFs; files with the extensions [...]docx, [...]doc, [...]rtf and [...]html; plain text; and all files written in NB.|$|R
5000|$|Entelo {{was founded}} in May 2011 and {{launched}} in October 2012 with an undisclosed amount of seed funding. Initially, Entelo offered two products: Search, which allowed recruiters to browse over 300 million social profiles using standard <b>Boolean</b> <b>search,</b> and Sonar, a predictive algorithm used to determine which candidates {{were most likely to}} leave their current job. In June 2013, Entelo announced $3.5 million in Series A funding, led by Battery Ventures and Menlo Ventures.|$|E
50|$|WhizFolders allows {{to manage}} your {{information}} in two-panes--the left pane being a hierarchical list of note titles and the right-pane contains the detail or text of the selected note in the list. The notes can be merged when copying to the clipboard, or when exporting or printing. A <b>boolean</b> <b>search</b> for information is available. Keyword tags can also be assigned to the notes to find them even when the actual tag is absent in their text.|$|E
5000|$|Early {{search engines}} looked for {{documents}} containing the words entered {{by the user}} into the search box [...] These are known as keyword search engines. <b>Boolean</b> <b>search</b> engines add a degree of sophistication by allowing the user to specify additional requirements. For example, [...] "Tiger NEAR Woods AND (golf OR golfing) NOT Volkswagen" [...] uses the operators [...] "NEAR", [...] "AND", [...] "OR" [...] and [...] "NOT" [...] to specify that these words must follow certain requirements. A phrase search is simpler to use, but requires that the exact phrase specified appear in the results.|$|E
5000|$|Computer-assisted legal {{research}} (CALR) [...] or computer-based legal {{research is}} {{a mode of}} legal research that uses databases of court opinions, statutes, court documents, and secondary material. Electronic databases make large bodies of case law easily available. Databases also have additional benefits, such as <b>Boolean</b> <b>searches,</b> evaluating case authority, organizing cases by topic, and providing links to cited material. Databases are available through paid subscription or for free.|$|R
50|$|The digital {{version is}} {{available}} by subscription (for libraries or individuals) and perpetual access (libraries). In {{addition to the}} Basic Search, which yields both headwords and variant forms, an Advanced <b>Search</b> function allows <b>Boolean</b> <b>searches</b> of full text, headwords, parts of speech, variant forms, definitions, etymologies, quotations, and regional or social labels. Quotations link directly to specific entries in the bibliography, where users can link to every other quotation from that particular source.|$|R
5000|$|... eDiscovery - Concept-based search {{technologies}} {{are increasingly being}} used for Electronic Document Discovery (EDD or eDiscovery) to help enterprises prepare for litigation. In eDiscovery, the ability to cluster, categorize, and search large collections of unstructured text on a conceptual basis is much more efficient than traditional linear review techniques. Concept-based searching is becoming accepted as a reliable and efficient search method that {{is more likely to}} produce relevant results than keyword or <b>Boolean</b> <b>searches.</b>|$|R
50|$|In a legal setting, it is {{frequently}} important to retrieve all {{information related to}} a specific query. However, commonly used <b>boolean</b> <b>search</b> methods (exact matches of specified terms) on full text legal documents {{have been shown to}} have an average recall rate as low as 20 percent, meaning that only 1 in 5 relevant documents are actually retrieved. In that case, researchers believed that they had retrieved over 75% of relevant documents. This may result in failing to retrieve important or precedential cases. In some jurisdictions this may be especially problematic, as legal professionals are ethically obligated to be reasonably informed as to relevant legal documents.|$|E
50|$|Dubbed DPLL(T), this {{architecture}} {{gives the}} responsibility of Boolean reasoning to the DPLL-based SAT solver which, in turn, interacts with a solver for theory T through a well-defined interface. The theory solver only needs to worry about checking the feasibility of conjunctions of theory predicates passed on to it from the SAT solver as it explores the <b>Boolean</b> <b>search</b> space of the formula. For this integration to work well, however, the theory solver {{must be able to}} participate in propagation and conflict analysis, i.e., it must be able to infer new facts from already established facts, as well as to supply succinct explanations of infeasibility when theory conflicts arise. In other words, the theory solver must be incremental and backtrackable.|$|E
50|$|RETAIN/370 ran special {{applications}} designed for technical support center use. Its most powerful feature was a full-text search engine, enabling most text {{documents in the}} system to be retrieved by using <b>boolean</b> <b>search</b> requests, similar in concept to full-text search engines in use today on the Internet, such as Google or AltaVista, although limited only to searching for individual words, or combinations of words, without reference to word-adjacency. RETAIN/370 was the first IBM system deployed {{on a large scale}} that had such a capability. The search engine component of RETAIN is called IRIS, for Interpretive Retrieval Information System (not to be confused with other non-IBM software systems of that name... IBM never sold this search engine as a product, so there was no trademark issue).|$|E
40|$|Abstract. This paper {{presents}} a pattern-based question answering {{system for the}} Romanian-Romanian task of the Multiple Language Question Answering (QA@CLEF) track of the CLEF 2007 campaign. We show that working with a good <b>Boolean</b> <b>searching</b> engine and using question type driven answer extraction heuristics, one can achieve acceptable results (30 % overall accuracy) using simple, pattern-based techniques. Furthermore, we will present an answer extraction algorithm that aims at finding the correct answer irrespective of the question and answer type...|$|R
50|$|KPhotoAlbum (previously {{known as}} KimDaBa) {{is an image}} viewer and {{organizer}} for Unix-like systems created and maintained by Jesper K. Pedersen. The core philosophy behind its creation was {{that it should be}} easy for users to annotate images and videos taken with a digital camera. Users can search for images based on those annotations (also called categories) and use the results in a variety of ways. Features include slideshows, annotation, KIPI plugin support for manipulating images, and <b>Boolean</b> <b>searches.</b>|$|R
40|$|A {{series of}} {{information}} retrieval experiments was earned {{out with a}} computer installed in a medical practice setting for relatively inexperienced physician end-users. Using a commercial MEDLINE product based on the vector space model, these physicians searched just as effectively as more experienced searchers using <b>Boolean</b> <b>searching.</b> The results of this experiment were subsequently used to create anew large medical test collection, which was used in experiments with the SMART ~trieval system to obtain baseline performance data as well as compare SMART with the other searchers. ...|$|R
