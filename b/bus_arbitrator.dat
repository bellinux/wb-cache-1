5|1|Public
5000|$|Bus mastery {{is awarded}} {{based on an}} I/O card's topological {{proximity}} to the [...] <b>bus</b> <b>arbitrator</b> [...] (at the logical front of the bus); closer cards are granted priority over further cards.|$|E
40|$|The WorldFIP {{protocol}} {{is based}} on a centralised medium access control mechanism, where a specific station, the <b>bus</b> <b>arbitrator</b> (BA), controls all data transfers between different stations. At configuration time, the BA is given a list of process variables to scan along with their corresponding periods. This piece of information is known as the <b>bus</b> <b>arbitrator</b> table. In this paper we provide a comprehensive study on how to configure a WorldFIP <b>bus</b> <b>arbitrator</b> table (BAT), in order to guarantee that periodic data transfers are performed before their deadlines. The main contributions of this paper are the provision of both an algorithmic approach for setting the WorldFIP BAT (using RM and EDF) and a feasibility test to check a priori the timeliness requirements of the periodic data transfers...|$|E
40|$|It is {{possible}} to extend a microprocessor from a single core to a multiple cores by replicating the single core processor, and interfacing them to main memory bus via a <b>bus</b> <b>arbitrator.</b> With a multi-core processor, the possibilities for parallel programs are apparent, but the programmer must overcome those obstacles with lock based programming. Transactional Memory would provide a means for programmers to handle highly concurrent programming in a more forgiving environment. This thesis surveys these topics and discusses possible implementations {{in terms of the}} HERA architecture...|$|E
50|$|SMDS was {{specified}} by Bellcore, and {{was based on}} the IEEE 802.6 metropolitan area network (MAN) standard, as implemented by Bellcore, and used cell relay transport, Distributed Queue Dual <b>Bus</b> layer-2 switching <b>arbitrator,</b> and standard SONET or G.703 as access interfaces.|$|R
3000|$|..., and Motion Compensation (MC) for decoding. An IP memory {{interface}} {{is provided}} by the architecture to achieve the integration. All IP modules are connected to the IP memory interface, which provides accelerators a straight way to exchange data between the host and memory spaces. Interrupt signals can be generated by accelerators when demanded. Moreover, to control the concurrent performance of accelerators, an IP <b>bus</b> <b>arbitrator</b> is designed and integrated in the IP memory interface, for the interface controller to allocate appropriate memory operation time for each IP module, and avoid the memory access conflicts possibly caused by heterogeneous IP operations.|$|E
40|$|International Telemetering Conference Proceedings / October 26 - 29, 1987 / Town and Country Hotel, San Diego, CaliforniaThe growing {{complexity}} of space vehicle, aircraft, and missile test data analysis requiring larger data volumes and higher data rates, {{in conjunction with}} real-time analysis and display, calls for a new approach in telemetry system bus architecture. To meet these needs AMS developed the Mercury Bus, and a high-speed ring architecture capable of linking up to 7 Mercury Busses together without reducing targeted bus bandwidth of 6 MWPS. The Mercury Bus is a 48 bit parallel bus consisting of 32 data bits, and 16 "token" or address bits. It supports setup or real-time transfers between multiple master/slave modules within a chassis. The ring architecture consists of <b>Bus</b> <b>Arbitrator,</b> Repeater, Terminator Modules (BAT's) connected together by circular unidirectional read and write pipelines. The BAT arbitrates bus mastership, repeat's intra-chassis transfers and provides signal termination for the Mercury Bus. The pipelines relay bus transfers to successive chassis within the ring. This architecture currently supports up to 7 chassis or 112 modules per system. The ring architecture has met and exceeds initial design criteria with transfer rates measured in excess of 8 million words-per-second. It performs sustained high-rate data transfers while maintaining the data integrity and reliability associated with real-time telemetry. This architecture is well suited for systems with multiple input streams and high data processing requirements. Overall performance is attributed to the low noise characteristics of a controlled impedance backplane; implementation of module front end standardized bus interfaces; and the <b>Bus</b> <b>Arbitrator,</b> Repeater, Terminator module...|$|E

