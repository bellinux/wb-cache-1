0|130|Public
5000|$|In 2001, {{the process}} {{continued}} with {{the adoption of}} a non-legally <b>binding</b> <b>program</b> of action at the United Nations Conference on the Illicit Trade in Small Arms. This program was formally called the [...] "Programme of Action to Prevent, Combat and Eradicate the Illicit Trade in Small Arms and Light Weapons in All Its Aspects" [...] (PoA).|$|R
25|$|Monobjc – {{a set of}} <b>bindings</b> for macOS <b>programming.</b>|$|R
5000|$|ISO/IEC JTC 1/SC 22 also {{produces}} common language-independent specifications to facilitate standardized <b>bindings</b> between <b>programming</b> languages and system services, {{as well as}} greater interaction between programs written in different languages.|$|R
5000|$|Community-developed <b>bindings</b> {{for other}} <b>programming</b> {{languages}} are provided as plugins: ...|$|R
25|$|MonoMac – newer <b>bindings</b> for macOS <b>programming,</b> {{based on}} the MonoTouch API design.|$|R
25|$|While KDE Frameworks {{is mainly}} written in C++, it {{includes}} <b>bindings</b> for other <b>programming</b> languages.|$|R
50|$|Some Trilinos {{packages}} have <b>bindings</b> {{for other}} <b>programming</b> languages. These include Python, C, Fortran, and Matlab.|$|R
40|$|In {{object-oriented}} programming, {{software is}} mainly constructed by composition and specialization of types. Due to dynamic <b>binding,</b> <b>program</b> correctness may be invalidated by adding new types to existing programs. Essentially, two problems can occur: 1. Adding a new subtype S may violate the specification of its supertype T; thus components using T may be invalidated. 2. In certain cases, type invariants can be violated by adding new types to existing components. This paper sketches solutions to these problems. It claims that behavioral subtyping {{is a solution}} to the first problem. As a possible solution to the second problem, it proposes techniques to make interface specifications more expressive, to restrict the form of invariants by semantical constraints (similar to behavioral subtyping), and to refine existing module concepts...|$|R
40|$|The {{purpose of}} the library binding {{industry}} {{is to help the}} librarian maintain a valuable inventory of printed material for maximum use now and in the future. Standardization of approved materials and methods in the industry have encouraged manufacturers to develop materials and machinery for its use, and these, in turn, have enabled it to meet the increasing and changing needs of libraries with a uniform product of high quality and an economical and constantly improving service. The librarian, as custodian of the library's materials, must be the originator of the <b>binding</b> <b>program</b> and {{is the only one who}} knows the end use of each item, which is usually the factor that determines the selection of the most suitable binding...|$|R
5000|$|While KDE Frameworks {{is mainly}} written in C++, it {{includes}} <b>bindings</b> for other <b>programming</b> languages.Bindings use the following generic technologies: ...|$|R
50|$|There is an API, with <b>bindings</b> for {{multiple}} <b>programming</b> languages including Java, Perl, Python, or PHP, available to program the Nabaztag.|$|R
40|$|MODERNRESEARCH LIBRARIES {{are what}} they are today because of the {{programs}} of conservation and preservation which librarians have followed through the past centuries. Although {{much remains to be}} done in this area of librarianship, as the following papers show, it would be unfair to describe librarians as a group which has been delinquent in its stewardship. Most research librarians have recognized the importance of adequate <b>binding</b> <b>programs,</b> of the need of special care of non-book materials, and of the applications and potential uses of microreproductions and other photographic media in the general problem of preservation. Conservation and preservation, however, are terms which are not to be restricted to the curatorship of research collections and rare materials, either in public or university libraries. They represent areas of immediate interest to school and children’s librarians, who must get as many uses as possible out of current publications in order to mee...|$|R
40|$|The optical {{properties}} and electronic structures of one mono-substituted polyacetylene and two di-substituted polyacetylenes have been investigated. Each of the substituted polyacetylenes bears a carbazole {{unit in the}} side chain. In spite {{of the differences in}} their molecular structures, the dilute solutions (∼ 1 × 10 − 6 M) of these substituted polyacetylenes exhibit the same absorptions and the same deep-blue emissions (∼ 360 nm). Interestingly, the absorption and emission spectra of these substituted polyacetylenes {{are similar to those of}} the small molecule carbazole. As the concentration of the substituted polyacetylenes increases to about 1 × 10 − 3 M, we have detected intense blue emissions at about 475 nm. Using Hückel tight <b>binding</b> <b>programs,</b> we have calculated the electronic structures of the carbazole-containing polyacetylenes. Our results indicate that the absorption, the deep-blue emission (∼ 360 nm) and the intense blue emission (∼ 475 nm) originate from the carbazole chromophores in the side chain...|$|R
50|$|Currently, it {{is popular}} {{to use the}} term late <b>binding</b> in Java <b>programming</b> as a synonym for dynamic {{dispatch}}. Specifically, this refers to Java's single dispatch mechanism used with virtual methods.|$|R
50|$|In {{computer}} science, a dispatch {{table is}} a table of pointers to functions or methods. Use of such a {{table is a}} common technique when implementing late <b>binding</b> in object-oriented <b>programming.</b>|$|R
5000|$|In 2003, {{graphical}} {{user interface}} was redesigned and re-developed for Qt framework using PyQt Python <b>bindings.</b> The visual <b>programming</b> framework was defined, and development of widgets (graphical components of data analysis pipeline) has begun.|$|R
50|$|In computing, a <b>binding</b> from a <b>programming</b> {{language}} to a library or operating system service is an {{application programming interface}} (API) providing glue code to use that library or service in a given programming language.|$|R
5|$|Other {{immunotherapy}} treatments {{interfere with}} the <b>binding</b> of <b>programmed</b> cell death 1 (PD-1) protein with its ligand PD-1 ligand 1 (PD-L1). Signaling through PD-1 inactivates T cells. Some cancer cells appear to exploit this by expressing PD-L1 in order to switch off T cells that might recognise them as a threat. Monoclonal antibodies targeting both PD-1 and PD-L1, such as pembrolizumab and nivolumab are currently in clinical trials for treatment for lung cancer.|$|R
50|$|The VIX (Virtual Infrastructure eXtension) API allows {{automated}} or scripted {{management of}} a computer virtualized using either VMware's vSphere, Workstation, Player, or Fusion products. VIX provides <b>bindings</b> for the <b>programming</b> languages C, Perl, Visual Basic, VBscript and C#.|$|R
25|$|The libgit2 {{implementation}} of Git is an ANSI C software library {{with no other}} dependencies, which can be built on multiple platforms including Windows, Linux, macOS, and BSD. It has <b>bindings</b> for many <b>programming</b> languages, including Ruby, Python, and Haskell.|$|R
5000|$|Cairo: A free {{software}} library {{used to provide}} a vector graphics-based, device-independent API. It {{is designed to provide}} primitives for 2-dimensional drawing across a number of different backends. Cairo is written in C and has <b>bindings</b> for many <b>programming</b> languages.|$|R
40|$|Language Bindings to XML By {{preserving}} application semantics, XML <b>bindings</b> improve <b>program</b> specification, verification, and optimization. SNAQue {{makes it}} all simple and flexible. XML’s significance extends beyond the purpose it was originally intended to serve (document processing over the Web). As a standard and widely supported format for arbitrary data, XML delivers to any heterogeneous, distributed computer system the common lingo for data exchange — something only closed or relatively closed systems could previously assume and enforce. I...|$|R
50|$|Creators of XCB {{have invented}} a {{specialized}} interface description language to model X11 protocol in language-neutral way and facilitate generation of <b>bindings</b> to other <b>programming</b> languages. libxcb itself is implemented as a code generator {{and a tiny}} C stub of utility functions.|$|R
50|$|Each Eval {{message has}} {{the address of}} an Actor that acts as an {{environment}} with the <b>bindings</b> of <b>program</b> identifiers. Environment Actors are immutable, i.e., they do not change.When Requestcustomer is received by an Actor Environment, a new environment Actor is created such thatwhen the new environment Actor receivesRequestcustomer’ then if identifier {{is the same as}} identifier’ send customer’ Returnedvalue, else send EnvironmentRequestcustomer’.The above builds on an Actor EmptyEnvironment whichwhen it receives Requestcustomer, sends customer Thrown.When it receives a Bind request EmptyEnvironment acts like Environment above.|$|R
40|$|Ground Resource Operations Program {{executive}} (GROPE) is control <b>program</b> for <b>binding</b> {{system of}} <b>programs</b> into single, easily operated entity. It relieves user from complexity arising from decomposition of large application into number of interacting program units. System simplifies job control, data management, and recordkeeping for interacting programs...|$|R
2500|$|Apple {{intended}} Swift {{to support}} many core concepts associated with Objective-C, notably dynamic dispatch, widespread late <b>binding,</b> extensible <b>programming</b> and similar features, but [...] "safer" [...] (easier to catch software bugs); Swift has features addressing some common programming errors like null pointers and provides syntactic sugar to help avoid the pyramid of doom. Swift supports {{the concept of}} protocol extensibility, an extensibility system {{that can be applied}} to types, structs and classes, which Apple promotes as a real change in programming paradigms they term [...] "protocol-oriented programming" [...] (similar to traits).|$|R
50|$|Gecode (for Generic Constraint Development Environment) is a {{software}} library for solving Constraint satisfaction problems. It is programmed in C++ and distributed as free software under the permissive MIT license. Gecode has <b>bindings</b> for several <b>programming</b> languages such as Prolog, Python and Ruby, and an interface to the AMPL modeling language.|$|R
50|$|In May 2009 the SBML team {{conducted}} a community survey for requests of potential further software development. It turned out that, {{even though the}} library libSBML provides a generated <b>binding</b> for the <b>programming</b> language Java™, its internal C code {{makes it difficult to}} implement platform independent or Web Start applications.|$|R
5000|$|Extensibility - a {{text editor}} {{intended}} for use by programmers must provide some plugin mechanism, or be scriptable, so a programmer can customize the editor with features needed to manage individual software projects, customize functionality or key <b>bindings</b> for specific <b>programming</b> languages or version control systems, or conform to specific coding styles.|$|R
40|$|While Grid {{technologies}} are maturing rapidly, there still remains {{a shortage of}} real Grid applications. One important reason {{is the lack of}} simple and high-level application programming interfaces to the Grid, bridging the gap between existing Grid middleware and application-level needs. The Grid Application Toolkit (GAT), as currently developed by the EC-funded project GridLab [1], provides a unified, simple programming interface to the Grid infrastructure, tailored to the needs of Grid application programmers and users. In this paper, we outline a motivating use case, present the GAT API functionality, and sketch existing <b>bindings</b> to <b>programming</b> languages and their implementations. ...|$|R
50|$|The {{original}} intent of SDAI and its <b>bindings</b> to <b>programming</b> languages was to achieve portability of software applications from one implementation to another. This was soon abandoned {{because there were}} only a few commercial implementations and they differed significantly in their detailed APIs. Today the term SDAI is sometimes used for all kinds of APIs supporting STEP, even if they only partially follow the strict functionality as defined in ISO 10303-22 and its implementation methods, or not at all. Part 35 of STEP (Abstract test methods for SDAI implementations) provides a formal way how to prove the conformance of an implementation with SDAI.|$|R
5000|$|Swift is {{intended}} to be more resilient to erroneous code ("safer") than Objective-C, and more concise. However it supports many core concepts that are associated with Objective-C; notably dynamic dispatch, widespread late <b>binding,</b> extensible <b>programming</b> and similar features. For safety, Swift helps address common programming errors like null pointers, and provides syntactic sugar to avoid the pyramid of doom that can otherwise result. More fundamentally, Swift adds the concept of protocol extensibility, an extensibility system that can be applied to types, structs and classes. Apple promotes this as a real change in programming paradigms they term [...] "protocol-oriented programming".|$|R
40|$|Static binding is the {{standard}} <b>binding</b> discipline in <b>programming</b> languages. However, the demands of developing distributed, highly dynamic applications have led to an increasing interest in dynamic programming languages and mechanisms. Typically, this needs are satisfied by hoc mechanisms that lack clean semantics. In this paper, we adopt a foundational approach, developing a core dynami...|$|R
50|$|SQLite is {{a popular}} choice as {{embedded}} database software for local/client storage in application software such as web browsers. It {{is arguably the most}} widely deployed database engine, as it is used today by several widespread browsers, operating systems, and embedded systems (such as mobile phones), among others. SQLite has <b>bindings</b> to many <b>programming</b> languages.|$|R
30|$|Iris was {{designed}} with compatibility in mind. For input compatibility, iris’s plug-in architecture allows {{to interface with}} arbitrary data formats. Writing a plug-in requires writing some Python code: users can then use the full power of the scientific Python stack to introduce extra processing in iris’s data reduction pipeline. In terms of output compatibility, iris datasets can be inspected and manipulated by a large variety of programs, thanks to HDF 5 ’s official and unofficial <b>bindings</b> to <b>programming</b> languages such as C/C++, Fortran 77 /Fortran 90, LabVIEW, MATLAB, Mathematica, R, Julia, Python, and many more. The HDF 5 layout is described in the online documentation.|$|R
40|$|Occam is {{designed}} for concurrent programming on a network of transputers. AIlocation and partitioning {{of the program is}} specified within the source code, <b>binding</b> the <b>program</b> to a specific network. An altemative approach is proposed which completely separates the source code from hardware considerations. Static allocation is performed as a separate phase and should, ideally, be automatic but at present is manual. Complete hardware abstraction requires that non-local, shared communication be provided for, introducing an efficiency overhead which can be minimised by the allocation. The proposal was implemented on a network of IBM PCs, modelled on a transputer network, and implementation issues are discusse...|$|R
