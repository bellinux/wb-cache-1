42|65|Public
2500|$|A {{report by}} Reuters {{described}} HealthCare.gov {{itself as the}} [...] "key" [...] to the reform measure. Development of the website's interface {{as well as its}} supporting <b>back-end</b> <b>services,</b> {{to make sure that the}} website could work to help people compare between health insurance plans, were both outsourced to private companies. The front-end of the website was developed by the startup [...] The back-end work was contracted out to CGI Federal Inc., a subsidiary of the Canadian IT multinational CGI Group, which subcontracted the work to other companies as is common on large government contracts. CGI was also responsible for building some of the state-level healthcare exchanges, with varying levels of success (some did not open on schedule).|$|E
50|$|Combined {{with the}} Iris Service Delivery Platform, mirada´s <b>back-end</b> <b>services,</b> {{operators}} can {{get access to}} audience measurement, advanced search features and personalized recommendations.|$|E
50|$|ZK SpreadsheetAn online {{collaboration}} {{for multiple}} users that allows user to control or configure Web spreadsheet with pure Java and seamlessly integrate Java EE and other <b>back-end</b> <b>services.</b>|$|E
3000|$|Calculating a {{corresponding}} polling weight value for each <b>back-end</b> <b>service</b> node {{according to the}} prediction results by using HHGA-RBF model; [...]...|$|R
5000|$|This <b>back-end</b> <b>service</b> allowed Streamium {{devices to}} connect to [...] "any number" [...] of web based content {{delivery}} <b>services.</b> The <b>back-end</b> would thereby function as a [...] "switch-board" [...] connecting the content delivery services with individual boxes. Moreover, the <b>back-end</b> <b>service</b> would allow Philips to build out an [...] "after-sales" [...] relationship with their customers through the web-based UI-extension and would stimulate some early form of web-based social networking with the streamium cafe web site that {{was set up by}} Mark Tuttle.|$|R
5000|$|Whereas the FW-i1000 {{used the}} iM-networks service (then known as [...] "SonicBox"), the {{end-to-end}} [...] "Streamium" [...] system designed by Daniel Meirsman, included a Philips owned <b>back-end</b> <b>service</b> (the [...] "ECD-interface").|$|R
5000|$|... ''''''Products'''''' - mirada {{offers a}} multi-screen {{approach}} to digital TV platforms, with {{a suite of}} end-to-end modular products, up and running on STBs, PC and companion devices such as mobiles and tablets, all with original EPG designs. mirada provides multiple device support (across PC, set top box and companion devices), cross-platform integration, user-interface design, database support and <b>back-end</b> <b>services.</b>|$|E
5000|$|AWS Lambda was {{originally}} {{designed for use}} cases such as image upload, responding to website clicks or reacting to sensor readings from an IoT connected device. AWS Lambda {{can also be used}} to automatically provision <b>back-end</b> <b>services</b> triggered by custom HTTP requests, and [...] "spin down" [...] such services when not in use, to save resources. These custom HTTP requests are configured in AWS API Gateway, which can also handle authentication and authorization in conjunction with AWS Cognito.|$|E
50|$|The use of {{the first}} two enable the {{development}} of 'archetypes' and 'templates', which are formal models of clinical and related content, and constitute a layer of de facto standards of their own, far more numerous than the base specifications on which they are built. The query language enables queries to be built based on the archetypes, rather than physical database schemata, thus decoupling queries from physical persistence details. The service models define access to key <b>back-end</b> <b>services,</b> including the EHR Service and Demographics Service, while a growing set of lightweight REST-based APIs based on archetype paths are used for application access.|$|E
50|$|Foundational service {{integration}} and deployment control features that provide multiple device and network connectivity options; application and subscription management; subscriber billing & payment; IT system integration, service and policy control; operational business intelligence; over-the-air (OTA) updates; and <b>back-end</b> <b>service</b> management portal.|$|R
50|$|Infotainment content {{features}} that provide Apple and Android smartphone integration; global and regional content provider and app integration; driver distraction mitigation; content deployment, policy, and on-going management via Airbiquity’s <b>back-end</b> <b>service</b> portal; and driver smartphone apps for both OEM line-fit production and aftermarket.|$|R
50|$|CAS allows multi-tier {{authentication}} via proxy address. A cooperating <b>back-end</b> <b>service,</b> like {{a database}} or mail server, {{can participate in}} CAS, validating the authenticity of users via information it receives from web applications. Thus, a webmail client and a webmail server can all implement CAS.|$|R
5000|$|In July 2013, Myerson was {{promoted}} to {{executive vice president of}} Microsoft's new operating systems engineering division, which controlled Microsoft Windows as well as Windows Phone, Xbox system software, and various services. The Verge called Myerson [...] "the most important man at Microsoft" [...] after the company's executive reorganization. [...] In 2015, Microsoft merged their Devices Group into the Operating Systems Group to form a new Windows and Device Group which is led by Myerson and which is responsible for Windows operating systems, Xbox system, Windows <b>back-end</b> <b>services</b> and the Surface and HoloLens lineup of hardware products.|$|E
50|$|The Apcera Cloud Platform is {{available}} in two forms: a Community Edition and an Enterprise Edition. The Community Edition is free {{and can be used}} for deployment to a single infrastructure. The Enterprise Edition has the functionality to deploy workloads to multiple infrastructures. The Apcera Cloud Platform allows the user to create a set of rules to control available resources at a container level. In addition, it allows a user to connect to <b>back-end</b> <b>services</b> outside of the platform while maintaining governance. It allows users to build a workload once and then move it around in its container without re-writing the code — it only needs the connections made between containers.|$|E
5000|$|A {{report by}} Reuters {{described}} HealthCare.gov {{itself as the}} [...] "key" [...] to the reform measure. Development of the website's interface {{as well as its}} supporting <b>back-end</b> <b>services,</b> {{to make sure that the}} website could work to help people compare between health insurance plans, were both outsourced to private companies. The front-end of the website was developed by the startup Development Seed. The back-end work was contracted out to CGI Federal Inc., a subsidiary of the Canadian IT multinational CGI Group, which subcontracted the work to other companies as is common on large government contracts. CGI was also responsible for building some of the state-level healthcare exchanges, with varying levels of success (some did not open on schedule).|$|E
5000|$|SIMS uses a {{client-server}} architecture; the <b>back-end</b> <b>service</b> {{is based}} around Microsoft SQL Server with some business logic handled by a custom [...]NET Framework module. The client application is also built with [...]NET, and handles {{almost all of}} the data manipulation and reporting workload.|$|R
50|$|The CAS {{protocol}} involves {{at least}} three parties: a client web browser, the web application requesting authentication, and the CAS server. It may also involve a <b>back-end</b> <b>service,</b> such as a database server, {{that does not have}} its own HTTP interface but communicates with a web application.|$|R
50|$|Service {{management}} {{features that}} orchestrate and automate over-the-air (OTA) vehicle software and data management; software and firmware updates; data collection, aggregation, and distribution; data and privacy settings; network connectivity and transmission optimization; IT system and software catalog integration; consumer notifications and prompts; and <b>back-end</b> <b>service</b> management portal.|$|R
50|$|The Hiptop {{software}} {{was designed by}} the company Danger, Inc. which was located in Palo Alto, California. The original Hiptop hardware was designed by Danger and manufactured by Flextronics. The Hiptop 2, 3, Sidekick iD, Sidekick 2008 and Sidekick LX (2009) are all manufactured by Sharp Corporation in Japan and designed, respectively, by Danger and then Danger in partnership with Sharp. All versions of the Hiptop were developed in close partnership with T-Mobile, although carrier-specific features were either removed or added for each carrier, such as the addition of MMS for SunCom and Telstra hiptop 2 users, where the feature was not available on T-Mobile USA devices until the Sidekick LX in 2007. Danger provided the Hiptop OS software and <b>back-end</b> <b>services</b> for the device. This included a catalog of downloadable software applications, email hosting, instant messaging, web proxies and a cloud service for the entire personal data on the device.|$|E
3000|$|Objective 2 : provide {{orchestration}} for device {{resources and}} other <b>back-end</b> <b>services</b> among different organizations for service-layer integration according to BPM solution; [...]...|$|E
30|$|WTIF {{saves the}} {{integration}} and maintenance cost for IoT SMEs. Development of intelligent applications is eased by web service technology, {{and the service}} composition middleware facilitates the mashup of physical resources and other <b>back-end</b> <b>services.</b> IoT manufacturer and IoT service providers need only focus on the business process modeling.|$|E
50|$|Started in 2007, Myca {{developed}} a practice management {{system that allows}} physicians to perform remote consultations by using videoconferencing, instant messaging, phone, mobile and secure email. With this platform patients can schedule either home, clinic or online appointments with a doctor. The Myca platform provides a full billing <b>back-end</b> <b>service</b> that allows doctors to be reimbursed for their remote visits.|$|R
5000|$|The early Internet {{audio and}} Streamium devices had both {{constant}} broadband Internet connectivity and a <b>back-end</b> <b>service</b> provided by Philips to aggregate services for its users. In addition, a UI extension was offered (my.philips) that allowed consumers {{to manage their}} devices, external service subscriptions, favorites, {{as well as to}} add their own streams. The PC-based UI extension was part of the lean-forward/lean-backward approach to this potentially complicated product range: ...|$|R
5000|$|Developers {{claim that}} this {{framework}} [...] "replaces <b>back-end</b> web <b>services</b> like old-school databases, file storage and user authentication systems." ...|$|R
40|$|Design Space Exploration is {{the task}} of {{identifying}} optimal implementation architectures for an application. On the front-end, it involves multi-objective optimization through a large space of options, and lends itself to a multitude of algorithmic approaches. On the back-end, it relies extensively on common capabilities such as model refinement, simulation and assessment of parameters like performance and cost. These characteristics present an opportunity to create an infrastructure that enables multiple approaches to be deployed using generic <b>back-end</b> <b>services.</b> In this work, we describe such a framework, developed using the System-on-Chip Environment, and we demonstrate the benefits and feasibility of deploying a variety of design space exploratio...|$|E
30|$|The article {{makes the}} {{following}} contributions: First, we elaborated and structured {{a set of}} requirements and design paradigms for the integration problem based on the specific real-life elderly care case. Second, we are proposing a two-layered integration approach for the SD which realized the required paradigms. Our third contribution is a use case study with service modeling, reference implementation, as well as evaluations. In the use case study, we have modeled a packaged elderly caring service based on WTIF, and we have demonstrated the integration of assisted devices into the packaged service (PS) with other <b>back-end</b> <b>services.</b> We showed how SDs are integrated into business application by the WTIF with lists of benefits.|$|E
40|$|Clarens is a Grid-enabled {{web service}} {{infrastructure}} implemented {{to augment the}} current batch-oriented Grid services computing model in the Compound Muon Solenoid (CMS) experiment of the LHC. Clarens servers leverage the Apache web server to provided a scalable framework for clients to communicate with services using the SOAP and XML-RPC protocols. This framework provides security, session persistent storage, service discovery, and call routing to <b>back-end</b> <b>services.</b> As an implementation policy Clarens uses widely implemented standards wherever possible instead of inventing new standards. This paper describes the basic architecture of Clarens, while a companion paper describes clients and services that {{take advantage of this}} architecture. More information and documentation is also available at the Clarens web page a...|$|E
30|$|In this article, we have {{introduced}} the WTIF, a Web-based Two-layered approach for integrating SDs. The framework is targeted for integrating heterogeneous SDs {{with each other}} and other back-end applications for agile business application. Our integration strategy is to use RESTful web services as the main connector technology for device. Based on it, we use a compatible BPM middleware to compose the RESTful device service with other WS-* <b>back-end</b> <b>service</b> into process.|$|R
5000|$|Gateway: {{a server}} {{that act as}} an API front-end, {{receives}} API requests, enforces throttling and security policies, passes requests to the <b>back-end</b> <b>service</b> and then passes the response back to the requester. A gateway often includes a transformation engines to orchestrate and modify the requests and responses on the fly. A gateway can also provide functionality such collecting analytics data and providing caching. The gateway can provide functionality to support authentication, authorization, security, audit and regulatory compliance.|$|R
5000|$|The company chose Neustar {{to provide}} <b>back-end</b> {{registry}} <b>services.</b> The [...]music TLD will be restricted and registrants will be qualified via association {{with a number}} of supporting organizations.|$|R
40|$|This paper {{addresses}} {{issues in}} digital curation, {{which is the}} management of digital assets throughout their life cycle for maximum interoperability, discovery, preservation and re-use. The experiences of two institutions—Johns Hopkins University’s Sheridan Libraries and Penn State University Libraries—are presented as examples of how libraries can collaborate successfully with publishers to provide preservation and other <b>back-end</b> <b>services</b> to support scholarly publishing. One example (Johns Hopkins) relates to scientific data, while the other (Penn State) relates to the humanities. The paper also discusses the potential of digital curation to expand and enhance library services broadly and describes the investment the Institute of Museum and Library Services has made in digital curation research, education, and practice. ...|$|E
40|$|Abstract. In {{order to}} be adopted within {{corporate}} environments, Semantic Web applications must provide tangible short-/medium-term gains. Although corporate Semantic Web offers enterprises new possibilities for enhanced integration of heterogeneous business data, information discovery, and advanced automation of tasks, a cost-benefit analysis is in any case essential. In this paper, we argue that the main costs of ontology development and maintenance can be reduced by either licensing {{the use of that}} ontology by other organizations or by outsourcing those tasks to external providers. We also briefly point to the short-/medium-term benefits of corporate Semantic Web arising in the areas of data integration, semantic search, and personalization. This paper concludes with an example of a real-world company providing <b>back-end</b> <b>services</b> for corporate Semantic Web...|$|E
40|$|In the {{emerging}} paradigm of tetherless computing, client applications running on small, inexpensive, and smart mobile devices maintain opportunistic wireless connectivity with <b>back-end</b> <b>services</b> running on centralized computers, enabling novel classes of applications. These applications require a communications infrastrastructure that is mobility-aware, disconnection-resilient and provides {{support for an}} opportunistic style of communiction. It should {{even be able to}} function across network partitions that may arise when end-to-end communication is not possible. We outline, design, and evaluate the implementation of an architecture that provides this functionality. we shot that it is possible for next-generation mobile devices to obtain up to 80 -fold improvement over conventional mechanisms by exploiting opportunistic WiFi links, and that this benefit can be delivered as an overlay that is compatible with the current Internet...|$|E
40|$|This {{artifact}} presents The Gamma, {{a simple}} programming environment for data exploration that uses member access {{as the primary}} mechanism for constructing queries. The artifact consists of two parts. The user facing web-based component allows users to explore a simple dataset of Olympic medal winners while a <b>back-end</b> <b>service</b> provides the data and evaluates queries executed by the user. The purpose of the artifact is to illustrate the pivot type provider, which provides a simple way for constructing queries in a object-based programming language equipped with member access. The pivot type provider can be use to construct new queries from code or using the user interface, but it also encourages the user to modify existing code...|$|R
2500|$|Terminal Services Gateway: {{enables the}} ability to use a {{front-end}} IIS server to accept connections (over port 443) for <b>back-end</b> Terminal <b>Services</b> servers via an https connection, similar to how RPC over https allows Outlook clients to connect to a back-end Exchange 2003 server. [...] Requires Windows Server 2008.|$|R
40|$|In {{this paper}} key {{components}} in an intelligent product are defined and an associated intelligent product model is formulated. In this model, each product {{is equipped with}} an Intelligent Data Unit that connects to a regional <b>back-end</b> <b>service</b> enabler over the Communication Support Infrastructure (e. g. Internet) for lifecycle data transmission. An Intelligent Data Unit is a hardware device that consists of sensors, a controller, memory and data communication interface, which can be embedded into the product to acquire the lifecycle data. A service enabler is a software agent that receives the lifecycle data, and uses it to enable services and provide useful information and knowledge. The analysis and design of a service enabler is described, and a prototype service enabler is developed. It has been demonstrated in field trials that intelligent products built in this way can enable suitable product-related services...|$|R
