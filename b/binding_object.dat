27|149|Public
5000|$|... one {{can make}} the {{template}} run in a different thread. The value of the number determines the safety level. At the maximum isolation level, unless the <b>binding</b> <b>object</b> is marked as trusted, ...|$|E
5000|$|Microsoft's Windows Presentation Foundation (WPF), {{introduces}} routed commands, which {{combine the}} command pattern with event processing. As a result, the command object no longer contains {{a reference to}} the target object nor {{a reference to the}} application code. Instead, invoking the command object's execute command results in a so-called Executed Routed Event that during the event's tunneling or bubbling may encounter a so-called <b>binding</b> <b>object</b> that identifies the target and the application code, which is executed at that point.|$|E
40|$|Abstract: This paper {{addresses}} {{the issue of}} multimedia cooperative work. An ODP based view {{of the system is}} discussed taking into account some of the viewpoints of the standard. Special emphasis is given to the modeling of multimedia stream interfaces and the concept of <b>binding</b> <b>object</b> which is a key concept. The paper describes a multimedia distributed platform, DIMPLE, supporting interactive and distributed multimedia applications. The example application implemented allows for a shared synchronized access to multimedia information systems and includes an off-the-shelf videoconferencing system which is a non-ODP product. It is shown that the concept of <b>binding</b> <b>object</b> makes the integration very easy. 1...|$|E
25|$|Direct State Access (DSA) – object accessors enable {{state to}} be queried and {{modified}} without <b>binding</b> <b>objects</b> to contexts, for increased application and middleware efficiency and flexibility.|$|R
50|$|Usually, <b>binding</b> <b>objects</b> such as handcuffs, legcuffs, ropes, chains, straps or straitjackets {{are used}} for this purpose. Alternatively {{different}} kinds of arm locks deriving from unarmed combat methods or martial arts are frequently used to restrain a person, which are predominantly used by trained police or correctional officers. This less commonly also extends to joint locks and pinning techniques.|$|R
40|$|Abstract—In this paper, {{opportunistic}} <b>object</b> <b>binding</b> is pro-posed {{to improve}} multi-modal localization. <b>Object</b> <b>binding</b> and proximity detection will be realized using Bluetooth and Wireless Sensor Networks. Multi-modal localization is created using an opportunistic seamless localization system, fusing Wi-Fi, Blue-tooth, Wireless Sensor Networks, GSM, GPS, RFID and inertial sensors. In this paper <b>object</b> <b>binding</b> {{is used to}} locate devices {{which can not be}} located without the help of bound <b>objects.</b> Index Terms—object <b>binding,</b> localization, opportunistic lo-calization, multi-modal localization, Bluetooth, WSN, Wi-Fi, proximity detection...|$|R
40|$|This paper {{addresses}} {{the issue of}} multimedia cooperative work. An ODP based view {{of the system is}} discussed taking into account some of the viewpoints of the standard. Special emphasis is given to the modeling of multimedia stream interfaces and the concept of <b>binding</b> <b>object</b> which is a key concept. The paper describes a multimedia distributed platform, DIMPLE, supporting interactive and distributed multimedia applications. The example application implemented allows for a shared synchronized access to multimedia information systems and includes an off-the-shelf videoconferencing system which is a non-ODP product. It is shown that the concept of <b>binding</b> <b>object</b> makes the integration very easy. 1. Introduction Handling multimedia data on networked and distributed systems begins to be a known issue with a clear identification of the problems still open. Most of the work is centered on videoconferencing systems ([1], [15], or commercial products such as ShowMe and Communique) and high-lev [...] ...|$|E
40|$|We {{propose a}} new machine {{architecture}} for high performance execution of late <b>binding</b> <b>object</b> oriented languages The two principal mechanisms for attaining this goal are a fast context allocation/access scheme and an instruction {{translation lookaside buffer}} New ideas in this paper include the concept and implementation of abstract instructions, using floating point addresses to solve the small object problem, and a novel context allocation/access mechanis...|$|E
40|$|We {{present an}} initial {{study of the}} object {{features}} of Oracle 9 i – {{the first of the}} market-leading object-relational database systems that supports a true object model on the server side as well as an ODMG-style C++ language binding on the client side. We discuss how these features can be used to provide persistent object storage in the HEP environment. Keywords: LHC, persistency, C++ language <b>binding,</b> <b>object,</b> database, VLDB 1...|$|E
40|$|The {{sculpture}} {{in the image}} was made by <b>binding</b> <b>objects</b> together in a deliberately chaotic way: a card-game of images of the worlds' most famous tourist attractions, a stack of old pieces of wood {{and a set of}} office filing cards. This was temporarily exposed to an iron-powder solution, causing {{the lower part of the}} ‘file-block’ to rust and unite the materials. Index no longer exists. Looking for an image for ‘BLUEPRINT’, this particular project struck Neudecker as appropriate, as it already combined and layered a concept of human knowledge and a system of categorization with a physically changing material...|$|R
5000|$|Aside from specifying a function's binding, [...] {{may also}} be used to {{evaluate}} an expression within a specific class definition <b>binding</b> or <b>object</b> instance <b>binding,</b> allowing classes to be extended with new methods specified in strings.|$|R
5000|$|... /* * - {{using an}} {{arbitrary}} function <b>object</b> (<b>binding</b> values with boost::bind (...) [...] ) */ nameEdit_->enterPressed (...) [...]connect (boost::bind(&HelloApplication::greet, this)); ...|$|R
40|$|A {{building}} blocks approach for the formal specification of binding {{objects in the}} ODP Computational Model is presented. The formal notation that is used is based on LOTOS extended with two features - real time and gate passing. These features are among the extensions that are currently studied in the ISO standardisation Formal Description Techniques group. We apply our {{building blocks}} approach to the specification of a multicast, multimedia <b>binding</b> <b>object.</b> Peer reviewe...|$|E
40|$|We {{illustrate}} how the ISO E-LOTOS language {{can be used}} to describe an ODP multicast multimedia <b>binding</b> <b>object</b> of some complexity. The timing features of the language are briefly recalled, and {{play a major role in}} the description of the example, but many other features of E-LOTOS are also very useful to obtain a more modular and more readable specification. Users familiar with LOTOS will also learn how some E-LOTOS features can advantageously replace the traditional LOTOS ones...|$|E
40|$|Object-oriented {{programs}} involve many unique {{features that}} are not present in their conventional counterparts. Examples are message passing, synchronization, dynamic <b>binding,</b> <b>object</b> instantiation, persistence, encapsulation, inheritance, and polymorphism. Integration testing for such programs is, therefore, more difficult than that for conventional programs. In this paper, we present an overview of current work on integration testing for object-oriented and/or concurrent programs, {{with a view to}} identifying areas for future research. We cover state-based testing, event- based testing, fault-based testing, deterministic and reachability techniques, and formal and semi- formal techniques...|$|E
40|$|Distributed {{multimedia}} {{information systems}} require {{a range of}} different interaction styles ranging from simple remote operation interaction to complex patterns of interaction involving both discrete and continuous data. The standardized reference model for Open Distributed Processing (ODP) defines a binding model that encapsulates different interaction styles within explicit <b>binding</b> <b>objects.</b> In this paper we discuss mechanisms for selecting and negotiating appropriate explicit stream bindings {{as required by the}} application. We describe the notion of explicit bindings and introduce the idea of using a trading-like facility for selecting potential binding types. We show how an earlier proposed type model for stream interfaces {{can be used as a}} basis for binding type selection, and extended to support automatic negotiation of binding properties...|$|R
40|$|The work in {{this paper}} is a case study. This paper {{describes}} how we are provisioning QoS in a real-time distributed object platform able to support power plant control applications. A previous experiment with a modified Java-ChorusOS-ATM platform based on RM-ODP/ReTINA <b>binding</b> <b>objects</b> enhanced our knowledge on QoS based distributed object systems. RM-ODP/ReTINA brings a distributed object computing model where, time requirements can be specified in terms of QoS parameters. Our goal is to achieve QoS provisioning with off-the-shelf CoS based products in the Real-Time Distributed Object Architectures to be built. Low level building blocks of the architecture as communication networks and operating systems exist as CoS components. The current step of the project deals with distributed object platform selection. But {{it is not so}} easy to choose a QoS-enabled middleware...|$|R
50|$|Clathrates are {{suspected}} {{to occur in}} large quantities on some outer planets, moons and trans-Neptunian <b>objects,</b> <b>binding</b> gas at fairly high temperatures.|$|R
40|$|Object-oriented {{programs}} involve many unique {{features that}} are not present in their conventional counterparts. Examples are message passing, synchronization, dynamic <b>binding,</b> <b>object</b> instantiation, persistence, encapsulation, inheritance, and polymorphism. Testing for such program is, therefore, more difficult than that for conventional programs. Object-orientation has rapidly become accepted as the preferred paradigm for large-scale system design. In this paper we have discussed about how testing is being {{carried out in the}} Object Oriented environment. To accommodate this, several new techniques have been proposed like fault-based techniques, Scenario based, Surface structure testing, and Deep structural testin...|$|E
40|$|Abstract. Amidst rocketing {{numbers of}} {{enthusiastic}} Java programmers and internet applet users, {{there is growing}} concern about the security of executing Java code produced by external, unknown sources. Rather than waiting to nd out empirically what damage Java programs do, we aim to examine rst the language and then the environment looking for points of weakness. A proof of the soundness of the Java type system is a rst, necessary step towards demonstrating which Javaprograms won't compromise computer security. We consider a type safe subset of Java describing primitive types, classes, inheritance, instance variables and methods, interfaces, shadowing, dynamic method <b>binding,</b> <b>object</b> creation, null and arrays. We argue that for this subset the type system is sound, by proving that program execution preserves the types, up to subclasses/subinterfaces. ...|$|E
40|$|The {{language}} SDL {{has long}} been applied {{in the development of}} various kinds of systems. Real-time systems are one application area where SDL has been applied extensively. Whilst SDL allows for certain modelling aspects of real-time systems to be represented, the language and its associated tool support have certain drawbacks for modelling and reasoning about such systems. In this paper we highlight the limitations of SDL and its associated tool support in this domain and present language extensions and next generation real-time system tool support to help overcome them. The applicability of the extensions and tools is demonstrated through a case study based upon a multimedia <b>binding</b> <b>object</b> used to support a configuration of time dependent information producers and consumers realising the so called lipsynchronisation algorithm. Key words — SDL, Validation, Real-Time Systems...|$|E
50|$|Several <b>object</b> <b>binding</b> times {{exist in}} object {{oriented}} systems. Java, for example, has late binding leading to more loosely coupled systems (at least for deployment).|$|R
25|$|The {{following}} example, {{a traditional}} programmer's puzzle, shows that Scheme can handle continuations as first-class <b>objects,</b> <b>binding</b> them to variables and passing them as arguments to procedures.|$|R
40|$|This study {{investigated}} feature binding in a working memory task {{in patients with}} schizophrenia and in normal controls. Twenty-five patients and 25 controls participated. On each trial, three drawings of familiar objects were presented sequentially, each in a different cell of a 3 x 3 grid. In different blocks of trials, participants remembered either individual features (object and location conditions) or an object and its location (combination condition). The results showed that patients were slower and less accurate than controls under all conditions. Accuracy of both groups, was reduced in the combination condition relative to the single-feature conditions, but patients showed disproportionately poorer performance in the combination condition than in the object and location conditions. Thus, patients with schizophrenia exhibit deficits in working memory, particularly when the task requires <b>binding</b> <b>objects</b> to their locations. This finding demonstrates that processes that establish coherent and temporary episodic representations in working memory are impaired in schizophrenia. (C) 2003 Elsevier Ireland Ltd. All rights reserved. Peer reviewe...|$|R
40|$|The paper {{describes}} the SysMan approach to interactive configuration management of distributed software components (objects). Domains {{are used to}} group objects to apply policy and for convenient naming of objects. Configuration Management involves using a domain browser to locate relevant objects within the domain service; creating new objects which form a distributed service; allocating these objects to physical nodes {{in the system and}} binding the interfaces of the objects {{to each other and to}} existing services. Dynamic reconfiguration of the objects forming a service can be accomplished using this tool. Authorisation policies specify which domains are accessible by which managers and which interfaces can be bound together. Keywords Domains, object creation, object <b>binding,</b> <b>object</b> allocation, graphical management interface. 1 INTRODUCTION The object-oriented approach brings considerable benefits to the design and implementation of software for distributed systems (Kramer 1992). Con [...] ...|$|E
40|$|Amidst rocketing {{numbers of}} {{enthusiastic}} Java programmers and internet applet users, {{there is growing}} concern about the security of executing Java code produced by external, unknown sources. Rather than waiting to find out empirically what damage Java programs do, we aim to examine first the language and then the environment looking for points of weakness. A proof of the soundness of the Java type system is a first, necessary step towards demonstrating which Java programs won't compromise computer security. We consider a type safe subset of Java describing primitive types, classes, inheritance, instance variables and methods, interfaces, shadowing, dynamic method <b>binding,</b> <b>object</b> creation, null and arrays. We argue that for this subset the type system is sound, by proving that program execution preserves the types, up to subclasses/subinterfaces. 1 Introduction Before the first complete Java language description was available [13] use of the language was extremely widespread and the [...] ...|$|E
40|$|Continuous media, such as {{audio and}} video, are quickly {{becoming}} {{an integral part}} of distributed computing environments. A shortcoming of such environments is their lack of support for continuous flows of information. What is missing is the notion of an on-going communication activity with an associated quality of service. This paper describes a model for integrating multimedia flows into a distributed computing system. The model permits explicit bindings to be established between type-checked stream interfaces. The stream binding is represented in the computational model as a first-class object which encapsulates configuration rules and QoS attributes. An operational interface supplied by the <b>binding</b> <b>object</b> allows other objects within the system to manage the binding, to renegotiate QoS parameters, to control the flows across the binding, and to register interest in stream events such as flow reports and communication errors. The in-band stream interface is an abstract C++ wrapper arou [...] ...|$|E
40|$|We {{study of}} the {{operational}} behaviour of the specification language Protocold. We examine whether BPA(+) (Basic Process Algebra with backtracking) forms a useful basis for a clear representation of the execution of certain language constructs from Protocold. Our primary focus is on those constructs that contain some form of backtracking. Backtracking in Protocold contains the undoing of <b>bindings</b> of <b>object</b> names (logical variables). We first provide a short introduction to both formalisms, and then make a rough comparison of them both. Some elementary Protocold features, such as object names and the <b>binding</b> of <b>object</b> names, are then defined relative to a special data environment for BPA(+). Finally, a small language PCL is defined for {{the description of the}} operational behaviour of Protocold-like expressions, as well as a mapping from Σ(PC L) expressions to Σ(BPA(+)) terms. Some operational equivalences that hold in Protocold are defined as rules in PCL, such that algebraic m [...] ...|$|R
50|$|QML extends a {{standards-compliant}} JavaScript engine, so any valid JavaScript expression {{can be used}} as {{a property}} binding. <b>Bindings</b> can access <b>object</b> properties, make function calls, and even use built-in JavaScript objects like Date and Math.|$|R
5000|$|ARML {{is built}} on a generic object model that allows {{serialization}} in several languages. Currently, ARML defines an XML serialization, {{as well as a}} JSON serialization for the ECMAScript <b>bindings.</b> The ARML <b>object</b> model consists of three main concepts: ...|$|R
40|$|Streams {{have been}} {{included}} in the Reference Model for Open Distributed Processing (RM-ODP), in response to advances in distributed multimedia computing. They describe the complex interactions that can occur in such systems. The simple client-server model of interaction is insufficient to properly represent streams and therefore an explicit binding model has been introduced. Details of the communication are encapsulated in a <b>binding</b> <b>object</b> whose behaviour is defined in a template. This report presents the ODP view of streams and then introduces the template language RIVUS. The language can be used to specify binding templates and thus allow classes of communication behaviour to be described. A syntax for the language is provided. 1 Introduction In multimedia systems various forms of information, such as video, text and audio, are combined to produce a wide range of applications, for example video booths and tourist information packages. Powerful new applications are being developed to [...] ...|$|E
40|$|Object-location {{memory is}} an {{important}} form of spatial memory, comprising different subcomponents that each process specific types of information within memory, i. e. remembering objects, remembering positions and binding these features in memory. In the current study we investigated the neural correlates of binding categorical (relative) or coordinate (exact) position information with objects in memory. Therefore, an object-location memory battery was used, including different task conditions assessing object-location memory, i. e. memory for position information per se, and <b>binding</b> <b>object</b> information with coordinate and categorical position information. Sixty-one stroke patients with focal brain lesions were examined and compared with 77 healthy matched controls. The lesion subtraction method was used to define the area of overlap. Results indicate an important role of the left posterior parietal cortex in the binding of both categorical and coordinate positions with object information. Additionally, the hippocampus seems important for categorical object-location memory. This suggests that categorical and coordinate object-location memory depend on similar cognitive and neural systems...|$|E
40|$|AbstractAn {{approach}} for the binding problem is proposed, {{based on an}} autonomous adaptive system designed using artificial neural networks with object handling functions. Object handling functionality, such as object files, {{has been reported to}} have a relationship with perception, and working memory. However, in order for a brain-oriented system to decide actions based on object handling, the system must clarify the “binding problem”, or the problem of processing different attributes such as shape, color and location in parallel, then binding these multiple attributes as a single object. The proposed system decides semi-optimum actions by combining nonlinear programming and reinforced learning. By the introduction of artificial neural networks based on dendritic structures of pyramidal neurons in the cerebral cortex, together with a mechanism for dynamically linking nodes to objects, it is shown that deciding actions and learning as a whole system, based on <b>binding</b> <b>object</b> attributes and location, is possible. The proposed features are verified through computer simulation results...|$|E
40|$|A common {{requirement}} in distributed multimedia systems {{is the ability}} to transmit continuous media streams of various kinds between producing and consuming endpoints. It is important that support for continuous media interaction is as comprehensive as for other styles of interaction. The standardized reference model for Open Distributed Processing (ODP) defines a binding model that encapsulates different interaction styles within explicit <b>binding</b> <b>objects.</b> Different multimedia applications have different needs {{when it comes to the}} functionality and behavior of an explicit binding. Therefore a need has been recognized for a service that enables multimedia applications to easily find suitable explicit bindings of different types, such as a trading service. In this thesis we propose a trader design aimed at supporting export and import of explicit binding types. We have implemented this trader design, and a set of applications that demonstrates the trader. In addition, we present some performance measurements and analysis of our implementation. From the performance measurements we have drawn the conclusion that the trader`s search operation scales reasonably well with the complexity of the explicit binding type, together with the number of explicit binding type offers in the trader...|$|R
5000|$|Caché ObjectScript, Caché Basic or T-SQL {{can be used}} {{to develop}} {{application}} business logic. External interfaces include native <b>object</b> <b>binding</b> for C++, Java, EJB, ActiveX, and [...]NET. Caché supports JDBC and ODBC for relational access. XML and web services are also supported.|$|R
40|$|Animal {{studies suggest}} a {{relationship}} between activation of the cholinergic system and neural synchronization, which again has been suggested to mediate feature binding. We investigated whether suppressing cholinergic activity through moderate alcohol consumption in healthy humans affects behavioral measures of feature binding in visual perception and across perception and action. Indeed, evidence of the binding of shape and color, and of shape and location, of visual objects disappeared after alcohol consumption, whereas <b>bindings</b> between <b>object</b> features and the manual response were unaffected...|$|R
