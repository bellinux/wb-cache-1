282|365|Public
50|$|Chemical {{processes}} may be run {{in continuous}} or <b>batch</b> <b>operation.</b>|$|E
5000|$|... {{possibility}} of <b>batch</b> <b>operation</b> of control system, in hostile contexts where {{the connection is}} not continuous; ...|$|E
50|$|Automated proof {{checking}} {{can be done}} {{either as}} a <b>batch</b> <b>operation,</b> or interactively, {{as part of an}} interactive theorem proving system.|$|E
50|$|Image locking {{to prevent}} {{accidental}} description changes during <b>batch</b> <b>operations.</b>|$|R
50|$|Many truly {{continuous}} {{processes of}} today were originally <b>batch</b> <b>operations.</b>|$|R
50|$|Some common {{applications}} of plate columns are distillation, gas-liquid absorption and liquid-liquid extraction. In general, plate columns {{are suitable for}} both continuous and <b>batch</b> <b>operations.</b>|$|R
50|$|In <b>batch</b> <b>operation,</b> {{production}} {{occurs in}} time-sequential steps in discrete batches. A batch of feedstock(s) is fed (or charged) into a process or unit, then the chemical process takes place, then the product(s) {{and any other}} outputs are removed. Such batch production may be repeated over again and again with new batches of feedstock. <b>Batch</b> <b>operation</b> is commonly used in smaller scale plants such as pharmaceutical or specialty chemicals production, for purposes of improved traceability as well as flexibility.Continuous plants are usually used to manufacture commodity or petrochemicals while batch plants are more common in speciality and fine chemical production as well as pharmaceutical active ingredient (API) manufacture.|$|E
50|$|Opera 28 was {{released}} on March 10, 2015, based on Chromium 41. Starting with this version, bookmarks can be synchronized between Opera on the desktop, Opera Mobile on Android and Opera Mini on Android and iOS. Support for <b>batch</b> <b>operation</b> {{was added to the}} bookmark manager and bookmark suggestions now appear when typing in the address bar.|$|E
50|$|This {{process was}} the main process used in Britain from the mid-19th century until 1951. The process was very inefficient as it was {{designed}} as a small scale <b>batch</b> <b>operation.</b> Each retort only produced 40 kg so companies would put them together in banks and used one large gas burner to heat all of them. The Belgian process requires redistillation to remove impurities of lead, cadmium, iron, copper, and arsenic.|$|E
30|$|To {{determine}} {{the performance of}} a newly prepared adsorbent in adsorption systems, <b>batch</b> and column <b>operations</b> are the two types of laboratory experiments usually applied. <b>Batch</b> <b>operations</b> are usually performed to evaluate the ability of a material to adsorb as well as the adsorption capacity of the material (Sekhula et al. 2012). The data obtained from <b>batch</b> <b>operations</b> are, in most cases, limited to a laboratory scale and thus do not provide data which can be accurately applied in industrial and household systems. Column operations, on the other hand, are necessary to provide data which can be applied for industrial and household purposes (Maji et al. 2007; Ranjan et al. 2009).|$|R
30|$|Process {{intensification}} {{studies have}} already been well-established in continuous operation, especially using reactive distillation. In view {{of the importance of}} <b>batch</b> <b>operations</b> in the current market-driven scenario, the present study aims to explore different options of process intensification in batch mode for a particular class of reactions.|$|R
5000|$|TFSs: “Standalone” TFS {{functions}} called {{directly by}} the runtime library, but intended only for single-process use (if multiple threads are used, each must be accessing a different database only). To be used for high-throughput <b>batch</b> <b>operations</b> while the database(s) are otherwise offline. Unsafe (but fast) updates are allowed.|$|R
5000|$|... vpncmd is the CUI {{administrative}} tool for SoftEther VPN Server, Client and Bridge. It {{is a program}} that runs on consoles of every supported operating systems. When a user is unable to use Windows or Linux with WINE, the user can alternatively use vpncmd to manage the VPN programs. vpncmd is also useful to execute a <b>batch</b> <b>operation,</b> such as creating many users on the Virtual Hub, or creating many Virtual Hubs on the VPN Server.|$|E
5000|$|Like all System/360 {{operating}} software initial releases of DOS could run only one {{program at a}} time. Later versions of [...] "real" [...] DOS were able to run up to three programs concurrently, in separate memory partitions, supported by the same hardware memory protection features of the more scalable OS/360 operating system. These were identified as BG (background), F1 (foreground 1) and F2 (foreground 2). Multiprogramming was an optional feature of DOS/360, selectable at system generation. Another SYSGEN option allowed <b>batch</b> <b>operation</b> run in either FG partition. Otherwise foreground programs had to be manually started by the computer operator.|$|E
5000|$|PMView {{uses its}} own file open dialog, showing {{thumbnails}} of all images {{in a given}} folder in what PMview calls the [...] "File Open Container", unless the user chooses to see only the filenames. The size of those thumbnails can be changed by the user, and the user can choose if the thumbnails are taken from the operating system, out of the JPEG or PNG files, or dynamically generated by PMView. Still in the [...] "File Open Container", all or selected images can be processed by file copy and move operations, conversion between file formats, application of various image editing tasks in <b>batch</b> <b>operation</b> macros.|$|E
40|$|AbstractWe give a brief {{introduction}} to FORM, a symbolic programming language for massive <b>batch</b> <b>operations,</b> designed by Vermaseren. In particular, we stress various methods to efficiently use FORM under the UNIX operating system. Several scripts and examples are given, and {{suggestions on how}} to use the vim editor as development platform...|$|R
50|$|The {{river was}} a key aspect of colonial Braintree for its river herring. Later its strong flow was useful for early {{industry}} such as grist mills. It has remained a relatively clean river to date, with wildlife including birds, turtles, muskrats and fish, but recently has not been polluted by sediments from the Graziano Inc. concrete <b>batching</b> <b>operation.</b>|$|R
40|$|Abstract. An {{integrated}} {{batch annealing}} furnace simulator with {{the capability of}} predicting spatial and temporal evolution of temperature, microstructure and mechanical properties of the coils during the <b>batch</b> annealing <b>operation</b> has been developed. The prediction capability of this integrated simulator has been extensively validated with data collected from several industrial <b>batch</b> annealing <b>operations.</b> In this article, the problems in controlling a <b>batch</b> annealing <b>operation</b> via conventional temperature based control strategy has been highlighted. These problems can be effectively resolved by using the integrated simulator. Furthermore, the utility of this simulator has been illustrated by a case study on optimization of coil dimensions for maximization of furnace productivity. 1...|$|R
50|$|California State University at Northridge had a dual 3170 that {{provided}} timesharing {{service to the}} California State University and College system. Many of the other campuses also had CDC 3150 machines for local <b>batch</b> <b>operation.</b> In 1970 CDC 3150s were installed at most campuses of the California State College system. San Jose State and LA State got CDC 3300s and served as regional data centers with (very flaky) data links to the other campuses. California State Polytechnic College (San Luis Obispo) and San Diego State University had IBM System/360s. The rest got 3150s. Typical configuration was 24K words of 24-bit core memory, four 7-track tape drives, drum printer, card reader, card punch, two 8MB disc drives (removable packs). At Humboldt State College where I worked this was used for both administrative and instructional purposes. It replaced an IBM 1620.|$|E
5000|$|Mark IV was a batch processing, early {{fourth-generation}} {{programming language}} that combined file management and upkeep with report generation capabilities. [...] One taxonomy of application generators {{published in a}} scholarly setting placed Mark IV {{in the category of}} [...] "Generalized file-management systems and sophisticated report writers". [...] Mark IV was originally designed to be usable by non-programmers, with simple interfaces given for report requests and data updates. This interface consisted of filling out one of several paper forms by hand and then having it keypunched into a machine-readable form, that was then run by a <b>batch</b> <b>operation.</b> [...] To some extent the goal was reached and non-programmers were able to use it. [...] However experience showed that non-programmers had difficulty understanding the increasingly complex capabilities of the product and that only those with some data processing background were able to use those capabilities effectively.|$|E
50|$|Vacuum drying is {{the mass}} {{transfer}} operation {{in which the}} moisture present in a substance usually wet solid is removed by means of creating vacuum. In chemical process industries like food, pharmaceutical, agricultural, textile, paper & pulp etc. drying is an essential unit operation to remove moisture.Vacuum drying is generally used for the drying of those substances which are hygroscopic and heat sensitive {{and is based on}} the principle of creating a vacuum to decrease the pressure below the vapor pressure of the water. With the help of vacuum pumps, the pressure is reduced around the substance to be dried. This decreases the boiling point of water inside that product and, thus, increases the rate of evaporation significantly. The result is a significantly increased drying rate of the product. The pressure maintained in vacuum drying is generally 0.0296 -0.059 atm and the boiling point of water is 25-30 ◦C. The vacuum drying process is a <b>batch</b> <b>operation</b> which is performed at reduced pressures and lower relative humidity compared to ambient pressure. That is why the drying occurs faster under these conditions.|$|E
30|$|Our {{implementation}} provides such extensions for {{the selected}} ONDMs (Hibernate OGM, DataNucleus EclipseLink, Kundera and Apache Gora). Especially the implementations for the JPA-compliant ONDMs are highly similar. To avoid skewing {{the results and}} to ensure comparability of the results, we did not make use of any performance optimization strategies offered by the ONDMs, such as caching, native queries and <b>batch</b> <b>operations.</b>|$|R
40|$|Dynamic {{neural network}} toolkits such as PyTorch, DyNet, and Chainer offer more {{flexibility}} for implementing models that cope with data of varying dimensions and structure, relative to toolkits that operate on statically declared computations (e. g., TensorFlow, CNTK, and Theano). However, existing toolkits - both static and dynamic - {{require that the}} developer organize the computations into the batches necessary for exploiting high-performance algorithms and hardware. This batching task is generally difficult, but it becomes a major hurdle as architectures become complex. In this paper, we present an algorithm, and its implementation in the DyNet toolkit, for automatically <b>batching</b> <b>operations.</b> Developers simply write minibatch computations as aggregations of single instance computations, and the batching algorithm seamlessly executes them, on the fly, using computationally efficient <b>batched</b> <b>operations.</b> On a variety of tasks, we obtain throughput similar to that obtained with manual batches, as well as comparable speedups over single-instance learning on architectures that are impractical to batch manually...|$|R
5000|$|... a <b>batch</b> burning <b>operation,</b> {{that some}} designs feature, and that {{regularly}} interrupts the gas producing process.|$|R
5000|$|Wolverton and McDonald report only 0.2 m3 methane per kg, {{indicating}} {{requirements of}} 6000 MT biomass/ha {{to attain the}} 70,000 m3 yield projected by the National Academy of Sciences (Washington). Ueki and Kobayashi mention more than 200 MT/ha/yr.Reddy and Tucker found an experimental maximum {{of more than a}} half ton per day.Bengali farmers collect and pile up these plants to dry {{at the onset of the}} cold season; they then use the dry water hyacinths as fuel. The ashes are used as fertilizer. In India, a ton of dried water hyacinth yields circa 50 liters ethanol and 200 kg residual fiber (7,700 Btu). Bacterial fermentation of one ton yields 26,500 cu ft gas (600 Btu) with 51.6% methane, 25.4% hydrogen, 22.1% , and 1.2% oxygen. Gasification of one ton dry matter by air and steam at high temperatures (800°) gives circa 40,000 ft3 (circa 1,100 m3) natural gas (143 Btu/cu ft) containing 16.6% hydrogen, 4.8% methane, 21.7% CO, 4.1% , and 52.8% N. The high moisture content of water hyacinth, adding so much to handling costs, tends to limit commercial ventures., A continuous, hydraulic production system could be designed, which would provide a better utilization of capital investments than in conventional agriculture, which is essentially a <b>batch</b> <b>operation.,</b> ...|$|E
50|$|In {{continuous}} operation, all {{steps are}} ongoing continuously in time. During usual continuous operation, the feeding and product removal are ongoing streams of moving material, which {{together with the}} process itself, all take place simultaneously and continuously. Chemical plants or units in continuous operation are usually in a steady state or approximate steady state. Steady state means that quantities related to the process do not change as time passes during operation. Such constant quantities include stream flow rates, heating or cooling rates, temperatures, pressures, and chemical compositions at any given point (location). Continuous operation is more efficient in many large scale operations like petroleum refineries. It is possible for some units to operate continuously and others be in <b>batch</b> <b>operation</b> in a chemical plant; for example, see Continuous distillation and Batch distillation. The amount of primary feedstock or product per unit of time which a plant or unit can process {{is referred to as}} the capacity of that plant or unit. For examples: the capacity of an oil refinery may be given in terms of barrels of crude oil refined per day; alternatively chemical plant capacity may be given in tons of product produced per day. In actual daily operation, a plant (or unit) will operate at a percentage of its full capacity. Engineers typically assume 90% operating time for plants which work primarily with fluids, and 80% uptime for plants which primarily work with solids.|$|E
40|$|This report {{presents}} {{our first}} results and conclusions {{with respect to}} - a simple specification formalism for hard real-time problems, - a method allowing to derive the specification of a control program in a systematic way from {{the properties of the}} plant to be controlled, - the application of the specification method, - the formal verification of the specification of a program for single <b>batch</b> <b>operation</b> with respect to the specification of the overall plant using PVS, - a control program for single <b>batch</b> <b>operation</b> written in SFC, - an informal verification of the specification of the program for multiple <b>batch</b> <b>operation</b> with respect to the specification of the overall plant using PVS, - extensions in the functionality of the control program in an informal way...|$|E
40|$|R Tree [1] is {{a popular}} spatial {{indexing}} data structure which has been widely used for indexing multidimensional static objects in fields like Geo Information Systems, VLSI design. However, {{to the best of}} our knowledge neither the original R Tree paper nor any of the related papers that followed have considered explicitly exploiting the presence of a cache for better performance. A similar observation in the context of B Trees led to the proposal of a buffered version of the B Tree [2] which exploited <b>batched</b> <b>operations</b> to achieve much better amortized costs in comparison to the naïve B Tree. In this project we extend this idea to R Trees to come up with a buffered version of the R Tree. Our buffered R Tree uses additional buffering elements for every node/page of the R Tree so that <b>batched</b> <b>operations</b> can be performed. <b>Batching</b> <b>operations</b> reduces the amortized (per operation) cost considerably. We implement the R-Tree from scratch in our platform independent framework, followed by the implementation of a novel Buffered R Tree designed by us. Our framework is designed to generate different workloads and also simulate hardware with different cache sizes and page sizes for a thorough evaluation. Our framework implementation (total of about 2000 lines of code) also includes a visualization module to graphically visualize the R-Trees generated by the approaches. We compare the 2 implementations on our new framework using several workloads and discuss both the pros and cons of the new approach. Experiments show that the new buffered approach improves amortized operation performance considerably. This paper is to serve as the final project report for CS 8803 DA. 1...|$|R
40|$|Adaptive Model Predictive Control {{was applied}} on a semi-batch reactor and a batch {{distillation}} column. It was shown that AMPC {{is capable of}} regulating <b>batch</b> <b>operations</b> with product performances {{similar to that of}} NMPC and it requires a computational time significantly lower. Furthermore, the robustness of AMPC was tested introducing some process mismatch in the process model. Therefore, it was shown that some recursive tuning might be necessary to increase robustnes...|$|R
40|$|We {{present a}} {{technique}} for designing external memory data structures that support <b>batched</b> <b>operations</b> I/O efficiently. We {{show how the}} technique {{can be used to}} develop external versions of a search tree, a priority queue, and a segment tree, and give examples of how these structures can be used to develop I/Oefficient algorithms. The developed algorithms are either extremely simple or straightforward generalizations of known internal memory algorithms—given the developed external data structures...|$|R
30|$|The {{experimental}} datasets, {{which were}} obtained from the <b>batch</b> <b>operation,</b> were used as inputs to the ANN model to provide the reasonable predictive performance of the biosorbent.|$|E
40|$|The {{possibility}} of preparation of ophthalmic drug delivery systems using compressed anti-solvent technology was evaluated. and RL 100 {{were used as}} drug carriers, acetazolamide was the model drug processed. Compressed anti-solvent experiments were carried out as a semi-continuous or a <b>batch</b> <b>operation</b> from a liquid solution of polymer(s) + solute dissolved in acetone. Both techniques allowed the recovery of composite particles, but the semi-continuous operation yielded smaller and less aggregated populations than the <b>batch</b> <b>operation.</b> The release behaviour of acetazolamide from the prepared microparticles was studied and most products exhibited a slower release than the single drug. Moreover, the release could be controlled to some extent by varying {{the ratio of the}} two Eudragit used in the formulation and by selecting one or the other anti-solvent technique. Simple diffusion models satisfactorily described the release profiles. Composites specifically produced by semi-continuous technique have a drug release rate controlled by a diffusion mechanism, whereas for composites produced by the <b>batch</b> <b>operation,</b> the polymer swelling also contributes to the overall transport mechanism...|$|E
40|$|AbstractIn {{pharmaceuticals}} manufacturing, {{the conversion}} of conventional batch crystallisations to continuous mode {{has the potential for}} intensified, compact operation and more consistent production via quality-by-design. A pragmatic conversion approach is to utilise existing stirred tank batch crystallisers as continuous mixed-suspension mixed-product removal (MSMPR) stages. In this study, a rigorous and general mathematical model is developed for a pharmaceutical crystallisation process under continuous MSMPR operation. In the proposed changeover from batch to continuous operation, concentration control (C-control), which has been well accepted in batch crystallisation operation, is further extended to facilitate the convenient design of the steady-state operating point of a continuous MSMPR crystalliser; an objective is to ensure that the start-up procedures and on-line control conditions fall within the design-space of the original <b>batch</b> <b>operation.</b> Both single-stage and cascaded two-stage MSMPR crystallisers were investigated and compared to the conventional <b>batch</b> <b>operation.</b> It was observed that despite the production of a smaller number-based mean crystal size, the proposed continuous MSMPR operation achieved higher production capacity with shorter mean residence time and comparable product yield to the <b>batch</b> <b>operation.</b> Lastly, the robustness of C-control strategy against uncertainties in crystallisation kinetics was also demonstrated for the proposed continuous MSMPR operation...|$|E
40|$|We give a brief {{introduction}} to FORM, a symbolic programming language for massive <b>batch</b> <b>operations,</b> designed by J. A. M. Vermaseren. In particular, we stress various methods to efficiently use FORM under the UNIX operating system. Several scripts and examples are given, and {{suggestions on how}} to use the vim editor as development platform. Comment: 10 pages, PDF document (PDFLaTeX source available upon request) with 2 JPG figures; submitted to Computers & Mathematics with Application...|$|R
50|$|Pyxplot {{is a free}} {{software}} command-line graph-plotting and vector graphics package. Its interface {{is similar to that}} of gnuplot, but its graphics engine is optimised to produce output in a style appropriate for inclusion in academic journals. The LaTeX typesetting system is used to render all text labels, making it easy to annotate graphs with mathematical expressions. In addition, Pyxplot has many more flow control constructs than gnuplot, making it much easier to perform <b>batch</b> <b>operations.</b>|$|R
5000|$|MM {{was unusual}} for its {{time in its}} support of [...] "message sequences," [...] which allowed the user to select a subset of {{messages}} in a mailbox for <b>batch</b> <b>operations.</b> The message sequence feature proved so popular with MM users that TOPS-20 MM author Mark Crispin went on to implement similar filtering capabilities in Pine. Columbia MM also offered context-sensitive help, command completion, and command history, carried over from the TOPS-20 version, before such features were commonplace in Unix software.|$|R
