102|140|Public
5000|$|Xuejia Lai and James L. Massey, A Proposal for a New <b>Block</b> <b>Encryption</b> Standard, EUROCRYPT 1990, pp. 389 - 404 ...|$|E
5000|$|X. Lai, J. L. Massey. A {{proposal}} for a new <b>block</b> <b>encryption</b> standard. Advances in Cryptology EUROCRYPT'90, Aarhus, Denmark, LNCS 473, p. 389-404, Springer, 1991 ...|$|E
50|$|ESSIV is {{a method}} for {{generating}} initialization vectors for <b>block</b> <b>encryption</b> to use in disk encryption. The usual methods for generating IVs are predictable sequences of numbers based on, for example, time stamp or sector number, and permits certain attacks such as a watermarking attack. ESSIV prevents such attacks by generating IVs {{from a combination of}} the sector number SN with the hash of the key. It is the combination with the key in form of a hash that makes the IV unpredictable.|$|E
50|$|This is {{a general}} {{description}} of how 2D-MITM is mounted on a <b>block</b> cipher <b>encryption.</b>|$|R
50|$|CCM {{requires}} two <b>block</b> cipher <b>encryption</b> {{operations on}} each block of an encrypted-and-authenticated message, and one <b>encryption</b> on each <b>block</b> of associated authenticated data.|$|R
40|$|Networks (WSNs) and the {{mechanisms}} {{to support the}} requirements, demand a critical examination. Therefore, the security protocols employed in WSNs should be so designed, as to yield the optimum performance. The efficiency of the block cipher is, {{one of the important}} factors in leveraging the performance of any security protocol. In this paper, therefore, we focus on the issue of optimizing the security vs. performance tradeoff in the security protocols in WSNs. As part of the exercise, we evaluate the storage requirements of the block ciphers viz. the Advanced Encryption Standard (AES) cipher Rijndael, the Corrected <b>Block</b> Tiny <b>Encryption</b> Algorithm (XXTEA) using the Output Codebook Block (OCB) mode. We compare our results with the Skipjack cipher in Cipher Block Chaining (CBC) mode. Our results clearly show the light-weight cipher XXTEA, as the optimal cipher and the Output Codebook Mode as the optimal mode of operation for the link layer security protocols. To the best of our knowledge, ours is the first experimental evaluation of the AES cipher Rijndael, the corrected <b>block</b> Tiny <b>Encryption</b> Algorithm (XXTEA) and the OCB mode in the link layer security architecture for WSNs. Index Terms—authentication, <b>block</b> ciphers, <b>encryption,</b> link layer security, wireless sensor networks I...|$|R
50|$|IAIK-JCE is a Java-based Cryptographic Service Provider, {{which is}} being {{developed}} at the Institute for Applied Information Processing and Communications (IAIK) at the Graz University of Technology. It offers support for many commonly used cryptographic algorithms, such as hash functions, message authentication codes, symmetric, asymmetric, stream and <b>block</b> <b>encryption.</b> Its development started in 1996 and as such IAIK-JCE {{was one of the}} first Java-based cryptography providers. It is written entirely in Java and based on the same design principles as Oracle's JCA/JCE.|$|E
50|$|A naive {{approach}} to increase {{strength of a}} <b>block</b> <b>encryption</b> algorithm with short key length (like DES) would be to use two keys (K1, K2) instead of one, and encrypt each block twice: EK2(EK1(plaintext)). If the original key length is n bits, one would hope this scheme provides security equivalent to using key 2n bits long. Unfortunately, this approach is vulnerable to meet-in-the-middle attack: given a known plaintext pair (x, y), such that y = EK2(EK1(x)), one can recover the key pair (K1, K2) in ~2n steps, instead of ~22n steps one would expect from algorithm with 2n bits of key.|$|E
50|$|Blowfish {{is notable}} among block ciphers for its {{expensive}} key setup phase. It starts off with subkeys {{in a standard}} state, then uses this state to perform a <b>block</b> <b>encryption</b> using part of the key, and uses {{the result of that}} encryption (really, a hashing) to replace some of the subkeys. Then it uses this modified state to encrypt another part of the key, and uses the result to replace more of the subkeys. It proceeds in this fashion, using a progressively modified state to hash the key and replace bits of state, until all subkeys have been set.|$|E
3000|$|... k[*]’,, we applied Advanced Encryption Standard (AES) algorithm, {{also called}} as “AES algorithm.” Generally, AES scheme {{is based on}} <b>block</b> cipher <b>encryption</b> and has been widely spread as a {{standard}} encryption application. It sufficiently satisfies the requirements of encryption strength and computational process.|$|R
40|$|In {{this paper}} we propose a scheme of <b>encryption</b> for <b>Block</b> ciphers in N-alphabet, where every member of any m-block of plain text is {{enciphered}} by different permutations which are generated by the help of a secret key word. Further we extend this method to multicode encryption using the fact that encrypting each member differently is the basis of multicode encryption. KEY WORDS <b>Encryption,</b> <b>Block</b> cipher, Multicode <b>encryption</b> 1...|$|R
40|$|A {{plaintext}} related image <b>blocking</b> <b>encryption</b> {{algorithm is}} proposed in this paper, which includes two kinds of operations on inner-block confusion and inter-block diffusion. Firstly, a float-point lookup table need to be generated by iterating chaotic system; Secondly, choose one of the entries in the look-up table as initial value of chaotic system, and iterate it to produce one secret code sequence for inner-block confusion; Thirdly, by using one pixel value of the former block to locate another entry in the look-up table, iterate it to yield another secret code sequence for inter-block diffusion; Finally, through two rounds of the block-by-block processes, the plain-image will be transformed into the cipher-image. The simulation {{results show that the}} proposed method has many good characters. </p...|$|R
50|$|To hide {{patterns}} in encrypted data while avoiding the re-issuing {{of a new}} key after each block cipher invocation, a method is needed to randomize the input data. In 1980, the NIST published a national standard document designated Federal Information Processing Standard(FIPS) PUB 81, which specified four so-called block cipher modes of operation, each describing a different solution for encrypting a set of input blocks. The first mode implements the simple strategy described above, and was specified as the electronic codebook (ECB) mode. In contrast, {{each of the other}} modes describe a process where ciphertext from one <b>block</b> <b>encryption</b> step gets intermixed with the data from the next encryption step. To initiate this process, an additional input value is required to be mixed with the first block, and which is referred to as an initialization vector. For example, the cipher-block chaining (CBC) mode requires a random value of the cipher's block size as additional input, and adds it to the first plaintext block before subsequent encryption. In turn, the ciphertext produced in the first encryption step is added to the second plaintext block, and so on. The ultimate goal for encryption schemes is to provide semantic security: by this property, it is practically impossible for an attacker to draw any knowledge from observed ciphertext. It can be shown that each of the three additional modes specified by the NIST are semantically secure under so-called chosen-plaintext attacks.|$|E
40|$|We {{propose a}} new {{authenticated}} encryption scheme {{that does not}} require any <b>block</b> <b>encryption</b> algorithm. Our scheme {{is based on the}} Horster-Michels-Petersen authenticated encryption scheme, and it uses a technique in the Bao-Deng signcryption scheme so that the sender's signature can be verified by an arbitrary third party. Since our scheme does not use any <b>block</b> <b>encryption</b> algorithm, we can reduce the code size in its implementation. The computation and communication costs of the proposed scheme are almost the same as those of the Bao-Deng scheme that uses a <b>block</b> <b>encryption</b> algorithm. Our scheme also satisfies all the security properties such as confidentiality, authenticity and nonrepudiation...|$|E
40|$|Abstract—This {{paper is}} devoted to the {{analysis}} of the impact of chaos-based techniques on <b>block</b> <b>encryption</b> ciphers. We present several chaos based ciphers. Using the well-known principles in the cryptanalysis we show that these ciphers do not behave worse than the standard ones, opening in this way a novel approach to the design of <b>block</b> <b>encryption</b> ciphers. Index Terms—Block encryption ciphers, chaos, cryptography, S-boxes. I...|$|E
40|$|In view of {{the digital}} image {{transmission}} security, based on laser chaos synchronization and Arnold cat map, a novel image encryption scheme is proposed. Based on pixel values of plain image a parameter is generated to influence the secret key. Sequences of the drive system and response system are pretreated by the same method and make image <b>blocking</b> <b>encryption</b> scheme for plain image. Finally, pixels position are scrambled by general Arnold transformation. In decryption process, the chaotic synchronization accuracy is fully considered {{and the relationship between}} the effect of synchronization and decryption is analyzed, which has characteristics of high precision, higher efficiency, simplicity, flexibility, and better controllability. The experimental results show that the encryption algorithm image has high security and good antijamming performance...|$|R
5000|$|For a given message [...] to hash and a given <b>block</b> cipher <b>encryption</b> {{function}} , the MDC-2 algorithm proceeds as follows. Let [...] be {{the block}} length, [...] two different constants of size [...] If [...] where each [...] has size , then the hash [...] {{of the message}} is given by: ...|$|R
40|$|Abstract. The meet-in-the-middle (MITM) {{attack on}} AES {{is a great}} success. In this paper, we apply the method to the {{lightweight}} SPN block cipher mCrypton. We prove that the multiset technique used to analyze AES can not be applied directly to mCrypton due to the scarcity of information. As a solution, we replace the unordered multiset with the ordered sequence. We lower the memory requirement from 2100 to 244 using the efficient differential enumeration technique. Based on these modifications, we construct a MITM attack on 7 -round mCrypton- 64 / 96 / 128 with complexities of 244 64 -bit <b>blocks</b> and 257 <b>encryptions.</b> We further extend the attack to 8 and 9 rounds for mCrypton- 128 by adding some key-bridging tech-niques. The 8 -round attack requires 244 <b>blocks</b> and 296 <b>encryptions</b> while the 9 -round attack needs 2120 <b>blocks</b> and 2116 <b>encryptions.</b> ...|$|R
40|$|The {{weak point}} of the {{existing}} <b>block</b> <b>encryption</b> scheme is that the plain text or encryption key could be easily exposed differential cryptanalysis or linear cryptanalysis, which is mostly used for decoding <b>block</b> <b>encryption.</b> This is because the encryption schemes have been designed for the fixed size encryption key. Another weak {{point of the}} existing <b>block</b> <b>encryption</b> algorithm {{is that it has}} a fixed permutation table and fixed number of encryption rounds. In order to overcome these weaknesses, an encryption algorithm using unlimited size of key and dynamically changing permutation table should be designed. A new encryption technique called Variable size <b>Block</b> <b>Encryption</b> using Dynamic-key Mechanism (VBEDM), which is designed with unlimited key size, dynamically changing permutation table based on the encryption key and variable block size for each round. To make the cryptanalyst hard to expose the plain text, from the array of compression algorithms the VBEDM uses a compression technique based on key. The compression used is not for compressing the text but for strengthening the encryption method. Because of its dynamic functionality in input block size, key size, permutation, number of rounds and compression it makes the crypt analyst too hard to analyzing the cipher text. This algorithm also uses a compression technique from an array of compression algorithm resulting in more confusion to the analyst...|$|E
40|$|This paper proposes {{an optical}} {{encryption}} and decryption system for OFB(Output Feedback <b>Block)</b> <b>encryption</b> algorithm. The proposed scheme uses a dual-encoding technique {{in order to}} implement optical XOR logic operation. Also, the proposed method provides more enhanced security strength than the conventional electronic OFB method due to the huge security key with 2 -dimensional array. Finally, computer simulation results of encryption and decryption are shown to verify the proposed method, and hence the proposed method {{makes it possible to}} implement more effective and stronger optical <b>block</b> <b>encryption</b> system with high-speed performance and the benefits of parallelism...|$|E
40|$|s-??????, ??? ???? ???????? ???? ??????, ?? ?????, ?? ???????????? ??????? ????? ???????? ??? ??????. ????? ???????? ??????????? ????????? ??? ???????? ??????????. ???????? ?????????? ?????????? ??????????? ????????? ??????????? ????????? ??????? ????????? ????????? ??????????, ?, ????, ? ?????? ?????????. To {{estimate}} a {{block cipher}} {{resistance to the}} differential cryptanalysis and its various modifications, as a rule, {{it is necessary to}} obtain the upper bounds of the round differential average probability. Round functions of most of the modern <b>block</b> <b>encryption</b> algorithms (e. g. AES, GOST 28147, "Kalina") contain the composition of the key adder, substitution blocks, and the operator, which is linear over F? or some its extension. Therefore, the problem of obtaining upper bounds for block ciphers resistance is reduced to the problem of constructing upper bounds for the average probability of such compositions, or consists it as a subtask. In this work, the upper bounds are obtained for the integer differentials average probability of maps which are compositions of the key adder, substitution blocks, and the linear (over some ring) operator. The parameters of s-blocks, on which these bounds are depended, are defined and conditions, to ensure the least possible values of these parameters, are given. Obtained results allow us to analyze the differential properties of the round function of <b>block</b> <b>encryption</b> algorithm and therefore the differential properties of the whole <b>block</b> <b>encryption</b> algorithms-??????, ?? ??????? ??????? ?????? ??????, ? ???????, ?????????????? ??? ????? ??????? ???????? ???? ??????????. ?????????? ?????????? ????????? ????????????? ?????????? ???????? ????????? ??????? ???????? ????????? ??????????, ?, ?????????????, ? ????? ?????????...|$|E
40|$|Good {{cryptographic}} systems {{should always}} be designed {{so that they are}} as difficult to break as possible. This research will concentrate on increasing the complexity of <b>block</b> cipher <b>encryption.</b> This complexity could be done by building a dynamic pool that consists of thousands of fused random bits; these bits come from previously used key and many other resources. Two fusion methods are proposed to generate the block cipher keys. The first method is by using Artificial Neural Network (ANN) and the second one by using genetic Algorithm (GA). For these two methods we introduce an example for Data Encryption Standard (DES) algorithm. Hamming distance function is used as threshold for testing the reliability of the keys in the proposed methods. This research also proposed a method for generating the sub-keys for the Blowfish algorithm. Key words: <b>block</b> cipher <b>encryption,</b> key generation framework...|$|R
3000|$|... (see Figure 1). The {{encryption}} scheme {{must ensure}} that the encrypted data and encrypted key are not separable in ciphertext, so that any modification of the encrypted data also destroys the key. Such message integrity is guaranteed, for example, by the offset code-book (OCB) mode [15] of <b>block</b> cipher <b>encryption.</b> The encrypted packet is then broadcast to all nodes.|$|R
30|$|For each RS range, C_RS {{needs to}} perform the steps {{corresponding}} to RS in Algorithm  1 (specifically Lines 10, 18 and 19) to map the input range to a range on the encrypted domain. All these steps can be directly performed since it has the keys for OPE and PPE and no <b>block</b> cipher <b>encryptions</b> are needed.|$|R
40|$|AbstractEfficient {{substitution}} boxes have crucial {{importance in}} the design of cryptographically strong modern <b>block</b> <b>encryption</b> algorithms. They are the only nonlinear blocks that decide the security strength of entire cryptosystem. In this paper, a meta-heuristic approach based on Ant Colony Optimization and chaos is put forward to retrieve a suitable configuration of strong 8 × 8 substitution box. The optimization is carried out by transforming initial S-box to travelling salesman problem through edge matrix. The cryptographic strength of optimized S-box is investigated against standard tests such as bijectivity, nonlinearity, strict avalanche criterion, output bits independence criterion and differential approximation probability. The performance comparison of generated S-box with some recent chaos-based S-boxes evidently proves that the proposed scheme is proficient to discover strong nonlinear component of <b>block</b> <b>encryption</b> systems...|$|E
40|$|Abstract: In {{the power}} system for {{wireless}} sensor networks special working environment. The net works in special environment, the node, with the characteristics of small bulk, the little memory resource, lower operation and little energy, can not be reused, the wireless network thus has special requirements for the security. Based {{on the characteristics of}} {{wireless sensor networks}} was proposed based on chaotic key <b>block</b> <b>encryption</b> algorithm. Based on the characteristics of wireless sensor networks was proposed based on chaotic key <b>block</b> <b>encryption</b> algorithm. Chaos expansion algorithm uses integer keys, the improved RC 6 encryption plaintext shift operation, use cipher text feedback modify the control parameters to the relevant key and cipher text, effective against plaintext attack. The simulation results show that the security of the algorithm is high and fit for WSN...|$|E
40|$|This paper {{presents}} a simple yet e ective method for transforming Boolean functions {{that do not}} satisfy the strict avalanche criterion (SAC) into ones that satisfy the criterion. Such a method has {{a wide range of}} applications in designing cryptographically strong functions, including substitution boxes (S-boxes) employed by common key <b>block</b> <b>encryption</b> algorithms...|$|E
40|$|NIST has {{considered}} {{the performance of}} AES candidates on smart-cards as an important selection criterion and many submitters have highlighted the compactness and efficiency of their submission on low end smart cards. However, in light of recently discovered power based attacks, we strongly argue that evaluating smart-card suitability of AES candidates requires a very cautious approach. We demonstrate that straightforward implementations of AES candidates on smart cards, are highly vulnerable to power analysis and readily leak away all secret keys. To illustrate our point, we describe a power based attack on the Twofish Reference 6805 code which we implemented on a ST 16 smart card. The attack required power samples from only 100 independent <b>block</b> <b>encryptions</b> to fully recover the 128 -bit secret key. We also describe how all other AES candidates are susceptible to similar attacks. We review the basis of power attacks and suggest countermeasures for a secure implementation. Unf [...] ...|$|R
30|$|Encryption: This module {{provides}} the document and index encryption functionality. Figure  3 shows {{the framework for}} the implementation of the SSE- 2 Encryption module. First, the key generator is initiated to generate keys. Since symmetric key generation does not require much computational power, we assume that the key generator is located at the user device. This resolves the key distribution issue. The key generation is a one-time process to generate and store the keys. After the key generation, a user inputs a set of document for the encryption and index creation. When user inputs the document set, the Encryption module uses the Keyword Extractor block to pull out the keyword and builds an index of all the words in the document. After keyword extraction, input documents and the document index are fetched to the <b>Encryption</b> <b>block.</b> The <b>Encryption</b> <b>block</b> uses the keys generated by the key generator to create the encrypted document set and encrypted document index. Concurrently, the Encryption block also creates a filename mapping object/ filename index which contains the mapping of document IDs to the corresponding original filenames and extensions. This is stored in plaintext at the user device. Finally, the encrypted files are uploaded to the server.|$|R
5000|$|... geli is a <b>block</b> device-layer disk <b>encryption</b> system {{written for}} FreeBSD, {{introduced}} in version 6.0. It utilises the GEOM disk framework. It {{was designed and}} implemented by Paweł Jakub Dawidek.|$|R
40|$|Abstract- Data {{communication}} uses RSA for key {{exchange and}} IDEA for <b>block</b> <b>encryption.</b> The presented design employs both modular arithmetic and IDEA {{using the same}} 96 -bit ALU for calculations. The one chip 1. 0 µm 104 mm 2 CMOS design can also generate and hold keys for asymmetric key exchange systems and has internal self-test. I...|$|E
40|$|Even, Goldreich and Micali showed at Crypto' 89 {{that the}} {{existence}} of signature schemes secure against known message attacks implies the existence of schemes secure against adaptively chosen message attacks. Unfortunately, this transformation leads to a rather impractical scheme. We exhibit a similar security amplification, which takes the given scheme to a new signature scheme that is not even existentially forgeable under adaptively chosen message attacks. Additionally, however, our transformation will be practical: The complexity of the resulting scheme is twice that of the original scheme. The principles of both transformations carry over to <b>block</b> <b>encryption</b> systems. It is shown how they can be used to convert a <b>block</b> <b>encryption</b> system secure against known plaintext attacks to a system secure against chosen plaintext attacks. For both schemes it is shown that if the transformed scheme can be broken given a number, T, of encryptions of adaptively chosen plaintexts, then the [...] ...|$|E
40|$|Data {{communication}} uses RSA for key {{exchange and}} IDEA for <b>block</b> <b>encryption.</b> The presented design employs both modular arithmetic and IDEA {{using the same}} 96 -bit ALU for calculations. The one chip 1. 0 m 104 mm 2 CMOS design can also generate and hold keys for asymmetric key exchange systems and has internal self-test. I. INTRODUCTION Data Encryption based on asymmetric key exchange algorithms and symmetric <b>block</b> <b>encryption</b> {{has been used in}} data communications for many years. These systems usually consist of general purpose processor and some additional logic to speed up modular calculations. As the key generation for RSA [RSA 78] is complicated and time-consuming most hardware implementations use externally generated keys. This presents serious security problem connected with the possibility to access sensitive data. If the key generation, inversion and the key exchange field handling can be done in a single tamper-proof device, {{there is no need to}} enable user access to these procedur [...] ...|$|E
50|$|For example, a <b>block</b> cipher <b>encryption</b> {{algorithm}} {{might take}} a 128-bit block of plaintext as input, and output a corresponding 128-bit block of ciphertext. The exact transformation is controlled using a second input - the secret key. Decryption is similar: the decryption algorithm takes, in this example, a 128-bit block of ciphertext together with the secret key, and yields the original 128-bit block of plain text.|$|R
50|$|One use {{of these}} {{instructions}} {{is to improve the}} speed of applications doing <b>block</b> cipher <b>encryption</b> in Galois/Counter Mode, which depends on finite field GF(2k)) multiplication, which can be implemented more efficiently with the new CLMUL instructions than with the traditional instruction set. Another application is the fast calculation of CRC values, including those used to implement the LZ77 sliding window DEFLATE algorithm in zlib and pngcrush.|$|R
3000|$|The CEBP we propose, uses {{commutative}} encryption as {{a building}} <b>block.</b> An <b>encryption</b> scheme is commutative if a ciphertext that is encrypted by several keys can be decrypted {{regardless of the}} order of decryption keys. Formally, denote the encryption algorithm by E and the decryption algorithm by D. The encryption scheme is commutative if for every plaintext message m and every two keys k 1,k 2 if [...]...|$|R
