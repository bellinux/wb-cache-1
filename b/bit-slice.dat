106|76|Public
25|$|Intel {{had created}} the first {{microprocessor}}, its 4-bit 4004, in 1971. By 1975, AMD entered the microprocessor market with the Am9080, a reverse-engineered clone of the Intel 8080, and the Am2900 <b>bit-slice</b> microprocessor family. When Intel began installing microcode in its microprocessors in 1976, it entered into a cross-licensing agreement with AMD, granting AMD a copyright license to the microcode in its microprocessors and peripherals, effective October 1976.|$|E
25|$|The Nord-100 was {{introduced}} in 1979, which was specialized at flexibility and focused on administrative applications. When Digital launched their VAX-11 in 1977, Norsk Data had the Nord-5 32-bit computer ready for CERN. As the VAX-11 was 32-bit and regarded as a superminicomputer, Norsk Data did not initially {{see it as a}} competitor since the Nord-5 had much better processing power. Nord-50 had similar processing power to the Nord-5, but was not a general-purpose computer. The 32 bit computer used a Nord-10 front processor that ran the SINTRAN III operating system. Development of the ND-500 started in 1978 and had so fundamental changes to the system architecture (was not made from <b>bit-slice</b> components but microprammed with a new instruction set) that all software had to be rewritten - except for the SINTRAN. The computer was launched in 1981, but with fundamental shortcomings imposed by the OS It was much faster than the VAX, but did not meet the general customers' expectation of being a multi-purpose computer. Later models improved the performance and tweaking of the system allowed it to become a multipurpose system.at the performance of a special purpose super computer as sold by Cray. A major contract with the ND-500 was the Joint European Torus project, which took delivery of twenty-seven ND-100 and -500 units. Development of the ND-5000 started before the ND-500 was completed. The design was changed to become more modular; this increased the development costs, but reduced production costs and increased scalability. On the ND5000, components were placed in cards that were interconnected, initially to simplify cooling but also to enable the high clock frequency If an electric current is switched at a clock frequency of 1GHz, it travel about one foot per cycle, so 10cm is a delay of a clock cycle at 3GHz. The ND-500 computers had timing problems caused by wire-distance, and going faster just required everything to be close.|$|E
2500|$|The {{earliest}} microprocessors {{starting in}} 1970 were all [...] "MOS microprocessors"â€”i.e., fabricated entirely from PMOS logic or fabricated entirely from NMOS logic. In the 1970s, [...] "MOS microprocessors" [...] were often contrasted with [...] "CMOS microprocessors" [...] and [...] "bipolar <b>bit-slice</b> processors".|$|E
40|$|After a short {{review of}} the {{hardware}} and/or software tools {{for the development of}} single-chip, fixed instruction set microprocessor-based systems the author focuses on the software tools for designing systems based on microprogrammed <b>bit-sliced</b> microprocessors. Emphasis is placed on meta-microassemblers and simulation facilities at the register-transfer-level and architecture level. The author reviews available meta-microassemblers giving their most important features, advantages and disadvantages. He also makes extensions to higher-level microprogramming languages and associated systems specifically developed for <b>bit-slices.</b> In the area of simulation facilities the author first discusses the simulation objectives and the criteria for choosing the right simulation language. He concentrates on simulation facilities already used in <b>bit-slices</b> projects and discusses the gained experience, and concludes by describing the way the Signetics meta-microassembler and the ISPS simulation tool have been employed in the design of a fast microprogrammed machine, called MICE, made out to ECL <b>bit-slices.</b> (35 refs) ...|$|R
40|$|<b>Bit-slicing</b> is a non-conventional {{implementation}} {{technique for}} cryptographic software where an n-bit processor is {{considered as a}} collection of n 1 -bit execution units operating in SIMD mode. Particularly when implementing symmetric ciphers, the <b>bit-slicing</b> approach has several advantages over more conventional alternatives: it often allows one to reduce memory footprint by eliminating large look-up tables, and it permits more predictable performance characteristics that can foil time based side-channel attacks. Both features are attractive for mobile and embedded processors, but the performance overhead that results from <b>bit-sliced</b> implementation often represents a significant disadvantage. In this paper we describe a set of light-weight Instruction Set Extensions (ISEs) that can improve said performance while retaining all advantages of <b>bit-sliced</b> implementation. Contrary to other crypto-ISE, our design is generic and allows for a high degree of algorithm agility: we demonstrate applicability to several well-known cryptographic primitives including four block ciphers (DES, Serpent, AES, and PRESENT), a hash function (SHA- 1), as well as multiplication of ternary polynomials...|$|R
40|$|The authors present three {{distinct}} serial-input serial-output architectures: {{two for the}} computation of discrete convolution (<b>bit-sliced</b> and polyphase convolvers) and one for polynomial evaluation (polynomiers). These devices operate in serial fixed point natural arithmetic. All architectures are characterized by a <b>bit-sliced</b> structure that makes possible easy design and testing. The regular, uniform <b>bit-slices</b> also give the possibility of introducing functional reconfigurability and fault tolerance. For all these reasons, the proposed three architectures are good candidates for VLSI and WSI (wafer scale integration) implementation. Prototypal layouts, testing procedures, and statistical analysis {{have been developed for}} the evaluation of the architecture performances, the introduction of fault tolerance, and the study of the obtained fault coverage, reliability, and fabrication yield...|$|R
2500|$|In {{the early}} 1980s, the {{availability}} of <b>bit-slice</b> and 16-bit microprocessors started to revolutionize high-resolution computer graphics terminals which now increasingly became intelligent, semi-standalone and standalone workstations. Graphics and application processing were increasingly migrated to the intelligence in the workstation, rather than continuing to rely on central mainframe and mini-computers. Typical of the early move to high-resolution computer graphics intelligent workstations for the computer-aided engineering market were the Orca 1000, 2000 and 3000 workstations, developed by Orcatech of Ottawa, a spin-off from Bell-Northern Research, and led by David Pearson, an early workstation pioneer. The Orca 3000 was based on Motorola 68000 and AMD <b>bit-slice</b> processors and had Unix as its operating system. It was targeted squarely at the sophisticated end of the design engineering sector. Artists and graphic designers {{began to see the}} personal computer, particularly the Commodore Amiga and Macintosh, as a serious design tool, one that could save time and draw more accurately than other methods. [...] The Macintosh remains a highly popular tool for computer graphics among graphic design studios and businesses. Modern computers, dating from the 1980s, often use graphical user interfaces (GUI) to present data and information with symbols, icons and pictures, rather than text. Graphics are one of the five key elements of multimedia technology.|$|E
5000|$|... 4060: {{entry-level}} model based on AMD Am2900 <b>bit-slice</b> processors ...|$|E
5000|$|Digital System Design with LSI <b>Bit-Slice</b> Logic. New York: Wiley, 1980.|$|E
40|$|Our {{research}} {{extends the}} <b>bit-sliced</b> signature organization by introducing a partial evaluation approach for queries. The partial evaluation approach minimizes the response time {{by using a}} subset of the on-bits of the query signature. A new signature file optimization method, Partially evaluated <b>Bit-Sliced</b> Signature File (P-BSSF), for multi-term query environments using the partial evaluation approach is introduced. The analysis shows that, with 14 % increase in space overhead, P-BSSF provides a query processing time improvement of more than 85 % for multi-term query environments with respect to the best performance of the <b>bit-sliced</b> signature file (BSSF) method. Under the sequentiality assumption of disk blocks, P-BSSF provides a desirable response time of 1 second for a database size of one million records with a 28 % space overhead. Due to partial evaluation, the desirable response time is guaranteed for queries with several terms...|$|R
40|$|Cataloged from PDF {{version of}} article. Our {{research}} extends the <b>bit-sliced</b> signature organization by introducing a partial evaluation approach for queries. The partial evaluation approach minimizes the response time {{by using a}} subset of the on-bits of the query signature. A new signature file optimization method, Partially evaluated <b>Bit-Sliced</b> Signature File (P-BSSF), for multi-term query environments using the partial evaluation approach is introduced. The analysis shows that, with 14 % increase in space overhead, P-BSSF provides a query processing time improvement of more than 85 % for multi-term query environments with respect to the best performance of the <b>bit-sliced</b> signature file (BSSF) method. Under the sequentiality assumption of disk blocks, P-BSSF provides a desirable response time of 1 second for a database size of one million records with a 28 % space overhead, Due to partial evaluation, the desirable response time is guaranteed for queries with several terms...|$|R
40|$|The {{read-mostly}} {{environment of}} data warehousing {{makes it possible}} to use more complex indexes to speed up queries than in situations where concurrent updates are present. The current paper presents a short review of current indexing technology, including row-set representation by Bitmaps, and then introduces two approaches we call <b>Bit-Sliced</b> indexing and Projection indexing. A Projection index basically materializes all values of a column in RID order, and a <b>Bit-Sliced</b> index essentially takes an orthogonal bit-by-bit view of the same data. While some of these concepts started with the MODEL 204 product, and both <b>Bit-Sliced</b> and Projection indexing are now fully realized in Sybase IQ, this is the first rigorous examination of such indexing capabilities in the literature. We compare algorithms that become feasible with these variant index types against algorithms using more conventional indexes. The analysis demonstrates important performance advantages for variant indexes in some types [...] ...|$|R
5000|$|Royal Aircraft Establishment Farnborough MIL-STD-1750A {{implementation}} in AMD 2901 <b>bit-slice</b> technology.|$|E
50|$|The ND-100 was {{implemented}} using medium-scale integration (MSI) logic and <b>bit-slice</b> processors.|$|E
5000|$|Soviet <b>bit-slice</b> {{microprocessor}} modules (late 1970s) [...] {{produced as}} Ðš587, Ðš588 [...] and Ðš1883 (U83x in East Germany) ...|$|E
50|$|The Motorola MC10800 was a 4-bit <b>bit-sliced</b> {{processor}} {{designed by}} Motorola and introduced in 1979. It was implemented in ECL logic and {{was part of}} the M10800 family.|$|R
40|$|The Advanced Encryption Standard is used {{in almost}} every new {{embedded}} application that needs a symmetric-key ci-pher. In such embedded applications, high-performance as well as resistance against implementation attacks is manda-tory. In this paper, we compare and contrast three different software implementations of AES. The first two are based on cryptographic lookup tables, while the third uses <b>bit-slicing.</b> We analyze the performance and side-channel resistance of each implementation on two different FPGA platforms, one based on a PowerPC processor, and the second based on a LEON- 3 soft-core processor. Our measurements show that, on embedded platforms, a <b>bit-sliced</b> AES implementation does not always outperform a lookup-table based AES im-plementation. We also present {{a detailed analysis of}} the side-channel resistance and the source of side-channel leak-age, and show that our <b>bit-sliced</b> implementation has eight times more side-channel leakage than the lookup-table im-plementations. Hence, we conclude that a variation on the implementation style for embedded software implementation of AES will not only affect performance, but also embedded system security...|$|R
40|$|Abstract: The {{read-mostly}} {{environment of}} data warehousing {{makes it possible}} to use more complex indexes to speed up queries than in situations where concurrent updates are present. The current paper presents a short review of current indexing technology, including row-set repre-sentation by Bitmaps, and then introduces two approaches we call <b>Bit-Sliced</b> indexing and Projection indexing. A Projection index basically materializes all values of a column in RID or-der, and a <b>Bit-Sliced</b> index essentially takes an orthogonal bit-by-bit view of the same data. While some of these concepts started with the MODEL 204 product, and both <b>Bit-Sliced</b> and Projection indexing are now fully realized in Sybase IQ, this is the first rigorous examination of such indexing capabilities in the literature. We compare algorithms that become feasible with these variant index types against algorithms using more conventional indexes. The analysis demonstrates important performance advantages for variant indexes in some types of SQL aggre-gation, predicate evaluation, and grouping. The paper concludes by introducing a new method whereby multi-dimensional Group By queries, reminiscent of OLAP or Datacube queries but with more flexibility, can be very efficiently performed. 1. Introduct io...|$|R
5000|$|A600+ - {{based on}} Am2900 <b>bit-slice</b> processor, {{supports}} code and data separation, optional ECC (error correcting) memory. Codename: LIGHTNING ...|$|E
50|$|Dave Sherman {{developed}} the custom <b>bit-slice</b> ('pepperoni') 3D co-processor that {{allowed for a}} throughput of approximately 2,000 polygons per second.|$|E
5000|$|A700 - {{based on}} AMD AM2903 <b>bit-slice</b> processor, {{optional}} hardware floating point processor, 1MIPS, 204kFLOPS, microprogramming, optional ECC memory. Codename: PHOENIX ...|$|E
5000|$|Bit slicing, {{although}} not called {{that at the}} time, was also used in computers before large scale integrated circuits (LSI, the predecessor to today's VLSI, or very-large-scale integration circuits). The first <b>bit-sliced</b> machine was EDSAC 2, built at the University of Cambridge Mathematical Laboratory in 1956-1958.|$|R
40|$|We propose an ecient {{data path}} {{synthesis}} algorithm which generates <b>bit-sliced</b> layouts. Since data path circuits have spe-cial characteristics which are dierent {{from those of}} random logic circuits, the dedicated synthesis system is required for ef-cient layouts. Our main goal in the data path synthesis is to satisfy the timing constraints of circuits {{as well as to}} re-duce layout areas. Timing-driven placement and over-the-cell routing techniques are developed to generate data path modules. Also, signal interfaces between <b>bit-slices</b> are carefully considered to further reduce layout areas. Our synthesis techniques take advantage of the common characteristics of data path structures under timing constraints and applies mixed integer linear pro-gramming approach to solve the problem. The superior results from our data path synthesis system are demonstrated through comparison with the layout results with the simulated annealing technique...|$|R
50|$|In {{more recent}} times, the term <b>bit-slicing</b> was re-coined by Matthew Kwan {{to refer to}} the {{technique}} of using a general purpose CPU to implement multiple parallel simple virtual machines using general logic instructions to perform Single Instruction Multiple Data (SIMD) operations. This technique is also known as SIMD Within A Register (SWAR).|$|R
5000|$|DECSYSTEM-2020: <b>bit-slice</b> {{processor}} {{with up to}} 512 kilowords of solid state RAM (The ADP OnSite version of the DECSYSTEM-2020 supported 1 MW of RAM) ...|$|E
50|$|Prior to {{the advent}} of {{stand-alone}} DSP chips discussed below, most DSP applications were implemented using <b>bit-slice</b> processors. The AMD 2901 <b>bit-slice</b> chip with its family of components was a very popular choice. There were reference designs from AMD, but very often the specifics of a particular design were application specific. These bit slice architectures would sometimes include a peripheral multiplier chip. Examples of these multipliers were a series from TRW including the TDC1008 and TDC1010, some of which included an accumulator, providing the requisite multiply-accumulate (MAC) function.|$|E
50|$|Later {{models were}} based on 68010, 68020, 68030 and 68040 {{processors}} which had native support for virtual memory. Some workstations had <b>bit-slice</b> CPU implementations that were instruction set compatible with the 68000.|$|E
40|$|Bitmaps {{are popular}} indexes for data {{warehouse}} (DW) applications and most database management systems offer them today. This paper proposes query optimization strategies for selections using bitmaps. Both continuous and discrete selection criteria are considered. Query optimization strategies are categorized into static and dynamic. Static optimization strategies discussed are the optimal design of bitmaps, and algorithms based on tree and logical reduction. The dynamic optimization discussed is {{the approach of}} inclusion and exclusion for both <b>bit-sliced</b> indexes and encoded bitmap indexes. 1 Introduction Bitmap indexing has become a promising technique for query processing in DWs. Variations of bitmap indexes include <b>bit-sliced</b> indexes [14, 3], encoded bitmap indexes (EBI) [18], bitmapped join indexes [13], range-based bitmap indexes [20], and others[16]. For query operations, such as selections, aggregates, and joins, query evaluation algorithms using bitmaps have been proposed in [...] ...|$|R
40|$|A {{synthesis}} {{system called}} HYPER is proposed for real time applications. HYPER takes a flow graph description of an algodfinn as the input and performs scheduling, resource allocation, optimizations, and transformations. A dedicated <b>bit-sliced</b> data palh cluster {{is generated by}} the systa and the layouts can be further generated through the LAGER IV system...|$|R
40|$|Monitoring traffic {{payloads}} {{to detect}} the occurrence of suspicious patterns {{has proven to be}} a useful and necessary tool for network security. Bit-splitting breaks the problem of monitoring payloads to detect such patterns into several parallel components, each of which searches for a particular bit pattern. We analyze bit-splitting as applied to Aho-Corasick style string matching and present a formal treatment of <b>bit-slicing</b> to prove correctness and to provide bounds on the NFA to DFA conversion of the Aho-Corasick type machine used for bit-splitting. The problem can be viewed as the recovery of a special class of regular languages over product alphabets from a collection of homomorphic images. Furthermore, in an attempt to extend the flexibility and applicability of the original bit-splitting algorithm, we explore the expressiveness and limitations of <b>bit-slicing</b> with respect to wildcard matching applications. Keywords: Packet scanning; bit-split languages; NFA-DFA conversion. 1...|$|R
5000|$|AES Data Systems C20 Multiuser Word Processors. AES of Montreal {{designed}} {{a series of}} modules and systems based on their AES-800 <b>bit-slice</b> processors. 8- 12- and 16-bit buses {{were part of the}} design.|$|E
5000|$|The Arithmetical and Logical Unit {{gate array}} (ALU, {{also known as}} the [...] "BUFALU"). Replaced four Am2901 <b>bit-slice</b> processors, and some {{additional}} registers like the data bus register the general purpose register, and the internal register block.|$|E
5000|$|To {{simplify the}} circuit {{structure}} {{and reduces the}} hardware cost of quantum computers (proposed to run the MIPS32 instruction set) a 50 GHz superconducting [...] "4-bit <b>bit-slice</b> arithmetic logic unit (ALU) for 32-bit rapid single-flux-quantum microprocessors was demonstrated." ...|$|E
40|$|Submitted {{on behalf}} of EDAA ([URL] audienceIn this {{paper we propose a}} fully-parallel, <b>bit-sliced</b> unified {{architecture}} designed to perform modular multipication/exponentiation and GF(2 ^M) multiplication as the core operations of RSA and EC cryptography. The architecture uses radix- 2 Montgomery technique for modular arithmetic, and a radix- 4 MSD-first approach for GF(2 ^M) multiplication. To the best of our knowledge, it is the first unified proposal based on such a hybrid approach. The architecture structure is <b>bit-sliced</b> and is highly regular, modular, and scalable, as virtually any datapath length can be obtained at a linear cost in terms of hardware resources and no costs in terms of critical path. Our proposal outperforms all similar unified architectures found in the technical literature in terms of clock count and critical path. The architecture has been implemented on a Field-Programmable Gate Array (FPGA) device. A highly compact and efficient design was obtained taking advantage of the architectural characteristics...|$|R
40|$|This paper {{deals with}} a GaAs data-path {{compiler}} for the public domain ALLIANCE CAD SYSTEM[l]. Based upon macro cells generators, cells libraries, and software tools, it provides a fast and easy way to describe and implement <b>bit-sliced</b> structures for DCFL logic. The use of over cells-routing, power supplies sharing and multiple access termiÂ­nals coupled to a symbolic approach leads to a high density portable layout...|$|R
50|$|The MPEG-4 Audio Version 2 (ISO/IEC 14496-3:1999/Amd 1:2000) defined new audio object types: the low delay AAC (AAC-LD) object type, <b>bit-sliced</b> {{arithmetic}} coding (BSAC) object type, parametric audio coding using harmonic and individual line plus noise and error resilient (ER) versions of object types. It also defined four new audio profiles: High Quality Audio Profile, Low Delay Audio Profile, Natural Audio Profile and Mobile Audio Internetworking Profile.|$|R
