68|413|Public
2500|$|On April 9, 2002 on the Hanover-Berlin {{high-speed}} rail line a fault in the LZB line center computer brought four LZB controlled trains {{to a stop}} with two trains in each line direction being halted in the same signalling block (Teilblockmodus - divided block control). When the computer was rebooted it signaled [...] to the trains in front and [...] to the following trains. The drivers of the following trains did not proceed however - one driver saw the train {{in front of him}} and the other driver double-checked with the operations center which had warned him prior to departure, so two possible collisions were averted. As a consequence of this incident, the two mainline train operators (DB Cargo and DB Passenger Transport) issued an instruction to their drivers to be especially cautious during periods of LZB outage when the system is running in divided <b>block</b> <b>mode.</b> The cause was a software error.|$|E
50|$|In {{multiword}} {{transfer mode}} (<b>Block</b> <b>mode)</b> once transfer has begun {{it will continue}} until all words are transferred.|$|E
5000|$|XEDIT is {{a visual}} editor for VM/CMS using <b>block</b> <b>mode</b> IBM 3270 {{terminals}}. (Line-mode terminals are also supported.) ...|$|E
5000|$|A {{cycloconverter}} (CCV) or a cycloinverter converts {{a constant}} voltage, constant frequency AC waveform to another AC waveform {{of a lower}} frequency by synthesizing the output waveform from segments of the AC supply without an intermediate DC link ( [...] and [...] ). There are two main types of CCVs, circulating current type or <b>blocking</b> <b>mode</b> type, most commercial high power products being of the <b>blocking</b> <b>mode</b> type.|$|R
2500|$|Reverse <b>blocking</b> <b>mode</b> — Voltage {{is applied}} in the {{direction}} that would be blocked by a diode ...|$|R
5000|$|Stream ciphers {{can be built}} using block ciphers. OFB-mode and CTR <b>mode</b> are <b>block</b> <b>modes</b> {{that turn}} a block cipher into a stream cipher.|$|R
5000|$|Depending on its generation, the Q-bus {{contains}} 16, 18, or 22 BDAL (Bus Data/Address Line) lines. 16, 18, or 22 BDAL {{lines are}} used for the physical address portion of each bus cycle. Eight or 16 DBAL lines are then re-used for the data portion(s) of each bus cycle. Newer generations of the bus allow [...] <b>block</b> <b>mode</b> transfer where a single bus address can be followed {{by more than one}} data cycle (with the transfers taking place at consecutive bus addresses). Because the address portion of each bus cycle can not transfer data, the use of <b>block</b> <b>mode</b> means fewer address cycles and more time for data cycles, allowing increased bus data transfer bandwidth.|$|E
50|$|George 3 was a mixed batch {{and online}} system. Jobs could be run from cards or tape {{in the same}} manner as George 2, or interactively from MOP (Multiple Online Processing) {{terminals}}, either simple Teletype Model 33 ASR terminals or <b>block</b> <b>mode</b> VDU terminals.|$|E
50|$|The Multi-Line Adapter would DMA {{the data}} into main memory in a linked list format. Consequently, the {{processors}} didn't {{have to deal}} with serial I/O interrupt issues. This was taken care of by the fact that <b>block</b> <b>mode</b> terminals were the only type supported.|$|E
2500|$|Forward <b>blocking</b> <b>mode</b> — Voltage {{is applied}} in the {{direction}} that would cause a diode to conduct, but the thyristor has not been triggered into conduction ...|$|R
40|$|International audience— A novel robotic device, {{aimed at}} {{assisting}} a urol-ogist in performing prostate biopsies guided by an endorectal ultrasound probe, is described. The paper describes the robot kinematics and the actuation system. The actuation system combines electromagnetic brakes, balancing springs, and electrical motors with cable transmissions. The robot supports two modes of operation: the free mode, where the entire {{control of the}} probe movements is left to the urologist, and the <b>blocked</b> <b>mode,</b> where the robot precisely maintains the probe at a given position and orientation {{with respect to the}} prostate. For the <b>blocked</b> <b>mode,</b> the set of specifications is antagonistic: firstly, a security constraint requires a low robot stiffness to allow to compliantly adapt to potential movements from the patient; secondly, a precision constraint requires a high robot stiffness {{in order to maintain the}} position and orientation of the probe in the presence of unmodeled external forces, when the robot is switched from the free <b>mode</b> to the <b>blocked</b> <b>mode.</b> A control strategy is developed to obtain this behavior. It combines an inner impedance controller with a relatively low stiffness and an outer intelligent position integrator that operates only during a limited period of time, when switching from the free <b>mode</b> to the <b>blocked</b> <b>mode.</b> Both in vitro and in cadavero experimental results show the efficiency of this approach...|$|R
40|$|AbstractThe {{problem of}} {{scheduling}} divisible loads in a single-level tree network is considered. All the earlier studies in divisible load scheduling consider the <b>blocking</b> <b>mode</b> of communication. In this paper, the nonblocking mode of communication is considered. Closed-form expression for the processing {{time in the}} nonblocking mode of communication is derived. Using this closed-form expression, this paper analytically proves {{a number of significant}} results on load sequencing and processor-link arrangement in a single-level tree network. It is shown that the performance measures of interest such as the processing time, idle time, and utilization of processors are better in the nonblocking mode of communication than in the <b>blocking</b> <b>mode</b> of communication...|$|R
50|$|Telenet {{supported}} remote concentrators for IBM 3270 family intelligent terminals, which communicated, via X.25 to Telenet-written {{software that}} ran in IBM 370x series front-end processors. Telenet also supported <b>Block</b> <b>Mode</b> Terminal Interfaces (BMTI) for IBM Remote Job Entry terminals supporting the 2780/3780 and HASP Bisync protocols.|$|E
50|$|Filenames in {{the source}} {{directory}} can be plain or encrypted in block or stream mode. <b>Block</b> <b>mode</b> obscures the filename length somewhat, while stream mode keeps them {{as short as}} possible, which might save space on the source directory's filesystem depending on how that filesystem manages the directory tree.|$|E
50|$|Keystreams {{are used}} in the {{one-time}} pad cipher and in most stream ciphers. Block ciphers {{can also be used to}} produce keystreams. For instance, CTR mode is a <b>block</b> <b>mode</b> that makes a block cipher produce a keystream and thus turns the block cipher into a stream cipher.|$|E
5000|$|There are two {{different}} repeat modes. In the single <b>block</b> repeat <b>mode,</b> the previous <b>block</b> is repeated a specified number of times. In the two <b>block</b> repeat <b>mode,</b> the previous two blocks are repeated a specified number of times.|$|R
50|$|Block ciphers {{can also}} be used in other {{cryptographic}} protocols. They are generally used in modes of operation similar to the <b>block</b> <b>modes</b> described here. As with all protocols, to be cryptographically secure, care must be taken to build them correctly.|$|R
40|$|In {{this paper}} modes of {{operation}} for block ciphers are considered. The focus is on a special class of <b>modes,</b> called the <b>block</b> chaining <b>modes.</b> We discuss modes with finite and infinite error propagation and propose the Accumulated <b>Block</b> Chaining (ABC) <b>mode</b> of the latter type. ABC is proposed for application for the Advanced Encryption Standard. Key words. <b>Block</b> Cipher, <b>Modes</b> of Operation, Advanced Encryption Standard...|$|R
50|$|A block-oriented {{terminal}} or <b>block</b> <b>mode</b> terminal {{is a type}} {{of computer}} terminal that communicates with its host in blocks of data, as opposed to a character-oriented terminal that communicates with its host one character at a time. The IBM 3270 is perhaps the most familiar implementation of a block-oriented terminal, but most mainframe computer manufacturers and several other companies produced them.|$|E
50|$|Other designs {{use what}} are {{believed}} to be true random bits as the key for a high quality block cipher algorithm, taking the encrypted output as the random bit stream. Care must be taken in these cases to select an appropriate <b>block</b> <b>mode,</b> however. In some implementations, the PRNG is run for a limited number of digits, while the hardware generating device produces a new seed.|$|E
50|$|Systems {{programming}} {{was done}} in SPL (System Programming Language), an ALGOL-like language, but allowing inline assembler, and other {{direct access to the}} instruction set. The standard terminals for the HP 3000 were the HP 2640 series, which supported <b>block</b> <b>mode</b> data entry from forms (like IBM's mainframe-based CICS), as well as character mode. By the 1980s the computer had gained the ability to use both PCs and Macs as system terminals.|$|E
50|$|Electronic {{codebook}} and cipher-block chaining (CBC) mode {{are examples}} of <b>block</b> cipher <b>mode</b> of operation. <b>Block</b> cipher <b>modes</b> for symmetric-key encryption algorithms require plain text input that is a multiple of the block size, so messages {{may have to be}} padded to bring them to this length.|$|R
40|$|This paper {{proposes a}} fast inter {{prediction}} mode decision method for H. 264. By pre-encoding a down-sampled small image, the candidate inter <b>block</b> <b>modes</b> {{can be reduced}} to a small subset. The experimental result shows that our algorithm can reduce nearly 50 % of encoding time with PSNR decrease less than 0. 2 dB. 1...|$|R
5000|$|... <b>block</b> cipher <b>modes</b> of {{operation}} such as ECB, CBC, CTR and XTS; ...|$|R
5000|$|There is {{currently}} a shift to use streaming mode of operation instead of <b>block</b> <b>mode</b> of operation. An example of streaming mode encryption is the counter mode of operation [...] Streaming modes of operation can encrypt and decrypt messages of any size and therefore do not require padding. More intricate ways of ending a message such as ciphertext stealing or residual block termination avoid the need for padding.|$|E
5000|$|In {{asynchronous}} terminals {{data can}} flow {{in any direction}} at any time. In synchronous terminals a protocol controls who may send data when. IBM 3270-based terminals used with IBM mainframe computers are an example of synchronous terminals. They operate in an essentially [...] "screen-at-a-time" [...] mode (also known as <b>block</b> <b>mode).</b> Users can make numerous changes to a page, before submitting the updated screen to the remote machine as a single action.|$|E
5000|$|There is a {{distinction}} between the [...] and the [...] keys. In some multiple-mode terminals, that can switch between modes, pressing the [...] key when not in <b>block</b> <b>mode</b> does not do the same thing as pressing the [...] key. Whilst the [...] key will cause an input line to be sent to the host in line-at-a-time mode, the [...] key will rather cause the terminal to transmit the contents of the character row where the cursor is currently positioned to the host, host-issued prompts and all.|$|E
50|$|NIST Special Publication 800-38G, Recommendation for <b>Block</b> Cipher <b>Modes</b> of Operation: Methods for Format-Preserving Encryption. This {{publication}} specifies {{two methods}} FF1 and FF3. Details on the proposals submitted for each {{can be found}} at the NIST <b>Block</b> Cipher <b>Modes</b> Development site, including patent and test vector information. Sample values are available for both FF1 and FF3.|$|R
5000|$|NIST Special Publication 800-38D, Recommendation for <b>Block</b> Cipher <b>Modes</b> of Operation: Galois/Counter Mode (GCM) and GMAC ...|$|R
40|$|This is an {{implementation}} of the Data Encryption Standard (DES) for the open-source computer software system, Sage. This only allows the encryption of a single 64 -bit plaintext with a 64 -bit key. It thus provides a foundation for the user to build up triple-DES, DES in standard NIST <b>block</b> <b>modes</b> (ECB, CBC etc), and for padding. None of these are provided in this implementation...|$|R
50|$|PCO {{acquisition}} hardware, {{in certain}} cases, may only {{consist of a}} standard sound card or even a game port, if only audio and low-frequency signals are involved, though in many cases it will be considerably more robust. The PCO can transfer data to the computer in two main ways — streaming, and <b>block</b> <b>mode.</b> In streaming mode the data is transferred to the PC in a continuous flow without any loss of data. The {{way in which the}} PCO is connected to the PC (e.g., IEEE1394, Ethernet, USB etc.) will dictate the maximum achievable speed and thereby frequency and resolution using this method. <b>Block</b> <b>mode</b> utilizes the on-board memory of the PCO to collect a block of data which is then transferred to the PC after the block has been recorded. The PCO hardware then resets and records another block of data. This process happens very quickly, but the time taken will vary according {{to the size of the}} block of data and the speed at which it can be transferred. This method enables a much higher sampling speed, but in many cases the hardware will not record data whilst it is transferring the existing block, meaning that some data loss will occur.|$|E
5000|$|<b>Block</b> <b>mode</b> (a.k.a. screen-at-a-time mode): In this mode, the {{terminal}} provides a local full-screen data function. The user can enter input into multiple fields {{in a form}} on the screen (defined to {{the terminal}} by the receiving system), moving the cursor around the screen using keys such as [...] and the arrow keys and performing editing functions locally using , , [...] and so forth. The terminal sends only the completed form, consisting of all the data entered on the screen, to the receiving system when the user presses an [...] key.|$|E
50|$|Different {{computer}} {{operating systems}} require {{different degrees of}} mode support when terminals are used as computer terminals. The POSIX terminal interface, as provided by Unix and POSIX-compliant operating systems, does not accommodate block-mode terminals at all, and only rarely requires the terminal itself to be in line-at-a-time mode, since the operating system is required to provide canonical input mode, where the terminal device driver in the operating system emulates local echo in the terminal, and performs line editing functions at the host end. Most usually, and especially so that the host system can support non-canonical input mode, terminals for POSIX-compliant systems are always in character-at-a-time mode. In contrast, IBM 3270 terminals connected to MVS systems are always required to be in <b>block</b> <b>mode.</b>|$|E
50|$|The <b>block</b> cipher <b>modes</b> ECB, CBC, OFB, CFB, CTR, and XTS provide confidentiality, {{but they}} do not protect against {{accidental}} modification or malicious tampering. Modification or tampering can be detected with a separate message authentication code such as CBC-MAC, or a digital signature. The cryptographic community recognized the need for dedicated integrity assurances and NIST responded with HMAC, CMAC, and GMAC. HMAC was approved in 2002 as FIPS 198, The Keyed-Hash Message Authentication Code (HMAC), CMAC was released in 2005 under SP800-38B, Recommendation for <b>Block</b> Cipher <b>Modes</b> of Operation: The CMAC Mode for Authentication, and GMAC was formalized in 2007 under SP800-38D, Recommendation for <b>Block</b> Cipher <b>Modes</b> of Operation: Galois/Counter Mode (GCM) and GMAC.|$|R
5000|$|ASCII <b>block</b> {{operating}} <b>mode</b> (except models 51 and 61, {{which were}} similar to the EBCDIC IBM 3270).|$|R
5000|$|NIST Special Publication 800-38C, Recommendation for <b>Block</b> Cipher <b>Modes</b> of Operation: the CCM Mode for Authentication and Confidentiality ...|$|R
