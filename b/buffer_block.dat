27|242|Public
50|$|Development {{brought new}} {{techniques}} and concepts, including its own hi-speed access method, network hierarchical data structures, windowing, and a <b>buffer</b> <b>block</b> concept {{referred to as}} granularity.|$|E
50|$|To {{initialize}} the counters, {{the microprocessor}} must write a control word (CW) in this register. This {{can be done}} by setting proper values for the pins of the Read/Write Logic block and then by sending the control word to the Data/Bus <b>Buffer</b> <b>block.</b>|$|E
5000|$|... 29 September 2016 - Hoboken, New Jersey The cab car of a NJ Transit Pascack Valley Line {{commuter}} train entering Hoboken Terminal overran the <b>buffer</b> <b>block</b> on track five at 8:45 AM. The train continued across the low-level passenger concourse connecting the platforms and {{slammed into a}} wall of the terminal building, causing serious structural damage. One person was killed and more than 100 were injured.|$|E
40|$|AbstractIn {{the recent}} times, Joint Resource Management (JMR) in {{heterogeneous}} environment {{has emerged as}} an important technology wherein bandwidth allocation to a user can be provided by different networks simultaneously. This is supported by Concurrent Multipath Transfer (CMT) algorithm to transfer data among two end-to-end paths of an mSCTP association in wireless mobile connectivity. SCTP based CMT technology can transmit data over multiple paths, thus achieving higher data transmission speed. The CMT, however, suffers with receiver <b>buffer</b> <b>blocking</b> problem in wireless mobile networks. A mobile CMT (mCMT) was introduced to further reduce the effect of <b>buffer</b> <b>blocking</b> but still there is a probability of receiver <b>buffer</b> <b>blocking</b> [1]. Receiver <b>buffer</b> <b>blocking</b> {{is caused by the}} loss of data due to various reasons. In this paper, we propose a novel theoretical concept called modified mobile CMT (m 2 CMT) to improve upon the performance of mCMT. It completely avoids receiver <b>buffer</b> <b>blocking.</b> In the proposed new technology of m 2 CMT, three new concepts of Stream Manager, Handoff Manager and Link Status Indicator (LSI) are introduced. Stream Manager can increase the throughput and avoid receiver <b>buffer</b> <b>blocking</b> caused by error loss. Handoff Manager can reduce the data loss by using LSI during handoff process to avoid receiver <b>buffer</b> <b>blocking...</b>|$|R
40|$|As {{more and}} more devices are {{equipped}} with multiple network interfaces, the multihomed technology is becoming an important technology that can provide more reliable connection against the network failure and higher data transmission rate. Concurrent Multipath Transfer (CMT), {{which is based on}} SCTP, is devised for multihomed networks. CMT can transmit data over all paths to maximize the data transmission speed. One of the main concerns of CMT is the receiver <b>buffer</b> <b>blocking</b> issue, especially in multihomed wireless mobile networks. Receiver <b>buffer</b> <b>blocking</b> is mainly caused by lost data. In this paper, we propose mobile CMT (mCMT) over wireless networks to deal with the receiver <b>buffer</b> <b>blocking</b> caused by error loss and handoff loss. mCMT has the features of (i) path-oriented multistreaming, (ii) MIH-assisted handoff mechanism, in which MIH denotes Media Independent Handover and (iii) association resume. Path-oriented multistreaming can reduce the receiver <b>buffer</b> <b>blocking</b> caused by error loss. MIH-assisted a handoff can reduce the amount of packet loss during a handoff, which may lead to receiver <b>buffer</b> <b>blocking.</b> Moreover, mCMT introduces the concept of association resume to recover the disconnected association. Simulation results show that mCMT can reduce the effect of the receiver <b>buffer</b> <b>blocking</b> effectively for devices that have smaller buffer size...|$|R
40|$|The {{main focus}} of this work is to {{contribute}} to the development of iterative solvers applied to the method of moments solution of electromagnetic wave scattering problems. In recent years there has been much focus on current marching iterative methods, such as Gauss-Seidel and others. These methods attempt to march a solution for the unknown basis function amplitudes in a manner that mimics the physical processes which create the current. In particular the forward backward method has been shown to produce solutions that, for some twodimensional scattering problems, converge more rapidly than non-current marching Krylov methods. The <b>buffered</b> <b>block</b> forward backward method extends these techniques in order to solve three-dimensional scattering problems. The convergence properties of the forward backward and <b>buffered</b> <b>block</b> forward backward methods are analysed extensively in this thesis. In conjunction, several means of accelerating these current marching methods are investigated and implemented. The main contributions of this thesis can be summarised as follows: ² An explicit convergence criterion for the <b>buffered</b> <b>block</b> forward backward method is specified. A rigorous numerical comparison of the convergence rate of the <b>buffered</b> <b>block</b> forward backward method, against that of a range of Krylov solvers, is performed for a range of scattering problems. ² The acceleration of the <b>buffered</b> <b>block</b> forward backward method is investigated using relaxation. ² The efficient application of the <b>buffered</b> <b>block</b> forward backward method to problems involving multiple source locations is examined. ² An optimally sized correction step is introduced designed to accelerate the convergence of current marching methods. This step is applied to the forward backward and <b>buffered</b> <b>block</b> forward backward methods, and applied to two and three-dimensional problems respectively. Numerical results demonstrate the significantly improved convergence of the forward backward and <b>buffered</b> <b>block</b> forward backward methods using this step...|$|R
40|$|This paper studies <b>buffer</b> <b>block</b> {{planning}} for interconnect-driven floorplanning in deep submicron designs. We first introduce {{the concept of}} feasible region (FR) for buffer insertion, and derive closed-form formula for FR. We observe that the FR for a buffer is quite large in general even under fairly tight delay constraint. Therefore, FR gives {{us a lot of}} flexibility to plan for buffer locations. We then develop an effective <b>buffer</b> <b>block</b> planning (BBP) algorithm to perform buffer clustering such that the overall chip area and the <b>buffer</b> <b>block</b> number can be minimized. To the best of our knowledge, this is the first in-depth study on buffer {{planning for}} interconnect-driven floorplanning with both area and delay consideration. ...|$|E
40|$|Abstract — As {{technology}} {{advances and}} the number of interconnections among modules rapidly increases, timing closure and de-and invoke Lagrangian relaxation to optimize area and satisfy timing requirements. Further, {{in order to reduce the}} problem size, we present sign convergence are the most important concerns. Hence, it is supermodule partitioning which partitions modules into supermodules. desirable to consider interconnect optimization as early as possible. In this paper, we first address simultaneous floorplanning and <b>buffer</b> <b>block</b> planning (i. e., integrating <b>buffer</b> <b>block</b> planning into Experimental results show that our method of integrating <b>buffer</b> <b>block</b> planning into floorplanning can significantly improve the interconnect delay and reduce the number of buffers needed. floorplanning) for interconnect optimization. Experimental results show that our method can significantly improve the interconnect delay and reduce the number of buffers needed...|$|E
40|$|Abstract—To {{implement}} high-performance global interconnect without impacting {{the placement}} {{and performance of}} existing blocks, the use of buffer blocks is becoming increasingly popular in structured-custom and block-based ASIC methodologies. Recent works by Cong, Kong and Pan [5] and Tang and Wong [18] give algorithms to solve the <b>buffer</b> <b>block</b> planning problem. In this paper, we {{address the problem of}} how to perform buffering of global multiterminal nets given an existing <b>buffer</b> <b>block</b> plan. We give a provably good algorithm based on a recent approac...|$|E
30|$|The best {{blocking}} {{agent was}} determined in wells with blank assay diluent by blocking {{the plate with}} 300 μl of <b>blocking</b> <b>buffer</b> and incubating at RT for 2 hours. The following <b>blocking</b> <b>buffers</b> were tested. PBS with 1 % BSA, PBS with 1 % BSA and 10 % FCS, PBS with 1 % BSA and 1 % NGS, PBS with 1 % BSA and 1 % HSA, Superblock PBS <b>Blocking</b> <b>Buffer,</b> Superblock PBS <b>Blocking</b> <b>Buffer</b> with 1 % BSA, Superblock PBS <b>Blocking</b> <b>Buffer</b> with 1 % NGS, Protein-free PBS <b>Blocking</b> <b>Buffer,</b> Protein-free PBS <b>Blocking</b> <b>Buffer</b> with 1 % BSA, Protein-free PBS <b>Blocking</b> <b>Buffer</b> with 1 % NGS or PBS with 5 % skimmed milk. The optimal <b>blocking</b> <b>buffer</b> {{was found to be}} PBS with 5 % skimmed milk and this <b>blocking</b> <b>buffer</b> was used in the subsequent experiments.|$|R
40|$|International audienceThe {{increasing}} heterogeneity and asymmetry in {{wireless network}} environments makes QoS guarantees {{in terms of}} delays and throughput a challenging task. In this paper, we study a novel scheduling algorithm for multipath transport called Delay Aware Packet Scheduling (DAPS) which aims to reduce the receiver's <b>buffer</b> <b>blocking</b> time considered as a main parameter to enhance the QoS in wireless environments. We develop an analytical model of maximum receiver's <b>buffer</b> <b>blocking</b> time and extend the DAPS algorithm considering implementation issues. Performance evaluations based on ns- 2 simulations highlight the enhanced QoS that DAPS can provide. With reference to the classical multipath transport protocol CMT-SCTP, we observe a significant reductions of the receiver's buffer occupancy, down by 77 %, and the application delay, down by 63 %...|$|R
50|$|BBS {{has many}} uses {{because it is}} {{isotonic}} and has a strong bactericidal effect. It {{can be used to}} dilute substances and in coating procedures. Additives such as Tween 20 and milk powder can be used to add function as washing <b>buffer</b> or <b>blocking</b> <b>buffer.</b>|$|R
40|$|The <b>buffer</b> <b>block</b> {{methodology}} {{has become}} increasingly popular {{as more and more}} buffers are needed in deep-submicron design, and it leads to many challenging problems in physical design. In this paper, we present a polynomial-time exact algorithm for integrated pin assignment and buffer planning for all two-pin nets from one macro block (source block) to all other blocks of a given <b>buffer</b> <b>block</b> plan as well as minimizing the total cost a #W #b # R for any positive a and b where W is the total wire length and R is the number of buffers. By applying this algorithm iteratively (each time pick one block as the source block), it provides a polynomial-time algorithm for pin assignment and buffer planning for nets among multiple macro blocks. Experimental results demonstrate its efficiency and effectiveness...|$|E
30|$|The row <b>buffer</b> <b>block</b> is used {{to store}} the pixel {{information}} in the previous row. It is implemented by dual-port block RAM (BRAM). Considering that the information updating of scanning pixel will conflict with the provisional label assignment at {{the tail of the}} run, two BRAMs are used alternately to store pixel information in each row.|$|E
40|$|In this paper, {{we study}} and {{implement}} a routabilitydriven floorplanner with <b>buffer</b> <b>block</b> planning. It evaluates the routability of a floorplan by computing {{the probability that a}} net will pass through each particular location of a floorplan taken into account buffer locations and routing blockages. Experimental results show that our congestion model can optimize congestion and delay (by successful buffer insertions) of a circuits better with only a slight penalty in area. 1...|$|E
40|$|New factors {{controlling}} {{the reaction of}} pemphigus antibody and the pemphigus antigens were defined by studying the action of antibody on section prepared from human skin. The pemphigus antigenicity was protected by adding dithiothreitol and CaCl 2 in <b>buffer.</b> <b>Blocking</b> studies of the -SH groups by sulfhydryl reagents rapidly decreased the reactivity of antigens. In addition pretreatment calcium chelating agents also decreased this reactivity...|$|R
40|$|This paper {{describes}} {{the application of}} the <b>buffered</b> <b>block</b> forward backward (BBFB) method to the problem of modeling 2 D terahertz (THz) photonic band gap waveguides at the frequency of 3 THz. The method of moments (MoM) is applied to the integral equation (IE) formulation in order to obtain the linear system that is solved using the BBFB technique. The waveguide dimensions are obtained using the gap map technique...|$|R
40|$|Modern high {{performance}} design requires using {{a large number}} of buffers. In practice, buffers are organized into <b>buffer</b> <b>blocks</b> and planned {{in the early stages of}} design process [1]. Thus, the locations of <b>buffer</b> <b>blocks</b> are usually fixed prior to routing tree construction. In this paper we present the first algorithm for simultaneous routing tree construction and buffer insertion for multiple-pin nets under fixed buffer locations. Given a source and n sinks of a net, the required arrival time associated with each sink, and m buffers with fixed locations, our algorithm can construct a routing tree for this net with possible insertion of buffers at given locations such that the required arrival time at the source is maximized. Experimental results show that our algorithm is efficient to handle fixed buffer location constraints and can also be used for routing tree construction without buffer insertion. Moreover, it can handle obstacles and congestion which will benefit its adaption in a global router. Compared to the well-known BA-tree algorithm [2] followed by a post-processing step for handling fixed buffer location constraints, our algorithm outperforms it by up to 46 % in terms of delay while using comparative wirelength...|$|R
40|$|To {{implement}} high-performance global interconnect without impacting {{the performance}} of existing blocks, the use of buffer blocks is increasingly popular in structured-custom and block-based ASIC/SOC methodologies. Recent works by Cong et al. [6] and Tang and Wong [25] give algorithms to solve the <b>buffer</b> <b>block</b> planning problem. In this paper we {{address the problem of}} how to perform buffering of global nets given an existing <b>buffer</b> <b>block</b> plan. Assuming as in [6, 25] that global nets have been already decomposed into two-pin connections, we give a provably good algorithm based on a recent approach of Garg and Könemann [8] and Fleischer [7]. Our method routes connections using available buffer blocks, such that required upper and lower bounds on buffer intervals – as well as wirelength upper bounds per connection – are satisfied. Unlike [6, 25], our model allows more than one buffer to be inserted into any given connection. In addition, our algorithm observes buffer parity constraints, i. e., it will choose to use an inverter or a buffer (= co-located pair of inverters) according to source and destination signal parity. The algorithm outperforms previous approaches [6] and has been validated on top-level layouts extracted from a recent high-end microprocessor design. ...|$|E
40|$|The {{dominating}} {{contribution of}} interconnect to system performance {{has made it}} critical to plan for buffer and wiring resources in the layout. Both buffers and wires must be considered, since wire routes determine buffer requirements and buffer locations constrain wire routes. In contrast to recent <b>buffer</b> <b>block</b> planning approaches, our design methodology distributes buffer sites throughout the layout. A tile graph is used to abstract the buffer planning problem while also addressing wire planning. We present a four-stage heuristic called RABID for resource allocation and experimentally verify its effectiveness. 1...|$|E
40|$|Abstract—To {{implement}} high-performance global interconnect without impacting {{the placement}} {{and performance of}} existing blocks, the use of buffer blocks is becoming increasingly popular in structured-custom and block-based application specified integrated circuit methodologies. Recent works by Cong et al. (1999) and Tang and Wong (2000) give algorithms to solve the <b>buffer</b> <b>block</b> planning problem. In this paper, we {{address the problem of}} how to perform the buffering of global multiterminal nets given an existing <b>buffer</b> <b>block</b> plan. We give provably good and heuristic algorithms for this problem based on a recent approach of Garg and Könemann (1998) and Fleischer (1999) [see also Albrecht (2000) ]. Our method routes connections using available buffer blocks, such that required upper and lower bounds on buffer intervals are satisfied. In addition, our algorithms allow more than one buffer to be inserted into any given connection and observe upper bounds and parity constraints on the number of buffers per connection. Most importantly, and unlike previous works on the problem [Cong et al. (1999); Tang and Wong (2000) ], we take into account: 1) multiterminal nets; 2) multiple routing layers; 3) simultaneous buffered routing and compaction; and 4) buffer libraries. Our method outperforms existing algorithms for the problem [see Cong et al. (1999) ], based on two-pin decompositions of the nets, and has been validated on top-level layouts extracted from a recent high-end microprocessor design. Index Terms—Approximation algorithms, buffer insertion, buffer planning, global routing, multicommodity flow. I...|$|E
40|$|TCP is {{designed}} to tolerate reneging. This design has been challenged since (i) reneging rarely occurs in practice, and (ii) even when reneging does occur, it alone generally does not help the operating system resume normal operation when the system is starving for memory. We investigate how freeing received out-of-order PDUs from the send buffer by using Non-Renegable Selective Acknowledgments (NR-SACKs) can improve end-to-end performance. This improvement results when send <b>buffer</b> <b>blocking</b> occurs in TCP. Preliminary results for TCP NR-SACKs show that (i) TCP data transfers with NR-SACKs never perform worse than those without NR-SACKs, and (ii) NR-SACKs can improve end-to-end throughput when send <b>buffer</b> <b>blocking</b> occurs. Under certain circumstances, we observe throughput increasing by using TCP NR-SACKs as much as 15 % and particularly over long-delay links such as GEO satellite links. The tradeoff for this potential gain is a change to the semantics of the TCP send buffer requiring the more complex management of non-contiguous PDUs. We investigate potential application performance gains when TCP receiver implements NR-SACKs and present empirical results on a real satellite link in the Centre National d’Études Spatiales (CNES) France’s agency responsible for shaping and implementing its space policy in Europe...|$|R
40|$|Amer, Paul D. We {{investigate}} {{two issues}} related to the transport layer and propose solutions to address these issues. All proposed solutions are implemented in the Linux kernel and evaluated with real network topologies. First, we explore what performance gains can be obtained when a TCP or Multipath TCP (MPTCP) receiver guarantees never to discard received out-of-order PDUs from the receive buffer (i. e., never reneg). TCP is designed to tolerate reneging. This design has been challenged since (i) reneging rarely occurs in practice, and (ii) even when reneging does occur, it alone generally does not help the operating system resume normal operation when the system is starving for memory. In the current MPTCP standard, an MPTCP receiver cannot selectively acknowledge the reception of out-of-order PDUs to an MPTCP sender. We investigate how freeing received out-of-order PDUs from the send buffer by using Non-Renegable Selective Acknowledgments (NR-SACKs) can improve end-to-end performance. This improvement results when send <b>buffer</b> <b>blocking</b> occurs in both TCP and MPTCP. Preliminary results for TCP NR-SACKs show that (i) TCP data transfers with NR-SACKs never perform worse than those without NR-SACKs, and (ii) NR-SACKs can improve end-to-end throughput when send <b>buffer</b> <b>blocking</b> occurs. Under certain circumstances, we observe throughput increasing by using TCP NR-SACKs as much as 15 %. Preliminary results for MPTCP NR-SACKs show that (i) MPTCP data transfers with NR-SACKs never perform worse than those without NR-SACKs, and (ii) NR-SACKs can improve end-to-end throughput in MPTCP when send <b>buffer</b> <b>blocking</b> occurs. Under certain circumstances, we observe throughput increasing by using MPTCP NR-SACKs as much as 38 %. Second, we explore potential application performance gains from two innovative scheduling policies for MPTCP. Whenever an MPTCP sender wants to send data, the scheduler needs to decide on which subflow to send each byte. We explain problems with the default scheduler used by Linux MPTCP, and propose the design of a scheduler based not only on a subflow's speed but also the subflow's congestion. Preliminary results show that our proposed scheduler improves the throughput in MPTCP by alleviating the problems caused by the default scheduler. We also define and use one-way communication delay of a TCP connection to design an MPTCP scheduler that transmits PDUs out-of-order over different subflows such that their arrival is in-order. Preliminary results show our proposed scheduler can reduce receive buffer utilization, and increase throughput when a small receive buffer size results in receive <b>buffer</b> <b>blocking.</b> University of Delaware, Department of Computer and Information SciencesPh. D...|$|R
30|$|An ELISA was {{performed}} to determine the levels of Ct-specific serum antibody titers according to the manufacturer’s instructions. In brief, micro-plates coated with purified whole Ct protein (BestBio Biotechnology Co. Shanghai, China) were rinsed with PBS solution containing 0.05 % Tween 20 (PBST) and then blocked with 100  μl <b>blocking</b> <b>buffer</b> (5 % skim milk in PBST) at 37  °C for 1  h. After being rinsed five times with PBST, the plates were incubated with immune sera (diluted at 1 : 1000 in <b>blocking</b> <b>buffer,</b> 100  μl/well) or vaginal washes (diluted at 1 : 10 in <b>blocking</b> <b>buffer,</b> 100  μl/well) at 37  °C for 2  h. After being rinsed five times with PBST, the plates were incubated with HRP-conjugated goat anti-mouse IgG antibody (diluted at 1 : 1000 in <b>blocking</b> <b>buffer,</b> 100  μl/well) or HRP-conjugated goat anti-mouse IgA antibody (diluted at 1 : 2000 in <b>blocking</b> <b>buffer,</b> 100  μl/well) at 37  °C for 1  h.|$|R
40|$|The {{buffer rod}} {{technique}} for measuring attenuation in thin specimens is modified here {{to apply to}} specimens having intermediate thicknesses and high attenuation. The described procedure, which requires only one accessible surface of the material, {{was used to determine}} the initial attenuation values of ultrasonic waves in short beam shear specimens of graphite-polyimide composite material. It is shown that there is good correlation between the initial attenuation values and the shear strengths of the specimens determined by the standard short beam shear test method. The modified ultrasonic <b>buffer</b> <b>block</b> technique offers much potential for service as a quantitative, nondestructive, quality assurance test for composite materials...|$|E
40|$|In this paper, {{we study}} and {{implement}} a routability-driven floorplanner with congestion estimation and <b>buffer</b> <b>block</b> planning. We assume that buffers should be inserted at flexible intervals from each other for long enough wires. Under this buffer insertion constraint, our floorplanner will estimate congestion by computing the best possible buffer locations for each net and perform probabilistic analysis based on the solution. Dynamic programming is used such that estimations can be done very effectively. Nets are topologically grouped to consider bus-based routing and to facilitate the estimation process. We compare our results with those in paper [16] which are the latest results for this problem, and show that our approach can perform better in both quality and runtime...|$|E
40|$|This paper studies <b>buffer</b> <b>block</b> {{planning}} (BBP) for interconnect {{planning and}} prediction in deep submicron designs. We first introduce {{the concept of}} feasible region for buffer insertion, and derive its closed-form formula. We observe that the feasible region for a buffer is quite large in general even under fairly tight delay constraint. Therefore, {{it gives us a}} lot of flexibility to plan for buffer locations. We then develop an effective BBP algorithm to perform buffer clustering such that design objectives such as overall chip area and the number of buffer blocks can be minimized. Effective BBP can plan and predict system-level interconnect by construction, so that accurate interconnect information can be used in early design stages to ensure design closure...|$|E
40|$|The {{performance}} of database and Web servers {{is important because}} the services they provide are increasingly becoming part of our daily lives. Many of these servers are shared-memory multiprocessors, because most commercial workloads have abundant thread-level parallelism. Multiprocessors commonly use private per-processor caches that <b>buffer</b> <b>blocks</b> of the shared memory to improve both effective memory latency and bandwidth. Cache coherence protocols A cache coherence protocol manages the read and write permissions of data in the caches to ensure all processors observe a consisten...|$|R
30|$|Sections were deparaffined, rehydrated, and antigen unmasked in citrate <b>buffer.</b> <b>Blocking</b> for endogen {{peroxidase}} and unspecific binding was performed. Tris-buffered saline {{was used}} as wash buffer. Indirect immunohistochemistry was carried out using EnVision Flex+/horse-radish peroxidase as amplification system with DAB[*]+[*]cromogen as substrate. For location and semi-quantification of apoptosis, polyclonal anti-active caspase- 3 IgG (Abcam, Ab 13847) {{was used as}} the primary antibody. Rabbit linker and Envision FLEX[*]+[*](Dako, K 8024) were added. For positive controls, abdominal lymph nodes were used. Negative controls were run without primary antibody incubation.|$|R
40|$|The {{paper is}} {{concerned}} with the electromagnetic scattering from a three-dimensional inhomogeneous dielectric object. In particular, the paper compares the use of a <b>Buffered</b> <b>Block</b> Forward Backward (BBFB) algorithm {{to the use of the}} commonly employed weak form of the CG-FFT method for the numerical solution of the resultant Electric Field Integral Equation (EFIE). The BBFB method is based on the spatial segmentation of the dielectric into smaller pieces. Results are shown which illustrate the convergence of the algorithm and its superior performance to the CG-FFT. 1...|$|R
40|$|AbstractSpectral Subtraction (SS) {{method is}} one method for speech {{enhancement}} or noise cancellation. There are many variations of SS method, {{one of them}} is Adaptive General Spectral Subtraction (AGSS). In this paper, we implement the noise cancellation method in FPGA as hardware to perform real-time speech enhancement. The hardware implementation consists of FIFO block, window block, FFT/IFFT block, noise cancellation block, half overlap block, and hardware <b>buffer</b> <b>block.</b> Our hardware design utilizes 5086 logic elements with additional 2. 18 kB memory in total. Latency of the hardware is 2. 48 μs in 217 clock cycles with 87. 54 MHz maximum frequency. The latency is less than the sampling period which is 125 μs, so it can perform real-time speech enhancement, as have been tested in Altera DE 2 - 70 board...|$|E
40|$|Final {{disposal}} of {{spent nuclear fuel}} is planned to start at 2020 s in Olkiluoto, Finland. The reference disposal concept in Finland is KBS- 3 V in which copper-iron canisters containing the spent fuel are placed into vertical deposition holes and surrounded by a buffer which refers to bentonite clay, a material which starts to swell when it is exposed to water. Bentonite will {{also be used to}} backfill deposition tunnels where the deposition holes will be drilled. The final disposal requires long-term safety plans due to a long time span of spent nuclear fuel decay. Groundwater flow, rock movements and changes in environmental conditions might jeopardize the long-term safety. This thesis covered a mock-up experiment where test equipment was built in cooperation with VTT and Posiva. Purpose of the thesis was to study interaction between the buffer and the back-fill. The 1 / 6 scale test equipment consisted of a tube and a tunnel which simulated the depo-sition hole and the deposition tunnel of the KBS- 3 V concept. The tube and the tunnel were filled with bentonite blocks and pellets, and water with a salinity of 1 % was sup-plied into the tube at a rate of 0. 1 l/min. In the tunnel there were eight open outlets for the water to flow out. Water distribution, bentonite swelling, formation of water chan-nels, bentonite erosion, and water outflow rate were investigated during the 62 day test. After the test, samples from the bentonite blocks and pellets were taken for water con-tent and density analyses, and a possible vertical displacement of the buffer was exam-ined. Water started to flow out from the tunnel after two days. The water flowed out from the same outlet during the first 59 days after which the water supply was stopped for about an hour due to adding of a tracer. After this, the water distributed towards dry areas in the tunnel and started to flow out {{from the other end of}} the tunnel. During the first days of the test, higher erosion rates occurred occasionally after which the erosion rate settled to an almost constant level. A vertical displacement of about 40 mm of the center of the uppermost <b>buffer</b> <b>block</b> was found after the test. The tunnel pellet layer above the buffer was compressed from 130 mm to approximately 100 mm. The main findings in this study included: (1) water used same flow paths with the con-tinuous inflow from the same location, (2) the one hour pause in the water inflow sealed some of the water channels and after the restart of the water inflow the water flowed towards dry areas in the tunnel, (3) the vertical displacement of approximately 40 mm of the top surface of the uppermost <b>buffer</b> <b>block</b> occurred and it was probably mainly a result from swelling of the uppermost <b>buffer</b> <b>block,</b> (4) almost fully saturated tunnel pellets with high densities were found from above the buffer after the test...|$|E
40|$|An {{intermediate}} {{symbol buffer}} (ISB) configuration and method is provided {{such that the}} ISB memory comprises 15 portions, one for each HSDPA spreading code. Symbols associated with a spreading code are written to the memory portion associated with the same spreading code. When a covariance calculation is performed to obtain a more accurate channel estimate, only the symbols associated with spreading codes determined to be needed for the covariance calculation are written to the ISB by a <b>buffer</b> <b>block</b> and red from the ISB by a correlation core. The symbols associated with spreading codes that are not necessary for a covariance calculation may be masked from being written or read from the ISB. In some embodiments each memory portion is an individual memory block. In other embodiments a plurality of memory blocks may contain a plurality of memory portions, one memory partition designated, at least temporarily, for each spreading code...|$|E
40|$|Abstract In {{heterogeneous}} {{wireless network}} environments, network connections of a device {{may have a}} significant differential. This paper studies the effect of path bandwidth differential {{on the performance of}} fast retransmission strategies in Multi-homing environments. It identifies that fast retransmission on an alternate path may cause receive <b>buffer</b> <b>blocking</b> when path bandwidth differential is significant and the receive buffer is limited. A theoretical model is proposed for selecting retransmission path during the fast retransmission phase, which is based on receive buffer and path conditions. The model is verified through simulations with various path differentials. ...|$|R
40|$|Abstract — A high {{performance}} packet switching archi-tecture called the Pipeback switch is proposed. This archi-tecture ensures lossless packet delivery while maintaining linear buffer complexity. The Pipeback switch improves upon the popular Knockout switch proposed by Y. Yeh et al. Both switches use an N × N space division fabric with output queuing and both designs {{are motivated by}} the observation that the probability of more than L packets arriving in a given timeslot being destined for one partic-ular output port sharply decreases as L is increased. This probability {{is comparable to the}} packet loss probability due to transmission errors for L N. While the arrival of more than L packets destined for a single output in a single timeslot in the Knockout switch results in dropped packets due to <b>buffer</b> <b>blocking,</b> the Pipeback switch avoids such loss by maintaining a separate shared buffer architecture common to all the output ports. This common architecture consists of a novel Pipeback concentration network and a buffer pool. The buffer pool accommodates all the knocked out packets that the Knockout switch would have dropped as a result of <b>buffer</b> <b>blocking,</b> and pipes them back to a separate input line. We further show that the use of buffer pool leads to a {{reduction in the number of}} separate output buffers required at each output port. I...|$|R
5000|$|When {{table is}} less than 2 percent of {{database}} <b>block</b> <b>buffer,</b> the full scan table is quicker.|$|R
