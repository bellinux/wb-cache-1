0|685|Public
40|$|Abstract�Three {{kinds of}} {{high-speed}} signaling methods for synchronous DRAM (SDRAM) <b>bus</b> <b>interface</b> channels (PC- 133, Direct-Rambus, and SSTL- 2) were analyzed {{in terms of}} the timing budget and the physical transmission characteristics. To analyze the SDRAM <b>bus</b> <b>interface</b> channels, loss mechanisms and the effective characteristic impedance method were reviewed and the ABCD matrix method was proposed as an analytic and yet accurate method. SPICE simulations were done to get the AC responses and the eye patterns of the three SDRAM <b>bus</b> <b>interface</b> channels for performance comparisons. Recent progress and future trend for SDRAM <b>bus</b> <b>interface</b> standards were reviewed. Index Terms�SDRAM <b>bus</b> <b>interface</b> channel, high...|$|R
50|$|The {{interface}} modules for {{the series}} 80 were built around a proprietary <b>bus</b> <b>interface</b> chip connecting a standard Intel 8049 microcontroller to the main <b>bus.</b> <b>Interface</b> functions such as handshaking were offloaded to the 8049 firmware.|$|R
40|$|This paper {{investigates the}} {{applications}} of data type declarations describing memory mapped interfaces of hardware components. The rise of abstract <b>bus</b> <b>interfaces</b> {{like in the}} VCI standard for System on Chip design enables the logical separation of a protocol adaptor and a functional adaptor part in the <b>bus</b> <b>interface</b> of hardware components. In this approach, the functional part of a component's <b>bus</b> <b>interface</b> together with a symbolical testbench can be synthesized at multiple abstraction levels from an annotated declaration of its memory map: a register transfer model, a behavioral model, and documentation...|$|R
5000|$|... #Caption: Figure 10: Data <b>bus</b> <b>interface</b> using direct {{coupling}} ...|$|R
5000|$|... #Caption: Figure 9: Data <b>bus</b> <b>interface</b> using {{transformer}} coupling ...|$|R
5000|$|Glueless PCI 2.1 <b>bus</b> <b>{{interface}}</b> and VESA VL-Bus (325) interface ...|$|R
5000|$|Undocumented <b>bus</b> <b>interface</b> {{standards}} that varied between systems and manufacturers.|$|R
50|$|The {{implementation}} of a pipeline architecture is possible only if the <b>bus</b> <b>interface</b> unit and the execution unit are independent. While the execution unit is decoding or executing an instruction which {{does not require the}} use of the data and address buses, the <b>bus</b> <b>interface</b> unit fetches instruction opcodes from the memory.|$|R
50|$|There {{was also}} a {{parallel}} <b>bus</b> <b>interface</b> for general purpose I/O.|$|R
5000|$|... high {{performance}} 16 bit Z-BUS interface or 8-bit Z80-compatible <b>bus</b> <b>interface</b> ...|$|R
500|$|IEC International standard: IEC62680 Universal serial <b>bus</b> <b>interfaces</b> {{for data}} and power: ...|$|R
5000|$|Contains <b>bus</b> <b>interface</b> {{and system}} control functions, in {{addition}} to the processor.|$|R
5000|$|... 6x0x IO {{mezzanine}} (ACIA, dual PIA, PTC, power, {{and expansion}} <b>bus</b> <b>interface)</b> ...|$|R
5000|$|... #Caption: Parallel <b>Bus</b> <b>Interface</b> (above) and Enhanced Cartridge Interface (below, with {{cartridge}} socket).|$|R
5000|$|External <b>Bus</b> <b>Interface</b> 2 (EBI2) is an {{external}} interface found on some Qualcomm processors.|$|R
40|$|This Bachelor’s thesis {{deals with}} design of basic {{communication}} <b>bus</b> <b>interfaces</b> in VHDL language. UART, SPI and I 2 C <b>bus</b> <b>interfaces</b> were designed in this work. Presented text contains description of properties of mentioned buses {{and methods of}} realization using VHDL language. Development and realization of testing equipment and software for communication with personal computer {{are also part of}} this project...|$|R
50|$|Expansion: System <b>bus</b> <b>interface</b> DIP socket (under a {{cover on}} the bottom of the machine).|$|R
5000|$|A <b>bus</b> <b>interface</b> {{through which}} a {{processor}} {{can control the}} acquisition and access the data ...|$|R
5000|$|... #Caption: CPU, core memory, and {{external}} <b>bus</b> <b>interface</b> of a DEC PDP-8/I. Made of medium-scale integrated circuits.|$|R
50|$|Catapult C {{supports}} {{the synthesis of}} Transaction Level Models (TLM), including standard off-the-shelf <b>bus</b> <b>interfaces</b> and custom protocols.|$|R
5000|$|... #Caption: European 800XL with Parallel <b>Bus</b> <b>Interface</b> visible (above, with cover removed) and 130XE with Enhanced Cartridge Interface (below).|$|R
40|$|Abstract. CAN bus {{was widely}} used in {{embedded}} system development, but most embedded processors without CAN bus controller, need to extend external CAN <b>bus</b> <b>interface</b> through external <b>bus.</b> In order to send and receive the CAN bus data by S 3 C 2440 chip, interface function of S 3 C 2440 was extended by MCP 2515 chip in the paper, which was used the SPI interface to extend CAN <b>bus</b> <b>interface.</b> The design of CAN <b>bus</b> hardware <b>interface</b> was described in the paper. The design of CAN device drive program on the embedded Linux operating system was specified in detail...|$|R
40|$|<b>Bus</b> <b>interface</b> circuit for a fiber-optic {{data bus}} is described. This is a serial data bus and the command, status, or data word is {{composed}} of a sync code + 16 bits + 1 parity bit which are Manchester-modulated so that the coupling between the different remote terminals is loose. 13; This <b>bus</b> <b>interface</b> circuit was designed for any fly-by-light,stores-management, or data-transmission data bus compatible with the MIL-STD- 1553 B. (K. K. ...|$|R
25|$|Early ACARS {{systems were}} {{extended}} {{over the years}} to support aircraft with digital data <b>bus</b> <b>interfaces,</b> flight management systems, and printers.|$|R
50|$|The {{adapters}} {{connected to}} the BBC Micro's 1 MHz <b>bus</b> <b>interface.</b> Adapters could be daisy-chained, allowing more than one to be fitted.|$|R
5000|$|Amiga 2065 {{the first}} Ethernet {{controller}} for Amiga computer family. Uses the Zorro-II <b>bus</b> <b>interface</b> and {{equipped with the}} NMOS Am7990 chip.|$|R
50|$|The {{published}} {{draft of}} the 1st edition {{was based on the}} state of the technology at that time. However, it has been foreseen that a data <b>bus</b> <b>interface</b> will become the much better solution in the future. This caused that the project has been stopped at this time. In the year 2014 it has been restarted together with the development of part 7. Part 4 will then describe the details of such a data <b>bus</b> <b>interface.</b>|$|R
3000|$|... {{elements}} {{generated in}} parallel by the boundary PEs. Finally, the <b>bus</b> <b>interface</b> unit realizes the {{communication between the}} systolic array and the embedded processor.|$|R
50|$|The Accelerator {{architecture}} supports {{service-oriented architecture}} that includes built-in features like business objects, frameworks, <b>bus</b> <b>interfaces,</b> plug-ins, XML, dashboards, and wizards to simplify deployment.|$|R
5000|$|Later C&T {{announced}} a [...] "Super EGA" [...] dual-chip chipset: 82C435 Enhanced Graphics Controller and 82A436 <b>Bus</b> <b>Interface</b> with resolution up to 800×600 38MHz.|$|R
40|$|Conference Name:International Conference on Materials Science and Engineering Science. Conference Address: Shenzhen, PEOPLES R CHINA. Time:DEC 11 - 12, 2010. Introduced field {{programmable}} {{gate array}} FPGA with I(2) C <b>bus</b> <b>interface</b> device interface design. Programming with VHDL, using general FPGA I/O port to generate I 2 C <b>bus</b> <b>interface</b> signal timing, achieved FPGA with I(2) C-bus devices data communication, went through the simulation test, given the application example of FPGA with I(2) C-bus EEPROOM chip AT 24 C 02 connected hardware design...|$|R
40|$|Numerous applications, e. g. {{systems for}} {{chemical}} analysis by optical absorption and emission line characterization, {{will benefit from}} the availability of low-cost single-chip spectrometers. A single-chip CMOS optical microspectrometer containing an array of 16 addressable Fabry-Perot etalons (each one with different resonance cavity length), photodetectors and circuits for read-out, multiplexing and driving a serial <b>bus</b> <b>interface</b> has been fabricated. The result is a chip that can operate using only four external connections (including V dd and V ss) covering the visible spectral range of the spectrum with FWHM= 18 nm. Frequency output and serial <b>bus</b> <b>interface</b> allow easy multi-sensor, multi-chip interfacing using a microcontroller or a personal computer. Power consumption is 1250 W for a clock frequency of 1 MHz. Keywords: on-chip optical microspectrometer, microinterferometer, Fabry-Perot etalon, lightto -frequency converter, internal/external <b>bus</b> <b>interface.</b> 2 1. Introduction Conve [...] ...|$|R
5000|$|Memory <b>bus</b> (<b>{{interface}})</b> width: Each DDR, DDR2, or DDR3 memory interface is 64 bits wide. Those 64 bits {{are sometimes}} referred to as a [...] "line." ...|$|R
5000|$|... #Caption: Example {{partitioning}} of {{a system}} basis chip with <b>bus</b> <b>interfaces</b> (green), central logic (yellow) and outputs (red) for voltage regulators (LDO), high-side and low-side switches (HS, LS).|$|R
2500|$|Older host devices {{generally}} do not support newer card formats, and even when they might support the <b>bus</b> <b>interface</b> used by the card, there are several factors that arise: ...|$|R
40|$|Reducing power {{dissipation}} {{is becoming more}} important in the design of embedded systems. Core-based system design opens up the opportunity for exploring different <b>bus</b> <b>interfaces</b> in order to optimize for reduced power. We give a first approach for exploring a range of possible bus configurations, such as width and coding schemes, for a given set of communication channels. Our approach uses power estimation formulas, for fast performance. We use this approach to explore different <b>bus</b> <b>interfaces</b> for a real GPS navigation system in order to select the optimal <b>bus</b> <b>interface</b> for minimum power consumption. 1. Introduction In recent years, embedded system designers have been faced with the need to reduce power consumption. A system's power can be broken into two components. The first component is internal circuit capacitance times the average internal circuit transitions, while the second component is external bus capacitance times the average external bus transitions. The distribution of p [...] ...|$|R
