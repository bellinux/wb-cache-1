7|29|Public
50|$|One {{should also}} note that in using the {{calculated}} operation ratios to the sieve range, it must be less than about 0.2587 {{in order to be}} faster than the often compared sieve of Atkin if the operations take approximately the same time each in CPU clock cycles, which is a reasonable assumption for the one huge bit array algorithm. Using that assumption, the sieve of Atkin is only faster than the maximally wheel factorized sieve of Eratosthenes for ranges of over 1013 at which point the huge sieve <b>buffer</b> <b>array</b> would need {{about a quarter of a}} terabyte (about 250 gigabytes) of RAM memory even if bit packing were used. An analysis of the page segmented versions will show that the assumption that the time per operation stays the same between the two algorithms does not hold for page segmentation and that the sieve of Atkin operations get slower much faster than the sieve of Eratosthenes with increasing range. Thus for practical purposes, the maximally wheel factorized Sieve of Eratosthenes is faster than the Sieve of Atkin although the Sieve of Atkin is faster for lesser amounts of wheel factorization.|$|E
40|$|Reshuffling {{elements}} of a multidimensional array according to an index operation traditionally requires an auxiliary buffer {{of the same size}} as the original array. Here we describe a new in-place algorithm using vacancy tracking cycles with minimum memory access, which eliminates the <b>buffer</b> <b>array</b> and the related copy-back, therefore speeding up the reshuffle significantly for large arrays. The algorithm can be parallelized using a multi-thread approach on shared-memory multi-processor computers. On distributed- memory multi-processor computers, index reshuffle of distributed multidimensional arrays amounts to a remapping of processor domains and is carried out using the in- place local algorithm combined with a global exchange algorithm. Implementation and test results on CRAY T 3 E and IBM SP indicate the effectiveness of the algorithm...|$|E
40|$|In {{this paper}} {{we present a}} fully {{integrated}} solution for broadband multi-stream reception, based on the direct sampling receiver architecture. The key enabler of such a solution is a 64 -times interleaved 2. 6 GS/s 10 b Successive-Approximation-Register ADC. The ADC combines interleaving hierarchy with an open-loop <b>buffer</b> <b>array</b> operated in feedforward-sampling and feedback-SAR mode. It is used in a fully integrated direct sampling receiver for DOCSIS 3. 0 including a digital multi-channel selection filter and a PLL. The ADC achieves an SNDR of 48. 5 dB and a THD of less than - 58 dB at Nyquist with an input signal of 1. 4 Vpp - diff. It consumes 480 mW from 1. 2 / 1. 3 / 1. 6 V supplies and occupies an area of 5. 1 mm 2 in 65 nm CMOS...|$|E
40|$|International audienceIn {{this paper}} we shortly survey some loop {{transformation}} techniques which break anti or output dependences, or artificial cycles involving such 'false' dependences. These false dependences are removed through {{the introduction of}} temporary <b>buffer</b> <b>arrays.</b> Next we show how to plug these techniques into loop parallelization algorithms (such as Allen and Kennedy's algorithm). The goal is to extract as many parallel loops as the intrinsic degree of parallelism of the nest authorizes, while avoiding a full memory expansion. We try {{to reduce the number}} of temporary arrays that we introduce, as well as their dimension...|$|R
5000|$|Prevention of code-level {{security}} breaches (<b>buffer</b> overruns or <b>array</b> index overflows, for example) ...|$|R
5000|$|Advanced texture targets such as texture <b>buffers,</b> multisample 2D <b>array</b> and {{cube map}} arrays.|$|R
40|$|Most of the {{vulnerability}} based on buffer overflows aim at forcing {{the execution of}} malicious code, mainly {{in order to give}} a root shell to the user. The malicious instructions are stored in a buffer, which is overflowed to allow an unexpected use of the process, by changing various memory sections. Buffer overflow attacks exploit a need of bounds checking on the size of input being stored in a <b>buffer</b> <b>array.</b> By writing the data into the memory assigned to array, the attacker can make arbitrary changes to program state stored an adjacent to the array. A buffer overflow is an inconsistent, where a process attempts to store data beyond the boundaries of a fixed length buffer. So that the additional data overwrites next memory the techniques to exploit buffer overflow vulnerability vary per architecture, operating system and memory region locations. The overwritten data may include other buffers, variables and program flow data a technically inclined and malicious user may exploit stack-based buffer overflows to manipulate the program[9, 10]...|$|E
40|$|This paper {{presents}} a 64 -times interleaved 2. 6 GS/s 10 b successive-approximation-register (SAR) ADC in 65 nm CMOS. The ADC combines interleaving hierarchy with an open-loop <b>buffer</b> <b>array</b> operated in feedforward-sampling and feedback-SAR mode. The sampling front-end {{consists of four}} interleaved T/Hs at 650 MS/s that are optimized for timing accuracy and sampling linearity, while the back-end consists of four ADC arrays, each consisting of 16 10 b current-mode non-binary SAR ADCs. The interleaving hierarchy allows for many ADCs to be used per T/H and eliminates distortion stemming from open loop buffers interfacing between the front-end and back-end. Startup on-chip calibration deals with offset and gain mismatches as well as DAC linearity. Measurements show that the prototype ADC achieves an SNDR of 48. 5 dB and a THD of less than 58 dB at Nyquist with an input signal of 1. 4. An estimated sampling clock skew spread of 400 fs is achieved by careful design and layout. Up to 4 GHz an SNR of more than 49 dB has been measured, enabled by the less than 110 fs rms clock jitter. The ADC consumes 480 mW from 1. 2 / 1. 3 / 1. 6 V supplies and occupies an area of 5. 1 mm...|$|E
40|$|Performance {{evaluation}} of the routing node in terms of latency is the characteristics of an efficient design of Buffer in input module. It is intended to study and quantify {{the behavior of the}} single packet array design in relation to the multiple packet array design. The utilization efficiency of the packet <b>buffer</b> <b>array</b> improves when a common buffer is used instead of individual buffers in each input port. First Poissons Queuing model was prepared to manifest the differences in packet delays. The queuing model can be classified as (M/M/ 1), (32 /FIFO). Arrival rate has been assumed to be Poisson distributed with a mean arrival rate of 10 x 1000000. The service rate is assumed to be exponentially distributed with a mean service rate of 10. 05 x 1000000. It has been observed that latency in Common Buffer improved by 46 percent over its distributed buffer. A Simulink model later simulated on MATLAB to calculate the improvement in packet delay. It has been observed that the delay improved by approximately 40 percent {{through the use of a}} common buffer. A verilog RTL for both common and shared buffer has been prepared and later synthesized using Design Compiler of SYNOPSYS. In distributed buffer, arrival of data packet could be delayed by 2 or 4 clock cycles which lead to latency improvement either by 17 percent or 34 percent in a common bufferComment: 8 Pages, 10 Figures, 2 Table...|$|E
40|$|A multigrid {{diagonal}} implicit algorithm {{has been}} developed to solve the three-dimensional Euler equations of inviscid compressible flow on block-structured grids. An improved method of advancing the multigrid cycle has been examined with respect to convergence rates, accuracy, and efficiency. In this method, the multigrid cycle is advanced independently {{in each of the}} blocks, and the information exchange between the blocks is done using <b>buffer</b> <b>arrays,</b> allowing for the asynchronous updating of interface boundary conditions. This updating scheme is used to eliminate the convergence problems found in a previous implementation of the algorithm while retaining its potential for efficient parallel execution. Results are computed for transonic flows past wings and include pressure distributions to verify the accuracy of the scheme and convergence histories to demonstrate the efficiency of the method. Efficiencies that were obtained using a modest number of processors in parallel are also presented and discussed...|$|R
40|$|In {{this paper}} we shortly survey some loop {{transformation}} techniques which break anti or output dependences, or artificial cycles involving such "false" dependences. These false dependences are removed through {{the introduction of}} temporary <b>buffer</b> <b>arrays.</b> Next we show how to plug these techniques into loop parallelization algorithms (such as Allen and Kennedy's algorithm). The goal is to extract as many parallel loops as the intrinsic degree of parallelism of the nest authorizes, while avoiding a full memory expansion. We try {{to reduce the number}} of temporary arrays that we introduce, as well as their dimension. Key words. Anti-dependence, output dependence, dependence removal, loop parallelization algorithm. 1. Introduction. Flow (or value-based) dependences are the only "true" dependences of a program. Anti dependences 1 and output dependences 2 are due to storage re-use and can be eliminated at the price of more memory usage. Removing anti and output dependences may prove very [...] ...|$|R
40|$|Integer division, modulo, and {{remainder}} {{operations are}} expressive and useful operations. They are logical candidates to express complex data accesses {{such as the}} wrap-around behavior in queues using ring <b>buffers,</b> <b>array</b> address calculations in data distribution, and cache locality compiler-optimizations. Experienced application programmers, however, avoid them because they are slow. Furthermore, while advances in both hardware and software have improved the performance of many parts of a program, few are applicable to division and modulo operations. This trend makes these operations increasingly detrimental to program performance. This paper describes a suite of optimizations for eliminating division, modulo, and remainder operations from programs. These techniques are analogous to strength reduction techniques used for multiplications. In addition to some algebraic simplifications, we present a set of optimization techniques which eliminates division and modulo operations that are functions of loop induction variables and loop constants. The optimizations rely on number theory, integer programming and loop transformations...|$|R
40|$|The {{continuous}} innovation of {{semiconductor technology}} enables more complex System on-Chip (SoC) designs. Tens, even hundreds of intellectual properties (IPs) are integrated into an SoC to provide various functions, including communications, networking, multimedia, storage, etc. The bus scheme connects multiple IP cores with a cost efficient shared medium. The bus-based scheme still fails {{to satisfy the}} requirements of future SoC mainly due to two major drawbacks. Non-scalable and the bandwidth is shared by all IPs and thus the bus becomes the performance bottleneck when more and more IPs are connected. In order to interconnect such a high number of elements on a die, researchers have turned to Network On Chip as a replacement to conventional shared buses and ad-hoc wiring solutions. They are attractive due to their regularity and modular design, which can lead to better routability, electrical characteristics and fault tolerance. Performance evaluation of the routing node in terms of latency is the characteristics of an efficient design of Buffer in input module. It is intended to study and quantify the behavior of the single packet array design in relation to the multiple packet array design. The utilization efficiency of the packet <b>buffer</b> <b>array</b> improves when a common buffer is used instead of individual buffers in each input port. First Poisson’s Queuing model was prepared to manifest the differences in packet delays. The queuing model can be classified as (M/M/ 1); (32;FIFO). Arrival rate has been assumed to be Poisson distributed with a mean arrival rate () of 10 x 106. The service rate is assumed to be exponentially distributed with a mean service rate of 10. 05 x 106. It has been observed that latency in Common Buffer improved by 46 % over its distributed buffer. A Simulink model later simulated on MATLAB to calculate the improvement in packet delay. It has been observed that the delay improved by approximately 40 % {{through the use of a}} common buffer. A verilog RTL for both common and shared buffer has been prepared and later synthesized using Design Compiler of SYNOPSYS. In distributed buffer, arrival of data packet could be delayed by 2 or 4 clock cycles which lead to latency improvement either by 17 % or 34 % in a common buffe...|$|E
30|$|Paired {{hybridisation}} {{for each}} microarray comprised treatment versus control of each tissue {{from the same}} time point, for example; 'bark, 0 mg ethephon, 1 WAT' versus 'bark, 1 mg ethephon, 1 WAT', and so forth. Total RNA samples of 50 – 100 ng were used for labelling with the fluorescent cyanine dyes Cy 3 or Cy 5 using the Agilent Low input Quick Amp labelling kit. After labelling, unincorporated dye was removed using RNeasy (Qiagen, Valencia, CA) mini-spin columns. Purified samples were assessed for yield and specific activity using a Nanodrop ND- 1000 UV–VIS spectrophotometer (Thermo Fisher Scientific, Wilmington, DE). Samples that gave yields of > 0.8 μg cRNA and specific activity (Concentration of Cy 3 /Concentration of cRNA × 1000) > 10 were used for arrays. Labelled samples were hybridised to arrays at 65 °C for 17 hours at 10 rpm in an Agilent G 2545 A hybridisation oven using 2 × GEx Agilent hybridisation buffer. Slides were washed using Agilent wash <b>buffers.</b> <b>Array</b> scanning and feature extraction was performed using the Agilent G 2565 CA microarray scanner as outlined in the Agilent protocol for Two-colour Microarray-Based Gene Expression Analysis, Version 6.5, May 2010.|$|R
50|$|Synchronous TrueCopy causes each {{write to}} the primary volume to be {{performed}} to the secondary as well, and the I/O is considered complete only when updates to both primary and secondary have completed. Asynchronous TrueCopy stores time-stamped IO packets in the primary disk array and transfers them to the secondary array subject to link bandwidth. When the primary <b>array's</b> <b>buffer</b> is exhausted, it starts flagging tracks on the primary to be duplicated to the secondary when bandwidth permits.|$|R
40|$|Abstract. Data copy is an {{important}} compiler optimization which dynamically rearranges the layout of arrays by copying their elements into local <b>buffers.</b> Traditionally, <b>array</b> copy is considered expensive and has been applied only to the working sets of fully blocked computations. This paper presents an algorithm which automatically applies data copy to optimize the performance of general computations independent of blocking. The algorithm automatically decides where to insert copy operations and which regions of arrays to copy. In addition, when specialized, it is equivalent to a general scalar replacement algorithm on arbitrary array computations. The algorithm is fully implemented and {{has been applied to}} optimize several scientific kernels. The results show that the algorithm is highly effective and that data copy can significantly improve the performance of scientific computations, both when combined with blocking and when applied alone without blocking. ...|$|R
40|$|In this paper, {{we present}} a {{methodology}} for designing a pipeline of accelerators for an application. The application is modeled using sequential C language with simple stylizations. The synthesis of the accelerator pipeline involves designing loop accelerators for individual kernels, instantiating <b>buffers</b> for <b>arrays</b> used in the application, and hooking up these building blocks to form a pipeline. A compiler-based system automatically synthesizes loop accelerators for individual kernels at varying performance levels. An integer linear program formulation which simultaneously optimizes the cost of loop accelerators {{and the cost of}} memory buffers is proposed to compose the loop accelerators to form an accelerator pipeline for the whole application. Cases studies for some applications, including FMRadio and Beamformer, are presented to illustrate our design methodology. Experiments show significant cost savings are achieved through hardware sharing, while achieving the prescribed throughput requirements...|$|R
30|$|Tissue lysates were {{normalized}} {{to total}} protein concentration using lysis buffer. Tissue lysates were unfractionated. All samples were automatically and simultaneously processed in duplicate on Ciphergen ProteinChip arrays with the special chromatographic surfaces immobilized metal affinity capture (IMAC 30). Briefly, the arrays were generally activated with proper solution, treated with washing/binding buffer, co-incubated with sample, mixed for several cycles to allow for protein binding to surface. Subsequently, unbound proteins were washed away with wash/binding <b>buffer.</b> Then, the <b>arrays</b> were concurrently treated with a saturated sinapinic acid solution (the energy absorbent molecule) and allowed to dry.|$|R
40|$|Predicate {{abstraction}} {{provides a}} powerful tool for verifying properties of infinite-state systems using a combination of a decision procedure for a subset of first-order logic and symbolic methods originally developed for finite-state model checking. We consider models containing first-order state variables, where the system state includes mutable functions and predicates. Such a model can describe systems containing arbitrarily large memories, <b>buffers,</b> and <b>arrays</b> of identical processes. We describe a form of predicate abstraction that constructs a formula over a set of universally quantified variables to describe invariant properties of the first-order state variables. We provide a formal justification of the soundness of our approach and describe how it has been used to verify several hardware and software designs, including a directory-based cache coherence protocol. Comment: 27 pages, 4 figures, 1 table, short version appeared in International Conference on Verification, Model Checking and Abstract Interpretation (VMCAI' 04), LNCS 2937, pages = 267 [...] 28...|$|R
40|$|International Telemetering Conference Proceedings / October 17 - 20, 1988 / Riviera Hotel, Las Vegas, NevadaAs {{data rates}} and system {{throughput}} requirements continue to increase, {{more and more}} attention {{must be given to}} ways of off-loading the host computer by shifting tasks to the front-end preprocessing subsystem. In addition to some of the more common tasks like data compression and EU conversion already performed in the front end, there is the time consuming task of organizing telemetry data. Once relieved from this secondary task the host can solely attend to its primary task of application processing. This paper describes an intelligent DMA interface (CPI 007) which permits the automatic building of various types of <b>array</b> <b>buffers</b> in the host computer. This flexible high-speed device uses an EPROM based, bit slice microengine utilizing parameters stored in its operational store RAM during setup to build the <b>array</b> <b>buffers.</b> The interface is implemented on a single module in the front-end preprocessing subsystem and was developed for those mainframe computers that can be configured to accept address/data inputs for DMA to system memory (e. g. Gould Sel, DEC). With this type of architecture, algorithms may easily be written to accommodate a wide variety of data organization and transfer requirements. Along with the technical description of this device, actual data array buffering problems and solutions will also be addressed in this paper...|$|R
40|$|International audienceIn this paper, we {{describe}} the use of Giant Unilamellar Vesicles (GUV) as cellular models to illustrate the possibility to trap magnetically-marked cells on a flat micro-patterned hard magnetic film by magnetophoresis. GUV can encapsulate nano- or micro-functional objects during the electroformation process {{and the amount of}} magnetic material incorporated can be controlled by regulating the concentration of magnetic nanoparticles in the electroformation <b>buffer.</b> The micromagnet <b>arrays</b> described in this paper are capable of generating high magnetic field gradients, which favors attraction of the magnetic GUV. These flat magnetic microstructures are obtained using the recently developed thermo-magnetic patterning technique (TMP) ...|$|R
40|$|After {{overcoming}} some drawbacks from {{an improved}} genetic feedback algorithm based network security policy framework. A motivation was experienced {{for the need}} of a strong network security policy framework. In this paper a strong network model for security function is presented. A gene for a network packet is defined through fitness function and a method to calculate fitness function is explained. The basic attacks encountered can be categorized as <b>buffer</b> overflow, <b>array</b> index out of bound, etc. A stress is given on passive attack, active attack, its types and brute force attack. An analysis on recent attacks and security is provided. Finally the best policy using a comparator is found. The main aim {{of this paper is}} threat detection, time optimization, performance increase in terms of accuracy and policy automation. For experimenting real data set from the internet and local network is used. Jpcap, winpcap, Colasoft Capsa 7 open source software are used for implementation. 73 % efficiency is achieved because we add 3 networking terms such as payload, checksum, and sequence number. A client server environment is made use of...|$|R
50|$|The {{performance}} of an SSD can scale {{with the number}} of parallel NAND flash chips used in the device. A single NAND chip is relatively slow, due to the narrow (8/16 bit) asynchronous I/O interface, and additional high latency of basic I/O operations (typical for SLC NAND, ~25 μs to fetch a 4 KB page from the array to the I/O buffer on a read, ~250 μs to commit a 4 KB page from the IO <b>buffer</b> to the <b>array</b> on a write, ~2 ms to erase a 256 KB block). When multiple NAND devices operate in parallel inside an SSD, the bandwidth scales, and the high latencies can be hidden, as long as enough outstanding operations are pending and the load is evenly distributed between devices.|$|R
40|$|In this paper, we {{investigate}} {{the problem of}} optimizing array accesses across a collection of loops. We demonstrate that a good solution to such a problem {{should be based on}} an optimization scheme, called collective loop transformations, that considers all loops simultaneously. In particular, loop reversal, loop interchange and loop fusion are performed collectively on a set of loop nests. The main impact of these transformations is an optimization called array contraction, that saves space and time by converting an array variable into a scalar variable or a buffer containing a small number of scalar variables. This optimization is applicable to general-purpose high-performance architectures. For a multiprocessor architecture, array contraction is performed by executing the producer and consumer loops on separate processors, and by using a smaller <b>buffer</b> for the <b>array</b> communication. For a uniprocessor architecture, array contraction is performed by fusing the producer and consumer loop [...] ...|$|R
40|$|Background: Current {{diagnostics}} for allergies, such as skin prick and radioallergosorbent tests, do {{not allow}} for inexpensive, high-throughput screening of patients. Additionally, extracts used in these methods are made from washed pollen that lacks pollen surface materials that may contain allergens. Methodology/Principal Findings: We sought to develop a high-throughput assay to rapidly measure allergen-specific IgE in sera and to explore the relative allergenicity of different pollen fractions (i. e. surface, cytoplasmic, commercial extracts). To do this, we generated a protein microarray containing surface, cytoplasmic, and commercial extracts from 22 pollen species, commercial extracts from nine non-pollen allergens, and five recombinant allergenic proteins. Pollen surface and cytoplasmic fractions were prepared by extraction into organic solvents and aqueous <b>buffers,</b> respectively. <b>Arrays</b> were incubated with, 25 uL of serum from 176 individuals and bound IgE was detected by indirect immunofluorescence, providing a highthroughput measurement of IgE. We demonstrated that the allergen microarray is a reproducible method to measure allergen-specific IgE in small amounts of sera. Using this tool, we demonstrated that specific IgE clusters according to the phylogeny of the allergen source. We also showed that the pollen surface, which has been largely overlooked in the past, contained potent allergens. Although, as a class, cytoplasmic fractions obtained by our pulverization/precipitation method were comparable to commercial extracts, many individual allergens showed significant differences. Conclusions/Significance: These results {{support the hypothesis that}} protein microarray technology is a useful tool for bot...|$|R
40|$|Analysis of the chemical/biological species {{involved}} {{in health care}} {{is the most important}} step for diseases diagnosis and new drug screening. Barcoded nano/microparticles are attracting more and more interest for detection and identification of multiplexed chemical/biological species simultaneously. However, the development of barcoded particles is still in an early stage. To solve problems existing in current barcoded particles, such as spectral overlap and degradation of materials, our group has invented barcoded silica nanotubes (SNTs) and applied them to multiplexed immunoassays and cancer marker detection as coding materials. Barcode SNTs are fabricated by a multistep anodization template synthesis method. Each barcoded SNT has several segments with different reflectance values depending on their diameters and wall thicknesses. Therefore, the barcode of each SNT can be “read-out ” with a conventional optical microscope. Barcoded SNTs have shown high stability and dispersibility in aqueous <b>buffer</b> media. Suspension <b>arrays</b> with barcoded SNTs have shown high sensitivity and high selectivity for the detection of multianalytes in the multiplexed immunoassays...|$|R
40|$|Current {{diagnostics}} for allergies, such as skin prick and radioallergosorbent tests, do {{not allow}} for inexpensive, high-throughput screening of patients. Additionally, extracts used in these methods are made from washed pollen that lacks pollen surface materials that may contain allergens. We sought to develop a high-throughput assay to rapidly measure allergen-specific IgE in sera and to explore the relative allergenicity of different pollen fractions (i. e. surface, cytoplasmic, commercial extracts). To do this, we generated a protein microarray containing surface, cytoplasmic, and commercial extracts from 22 pollen species, commercial extracts from nine non-pollen allergens, and five recombinant allergenic proteins. Pollen surface and cytoplasmic fractions were prepared by extraction into organic solvents and aqueous <b>buffers,</b> respectively. <b>Arrays</b> were incubated with < 25 uL of serum from 176 individuals and bound IgE was detected by indirect immunofluorescence, providing a high-throughput measurement of IgE. We demonstrated that the allergen microarray is a reproducible method to measure allergen-specific IgE in small amounts of sera. Using this tool, we demonstrated that specific IgE clusters according to the phylogeny of the allergen source. We also showed that the pollen surface, which has been largely overlooked in the past, contained potent allergens. Although, as a class, cytoplasmic fractions obtained by our pulverization/precipitation method were comparable to commercial extracts, many individual allergens showed significant differences. These results {{support the hypothesis that}} protein microarray technology is a useful tool for both research and in the clinic. It could provide a more efficient and less painful alternative to traditionally used skin prick tests, making it economically feasible to compare allergen sensitivity of different populations, monitor individual responses over time, and facilitate genetic studies on pollen allergy...|$|R
40|$|Abstract — An {{emerging}} {{class of}} neuroprosthetic devices aims to provide aggressive performance by integrating more complicated signal processing hardware into the neural recording {{system with a}} large amount of electrodes. However, the traditional parallel structure duplicating one neural signal processor (NSP) multiple times for multiple channels takes a heavy burden on chip area. The serial structure sequentially switching the processing task between channels requires a bulky memory to store neural data and may has a long processing latency. In this paper, a memory hierarchy of systolic <b>array</b> <b>buffer</b> is proposed to support channel-by-channel signal processing in cycle basis. The neural data from multiple channels can thus be interleavingly processed in real time with the minimum processing latency, and the NSP can be tightly coupled to the analog frontend interface circuitry without any bulky memory. Based on our previous one-channel NSP of NEUSORT 1. 0 [1], the proposed memory hierarchy is realized on NEUSORT 2. 0 for a 16 -channel neural recording system. Compared to 16 of NEUSORT 1. 0, NEUSORT 2. 0 demonstrates a 81. 50 % saving in terms of area×power factor. I...|$|R
40|$|In this paper, “tapered-Vth” buffers are {{explored}} as {{an approach}} to significantly improve the energy efficiency of traditional CMOS buffers. In this approach, the transistor threshold voltage is progressively increased throughout the buffer stages, {{in addition to the}} traditional transistor tapered sizing. Analysis shows that tapered-Vth buffers are able to significantly widen the range of energy-delay tradeoffs achievable in real designs, thereby showing improved design flexibility compared to single-Vth buffers. In addition, tapered-Vth buffers are shown to offer an up to 3 X energy reduction under a given performance constraint. A circuit-level optimization procedure including the leakage energy contribution is adopted to explore the entire energy-delay space, in contrast to previous analyses that targeted only a specific point. To this aim, an analytical framework to express the energy-delay tradeoff of CMOS buffers is presented, based on the Logical Effort methodology. Simulations in a 45 -nm CMOS technology are extensively performed to validate the approach in a case study (Word Lines <b>buffers</b> for memory <b>arrays)</b> and {{in a number of other}} design cases. Extensive simulations are performed to understand the limits of the proposed approach, as well as the impact of the activity rate, the supply voltage and process variations...|$|R
40|$|International audienceMany papers {{explain the}} drop of {{download}} performance when two TCP connections in opposite directions share a common bottleneck link by ACK compression, the phenomenon in which download ACKs arrive in bursts so that TCP self clocking breaks. Efficient mechanisms {{to cope with the}} performance problem exist and we do not consider proposing yet another solution. We rather thoroughly analyze the interactions between connections and show that actually ACK compression only arises in a perfectly symmetrical setup and it has little impact on performance. We provide a different explanation of the interactions [...] -data pendulum, a core phenomenon that we analyze in this paper. In the data pendulum effect, data and ACK segments alternately fill only one of the link buffers (on the upload or download side) at a time, but almost never both of them. We analyze the effect in the case in which buffers are structured as arrays of bytes and derive an expression for the ratio between the download and upload throughput. Simulation results and measurements confirm our analysis and show how appropriate buffer sizing alleviates performance degradation. We also consider the case of <b>buffers</b> structured as <b>arrays</b> of packets and show that it amplifies the effects of data pendulum...|$|R
40|$|Techniques {{to control}} {{dispersion}} {{in a medium}} have attracted much attention due to potential applications to devices such as ring laser gyroscopes, interferometric gravitational wave detectors, data <b>buffers,</b> phased <b>array</b> radars and quantum information processors. Of particular interest is an optical resonator containing a medium with an anomalous dispersion corresponding to fast-light, which behaves as a White Light Cavity (WLC). A WLC can be tailored to improve the sensitivity of sensing devices {{as well as to}} realize an optical data buffering system that overcomes the delay-bandwidth product of a conventional cavity. This dissertation describes techniques to tailor the dispersion for fast-light in intracavity media. We present first a demonstration of fast-light in a photorefractive crystal. When placed inside a cavity, such a medium could be used to enhance the bandwidth of a gravitational wave detector. We then describe how a superluminal laser can be realized by adding anomalously dispersive medium inside a ring laser. We identify theoretical conditions under which the sensitivity of the resonance frequency to a change in the cavity length is enhanced by as much as seven orders of magnitude. This paves the way for realizing a fast-light enhanced ring laser gyroscope, for example. This is followed by the development of a novel data buffering system which employs two WLC systems in series. In this system, a data pulse can be delayed an arbitrary amount of time, without significant distortion. The delay time is independent of the data bandwidth, and is limited only by the attenuation experienced by the data pulse as it bounces between two high-reflectivity mirrors. Such a device would represent a significant breakthrough in overcoming the delay-time bandwidth product limitation inherent in conventional data buffers. We then describe our experimental effort to create a fiber-based WLC by using stimulated Brillouin scattering (SBS). Experimental results, in agreement with our theoretical model presented here, show that the WLC effect is small under the conditions supported by current fiber optic technology. We conclude that future efforts to induce a large WLC effect would require fibers with high Brillouin coefficient and low transmission loss, as well as optical elements with very low insertion loss and high power damage thresholds...|$|R
30|$|The {{preferred}} way {{to perform}} PRISM and multislice simulations is to transfer large data {{structures such as}} the projected potential array or the compact S-matrix to each GPU only once, where they can then be read from repeatedly {{over the course of}} the calculation. However, this requires that the arrays fit into limited GPU memory. For simulations that are too large, we have implemented an asynchronous streaming version of both PRISM and multislice. Instead of allocating and transferring a single read-only copy of large <b>arrays,</b> <b>buffers</b> are allocated to each stream large enough to hold only the relevant subset of the data for the current step in the calculation, and the job itself triggers asynchronous streaming of the data it requires for the next step. For example, in the streaming implementation of multislice, each stream possesses a buffer to hold a single slice of the potential array and after transmission through that slice, the transfer of the next slice is requested. The use of asynchronous memory copies and CUDA streams permits the partial hiding of memory transfer latencies behind computation (Fig.  3). Periodically, an individual stream must wait on data transfer before it can continue, but if another stream is ready to perform work the device is effectively kept busy. Doing so is critical for performance, as the amount of time needed to transfer data can become significant relative to the total calculation. By default, Prismatic uses an automatic setting to determine whether to use the single-transfer or streaming memory model whereby the input parameters are used to estimate how much memory will be consumed on the device, and if this estimate is too large compared with the available device memory then streaming mode is used. This estimation is conservative and is intended for convenience, but users can also forcibly set either memory mode.|$|R
40|$|The design {{complexity}} of today's IC {{has increased dramatically}} due to the high integration allowed by advanced CMOS VLSI process. A key to manage the increased design complexity while meeting the shortening time-to-market is design automation. In digital world, the field-programmable gate arrays (FPGAs) have evolved to play {{a very important role}} by providing ASIC-compatible design methodologies that include design-for-testability, design optimization and rapid prototyping. On the analog side, the drive towards shorter design cycles has demanded the development of high performance analog circuits that are configurable and suitable for CAD methodologies. Field-programmable analog arrays (FPAAs) are intended to achieve the benefits for analog system design as FPGAs have in the digital field. Despite of the obvious advantages of hierarchical analog design, namely short time-to-market and low non-recurring engineering (NRE) costs, this approach has some apparent disadvantages. The redundant devices and routing resources for programmability requires extra chip area, while switch and interconnect parasitics cause considerable performance degradation. To deliver a high-performance FPAA, effective methodologies must be developed to minimize those adversary effects. In this dissertation, three important aspects in the FPAA design are studied to achieve that goal: the programming technology, the configurable analog block (CAB) design and the routing architecture design. Enabled by the Laser MakelinkTM technology, which provides nearly ideal programmable switches, channel segmentation algorithms are developed to improve channel routability and reduce interconnect parasitics. Segmented routing are studied and performance metrics accounting for interconnect parasitics are proposed for performance-driven analog routing. For large scale <b>arrays,</b> <b>buffer</b> insertions are considered to further reduce interconnection delay and cross-coupling noise. A high-performance, highly flexible CAB is developed to realized both continuous-mode and switched-capacitor circuits. In the end, the implementation of an 8 -bit, 50 MSPS pipelined A/D converter using the proposed FPAA is presented {{as an example of the}} hierarchical analog design approach, with its key performance specifications discussed...|$|R
40|$|Analysis of the chemical/biological species {{involved}} {{in health care}} {{is the most important}} step for diseases diagnosis and new drug screening. Barcoded nano/microparticles are attracting more and more interest for detection and identification of multiplexed chemical/biological species simultaneously. However, the development of barcoded particles is still in an early stage. To solve problems existing in current barcoded particles, such as spectral overlap and degradation of materials, our group has invented barcoded silica nanotubes (SNTs) and applied them to multiplexed immunoassays and cancer marker detection as coding materials. Barcode SNTs are fabricated by a multistep anodization template synthesis method. Each barcoded SNT has several segments with different reflectance values depending on their diameters and wall thicknesses. Therefore, the barcode of each SNT can be "read-out" with a conventional optical microscope. Barcoded SNTs have shown high stability and dispersibility in aqueous <b>buffer</b> media. Suspension <b>arrays</b> with barcoded SNTs have shown high sensitivity and high selectivity for the detection of multianalytes in the multiplexed immunoassays. Magnetic field separation is one promising technique to replace tedious filtration or centrifugation separation for rapid, gentle, and reliable isolation of target analytes. Barcoded SNTs have been coupled with magnetic bead (MB) separation for protein detection and analysis. The species and number of final collected SNTs represent the types and amount of analyte proteins, respectively. By using barcoded SNTs instead of fluorescence as signals, these suspension arrays overcome the problems existing in current MB suspension arrays, such as fluorescence quenching and interference of MBs' autofluorescence. Barcoded magnetic nanotubes (BMNTs) have also been successfully fabricated as dual-functional microcarriers for multiplexed immunoassays and cancer biomarker detection with magnetic separation. BMNTs combine the shape variety of barcoded SNTs and superparamagnetic properties of magnetic nanotubes. BMNTs overcome the problems in the existing dual-functional particles. The iron oxide nanocrystals are evenly dispersed in the inner void of the tubular structures without interference with the optical barcoded patterns. BMNTs have shown high selectivity when applied in multiplexed assays and cancer biomarker detection. The identification of BMNTs with software shows promising results for rapid data analysis. The dual-functional BMNTs provide a promising way for ultrafast, gentle, efficient, and automated detection of target chemical/biochemical molecules for diagnosis and drug screening...|$|R
40|$|The FDN reverb {{is based}} on a number of delay lines that each sample of the audio stream divides onto. The samples travel through a matrix of gain {{coefficients}} and once again divide onto all the delay lines. The results pops out to the output after every pass through the line and will therefore decay at a given rate depending on how the delay lines and matrix are configured. This report means to examine how the number of delay lines affects the output in terms of reverb sound quality. To accomplish this, a program has been written for creation of the reverbs. This program will use six and twelve delay lines respectively. The actual reverb method was first written as a recursive function though {{this turned out to be}} highly ineffective due to the huge amount of function calls being made. The author revised the method as an iterative function with a vector buffer. But as it turns out this produces just as many function calls to the vector class. Finally the vector buffer was replaced with a circular <b>array</b> <b>buffer</b> with pointers keeping track of the read and write indexes. This turned out to be a lot faster. The test files, in form of acoustically dry recordings of a flute and a guitar, was loaded and run through the reverb functions to produce a reverb. As the program’s delay lines have been written with a large number of different settings, it took some time to determine a good setup. It came down to an initial time delay gap of about 30 ms and a separation of the delay lines of about 14 ms (varies between lines). The delay times were slightly varied to prevent the lines becoming multiples of each other. And so the test reverbs was created and a survey handed out to six participants of different background stretching from home user to audio educated experienced listeners. The participants got to listen to the original sound, the six line sound and the twelve line sound. The outcome was surprisingly good. None of the participants found the reverb unrealistic or thin. Instead they found it quite good and realistic. The number of delay line didn’t seem to affect the sound output quality. Ordinarily a greater amount than six lines is used. Either that’s not necessary with general FDN reverbs or this method makes it unnecessary. There might also be other reasons as to why one would choose a greater number of delay lines. This might be a good reason to try this experiment with even more delay lines, but according to the investigation at hand, less delay lines will not equal less quality. Validerat; 20131128 (global_studentproject_submitter...|$|R
40|$|Ho, Wing-Yin. Thesis (M. Phil.) [...] Chinese University of Hong Kong, 2007. Includes bibliographical {{references}} (leaves 115 - 131). Abstracts in English and Chinese. Acknowledgements [...] - p. iAbbreviations [...] - p. iiiAbstract [...] - p. v摘要 [...] - p. ixPublications [...] - p. xiiTable of Contents [...] - p. xivChapter 1. [...] - General IntroductionChapter 1. 1. [...] - Diabetes Mellitus (DM) and Diabetic Nephropathy [...] - p. 1 Chapter 1. 1. 1. [...] - "Prevalence, Diagnosis and Classification of DM" [...] - p. 1 Chapter 1. 1. 2. [...] - Type 2 DM and its Complications: Diabetic Nephropathy [...] - p. 5 Chapter 1. 1. 3. [...] - Diagnosis and Impacts of Diabetic Nephropathy [...] - p. 7 Chapter 1. 1. 4. [...] - Current Treatment of Type 2 DM and Diabetic Nephropathy [...] - p. 8 Chapter 1. 2. [...] - Cytokines and Chemokines [...] - p. 9 Chapter 1. 2. 1. [...] - Types and Properties [...] - p. 9 Chapter 1. 2. 2. [...] - Cytokines and chemokines in Type 2 DM and Diabetic Nephropathy [...] - p. 13 Chapter 1. 3. [...] - T Lymphocyte Costimulatory Molecules [...] - p. 15 Chapter 1. 3. 1. [...] - Types and Properties [...] - p. 15 Chapter 1. 3. 2. [...] - T Lymphocyte Costimulatory Molecules in Type 2 DM and Diabetic Nephropathy [...] - p. 16 Chapter 1. 4. [...] - Adhesion Molecules [...] - p. 18 Chapter 1. 4. 1. [...] - Types and Properties [...] - p. 18 Chapter 1. 4. 2. [...] - Adhesion Molecules in Type 2 DM and Diabetic Nephropathy [...] - p. 20 Chapter 1. 5. [...] - Intracellular Signaling Pathways [...] - p. 21 Chapter 1. 5. 1. [...] - Types and Properties [...] - p. 21 Chapter 1. 5. 2. [...] - Intracellular Signaling Pathways in Type 2 DM and Diabetic Nephropathy [...] - p. 23 Chapter 1. 6. [...] - Objectives of Our Study [...] - p. 24 Chapter 2. [...] - Materials and MethodsChapter 2. 1. [...] - Materials [...] - p. 26 Chapter 2. 1. 1. [...] - "Patients, Control Subjects and Blood Samples" [...] - p. 26 Chapter 2. 1. 2. [...] - Cell Line [...] - p. 27 Chapter 2. 1. 3. [...] - "Cell Culture Media, Buffers and Other Reagents" [...] - p. 28 Chapter 2. 1. 4. [...] - "Recombinant Human Cytokines, Inhibitors and Other Stimulators" [...] - p. 30 Chapter 2. 1. 5. [...] - Reagents and Buffers for Flow Cytometric Analysis [...] - p. 31 Chapter 2. 1. 5. 1. [...] - Cytometric Bead Array (CBA) of Cytokines and Chemokines [...] - p. 33 Chapter 2. 1. 5. 2. [...] - Multiplex Fluorescent Bead Immunoassay (FBI) of Soluble Adhesion Molecules [...] - p. 33 Chapter 2. 1. 5. 3. [...] - Phosphorylation State Analysis of Signaling Molecules [...] - p. 34 Chapter 2. 1. 5. 4. [...] - Immunofluorescent Staining of Cell Surface Molecules [...] - p. 36 Chapter 2. 1. 6. [...] - Reagents and <b>Buffers</b> for Protein <b>Array</b> Analysis [...] - p. 37 Chapter 2. 1. 7. [...] - "Reagents and Buffers for 3 -(4, 5 -Dimethylthiazol- 2 -yl) - 2, 5 - diphenylytetrazolium Bromide (MTT) Assay" [...] - p. 37 Chapter 2. 1. 8. [...] - Reagents for Human Enzyme-Linked Immunosorbent Assay (ELISA) [...] - p. 37 Chapter 2. 2. [...] - Methods [...] - p. 38 Chapter 2. 2. 1. [...] - Whole Blood Culture Experiments [...] - p. 38 Chapter 2. 2. 2. [...] - "Collection of Serum and Plasma, and Purification of PBMC from EDTA-Blood" [...] - p. 39 Chapter 2. 2. 3. [...] - HK- 2 Cell Cultures [...] - p. 39 Chapter 2. 2. 4. [...] - HK- 2 Cell Treatments [...] - p. 40 Chapter 2. 2. 5. [...] - Flow Cytometric Analysis [...] - p. 41 Chapter 2. 2. 5. 1. [...] - CBA of Cytokines and Chemokines [...] - p. 41 Chapter 2. 2. 5. 2. [...] - Multiplex FBI of Soluble Adhesion Molecules [...] - p. 41 Chapter 2. 2. 5. 3. [...] - Phosphorylation State Analysis of Signaling Molecules [...] - p. 42 Chapter 2. 2. 5. 4. [...] - Immunofluorescent Staining of Cell Surface Molecules [...] - p. 43 Chapter 2. 2. 6. [...] - Protein Array Analysis [...] - p. 44 Chapter 2. 2. 7. [...] - MTT Assay [...] - p. 44 Chapter 2. 2. 8. [...] - ELISA [...] - p. 45 Chapter 2. 2. 9. [...] - Statistical Analysis [...] - p. 46 Chapter 3. [...] - "Clinical Study on the Expressions of Cytokines, Chemokines, Co-stimulatory Molecules, Phosphorylated Signaling Molecules in Patients with Diabetic Nephropathy"Chapter 3. 1. [...] - Introduction [...] - p. 47 Chapter 3. 2. [...] - Results [...] - p. 49 Chapter 3. 2. 1. [...] - Demographic Data of Participants [...] - p. 49 Chapter 3. 2. 2. [...] - Expression Profile in Plasma of Patients [...] - p. 49 Chapter 3. 2. 2. 1. [...] - Cytokines and Chemokines [...] - p. 49 Chapter 3. 2. 2. 2. [...] - Soluble Costimulatory Molecules [...] - p. 55 Chapter 3. 2. 2. 3. [...] - Soluble Adhesion Molecules [...] - p. 55 Chapter 3. 2. 2. 4. [...] - "Correlations between Plasma Concentrations of Cytokines, Chemokines, soluble Costimulatory Molecules and soluble Adhesion Molecules and UACR in Patients" [...] - p. 60 Chapter 3. 2. 3. [...] - Effects ofTNF-α and IL- 18 on the ex vivo Production from Whole Blood of Patients [...] - p. 65 Chapter 3. 2. 3. 1. [...] - Ex vivo Production of Cytokines and Chemokines [...] - p. 65 Chapter 3. 2. 3. 2. [...] - Ex vivo Production of Soluble Costimulatory Molecules [...] - p. 70 Chapter 3. 2. 4. [...] - "Expression of Phosphorylated p 38 MAPK, JNK and ERK in PBMC of Patients" [...] - p. 73 Chapter 3. 3. [...] - Discussion [...] - p. 77 Chapter 3. 3. 1. [...] - "Cytokines, Chemokines and Diabetic Nephropathy" [...] - p. 77 Chapter 3. 3. 2. [...] - Soluble Costimulatory Molecules and Diabetic Nephropathy [...] - p. 80 Chapter 3. 3. 3. [...] - Soluble Adhesion Molecules and Diabetic Nephropathy [...] - p. 83 Chapter 3. 3. 4. [...] - Intracellular Signaling and Diabetic Nephropathy [...] - p. 87 Chapter 4. [...] - In vitro Study on the Signal Transduction Mechanism Regulating the Expression of CCL 2 and Cell Surface Adhesion Molecules in Tumour Necrosis Factor (TNF) -α-Stimulated HK- 2 CellsChapter 4. 1. [...] - Introduction [...] - p. 90 Chapter 4. 2. [...] - Results [...] - p. 93 Chapter 4. 2. 1. [...] - Expression Profile of Cytokines and Chemokines of TNF-α-activated HK- 2 Cells [...] - p. 93 Chapter 4. 2. 2. [...] - "TNF-α Upregulated CCL 2, ICAM- 1 and VCAM- 1 Expression in HK- 2 Cells" [...] - p. 95 Chapter 4. 2. 3. [...] - "TNF-α Activated the p 38 MAPK, JNK and ERK Signaling Pathways in HK- 2 Cells" [...] - p. 96 Chapter 4. 2. 4. [...] - Cytotoxicity of MAPK Inhibitors [...] - p. 96 Chapter 4. 2. 5. [...] - "Effects of p 38 MAPK, JNK and ERK Inhibitors on TNF-α-induced Expressions of CCL 2, ICAM- 1 and VCAM- 1 " [...] - p. 100 Chapter 4. 3. [...] - Discussion [...] - p. 102 Chapter 5. [...] - Conclusion and Future ProspectsChapter 5. 1. [...] - Conclusion [...] - p. 107 Chapter 5. 2. [...] - Future Prospects [...] - p. 111 References [...] - p. 11...|$|R
