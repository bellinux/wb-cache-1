2644|467|Public
5|$|The {{same idea}} of using a DAG to {{represent}} a family of paths occurs in the <b>binary</b> <b>decision</b> diagram, a DAG-based data structure for representing binary functions. In a <b>binary</b> <b>decision</b> diagram, each non-sink vertex is labeled {{by the name of}} a binary variable, and each sink and each edge is labeled by a 0 or 1. The function value for any truth assignment to the variables is the value at the sink found by following a path, starting from the single source vertex, that at each non-sink vertex follows the outgoing edge labeled with the value of that vertex's variable. Just as directed acyclic word graphs {{can be viewed as a}} compressed form of tries, <b>binary</b> <b>decision</b> diagrams can be viewed as compressed forms of decision trees that save space by allowing paths to rejoin when they agree on the results of all remaining decisions.|$|E
25|$|The Adelaide Refinement Checker (ARC) is a CSP {{refinement}} checker {{developed by}} the Formal Modelling and Verification Group at The University of Adelaide. ARC differs from FDR2 in that it internally represents CSP processes as Ordered <b>Binary</b> <b>Decision</b> Diagrams (OBDDs), which alleviates the state explosion problem of explicit LTS representations without requiring the use of state-space compression algorithms such as those used in FDR2.|$|E
500|$|Similarly, topological orderings of DAGs {{can be used}} {{to order}} the {{compilation}} operations in a makefile. The program evaluation and review technique uses DAGs to model the milestones and activities of large human projects, and schedule these projects to use as little total time as possible. Combinational logic blocks in electronic circuit design, and the operations in dataflow programming languages, involve acyclic networks of processing elements. DAGs can also represent collections of events and their influence on each other, either in a probabilistic structure such as a Bayesian network or as a record of historical data such as family trees or the version histories of [...] distributed revision control systems. DAGs can also be used as a compact representation of sequence data, such as the directed acyclic word graph representation of a collection of strings, or the <b>binary</b> <b>decision</b> diagram representation of sequences of binary choices. More abstractly, ...|$|E
30|$|Step 2. All the SUs forward their <b>binary</b> <b>decisions</b> to a FC.|$|R
50|$|Conditional {{statements}} (if-then or if-then-else) {{in computer}} science, <b>binary</b> <b>decisions</b> about which piece of code to execute next.|$|R
30|$|The <b>binary</b> <b>decisions</b> made by all sensing nodes are {{reported}} to an AP in the local area network (LAN) or networks.|$|R
2500|$|In the 1930s, while {{studying}} switching circuits, Claude Shannon observed {{that one could}} also apply the rules of Boole's algebra in this setting, and he introduced switching algebra {{as a way to}} analyze and design circuits by algebraic means in terms of logic gates. Shannon already had at his disposal the abstract mathematical apparatus, thus he cast his switching algebra as the two-element Boolean algebra. In circuit engineering settings today, there is little need to consider other Boolean algebras, thus [...] "switching algebra" [...] and [...] "Boolean algebra" [...] are often used interchangeably. Efficient implementation of Boolean functions is a fundamental problem in the design of combinational logic circuits. Modern electronic design automation tools for VLSI circuits often rely on an efficient representation of Boolean functions known as (reduced ordered) <b>binary</b> <b>decision</b> diagrams (BDD) for logic synthesis and formal verification.|$|E
50|$|The <b>binary</b> <b>decision</b> tree of {{the left}} figure can be {{transformed}} into a <b>binary</b> <b>decision</b> diagram by maximally reducing it according to the two reduction rules. The resulting BDD is shown in the right figure.|$|E
5000|$|<b>Binary</b> <b>decision</b> {{diagrams}} {{follow from}} systematic {{use of this}} theorem ...|$|E
30|$|Step 3. The FC {{combines}} those <b>binary</b> <b>decisions</b> {{and makes}} a final decision to infer the absence or presence of the PU in the observed band.|$|R
40|$|Abstract—The {{human brain}} {{exhibits}} robustness against natural variability occurring in face images, yet the commonly attempted algorithms for face recognition are not modular {{and do not}} apply the principle of <b>binary</b> <b>decisions</b> made by the firing of neurons. We present a biologically inspired modular unit implemented as an al-gorithm for face recognition that applies pixel-wise local <b>binary</b> <b>decisions</b> on similarity of spatial-intensity change features. The re-sults obtained with a single gallery image per person show a robust and high recognition performance: 94 % on AR, 98 % on Yale, 97...|$|R
5000|$|Probability {{estimation}} {{is performed}} by a transition process between 64 separate probability states for [...] "Least Probable Symbol" [...] (LPS, the least probable of the two <b>binary</b> <b>decisions</b> [...] "0" [...] or [...] "1").|$|R
50|$|Binary choice, a {{statistical}} {{model for the}} outcome of a <b>binary</b> <b>decision.</b>|$|E
50|$|Decision {{trees and}} <b>binary</b> <b>decision</b> diagrams, {{representations}} for sequences of binary decisions.|$|E
50|$|A zero-suppressed {{decision}} diagram (ZSDD or ZDD) {{is a type}} of <b>binary</b> <b>decision</b> diagram (BDD) where {{instead of}} nodes being introduced when the positive and the negative part are different, they are introduced when positive part is different from constant 0. A zero-suppressed decision diagram is also commonly referred to as a zero-suppressed <b>binary</b> <b>decision</b> diagram (ZBDD).|$|E
40|$|Abstract- In this paper, we {{consider}} a binary distributed detection {{system in which}} a system of multiple sensors monitors a common volume and provides relevant <b>binary</b> <b>decisions</b> {{about the state of}} the environment to a data fusion center. The fusion center combines the <b>binary</b> <b>decisions</b> of the individual distributed sensors into a final global decision. We propose a new hard decision integration method for multiple sensor decision fusion systems. The proposed hard decision fusion method determines the false alarm probabilities and the detection probabilities that yield maximum performance. The performance of the proposed method is provided in case of Rayleigh distributed observations and is proved to be simple and efficient [...] I...|$|R
40|$|This paper {{introduces}} {{a framework for}} tracking multiple targets over time using <b>binary</b> <b>decisions</b> collected by a wireless sensor network, and applies the methodology to two case studies – an experiment involving tracking people and a dataset adapted from a project tracking zebras in Kenya. The tracking approach {{is based on a}} penalized maximum likelihood framework, and allows for sensor failures, targets appearing and disappearing over time, and complex intersecting target trajectories. We show that <b>binary</b> <b>decisions</b> about the presence/absence of a target in a sensor’s neighborhood, corrected locally by a method known as local vote decision fusion, provide the most robust performance in noisy environments, and give good tracking results in applications...|$|R
5000|$|Discrete outcomes, such as <b>binary</b> <b>decisions</b> or {{qualitative}} data restricted {{to a small}} number of categories. Discrete choice models may have either unordered or ordered alternatives; ordered alternatives may take the form of count data or ordered rating responses (such as a Likert scale).|$|R
5000|$|Flowcharts, e.g., a <b>binary</b> <b>decision</b> {{tree for}} {{deciding}} {{what is the}} etiology of chest pain ...|$|E
50|$|The {{basic idea}} {{from which the}} data {{structure}} was created is the Shannon expansion. A switching function is split into two sub-functions (cofactors) by assigning one variable (cf. if-then-else normal form). If such a sub-function is considered as a sub-tree, it can be represented by a <b>binary</b> <b>decision</b> tree. <b>Binary</b> <b>decision</b> diagrams (BDD) were introduced by Lee, and further studied and made known by Akers and Boute.|$|E
5000|$|Volume 4, Fascicle 1: Bitwise tricks & techniques; <b>Binary</b> <b>decision</b> {{diagrams}} (Addison-Wesley Professional, March 27, 2009) viii+260pp, ...|$|E
40|$|Operative {{planning}} in gas networks with prescribed <b>binary</b> <b>decisions</b> yields large scale nonlinear programs defined on graphs. We study {{the structure of}} the KKT systems arising in interior methods and present a customized direct solution algorithm. Computational results indicate that the algorithm is suitable for optimization in small and medium-sized gas networks...|$|R
30|$|We {{employed}} GTB {{to create}} regression models based on sequential <b>binary</b> <b>decisions</b> [6]. GTB models are implementable in FPGAs while data usage is the limiting aspect [7, 8]. Previously, we proposed two scenarios {{to find the}} best possible positioning performance: One restricting data usage to enable an FPGA implementation and one without any restrictions.|$|R
40|$|This chapter {{considers}} the neural basis of visual <b>decisions</b> and simple <b>binary</b> <b>decisions</b> made upon the sequential analysis of evidence, and also explains the accuracy {{and speed of}} perceptual decisions {{as a function of}} difficulty. It also presents evidence of possible neural implementation of the computational principles in the parietal cortex of a monkey...|$|R
50|$|A <b>binary</b> <b>decision</b> is {{a choice}} between two alternatives, for {{instance}} between taking some specific action or not taking it.|$|E
5000|$|Several {{verification}} algorithms combined: enumerative verification, on-the-fly verification, symbolic verification using <b>binary</b> <b>decision</b> diagrams, compositional minimization, partial orders, distributed model checking, etc.|$|E
50|$|A machine will {{be given}} the problem in a {{standardized}} form which includes the answer choices, thus making it a <b>binary</b> <b>decision</b> problem.|$|E
40|$|This paper {{analyzes}} two alternative distributed detection architectures from a Neyman-Pearson viewpoint. Here, {{the local}} detectors communicate their <b>binary</b> <b>decisions</b> to their immediate neighbors. (See figure 1). The first architecture {{is known in}} the literature as the serial or tandem architecture [1 [...] 3]. The second {{is a combination of}} the serial and the traditional parallel architectur...|$|R
40|$|Topological {{optimization}} {{of networks}} {{is a complex}} multi-constraint and multi-criterion optimisation problem in many real world fields (telecommunications, electricity distribution etc.). This paper describes an heuristic algorithm using <b>Binary</b> <b>Decisions</b> Diagrams (BDD) to solve the reliable communication network design problem (RCND) ga 1. The aim is to design a communication network topology with minimal cost that satisfies a given reliability constraint...|$|R
40|$|A Bayesian {{approach}} is developed for making inferences about the rate of agreement in a particular decision problem. The problem considers the case where two <b>decision</b> methods make <b>binary</b> <b>decisions,</b> {{with one of the}} methods making objectively correct decisions, and the interest being in the rate with which the second method makes decisions that agree. The Bayesian methods developed allow the calculation of the full posterior distribution for the rate of agreement, and give a simple expression for its expectation. The Bayes Factor comparing models that assume dependence and full independence between the decision methods is also derived. Two simulation studies are reported, showing the superiority of the Bayesian methods to Orthodox estimation and hypothesis testing using the kappa statistic. A practical example involving a medical trial is presented, demonstrating that the Bayesian methods are easily applied and provide a general capability for making rational inferences about agreement for this problem. Keywords: Agreement Rate, <b>Binary</b> <b>Decisions,</b> Bayesian Methods, Bayes Factor, Kappa Statisti...|$|R
50|$|A newer {{algorithm}} from 1990 is Stålmarck's method. Also since 1986 (reduced ordered) <b>binary</b> <b>decision</b> diagrams {{have also}} been used for SAT solving.|$|E
50|$|Most {{practical}} algorithms for optimizing large logic systems use algebraic manipulations or <b>binary</b> <b>decision</b> diagrams, {{and there}} are promising experiments with genetic algorithms and annealing optimizations.|$|E
50|$|The {{same idea}} of using a DAG to {{represent}} a family of paths occurs in the <b>binary</b> <b>decision</b> diagram, a DAG-based data structure for representing binary functions. In a <b>binary</b> <b>decision</b> diagram, each non-sink vertex is labeled {{by the name of}} a binary variable, and each sink and each edge is labeled by a 0 or 1. The function value for any truth assignment to the variables is the value at the sink found by following a path, starting from the single source vertex, that at each non-sink vertex follows the outgoing edge labeled with the value of that vertex's variable. Just as directed acyclic word graphs {{can be viewed as a}} compressed form of tries, <b>binary</b> <b>decision</b> diagrams can be viewed as compressed forms of decision trees that save space by allowing paths to rejoin when they agree on the results of all remaining decisions.|$|E
40|$|We {{would like}} to thank Peter Dodds, Steven Durlauf and Peyton Young, as well as the members of the Collective Dynamics Group at Columbia University for {{valuable}} comments and suggestions. 1 In this paper we address the general question of how social influence determines collective outcomes for large populations of individuals faced with <b>binary</b> <b>decisions.</b> First, we define conditions under which the behavior of individuals making <b>binary</b> <b>decisions</b> can be described {{in terms of what we}} call an influence-response function: a one-dimensional function of the (weighted) number of individuals choosing each of the alternatives. And second, we demonstrate that, under the assumptions of global and anonymous interactions, general knowledge of the influence-response functions is sufficient to compute equilibrium (and even non-equilibrium) properties of the collective dynamics. In general, we find that collectives making very different kinds of decisions can exhibit surprisingly similar behavior; and conversely, that very similar types of decisions can yield collective behavior that is dramatically different...|$|R
40|$|Human {{preferences}} {{can effectively}} be elicited using pairwise comparisons {{and in this}} paper current state-of-the-art based on <b>binary</b> <b>decisions</b> is extended by a new paradigm which allows subjects to convey their degree of preference as a continuous but bounded response. For this purpose, a novel Beta-type likelihood is proposed and applied in a Bayesian regression framework using Gaussian Process priors. Posterior estimation and inference is performed using a Laplace approximation. The potential of the paradigm is demonstrated and {{discussed in terms of}} learning rates and robustness by evaluating the predictive performance under various noise conditions on a synthetic dataset. It is demonstrated that the learning rate of the novel paradigm is not only faster under ideal conditions, where continuous responses are naturally more informative than <b>binary</b> <b>decisions,</b> but also under adverse conditions where it seemingly preserves the robustness of the binary paradigm, suggesting that the new paradigm is robust to human inconsistency...|$|R
40|$|In {{this paper}} we address the general {{question}} of how social influence determines collective outcomes for large populations of individuals faced with <b>binary</b> <b>decisions.</b> First, we define conditions under which the behav-ior of individuals making <b>binary</b> <b>decisions</b> {{can be described in}} terms of what we call an influence-response function: a one-dimensional function of the (weighted) number of individuals choosing each of the alternatives. And second, we demonstrate that, under the assumptions of global and anonymous interactions, general knowledge of the influence-response functions is sufficient to compute equilibrium, and even non-equilibrium, properties of the collective dynamics. By enabling us to treat in a consis-tent manner classes of decisions that have previously been analyzed separately, our framework allows us to find similarities between apparently quite different kinds of decision situations, and conversely to identify important differences between decisions that would otherwise appear very similar. KEYWORDS • social influence • influence-response function • collective outcomes • best-response dynamics 1...|$|R
