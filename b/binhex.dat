34|4|Public
25|$|With {{the header}} {{extensions}} and the Base64 and Quoted-Printable MIME encodings, {{there was a}} new generation of binary transport. In practice, MIME has seen increased adoption in text messages, but it is avoided for most binary attachments. Some operating systems with metadata attached to files use specialized encoding formats. For Mac OS, both <b>Binhex</b> and special MIME types are used.|$|E
25|$|On {{the other}} hand, these forks {{would provide a}} {{challenge}} to interoperability with other operating systems. In copying or transferring a Mac OS file to a non-Mac system, the default implementations would simply strip the file of its resource fork. Most data files contained only nonessential information in their resource fork, such as window size and location, but program files would be inoperative without their resources. This necessitated such encoding schemes as <b>BinHex</b> and MacBinary, which allowed a user to encode a dual-forked file into a single stream, or inversely take a single stream so-encoded and reconstitute it into a dual-forked file usable by Mac OS.|$|E
5000|$|<b>BinHex</b> was {{originally}} written by Tim Mann for the TRS-80, as a stand-alone {{version of an}} encoding scheme originally built into a popular terminal emulator. It worked by converting the binary file contents to hexadecimal numbers, which were themselves encoded as ASCII digits and letters. <b>BinHex</b> files of the era were typically given the file extension [...]hex. <b>BinHex</b> was used for sending files via major online services such as CompuServe, which were not [...] "8-bit clean" [...] and required ASCII armoring to survive. CompuServe later addressed this problem in the mid-1980s {{with the addition of}} 8-bit clean file transfer protocols, and solutions like <b>BinHex</b> stopped being used.|$|E
5000|$|Core fonts for the Web was {{a project}} started by Microsoft in 1996 {{to create a}} {{standard}} pack of fonts for the Internet. It included the proprietary fonts Andalé Mono, Arial, Arial Black, Comic Sans MS, Courier New, Georgia, Impact, Times New Roman, Trebuchet MS, Verdana and Webdings, {{all of them in}} TrueType font format packaged in executable files (".exe") for Microsoft Windows and in <b>BinHexed</b> Stuff-It archives (".sit.hqx") for Macintosh. These packages were published as freeware under a proprietary license imposing some restrictions on distribution.|$|R
40|$|We {{describe}} a map-based model which reproduces {{many of the}} behaviors seen in partial differential equations (PDE's). Like PDE's, we show that this model can support {{an infinite number of}} stationary solutions, traveling solutions, breathing solutions, and elastically colliding solutions. Unlike PDE's, the model can be applied with minimal computational machinery, and few sources of numerical error. Moreover, this model clarifies possible mechanisms by which various coherent solutions are maintained in the face of dispersion. Comment: 28 pages, <b>Binhexed</b> Macintosh MS Word 5. 1 file follows; available in hardcopy by request (shinbrot@merle. acns. nwu. edu). In press: Int. J. Bif. & Chao...|$|R
5000|$|For Windows, the fonts are {{provided}} as self-extracting executables (.exe); each includes an embedded cabinet file {{that contains a}} font file in TrueType format (.ttf). For the Macintosh, the files {{are provided}} as <b>BinHexed</b> Stuff-It archives (.sit.hqx). It is forbidden to rename, edit or create any derivative works from the executables (e.g. arial32.exe) or archives (Arial.sit.hqx), other than subsetting when embedding them in documents. The fonts can be installed and used on non-Windows or non-Macintosh operating systems, {{as long as they}} are distributed in original form (original [...]exe files or [...]sit.hqx files) and with original name (e.g. arial32.exe). A cabinet file can be extracted in an end-user's system with appropriate software, if such software is available.|$|R
50|$|MacBinary {{is similar}} to <b>BinHex,</b> but MacBinary {{produces}} binary files as opposed to ASCII text. Thus, MacBinary files take up less disk space than <b>BinHex</b> files, but older applications and servers {{are more likely to}} corrupt them.|$|E
5000|$|Convert::BinHex, a Perl module {{to encode}} and decode <b>BinHex</b> files ...|$|E
5000|$|UU (.uu, [...]uue, [...]enc), PC/Unix 8 bit to 7 bit {{encoding}} {{similar to}} <b>BinHex</b> (.hqx) ...|$|E
5000|$|In 1996, Microsoft {{launched}} the Core fonts for the Web project {{to make a}} standard pack of fonts for the Internet. Arial in TrueType format was included in this project. The project allowed anyone to download and install these fonts for their own use (on end user's computers) without any fee. The project was terminated by Microsoft in August 2002, allegedly due to frequent EULA violations. For MS Windows, the core fonts for the web were provided as self-extracting executables (.exe); each included an embedded cabinet file, which can be extracted with appropriate software. For the Macintosh, the files were provided as <b>BinHexed</b> StuffIt archives (.sit.hqx). The latest font version that was available from Core fonts for the Web was 2.82, published in 2000. Later versions (such as version 3 or version 5 which include many new characters) were not available from this project. A Microsoft spokesman declared in 2002 {{that members of the}} open source community [...] "will have to find different sources for updated fonts. ... Although the EULA did not restrict the fonts to just Windows and Mac OS, they were only ever available as Windows [...]exe's and Mac archive files." [...] The chief technical officer of Opera Software cited the cancellation of the project as an example of Microsoft resisting interoperability.|$|R
50|$|Yves Lempereur, {{author of}} the first {{assembler}} for the Mac, MacASM, found {{that in order to}} upload his files to CompuServe he had to use <b>BinHex.</b> The BASIC version was very slow, so he ported it to assembler and released it as <b>BinHex</b> 1.0. The program was roughly a hundred times as fast as the BASIC version, and soon upgrade requests were flooding in.|$|E
50|$|At {{about the}} time <b>BinHex</b> 4 was released, most online {{services}} started supporting robust 8-bit file transfer protocols such as Zmodem, {{and the need for}} ASCII armoring went away. This left a problem on the Mac however, as there was still the need to encode the two forks into one. A team effort among Macintosh communications programmers resulted in MacBinary, which left the contents of the forks in their original 8-bit format and added a simple header for combining them on reception. MacBinary files were thus much smaller than <b>BinHex.</b> Lempereur released <b>BinHex</b> 5.0, almost identical to 4.0 with the exception that it used MacBinary to combine the forks before running the 8-to-6 encoding, but it saw little use, as he expected.|$|E
50|$|The first {{incarnation}} of MacBinary {{was released in}} 1985. The standard was originally specified by Dennis Brothers (author of the terminal program MacTEP and later an Apple employee), <b>BinHex</b> author Yves Lempereur, PackIt author Harry Chesley, et al. then added support for MacBinary into <b>BinHex</b> 5.0, using MacBinary to combine the forks instead of his own methods. Most terminal programs and internet utilities added built-in MacBinary support during this period as well.|$|E
5000|$|<b>BinHex,</b> {{originally}} {{short for}} [...] "binary-to-hexadecimal", is a binary-to-text encoding {{system that was}} used on the classic Mac OS for sending binary files through e-mail. Originally a hexadecimal encoding, subsequent versions of <b>BinHex</b> are more similar to uuencode, but combined both [...] "forks" [...] of the Mac file system together along with extended file information. BinHexed files take up more space than the original files, but will not be corrupted by non-"8-bit clean" [...] software.|$|E
50|$|The file upload problem {{still existed}} on CompuServe when the Mac was first {{released}} in 1984. William Davis ported <b>BinHex</b> to the Mac using Microsoft BASIC {{in a simple}} version that could encode the data fork only, ignoring the resource fork. The rise in use of Internet e-mail coincided roughly {{with the release of}} the Macintosh, and Davis's version was posted on the Info-Mac mailing list by Joel Heller in June 1984. Several newer versions were published during 1984, resulting in <b>BinHex</b> 3 that could encode both forks.|$|E
50|$|E-mail in Minuet resembles most {{standard}} e-mail programs — From:, To:, cc:, Bcc:, and Message body fields. Attachments use the <b>BinHex</b> and UUCP encoding schemes, which predated MIME and were popular in Minuet's days.|$|E
50|$|However, on the Internet, e-mail {{was still}} the primary method of moving files. At the time {{relatively}} few people had full access to the Internet, and services like FTPmail were the only way many users could download files. Years later when he first got onto the Internet, Lempereur {{was surprised to find}} that <b>BinHex</b> 4.0 was still extremely popular. The same ends could be achieved by first using MacBinary or AppleSingle to combine the forks, and then using Uuencode or Base64 on the resulting file, but none of these solutions ever became popular and <b>BinHex</b> 4.0 survived well into the late 1990s. File archives of classic Mac OS software are still filled with BinHexed files.|$|E
5000|$|The {{original}} <b>BinHex</b> was {{a fairly}} simple format, one that was not very efficient because it expanded every byte of input into two, {{as required by the}} hexadecimal representation—an 8-to-4 bit encoding. For <b>BinHex</b> 2.0, Lempereur used a new 8-to-6 encoding that improved file size by 50% and took the opportunity to add a new CRC error checking routine in place of the earlier checksum. This new encoding used the first 64 ASCII printing characters, including the space, to represent the data, similarly to uuencode. Even though the new encoding was no longer hexadecimal in nature, the established name of the program was retained. The smaller files were incompatible with the older ones, so the extension became [...]hcx, c for compact.|$|E
5000|$|<b>BinHex</b> 4 (HQX), {{which was}} used within the classic Mac OS, uses a {{different}} set of 64 characters. It uses upper and lower case letters, digits, and punctuation characters, but does not use some visually confusable characters like , , [...] and [...] Its 64-character set is [...] "".|$|E
50|$|OU Campus was {{launched}} in 1999 using the cloud computing, {{software as a service}} (SaaS) product delivery model. It was developed by OmniUpdate, a privately owned company headquartered in Camarillo, CA. OmniUpdate was started by software developers Tom Nalevanko, Lance Merker, and Yves Lempereur (developer of <b>BinHex</b> 4.0).|$|E
50|$|Binary files {{cannot be}} {{transmitted}} through 7-bit data channels directly. To work around this, binary-to-text encodings {{have been devised}} which use only 7-bit ASCII characters. Some of these encodings are uuencoding, Ascii85, SREC, <b>BinHex,</b> kermit and MIME's Base64. EBCDIC-based systems cannot handle all characters used in UUencoded data. However, the base64 encoding does not have this problem.|$|E
50|$|The {{earliest}} {{instances of}} this type of encoding were created for dialup communication between systems running the same OS — e.g., uuencode for UNIX, <b>BinHex</b> for the TRS-80 (later adapted for the Macintosh) — and could therefore make more assumptions about what characters were safe to use. For instance, uuencode uses uppercase letters, digits, and many punctuation characters, but no lowercase.|$|E
5000|$|Attaching non-text files {{was first}} done in 1980 by {{manually}} encoding 8-bit files using Mary Ann Horton's uuencode, and later using <b>BinHex</b> or xxencode and pasting the resulting text {{into the body}} of the message. When the [...] "Attachment" [...] user interface first appeared on PCs in cc:Mail around 1985, it used the uuencode format for SMTP transmission, as did Microsoft Mail later.|$|E
50|$|With {{the header}} {{extensions}} and the Base64 and Quoted-Printable MIME encodings, {{there was a}} new generation of binary transport. In practice, MIME has seen increased adoption in text messages, but it is avoided for most binary attachments. Some operating systems with metadata attached to files use specialized encoding formats. For Mac OS, both <b>Binhex</b> and special MIME types are used.|$|E
5000|$|Kermit {{can be used}} as a {{means to}} {{bootstrap}} other software, even itself. To distribute Kermit through non 8-bit clean networks Columbia developed [...]boo, a binary-to-text encoding system similar to <b>BinHex.</b> After a mainframe computer receives MS-DOS Kermit in [...]boo format, users can type in a [...] "baby Kermit" [...] in BASIC on their personal computers that downloads Kermit and convert it into binary.|$|E
5000|$|In {{order to}} solve all of these problems, Lempereur {{released}} <b>BinHex</b> 4.0 in 1985, skipping 3.0 to avoid confusion with the now long-dead BASIC version. 4.0 carefully selected its character mappings to avoid ones that were translated by mail software, encoded all the information including the file information and protected everything with multiple CRCs. The resulting [...] files were roughly the same size of the 's, but much more robust.|$|E
50|$|The {{application}} {{also features}} a Milter interface for sendmail and on-demand scanning. It has support for Zip, RAR, Tar, Gzip, Bzip2, OLE2, Cabinet, CHM, <b>BinHex,</b> SIS formats, most mail file formats, ELF executables and Portable Executable (PE) files compressed with UPX, FSG, Petite, NsPack, wwpack32, MEW, Upack and obfuscated with SUE, Y0da Cryptor. It also supports many document formats, including Microsoft Office, HTML, Rich Text Format (RTF) and Portable Document Format (PDF).|$|E
50|$|Some {{encodings}} (the {{original version}} of <b>BinHex</b> and the recommended encoding for CipherSaber) use four bits instead of six, mapping all possible sequences of 4 bits onto the 16 standard hexadecimal digits.Using 4 bits per encoded character {{leads to a}} 50% longer output than base64, but simplifies encoding and decoding—expanding each byte in the source independently to two encoded bytes is simpler than base64's expanding 3 source bytes to 4 encoded bytes.|$|E
5000|$|A self {{mounting}} {{image is}} a disk image format, commonly found on the classic Mac OS platform, that is encapsulated in an application that mounts it as a file system. When downloaded from the Internet, they are often in a BIN, <b>BinHex</b> or StuffIt file. Despite being an application, they often have a [...]smi file extension. Disk Copy, the application commonly used to handle disk images in the classic Mac OS was an optional program {{not part of the}} standard installation.|$|E
5000|$|Another {{challenge}} is preserving resource forks when transmitting files using non-resource fork-aware applications or with certain transfer methods, including email and FTP. A number of file formats, such as MacBinary and <b>BinHex,</b> {{have been created}} to handle this. Command-line system tools [...] and [...] allow manual flattening and merging of resource forks. In addition, a file server seeking to present file systems to Macintosh clients must accommodate the resource fork {{as well as the}} data fork of files; UNIX servers providing AFP support usually implement this with hidden directories.|$|E
5000|$|Some of {{the more}} notable {{features}} included the ability to extract everything from an archive by double-clicking {{on it in the}} Finder with the [...] key held down, and automatically recognizing and converting <b>BinHex</b> formatted files back into native format without a separate step. Compact Pro also featured an easy-to-use system for splitting files into parts to fit on floppy disks, a feature that most archivers implemented in an external program, if at all. An odd, but oft-used, feature was the ability to include images and notes that would display when the archive was opened, using the same basic mechanism as TeachText.|$|E
50|$|On {{the other}} hand, these forks {{would provide a}} {{challenge}} to interoperability with other operating systems. In copying or transferring a Mac OS file to a non-Mac system, the default implementations would simply strip the file of its resource fork. Most data files contained only nonessential information in their resource fork, such as window size and location, but program files would be inoperative without their resources. This necessitated such encoding schemes as <b>BinHex</b> and MacBinary, which allowed a user to encode a dual-forked file into a single stream, or inversely take a single stream so-encoded and reconstitute it into a dual-forked file usable by Mac OS.|$|E
5000|$|This {{presented}} {{a serious problem}} when the file had to be stored on other computer systems. Those systems, unaware of the fork concept, would have to store the two forks as separate files. This presented {{the possibility that the}} two would be separated at some point, or not properly recombined when they were transmitted back to the Mac. This problem led to a number of solutions that combined the two forks together into a single file, and then automatically pulling them back apart when they reached another Mac. MacBinary {{was one of the most}} popular solutions, although <b>BinHex</b> was also used on the UseNet, where links were not 8-bit clean. Apple's own solutions, [...] AppleSingle and AppleDouble, was never widely adopted in the user community.|$|E
5000|$|Due to the low-bandwidth {{connections}} {{accessible by}} early Internet users, which made downloading large files an onerous task, Info-Mac partnered with Pacific HiTech to periodically publish CD-ROMs containing selected shareware and freeware from the archive. These CDs were sold through Mac-related magazines and publications. Licensing issues required software authors to specifically allow {{their contributions to}} be included on the CD-ROM through a statement in the file's abstract. The CDs allowed wider distribution to users {{who did not have}} network access or could not spare the long download times associated with software applications. As the software was encoded in <b>BinHex</b> or MacBinary format it could be stored on non-Mac file systems such as a BBS or FTP server. Starting with the Info-Mac VI CD-ROM, the discs included the utility [...] "Spelunker" [...] which allowed users to search the archive in a user-friendly manner. Starting with the Info-Mac VIII CD-ROM, the package included two discs to offer twice the shareware and freeware.|$|E
40|$|To {{overcome}} poor font of {{the first}} e-mail systems, new models of exchange of messages between users' mailboxes have emerged. The use of systems such as <b>BinHex,</b> MAPI (Microsoft's Messaging Application Programming Interface), MIME (Multipurpose Internet Mail Extensions) or X. 400, allows, within the Internet, the "free movement" of documents containing the most varied multimedia materials...|$|E
40|$|We {{study the}} {{electromagnetic}} pion form factor and the VV - AA two point function for momenta -(600 MeV) ^ 2 < q^ 2 < (600 MeV) ^ 2 and we note {{the similarity between}} vector meson dominance and {{two versions of the}} free constituent quark model. The similarity is more striking when the momentum dependence of the quark mass is taken into account. We consider the implications for QCD and other theories. Comment: 13 pages including 3 figures, NOT TEX, file must be converted with <b>BinHex</b> 4. 0 to view and print from Macintosh, no other software neede...|$|E
