6|3634|Public
2500|$|While {{originally}} {{used primarily}} for encrypting {{the contents of}} e-mail messages and attachments from a desktop client, PGP products have been diversified since 2002 into a set of encryption applications which can be managed by an optional central policy server. [...] PGP encryption applications include e-mail and attachments, digital signatures, laptop full disk encryption, file and folder security, protection for IM sessions, <b>batch</b> <b>file</b> <b>transfer</b> encryption, and protection for files and folders stored on network servers and, more recently, encrypted or signed HTTP request/responses {{by means of a}} client-side (Enigform) and a server-side (mod openpgp) module. There is also a Wordpress plugin available, called wp-enigform-authentication, that takes advantage of the session management features of Enigform with mod_openpgp.|$|E
50|$|HS/Link is a file {{transfer}} protocol developed by Samuel H. Smith in 1991-1992. HS/Link is a high speed, full streaming, bidirectional, <b>batch</b> <b>file</b> <b>transfer</b> protocol with advanced Full-Streaming-Error-Correction. Each side of the link is allowed to provide a list of files to be sent. Files will be sent in both directions until {{both sides of the}} link are satisfied.|$|E
50|$|The first network {{connections}} were host to host interactive connections {{which allowed}} person to remote computer or local computer to remote computer interactions. To this, terminal to host connections, batch connections (remote job submission, remote printing, <b>batch</b> <b>file</b> <b>transfer),</b> and interactive file copy were added. And, {{in addition to}} connecting to host computers over custom hardware interfaces, the ability to connect to hosts or other networks over groups of asynchronous ports and via X.25 were added.|$|E
5000|$|SEAlink also {{included}} a number of features included in other XMODEM derivatives. Notable {{was the use of}} a [...] "zero packet", which was introduced in the FidoNet-related TeLink protocol in order to send file information and support <b>batch</b> <b>file</b> <b>transfers.</b>|$|R
50|$|A {{terminal}} concentrator {{was also}} developed that year, since time-sharing {{was still a}} prevalent mode of computer use. In 1975, the network shrank slightly due to budgetary constraints, but the setback was only temporary. At that point, the network provided remote login, remote <b>batch</b> and <b>file</b> <b>transfer</b> user application services.|$|R
40|$|Abstractâ€”We develop {{multi-path}} reservation algorithms for inadvance scheduling {{of large}} <b>file</b> <b>transfers</b> in connection-oriented optical networks. Specifically, {{to schedule a}} single <b>file</b> <b>transfer</b> to complete at the earliest possible time, a new max-flow based greedy algorithm(GOS) and four variants that adapt the k-shortest paths and k-disjoint paths algorithms are proposed. Meanwhile, to find an earliest-finishing schedule for a <b>batch</b> of <b>file</b> <b>transfers,</b> a linear programming based algorithm(BATCH) is developed. Extensive experiments using both real world and random networks show that our GOS algorithm provides a good balance among maximum finish time, average finish time, and computational complexity. Although our BATCH algorithm results in the smallest maximum finish time, this algorithm has a significantly larger computational requirement than our other algorithms. GOS yields <b>file</b> <b>transfer</b> schedules with similar maximum finish time and reduces average finish time while having a significantly less computational requirement. I...|$|R
50|$|While {{originally}} {{used primarily}} for encrypting {{the contents of}} e-mail messages and attachments from a desktop client, PGP products have been diversified since 2002 into a set of encryption applications which can be managed by an optional central policy server. PGP encryption applications include e-mail and attachments, digital signatures, laptop full disk encryption, file and folder security, protection for IM sessions, <b>batch</b> <b>file</b> <b>transfer</b> encryption, and protection for files and folders stored on network servers and, more recently, encrypted or signed HTTP request/responses {{by means of a}} client-side (Enigform) and a server-side (mod openpgp) module. There is also a Wordpress plugin available, called wp-enigform-authentication, that takes advantage of the session management features of Enigform with mod_openpgp.|$|E
50|$|The Merit Network {{was formed}} in 1966 as the Michigan Educational Research Information Triad to explore {{computer}} networking between three of Michigan's public universities {{as a means to}} help the state's educational and economic development. With initial support from the State of Michigan and the National Science Foundation (NSF), the packet-switched network was first demonstrated in December 1971 when an interactive host to host connection was made between the IBM mainframe computer systems at the University of Michigan in Ann Arbor and Wayne State University in Detroit. In October 1972 connections to the CDC mainframe at Michigan State University in East Lansing completed the triad. Over the next several years in addition to host to host interactive connections the network was enhanced to support terminal to host connections, host to host batch connections (remote job submission, remote printing, <b>batch</b> <b>file</b> <b>transfer),</b> interactive file transfer, gateways to the Tymnet and Telenet public data networks, X.25 host attachments, gateways to X.25 data networks, Ethernet attached hosts, and eventually TCP/IP and additional public universities in Michigan join the network. All of this set the stage for Merit's role in the NSFNET project starting in the mid-1980s.|$|E
50|$|Merit Network, Inc., an {{independent}} non-profit 501(c)(3) corporation governed by Michigan's public universities, {{was formed in}} 1966 as the Michigan Educational Research Information Triad to explore computer networking between three of Michigan's public universities {{as a means to}} help the state's educational and economic development. With initial support from the State of Michigan and the National Science Foundation (NSF), the packet-switched network was first demonstrated in December 1971 when an interactive host to host connection was made between the IBM mainframe computer systems at the University of Michigan in Ann Arbor and Wayne State University in Detroit. In October 1972 connections to the CDC mainframe at Michigan State University in East Lansing completed the triad. Over the next several years in addition to host to host interactive connections the network was enhanced to support terminal to host connections, host to host batch connections (remote job submission, remote printing, <b>batch</b> <b>file</b> <b>transfer),</b> interactive file transfer, gateways to the Tymnet and Telenet public data networks, X.25 host attachments, gateways to X.25 data networks, Ethernet attached hosts, and eventually TCP/IP and additional public universities in Michigan join the network. All of this set the stage for Merit's role in the NSFNET project starting in the mid-1980s.|$|E
40|$|We {{present a}} data {{transfer}} {{system for the}} grid environment built {{on top of the}} open source FDT tool (Fast Data Transfer) developed by Caltech in collaboration with the National University of Science and Technology (Pakistan). The enhancement layer above FDT consists of a client program - fdtcp (FDT copy) and a fdtd service (FDT daemon). This pair of components allows for GSI authenticated data transfers and offers to the user (or data movement production service) interface analogous to grid middle-ware data transfer services - SRM (i. e. srmcp) or GridFTP (i. e. globus-url-copy). fdtcp/fdtd enables third-party, <b>batched</b> <b>file</b> <b>transfers.</b> An important aspect is monitoring by means of the MonALISA active monitoring light-weight library ApMon, providing real-time monitoring and arrival time estimates as well as powerful troubleshooting mechanism. The actual transfer is carried out by the FDT application, an efficient application capable of reading and writing at disk speed over wide area networks. FDT?s excellent performance was demonstrated e. g. during SuperComputing 2009 Bandwidth Challenge. We also discuss the storage technology interface layer, specifically focusing on the open source Hadoop distributed file system (HDFS), presenting the recently developed FDT-HDFS sequential write adapter. The integration with CMS (Compact Muon Solenoid) PhEDEx is described as well. The PhEDEx project (Physics Experiment Data Export) is responsible for facilitating large-scale CMS data transfers across the grid. Ongoing and future development involves interfacing with next generation network services developed by OGF NSI-WG, GLIF and DICE groups, allowing for network resource reservation and scheduling...|$|R
50|$|It is {{designed}} for automation of various functions in the enterprise including traditional IBM mainframe OS/MVS (z/OS today) JCL, <b>batch</b> <b>files</b> and shell scripts, as well as routine functions such as invoking database stored procedures, invoking and using Web services and handling <b>file</b> <b>transfers</b> {{inside and outside the}} organization.|$|R
50|$|The TPS is {{configured}} to periodically check each {{platform for}} any new CDR batches becoming available. The TPS uses standard network protocols, including FTP, SFTP and FTPS to <b>transfer</b> the CDR <b>batch</b> <b>file</b> to the TPS. Some platform vendors have {{developed their own}} <b>file</b> <b>transfer</b> protocols, {{in which case the}} TPS need to be customized in order to retrieve the <b>batch</b> <b>files</b> from these platforms. The TPS is also responsible for ensuring the integrity of each <b>file</b> <b>transferred</b> ensuring that no IP network errors renders the file corrupt. Checking for duplicate files from the particular platform is also a responsibility of the TPS to ensure that no file is processed more than once, resulting in duplication of CDRs. Once <b>batch</b> <b>files</b> are retrieved from a particular network element, they are backed up to long term media. Some governments requires that record of each and every transaction need to be stored infinitely in its raw (encoded) format. The batch sizes and frequency differs for each network element and is also directly related to the number of active subscribers on a particular telecommunication network.|$|R
5000|$|The [...] command allows subroutines within <b>batch</b> <b>file.</b> The [...] {{command in}} COMMAND.COM only {{supports}} calling external <b>batch</b> <b>files.</b>|$|R
5000|$|<b>Batch</b> <b>files</b> and the <b>batch</b> {{processor}} {{could be}} used to issue a series of commands with some rudimentary control flow. <b>Batch</b> <b>files</b> had the extension [...]BAT.|$|R
50|$|The {{detailed}} {{handling of}} <b>batch</b> <b>files</b> has changed. Some of the detail {{in this article}} applies to all <b>batch</b> <b>files,</b> while other details apply only to certain versions.|$|R
5000|$|A <b>batch</b> <b>file</b> {{is a kind}} of script file in DOS, OS/2 and Microsoft Windows. It {{consists}} of a series of commands to be executed by the command-line interpreter, stored in a plain text <b>file.</b> A <b>batch</b> <b>file</b> may contain any command the interpreter accepts interactively and use constructs that enable conditional branching and looping within the <b>batch</b> <b>file,</b> such as [...] "if", [...] "for", [...] "goto" [...] and labels. The term [...] "batch" [...] is from batch processing, meaning [...] "non-interactive execution", though a <b>batch</b> <b>file</b> may not process a batch of multiple data.|$|R
50|$|In October 1999, Dale Shipp {{created a}} fix called BWREPFIX that corrects {{the problem on}} the users end. This {{solution}} uses a <b>batch</b> <b>file</b> in the archiver section rather than calling the archiver directly. In the <b>batch</b> <b>file,</b> the outbound message dates are fixed and then the <b>batch</b> <b>file</b> calls the archiver which then packs the messages for transmitting to the BBS.|$|R
5000|$|...bat: The first {{filename}} extension used by Microsoft for <b>batch</b> <b>files.</b> This extension runs with DOS and all versions of Windows, under COMMAND.COM or cmd.exe, despite {{the different ways}} the two command interpreters execute <b>batch</b> <b>files.</b>|$|R
50|$|SYS$INPUT - Standard input. Used interactively, this {{represents}} the terminal keyboard. Used in a <b>batch</b> <b>file,</b> it is <b>batch</b> <b>file</b> lines not preceded with a $ symbol, or specified as an input deck using the DECK command.|$|R
5000|$|BATCH ENHANCER (or BE) (or BE.EXE,) is an applet or {{free-standing}} utility packaged with Norton Utilities (NU) to graphically {{enhance the}} presentation of <b>batch</b> <b>files</b> (<b>Batch</b> <b>files</b> are like a script, a series of commands executed at once, automatically by the computer itself). Batch Enhancer allows the use of colours, square graphics, delays, beeps, a little more complex decision parameters than the usual <b>batch</b> <b>file</b> programming, easier to create user-choice menus, and other functions.|$|R
50|$|OS/2's <b>batch</b> <b>file</b> {{interpreter}} {{also supports}} an EXTPROC command. This passes the <b>batch</b> <b>file</b> {{to the program}} named on the EXTPROC file as a data file. The named program can be a script file; {{this is similar to}} the #! mechanism.|$|R
5000|$|The Unix [...] {{mechanism}} and OS/2 EXTPROC command facilitate {{the passing of}} <b>batch</b> <b>files</b> to external processors. One can use these mechanisms to write specific command processors for dedicated uses, and process external data files which reside in <b>batch</b> <b>files.</b>|$|R
5000|$|As {{with any}} other {{programming}} language, <b>batch</b> <b>files</b> can be used maliciously. Simple trojans and fork bombs are easily created, and <b>batch</b> <b>files</b> can do a form of DNS poisoning by modifying the hosts <b>file.</b> <b>Batch</b> viruses are possible, and can also spread themselves via USB flash drives by using Windows' Autorun capability.|$|R
5000|$|So {{to run a}} <b>batch</b> <b>file</b> on a UNC share, {{assign a}} {{temporary}} drive letter to the UNC share, and use the UNC share as the working directory of the <b>batch</b> <b>file,</b> a Windows shortcut can be constructed that looks like this: ...|$|R
5000|$|... @ - Begins {{execution}} of a <b>batch</b> <b>file</b> CAR - Runs Cartridge Dn: - Changes default drive DIR - Directory END - Tells DOS XL to stop batch execution (used in a <b>batch</b> <b>file)</b> ERA - Erase file(s) LOA - Load file(s) in memory NOS - NO Screen. Turns off command echo to screen PRO - Protect. Enables write-protect on file(s) REM - REMark. Used for user remarks in <b>batch</b> <b>files</b> REN - REName. Renames file(s) RUN - Jumps to run address SAV - Saves a portion of memory to disk SCR - Enables commands to be echoed to screen (for <b>batch</b> <b>files)</b> TYP - Displays ASCII or ATASCII text files to screen UNP - Turns off write-protect on file(s) ...|$|R
5000|$|The {{command prompt}} {{requires}} {{the use of}} drive letters to assign a working directory, which makes running complex <b>batch</b> <b>files</b> stored on a server UNC share more difficult. While a <b>batch</b> <b>file</b> can be run from a UNC file path, the working directory default is [...] "C:\Windows\system32\" ...|$|R
50|$|Optimize {{can support}} <b>batch</b> <b>file</b> up to 20KB.|$|R
50|$|Optimize support {{indented}} CALL {{statements in}} <b>batch</b> <b>files.</b>|$|R
5000|$|<b>Batch</b> <b>file</b> scripting, {{command-line}} interface and [...]NET wrapper ...|$|R
50|$|Return code on program {{termination}} for <b>batch</b> <b>file</b> usage.|$|R
5000|$|Email {{notifications}} and triggers for <b>batch</b> <b>files,</b> executables and scripts ...|$|R
5000|$|Many [...]ZAP Files require user intervention. This can be {{overcome}} if the Systems Administrator creates a <b>Batch</b> <b>file</b> and runs a quiet or silent install from a <b>Batch</b> <b>File</b> command. However, running an Executable file (such as setup.exe) often bypasses quiet, passive or silent installation switches, even if specified in the SetupCommand.|$|R
50|$|This also solves {{a problem}} related to User Account Control (UAC) on Windows Vista and newer. When an {{administrator}} is logged on and UAC is enabled, and {{they try to}} run a <b>batch</b> <b>file</b> as administrator from a network drive letter, using the right-click file context menu, the operation will unexpectedly fail. This is because the elevated UAC privileged account context does not have network drive letter assignments, {{and it is not}} possible to assign drive letters for the elevated context via the Explorer shell or logon scripts. However, by creating a shortcut to the <b>batch</b> <b>file</b> using the above PUSHD / POPD construct, and using the shortcut to run the <b>batch</b> <b>file</b> as administrator, the temporary drive letter will be created and removed in the elevated account context, and the <b>batch</b> <b>file</b> will function correctly.|$|R
5000|$|DOS {{by default}} {{provides}} a primitive ability for shell scripting, via <b>batch</b> <b>files</b> (with the filename extension [...] ). These are text files {{that can be}} created in any text editor. They are executed {{in the same fashion}} as compiled programs, and run each line of the <b>batch</b> <b>file</b> as a command. <b>Batch</b> <b>files</b> can also make use of several internal commands, such as GOTO and conditional statements. GOSUB and simple arithmetic is supported with the DR DOS COMMAND.COM as well as some with third-party shells like 4DOS; however, no real form of programming is usually enabled.|$|R
50|$|Such filters {{may be used}} in <b>batch</b> <b>files</b> (*.bat, *.cmd etc.).|$|R
5000|$|The startup <b>batch</b> <b>file</b> AUTOEXEC.BAT is {{then run}} by the shell.|$|R
