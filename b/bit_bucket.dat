12|6|Public
5000|$|<b>Bit</b> <b>bucket,</b> in computers, a {{destination}} to write data {{which does not}} retain it ...|$|E
5000|$|In {{computing}} jargon, the <b>bit</b> <b>bucket</b> {{is where}} lost computerized data has gone, by any means; any data {{which does not}} end up where it is supposed to, being lost in transmission, a computer crash, or the like, {{is said to have}} gone to the <b>bit</b> <b>bucket</b> [...] - [...] that mysterious place on a computer where lost data goes, as in: ...|$|E
50|$|In {{programmer}} jargon, especially Unix jargon, it {{may also}} be called the <b>bit</b> <b>bucket</b> or black hole.|$|E
40|$|A batch code encodes {{a string}} x into an m-tuple of strings, called buckets, such that each batch of k bits from x can be decoded by reading at most one (more generally, t) <b>bits</b> from each <b>bucket.</b> Batch codes {{can be viewed}} as {{relaxing}} several combinatorial objects, including expanders and locally decodable codes...|$|R
40|$|When {{the teeth}} of the digger <b>bucket</b> <b>bit</b> into the ditch {{vegetation}} at the edge of Croghan bog in County Offaly, Larry Corley noticed something solid sticking out of the cleaned drain. Jumping out of his cab, and bending down, he was shocked to find it was a human arm, ending in a huge thumb (Grice 2006 : 19). He reported i...|$|R
40|$|In this {{extended}} abstract, {{we describe}} and analyse a streaming probabilistic sketch, HYPERMINHASH, {{to estimate the}} Jaccard index (or Jaccard similarity coefficient) over two sets A and B. HyperMinHash {{can be thought of}} as a compression of standard MinHash by building off of a HyperLogLog count-distinct sketch. Given Jaccard index δ, using k buckets of size O((l) + (|A ∪ B|)) (in practice, typically 2 bytes) per set, HyperMinHash streams over A and B and generates an estimate of the Jaccard index δ with error O(1 /l + √(k/δ)). This improves on the best previously known sketch, MinHash, which requires the same number of storage units (buckets), but using O((|A ∪ B|)) <b>bit</b> per <b>bucket.</b> For instance, our new algorithm allows estimating Jaccard indices of 0. 01 for set cardinalities on the order of 10 ^ 19 with relative error of around 5...|$|R
5000|$|The errant byte, {{having failed}} the parity test, is unceremoniously {{dumped into the}} <b>bit</b> <b>bucket,</b> the computer's wastepaper basket. Erik Sandberg-Diment ...|$|E
50|$|The <b>bit</b> <b>bucket</b> {{is related}} to the First In Never Out buffer and Write Only Memory, in a joke {{datasheet}} issued by Signetics in 1972.|$|E
50|$|This is {{a humorous}} but common phrase. Something {{goes into the}} <b>bit</b> <b>bucket</b> when it is deleted, {{generally}} irreversibly and quite often wrongly, such as files or emails that just disappear.|$|E
40|$|A batch code encodes {{a string}} x into an m-tuple of strings, called buckets, such that each batch of k bits from x can be decoded by reading at most one (more generally, t) <b>bits</b> from each <b>bucket.</b> Batch codes {{can be viewed}} as {{relaxing}} several combinatorial objects, including expanders and locally decodable codes. We initiate the study of these codes by presenting some constructions, connections with other problems, and lower bounds. We also demonstrate the usefulness of batch codes by presenting two types of applications: trading maximal load for storage in certain load-balancing scenarios, and amortizing the computational cost of private information retrieval (PIR) and related cryptographic protocols...|$|R
5000|$|Two men (Vic and Bob) {{who came}} on in ridiculous leotards, silly wigs and big false teeth, {{wielding}} <b>bits</b> of wood, <b>buckets,</b> hoops with tomatoes {{attached to them}} and big placards announcing such things as [...] "Squirrel in bucket of hot trout = racial harmony." [...] The pair would just crash and fall around the place, being ridiculously clumsy and not making it at all clear what [...] "point" [...] {{they were supposed to}} be making. By the end of their [...] "performance" [...] the set would be in disarray and Les would have to clean up very quickly. While these characters baffled the audience and even the show's producers, Vic and Bob believe them to be the best characters on the show.|$|R
50|$|The {{term was}} then {{generalized}} into any place where useless bits go, a useful computing concept {{known as the}} null device. The term <b>bit</b> <b>bucket</b> is also used in discussions of bit shift operations.|$|E
5000|$|Originally, the <b>bit</b> <b>bucket</b> was the {{container}} on Teletype machines or IBM key punch machines into which chad {{from the paper}} tape punch or card punch was deposited; the formal name is [...] "chad box" [...] or (at IBM) [...] "chip box".|$|E
5000|$|Jerry Pournelle {{wrote in}} 1986 of his wish for {{improvements}} to a BIX offline reader: [...] "What I really need, though, {{is a program}} that will ... sort through the messages, assigning some to a priority file and others to the <b>bit</b> <b>bucket</b> depending on subject matter and origin".|$|E
50|$|Using a DNS {{sinkhole}} {{by manipulating}} the hosts file exploits {{the fact that}} most operating systems store a file with IP address, domain name pairs which is consulted by most browsers before using a DNS server to look up a domain name. By assigning the loopback address to each known ad server, the user directs traffic intended to reach each ad server to the local machine or to a virtual black hole of /dev/null or <b>bit</b> <b>bucket.</b>|$|E
50|$|Early Hollerith keypunches were manual devices. Later keypunches were {{electromechanical}} devices which combined several {{functions in}} one unit. These often resembled small desks with keyboards {{similar to those}} on typewriters and were equipped with hoppers for blank cards and stackers for punched cards. Some keypunch models could print, {{at the top of}} a column, the character represented by the hole(s) punched in that column. The small pieces punched out by a keypunch fell into a chad box, or (at IBM) chip box, or <b>bit</b> <b>bucket.</b>|$|E
5000|$|Plonk is a Usenet jargon {{term for}} adding a {{particular}} poster to one's kill file so that poster's future postings are completely ignored. It {{was first used}} in 1989, and by 1994 was a commonly used term on Usenet. To publicly repudiate a poster, it is added to one's reply or is simply used as the entire, one-word reply. It is also used as a verb, as in: [...] "I plonked that idiot". The word {{is an example of}} onomatopoeia, intended to humorously represent the metaphorical sound of the plonked user hitting the bottom of the kill file (imagined perhaps as a <b>bit</b> <b>bucket).</b>|$|E

