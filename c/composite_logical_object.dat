0|192|Public
5000|$|In 2006 two {{developers}} {{with experience}} in commercial J2EE products decided {{to start a business}} called <b>Logical</b> <b>Objects,</b> with the mission to maintain and evolve the Open Source project Contineo. [...] After one year, <b>Logical</b> <b>Objects</b> decided to branch the old project and to start a completely new product called LogicalDOC.|$|R
50|$|Each table may {{represent}} an implementation of either a <b>logical</b> <b>object</b> or a relationship joining {{one or more}} instances {{of one or more}} <b>logical</b> <b>objects.</b> Relationships between tables may then be stored as links connecting child tables with parents. Since complex logical relationships are themselves tables they will probably have links to more than one parent.|$|R
40|$|Abstract. The system aims at managing, with {{a unique}} language, data sampled from {{different}} nodes of a pervasive system, providing them to the final user. It is composed of three elements: the nodes are heteroge-neous devices equipped with sensors, which collect data and send them through the network managed by the middleware; PERLA (PERva-sive LAnguage) is the SQL like language used to query <b>logical</b> <b>objects,</b> that are abstractions of the nodes; themiddleware is a stack of software layers providing an implementation of the <b>logical</b> <b>object</b> abstraction. An-swers to the queries {{take into account the}} context the system operates within, in order to provide the user with data appropriate to different environmental conditions. 1 The Language PERLA is a language which allows the user to interact with <b>logical</b> <b>objects</b> by wrapping physical devices [1]. It is worth to notice that a <b>logical</b> <b>object</b> can abstract both a single sensor node and a set of devices (e. g. a whole WSN). Th...|$|R
40|$|This article explores {{preservation}} of digital material {{in a library}} context {{with a focus on}} <b>logical</b> <b>object</b> modelling that takes both preservation and dissemination into account. The article describes normalisation of data expressed via a <b>logical</b> <b>object</b> model. This <b>logical</b> <b>object</b> model is designed to support the requirements for joint preservation and dissemination. Additionally the article includes a suggestion for a possible implementation that respects the <b>logical</b> <b>object</b> model. Formulation, of the requirements and possible implementation for a <b>logical</b> <b>object</b> model, is based on observation of current trends, as well as results from a research project on preservation strategies for libraries. The research project has been carried out at the Royal Library of Denmark, and it is based on a case study of a 10 year old web application containing the Archive of Danish Literature. The formulated requirements include e. g. requirements for many-to-many migration in preservation and requirements for homogenous navigation and social networking in dissemination. Many of the described observations and results have parallels to other types of material. These parallels are partly described, and thus the results {{can be used as a}} contribution to development of systems and strategies for preservation and dissemination in the new decade and beyond...|$|R
50|$|In the 2015 <b>Logical</b> <b>Objects</b> {{changed its}} {{business}} name to LogicalDOC, {{the same name}} of the product.|$|R
5000|$|Corresponding to {{the newly}} {{constructed}} <b>logical</b> <b>objects,</b> called conditional events, is a new definition of a probability function, , based on a standard probability function P: ...|$|R
40|$|The {{concept of}} schedulable region {{previously}} introduced to broadband networks with {{quality of service}} guarantees is extended to multimedia devices such as audio/video processing and disk storage units. The resulting multimedia capacity region characterizes the amount of resources a physical device is able to provide under quality of service constraints. The modeling methodology supports a straightforward association of resources with <b>logical</b> <b>objects</b> and, thereby, the mapping of <b>logical</b> <b>objects</b> onto physical objects with quality of service guarantees. Examples showing {{the size and shape}} of the multimedia capacity region of various physical devices are given...|$|R
5000|$|Pragmatic mapping — a term {{in current}} use in linguistics, computing, {{cognitive}} psychology, and related fields — {{is the process}} by which a given abstract predicate (a symbol) comes to be associated through action (a dynamic index) with some particular <b>logical</b> <b>object</b> (an icon). The <b>logical</b> <b>object</b> may be a thing, person, relation, event, situation, or a string of these at any conceivable level of complexity. A relatively simple example is the conventional — successful, appropriate, and mundanely “true” — linking of a proper name to the person of whom it is a conventional [...]|$|R
5000|$|Nothing of {{importance}} {{changes in the}} pragmatic mapping process {{if it turns out}} that Jesse James and Robert Ford are [...] of someone’s imagination, excepting, of course, the truth value of the propositions that include the <b>logical</b> <b>object</b> of the name, Jesse James. In ordinary conversation and human communication in general, it has been demonstrated logically and mathematically that meaning is utterly dependent on the true and appropriate pragmatic mapping of symbols to their conventional <b>logical</b> <b>objects.</b> Infants depend on exemplification of such mapping relations to acquire languages and all meaningful linguistic representations have been proved to depend on such mappings.|$|R
50|$|The Timer Service {{provides}} a {{mechanism by which}} client processes can set timers and be notified when a timer expires. A timer is a <b>logical</b> <b>object</b> that is dynamically created and represents its expiry time as either an absolute time or duration from the current time.|$|R
50|$|A view is a <b>logical</b> <b>object</b> with no {{physical}} disk presence other than its definition. A view {{is like a}} predefined select query on one or more tables or other views. A view may be treated like any table, but cannot have an index or structure imposed upon it.|$|R
40|$|Abstract. In {{this work}} we present an {{abstraction}} {{that allows a}} set of distributed processes, aware of their respective positions in space, to collectively maintain information associated with an area in the physical world. This abstraction is a <b>logical</b> <b>object</b> shared between participating processes that provides two operations, namely read and write. ...|$|R
40|$|Substitution-invariant {{consequence}} {{relations between}} sets of formulas and formulas are taken {{as the primary}} <b>logical</b> <b>objects</b> in Abstract Algebraic Logic (AAL). Logics so defined (see Section 2) may satisfy different replacement properties, the strongest of which says that for any set of formulas Γ, any formulas ϕ, ψ, δ and any propositiona...|$|R
5000|$|The correct Tagalog {{translations}} for {{the intended}} meanings in (2) {{are found in}} (3), where the verbs have been passivised {{in order to raise}} the <b>logical</b> direct <b>object</b> in (3a) and the <b>logical</b> indirect <b>object</b> in (3b) to subject position. (Tagalog can have more than one passive voice form for any given verb.) ...|$|R
50|$|Objectivity/DB uses a {{distributed}} storage hierarchy. Objects {{are stored}} in logical clusters called containers. The containers {{are stored in}} databases that are cataloged in a federated database. Every object has a unique 64-bit Object Identifier (OID) that is a <b>composite</b> <b>logical</b> structure. The physical address space limitation for a single federation is in the millions of Terabytes range. The largest publicized Objectivity/DB installation, at SLAC's BaBar experiment, stored over a Petabyte of objects.|$|R
2500|$|The correct Tagalog {{translations}} for {{the intended}} meanings in (2) {{are found in}} (3), where the verbs have been passivised {{in order to raise}} the <b>logical</b> direct <b>object</b> in (3a) and the <b>logical</b> indirect <b>object</b> in (3b) to subject position. [...] (Tagalog can have more than one passive voice form for any given verb.) ...|$|R
40|$|Objects In this section, {{we discuss}} the {{following}} kinds of logical object: natural cardinals, extensions, directions, shapes, and truth values. The material concerning the latter four kinds of <b>logical</b> <b>objects</b> are presented here as new results of OT. However, before introducing those results, we first briefly rehearse the development of number theory in Zalta [1999]...|$|R
50|$|CDP runs as {{a service}} that captures changes to data to a {{separate}} storage location. There are multiple methods for capturing the continuous changes involving different technologies that serve different needs. CDP-based solutions can provide fine granularities of restorable objects ranging from crash-consistent images to <b>logical</b> <b>objects</b> such as files, mail boxes, messages, and database files and logs.|$|R
40|$|In {{this work}} we present an {{abstraction}} {{that allows a}} set of distributed processes, aware of their respective positions in space, to collectively maintain information associated with an area in the physical world. This abstraction is a <b>logical</b> <b>object</b> shared between participating processes that provides two operations, namely read and write. © 2008 Springer Berlin Heidelberg...|$|R
40|$|We {{present the}} design of an OSI-based network {{management}} system for the Xunet ATM platform. We de#ne a set of inheritance and containment trees and elaborate {{on the problem of}} linking <b>logical</b> <b>objects</b> in the Management Information Base with the corresponding network objects. Furthermore, we address several issues that are left open by the OSI management standards and require further consideration by the software developer, such as maintaining the consistency of <b>logical</b> <b>objects,</b> increasing the performance of the management agent, and recovering from failures. Finally,we identify the need for a more formal and precise model for network management that {{can take advantage of the}} many commonalities in the functionality of ATM networks to ensure portabilitybetween di#erent platforms. 1. Introduction Future ATM networks will require powerful management capabilities for con#guration, performance and fault management. It is not only the large size but also the high level of complexity [...] ...|$|R
40|$|Association Rules are a {{basic concept}} of data mining. They are, however, not {{understood}} as <b>logical</b> <b>objects</b> {{which can be}} used for reasoning. The {{purpose of this paper is}} to investigate a model based semantic for implications with certain constraints on their support and confidence in relational data, which then resemble association rules, and to present a possibility to decide entailment for them...|$|R
40|$|International audienceIn a {{replicated}} database, {{the consistency}} level defines {{whether and how}} {{the values of the}} replicas of a <b>logical</b> <b>object</b> may diverge in the presence of updates. Eventual consistency is the weakest consistency level that guarantees convergence. Informally, it requires that all replicas of an object will eventually reach the same final value, assuming that no new updates are submitted to the object...|$|R
50|$|Unfortunately, philosopher David Lewis {{showed that}} in {{orthodox}} probability theory, only certain trivial Boolean algebras with very few elements contain, for any given A and B, an event X such that P(X) = P(B|A) is true for any probability function P. Later extended by others, this result stands as a major obstacle to any talk about <b>logical</b> <b>objects</b> that can be the bearers of conditional probabilities.|$|R
40|$|In a {{replicated}} database, {{the consistency}} level defines {{whether and how}} {{the values of the}} replicas of a <b>logical</b> <b>object</b> may diverge in the presence of updates. Eventual consistency is the weakest consistency level that guarantees convergence. Informally, it requires that all replicas of an object will eventually reach the same, correct, final value, assuming that no new updates are submitted to the object. Eventual consistency is an important correctness criteria in systems with a lazy, update-anywhere strategy, also referred to as optimistic replication (q. v.). Update operations can be submitted and executed on any node, and the propagation of updates occurs lazily after commit. Conflict resolution and reconciliation must ensure that all replicas (copies) of a <b>logical</b> <b>object</b> eventually converge to the same value. Different objects are considered independent. In a system where updates are continuously submitted, eventual consistency can be defined by a weak form of schedule equivalence [1]. A schedule Sx n describes the sequence of update operations node n performs on its replica o...|$|R
40|$|Amplitudes are {{the major}} <b>logical</b> <b>object</b> in Quantum Theory. Despite this fact they {{presents}} no physical reality and in consequence only observables can be experimetally checked. We discuss {{the possibility of a}} theory of Quantum Probabilities capable of give full account to quantum phenomena. Advanteges of this formulation are the evidence of physical processes not described by the orotodox formulation using amplitudes and the possibility of a full algoritimization of Quantum Mechanics. Comment: 11 page...|$|R
40|$|This paper {{considers}} {{the use of}} the Guide hypertext system for electronic journal provision. The feasibility of providing appropriate tools for journal users with Guide is illustrated by discussing features developed for indexing, searching, annotating, saving and printing journal components. The use of Guide's <b>logical</b> <b>objects</b> or it contexts is central {{to the development of a}} useful interface for browsing and reading journals. A prototype Guide electronic journal incorporating these tools is described...|$|R
5000|$|A {{conditional}} event algebra (CEA) is an algebraic structure whose domain consists of <b>logical</b> <b>objects</b> described by statements of forms such as [...] "If A, then B," [...] "B, given A," [...] and [...] "B, in case A." [...] Unlike the standard Boolean algebra of events, a CEA allows the defining of a probability function, P, which satisfies the equation P(If A then B) = P(A and B) / P(A) over a usefully {{broad range of}} conditions.|$|R
40|$|Part 1 : Full PapersInternational audienceAccess control models {{generally}} {{distinguish between}} {{physical access control}} that mediates access to physical resources such as buildings, sections of buildings or individual rooms, and logical access control that mediates access to <b>logical</b> <b>objects</b> such as information stored in files or databases. All logical access control models make some, more or less implicit, assumptions about the physical access control model, e. g.  that servers are locked {{in a room with}} restricted access. However, problems arise when a <b>logical</b> <b>object</b> gets a physical representation, e. g.  when a file is displayed on a screen or printed, because the logical access control model has no way to ensure, or even to monitor, that the physical access control policies are being enforced. Traditionally, physical access control policies are enforced by compartmentalization. Users are separated from other users and resources by placing them in different physical locations such as different offices in a building. Access {{from one to the other}} is impossible without passing a guard or a door lock, i. e., guards or distribution of keys/access-cards effectively enforce the physical access control policy. However, these mechanisms are generally coarse-grained, inflexible and expensive. In this paper, we propose a Sensor Enhanced Access Control (SEAC) model that extends existing logical access control models with context-awareness. This allows the model to incorporate information about the physical environment and to explicitly define and enforce physical access control policies for <b>logical</b> <b>objects</b> that have physical representations. A prototype implementation of the SEAC model has been developed for the Unix platform. The prototype protects file data when displayed on a computer screen by managing the visibility of windows in the X Window System. Context-awareness is provided by a simple motion detection system build using cheap web-cameras. However, the system is designed so that the sensor component easily can be replaced, making it possible to deploy advanced sensor technologies...|$|R
40|$|UnrestrictedThe World Wide Web {{has become}} one of the most {{important}} information resources today. Web pages are designed for visual browsing by human users. However, information on the web is also accessed by computer applications and specialized browsing devices. These computer applications and devices need to retrieve, filter, process, index, and present information on the web in sophisticated ways, not just simply rendering web pages like a conventional browser.; In order to facilitate the information filtering and processing of these computer applications and devices, it is desirable to include semantic knowledge into the processing of web pages. Thus it is necessary to determine the logical structure of web pages, i. e. information regions on the web pages and their inter-relationships.; This thesis develops a formal model for representing the logical structure of web pages and presents algorithms for automatically generating the logical structure tree. Instead of using rule based classification approaches, it identifies <b>logical</b> <b>objects</b> by analyzing the structural and semantic features, by checking the lifetime of objects on the web page, and determines the functionality of <b>logical</b> <b>objects</b> using neural networks.; To evaluate the logical structure model, this thesis uses it to categorize search engine results. By classifying the search results into categories, such as articles, product lists, portal pages, homepages of commercial and non-commercial websites, etc., application programs can have a better understanding of the search results.; This thesis also evaluates the logical structure model and algorithms by applying them to ranking the search engine results. By analyzing a web page's logical structure, we can have a more comprehensive understanding about the structure of the web page, and also the importance of each information region. Instead of taking the entire web page as the atomic information unit and giving all hyperlinks and occurrences of keywords on the web page the same weight of importance, we can use individual <b>logical</b> <b>objects</b> as atomic information units and give each information unit different weight according to its functionality and importance. Therefore we can achieve better indexing and more precise ranking of web pages...|$|R
5000|$|Object Manager (internally called Ob) is a {{subsystem}} implemented {{as part of}} the Windows Executive {{which manages}} Windows resources. Each resource, which are surfaced as <b>logical</b> <b>objects,</b> resides in a namespace for categorization. Resources can be physical devices, files or folders on volumes, Registry entries or even running processes. All objects representing resources have an [...] property and other metadata about the resource. Object Manager is a shared resource, and all subsystems that deal with the resources have to pass through the Object Manager.|$|R
40|$|I {{argue in}} this paper that agreeing past participles are merged {{externally}} in the derivation in V endorsed with a feature [+resultative], whereas non-agreeing past participles are bound to value a feature [+perfective] against the have-auxiliary. Phi-agreement on the former kind of participle occurs since the meaning [+resultative] denotes a property of the <b>logical</b> <b>object,</b> which happens to merge {{in the position of}} sister to V-en. As postulated in standard frameworks, phi-agreement consists in that the V-en form values uninterpretable phi-features against the DP object. In contrast with agreeing past participles, non-agreeing past participles are merged externally in the form of V and they get their –en suffix in v valued against the have-auxiliary once the latter enters the derivation. The meaning or interpretation of this –en suffix is [+perfective] or [+anterior]. No phi-agreement occurs between these V-en forms marked [+perfective] and their <b>logical</b> <b>object</b> (whenever they select for one) since [+perfective] is a property of the event or situation as a whole, and not of the object. It is further suggested that the specific Agree relation that is phi-agreement appears not to be subject to configurations of asymmetric c-command, but to just occur on external Merge of the DP that bears the corresponding valued, interpretable phi-features...|$|R
40|$|Abstract We {{develop a}} general {{theoretical}} framework for statistical logical learning with kernels based on dynamic propositionalization, where structure learning corresponds to in-ferring a suitable kernel on <b>logical</b> <b>objects,</b> and parameter learning corresponds to function {{learning in the}} resulting reproducing kernel Hilbert space. In particular, we study the case where structure learning is performed by a simple FOIL-like algorithm, and propose alter-native scoring functions for guiding the search process. We present an empirical evaluation on several data sets in the single-task {{as well as in}} the multi-task setting...|$|R
40|$|Abstract. In {{this work}} {{we present a}} novel {{abstraction}} that allows a set of distributed processes, aware of their respective positions in space, to collectively maintain information associated to an area in the physical world. This abstraction is a <b>logical</b> <b>object</b> shared between participating processes and provides two operations, namely read and write, as for traditional registers. This paper provides a specification and implementation of such a shared object for non concurrent writes and multiple readers, then describes a possible extension to concurrent writes. We also provide insights on how this kind of objects could be useful to program location-aware applications...|$|R
40|$|Two {{complementary}} {{methods are}} proposed for characterizing the spatial structure of digitized technical documents and labelling various logical components without using optical character recognition. The top-down method segments and labels the page image simultaneously using publication-specific {{information in the}} form of a page-grammar. The bottom-up method naively segments the document into rectangles that contain individual connected components, combines blocks using knowledge about generic layout <b>objects,</b> and identifies <b>logical</b> <b>objects</b> using publication-specific knowledge. Both methods are based on the X-Y tree representation of a page image. The procedures are demonstrated on scanned and synthesized bit-maps of the title pages of technical articles...|$|R
40|$|Our {{goal is to}} {{show that}} the {{standard}} model-theoretic concept of types can be applied in the study of order-invariant properties, i. e., properties definable in a logic in the presence of an auxiliary order relation, but not actually dependent on that order relation. This is somewhat surprising since order-invariant properties are more of a combinatorial rather than a <b>logical</b> <b>object.</b> We provide two applications of this notion. One is a proof, from the basic principles, of a theorem by Courcelle stating that over trees, order-invariant MSO properties are expressible in MSO with counting quantifiers. The other is an analog of the Feferman-Vaught theorem for order-invariant properties...|$|R
30|$|To {{increase}} {{the resilience of}} smart objects that enable the interaction with the physical world, replication and backup schemes must be implemented; however, {{how is it possible}} to adopt aforementioned schemes efficiently? One traditional approach is using a primary and backup model, where devices and services are duplicated for robustness purposes. This would not be adequate considering that this strategy could waste valuable resources in the already constrained Fog nodes in case no failure occurs. In this context, virtualization mechanisms have proven to be useful from the cost and operational perspectives. Emerging virtualization paradigms like Containers [84] and NFV [85] allow the improvement of the performance and availability of service and device components. Once mapped as a <b>logical</b> item, physical <b>objects</b> can be handled like any other piece of software, granting the possibility to apply migration, instantiation, and other well-known techniques over them. Thus, a failure concerning a service or device can be recovered by migrating or instantiating a <b>logical</b> <b>object</b> over a different physical device.|$|R
