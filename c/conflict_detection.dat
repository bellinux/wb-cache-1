875|61|Public
2500|$|ADS-B will be {{implemented}} by the Surveillance and Broadcast Services (SBS) Program to provide two services: (1) [...] "Critical Services" [...] consisting of ADS-B and ADS-Rebroadcast, and (2) [...] "Essential Services" [...] consisting of Traffic Information Service Broadcast (TIS-B) and Flight Information Service Broadcast (FIS-B). [...] Nine ADS-B enabled applications will be developed and assessed: (1) ATC Surveillance, (2) Enhanced Visual Acquisition, (3) Enhanced Visual Approach, (4) Final Approach and Runway Occupancy Awareness, (5) Airport Surface Situational Awareness, (6) <b>Conflict</b> <b>Detection</b> for flight and Air Traffic Management (ATM) operations, (7) CDTI/MFD Assisted Visual Separation (CAVS), (8) Interval Management (e.g., merging and spacing) and (9) Weather and NAS Status Situational Awareness. SBS will provide data to FAA defined Service Delivery Points (SDP) as the demarcation points between SBS-provided services and ground-based user systems.|$|E
2500|$|The {{fundamental}} problem with rootkit detection {{is that if}} the operating system has been subverted, particularly by a kernel-level rootkit, it cannot be trusted to find unauthorized modifications to itself or its components. Actions such as requesting a list of running processes, or a list of files in a directory, cannot be trusted to behave as expected. In other words, rootkit detectors that work while running on infected systems are only effective against rootkits that have some defect in their camouflage, or that run with lower user-mode privileges than the detection software in the kernel. As with computer viruses, the detection and elimination of rootkits is an ongoing struggle between both sides of this <b>conflict.</b> <b>Detection</b> can take a number of different approaches, including looking for virus [...] "signatures" [...] (e.g. antivirus software), integrity checking (e.g. digital signatures), difference-based detection (comparison of expected vs. actual results), and behavioral detection (e.g. monitoring CPU usage or network traffic).|$|E
5000|$|AVX-512 <b>Conflict</b> <b>Detection</b> Instructions (CDI) {{efficient}} <b>conflict</b> <b>detection</b> {{to allow}} more loops to be vectorized, supported by Knights Landing ...|$|E
5000|$|... #Subtitle level 2: <b>Conflict</b> and <b>detection</b> method using center-TRACON {{automation}} system ...|$|R
40|$|In {{the modern}} world, the {{large-scale}} area devicescollaborative technology becomes the supporting technologyin many areas. The demand on transaction for devicecollaborative system is high, but relevant research is scarce. In this paper, we propose a new transaction model, whichloose {{the requirement of}} ACID. We also give deviceoperations <b>conflicts</b> <b>detection</b> rules, and a mechanism tocalculate compensation operation is proposed, which cangenerate compensation operation list and significantlyreduce the number of device operations. The proposedmodels and algorithm are verified by testing results...|$|R
40|$|Abstract. Currently, {{researches}} on {{time constraints}} for access control are not complete. To solve this problem, this paper enriches the time constraints for access control {{from the following}} aspects: firstly, we propose a four-tuple representation of time constraint by combining discrete time representation and periodic time representation; secondly, we put forward a function of computing the time of state changing {{on the basis of}} (1); finally, aiming at conflicts detecting and resolution for time constraints, we raise an algorithm for <b>conflicts</b> <b>detection</b> and resolution based on XACML and entities overlapping detection...|$|R
5000|$|<b>Conflict</b> <b>detection</b> where a file {{has been}} {{modified}} on both sources, {{as opposed to}} where it has only been modified on one. Undetected conflicts can lead to overwriting copies of the file with the most recent version, causing data loss. For <b>conflict</b> <b>detection,</b> the synchronization software needs to keep a database of the synchronized files. Distributed <b>conflict</b> <b>detection</b> {{can be achieved by}} version vectors.|$|E
5000|$|... #Subtitle level 2: New {{instructions}} in AVX-512 <b>conflict</b> <b>detection</b> ...|$|E
50|$|Includes {{enhanced}} <b>conflict</b> <b>detection</b> and resolution, improved node restart times, new Event API.|$|E
40|$|A {{system of}} metrics and {{analysis}} plots {{has been developed}} in order {{to evaluate the effectiveness}} and accuracy of trajectory prediction and automated conflict prediction and resolution algorithms. This research is conducted using a real-time air traffic management system to perform experimental runs using both live and simulated air traffic scenarios. The resulting data from these runs needs to be analyzed both to evaluate the performance of the software and to create objective metrics and plots for use in research studies. Specific analysis methods have been developed to assess data runs based on losses of legal separation between aircraft, <b>conflict</b> <b>detections,</b> trajectory prediction error, flight amendments, level-offs, and fuel burn. I...|$|R
40|$|International audienceThis paper {{describes}} some adaptation {{issues related}} to context-aware assembly of heterogeneous transformation services within {{a wide variety of}} mobile devices (laptops, smartphones and tablets). A reconfiguration platform named Kalimucho has been used on top of a peer-to-peer layer to carry on the whole (re) -deployment process. More importantly, we propose to use this platform which is mainly composed of P 2 P reconfiguration facilities in order to support <b>conflicts</b> <b>detections,</b> semantic and social-based assembly of relevant adaptation services and customization of quality adaptation paths. These facilities are analyzed and evaluated according to local and remote experimentations. Results show the efficiency and the effectiveness of our approach...|$|R
40|$|Abstract. Ontology {{has been}} widely adopted {{as the basis of}} {{knowledge}} sharing and knowledge-based public services. However, ontology construction is a big challenge, especially in collaborative ontology development, in which conflicts are often a problem. Traditional collaborative methods are suitable for centralized teamwork only, and are ineffective if the ontology is developed and maintained by mass broadly distributed participators lacking communications. In this kind of highly collaborative ontology development, automated <b>conflicts</b> <b>detection</b> is essential. In this paper, we propose an approach to classify and detect collaborative conflicts according to some mechanisms: 1) impact range of a revision, 2) semantic rules, and 3) heuristic similarity measures. Also we present a high effective detecting algorithm with evaluation. ...|$|R
50|$|MySQL Cluster {{supports}} <b>conflict</b> <b>detection</b> {{and resolution}} between multiple masters since version 6.3 for true multi-master capability for the MySQL Server.|$|E
50|$|Distribution {{is handled}} using Versant Asynchronous Replication (VAR), a channel driven, {{master-slave}} or peer-to-peer replication framework with rule based <b>conflict</b> <b>detection</b> and resolution.|$|E
50|$|The {{instructions}} in AVX-512 <b>conflict</b> <b>detection</b> (AVX-512CD) {{are designed to}} help efficiently calculate conflict-free subsets of elements in loops that normally could not be safely vectorized.|$|E
40|$|The {{dominant}} decomposition at {{the requirements}} level relies on how requirements are represented and modeled. An aspectual requirement is a broadly scoped concern that cuts across and has impacts on other requirements-level concerns or artifacts. This paper presents a novel use of Repertory Grid Technique with roots in psychology of personal constructs as a systematic and {{effective way to}} support analysts for viewing and manipulating requirements models to expose how entities relate to one another, thereby facilitating aspectual requirements identification and <b>conflicts</b> <b>detection.</b> We illustrate the approach with a proof-of-concept example adapted from the literature; in particular, we show how early aspects can be discovered in goal models, and how interference can be detected in viewpoints-based models...|$|R
40|$|In this study, {{we propose}} a novel concept of {{intelligent}} topic map, which embodies the multi-level, multi-granularity and inherent relevant characteristics {{of knowledge and}} realizes knowledge reasoning. With the intelligent topic map as infrastructure, we design a specific ontology fusion process for multi-resource knowledge fusion. Also, we define the taxonomy of merging conflicts which occur {{during the process of}} intelligent topic maps merging. We define and classify merging conflicts into data-level conflicts, structure-level conflicts, rule-level conflicts and temporary-level conflicts. We propose the detection and resolution schemes for each merging conflict. Additionally, we implement the multi-resource knowledge fusion <b>conflicts</b> <b>detection</b> and resolution system based on rules. The experimental results show that our method can correctly detect and resolve the conflicts in topic maps merging and it is helpful {{to improve the quality of}} multi-resource knowledge fusion...|$|R
40|$|Autonomous {{agents in}} {{computer}} simulations {{do not have}} the usual mechanisms to acquire information as do their human counterparts. In many such simulations, it is not desirable that the agent have access to complete and correct information about its environment. We examine how imperfection in available information may be simulated in the case of autonomous agents. We determine probabilistically what the agent may detect, through hypothetical sensors, in a given situation. These detections are combined with the agent's knowledge base to infer observations and beliefs. Inherent in this task is a degree of uncertainty in choosing the most appropriate observation or belief. We describe and compare two approaches-a numerical approach and one based on defeasible logic-for simulating an appropriate belief in light of <b>conflicting</b> <b>detection</b> values at a given point in time. We discuss the application of this technique to autonomous forces in combat simulation systems...|$|R
50|$|Hybrid {{surveillance}} {{does not}} make use of ADS-B's aircraft flight information in the TCAS <b>conflict</b> <b>detection</b> algorithms; ADS-B is used only to identify aircraft that can safely be interrogated at a lower rate.|$|E
50|$|In {{bi-directional}} channel replication, {{a set of}} <b>conflict</b> <b>detection</b> {{rules are}} put in place so that conflicting changes can be resolved at runtime without disrupting channel activity.There are other forms of data distribution.|$|E
50|$|XPages {{applications}} can {{be deployed}} on Domino servers or {{a cluster of}} Domino servers using IBM Domino Administrator and the replication/synchronization mechanism built into IBM Domino. The replication mechanism supports bi-directional <b>conflict</b> <b>detection</b> and resolution in distributed environments.|$|E
40|$|End {{products}} of the decay of pion and the subsequent decay of muon form the entangled spin state. Muon arises with the right helicity and decays with the left helicity. This causes the <b>conflict</b> under <b>detection</b> of the entangled particles that results in non-detection of neutrinos. The effect considered may explain {{the discrepancy between the}} experimental data and calculations in the Super-Kamiokande experiment...|$|R
50|$|The {{conceptual}} payload {{included a}} Precision Sample Handling and Processing System to replace and augment the functionality and capabilities {{provided by the}} Sample Acquisition Sample Processing and Handling system {{that was part of}} the 2009-configuration of Mars Science Laboratory rover (the system is known as SAM (Sample Analysis at Mars) in 2011-configuration of Mars Science Laboratory). The AFL payload was to attempt to minimize any <b>conflicting</b> positive <b>detection</b> of life by including a suite of instruments that provide at least three mutually confirming analytical laboratory measurements.|$|R
40|$|Service Oriented Architecture (SOA) is a {{new design}} style that has promised to {{alleviate}} the semantic interoperability problem between Web services. Exchanging the messages seamlessly between heterogeneous Web services is required but, it is still difficult due to data heterogeneity. As a result, a noticeable number of works has been proposed {{with the aim of}} solving this problem, but yet, the problem has not been solved efficiently. Furthermore, it is important to observe the lack of sufficient approaches {{in the state of the}} art, whose purposes are semantic <b>conflicts</b> <b>detection</b> between heterogeneous messages of Web services. It is for these reasons we take a step back to the detection step before providing the solution. This study proposes a new ontology-based approach that aim at detecting semantic conflicts between heterogeneous messages of Web services. The main purposes of this approach are to detect any conflict types between the messages during message exchange process and to identify the conflict type for each detected conflict. The proposed approach plays as a vital step for improving the semantic interoperability between heterogeneous Web service messages, since it facilitate the process of addressing semantic conflicts. A real scenario was used in order to demonstrate the feasibility of the proposed approach...|$|R
50|$|MUAC has put in {{operation}} innovative technology and productivity enhancements: {{a new generation}} Flight Data Processing System, the Short Term Conflict Alert (STCA), Medium Term <b>Conflict</b> <b>Detection</b> (MTCD), Controller Pilot Data Link Communications (CPDLC) and stripless controller working positions.|$|E
50|$|Recently, {{research}} has shifted towards automated <b>conflict</b> <b>detection</b> {{with the advent}} of traffic video analytics and faster processing power. The Federal Highway Administration-sponsored Safety Surrogate Assessment Model is a tool being developed for the analysis of conflicts using simulated results from traffic microsimulation.|$|E
50|$|Adi, K., Bouzida, Y., Hattak, I., Logrippo, L., Mankovskii, S. Typing for <b>Conflict</b> <b>Detection</b> in Access Control Policies. In: G. Babin, P. Kropf, M. Weiss (Eds.): E-Technologies: Innovation in an Open World. Proc. of the 4th Intern. Conf. MCETECH 2009 (Ottawa, May 2009), Lecture Notes in Business Information Processing (LNBIP 26), Springer, 2009, 212-226.|$|E
30|$|In a {{distributed}} system, {{the consistency}} model has three core dimensions [3]: conflict definition policy, conflict handling policy {{and conflict resolution}} policy. In this context, conflict definition policy implies the different definitions proposed for data inconsistencies. Researchers {{have come up with}} different strategies of defining access <b>conflict</b> or inconsistency <b>detection</b> for different web-based applications in transactional or non-transactional context.|$|R
40|$|The {{need for}} change of {{direction}} in Software Engineering has been suggested in severalresources [Power of Models]. In recent years many organizations have focused on ModelDriven Engineering (MDE) as an approach to application design and implementation. Model Driven Architecture (MDA) was introduced by Object Management Group (OMG) in 2001 in support of MDE. Models are the basic elements in MDE. The focus on MDE is onthe concept of “Everything is a model”. So far several languages, tools and platforms havebeen created for MDE. In particular, models can be developed in a distributed environment, thus once they mergetogether, conflicts and inconsistencies should be detected in a convenient way to bereconciled (automatically by software or manually by developers). This project is based onprevious works that define difference and conflict metamodels of a source model. In thisreport, we introduce the benefits of versioning systems in MDE framework. A conflictmetamodel that is generated from the input metamodel and the architecture for detectingconflicts are represented. The proposed approach is metamodel independent that meansconflict metalmodel is created for any input model which conforms to Kernel Meta MetaModel (KM 3). The concept of used conflict model can be also changed regardless ofmodels. The extended idea for <b>conflicts</b> <b>detection,</b> the presented architecture for modelcode management and the tools that can detect conflicts of concurrent models can help toimprove MDE in model code management. For this report, some implementation in Eclipseplatform has been rendered while some future works are suggested. University of L'Aquila, Project group in Moedling with Alfonso Pierantoni...|$|R
50|$|There {{are several}} other {{projects}} of NASA in which formal methods are applied, such as Next Generation Air Transportation System, Unmanned Aircraft System integration in National Airspace System, and Airborne Coordinated <b>Conflict</b> Resolution and <b>Detection</b> (ACCoRD).B-Method with AtelierB, {{is used to}} develop safety automatisms for the various subways installed throughout the world by Alstom and Siemens, and also for Common Criteria certification {{and the development of}} system models by ATMEL and STMicroelectronics.|$|R
50|$|The DHCP {{client has}} been {{enhanced}} to include address assignment <b>conflict</b> <b>detection</b> and longer timeout intervals. NetBT configuration in the WINS client has been improved to continue persistently querying multiple WINS servers if {{it failed to}} establish the initial session until all of the WINS servers specified have been queried or a connection is established.|$|E
5000|$|An ARP probe is an ARP request {{constructed}} with an all-zero sender IP address (SPA). The term {{is used in}} the IPv4 Address <b>Conflict</b> <b>Detection</b> specification (...) [...] Before beginning to use an IPv4 address (whether received from manual configuration, DHCP, or some other means), a host implementing this specification must test to see if the address is already in use, by broadcasting ARP probe packets.|$|E
50|$|OrBAC is context sensitive, so {{the policy}} could be {{expressed}} dynamically. Furthermore, OrBAC owns concepts of hierarchy (organization, role, activity, view, context) and separation constraints. To design and implement security policies using the OrBAC model, the MotOrBAC tool has been developed. His simulation mode {{can be used}} to test a security policy. MotOrBAC also features a <b>conflict</b> <b>detection</b> function which helps the designer to find and solve conflicts.|$|E
40|$|An {{operating}} {{concept and}} required system components for trajectory-based operations with air/ground data link for today’s en route and transition airspace is proposed. Controllers are fully responsible for separation {{as they are}} today, and no new aircraft equipage is required. Trajectory automation computes integrated solutions to problems like metering, weather avoidance, traffic conflicts {{and the desire to}} find and fly more time/fuel efficient flight trajectories. A common ground-based system supports all levels of aircraft equipage and performance including those equipped and not equipped for data link. User interface functions for the radar controller’s display make trajectory-based clearance advisories easy to visualize, modify if necessary, and implement. Laboratory simulations (without human operators) were conducted to test integrated operation of selected system components with uncertainty modeling. Results are based on 102 hours of Fort Worth Center traffic recordings involving over 37, 000 individual flights. The presence of uncertainty had a marginal effect (5 %) on minimum-delay conflict resolution performance, and wind-favorable routes had no effect on detection and resolution metrics. Flight plan amendments and clearances were substantially reduced compared to today’s operations. Top-of-descent prediction errors are the largest cause of failure indicating that better descent predictions are needed to reliably achieve fuel-efficient descent profiles in medium to heavy traffic. Improved <b>conflict</b> <b>detections</b> for climbing flights could enable substantially more continuous climbs to cruise altitude. Unlike today’s Conflict Alert, tactical automation must alert when an altitude amendment is entered, but before the aircraft starts the maneuver. In every other failure case tactical automation prevented losses of separation. A real-time prototype trajectory trajectory-automation system is running now and could be made ready for operational testing at an en route Center in 1 - 2 years. ...|$|R
40|$|Abstract. UML {{activity}} diagrams are a wide-spread modelling tech-nique {{to capture}} behavioral aspects of system models. Usually, pre- and post-conditions of activities {{are described in}} natural language and are not formally integrated with the static domain model. Hence, early con-sistency validation of activity models is difficult due to their semi-formal nature. In this paper, we use integrated behavior models that integrate activity diagrams with object rules defining sets of actions in simple ac-tivities. We formalize integrated behavior models using typed, attributed graph transformation. It provides a basis for plausibility checking by static <b>conflict</b> and causality <b>detection</b> between specific object rules, tak-ing into account their occurrence within the control flow. This analysis leads to favorable as well as critical signs for consistency of the integrated behavior model. Our approach is supported by ActiGra, an Eclipse plug-in for editing, simulating and analyzing integrated behavior models. It visualizes favorable and critical signs for consistency in a convenient way and uses the well-known graph transformation tool AGG for rule application as well as static <b>conflict</b> and causality <b>detection.</b> We validate our approach by modeling a conference scheduling system...|$|R
40|$|This paper {{deals with}} human-machine {{conflicts}} {{with a special}} focus on conflicts caused by an "automation surprise". Considering both the human operator and the machine autopilot or decision functions as agents, we propose Petri net based models of two real cases and we show how modelling each agent's possible actions is likely to highlight conflict states as deadlocks in the Petri net. A general conflict model is then be proposed and paves the way for further on-line human-machine <b>conflict</b> forecast and <b>detection...</b>|$|R
