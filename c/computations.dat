10000|10000|Public
5|$|A major {{branch of}} {{numerical}} analysis {{is devoted to}} the development of efficient algorithms for matrix <b>computations,</b> a subject that is centuries old and is today an expanding area of research. Matrix decomposition methods simplify <b>computations,</b> both theoretically and practically. Algorithms that are tailored to particular matrix structures, such as sparse matrices and near-diagonal matrices, expedite <b>computations</b> in finite element method and other <b>computations.</b> Infinite matrices occur in planetary theory and in atomic theory. A simple example of an infinite matrix is the matrix representing the derivative operator, which acts on the Taylor series of a function.|$|E
5|$|Most {{derivative}} <b>computations</b> eventually require {{taking the}} derivative of some common functions. The following incomplete list gives {{some of the}} most frequently used functions of a single real variable and their derivatives.|$|E
5|$|Norwegian {{immigrant}} {{civil engineer}} Joachim Goschen Giæver designed the structural {{framework for the}} Statue of Liberty. His work involved design <b>computations,</b> detailed fabrication and construction drawings, and oversight of construction. In completing his engineering for the statue's frame, Giæver worked from drawings and sketches produced by Gustave Eiffel.|$|E
40|$|AbstractDue to {{limitation}} of mobile device {{in terms of}} battery life and processing power, Mobile Cloud Computing (MCC) has become an attractive choice to leverage this shortcoming as the mobile <b>computation</b> could be offloaded to the cloud, which is so-called mobile <b>computation</b> offloading. Existing research on mobile <b>computation</b> offloading considers offloading a mobile <b>computation</b> to a single cloud. However, {{in the real world}} a <b>computation</b> service could be provided by multiple clouds and each <b>computation</b> service. Thus, a new and interesting research problem in mobile <b>computation</b> offloading is how to select a <b>computation</b> service for each of the <b>computation</b> tasks of a mobile <b>computation</b> such that the <b>computation</b> time of the mobile <b>computation,</b> the energy consumption of the mobile device and the cost of using the <b>computation</b> services are minimized. This is so called multi-site <b>computation</b> offloading in mobile cloud computing. In this paper we formulate the multi-site <b>computation</b> offloading problem, propose a heuristic algorithm for the multi-site <b>computation</b> offloading problem and evaluate the heuristic algorithm...|$|R
5000|$|In {{computer}} science, interactive <b>computation</b> is {{a mathematical}} model for <b>computation</b> that involves input/output communication with the external world during <b>computation.</b> This {{is in contrast to}} the traditional understanding of <b>computation</b> which assumes reading input only before <b>computation</b> and writing output only after <b>computation,</b> thus defining a kind of [...] "closed" [...] <b>computation.</b>|$|R
40|$|Abstract — The present {{paper is}} based on frame {{buckling}} analysis of ATV roll cage through finite element procedures. This analysis was performed using CATIA software. The detailed three dimensional model geometry of roll cage is worked out. The meshing of the part blower is done and {{the details of the}} finite element mesh are calculated. The roll cage is subjected to the load environment. The actual load conditions are worked out and the boundary conditions are given. This analysis comprises of material selection, structure <b>computation,</b> restraint <b>computation,</b> load <b>computation,</b> stiffness <b>computation,</b> singularity <b>computation,</b> constraint <b>computation,</b> factorized <b>computation,</b> direct method <b>computation,</b> geometric stiffness <b>computation</b> and buckling <b>computation</b> and at last global sensors...|$|R
5|$|A {{computer}} {{can act as}} one or {{all three of these}} components at the same time. The Xgrid protocol provides the basic infrastructure for computers to communicate, but is not involved in the processing of the specified calculation. Xgrid is targeted towards time consuming <b>computations</b> that can be easily segregated into smaller tasks, sometimes called embarrassingly parallel tasks. This includes Monte Carlo calculations, 3D rendering and Mandelbrot maps.|$|E
25|$|The {{remaining}} {{item for}} discussion {{is the final}} protonation of the cyclohexadienyl anion. In 1961 {{it was found that}} simple Hückel <b>computations</b> were unable to distinguish between the different protonation sites. However, when the <b>computations</b> were modified with somewhat more realistic assumptions, the Hückel <b>computations</b> revealed the center carbon to the preferred. The more modern 1990 and 1993 <b>computations</b> were in agreement.|$|E
25|$|Because of this {{dissatisfaction with}} {{reliance}} on the Jewish calendar, some Christians began to experiment with independent <b>computations.</b> Others, however, believed that the customary practice of consulting Jews should continue, even if the Jewish <b>computations</b> were in error.|$|E
40|$|AbstractThis paper {{reviews and}} extends {{previous}} {{work on the}} domain-theoretic notion of Machine Development. It summarizes the concept of Developmental <b>Computation</b> and shows how Interactive <b>Computation</b> {{can be understood as}} a stepping stone in the pathway from Classical to Developmental <b>Computation.</b> A critical appraisal is given of Classical <b>Computation,</b> showing in which ways its shortcomings tend to restrict the possible evolution of real computers, and how Interactive and Developmental <b>Computation</b> overcome such shortcomings. The idea that Developmental <b>Computation</b> is more encompassing than Interactive <b>Computation</b> is stressed. A formal framework for Developmental <b>Computation</b> is sketched, and the current frontier of the work on Developmental <b>Computation</b> is briefly exposed...|$|R
40|$|Abstract: In this paper, a new <b>computation</b> for {{gray level}} co-occurrence matrix (GLCM) is proposed. The {{aim is to}} reduce the <b>computation</b> burden of the {{original}} GLCM <b>computation.</b> The proposed <b>computation</b> will be based on Haar wavelet transform. Haar wavelet transform is chosen because the resulting wavelet bands are strongly correlated with the orientation elements in the GLCM <b>computation.</b> The second reason is because the total pixel entries for Haar wavelet transform is always minimum. Thus, the GLCM <b>computation</b> burden can be reduced. The proposed <b>computation</b> is tested with the classification performance of the Brodatz texture images. Although the aim is to achieve at least similar performance with the original GLCM <b>computation,</b> the proposed <b>computation</b> gives a slightly better performance compare to the original GLCM <b>computation...</b>|$|R
50|$|In addition, the <b>computation</b> law of {{reachable}} optimality {{gives out}} {{the boundary between}} complexity model, chaotic model and determination model. When RAYG is the Optimal Choice <b>computation,</b> and the reaching pattern is a persistently positive experience path, persistently negative experience path, or mixed persistent pattern experience path, the underlying <b>computation</b> shall be a simple system <b>computation</b> adopting determination rules. If the reaching pattern has no persistent pattern experienced in RAYG regime, the underlying <b>computation</b> hints there is a chaotic system. When the optimal choice <b>computation</b> involves non-RAYG <b>computation,</b> it's a complexity <b>computation</b> driving the compound effect.|$|R
25|$|Applications of {{differential}} calculus include <b>computations</b> involving velocity and acceleration, {{the slope of}} a curve, and optimization. Applications of integral calculus include <b>computations</b> involving area, volume, arc length, center of mass, work, and pressure. More advanced applications include power series and Fourier series.|$|E
25|$|In 1990 and 1993 an esoteric {{test was}} devised {{which showed that}} ortho {{protonation}} of the radical anion was preferred over meta (seven to one). This was accompanied by more modern computation which concurred. Both experiment and <b>computations</b> were {{in agreement with the}} early 1961 <b>computations.</b>|$|E
25|$|The journal Reliable Computing (originally Interval <b>Computations)</b> {{has been}} {{published}} since the 1990s, dedicated to the reliability of computer-aided <b>computations.</b> As lead editor, R. Baker Kearfott, {{in addition to his}} work on global optimisation, has contributed significantly to the unification of notation and terminology used in interval arithmetic (Web: Kearfott).|$|E
40|$|RAM-model secure <b>computation</b> {{addresses}} the inherent limitations of circuit-model secure <b>computation</b> considered {{in almost all}} previous work. Here, we describe the first automated approach for RAM-model secure <b>computation</b> in the semi-honest model. We define an intermediate representation called SCVM and a corresponding type system suited for RAM-model secure <b>computation.</b> Leveraging compile-time optimizations, our approach achieves order-of-magnitude speedups compared to both circuit-model secure <b>computation</b> and the state-of-art RAM-model secure <b>computation...</b>|$|R
40|$|Natural <b>computation</b> is {{the study}} of {{computational}} systems that use ideas and get inspirations from natural systems, including biological, physical, chemical, economical and social systems. It covers many active research fields, such as evolutionary <b>computation,</b> neural <b>computation,</b> molecular <b>computation,</b> quantum <b>computation,</b> ecological <b>computation,</b> etc. It has made tremendous progress in recent years in academic research and real-world applications. Many university departments have been offering individual modules/courses {{in one form or another}} on related topics. However, few universities have been offering an entire postgraduate program in natural <b>computation.</b> This article summarise...|$|R
40|$|This paper {{presents}} {{the architecture of}} the MFIBVP real-time multiplier which is The MFIBVP technique is a combination of the MSB–First <b>computation,</b> the Interval-Bounded Arithmetic and the Variable-Precision <b>computation</b> techniques. The MFIBVP <b>computation</b> guarantees the <b>computation</b> carried out will produce high accuracy from the early <b>computation</b> time, self error estimation and time-optimal <b>computation.</b> This paper shows the performance of the MFIBVP real-time multiplier unit that can gives accuracy of it’s intermediate-result more than 99...|$|R
25|$|The Ext functor {{exhibits}} some convenient properties, {{useful in}} <b>computations.</b>|$|E
25|$|GNU Octave, a {{high-level}} language, primarily intended for numerical <b>computations.</b>|$|E
25|$|Such <b>computations</b> aim {{to check}} empirically whether such numbers are normal.|$|E
40|$|In this chapter, {{concepts}} {{related to}} information and <b>computation</b> are reviewed {{in the context}} of human <b>computation.</b> A brief introduction to information theory and different types of <b>computation</b> is given. Two examples of human <b>computation</b> systems, online social networks and Wikipedia, are used to illustrate how these can be described and compared in terms of information and <b>computation.</b> ...|$|R
40|$|We {{review the}} {{concepts}} of field <b>computation,</b> a model of <b>computation</b> that processes information represented as spatially continuous arrangements of continuous data. We show that many processes in the brain are described usefully as field <b>computation.</b> Throughout we stress the connections between field <b>computation</b> and quantum mechanics, especially including {{the important role of}} information fields, which represent by virtue of their form rather than their magnitude. We also show that field <b>computation</b> permits simultaneous nonlinear <b>computation</b> in linear superposition...|$|R
40|$|Unique to lightpath <b>computation</b> in WSON is routing and {{wavelength}} assignment (RWA). In a WSON without wavelength converters two lightpaths {{that share}} a common fiber link can not be assigned the same wavelength. This constraint {{is referred to as}} “wavelength continuity” constraint. From the perspective of a carrier path <b>computation</b> functions should support both sequential path <b>computation</b> in which one path <b>computation</b> is done at a time and concurrent path <b>computation</b> in which a set of paths are computed optimally. Distributed path <b>computation</b> may not be suitable for concurrent path <b>computation</b> when the set of paths to be computed have different head-end nodes. This scenario occurs when computing shared backup path <b>computation</b> for a set of independent working paths...|$|R
25|$|<b>Computations</b> for {{analyses}} {{that occur in}} a sequence, {{as the number of}} data points increases.|$|E
25|$|An RGB triplet (r,g,b) {{represents}} the three-dimensional coordinate {{of the point}} of the given color within the cube or its faces or along its edges. This approach allows <b>computations</b> of the color similarity of two given RGB colors by simply calculating the distance between them: the shorter the distance, the higher the similarity. Out-of-gamut <b>computations</b> can also be performed this way.|$|E
25|$|Two {{examples}} are often given when introducing monads: the Maybe monad, which represent <b>computations</b> where expressions can contain null values, and the I/O monad, which represent <b>computations</b> that interact with input/output effects. Of course, monads are {{not restricted to}} the Haskell language. The examples section below shows in JavaScript the Writer monad, which accumulates a separate log alongside the main chain of values in a computation.|$|E
40|$|International audienceIn this paper, it {{is shown}} that a <b>computation</b> code exists for a {{stationary}} and d-continuous noisy <b>computation</b> if a channel code exists for the "virtual" channel linking the expected result of the perfect <b>computation</b> and the actual result given by the noisy <b>computation.</b> This proves the possibility to built an efficient <b>computation</b> code from an efficient channel code...|$|R
40|$|PAPER AWARD. We {{consider}} distributed <b>computation</b> of func-tions of distributed data {{in random}} planar networks with noisy wireless links. We present a new algorithm for <b>computation</b> {{of the maximum}} value which is order optimal {{in the number of}} transmissions and <b>computation</b> time. We also adapt the histogram <b>computation</b> algorithm of Ying et al [1] to make the histogram <b>computation</b> time optimal. I...|$|R
5000|$|This area is {{also called}} {{symbolic}} <b>computation</b> or algebraic <b>computation.</b> It deals with exact <b>computation,</b> for example with integers of arbitrary size, polynomials or elements of finite fields. It includes also the <b>computation</b> with non numeric mathematical objects like polynomial ideals or series.|$|R
25|$|<b>Computations</b> of {{volumes of}} solids of {{revolution}} {{can usually be}} done with disk integration or shell integration.|$|E
25|$|Also <b>computations</b> {{based on}} a field reparametrization {{invariant}} effective average action seem to recover the crucial fixed point.|$|E
25|$|Gene H. Golub and Charles F. Van Loan, Matrix <b>Computations</b> (4th ed.), Johns Hopkins University Press, Baltimore, 2012.|$|E
40|$|Abstract. This paper {{presents}} {{a study in}} the nature of <b>computation,</b> contributing with <b>computation</b> typologies: essential, spatial, temporal, representational and hierarchy-level based. Drawing from the historical development of the idea of number we argue that the concept of <b>computation</b> necessarily must develop. We thus address the development of models of <b>computation,</b> with emphasis on natural/physical/embodied <b>computation</b> and unconventional computing. Our analysis suggests that much better understanding of <b>computation</b> is needed than we have today. Finally, we propose possible directions for future research. ...|$|R
40|$|Although analog <b>computation</b> was {{eclipsed by}} digital <b>computation</b> {{in the second}} half of the twentieth century, it is {{returning}} as an important alternative computing technology. Indeed, as explained in this report, theoretical results imply that analog <b>computation</b> can escape from the limitations of digital <b>computation.</b> Furthermore, analog <b>computation</b> has emerged as an important theoretical framework for discussing <b>computation</b> in the brain and other natural systems. The report (1) summarizes the fundamentals of analog computing, starting with the continuous state space and the various processes by which analog <b>computation</b> can be organized in time; (2) discusses analog <b>computation</b> in nature, which provides models and inspiration for many contemporary uses of analog <b>computation,</b> such as neural networks; (3) considers general-purpose analog computing, both from a theoretical perspective and in terms of practical general-purpose analog computers; (4) discusses the theoretical power o...|$|R
40|$|Abstract—In the {{function}} <b>computation</b> problem, certain nodes of an undirected graph {{have access to}} independent data, while some other nodes of the graph require certain functions of the data; this model, motivated by sensor networks and cloud computing, {{is the focus of}} this paper. We study the maximum rates at which function <b>computation</b> is possible on a capacitated graph; the capacities on the edges of the graph impose constraints on the communication rate. We consider a simple class of <b>computation</b> strategies based on Steiner-tree packing (so-called <b>computation</b> trees), which does not involve block coding and has minimal delay. With a single terminal requiring function <b>computation,</b> <b>computation</b> trees are known to be optimal when the underlying graph is itself a directed tree, but have arbitrarily poor performance in general directed graphs. Our main result is that <b>computation</b> trees are near optimal for a wide class of function <b>computation</b> requirements even at multiple terminals in undirected graphs. The key technical contribution involves connecting approximation algorithms for Steiner cuts in undirected graphs to {{the function}} <b>computation</b> problem. Furthermore, we show that existing algorithms for Steiner tree packings allow us to compute approximately optimal packings of <b>computation</b> trees in polynomial time. We also show a close connection between the function <b>computation</b> problem and a communication problem involving multiple multicasts. Index Terms—Function <b>computation,</b> capacity, Steiner packing, multiple unicast, network coding, <b>computation</b> trees, multicasting...|$|R
