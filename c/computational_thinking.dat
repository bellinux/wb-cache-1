385|24|Public
2500|$|The International Society for Technology in Education has a {{brochure}} detailing an [...] "operational definition" [...] of <b>computational</b> <b>thinking.</b> At the same time, the ISTE made {{an attempt at}} defining related skills.|$|E
2500|$|Hence, {{operational}} definition {{can be used}} {{within the realm of}} the interactions of humans with advanced computational systems. In this sense, one area of discourse deals with <b>computational</b> <b>thinking</b> in, and with how it might influence, the sciences. To quote the American Scientist: ...|$|E
2500|$|On 8 December 2015, Wolfram {{published}} the book [...] "" [...] to introduce people, with {{no knowledge of}} programming, to the Wolfram Language {{and the kind of}} <b>computational</b> <b>thinking</b> it allows. The release of the second edition of the book coincided with a [...] "CEO for hire" [...] competition during the 2017 Collision tech conference.|$|E
50|$|Storming Robots is Robotics and Technology Learning Lab {{based in}} Branchburg, New Jersey. All of Storming Robots' {{programs}} are modeled {{to build and}} strengthen problem solving, <b>computational</b> and algorithmic <b>thinking</b> skills, and reinforce the engineering process. They use robotics as means to inspire children's interest and further their intellect in Science, Technology, Engineering, and Mathematics (STEM) and also analytic, <b>computational,</b> and strategic <b>thinking.</b>|$|R
40|$|This article {{proposes a}} system of {{teaching}} methods to improve research skills in students of Computer Science carrier. The same was structured in three procedures: computational hermeneutical of user system, computational hermeneutical of intermediary system and computational hermeneutical of information system, which supports {{the development of a}} <b>computational</b> systemic research <b>thinking.</b> The feasibility and relevance of the system of procedures was corroborated by two workshops and the partial implementation of it in the carrier. The results obtained allow to conclude that the system provides sufficient evidence of its potential to improve the dynamics of research skills in the Computer Science carrier and {{contribute to the development of}} a <b>computational</b> systemic research <b>thinking</b> in the students. </p...|$|R
40|$|<b>Computational</b> {{algorithmic}} <b>thinking</b> (CAT) is {{the ability}} to design, implement, and assess the implementation of algorithms to solve a range of problems. It involves identifying and understanding a problem, articulating an algorithm or set of algorithms {{in the form of a}} solution to the problem, implementing that solution in such a way that it solves the problem, and evaluating the solution based on some set of criteria. CAT has roots in Mathematics, through problem solving and algorithmic thinking. CAT lies at the heart of Computer Science, which is defined as the study of algorithms. CAT embodies the ability to think critically and creatively to solve problems and has applicability in a range of areas from Computer Science to cooking to music. This article introduces CAT as explored through the Supporting <b>Computational</b> Algorithmic <b>Thinking</b> (SCAT) project, an on-going longitudinal between-subjects research project and enrichment program that guides AfricanAmerican middle school girls (SCAT Scholars) through the iterative game design cycle resulting in a set of complex games around broad themes. This article also explores the difficulties SCAT Scholars face while using CAT capabilities in the context of game design over almost two years as described by the Scholars themselves in online journals...|$|R
5000|$|Jeannette Wing envisioned <b>computational</b> <b>thinking</b> {{becoming}} {{an essential part}} of every child's education. However, since her article (published in 2006) integrating <b>computational</b> <b>thinking</b> into the K-12 curriculum has faced several challenges including the agreement on the definition of <b>computational</b> <b>thinking.</b> Currently <b>Computational</b> <b>Thinking</b> is broadly defined as a set of cognitive skills and problem solving processes that include (but are not limited to) the following characteristics: ...|$|E
50|$|Current {{integration}} <b>computational</b> <b>thinking</b> {{into the}} K-12 curriculum comes in two forms: {{in computer science}} classes directly or through the use and measure of <b>computational</b> <b>thinking</b> techniques in other subjects. Teachers in Science, Technology, Engineering, and Mathematics (STEM) focused classrooms that include <b>computational</b> <b>thinking,</b> allow students to practice problem-solving skills such as trial and error (Barr, et al, 2011). Valerie Barr and Chris Stephenson describe <b>computational</b> <b>thinking</b> patterns across disciplines in a 2011 ACM Inroads article However Conrad Wolfram has argued that <b>computational</b> <b>thinking</b> should be taught as a distinct subject.|$|E
50|$|A further {{base for}} {{cognitive}} computing is <b>computational</b> <b>thinking.</b> The goal of <b>computational</b> <b>thinking</b> {{is to find}} solutions to complex problems (problem solving) within a city and to get an understanding of human behavior {{with the help of}} computer science. <b>Computational</b> <b>thinking</b> allows to operate on different levels of abstraction and to mechanize them through precise notation and models.|$|E
40|$|This {{paper is}} a call for {{sonification}} designers to adapt their representational practices from that of designing objects for auditory engagement {{to the construction of}} systems of formally described relationships that define the ‘state space’ from which streams of such objects can be drawn. This shift from the crafting individual sonic objects and streams to defining dynamical space of design possibilities we call ‘computational designing’. Such sonification model spaces are inaudible, heard only through its instances, or the manifestations of particular trajectories through the space. Approaching the design of auditory displays as computational tasks poses both considerable challenges and opportunities. These challenges are often understood to be technical, requiring scripting or programming skills, however the main challenge lies in <b>computational</b> design <b>thinking</b> which is not best understood as the extension of established designing processes. The intellectual foundations of computational designing rest at the confluence of multiple fields ranging from mathematics, computer science and systems science to biology, psychophysical and cognitive perception, social science, music theory and philosophy. This paper outlines the fundamental concepts of <b>computational</b> design <b>thinking</b> based on seminal ideas from these fields and explores how they it might be applied to the construction of models for synthesized auditory environments...|$|R
50|$|Schneider has framed a {{new version}} of the {{language}} of thought (“LOT”) approach. According to the LOT approach, humans and even non-human animals think in a “language of thought” - an inner mental language that is not equivalent to any natural language. This mental language is <b>computational,</b> for <b>thinking</b> is regarded as the algorithmic manipulation of mental symbols, where the algorithm is to be identified through research in cognitive science. The “Classical Computational Theory of Mind” holds that part or all of the brain is computational in this algorithmic sense.|$|R
5000|$|NetLogo was {{developed}} by Uri Wilensky. It {{was developed}} to teach children <b>computational</b> reasoning and <b>thinking,</b> and extends the Logo language by enabling the existence of many, many turtles at the same time. NetLogo is widely used {{not only in the}} K-12 environment, but also by researchers interested in the concept of Agent-based modeling ...|$|R
5000|$|The {{history of}} <b>computational</b> <b>thinking</b> dates {{back at least}} to the 1950s but most ideas are much older. [...] The term <b>computational</b> <b>thinking</b> was first used by Seymour Papert in 1980 and again in 1996. <b>Computational</b> <b>thinking</b> can be used to algorithmically solve {{complicated}} problems of scale, and is often used to realize large improvements in efficiency.|$|E
50|$|The {{concept of}} <b>Computational</b> <b>Thinking</b> {{has been criticized}} as too vague, as it's rarely made clear how it is {{different}} from other forms of thought. Some computer scientists worry about the promotion of <b>Computational</b> <b>Thinking</b> {{as a substitute for}} a broader computer science education, as <b>computational</b> <b>thinking</b> represents just one small part of the field. Others worry that the emphasis on <b>Computational</b> <b>Thinking</b> encourages computer scientists to think too narrowly about the problems they can solve, thus avoiding the social, ethical and environmental implications of the technology they create.|$|E
5000|$|... #Caption: Three stage process {{describing}} <b>Computational</b> <b>Thinking</b> ...|$|E
40|$|Nonlinear {{dynamics}} with applications. Intuitive {{approach with}} emphasis on geometric <b>thinking,</b> <b>computational</b> and analytical methods. Extensive use of demonstration software. Topics: Bifurcations. Phase plane. Nonlinear coupled oscillators in biology and physics. Perturbation, averaging theory. Parametric resonances, Floquet theory. Relaxation oscillations. Hysterises. Phase locking. Chaos: Lorenz model, iterated mappings, period doubling, renormalization. Fractals. Hamiltonian systems, area preserving maps; KAM theory...|$|R
40|$|Computational {{geometry}} {{is a new}} (about 30 years) {{and rapidly}} growing branch of knowledge in computer science that deals with the analysis and design of algorithms for solving geometric problems. These problems typically arise in computer graphics, image processing, computer vision, robotics, manufacturing, knot theory, polymer physics and molecular biology. Since its inception many of the algorithms proposed for solving geometric problems, published in the literature, {{have been found to}} be incorrect. These incorrect algorithms rather than being mathematical" often contain a strong kinesthetic component. This paper explores the relationship between <b>computational</b> geometric <b>thinking</b> and kinesthetic thinking, the eect of the latter on the correctness and eciency of the resulting algorithms, and their implications for education...|$|R
40|$|Based on {{the belief}} that <b>computational</b> {{modeling}} (<b>thinking</b> in terms of representation and computations) can help to clarify con-troversial issues in emotion theory, this article examines emotional experience {{from the perspective of the}} Computational Belief– Desire Theory of Emotion (CBDTE), a computational explication of the belief–desire theory of emotion. It is argued that CBDTE provides plausible answers to central explanatory challenges posed by emotional experience, including: the phenomenal quality, intensity and object-directedness of emotional experience, the function of emotional experience and its relation to cognition and motivation, and the relation between emotional experience and emotion. In addition, CBDTE avoids most objections that have been raised against cognitive theories of emotion. A remaining objection, that beliefs are not necessary for the emotions covered by CBDTE, is rejected as empirically unsupported...|$|R
5000|$|... #Subtitle level 2: <b>Computational</b> <b>thinking</b> in K-12 in {{education}} ...|$|E
5000|$|To inject <b>Computational</b> <b>Thinking</b> into Sustainability {{that will}} provide: ...|$|E
5000|$|Topic 4: <b>Computational</b> <b>thinking,</b> {{problem-solving}} {{and programming}} (45 hours) ...|$|E
40|$|Computational {{geometry}} {{is a new}} {{branch of}} knowledge in computer science that deals with the analysis and design of algorithms for solving geometric problems. These problems typically arise in computer graphics, image processing, computer vision, and robotics. In {{the past few years}} many of the algorithms proposed for solving geometric problems {{have been found to be}} incorrect. These incorrect algorithms rather than being "purely mathematical" often have a strong kinesthetic component to them. This paper explores the relationship between <b>computational</b> geometric <b>thinking</b> and kinesthetic thinking and its implications for education. Key Words and Phrases: convex hull problem, diameter, kinesthetic heuristics, kinesthetic thinking, mathematical discovery, algorithm design and analysis, computational geometry, artificial intelligence. CR Categories: 3. 36, 3. 63, 5. 25, 5. 32, 5. 5 1. Introduction 1. 1 Computational geometry Computational geometry is claimed by many computer scientists to be a n [...] ...|$|R
40|$|This paper {{presents}} cMinds, {{a learning}} intervention that deploys game-based visual programming towards building analytical, <b>computational,</b> and critical <b>thinking</b> skills in primary education. The proposed learning method exploits the structured nature of programming, which is inherently logical and transcends cultural barriers, towards inclusive learning that exposes learners to algorithmic thinking. A visual programming environment, entitled ‘cMinds Learning Suite’, {{has been developed}} aimed for classroom use. Feedback from the deployment of the learning methods and tools in classrooms in several European countries demonstrates elevated learner motivation for engaging in logical learning activities, fostering of creativity and an entrepreneurial spirit, and promotion of problem-solving capacit...|$|R
40|$|Nowadays {{the use of}} {{computational}} design {{processes in}} architecture is a common practice which is currently recovering a set of theories connected to computer science that were developed in the 60 ’s and 70 ’s. Such pioneering explorations were marked by an interest in employing scientific principles and methodologies many developed in Research Centres located in the US and the UK. Looking into this period, this paper investigates {{the relevance of the}} German design school of the Hochschule für Gestaltung (HfG) Ulm to the birth of computation in architecture. Even thought there were no computers in the school. It is argued that the innovative pedagogies and some distinct professors have launched clear foundations that can be understood as being at the basis of further computational approaches in architecture. By describing and relating the singular work by Tomas Maldonado (educational project), Max Bense (information aesthetics) and Horst Rittel (scientific methods), this paper describes the emergence of analogical ways of <b>computational</b> design <b>thinking.</b> This analysis ultimately wishes to contribute for inscribing the HfG Ulm at the cultural and technological mapping of computation in architecture...|$|R
5000|$|<b>Computational</b> <b>Thinking</b> is an {{iterative}} process based on three stages (captured by the figure to the right): ...|$|E
50|$|Pandemic {{has also}} {{been the subject of}} {{empirical}} published research studies {{as an example of a}} non-computer-based activity that involves distributed <b>Computational</b> <b>thinking.</b>|$|E
5000|$|... 2010. Allan, Vicki, Barr, Valerie, et al. <b>Computational</b> <b>thinking</b> in {{high school}} courses. Proceedings of the 41st ACM {{technical}} symposium on Computer science education. ACM, 2010.|$|E
40|$|Abstract. Evidence based {{practice}} (EBP) is {{of critical}} importance in Education where, increasingly, {{emphasis is placed on}} the need to equip teachers with an ability to independently generate evidence of their best practices in situ. Such contextualised evidence is seen as the key to in-forming educational practices more generally. One of the key challenges related to EBP lies in the paucity of methods that would allow educa-tional practitioners to generate evidence of their practices at a low-level of detail {{in a way that is}} inspectable and reproducible by others. This position paper focuses on the utility and relevance of AI methods of knowledge elicitation and knowledge representation as a means for sup-porting educational evidence-based practices through action research. AI offers methods whose service extends beyond building of ILEs and into real-world teaching practices, whereby teachers can acquire and apply <b>computational</b> design <b>thinking</b> needed to generate the evidence of in-terest. This opens a new dimension for AIEd as a field, i. e. one that demonstrates explicitly the continuing pertinence and a maturing reci-procity of the relationship between AI and Education. ...|$|R
40|$|Abstract. Nowadays {{the use of}} {{computational}} design {{processes in}} architecture is a common practice which is currently recovering a set of theories connected to computer science that were developed in the 60 s and 70 s. Such pioneering explorations were marked by an interest in employing scientific principles and methodologies many developed in Research Centres located in the US and the UK. Looking into this period, this paper investigates {{the relevance of the}} German design school of the Hochschule für Gestaltung (HfG) Ulm to the birth of computation in architecture. Even thought there were no computers in the school. It is argued that the innovative pedagogies and some distinct professors have launched clear foundations that can be understood as being at the basis of further computational approaches in architecture. By describing and relating the singular work by Tomas Maldonado (educational project), Max Bense (information aesthetics) and Horst Rittel (scientific methods), this paper describes the emergence of analogical ways of <b>computational</b> design <b>thinking.</b> This analysis ultimately wishes to contribute for inscribing the HfG Ulm at the cultural and technological mapping of computation in architecture...|$|R
40|$|Being {{declarative}} {{means that}} we do computer programming on higher levels of abstraction. This vague definition identifies declarativeness with the act of ignoring details, {{but it is a}} special case of abstraction. The unspecified part is some computational work. Automating computations and offloading mental processing are essentially the same concept, which is fundamental for both <b>computational</b> and mathematical <b>thinking.</b> This shows that declarativeness is not just a particular style, but it is the core idea of programming. Here we demonstrate this argument and examine its consequences for teaching by a systematic study of coding examples from an introductory programming course. The chosen language is Clojure, as it is proven to be accessible for novices. Comment: 11 pages, first public draft, final version will be published elsewher...|$|R
50|$|<b>Computational</b> <b>thinking</b> is {{the thought}} {{processes}} involved in formulating a problem and expressing its solution(s) {{in such a way}} that a computer—human or machine—can effectively carry out.|$|E
50|$|On 1 January 2017, Martin Vetterli {{became the}} fifth {{president}} of the EPFL. The priorities of his direction team include open science, <b>computational</b> <b>thinking,</b> ethics and sustainability.|$|E
5000|$|Whitten {{research}} interests {{are in the}} fields of business process modeling, Enterprise Architecture frameworks and [...] "Systems and <b>computational</b> <b>thinking</b> and its practical applications to systems development." ...|$|E
40|$|Abstract–The smart {{electric}} power grid will {{evolve into a}} very complex adaptive system under semi-autonomous distributed control. Its spatial and temporal complexity, non-convexity, non-linearity, non-stationarity, variability and uncertainties exceed the characteristics found in today’s traditional power system. The distributed integration of intermittent sources of energy and plug-in electric vehicles to a smart grid further adds complexity and challenges to its modeling, control and optimization. Innovative technologies are needed to handle the growing complexity of the smart grid and stochastic bidirectional optimal power flows, to maximize the penetration of renewable energy, and to provide maximum utilization of available energy storage, especially plugin electric vehicles. Smart grids {{will need to be}} monitored continuously to maintain stability, reliability and efficiency under normal and abnormal operating conditions and disturbances. A combination of capabilities for system state prediction, dynamic stochastic power flow, system optimization, and solution checking will be necessary. The optimization and control systems for a smart-grid environment will require a <b>computational</b> systems <b>thinking</b> machine to handle the uncertainties and variability that exist. The importance and contributions of the computational intelligence field for developing the dynamic, stochastic, computational, and scalable technologies needed for sensemaking, situational awareness, control and optimization in smart grids are presented in this paper. I...|$|R
40|$|In {{this thesis}} a few teoretical basics about <b>computational</b> and algoritmic <b>thinking</b> are given, which is {{necessary}} in programming. Programming allows developing of new programs, which are constantly needed in all areas. Early learning is therfore significant for children and their future. Among modern ways of teaching programming belongs game palying, for this purpose an example board game is presented The game is called "Lov na zaklad". It was created using graphical programs and few websites. "Lov na zaklad" is a didactical board game with rules. By playing this game, children should develop algoritmic thinking, ability to solve problems, gain programmers skills and acquaint themselves with important programming concepts like: if clause and loops "for" and "while". The game also allows children to develop creative way of thinking, to cooperate with other players or teamwork. ...|$|R
40|$|Participants in {{this study}} were student interns and mentors taking part in the 2012, 10 - week Langley Aerospace Research Student Scholars (LARSS) summer {{internship}} program in Hampton, Virginia. The study examined mentors and student interns' ratings of their preparedness in basic knowledge and skills. The study focused on three primary areas: 1) overall evaluation of knowledge and skills by mentors and interns; 2) male and female interns' perceptions of their own skills in these key areas; and 3) mentors' perceptions of their student interns' knowledge and skills in the same areas by gender. Overall mentors were more positive about their interns' improvement in 12 of 17 areas assessed than were the student interns. There were no significant gender differences in how mentors rated their male and female interns' abilities in these workforce skills, but there were four key areas where female interns rated their own abilities lower than did their male peers: analytical <b>thinking,</b> <b>computational</b> skills, computer skills and technical skills. Implications of these findings are discussed...|$|R
