1|10000|Public
5000|$|The {{attestation}} <b>clause</b> <b>of</b> <b>a</b> <b>will</b> {{is where}} the witnesses to a will attest to certain facts concerning {{the making of the}} will by the testator, and where they sign their names as witnesses.|$|E
25|$|While in New York {{to build}} support within the United States for a Jewish Army, Jabotinsky died <b>of</b> <b>a</b> heart attack on 4 August 1940 while visiting a Jewish self-defense camp run by Betar. He was buried in New Montefiore Cemetery in Farmingdale, New York, in {{accordance}} with <b>a</b> <b>clause</b> <b>of</b> his <b>will.</b> <b>A</b> monument to Jabotinsky was erected at his original burial site in New York. In 1964 the remains of Jabotinsky and his wife, in accordance with <b>a</b> second <b>clause</b> <b>of</b> his <b>will,</b> were reburied in Mount Herzl Cemetery in Jerusalem by order of Prime Minister Levi Eshkol.|$|R
5000|$|A {{relative}} pronoun marks {{a relative}} clause; {{it has the}} same referent in the main <b>clause</b> <b>of</b> <b>a</b> sentence that the relative modifies.|$|R
50|$|Ashbury Railway Carriage and Iron Co Ltd v Riche (1875) LR 7 HL 653 is a UK {{company law}} case, which {{concerned}} the objects <b>clause</b> <b>of</b> <b>a</b> company.|$|R
50|$|If the {{independent}} <b>clause</b> <b>of</b> <b>a</b> sentence is not interrogative, the sentence {{ends with a}} full stop or an exclamation mark. This is similar to reported speech in English.|$|R
50|$|The {{underscore}} is {{a special}} SQL pattern match to a single character and should be escaped {{if you are in}} fact looking for an underscore character in the LIKE <b>clause</b> <b>of</b> <b>a</b> query.|$|R
5000|$|... • Intraoperation parallelismExecution {{of single}} complex or large {{operations}} in parallel in multiple processors. For example, ORDER BY <b>clause</b> <b>of</b> <b>a</b> query {{that tries to}} execute on millions of records can be parallelized on multiple processors.|$|R
2500|$|... "To {{separate}} the elements (words, phrases, <b>clauses)</b> <b>of</b> <b>a</b> simple series <b>of</b> more than 2 elements, including a comma before the closing “and” or “or” (the so-called serial comma). Routine {{use of the}} serial comma helps to prevent ambiguity." ...|$|R
60|$|THE BISHOP. You see, {{when you}} give the devil fair play he loses his case. He {{has not been able}} to produce even the first <b>clause</b> <b>of</b> <b>a</b> working agreement; so I'm afraid we cant wait for him any longer.|$|R
50|$|Because the {{operative}} <b>clause</b> <b>of</b> <b>a</b> civil liability policy is so wide, there is normally <b>a</b> long list <b>of</b> exclusions so that liabilities, like employers liability and public liability, {{that are the}} subject of other forms of insurance are not covered by the policy.|$|R
50|$|An entrenched clause or entrenchment <b>clause</b> <b>of</b> <b>a</b> {{basic law}} or {{constitution}} is {{a provision that}} makes certain amendments either more difficult or impossible to pass, making such amendments inadmissible. Overriding an entrenched clause may require a supermajority, a referendum, or {{the consent of the}} minority party.|$|R
50|$|Cotman v Brougham 1918 AC 514 is UK {{company law}} case {{concerning}} the objects <b>clause</b> <b>of</b> <b>a</b> company, {{and the problems}} involving the ultra vires doctrine. It held that a clause stipulating the courts should not read long lists of objects as subordinate to one another was valid.|$|R
50|$|Ascriptive <b>clauses</b> consist <b>of</b> <b>a</b> subject noun and nominalised adjective.|$|R
5000|$|<b>As</b> <b>an</b> adverb <b>of</b> {{time in the}} <b>clause</b> <b>of</b> <b>an</b> {{accident}} policy {{providing for}} certain indemnity in case of injury causing total disability [...] "immediately": -- proximity {{of time with the}} injury, as presently, or without any substantial interval between the accident and the disability. 29A Am J Rev ed Ins § 1526.|$|R
5000|$|The purposive {{approach}} (sometimes {{referred to}} as purposivism, purposive construction, purposive interpretation, or the [...] "modern principle in construction") is an approach to statutory and constitutional interpretation under which common law courts interpret an enactment (i.e., <b>a</b> statute, part <b>of</b> <b>a</b> statute, or <b>a</b> <b>clause</b> <b>of</b> <b>a</b> constitution) {{within the context of}} the law's purpose.|$|R
40|$|Max-SAT is {{the problem}} <b>of</b> finding <b>an</b> {{assignment}} minimizing the number <b>of</b> unsatisfied <b>clauses</b> <b>of</b> <b>a</b> given CNF formula. We propose a resolution-like calculus for Max-SAT and prove its soundness and completeness. We also prove the completeness of some refinements of this calculus. From the completeness proof we derive an exact algorithm for Max-SAT and a time upper bound...|$|R
5000|$|The {{arrangement}} <b>of</b> <b>clauses</b> is {{not consistent}} in Sabaean. The first clause in an inscription always has the order (particle - [...] ) subject - predicate (SV), the other main <b>clauses</b> <b>of</b> <b>an</b> inscription are introduced by w- [...] "and" [...] and always have - like subordinate clauses - the order predicate - subject (VS). At {{the same time the}} Predicate may be introduced by f.|$|R
50|$|Syntactic {{ambiguity}} arises {{not from}} the range of meanings of single words, but from {{the relationship between the}} words and <b>clauses</b> <b>of</b> <b>a</b> sentence, and the sentence structure underlying the word order therein. In other words, a sentence is syntactically ambiguous when a reader or listener can reasonably interpret one sentence as having more than one possible structure.|$|R
40|$|Logic {{programming}} employs logic as a programming language. Thus a logic program consists <b>of</b> <b>a</b> set <b>of</b> <b>clauses</b> <b>of</b> <b>a</b> {{certain form}} most often <b>a</b> subset <b>of</b> the <b>clauses</b> <b>of</b> {{first order logic}} viewed as axioms. Computation in this paradigm is deduction from these axioms via some interpreter. Logic programming semantics is concerned with background theory for logic programming. It tries to provide models for logic programs to give them their intended meaning and to connect them with practically implementable interpreters...|$|R
50|$|Each line is {{formally}} correspondent with <b>a</b> unit <b>of</b> thought—in this case, <b>a</b> <b>clause</b> <b>of</b> <b>a</b> sentence. End-stopping is {{more frequent}} in early Shakespeare: as his style developed, {{the proportion of}} enjambment in his plays increased. Scholars such as Goswin König and A. C. Bradley have estimated approximate dates of undated works of Shakespeare by studying the frequency of enjambment.|$|R
50|$|A {{dependent}} clause is {{a clause}} that provides an independent clause with additional information, but which cannot stand alone as a sentence. Dependent clauses either modify the independent <b>clause</b> <b>of</b> <b>a</b> sentence or serve as <b>a</b> component <b>of</b> it. Some grammarians {{use the term}} subordinate clause as a synonym for dependent clause. Others use subordinate clause to refer only to adverbial dependent clauses.|$|R
50|$|In 1998, {{following}} {{court decisions}} on same-sex unions {{in other states}} that suggested that denying the right to marry to same-sex couples was incompatible with the equal protection <b>clause</b> <b>of</b> <b>a</b> state constitution like Iowa's, Iowa legislators who hoped to avoid a similar court challenge tried without success to pass a statute to prohibit marriage {{on the part of}} gay and lesbian couples.|$|R
40|$|We {{consider}} C {{programs that}} manipulate lists (the data structure to represent symbolic information) through operations defined in separate modules; operations such as cons, nil, car, cdr, isNil. We want to analyze such programs {{in order to}} detect simple programming errors (see the example given below). It turns out (see [CP 98]) that model checking temporal properties {{can be reduced to}} set-based program analysis, as studied by Reynolds, Jones/Muchnik, Heintze, Vardi and others [Rey 69,JM 79,Hei 92,FSVY 91]. In the work described here [Top 02], we perform the set-based analysis of list-processing C programs by { translating a C program into <b>a</b> set <b>of</b> Horn <b>clauses</b> (i. e. a logic program) with the same operational semantics, { applying an abstracting transformation (proposed by Vardi and others in [FSVY 91]), thus obtaining a uniform logic program with Horn <b>clauses</b> <b>of</b> <b>a</b> restricted form; see (1) below, { applying resolution to obtain Horn <b>clauses</b> <b>of</b> <b>an</b> even more restricted form...|$|R
5000|$|Berwind-White Coal Mining Co. v. Chicago & Erie R. Co., 309 U.S. 33 (1940), is United States Supreme Court case {{upholding}} the legality under the Constitution's Commerce <b>Clause</b> <b>of</b> <b>a</b> tax by the City of New York upon the purchase <b>of</b> coal by <b>a</b> public utility and steamship companies based in New York from Berwind-White Coal Mining Company, a Pennsylvania coal company through its New York office.|$|R
40|$|The aim of {{this paper}} is to {{describe}} the main <b>clause</b> <b>of</b> <b>a</b> type <b>of</b> concessive construction usually referred to as a universal concessive conditional. The main <b>clause</b> <b>of</b> <b>a</b> Russian universal concessive conditional typically contains a strong or even irrefutable statement, which goes against the expectations of the hearer. In the literature it has been attested that the main <b>clause</b> <b>of</b> this construction typically contains contrastive markers, such as vse-taki ‘nevertheless’, and universal quantifiers (e. g. vsegda ‘always’, nikogda ‘never’). Our data show that these two markers are only found in <b>a</b> minority <b>of</b> cases. Since counterexpectation and contrast are the central elements of the construction, we may expect other operators that are related to the notion of polarity to be found in the main clause, such as aspectual markers (e. g. ešče ‘still’), modal operators (e. g. dolžen ‘must’), focus particles (e. g. tol’ko ‘only’), comparative quantifiers (e. g. bol’še ‘more’), or negation. We will describe the use of these elements based on a synchronic corpus study and account for their contribution to the meaning of the construction as a whole and to the pragmatic function of the universal concessive conditional construction. status: publishe...|$|R
2500|$|In Ex parte Crow Dog (1883), the Court {{held that}} the Nonintercourse Act of 1834's {{exception}} for Indian-on-Indian crimes had not been repealed by the [...] "bad men" [...] <b>clause</b> <b>of</b> <b>a</b> treaty, and that therefore there was no federal jurisdiction to try such a crime. Congress responded by passing the Major Crimes Act. In United States v. Kagama (1886), the Court upheld the Major Crimes Act.|$|R
50|$|In {{computational}} complexity theory, {{the maximum}} satisfiability problem (MAX-SAT) {{is the problem}} of determining the maximum number <b>of</b> <b>clauses,</b> <b>of</b> <b>a</b> given Boolean formula in conjunctive normal form, that can be made true by <b>an</b> assignment <b>of</b> truth values to the variables of the formula. It is <b>a</b> generalization <b>of</b> the Boolean satisfiability problem, which asks whether there exists a truth assignment that makes all clauses true.|$|R
5000|$|In Ex parte Crow Dog (1883), the Court {{held that}} the Nonintercourse Act of 1834's {{exception}} for Indian-on-Indian crimes had not been repealed by the [...] "bad men" [...] <b>clause</b> <b>of</b> <b>a</b> treaty, and that therefore there was no federal jurisdiction to try such a crime. Congress responded by passing the Major Crimes Act. In United States v. Kagama (1886), the Court upheld the Major Crimes Act.|$|R
60|$|Katharine {{looked at}} her again, as if her first glance must have been deluded, for, surely, {{there must be some}} outward sign that Mary was talking in an excited, or bewildered, or fantastic manner. No; she still frowned, as if she sought her way through the <b>clauses</b> <b>of</b> <b>a</b> {{difficult}} argument, but she still looked more like one who reasons than one who feels.|$|R
50|$|The {{contrast}} with the Latin gerund is also clear when the <b>clause</b> consists <b>of</b> <b>a</b> single word.|$|R
50|$|The {{definite}} <b>clauses</b> <b>of</b> <b>a</b> DCG can {{be considered}} <b>a</b> set <b>of</b> axioms where the validity <b>of</b> <b>a</b> sentence, {{and the fact that}} it has a certain parse tree {{can be considered}} theorems that follow from these axioms. This has the advantage of making it so that recognition and parsing <b>of</b> expressions in <b>a</b> language becomes <b>a</b> general matter <b>of</b> proving statements, such as statements in a logic programming language.|$|R
40|$|This study {{investigated}} 4 -year-old children's {{knowledge of the}} structural constraints on ellipsis constructions in Mandarin Chinese, focusing on the structural difference between verb phrase (VP) ellipsis and null object constructions. In Mandarin Chinese, if the antecedent <b>clause</b> <b>of</b> <b>a</b> VP-ellipsis structure contains an adverbial modifier, this adverbial modifier must be recovered at the elided site in the second clause. However, if the antecedent <b>clause</b> <b>of</b> <b>a</b> null object construction contains an adverbial modifier, the reconstruction of this adverbial modifier at the elided site is not necessary. Two experiments were conducted to examine whether young Mandarin-speaking children are sensitive to this structural {{difference between the two}} ellipsis constructions. The results show that children exhibited adult-like performance in both experiments. This is evidence that young Mandarin-speaking children have knowledge of the structural difference between VP-ellipsis and null object constructions with regard to adverbial recovery. We interpreted the findings in conjunction with previous research as evidence that children's knowledge of the structural constraints on ellipsis constructions is innately specified. 25 page(s...|$|R
50|$|Ditransitive <b>clauses</b> consist <b>of</b> <b>an</b> accusative {{object and}} dative {{indirect}} object, and alternate with a clause with two accusative objects.|$|R
40|$|Logic Programming and (Hyper-) Graph Rewriting are two {{well known}} fields of Computer Science. In this paper we show how to model logic program {{computations}} through algebraic techniques {{familiar to the}} graph rewriting community. <b>Clauses</b> <b>of</b> <b>a</b> logic program are represented by graph productions, goals by suitable hypergraphs (called jungles), and resolution steps by an algebraic construction involving three pushouts. The correspondence between the two formalisms is further analyzed by providing a precise algebraic characterization of specialization and unfolding <b>of</b> <b>clauses...</b>|$|R
40|$|Extract] • There is {{a global}} recession, so what of {{restraint}} of trade? • Is it only the <b>clause</b> <b>of</b> <b>a</b> boom or is it still relevant? • [2005] NSWSC 631 per White J: - 6 month restraint in IT against computer programmer - that employee {{was in a position}} through which he had gained intimate knowledge of customer's business requirements - He was sitting on confidential information while negotiating his new job with a competitor...|$|R
50|$|In {{regards to}} the anti-Catholic {{provisions}} of the Canadian constitution, monarchists either see them as a non-issue, as no one who is Catholic is near to the throne {{in the line of}} succession, or see them as <b>a</b> discriminatory <b>clauses</b> <b>of</b> <b>a</b> law for which, as it was enacted by elected parliamentarians in Britain and inherited by Canada with Canadian parliamentary approval, the monarchy cannot be held responsible, and can be altered by parliament to repeal the offending parts.|$|R
