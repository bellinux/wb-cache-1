8|1971|Public
50|$|Another {{advantage}} of stream ciphers in military cryptography {{is that the}} <b>cipher</b> <b>stream</b> can be generated in a separate box that is subject to strict security measures and fed to other devices such as a radio set, which will perform the xor operation {{as part of their}} function. The latter device can then be designed and used in less stringent environments.|$|E
50|$|The {{pseudorandom}} keystream {{is typically}} generated serially from a random seed value using digital shift registers. The seed value {{serves as the}} cryptographic key for decrypting the ciphertext stream.Stream ciphers represent {{a different approach to}} symmetric encryption from block ciphers. Block ciphers operate on large blocks of digits with a fixed, unvarying transformation. This distinction is not always clear-cut: in some modes of operation, a block cipher primitive is used {{in such a way that}} it acts effectively as a stream <b>cipher.</b> <b>Stream</b> ciphers typically execute at a higher speed than block ciphers and have lower hardware complexity. However, stream ciphers can be susceptible to serious security problems if used incorrectly (see stream cipher attacks); in particular, the same starting state (seed) must never be used twice.|$|E
40|$|Présentation lors des Rencontres régionales « Académiques/industriels » Pôle d’Excellence CYBER, Vannes le 2 mars 2017 (organisateurs IRISA Vannes-pôle recherche). Outline:- What is What is chaos? - How to {{generate}} it?chaos? How {{to generate}} it?- Chaos & Cryptography- Why using chaos to secure information?- Chaos [...] based cryptography*Design and realization of an efficient chaos [...] based stream <b>cipher</b> <b>stream</b> and performance evaluation*Design and realization of efficient an chaos [...] based cryptosystem and performance evaluatio...|$|E
50|$|Table compares {{implementations}} of {{the various}} <b>stream</b> <b>ciphers.</b> <b>Stream</b> <b>ciphers</b> are defined as using plain text digits that are combined with a pseudorandom <b>cipher</b> digit <b>stream.</b> <b>Stream</b> <b>ciphers</b> are typically faster than block ciphers and may have lower hardware complexity, but may be more susceptible to attacks.|$|R
25|$|In cryptography, a <b>stream</b> <b>cipher</b> is a {{symmetric}} key cipher where plaintext bits are {{combined with a}} pseudorandom <b>cipher</b> bit <b>stream,</b> typically by an exclusive-or (xor) operation. In a <b>stream</b> <b>cipher</b> the plaintext digits are encrypted one at a time, and the transformation of successive digits varies during the encryption. Also known as a state <b>cipher,</b> the <b>stream</b> <b>cipher</b> was invented in 1917 by Gilbert Sandford Vernam at Bell Labs.|$|R
40|$|Abstract. In these {{lecture notes}} we survey {{the state of}} the art in {{symmetric}} key encryption, in particular in the block <b>ciphers</b> and <b>stream</b> <b>ciphers</b> area. The area of symmetric key encryption has been very active in the last five years due to growing interest from academic and industry research, standardization efforts like AES, NESSIE and CRYPTREC, as well as due to ease of government control over export of cryptography. Keywords: Block <b>ciphers,</b> <b>stream</b> <b>ciphers,</b> cryptanalysis, design, AES, NESSIE, CRYPTREC, STORK, E-CRYPT...|$|R
40|$|Abstract: The cipher {{algorithms}} are {{categorized by}} block <b>cipher,</b> <b>stream</b> cipher and HASH, {{and they are}} weighed in faithful transmission which is known as independent condition. In faithful transmission, the ciphers are studied because of their root cipher. Intelligent application of ciphers is a direction that uses Bayesian model of cognition science. Bayesian inference is a rational engine for solving such problems within a probabilistic framework, and consequently {{is the heart of}} most probabilistic models of weighing the ciphers. The approach of this paper is that ciphers, which are considered as a suitable weight cipher to kinds of networks, are ranged based on root ciphers. This paper shows the other kinds of transformation among the different cipher algorithms themselves...|$|E
40|$|Abstract: The {{problem in}} {{cryptanalysis}} {{can be described}} as an unknown and the neural networks are ideal tools for blackbox system identification. In this paper, a mathematical black-box model is developed and system identification techniques are combined with adaptive system techniques, to construct the Neuro-Identifier. The Neuro-Identifier is discussed as a black-box model to attack the target cipher systems. In this paper a new addition in cryptography. Has been presented, and the methods of classical and stream cryptosystems are discussed. The constructing of Neuro-Identifier mode is to achieve two objectives: the first one is to emulator construction Neuro-model for the target cipher system, while the second is to (cryptanalysis) determine the key from given plaintext-ciphertext pair. Keywords: Neuro-Identefier, classical <b>cipher,</b> <b>stream</b> cipher, black box, emulation, and cryptanalysis...|$|E
40|$|Cryptography is {{a science}} of {{converting}} clear message into secret message "nonreadable message", where message was encrypted at sender side then decrypted at receiver side. Vigenere {{is an example of}} substitution cipher, it has various limitations, in this paper we propose an advanced encryption algorithm which improves the security of Vigenere method by combining it with modern cipher method like Stream <b>cipher,</b> <b>Stream</b> cipher relatively regards as unbreakable method, and it uses binary form (instead of characters) where the Plaintext, Ciphertext and the Key are strings of bits. When applying the proposed algorithm, we see that the mentioned above combination cipher has a high degree of security, where cipher based on just Vigenere method is not secure. Also, the proposed algorithm makes the cryptanalysis, using frequency attack, more difficult...|$|E
5000|$|<b>Stream</b> <b>ciphers</b> {{can be built}} using block ciphers. OFB-mode and CTR mode are block modes {{that turn}} a block <b>cipher</b> into a <b>stream</b> <b>cipher.</b>|$|R
25|$|Symmetric key ciphers are {{implemented}} as either block <b>ciphers</b> or <b>stream</b> <b>ciphers.</b> A block cipher enciphers input in blocks of plaintext {{as opposed to}} individual characters, the input form used by a <b>stream</b> <b>cipher.</b>|$|R
50|$|The {{primitive}} can be {{used both}} as a hash function and a <b>stream</b> <b>cipher.</b> The <b>stream</b> <b>cipher</b> uses a 256-bit key {{and the performance of}} the cipher is very good reaching 2 cycles per byte.|$|R
40|$|We propose {{separable}} reversible {{data hiding}} in an encrypted signal with public key cryptography. In our separable framework, the image owner encrypts the original image {{by using a}} public key. On receipt of the encrypted signal, the data-hider embeds data in it by using a data-hiding key. The image decryption and data extraction are independent and separable at the receiver side. Even though the receiver, who has only the data-hiding key, does not learn about the decrypted content, he can extract data from the received marked encrypted signal. However, the receiver who has only the private key cannot extract the embedded data, but he can directly decrypt the received marked encrypted signal to obtain the original image without any error. Compared with other schemes using a <b>cipher</b> <b>stream</b> to encrypt the image, the proposed scheme is more appropriate for cloud services without degrading the security level...|$|E
40|$|Many {{systems have}} been {{developed}} by mathematicians using symmetric and Asymmetric Cryptography e. g. Ceaser <b>Cipher,</b> <b>Stream</b> Ciphers, RSA, DES, IDEA, RC- 4, ElGamal signatures, LFSR, Ext. Euclidean Algorithm, Lamport Signatures, Merkle Hellman Knapsack. etc. Some {{of them are very}} strong to be broken by cryptanalysts. Some are very easy and even can be broken by the measuring the frequency of alphabets in a specific cipher text. All these system carries some overhead of key with which a plain text is encrypted, for the communication channel. We thought of an idea in which product component which will be 5 * 1 matrix will be carried on the communication channel rather than 5 * 5. This 5 * 5 will be obtained on the receiver side inversing and having product of the received matrix with symmetric key which will be known to both sender and receiver. This idea is achieved by peeping into the systems of CDMA (Code Division Multiple Access) in which Walsh tables are minimized by multiplying and less overhead is achieved by communication channel. We are applying that idea in the context of cryptosystems. Our Cryptosystem is much strong enough to be broken by cryptanalyst but fewer loads for communication channel especially for Wireless Networks, Ad-Hoc Networks and Sensor Networks in minimum energy and less memory usage is main goal. The name suggested for this cryptosystem is as BasitMaxCryptoSystem...|$|E
40|$|T-functions were {{introduced}} by Klimov and Shamir {{in a series}} of papers during the last few years. They are of great interest for cryptography as they may provide some new building blocks which can be used to construct e#cient and secure schemes, for example block <b>ciphers,</b> <b>stream</b> <b>ciphers</b> or hash functions...|$|R
40|$|<b>Stream</b> <b>cipher</b> A <b>stream</b> <b>cipher</b> is a {{symmetric}} cipher which operates with a time-varying transformation on individual plaintext digits. By contrast, block ciphers operate with a fixed transformation on large blocks of plaintext digits. More precisely, in a <b>stream</b> <b>cipher</b> {{a sequence of}} plaintext digits, m 0 m 1 [...] ., is encrypted into a sequence of ciphertext digits c 0 c 1 [...] . as follows: a pseudorandom sequence s 0 s 1 [...] ., called the running-key or the keystream, is produced by a finite state automaton whose initial state is determined by a secret key. The i-th keystream digit only depends on the secret key and on the (i− 1) previous plaintext digits. Then, the i-th ciphertext digit is obtained by combining the i-th plaintext digit with the i-th keystream digit. <b>Stream</b> <b>ciphers</b> are classified into two types: synchronous <b>stream</b> <b>ciphers</b> and asynchronous <b>stream</b> <b>ciphers.</b> The most famous <b>stream</b> <b>cipher</b> is the Vernam cipher, also called one-time pad, that leads to perfect secrecy (the ciphertext gives no information about the plaintext). <b>Stream</b> <b>ciphers</b> have several advantages which make them suitable for some applications. Most notably, they are usually faster and have a lower hardware complexity than block ciphers. They are also appropriate when buffering is limited, since the digits are individually encrypted and decrypted. Moreover, synchronous <b>stream</b> <b>ciphers</b> are not affected by error-propagation...|$|R
50|$|John Kelsey is a {{cryptographer}} {{who works}} at NIST. His research interests include cryptanalysis and design of symmetric cryptography primitives (block <b>ciphers,</b> <b>stream</b> <b>ciphers,</b> cryptographic hash functions, MACs), analysis and design of cryptographic protocols, cryptographic random number generation, electronic voting, side-channel attacks on cryptography implementations, and anonymizing communications systems. He previously worked at Certicom and Counterpane Internet Security.|$|R
40|$|Currently, {{there are}} no <b>stream</b> <b>ciphers</b> which have been adopted as {{international}} standards. Most <b>stream</b> <b>ciphers</b> in practice were designed based on linear feedback shift registers. However, most of these ciphers have been attacked. This paper examines {{the security of a}} family of <b>stream</b> <b>ciphers</b> called Cascade <b>Stream</b> <b>Ciphers</b> (CSCs) and proposes two modified versions of this type of <b>cipher.</b> A cascade <b>stream</b> <b>cipher</b> consists of a number of small RC 4 cells that are cascaded to generate an output sequence (the keystream). Each RC 4 cell is composed of a Substitution-box (or S-box) and two pointers addressed to the S-box. Both the pointers and the S-box contents are updated each clock cycle. Each cell operates internally as a small RC 4 cipher. The output of the current cell is use...|$|R
50|$|CSS {{employs a}} <b>stream</b> <b>cipher</b> and mangles the {{keystream}} with the plain-text data {{to produce the}} <b>cipher</b> text. The <b>stream</b> <b>cipher</b> is based on two linear feedback shift register (LFSR) and set up with a 40-bit seed.|$|R
40|$|Abstract-A <b>stream</b> <b>cipher</b> is {{a common}} method to protect {{confidential}} information from unauthorized person. This kind of cryptosystem is preferred to block ciphers because its implementation in hardware consumes less power and size. Amidst of different <b>stream</b> <b>ciphers,</b> Non-Linear Feedback Shift Register (NLFSR) based one offers the best trade-off between security and hardware capability. This paper describes the <b>stream</b> <b>cipher</b> that generates 128 bit keystream using only NLFSR element as its main function and XOR operation. Hence, this cryptosystem is named as Exclusive- 128 NLFSR <b>stream</b> <b>cipher.</b> This cipher consists of different sizes of NLFSRs both in Galois and Fibonacci configuration which offers better trade-off between the algorithm security and hardware capability. The essential design principles in developing the <b>stream</b> <b>cipher</b> are adopted from the A 5 / 1 and modified A 5 / 1 <b>stream</b> <b>ciphers.</b> The proposed <b>stream</b> <b>cipher</b> provides promising efficiency in hardware costs in reconfigurable Field Programmable Gate Array (FPGA) and Application Specific Integrated Circuits (ASIC) implementations...|$|R
40|$|When {{designing}} symmetric ciphers, {{security and}} performance are of utmost importance. When selecting a symmetric encryption algorithm, {{the first choice}} is whether to choose a block <b>cipher</b> or a <b>stream</b> <b>cipher.</b> Most modern block ciphers offer a sufficient security and a reasonably good performance. But a block cipher must usually {{be used in a}} <b>stream</b> <b>cipher</b> mode of operation, which suggests that using a pure <b>stream</b> <b>cipher</b> primitive might be beneficial. Modern <b>stream</b> <b>ciphers</b> will indeed offer an improved performance compared with block ciphers (typically at least a factor 4 - 5 if measured in speed). However, the security of modern <b>stream</b> <b>ciphers</b> is not as well understood as for block <b>ciphers.</b> Most <b>stream</b> <b>ciphers</b> that have been widely spread, like RC 4, A 5 / 1, have security weaknesses. It is clear that modern <b>stream</b> <b>cipher</b> designs, represented by proposals like Panama, Mugi, Sober, Snow, Seal, Scream, Turing, Rabbit, Helix, and many more, are very far from classical designs like nonlinear filter generators, nonlinear combination generators, etc. One major difference is that classical designs are bit-oriented, whereas modern designs tend to operate on (e. g. 32 bit) words to provide efficient software implementations. This leads to usage of different operations. Modern <b>stream</b> <b>ciphers</b> use building blocks very similar to those used in block ciphers. Essentially all modern <b>stream</b> <b>cipher</b> designs use S-boxes in {{one way or the other}} and combine this with various linear operations, essentially following the old confuse and diffuse paradigm from Shannon. In this invited talk, we will overview various methods for cryptanalysis of modern <b>stream</b> <b>ciphers.</b> This will include time-memory tradeoff attacks, correlation attacks, distinguishing attacks of different kinds, guess-and-determine type of attacks, and the recent and very interesting algebraic attacks. This will give us lots of useful feedback when considering the design of secure and fast <b>stream</b> <b>ciphers...</b>|$|R
50|$|The CSA {{algorithm}} {{is composed of}} two distinct ciphers: a block <b>cipher</b> and a <b>stream</b> <b>cipher.</b>|$|R
50|$|Symmetric key ciphers can {{be divided}} into block <b>ciphers</b> and <b>stream</b> <b>ciphers.</b> Block ciphers operate on fixed-length groups of bits, called blocks, with an unvarying transformation. <b>Stream</b> <b>ciphers</b> encrypt {{plaintext}} digits one at a time on a continuous stream of data and the transformation of successive digits varies during the encryption process.|$|R
40|$|Recently {{proposed}} algebraic attack {{has been}} shown to be very effective on several <b>stream</b> <b>ciphers.</b> In this paper, we have investigated the resistance of PingPong family of <b>stream</b> <b>ciphers</b> against algebraic attacks. This <b>stream</b> <b>cipher</b> was proposed in 2008 to enhance the security of the improved summation generator against the algebraic attack. In particular, we focus on the PingPong- 128 <b>stream</b> <b>cipher’s</b> resistance against algebraic attack in this paper. In our analysis, it is found that an algebraic attack on PingPong family of <b>stream</b> <b>ciphers</b> require much more operations compare to the exhaustive key search on the internal state of the LFSRs. It will be shown that due to the irregular and mutual clock controlling in PingPong <b>stream</b> <b>cipher</b> the degree of the generated equation tends to grow up with each successive clock which in turn increases the overall complexity of an algebraic attack. Along with the PingPong 128 <b>stream</b> <b>cipher</b> the other instances of PingPong family <b>stream</b> <b>ciphers</b> are also investigated against the algebraic attack. Our analysis shows that, PingPong family <b>stream</b> <b>ciphers</b> are highly resistant against the algebraic attack due to their mutual and irregular clocking function...|$|R
40|$|Abstract. In this paper, {{we propose}} a new <b>stream</b> <b>cipher</b> {{construction}} based on block cipher design principles. The main {{idea is to}} replace the building blocks used in block <b>ciphers</b> by equivalent <b>stream</b> <b>cipher</b> components. In order to illustrate this approach, we construct a very simple synchronous <b>stream</b> <b>cipher</b> which provides a lot of flexibility for hardware implementations, and {{seems to have a}} number of desirable cryptographic properties. ...|$|R
40|$|<b>Stream</b> <b>Ciphers</b> {{are one of}} {{the most}} {{important}} cryptographic techniques for data security due to its efficiency in terms of resources and speed. This study aims to provide a comprehensive survey that summarizes the existing cryptanalysis techniques for <b>stream</b> <b>ciphers.</b> It will also facilitate the security analysis of the existing <b>stream</b> <b>ciphers</b> and provide an opportunity to understand the requirements for developing a secure and efficient <b>stream</b> <b>cipher</b> design...|$|R
50|$|In 1988, Daemen {{graduated}} in electro-mechanical {{engineering at the}} Katholieke Universiteit Leuven. He subsequently joined the COSIC research group, and has worked on the design and cryptanalysis of block <b>ciphers,</b> <b>stream</b> <b>ciphers</b> and cryptographic hash functions. Daemen completed his PhD in 1995, at which point {{he worked for a}} year at Janssen Pharmaceutica in Beerse, Belgium. He subsequently worked at the BACOB bank, Banksys, Proton World and then STMicroelectronics.|$|R
40|$|The {{nonlinear}} filter Boolean {{function of}} LILI- 128 <b>stream</b> <b>cipher</b> generator is studied in this paper. First we measure {{the complexity of}} the <b>stream</b> <b>ciphers</b> sequence of LILI- 128 <b>stream</b> <b>cipher</b> generator and obtain the shortest bit stream se quence reconstructed Boolean function of nonlinear filter in LILI- 128 <b>stream</b> <b>cipher</b> generator. Then the least nonlinear Boolean function of generating <b>stream</b> <b>cipher</b> sequence is reconstructed by clusterig, nonlinear predictive and nonlinear synchronization from shortest bit stream sequence. We have verified the correctness of our reconstruction result by simulating the block diagram of Lili- 128 keystream generator using our getting Boolean function and implement de signers’ reference module of Lili- 128 <b>stream</b> <b>cipher</b> public online, and two methods produce the same synchronous keystream sequence under same initial state, so that our research work proves that the nonlinear Boolean function of LILI- 128 <b>stream</b> <b>cipher</b> generator is successfully broken. </p...|$|R
50|$|This article {{summarizes}} publicly known {{attacks against}} block <b>ciphers</b> and <b>stream</b> <b>ciphers.</b> Note {{that there are}} perhaps attacks that are not publicly known, and not all entries may be up to date.|$|R
40|$|Abstract. Phelix is an {{asynchronous}} word-oriented <b>stream</b> <b>cipher</b> {{submitted to}} the ECRYPT <b>stream</b> <b>cipher</b> project, with a variable-length key between 128 and 256 bits and is claimed to have 128 -bit security. The algorithm {{is similar to the}} earlier <b>stream</b> <b>cipher</b> Helix which is showed to be vulnerable. In this paper, we introduce a chosen-key differential distinguishing attack on the <b>stream</b> <b>cipher</b> Phelix with no large complexity. The results show that this <b>stream</b> <b>cipher</b> is vulnerable if the attacker has the ability to re-encrypt the unknown message with a defined modification of the unknown secret key. ...|$|R
40|$|Both <b>stream</b> <b>ciphers</b> {{and block}} ciphers {{can be used}} to provide data {{confidentiality}} service. <b>Stream</b> <b>ciphers</b> are preferred in many applications, since they can destroy statistical properties of natural languages to some extent. However, it seems hard to design a <b>stream</b> <b>cipher</b> with many proven security properties. The objective {{of this paper is to}} present a binary <b>stream</b> <b>cipher</b> which is secure with respect to a number of attacks, and has reasonable performance. The advantage of the <b>stream</b> <b>cipher</b> over existing ones is that it has more proven security properties. © 2011 Springer Science + Business Media, LLC...|$|R
40|$|The <b>stream</b> <b>cipher</b> WG- 7 is a {{lightweight}} {{variant of the}} well-known Welch-Gong (WG) <b>stream</b> <b>cipher</b> family, targeting for resource-constrained devices like RFID tags, smart cards, and wireless sensor nodes. Recently, a distinguishing attack was discovered against the <b>stream</b> <b>cipher</b> WG- 7 by Orumiehchiha, Pieprzyk and Steinfeld. In this paper, we extend their work to a general distinguishing attack and suggest criteria to protect the WG <b>stream</b> <b>cipher</b> family from this attack. Our analysis shows that by properly choosing the minimal polynomial of the linear feedback shift register for a WG <b>stream</b> <b>cipher,</b> the general distinguishing attack can be easily thwarted. ...|$|R
50|$|To begin with, {{symmetric}} key ciphers {{can be further}} subdivided into <b>stream</b> <b>ciphers</b> and block <b>ciphers.</b> <b>Stream</b> <b>ciphers</b> typically encrypt plaintext a bit or byte at a time, and are most commonly used to encrypt real-time communications, such as audio and video information. The key is used to establish the initial state of a keystream generator, and the output of that generator is used to encrypt the plaintext. Block cipher algorithms split the plaintext into fixed-size blocks and encrypt one block at a time. For example, AES processes 16-byte blocks, while its predecessor DES encrypted blocks of eight bytes.|$|R
50|$|The ASF {{container}} can optionally support {{digital rights}} management {{using a combination of}} elliptic curve cryptography key exchange, DES block cipher, a custom block <b>cipher,</b> RC4 <b>stream</b> <b>cipher</b> and the SHA-1 hashing function.|$|R
50|$|Some hash functions, such as Skein, Keccak, and RadioGatún output an {{arbitrarily}} long {{stream and}} {{can be used as a}} <b>stream</b> <b>cipher,</b> and <b>stream</b> <b>ciphers</b> can also be built from fixed-length digest hash functions. Often this is done by first building a cryptographically secure pseudorandom number generator and then using its stream of random bytes as keystream. SEAL is a <b>stream</b> <b>cipher</b> that uses SHA-1 to generate internal tables, which are then used in a keystream generator more or less unrelated to the hash algorithm. SEAL is not guaranteed to be as strong (or weak) as SHA-1. Similarly, the key expansion of the HC-128 and HC-256 <b>stream</b> <b>ciphers</b> makes heavy use of the SHA256 hash function.|$|R
25|$|Message {{authentication}} code (MAC) is {{used for}} data integrity. HMAC {{is used for}} CBC mode of block <b>ciphers</b> and <b>stream</b> <b>ciphers.</b> AEAD is used for Authenticated encryption such as GCM mode and CCM mode.|$|R
