2|366|Public
40|$|The {{capacity}} of the AWGN broadcast channel is achieved by superposition coding, but superposition of individual coded modulations expands the modulation alphabet and distorts its <b>configuration.</b> <b>Coded</b> modulation over a broadcast channel subject to a specific channel-input modulation constraint remains an important open problem. Some {{progress has been made}} in the related area of unequal-error protection modulations which can be considered single-user broadcast transmission, but it does not approach all points on the boundary of the capacity region. This paper studies broadcast coded modulation using multilevel coding (MLC) subject to a specific channel input constellation. The conditions under which multilevel codes can achieve the constellation-constrained {{capacity of}} the AWGN broadcast channel are derived. For any given constellation, we propose a pragmatic multilevel design technique with near constellation-constrained-capacity performance where the coupling of the superposition inner and outer codes are localized to each bit-level. It is shown that this can be further relaxed to a code coupling on only one bit level, with little or no penalty under natural labeling. The rate allocation problem between the bit levels of the two users is studied and a pragmatic method is proposed, again with near-capacity performance. In further pursuit of lower complexity, a hybrid MLC-BICM is proposed, whose performance is shown to be very close to the boundary of the constellation-constrained capacity region. Simulation results show that good point-to-point LDPC codes produce excellent performance in the proposed coded modulation framework...|$|E
40|$|International audienceThe {{resolution}} of Air Traffic Control (ATC) conflicts is a constrained optimization problem : {{the goal is}} to propose, for a certain number, n, of aircraft, which might be in conflict in a near future, trajectories that satisfy the separation constraints between aircraft, and minimizes the delays due to the conflict's resolution. The type of conflict resolution trajectories we use allows to split the problem in two steps: first we choose, and freeze, what we call a configuration of the problem, i. e. for each aircraft, the direction in which the aircraft is diverted, and for each pair of aircraft, which of the two aircraft passes first at the crossing point of the two aircraft trajectories. We can then compute the optimal trajectories corresponding to this configuration, by solving a simple linear optimization problem. Thus we can use an Genetic Algorithm, along with a linear optimization algorithm, such as the simplex algorithm: the elements of the population, on which the GA operates, code configurations of the problem, and are evaluated using a linear optimization program. The advantage of this approach is that we get, as well as the fitness of an element of the population, the local optima corresponding to the <b>configuration</b> <b>coded</b> by this element. The GA actually searches for the global optimum among these local optima. We applied this methods to conflicts in which up to 6 aircraft are involved, and obtained really promising results...|$|E
50|$|The Canadian Army took {{delivery}} of 195 militarized {{versions of the}} CJ-7 in 1985. These were put into service as a stop gap measure between the retirement of the M38A1 {{and the introduction of}} the Bombardier Iltis. They were codified by the Canadian Forces with the Equipment <b>Configuration</b> <b>Code</b> (ECC) Number 121526.|$|R
40|$|Firewalls are {{essential}} aspects of all networks. However they {{are complex and}} if not correctly configured and managed may result in security breaches. The traditional text-based Command Line Interface is a powerful but difficult tool to use. It is inherently sequential requiring multiple commands. Web-based Graphical User interfaces are progressively being deployed such as the Cisco Security Device Manager. With features such as AutoSecure {{it is possible to}} automatically generate device <b>configuration</b> <b>code.</b> Furthermore firewall implementation is relatively simple with <b>configuration</b> <b>code</b> again being automatically generated. However, the code generated may well be substantial. Successful management of secure devices requires the network administrator to be able to understand how the different protocols are interacting {{in order to be able}} to successfully conduct fault diagnosis. This paper demonstrates how State Model Diagrams can be a useful management tool for firewall management...|$|R
50|$|The {{following}} sections show Windows Azure Caching <b>configuration</b> and <b>code</b> examples.|$|R
25|$|A library {{operating}} system {{is one in}} which the services that a typical {{operating system}} provides, such as networking, are provided in the form of libraries and composed with the application and <b>configuration</b> <b>code</b> to construct a unikernel: a specialized, single address space, machine image that can be deployed to cloud or embedded environments.|$|R
40|$|In 2008, the CMS {{experiment}} {{made the}} transition from a custom-parsed language for job configuration to using Python. The current CMS software release has over 180, 000 lines of Python <b>configuration</b> <b>code.</b> We describe the new configuration system, the motivation for the change, the transition itself, and our experiences with the new configuration language...|$|R
3000|$|In this experiment, we analyze coding {{performance}} {{when using}} the optimized <b>coding</b> <b>configuration</b> determined through our method, and compare these results against the coding performance when using other <b>coding</b> <b>configurations.</b> This experiment continues to use the “Mobile” and “Bus” (CIF format) video sets as the test objects. <b>Coding</b> <b>configuration</b> optimization is mainly reflected in QP [...]...|$|R
5000|$|PSoC {{most closely}} resembles a {{microcontroller}} {{combined with a}} PLD and programmable analog. Code is executed {{to interact with the}} user-specified peripheral functions (called [...] "Components"), using automatically generated APIs and interrupt routines. PSoC Designer or PSoC Creator generate the startup <b>configuration</b> <b>code.</b> Both integrate APIs that initialize the user selected components upon the users needs in a Visual-Studio-like GUI.|$|R
40|$|A {{computer}} program loads <b>configuration</b> <b>code</b> into a Xilinx {{field-programmable gate array}} (FPGA), reads back and verifies that code, reloads the code if an error is detected, and monitors {{the performance of the}} FPGA for errors in the presence of radiation. The program consists mainly of a set of VHDL files (wherein "VHDL" signifies "VHSIC Hardware Description Language" and "VHSIC" signifies "very-high-speed integrated circuit") ...|$|R
50|$|The {{development}} stream can consist (depending on {{the system}} type and the development scope) of customization, <b>configuration</b> or <b>coding.</b>|$|R
5000|$|A unikernel is a specialised, single {{address space}} machine image {{constructed}} by using library operating systems. [...] A developer selects, from a modular stack, the minimal set of libraries which {{correspond to the}} OS constructs required for their application to run. These libraries are then compiled with the application and <b>configuration</b> <b>code</b> to build sealed, fixed-purpose images (unikernels) which run directly on a hypervisor or hardware without an intervening OS such as Linux or Windows.|$|R
50|$|Code page 850 (also {{known as}} CP 850, IBM 00850, OEM 850, DOS Latin 1) is a code page used under DOS in Western Europe. Depending {{on the country}} setting and system <b>configuration,</b> <b>code</b> page 850 is the primary code page and default OEM code page in many countries, {{including}} various English-speaking locales (e.g. in the United Kingdom, Ireland, and Canada), whilst other English-speaking locales (like the United States) default to use the hardware code page 437.|$|R
40|$|Abstract. Unit {{testing is}} often made more {{difficult}} by the heavy use of classes as namespaces and {{the proliferation of}} static methods to encapsulate <b>configuration</b> <b>code.</b> We have analyzed the use of 120 static methods from 96 projects by categorizing them according to their responsibilities. We find that most static methods support a hodgepodge of mixed responsibilities, held together only by their common need to be globally visible. Tight coupling between instances and their classes breaks encapsulation, and, together with the global visibility of static methods, complicates testing. By making dependency injection a feature of the programming language, we can get rid of static methods altogether. We employ the following semantic changes: (1) Replace every occurrence of a global with an access to an instance variable; (2) Let that instance variable be automatically injected into the object when it is instantiated. We present Seuss, a prototype that implements this change of semantics in Smalltalk. We show how Seuss eliminates the need to use class methods for non-reflective purposes, reduces the need for creational design patterns such as Abstract Factory and simplifies <b>configuration</b> <b>code,</b> particularly for unit tests. ...|$|R
40|$|In some {{application}} domains, using a download {{cable to}} update the system on a programmable chip (SoPC) is infeasible, which reduces the maintainability and flexibility of the system. Hence the remote system update (RSU) scheme is being studied. In this scheme, the serial configuration (EPCS) device involves a factory mode configuration image, which acts as the baseline, and an application mode configuration image, which is used for some specific functions. Specifically, a new application mode image is delivered through the controller area network (CAN) with the improved application layer protocol. Besides, the data flow and data check for transmitting a new image are constructed to combine the transmission reliability with efficiency. The boot sequence copying hardware <b>configuration</b> <b>code</b> and software <b>configuration</b> <b>code</b> is analyzed, and the advanced boot loader is carried out to specify boot address of the application mode image manually. Experiments have demonstrated the feasibility of updating and running a new application mode image, as well as rolling back into the factory mode image when no application mode image is available. This scheme applies a single CAN bus, which makes the system easy to construct and suitable for the field distributed control system...|$|R
5000|$|System Center Service Manager - Ties in with SCOM, SCCM for asset {{tracking}} {{as well as}} incident, problem, change and <b>configuration</b> management (<b>code</b> name: Service Desk) ...|$|R
40|$|Abstract. This paper {{describes}} AutoNetkit, an auto-configuration {{tool for}} complex network emulations using Netkit, allowing large-scale networks {{to be tested}} on commodity hardware. AutoNetkit uses an object orientated approach for router configuration management, significantly reducing the complexities in large-scale network configuration. Using AutoNetkit, a user can generate large and complex emulations quickly without errors. We have used AutoNetkit to successfully generate {{a number of different}} large networks with complex routing/security policies. In our test case, AutoNetkit can generate 100, 000 lines of device <b>configuration</b> <b>code</b> from only 50 lines of high-level network specification code. ...|$|R
40|$|This paper {{presents}} {{the structure and}} basic elements of the Autosar software architecture. In addition, the <b>configuration</b> <b>code</b> generation options are presented for both MC-ISAR drivers and AURIX TriCore TC 277 hardware modules using EB tresos Studio. For the purpose of possible integration of the electric motor control algorithms, configurations of the GTM and VADC hardware modules have been created and described to enable the generation of PWM signals along with synchronously triggered parallel analogue-to-digital conversions. For this purpose, an application interface including the PWM driver was also developed and described...|$|R
50|$|An agent {{may either}} {{implement}} {{one or more}} standard configurations, or may implement an extended (custom) configuration. When an agent first associates with a manager it states its configuration. Usually the manager will already have knowledge of the object model of agents with this <b>configuration</b> <b>code</b> - either because it was given this knowledge at birth, or because it has previously associated with this Agent and has already learned its object model. If the manager does not have knowledge of this configuration it asks the agent to describe its characteristics (by listing its objects).|$|R
40|$|This paper {{describes}} the compilation of high-level language programs {{written in a}} single-assignment language called SA-C into the binary codes used for programming reconfigurable hardware. The primary application domain is image processing. The paper {{describes the}} SA-C language, the compiler and the optimizations it performs, the process of converting the intermediate form called dataflow graphs into VHDL, and the generation of hardware <b>configuration</b> <b>codes.</b> Performance data on a typical image processing program, written in SA-C and executed on a reconfigurable computing system, is presented and compared to a hand-written VHDL version and a C version running on conventional processors...|$|R
40|$|Some {{experimental}} and epidemiologic {{evidence suggests that}} residential exposure to power-frequency magnetic fields can increase breast cancer risk. This association was investigated in a nested case-control study of female breast cancer within a cohort of African Americans, Latinas, and Caucasians in Los Angeles County, California. Incident breast cancer was ascertained from 1993 to 1999 by linkage to county and state tumor registries. Controls were selected from {{a random sample of}} cohort members without breast cancer at baseline. Exposure was assessed in 1995 – 2001 by means of wiring <b>configuration</b> <b>coding</b> (an indirect measure of magnetic field exposure that has been associated with increased risk of childhood leukemia in Los Angeles and elsewhere in North America) in all homes occupied over the previous 10 years for 743 cases and 699 controls and by measurement of magnetic fields in the bedroom over a 7 -day period for 347 cases and 286 controls. The estimated risk of breast cancer was not higher among women with wiring <b>configuration</b> <b>codes</b> associated with the highest magnetic fields (for a very high current configuration relative to very low, the adjusted odds ratio was 0. 76 (95 % confidence interval: 0. 49, 1. 18)). Stronger measured fields were not significantly associated with increased risk. These data suggest that residential magnetic field exposures commonly experienced by US women do not influence risk of breast cancer. breast neoplasms; electricity; electromagnetic fields; environmental exposur...|$|R
5000|$|PCR5 - IPL <b>Code</b> <b>Configuration</b> and Data (for {{use by the}} IPL Code) ...|$|R
40|$|Abstract. Standard {{programming}} tools use {{a system}} of error messages and warnings to help programmers in finding syntax and logical errors in their programs. Generative programming differentiates the level of generator from the level of generated application. The source code is synthesized {{at the level of}} generator from a set of code templates according to application specification and rules defined by generator <b>configuration.</b> <b>Code</b> templates, application specification and generator configuration are mutually dependent and error in any part may result in incorrect source code. This paper deals with possibilities of introducing error messages that are specific at the level of generator. An example of generator is developed and discussed...|$|R
40|$|In {{order to}} {{accommodate}} the spectrum of configuration options currently required for competitive system infrastructures, many systems leverage heavy usage of C preprocessor controlled conditional compilation. Inherent costs associated with this heavy preprocessor usage include both the impaired readability of the base system, and the reduced reusability of the <b>configuration</b> <b>code.</b> Our proposed solution, C-CLR, allows developers to sift through views of a system based on configuration options. Configuration-specific views improve readability of {{the system as a}} whole by including only relevant code. They also support reusability by aiding aspect mining through easy navigation to relevant configuration options, and automated identification of equivalent blocks of code within conditionally compiled segments...|$|R
40|$|This paper {{describes}} AutoNetkit, an auto-configuration {{tool for}} complex network emulations using Netkit, allowing large-scale networks {{to be tested}} on commodity hardware. AutoNetkit uses an object orientated approach for router configuration management, significantly reducing the complexities in large-scale network configuration. Using AutoNetkit, a user can generate large and complex emulations quickly without errors. We have used AutoNetkit to successfully generate {{a number of different}} large networks with complex routing/security policies. In our test case, AutoNetkit can generate 100, 000 lines of device <b>configuration</b> <b>code</b> from only 50 lines of high-level network specification code. Hung Nguyen, Matthew Roughan, Simon Knight, Nick Falkner, Olaf Maennel and Randy Bus...|$|R
50|$|Open Firmware Forth Code may be {{compiled}} into FCode, a bytecode {{which is}} independent of computer architecture details such as the instruction set and memory hierarchy. A PCI card may include a program, compiled to FCode, which runs on any Open Firmware system. In this way, it can provide platform-independent boot-time diagnostics, <b>configuration</b> <b>code,</b> and device drivers. FCode is also very compact, so that a disk driver may require {{only one or two}} kilobytes. Therefore, many of the same I/O cards can be used on Sun systems and Macintoshes that used Open Firmware. FCode implements ANS Forth and a subset of the Open Firmware library.|$|R
50|$|Premake is an {{open-source}} {{software development}} utility for automatically building <b>configuration</b> from source <b>code.</b>|$|R
40|$|Wertheimer and Leeper (1) first {{reported}} {{an association between}} wire <b>configuration</b> <b>codes,</b> a-surrogate measure of residential magnetic field exposure, and childhood cancer. A persistent concern has been the *itfsjs,g validity of classifying exposure based on attributes of the power lines in the vicinity _tit _ of the home (2). Subsequent studies in- _=__Ji"zboth the USA (3, 4) and Europe (5, 6) con-{ ussg~o sidered both characteristics of nearby dis- [...] 4 itribution and transmission lines and expo-., [...] u,cr§S sure indicators based on measured fields. In general, although {{not as strong as}} relative risks of about 1. 5 - 2. 0 based on i g _ Wertheimer-Leeper wire codes (3, 4). One of the most surprising aspects of studie...|$|R
40|$|Abstract. It {{is crucial}} for {{real-time}} embedded system to design and verify for a little fault {{may lead to a}} catastrophe. Architecture Analysis and Design Language (AADL) is a modeling language used to design and analysis the architecture of real-time embedded system based on Model Driven Architecture (MDA). Code generation of AADL model to codes running on the Real-time Operation System can avoid hand-writing mistakes and improve the efficiency of development. Partitioning is introduced into embedded system to control fault transmission. This paper presents a mapping approach to generate codes from AADL model for partitioned system, and the generated <b>codes</b> which include <b>configuration</b> <b>codes</b> and C codes will run on a partitioned platform. ...|$|R
40|$|The Sensor Node Overlay Multicast (SNOMC) {{protocol}} supports reliable, time-efficient and energy-efficient {{dissemination of}} data from one sender node to multiple receivers as it is needed for <b>configuration,</b> <b>code</b> update, and management operations in wireless sensor networks. SNOMC supports end-to-end reliability using negative acknowledgements. The mechanism is simple and easy to implement and can significantly {{reduce the number of}} transmissions. SNOMC supports three different caching strategies namely caching on each intermediate node, caching on branching nodes, or caching on the sender node only. SNOMC was evaluated in our in-house real-world testbed and compared to a number of common data dissemination protocols. It outperforms the selected protocols in terms of transmission time, number of transmitted packets, and energy-consumption...|$|R
30|$|Provides a <b>coding</b> <b>configuration</b> {{optimization}} approach {{suitable for}} different bandwidth ranges and user bandwidth probability density distributions.|$|R
40|$|Although {{individual}} epidemiological {{investigations have}} suggested associations between residential exposure to electromagnetic fields (EMFs) and childhood leukaemia, overall the {{findings have been}} inconclusive. Several of these studies do, however, lend themselves to application of the meta- analysis technique. For this purpose we carried out searches using MEDLINE and other sources, and 14 case-control studies and one cohort study were identified and evaluated for epidemiological quality and included in the meta-analysis. Relative risk estimates were extracted {{from each of the}} studies and pooled. Separate meta-analyses were performed {{on the basis of the}} assessed EMF exposure (wiring <b>configuration</b> <b>codes,</b> distance to power distribution equipment, spot and 24 -h measures of magnetic field strength (magnetic flux density) and calculated magnetic field). The meta-analysis based on wiring <b>configuration</b> <b>codes</b> yielded a pooled relative risk estimate of 1. 46 (95 % confidence interval (CI) = 1. 05 - 2. 04, P = 0. 024) and for that for exposure to 24 -h measurements of magnetic fields, 1. 59 (95 % CI = 1. 14 - 2. 22, P = 0. 006), indicating a potential effect of residential EMF exposure on childhood leukaemia. In most cases, lower risk estimates were obtained by pooling high-quality studies than pooling low-quality studies. There appears to be a clear trend for more recent studies to be of higher quality. Enough evidence exists to conclude that dismissing concerns about residential EMFs and childhood leukaemia is unwarranted. Additional high-quality epidemiological studies incorporating comparable measures for both exposure and outcomes are, however, needed to confirm these findings and, should they prove to be true, the case options for minimizing exposure should be thoroughly investigated to provide definitive answers for policy-makers...|$|R
40|$|We {{review the}} {{concepts}} of Darwinian evolution and evolvability, and discuss {{the extent to which}} these can be brought to bear on the problems of personal learning environments (PLEs). While it is problematic to identify an evolving population of individuals (a definitional requisite of Darwinian evolution) in artifacts, we suggest an instance of a PLE system as fielded can play the role of individual in this seting, while <b>configuration,</b> <b>code</b> and component organization can play the role of inheritable genetic information. Also discussed are adaptivitiy, plasticity, robustness, and evolvability in this setting, as well as the role of sex (transfer of inheritable information from one individual to another) in providing plasticity in a community of use in the context of changing requirements...|$|R
40|$|Polynomial, or Delsarte's, {{method in}} coding theory {{accounts}} {{for a variety of}} structural results on, and bounds on the size of, extremal <b>configurations</b> (<b>codes</b> and designs) in various metric spaces. In recent works of the authors the applicability of the method was extended to cover a wider range of problems in coding and information theory. In this paper we present a general framework for the method which includes previous results as particular cases. We explain how this generalization leads to new asymptotic bounds on the performance of codes in binary-input memoryless channels and the Gaussian channel, which improve the results of Shannon et al. of 1959 - 67, and to a number of other results in combinatorial coding theory. Comment: 11 page...|$|R
5000|$|Tamperproof: {{the system}} {{controls}} [...] "modify" [...] {{rights to the}} security monitor <b>code,</b> <b>configuration</b> and data; preventing unauthorized changes.|$|R
40|$|Introduction 1. 1 Reconfigurable Computing and Image Processing Reconfigurable {{computing}} maps computation onto {{flexible and}} reprogrammable hardware. A typical reconfigurable computing (RC) system {{consists of a}} host processor (with a traditional architecture) and one or more reconfigurable coprocessors. Proposed hardware architectures for reconfigurable co-processors fall in two broad categories [4]: netlist computers with uniform arrays of fine grained logic units based on Field Programmable Gate Arrays (FPGAs), and functional units-based computers with (possibly non-uniform) arrays of higher-level functional units (such as multipliers and adders) [2, 10] or full-fledged processors [11]. The former model is one used by the first RC systems and still {{the most commonly used}} today. Applications for reconfigurable computers are typically written as a combination of C or C++ host <b>code</b> and FPGA <b>configuration</b> <b>codes</b> written in a hardware descri...|$|R
