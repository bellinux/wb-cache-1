133|2206|Public
5|$|Professor Frink - (Unlockable) Frink {{is a hard}} to <b>control</b> <b>character</b> who {{relies on}} gadgets to wear down opponents.|$|E
25|$|The Syriac Abbreviation (a type of overline) can be {{represented}} with a special <b>control</b> <b>character</b> called the Syriac Abbreviation Mark (U+070F).|$|E
2500|$|The file {{signature}} is {{a single}} field containing the magic ASCII string [...] "!" [...] followed by a single LF <b>control</b> <b>character</b> (0x0A).|$|E
50|$|The main {{difference}} between the two sets of printer <b>control</b> <b>characters</b> might be the portability of ASA <b>control</b> <b>characters</b> versus the hardware dependency of machine <b>control</b> <b>characters.</b>|$|R
50|$|Textual {{characters}} come in standardized {{character sets}} containing also <b>control</b> <b>characters</b> such a newline character, which arrange text. Other types of <b>control</b> <b>characters</b> arrange the transmission, define the character sets, and perform other housekeeping tasks.|$|R
50|$|A form of <b>control</b> <b>characters</b> were {{introduced}} in the 1870 Baudot code: NUL and DEL.The 1901 Murray code added the carriage return (CR) and line feed (LF), and other versions of the Baudot code included other <b>control</b> <b>characters.</b>|$|R
2500|$|A {{number of}} {{behaviors}} exhibited by Microsoft Windows {{are a result}} of backward compatibility to MS-DOS, which in turn attempted some backward compatibility with CP/M. The drive letter and 8.3 filename conventions in MS-DOS (and early Windows versions) were originally adopted from CP/M. [...] The wildcard matching characters used by Windows (? and *) are based on those of CP/M, as are the reserved filenames used to redirect output to a printer ("PRN:"), and the console ("CON:"). The drive names A and B were used to designate the 2 floppy disk drives that CP/M systems typically used; when hard drives appeared they were designated C, which survived into MS-DOS as the C:\> command prompt. [...] Also, the <b>control</b> <b>character</b> marking the end of some text files can also be attributed to CP/M.|$|E
5000|$|Also {{note that}} C0 and C1 <b>control</b> <b>character</b> sets are independent; the C0 <b>control</b> <b>character</b> set {{designated}} by [...] (which {{happens to be}} the NATS control set for newspaper text transmission) {{is not the same as}} the C1 <b>control</b> <b>character</b> set designated by [...] (the CCITT attribute control set for Videotex).|$|E
5000|$|Some {{software}} requires {{using the}} HTML code [...] or [...] {{instead of the}} invisible Unicode <b>control</b> <b>character</b> itself. Using the invisible <b>control</b> <b>character</b> directly could also make copy editing difficult.|$|E
5000|$|The calling {{sequence}} can contain dialable numbers such as digits [...] and DTMF tones , formatting <b>characters</b> , and <b>control</b> <b>characters</b> [...] which {{correspond to the}} Dial command of the Hayes AT command set. The following <b>control</b> <b>characters</b> are defined: ...|$|R
50|$|A3C0-A3E0: 33 <b>control</b> <b>characters.</b>|$|R
50|$|CHACTL <b>controls</b> <b>character</b> display.|$|R
50|$|There are {{additional}} (rarely used) features for switching <b>control</b> <b>character</b> sets, {{but this is}} a single-level lookup: the 0x00-0x1F range is the C0 <b>control</b> <b>character</b> set, the 0x80-0x9F range is the C1 <b>control</b> <b>character</b> set, and there are escape sequences which switch in various alternatives. It is required that any C0 character set include the ESC character at position 0x1B, so that further changes are possible.|$|E
50|$|An ASCII <b>control</b> <b>character</b> under quoted-printable or UTF-7 may be {{represented}} {{either directly or}} encoded (escaped). The need to escape a given <b>control</b> <b>character</b> depends on many circumstances, but newlines in text data are usually coded directly.|$|E
50|$|Field and Record delimiters (See also, ASCII, <b>Control</b> <b>character).</b>|$|E
50|$|These provide Unicode {{with native}} {{paragraph}} and line separators {{independent of the}} legacy encoded ASCII <b>control</b> <b>characters</b> such as carriage return (U+000A), linefeed (U+000D), and Next Line (U+0085). Unicode does not provide for other ASCII formatting <b>control</b> <b>characters</b> which presumably then {{are not part of}} the Unicode plain text processing model. These legacy formatting <b>control</b> <b>characters</b> include Tab (U+0009), Line Tabulation or Vertical Tab (U+000B), and Form Feed (U+000C) which is also thought of as a page break.|$|R
40|$|A Dialogue of Forms is an {{investigation}} of typeface design tools and processes. The aim of this investigation is to develop techniques of deriving letterforms automatically from a subset of letters called the <b>control</b> <b>characters.</b> The <b>control</b> <b>characters</b> are representative letters that contain the primary structural elements, design attributes, and proportional rela-tionships that characterize a typeface. Design information derived from the <b>control</b> <b>characters</b> is used to constrain the design of other letterforms. The lower case letters o, h, v, and p are the <b>control</b> <b>characters</b> studied in this investigation. The <b>control</b> <b>characters</b> are interactively created and edited by the designer, and stored as sets of primitive parts. These parts are used as building blocks to construct other letters automatically. Knowledge about letterform structure and font design consistency is represented and used to manage the derivation process. Generated designs may be edited by the designer and changes to parts can be propagated. Automatic letterform derivation can aid the designer by reducing time consuming labor...|$|R
50|$|Machine <b>control</b> <b>characters,</b> in contrast, are {{the very}} {{commands}} which IBM line printers understand. This is why they are hardware dependent or hardware determined. IBM defined this set of commands for their line printers and made sure all their line printers understand them. Other (mainframe) line printer manufacturers also {{had to make sure}} their printers understood those commands. Since machine <b>control</b> <b>characters</b> are hardware commands, many of them are not displayable characters and therefore machine <b>control</b> <b>characters</b> are always specified as hexadecimal values.|$|R
5000|$|... #Subtitle level 3: Sparse and {{peculiar}} <b>control</b> <b>character</b> glyphs ...|$|E
5000|$|The <b>Control</b> <b>Character</b> {{subheading}} {{contains the}} [...] "Delete" [...] character.|$|E
50|$|Procedural {{signs in}} Morse code are {{a form of}} <b>control</b> <b>character.</b>|$|E
5000|$|For example, {{character}} 10 {{represents the}} [...] "line feed" [...] function (which causes a printer to advance its paper), and character 8 represents [...] "backspace". RFC 2822 refers to <b>control</b> <b>characters</b> {{that do not}} include carriage return, line feed or white space as non-whitespace <b>control</b> <b>characters.</b> Except for the <b>control</b> <b>characters</b> that prescribe elementary line-oriented formatting, ASCII does not define any mechanism for describing the structure or appearance of text within a document. Other schemes, such as markup languages, address page and document layout and formatting.|$|R
5000|$|Transcode was a 64 {{character}} set including twenty-six upper case alphabetic characters, ten numerics, thirteen special <b>characters,</b> and sixteen <b>control</b> <b>characters.</b> Characters were transmitted with odd parity.|$|R
5000|$|Control Pictures Graphical {{representations}} of many <b>control</b> <b>characters.</b>|$|R
50|$|A flow <b>control</b> <b>character</b> (FCC) authorizes sending sixteen (16) normal data characters.|$|E
5000|$|For {{historical}} reasons, the <b>control</b> <b>character</b> CAN may {{be referred}} to as [...]|$|E
50|$|A flow <b>control</b> <b>character</b> (FCC) authorizes the {{receiver}} to send thirty-two (32) data characters.|$|E
5000|$|... #Subtitle level 2: Introduction into Print <b>Control</b> <b>Characters</b> ...|$|R
50|$|ASA {{carriage}} <b>control</b> <b>characters</b> {{are still}} used for printer output from mainframe applications and software today, {{and are not}} limited to seasoned software or applications dating from the days of the line printer. ASA carriage <b>control</b> <b>characters</b> are interpreted by other software before being printed on modern computer printers.|$|R
50|$|Normal mode {{starts with}} three players. There are captive {{characters}} littered across all levels, {{which can be}} rescued by walking over, then escorting the <b>controlled</b> <b>character</b> to the exit point. If a player <b>controlled</b> <b>character</b> is killed, that character turns into a captive, except that they will disappear if the next active player <b>controlled</b> <b>character</b> dies, exits the level without them, or the player has no characters left in their party. In Hard mode, you start the game with all twenty characters, but all the captive characters are removed from the levels.|$|R
5000|$|Send the JSON objects {{concatenated}} with {{a record}} separator <b>control</b> <b>character</b> as the delimiter.|$|E
5000|$|U+007F-U+0084, U+0086-U+009F: this {{includes}} a C0 <b>control</b> <b>character</b> {{and all but}} one C1 control.|$|E
5000|$|For each code, 2/0 is {{assigned}} the graphic character “SPACE” and 7/15 the <b>control</b> <b>character</b> “DELETE”.|$|E
5000|$|Generally, {{an escape}} {{character}} {{is not a}} particular case of (device) <b>control</b> <b>characters,</b> nor vice versa. If we define <b>control</b> <b>characters</b> as non-graphic, or as having a special meaning for an output device (e.g. printer or text terminal) then any escape character for this device is a control one. But escape characters used in programming (such as the backslash, [...] "\") are graphic, hence are not <b>control</b> <b>characters.</b> Conversely most (but not all) of the ASCII [...] "control characters" [...] have some control function in isolation, therefore are not escape characters.|$|R
5000|$|RECFM=..A {{specifies}} {{that the}} data set contains ASA <b>control</b> <b>characters.</b>|$|R
5000|$|... #Subtitle level 2: List of IBM Machine Print <b>Control</b> <b>Characters</b> ...|$|R
