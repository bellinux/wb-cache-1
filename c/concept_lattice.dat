453|400|Public
5000|$|... {{holds in}} a <b>concept</b> <b>lattice,</b> if every intent respects it.This is true if ...|$|E
50|$|The {{schematic}} lattice {{is similar}} to the <b>concept</b> <b>lattice</b> found in Formal concept analysis.|$|E
50|$|Kuznetsov and Obiedkovsurvey many {{algorithms}} {{that have}} been developed for constructing concept lattices. These algorithms vary in many details, but are in general {{based on the idea that}} each edge of the line diagram of the <b>concept</b> <b>lattice</b> connects some concept C to the concept formed by the join of C with a single object. Thus, one can build up the <b>concept</b> <b>lattice</b> one concept at a time, by finding the neighbors in the line diagram of known concepts, starting from the concept with an empty set of objects. The amount of time spent to traverse the entire <b>concept</b> <b>lattice</b> in this way is polynomial in the number of input objects and attributes per generated concept.|$|E
40|$|AbstractRough {{set theory}} and formal concept {{analysis}} are two complementary mathematical tools for data analysis. In this paper, we study {{the reduction of}} the <b>concept</b> <b>lattices</b> based on rough set theory and propose two kinds of reduction methods for the above <b>concept</b> <b>lattices.</b> First, we present the sufficient and necessary conditions for justifying whether an attribute and an object are dispensable or indispensable in the above <b>concept</b> <b>lattices.</b> Based on the above justifying conditions, we propose a kind of multi-step attribute reduction method and object reduction method for the <b>concept</b> <b>lattices,</b> respectively. Then, {{on the basis of the}} defined discernibility functions of the <b>concept</b> <b>lattices,</b> we propose a kind of single-step reduction method for the <b>concept</b> <b>lattices.</b> Additionally, the relations between the attribute reduction of the <b>concept</b> <b>lattices</b> in FCA and the attribute reduction of the information system in rough set theory are discussed in detail. At last, we apply the above multi-step attribute reduction method for the <b>concept</b> <b>lattices</b> based on rough set theory to {{the reduction of the}} redundant premises of the multiple rules used in the job shop scheduling problem. The numerical computational results show that the reduction method for the <b>concept</b> <b>lattices</b> is effective in the reduction of the multiple rules...|$|R
40|$|This paper {{studies the}} issue of {{similarity}} relations in fuzzy <b>concept</b> <b>lattices.</b> Fuzzy <b>concepts</b> and fuzzy <b>concept</b> <b>lattices</b> represent a formal approach to the modelling of non-sharp (fuzzy) concepts and conceptual structures {{in the sense of}} traditional (Port-Royal) logic. Applications of <b>concept</b> <b>lattices</b> are in representation of conceptual knowledge and in conceptual analysis of (fuzzy) data. Similarity relations are defined and considered on three levels: similarity of objects (and similarity of attributes), similarity of concepts, and similarity of <b>concept</b> <b>lattices.</b> We show a way to factorize (simplify) <b>concept</b> <b>lattices</b> by the similarity of concepts. Also shown is how to reduce the computation of the similarity relations...|$|R
40|$|This paper {{presents}} <b>concept</b> <b>lattices</b> as {{a natural}} representation of class hierarchies in object-oriented databases and frame-based knowledge representations. We show how to extend <b>concept</b> <b>lattices</b> by uncertainty {{in the form of}} conditional probabilities. We illustrate that uncertain reasoning within the hierarchical structure of <b>concept</b> <b>lattices</b> can be performed efficiently and makes uncertain conclusions more precise. </p...|$|R
5000|$|... #Caption: A <b>concept</b> <b>lattice</b> for objects {{consisting}} of the integers from 1 to 10, and attributes composite (c), square (s), even (e), odd (o) and prime (p).|$|E
50|$|Any finite lattice may be {{generated}} as the <b>concept</b> <b>lattice</b> for some context. Let L be a finite lattice {{and form a}} context in which the objects and the attributes both correspond to elements of L. In this context, let object x have attribute y exactly when x and y are ordered as x ‚â§ y in the lattice. Then the <b>concept</b> <b>lattice</b> of this context is isomorphic to L itself. This construction may be interpreted as forming the Dedekind-MacNeille completion of L, which is known to produce an isomorphic lattice from any finite lattice.|$|E
50|$|The <b>concept</b> <b>lattice</b> {{equipped}} with the two additional operations Œî and ùõÅ {{is known as the}} concept algebra of a context. Concept algebras are a generalization of power sets.|$|E
40|$|<b>Concept</b> <b>lattices</b> are {{practical}} representations of relations. Such a lattice {{is based on}} the category theoretical notion of a Galois connection. Due to their clear mathematical background, properties of <b>concept</b> <b>lattices</b> can be proved in a neat way, in fact, calculationally. We show how <b>concept</b> <b>lattices</b> can be used for representing knowledge, and how the recursive application of a Galois connection leads to a representation that may be useful for automatic acquisition of knowledge...|$|R
40|$|<b>Concept</b> <b>lattices</b> {{built with}} Formal Concept Analysis are usually {{represented}} by Hasse diagrams illustrating the groupings of objects described by common attributes. Hasse diagrams display {{the relations of}} partial order between concepts in a hierarchical fashion, where each concept may have several parent <b>concepts.</b> <b>Lattice</b> visualization becomes a problem {{as the number of}} clusters grows significantly with the number of objects and attributes. Interpreting the lattice through a direct visualization of the line diagram rapidly becomes impossible and more synthetic representations are needed. In this work we propose several methods to enhance the readability of <b>concept</b> <b>lattices</b> firstly though colouring and distortion techniques, and secondly by extracting and visualizing trees derived from <b>concept</b> <b>lattices</b> structures...|$|R
40|$|In {{this paper}} we {{describe}} possible interpretation and reduction of fuzzy attributes in Generalized One-sided <b>Concept</b> <b>Lattices</b> (GOSCL). This type of <b>concept</b> <b>lattices</b> represent generalization of Formal Concept Analysis (FCA) suitable {{for analysis of}} data tables with different types of at-tributes. FCA as well as generalized one-sided <b>concept</b> <b>lattices</b> represent conceptual data mining methods. With growing number of attributes the interpretation of fuzzy subsets may become un-clear, hence another interpretation of this fuzzy attribute subsets can be valuable. The originality of the presented method {{is based on the}} usage of one-sided <b>concept</b> <b>lattices</b> derived from submod-els of former object-attribute model by grouping attributes with the same truth value structure. This leads to new method for attribute reduction in GOSCL environment...|$|R
5000|$|An {{accomplished}} {{musician and}} has also made contributions to Mathematics in Music, Mathematical Pedagogy and the Philosophy of Science, Wille played an active leadership role in the <b>concept</b> <b>lattice</b> research community.|$|E
50|$|Modelling {{negation}} in {{a formal}} context is somewhat problematic because the complement (G\Gi, M\Mi) of a concept (Gi, Mi) is in general not a concept. However, since the <b>concept</b> <b>lattice</b> is complete one can consider the join (Gi, Mi)Œî of all concepts (Gj, Mj) that satisfy Gj ‚äÜ G\Gi; or dually the meet (Gi, Mi)ùõÅ of all concepts satisfying Mj ‚äÜ M\Mi. These two operations are known as weak negation and weak opposition, respectively.|$|E
50|$|Weak {{negation}} on a <b>concept</b> <b>lattice</b> L is a weak complementation, i.e. an order-reversing map Œî: L ‚Üí L which {{satisfies the}} axioms xŒîŒî ‚â§ x and (x‚ãÄy) ‚ãÅ (x‚ãÄyŒî) = x. Weak composition is a dual weak complementation. A (bounded) lattice {{such as a}} concept algebra, which {{is equipped with a}} weak complementation and a dual weak complementation, is called a weakly dicomplemented lattice. Weakly dicomplemented lattices generalize distributive orthocomplemented lattices, i.e. Boolean algebras.|$|E
40|$|International audienceIn {{this paper}} we present an {{extension}} of the Galois connection to deal with many-valued formal contexts. We define a many-valued Galois connection with respect to similarity between attribute values in a many-valued context. Then, we define many-valued formal concepts and many-valued <b>concept</b> <b>lattices.</b> Depending on a similarity threshold, many-valued <b>concept</b> <b>lattices</b> may have different levels of precision. This feature makes them very useful for multilevel conceptual clustering. Many-valued <b>concept</b> <b>lattices</b> are also used in a new lattice-based information retrieval approach for efficiently answering complex queries...|$|R
40|$|Several fuzzifications {{of formal}} concept {{analysis}} {{have been proposed}} to deal with uncertain information. In this paper, we focus on <b>concept</b> <b>lattices</b> under a multi-adjoint paradigm, which enriches the language providing greater flexibility to the user in that she can choose {{from a number of}} different connectives. Multi-adjoint <b>concept</b> <b>lattices</b> are shown to embed different fuzzy extensions of <b>concept</b> <b>lattices</b> found in the literature, the main results of the paper being the representation the-orem of this paradigm and the embedding of other well-known approaches...|$|R
40|$|Abstract. Although {{mathematical}} morphology {{and formal}} concept anal-ysis are two lattice-based data analysis theories, {{they are still}} developed in two disconnected research communities. The aim {{of this paper is}} to contribute to fill this gap, beyond the classical relationship between the Galois connections defined by the derivation operators and the adjunc-tions underlying the algebraic mathematical morphology framework. In particular we define mathematical morphology operators over <b>concept</b> <b>lattices,</b> based on distances, valuations, or neighborhood relations in <b>concept</b> <b>lattices.</b> Their properties are also discussed. These operators provide new tools for reasoning over <b>concept</b> <b>lattices.</b> ...|$|R
50|$|The {{choice of}} an {{algorithm}} {{for construction of}} the <b>concept</b> <b>lattice</b> {{should be based on}} the properties of input data. According to the survey, recommendations are as follows: the Godin algorithm should be used for small and sparse contexts. For densecontexts the algorithms based on the canonicity test, linear in the number of input objects, such as Close by One and Norris, should be used. Bordat performs well on contexts of average density, especially, when the diagram graph is to be constructed.|$|E
50|$|Lattice Miner is a Java-based {{platform}} whose {{functions are}} articulated around a core. The Lattice Miner core provides all low-level operations and structures for the representation and manipulation of contexts, lattices and association rules. Mainly, {{the core of}} Lattice Miner consists of three modules: context, concept and association rule modules. The user interface offers a context editor and <b>concept</b> <b>lattice</b> manipulator to assist the user {{in a set of}} tasks. The architecture of Lattice Miner is open and modular enough to allow the integration of new features and facilities in each one of its components.|$|E
5000|$|If [...] is any finite set of objects, and [...] is any finite set of unary {{attributes}} for {{the objects}} in , then one may form a partial order of height two in which {{the elements of the}} partial order are the objects and attributes, and in which [...] when [...] is an object that has attribute [...] For a partial order defined in this way, the Dedekind-MacNeille completion of [...] is known as a <b>concept</b> <b>lattice,</b> and it plays {{a central role in the}} field of formal concept analysis.|$|E
40|$|About {{ten years}} ago, {{the first serious}} {{applications}} of <b>concept</b> <b>lattices</b> in software analysis were published. Today, {{a wide range of}} applications of <b>concept</b> <b>lattices</b> in static and dynamic analysis of software artefacts is known. This overview summarizes important papers from the last ten years, and presents three methods in some detail: 1. methods to extract classes and modules from legacy software; 2. the Snelting/Tip algorithm for application-specific, semantics-preserving refactoring of class hierarchies; 3. Ball's method for infering dynamic dominators and control flow regions from program traces. We conclude with some perpectives on further uses of <b>concept</b> <b>lattices</b> in software technology...|$|R
40|$|With the {{development}} of future Internet, it is of great significance to study how to realize unified management information modeling, {{in order to avoid}} a lot of repetitive work and standardize information modeling in network management domain. This paper discusses the problem from the ontology point of view and introduces the theory of <b>concept</b> <b>lattices</b> into the research on semantic management information modeling, which includes a) establishing an ontology-driven framework for semantic management information modeling, b) building unified management information modeling ontology based on <b>concept</b> <b>lattices,</b> and c) generating semantic models for network management information modeling using the theory of <b>concept</b> <b>lattices...</b>|$|R
5000|$|... #Subtitle level 3: Algorithms for {{generating}} formal concepts and constructing <b>concept</b> <b>lattices</b> ...|$|R
50|$|The {{line diagram}} of the <b>concept</b> <b>lattice</b> encodes enough {{information}} to recover the original context from which it was formed. Each object of the context corresponds to a lattice element, the element with the minimal object set that contains that object, and with an attribute set consisting of all attributes of the object. Symmetrically, each attribute of the context corresponds to a lattice element, {{the one with the}} minimal attribute set containing that attribute, and with an object set consisting of all objects with that attribute. We may label the nodes of the line diagram with the objects and attributes they correspond to; with this labeling, object x has attribute y if and only if there exists a monotonic path from x to y in the diagram.|$|E
5000|$|The Close by One algorithm, for instance, generates {{concepts}} in the lexicographical {{order of their}} extents assuming {{that there is a}} linear order on the set of objects. At each step of the algorithm there is a current object. The generation of a concept is considered canonical if its extent contains no object preceding the current object. Close by One uses the described canonicity test, a method for selecting subsets of a set of objects G and an intermediate structure that helps to compute closures more efficiently using the generated concepts. Its time complexity is , and its polynomial delay is [...] where [...] stands for the cardinality of the set of objects G, , similarly, is the number of all attributes from M and [...] is the size of the <b>concept</b> <b>lattice.</b>|$|E
5000|$|The AddIntent {{algorithm}} produces {{not only}} the concept set, but also the diagram graph. Being incremental, it relies on the graph constructed from the first objects of the context to integrate the next object into the lattice. Therefore, its use is most appropriate in those applications that require both the concept set and diagram graph, for example, in applications related to information retrieval and document browsing. The best estimate for the algorithm's upper bound complexity to construct a <b>concept</b> <b>lattice</b> L whose context has a set of objects G, each of which possesses at most [...] attributes, is [...] The AddIntent algorithm outperformed a selection of other published algorithms in experimental comparison for most types of contexts and {{was close to the}} most efficient algorithm in other cases.|$|E
40|$|This paper {{discusses}} <b>concept</b> <b>lattices</b> {{and some}} of their applications in component library development and compiler optimizations. Ongoing work on concept-based userextensible simplification (type-based optimizer generators) and library transformations is first reviewed, then a new application‚Äîcategorization of algorithms via precise descriptions of their performance characteristics‚Äîis outlined, with Standard Template Library and Boost Graph Library algorithm <b>concept</b> <b>lattices</b> as examples. ...|$|R
40|$|Drawings of <b>concept</b> <b>lattices</b> {{provide the}} most common {{mechanism}} for the communication of structure extracted from data via the process of formal concept analysis. To communicate structure, diagrams of <b>concept</b> <b>lattices</b> are usually made to be additive. Additive diagrams however su#er from some unaesthetic properties. Alternatively a common graph drawing approach to the layout of partially ordered sets (of which lattices are a sub-class) is via a layer diagram. This paper presents a mechanism for the layout of <b>concept</b> <b>lattices</b> that combines ideas from both additive and layer diagrams. These new hybrid diagrams preserve the structural aspects of additive diagrams while achieving the aesthetic quality of layer diagrams. Furthermore a search method is presented that optimizes the layout with respect to structural and aesthetic objective functions. 1 Introduction Previous approaches to the layout of <b>concept</b> <b>lattices</b> {{can be divided into}} two groups; automatic methods and user assisted methods [...] . ...|$|R
40|$|This paper {{presents}} <b>concept</b> <b>lattices</b> as {{a natural}} representation of class hierarchies in object-oriented databases and frame based knowledge representations. We show how to extend <b>concept</b> <b>lattices</b> by uncertainty {{in the form of}} conditional probabilities. We illustrate that uncertain reasoning within the hierarchical structure of <b>concept</b> <b>lattices</b> can be performed efficiently and makes uncertain conclusions more precise. 1 Introduction The aim {{of this paper is to}} integrate uncertainty into class hierarchies of objectoriented databases and frame based knowledge representations. Extensional subclass relationships and disjointness statements are characteristic of class hierarchies. They can naturally be represented by <b>concept</b> <b>lattices</b> (see e. g. [14]). A concept is a pair consisting of a set of objects and a set of properties that all these objects share. The concept order is based on a coupled extensional and intensional order. For our purpose it is sufficient to concentrate just on the [...] ...|$|R
40|$|Abstract. We analyze {{changes in}} the {{structure}} of a <b>concept</b> <b>lattice</b> cor-responding to a context resulting from a given context with a known <b>concept</b> <b>lattice</b> by removing exactly one incidence. We identify the set of concepts affected by the removal and show how they can be used for computing concepts in the new <b>concept</b> <b>lattice.</b> We present algorithms for incremental computation of the new <b>concept</b> <b>lattice,</b> with or without structural information. ...|$|E
40|$|In this work, {{we study}} the {{relation}} between the <b>concept</b> <b>lattice</b> of Wille ([5], [6]) and the $L-Fuzzy$ <b>concept</b> <b>lattice</b> ([2]) developed by us. To do it, we have defined an application $g$ that associates to each concept of Wille an $L-Fuzzy$ concept. The main point of this work is to prove that if we are working with a crisp relation between an object set and an attribute set, the <b>concept</b> <b>lattice</b> of Wille is a sublattice of the $L-Fuzzy$ <b>concept</b> <b>lattice.</b> At the end, we show a typical example in the formal concept theory where we have constructed the $L-Fuzzy$ <b>concept</b> <b>lattice...</b>|$|E
40|$|The <b>concept</b> <b>lattice</b> can {{be changed}} based on sub-lattice was {{proposed}} in this paper, and the new <b>concept</b> <b>lattice</b> was composed {{of a series of}} sub-lattice which was isomorphic to the original related sub-lattice, the isomorphic relation and the method to obtain the new <b>concept</b> <b>lattice</b> from the original <b>concept</b> <b>lattice</b> by the new context and the arrow relation was proposed and proved. At last, we analysis that <b>concept</b> <b>lattice</b> was adapted to be exchange information model because of a series of inner, advanced property consisted with distributed, parallel algorithm. ¬© 2012 Springer Science+Business Media Dordrecht...|$|E
40|$|ISBN : 978 - 1 - 60750 - 605 - 8 International audienceIn {{this paper}} we propose an {{approach}} which combines semantic resources and formal concept analysis to deal with heterogenous data sets represented as many-valued (MV) formal contexts. We define a new Galois connection considering the semantic relationships between attribute values in a MV context. The semantic relationships are {{used to calculate the}} similarity between attribute values to decide whether an attribute is shared by a set of objects or not. Then, based on this Galois connection, we define MV formal concepts and MV <b>concept</b> <b>lattices.</b> Depending on a chosen similarity threshold, MV <b>concept</b> <b>lattices</b> may have different levels of precision. We take advantage of this feature to browse the content of a biological databases repository in a dynamic and progressive way. The browsing process combines the navigation in several MV <b>concept</b> <b>lattices</b> and allows zooming operations by switching between MV <b>concept</b> <b>lattices</b> with higher or lower precision...|$|R
40|$|We present {{two systems}} of closure axioms for a matroid with the {{assistance}} of Galois connections. These axioms give a mathematical foundation for the connections between matroids, Galois connections and <b>concept</b> <b>lattices.</b> We deal with some relationship between matroids and geometric lattices by the above axioms. We also discuss some applications between matroids and <b>concept</b> <b>lattices</b> with the above two closure axioms for a matroid...|$|R
40|$|Several relation-algebraic {{algorithms}} for computing the cut {{completion of}} a partially ordered set are formally developed and afterwards generalized {{to the case of}} <b>concept</b> <b>lattices.</b> It is shown how the algorithms can be translated into the programming language of RelView and executed using this system. Furthermore, it is demonstrated how to obtain and draw Hasse diagrams of <b>concept</b> <b>lattices</b> as labeled directed graphs using the RelView system...|$|R
