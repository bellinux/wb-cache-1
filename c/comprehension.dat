10000|295|Public
5|$|Cognitive {{abilities}} {{that have been}} investigated include concept formation, sensory skills, and mental representations. Such research has been ongoing since the 1970s. This includes: Acoustic and behavioral mimicry, <b>Comprehension</b> of novel sequences in an artificial language, Memory, Monitoring of self behavior, Discrimination and matching, <b>Comprehension</b> of symbols for various body parts, <b>Comprehension</b> of pointing gestures and gaze (as made by dolphins or humans), Mirror self-recognition, and Numerical values.|$|E
5|$|Ivy Reading AKAdemy and Young Authors Program {{improved}} elementary reading <b>comprehension</b> skills, while P.I.M.S. highlighted {{programs in}} math and science.|$|E
5|$|Jaeger and Wiley, in 2015, {{looked at}} readers' ability {{to monitor their}} own <b>comprehension.</b> Their study used a science text as {{the base of a}} lesson and {{decorative}} images as the seductive details. They found that readers were less able to monitor their own <b>comprehension</b> of the text when the text was sprinkled with decorative images.|$|E
50|$|Python 2.7+ also {{supports}} set <b>comprehensions</b> and dictionary <b>comprehensions.</b>|$|R
50|$|The NPL {{interpreter}} {{evaluates the}} list of generators {{from left to right}} so conditions can mention any bound variables that occur to their left. These were known as set <b>comprehensions.</b> NPL eventually evolved into Hope but lost set <b>comprehensions,</b> which made a reappearance in the form of list <b>comprehensions</b> in later functional languages.|$|R
40|$|Monad <b>comprehensions</b> have an {{interesting}} history. They were the first syntac-tic extension for programming with monads. They were implemented in Haskell, but later replaced with plain list <b>comprehensions</b> and monadic do notation. Now, monad <b>comprehensions</b> are back in Haskell, more powerful than ever before! Redesigned monad <b>comprehensions</b> generalize the syntax for working with lists. Quite interestingly, they also generalize syntax for zipping, grouping and ordering of lists. This article shows how {{to use some of}} the new expressive power when working with well-known monads. You’ll learn what “parallel composition ” means for parsers, a poor man’s concurrency monad and an evaluation order monad...|$|R
5|$|Python has {{a type of}} {{expression}} termed a list <b>comprehension.</b> Python 2.4 extended list comprehensions into a more general expression termed a generator expression.|$|E
5|$|Varieties of ASL {{are found}} {{throughout}} the world. There is little difficulty in <b>comprehension</b> among the varieties of the United States and Canada.|$|E
5|$|Aphasia is {{the result}} of damage to the brain's {{language}} centres affecting production, <b>comprehension,</b> or both, and can cause severe, chronic language impairment. Individuals with aphasia often communicate using a combination of speech, gestures, and aided communication; the proportion of each may change as the person recovers, and depends on the context and the individual's skills.|$|E
40|$|Abstract. List or set <b>comprehensions</b> are a {{wonderful}} means to define nondeterministic or relational programs. Despite their beauty, <b>comprehensions</b> are somewhat underused in program calculation. The {{purpose of this}} paper is to remind the program-calculation community that <b>comprehensions</b> provide a convenient language for specifying and deriving nondeterministic programs in a pointwise manner. We illustrate the style of reasoning by re-solving the well-known problem of constructing tournament representations: Given a sequence x of integers, construct a heap whose inorder traversal is x itself. ...|$|R
50|$|Both {{speech and}} {{listening}} <b>comprehensions</b> are taught.|$|R
5000|$|Version 3.x and 2.7 of the Python {{language}} {{introduced a}} new syntax for dictionary <b>comprehensions,</b> similar in form to list <b>comprehensions</b> but which generate Python dicts instead of lists.>>> s = {key: val for key, val in enumerate('ABCD') if val not in 'CB'}>>> s{0: 'A', 3: 'D'}>>> ...|$|R
5|$|Poedjangga Baroe paid {{subscribers}} {{were always}} fewer than 150. According to historian Heather Sutherland, this low circulation {{was rooted in}} several cultural factors. Firstly, the native populace at the time had limited literacy and education. Secondly, native intellectuals mainly spoke Dutch during formal discourse, while others kept to local languages; this led to <b>comprehension</b> issues for the Indonesian-language Poedjangga Baroe.|$|E
5|$|Ryan {{publicly}} {{announced in}} 2009 {{that he had}} been battling dyslexia for his entire life. During his early years, Ryan struggled to read and write in school; however, he was not formally diagnosed until testing confirmed he had the disorder in 2007. Ryan utilizes color-coded playbooks and game plans when coaching on the sidelines to aid his <b>comprehension.</b>|$|E
25|$|Written <b>comprehension,</b> {{similar to}} spoken <b>comprehension,</b> seems to occur {{primarily}} in Wernicke's area. However, {{instead of using}} the auditory system to gain language input, written <b>comprehension</b> relies on the visual system.|$|E
2500|$|... array <b>comprehensions</b> and {{generator}} expressions (adopted from Python) ...|$|R
50|$|The Haskell 98 Report, chapter 3.11 List <b>Comprehensions.</b>|$|R
5000|$|... array <b>comprehensions</b> and {{generator}} expressions (adopted from Python) ...|$|R
25|$|Before {{progressing}} {{to secondary}} education, Year 6 pupils sit for the Primary School Achievement Test (Ujian Pencapaian Sekolah Rendah, UPSR). The subjects tested are Malay <b>comprehension,</b> Malay writing, English <b>comprehension,</b> English writing, Science and Mathematics. In {{addition to the}} six subjects, Chinese <b>comprehension</b> and written Chinese are compulsory in Chinese schools, while Tamil <b>comprehension</b> and written Tamil are compulsory in Tamil schools.|$|E
25|$|Individuals {{with reading}} <b>comprehension</b> {{difficulties}} are commonly described as poor comprehenders. They have normal decoding skills {{as well as}} a fluid rate of reading, but have difficulty comprehending text when read. Increasing vocabulary knowledge, listening skills and teaching basic <b>comprehension</b> techniques may help facilitate better reading <b>comprehension.</b>|$|E
25|$|A <b>comprehension</b> schema: All {{instances}} of TST <b>Comprehension</b> but with type indices dropped (and without introducing new identifications between variables).|$|E
50|$|List <b>comprehensions</b> give {{results in}} a defined order (unlike the members of sets); and list <b>comprehensions</b> may {{generate}} {{the members of a}} list in order, rather than produce the entirety of the list thus allowing, for example, the previous Haskell definition of the members of an infinite list.|$|R
5|$|ECMAScript {{borrowed}} iterators, generators, and list <b>comprehensions</b> from Python.|$|R
50|$|Burstall and Darlington's {{work with}} NPL {{influenced}} many functional programming languages during the 1980s, {{but not all}} included list <b>comprehensions.</b> An exception was the influential pure lazy functional programming language Miranda, which was released in 1985. The subsequently developed standard pure lazy functional language Haskell includes many of Miranda's features, including list <b>comprehensions.</b>|$|R
25|$|As {{for word}} <b>comprehension,</b> Fenson et al. (1994) tested 10-11-month-old children’s <b>comprehension</b> {{vocabulary}} size {{and found a}} range from 11 words to 154 words. At this age, children normally have not yet begun to speak and thus have no production vocabulary. So clearly, <b>comprehension</b> vocabulary develops before production vocabulary.|$|E
25|$|Some mathematicians {{call it the}} axiom schema of <b>comprehension,</b> {{although}} {{others use}} that term for unrestricted <b>comprehension,</b> discussed below.|$|E
25|$|Children’s <b>comprehension</b> {{vocabulary}} size {{ranges from}} about 92 to 321 words. The production vocabulary size {{at this age}} is typically around 50 words. This shows that <b>comprehension</b> vocabulary grows faster than production vocabulary.|$|E
40|$|We propose an {{extension}} to list <b>comprehensions</b> {{that makes it}} easy to express the kind of queries one would write in SQL using ORDER BY, GROUP BY, and LIMIT. Our extension adds expressive power to <b>comprehensions,</b> and generalises the SQL constructs that inspired it. It is easy to implement, using simple desugaring rules...|$|R
50|$|The Hugs 98 User's Guide, chapter 5.1.2 Parallel list <b>comprehensions</b> (a.k.a. zip-comprehensions).|$|R
5000|$|Python {{uses the}} {{following}} syntax to express list <b>comprehensions</b> over finite lists: ...|$|R
25|$|Language <b>comprehension</b> {{research}} on bilinguals used fMRI techniques. Groups of two orthographically and phonologically outlying languages (English and Mandarin) were {{the basis of}} analysis. Sentence <b>comprehension</b> was measured through visually presented stimuli, showing significant activation in several key areas: the left inferior and middle frontal gyri, the left superior and middle temporal gyri, the left temporal pole, the anterior supplementary motor area, and bilateral representation of the superior parietal regions and occipital regions. Also, brain activation of these two orthographically and phonologically outlying languages showed striking overlap (i.e. the direct contrast did not indicate significant differences). Single word <b>comprehension</b> using L1 generated greater activation in the temporal pole than <b>comprehension</b> of words in L2. Language <b>comprehension</b> studies of bilinguals using neuroimaging give more conclusive results than production studies.|$|E
25|$|The UGELes with highest {{results on}} the ECE 2012 are UGEL 07 and 03 in both reading <b>comprehension</b> and math. UGEL 07 had 60.8% {{students}} achieving level 2 in reading <b>comprehension</b> and 28.6% students achieving level 2 in Math. UGEL 03 had 58.5% students achieve level 2 in reading <b>comprehension</b> and 24.9% students achieving level 2 in math. The lowest achieving UGELs are UGEL 01, 04 and 05.|$|E
25|$|Constraint-based {{theories}} of language <b>comprehension</b> emphasize how people {{make use of}} the vast amount of probabilistic information available in the linguistic signal. Through statistical learning, the frequencies and distribution of events in linguistic environments can be picked upon, which inform language <b>comprehension.</b> As such, language users are said to arrive at a particular interpretation over another during the <b>comprehension</b> of an ambiguous sentence by rapidly integrating these probabilistic constraints.|$|E
50|$|The Glorious Glasgow Haskell Compilation System User's Guide, chapter 7.3.4 Parallel List <b>Comprehensions.</b>|$|R
50|$|List <b>comprehensions</b> are {{supported}} in Scheme {{through the use}} of the SRFI-42 library.|$|R
5000|$|More {{convenient}} syntax {{for working}} with modules, patterns, list <b>comprehensions,</b> operators, records, and tuples.|$|R
