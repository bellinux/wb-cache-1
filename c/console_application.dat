106|116|Public
25|$|DVD audio Tools: <b>console</b> <b>application</b> dvda-author (version 08.07), see below.|$|E
25|$|The Cosmos User Kit {{is a part}} of Cosmos {{designed}} to make Cosmos easier to use for developers using Microsoft Visual Studio. When installed, the user kit adds a new project type to Visual Studio, called a Cosmos Project. This is a modified version of a <b>console</b> <b>application,</b> with the Cosmos compiler and bootup stub code already added.|$|E
25|$|The Sequential window shows {{events in}} date-timestamp order, {{one or more}} other windows in various orders as the CVE works through the list of rules and creates implied {{relationships}} between the events. Various buttons and controls exist in the <b>console</b> <b>application</b> that enable the business analysts to create relationships between events on-the-fly and define rules that respond to these relationships.|$|E
50|$|As {{the speed}} and ease-of-use of GUIs {{applications}} have improved over time, the use of <b>console</b> <b>applications</b> has greatly diminished, but not disappeared. Some users simply prefer <b>console</b> based <b>applications,</b> while some organizations still rely on existing <b>console</b> <b>applications</b> to handle key data processing tasks.|$|R
5000|$|... 'Standard' C++: Used for <b>console</b> <b>applications</b> and tools; Monkey X's compiler-translator {{is built}} using this.|$|R
50|$|<b>Console</b> <b>{{applications}}</b> - Executing native applications with command-line arguments, {{and receiving}} feedback via standard I/O & error streams.|$|R
25|$|Causal Vector Engine (CVE) {{mechanics}} {{are implemented}} simply, with an expandable view of SQL constructs written in stored procedures. If A causes B, and causality must occur within N number of transactions, then SQL ORDER BY timestamp clause creates a result set that increments a counter of all transactions that occurred within a timeframe, N number of matching B to occurrence A transactions. The creation of additional stored procedures is accomplished through the CVE <b>console</b> <b>application</b> or by using any standard database developer's toolkit.|$|E
25|$|Multiple {{low-level}} system {{events are}} processed by the Causal Vector Engine and compared against these rules to trigger higher-level Business Events. It does this through a Causality Vector Engine (CVE) <b>console</b> <b>application</b> which displays events in real-time to business analysts. Where streams of events {{can be observed}} as they occur, much like a stock ticker, the CVE console app has several windows that list the same events in different contexts, so the business analysts can see what the CVE is doing with the relationships between them.|$|E
25|$|Every {{version of}} Microsoft Windows for {{personal}} computers has included a command line interpreter (CLI) {{for managing the}} operating system. Its predecessor, MS-DOS, relied exclusively on a CLI. These are COMMAND.COM in MS-DOS and Windows 9x, and cmd.exe in the Windows NT family of operating systems. Both supports a few basic internal commands. For other purposes, a separate <b>console</b> <b>application.</b> They also include a basic scripting language (batch files), {{which can be used}} to automate various tasks. However, they cannot be used to automate all facets of graphical user interface (GUI) functionality, in part because command-line equivalents of operations are limited, and the scripting language is elementary. In Windows Server 2003, the situation was improved, but scripting support was still unsatisfactory.|$|E
50|$|BBS {{systems were}} based on ASCII and ANSI art, as were most DOS and similar <b>console</b> <b>applications,</b> and the {{precursor}} to AOL.|$|R
5000|$|Lazarus: A {{programming}} {{environment for the}} FreePascal Compiler. It supports the creation of self-standing graphical and <b>console</b> <b>applications</b> and runs on Linux, MacOSX, iOS, Android, WinCE, Windows and WEB.|$|R
50|$|WSH 5.6 {{introduces}} the Exec method for the WshShell object to execute command-line <b>console</b> <b>applications</b> and {{has access to}} the standard I/O streams (StdIn, StdOut, and StdErr) of the spawned process.|$|R
2500|$|A {{project called}} [...] {{provides}} free/open source DVD-Audio authoring tools for Linux and other *nix platforms (FreeBSD, OpenSolaris,...). Windows (<b>console</b> <b>application)</b> binaries are also available. DVD-Audio/Video discs (aka Hybrid or Universal DVDs) are also supported.|$|E
5000|$|<b>Console</b> <b>application</b> (Pending {{potential}} {{merge to}} this article) ...|$|E
50|$|A Win32 <b>console</b> <b>application</b> may run in two modes.|$|E
50|$|It is set of {{different}} by role and functionality separated <b>console</b> <b>applications</b> {{that can be}} united in some chains to get sequential data processing on server-side functionality {{and can be used}} as self-sufficient tools.|$|R
50|$|Alpine shares many common {{features}} of <b>console</b> <b>applications,</b> like a {{rich set of}} shortcut keys, using keyboard instead of mouse to do all navigation and operation. In fact, all operations in Alpine have corresponding shortcut keys.|$|R
50|$|Unlike other <b>console</b> <b>applications</b> {{targeting}} {{developers and}} experienced users, which often require users to edit a configuration file, Alpine lets users change most configuration options within the software. This makes alpine {{one of the}} most easy to learn console-based email clients.|$|R
5000|$|DVD audio Tools: <b>console</b> <b>application</b> dvda-author (version 08.07), see below.|$|E
5000|$|... {{comes with}} an SQL <b>console</b> <b>application</b> (like mysql, psql or sqlite3 consoles) ...|$|E
5000|$|Extended <b>Console</b> <b>Application</b> support - This {{includes}} {{support for}} GNU Readline, and termios ...|$|E
2500|$|Win32 <b>console</b> <b>applications</b> use CMD.EXE {{as their}} command prompt shell. [...] This {{confusion}} {{does not exist}} under OS/2 because there are separate DOS and OS/2 prompts, and running a DOS program under OS/2 will launch a separate DOS window to run the application.|$|R
50|$|Wine {{partially}} supports Windows <b>console</b> <b>applications,</b> and {{the user}} can choose which backend {{to use to}} manage the console (choices include raw streams, curses, and user32). When using the raw streams or curses backends, Windows applications will run in a Unix terminal.|$|R
5000|$|Win32 <b>console</b> <b>applications</b> use [...] {{as their}} command prompt shell. This {{confusion}} {{does not exist}} under OS/2 because there are separate DOS and OS/2 prompts, and running a DOS program under OS/2 will launch a separate DOS window to run the application.|$|R
5000|$|The Win32 {{version of}} Mpxplay is a multi-threaded <b>console</b> <b>application</b> with the {{following}} sound outputs: ...|$|E
5000|$|Windows 9x {{support is}} {{relatively}} poor compared to Windows NT, because the console window {{runs in the}} system virtual DOS machine and so keyboard input to a Win32 <b>console</b> <b>application</b> had to be directed to it by conagent.exe running in a DOS VM that are also used for real DOS applications by hooking the keyboard interrupt. [...] then calls Vcond (which is a VxD). Vcond then had to pass the keyboard input to the System VM, and then finally to the Win32 <b>console</b> <b>application.</b> Besides performance, another problem with this implementation is that drives that are local to a DOS VM are not visible to a Win32 <b>console</b> <b>application.</b> This can cause confusion.|$|E
5000|$|XMLmosaic An xml {{contained}} C# like {{programming language}} interpreted by a <b>console</b> <b>application</b> written in Visual Basic [...]NET ...|$|E
50|$|RapidQ {{features}} a bytecode compiler that produces standalone executables by binding the generated bytecode with the interpreter. No external run time libraries are needed; the bytecode interpreter is self-contained. The file sizes of executable files created by RapidQ are about 150 kilobytes or larger for <b>console</b> <b>applications.</b>|$|R
500|$|This line {{writes the}} output. [...] is a static {{class in the}} [...] namespace. It {{provides}} an interface to the standard input, output, and error streams for <b>console</b> <b>applications.</b> The program calls the [...] method , which displays on the console a line with the argument, the string [...]|$|R
50|$|Applications {{written in}} the {{framework}} can be either event-loop driven graphical <b>applications</b> or <b>console</b> <b>applications,</b> and code can be abstracted {{in the form of}} modules and plugins. LambdaNative does not require the use of an Integrated Development Environment (IDE). The build system follows the conventional configure, make, make install command format.|$|R
50|$|Initially, {{the program}} was created as a {{companion}} to Far Manager, bringing some features common for graphical file managers to this <b>console</b> <b>application</b> (thumbnails and tiles, drag and drop with other windows, true color interface, and others). As of 2012, ConEmu could be used with any other Win32 <b>console</b> <b>application</b> or simple GUI tool (such as Notepad, PuTTY or DOSBox). ConEmu doesn't provide any shell itself, but rather allows using any other shell. It does provide a limited macro language, to control the hosted applications startup.|$|E
50|$|BennuGD is a <b>console</b> <b>application.</b> There {{are several}} {{integrated}} development environments (IDE) available, but none are officially supported. The package includes a compiler, run-time code, and different shared libraries to extend core functionality.|$|E
50|$|An {{embedded}} {{web server}} with a browser based <b>console</b> <b>application</b> is included, {{as well as}} command line tools to start and stop a server, backup and restore databases, and a command line shell tool.|$|E
50|$|Win32 console is a text user {{interface}} implementation {{within the system}} of Windows API, which runs <b>console</b> <b>applications.</b> A Win32 <b>console</b> has a screen buffer and an input buffer, and is available both as a window or in text mode screen, with switching back and forth available via Alt-Enter keys.|$|R
5000|$|... the kterm <b>console</b> window <b>application</b> was {{extended}} to support it; ...|$|R
50|$|Embarcadero Delphi is an {{integrated}} development environment (IDE) for desktop, mobile, web, and <b>console</b> <b>applications.</b> It's also an event driven language. Delphi's compilers use their own Object Pascal dialect of Pascal and generate native code for several platforms: Windows (x86 and x64), OS X (32-bit only), iOS (32 and 64-bit), Android and Linux (64-bit Intel).|$|R
