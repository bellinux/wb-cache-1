526|80|Public
25|$|The primary {{weakness}} of the Vigenère cipher is the repeating nature of its key. If a cryptanalyst correctly guesses the key's length, then the <b>cipher</b> <b>text</b> can be treated as interwoven Caesar ciphers, which individually are easily broken. The Kasiski examination and Friedman test can help determine the key length.|$|E
2500|$|The Vigenère cipher {{with normal}} alphabets {{essentially}} uses modulo arithmetic, which is commutative. [...] So if the key length is known (or guessed) then subtracting the <b>cipher</b> <b>text</b> from itself, {{offset by the}} key length, will produce the plain text encrypted with itself. [...] If any [...] "probable word" [...] in the plain text is known or can be guessed, then its self-encryption can be recognized, allowing recovery of the key by subtracting the known plaintext from the <b>cipher</b> <b>text.</b> [...] Key elimination is especially useful against short messages.|$|E
2500|$|As {{early as}} 1845, Babbage had solved a cipher {{that had been}} posed as a {{challenge}} by his nephew Henry Hollier, and in the process, he made a discovery about ciphers that were based on Vigenère tables. [...] Specifically, he realized that enciphering plain text with a keyword rendered the <b>cipher</b> <b>text</b> subject to modular arithmetic. [...] During the Crimean War of the 1850s, Babbage broke Vigenère's autokey cipher {{as well as the}} much weaker cipher that is called Vigenère cipher today. His discovery was kept a military secret, and was not published. Credit for the result was instead given to Friedrich Kasiski, a Prussian infantry officer, who made the same discovery some years later. However, in 1854, Babbage published the solution of a Vigenère cipher, which had been published previously in the Journal of the Society of Arts. [...] In 1855, Babbage also published a short letter, [...] "Cypher Writing", in the same journal. Nevertheless, his priority wasn't established until 1985.|$|E
3000|$|... 31 {{and finally}} recover the master key. However, {{the number of}} {{required}} faulty <b>cipher</b> <b>texts</b> would be increased (96 faulty <b>cipher</b> <b>texts</b> on average), {{but in the next}} section, we show an approach to obtain the master key given 18 faulty <b>cipher</b> <b>texts</b> on average.|$|R
30|$|The first faulty <b>cipher</b> <b>texts</b> {{determine}} eight {{candidates for}} S-box input, {{and the second}} and third faulty <b>cipher</b> <b>texts</b> determine four candidates for S-box input.|$|R
30|$|Given in Table 5, we {{see that}} the sets of S-box {{difference}} outputs for each specific input are different. Hence, we can obtain the exact value of the S-box input with four faulty <b>cipher</b> <b>texts.</b> In the following, we explain the states that two and three faulty <b>cipher</b> <b>texts</b> are given.|$|R
2500|$|Let Alice and Bob be {{two people}} who want to {{communicate}} securely. More specifically, Alice wants {{to send a message to}} Bob which only Bob can read. First Bob chooses two primes p and q. Then he calculates the RSA modulus N = pq. This RSA modulus is made public together with the encryption exponent e. N [...] and e form the public key pair (e,N). By making this information public, anyone can encrypt messages to Bob. The decryption exponent d satisfies , where , is Euler’s phi function (note: this is the order of the multiplicative group [...] ). The encryption exponent e and [...] also must be relatively prime so that there is a modular inverse. The factorization of N and the private key d are kept secret, so that only Bob can decrypt the message. We denote the private key pair as (d, N). The encryption of the message M is given by [...] and the decryption of <b>cipher</b> <b>text</b> [...] is given by [...] (using Fermat's little theorem).|$|E
2500|$|Al-Kindi is {{credited}} with developing a method whereby variations {{in the frequency of}} the occurrence of letters could be analyzed and exploited to break ciphers (i.e. cryptanalysis by frequency analysis). His book on this topic is Risāla fī Istikhrāj al-Kutub al-Mu'amāh [...] (رسالة في استخراج الكتب المعماة; literally: On Extracting Obscured Correspondence, more contemporary: On Decrypting Encrypted Correspondence [...] ).In his treatise on cryptanalysis,He wrote:One way to solve an encrypted message, if we know its language, is to find a different plaintext of the same language long enough to fill one sheet or so, and then we count the occurrences of each letter. We call the most frequently occurring letter the 'first', the next most occurring letter the 'second' the following most occurring letter the 'third', and so on, until we account for all the different letters in the plaintext sample. Then we look at the <b>cipher</b> <b>text</b> we want to solve and we also classify its symbols. We find the most occurring symbol and change it to the form of the 'first' letter of the plaintext sample, the next most common symbol is changed to the form of the 'second' letter, and the following most common symbol is changed to the form of the 'third' letter, and so on, until we account for all symbols of the cryptogram we want to solve.|$|E
50|$|FROG's design {{philosophy}} is {{to hide the}} exact sequence of primitive operations even though the cipher itself is known. While other ciphers use the secret key only as data (which are combined with the plain text to produce the <b>cipher</b> <b>text),</b> FROG uses the key both as data and as {{instructions on how to}} combine these data. In effect an expanded version of the key is used by FROG as a program. FROG itself operates as an interpreter that applies this key-dependent program on the plain text to produce the <b>cipher</b> <b>text.</b> Decryption works by applying the same program in reverse on the <b>cipher</b> <b>text.</b>|$|E
30|$|All faulty <b>cipher</b> <b>texts</b> {{determined}} eight {{candidates for}} S-box input.|$|R
30|$|In this paper, {{we present}} two {{differential}} fault analyses on PRESENT- 80 {{which is a}} lightweight block cipher. The first attack is a basic attack which induces a fault on only one bit of intermediate states, and we can obtain the last subkey of the block cipher, given 48 faulty <b>cipher</b> <b>texts</b> on average. The second attack can retrieve the master key of the block cipher, given 18 faulty <b>cipher</b> <b>texts</b> on average. In the latter attack, we assume that we can induce faults on a single nibble of intermediate states. Given those faulty <b>cipher</b> <b>texts,</b> the computational complexity of attacks is negligible.|$|R
5000|$|At the end {{of every}} episode, there is a <b>ciphered</b> <b>text</b> in one of many {{substitution}} ciphers: ...|$|R
5000|$|Bob {{finds the}} secret key paired with that identifier, and deciphers Alice's <b>cipher</b> <b>text</b> with that secret key.|$|E
5000|$|Encrypting {{the same}} PIN {{with the same}} key but for a {{different}} bank account shall not predictably give the same <b>cipher</b> <b>text.</b>|$|E
5000|$|Bob first decrypts {{the message}} {{received}} using the shared secret key [...] to obtain corresponding plain text. Note that all plain text produced {{will be different}} from that which Alice originally sent, because Eve has modified all but the last <b>cipher</b> <b>text</b> block. In particular, the final plain text, , differs from the original, , which Alice sent; although [...] is the same, , so a different plain text [...] is produced when chaining the previous <b>cipher</b> <b>text</b> block into the exclusive-OR after decryption of : [...]|$|E
50|$|A {{differential}} fault attack {{has been}} published using 7 faulty <b>cipher</b> <b>texts</b> under random 4 bit nibble fault model.|$|R
3000|$|It must {{be noted}} that {{sometimes}} faulty <b>cipher</b> <b>texts</b> will be repeated (if we inject a fault on the same bit of S [...]...|$|R
40|$|Abstract—Crypto System Identification {{is one of}} the {{challenging}} tasks in Crypt analysis. The paper discusses the possibility of employing Neural Networks for identification of Cipher Systems from <b>cipher</b> <b>texts.</b> Cascade Correlation Neural Network and Back Propagation Network have been employed for identification of Cipher Systems. Very large collection of <b>cipher</b> <b>texts</b> were generated using a Block Cipher (Enhanced RC 6) and a Stream Cipher (SEAL). Promising results were obtained in terms of accuracy using both the Neural Network models but it was observed that th...|$|R
5000|$|The Vigenère cipher {{with normal}} alphabets {{essentially}} uses modulo arithmetic, which is commutative. So if the key length is known (or guessed) then subtracting the <b>cipher</b> <b>text</b> from itself, {{offset by the}} key length, will produce the plain text encrypted with itself. If any [...] "probable word" [...] in the plain text is known or can be guessed, then its self-encryption can be recognized, allowing recovery of the key by subtracting the known plaintext from the <b>cipher</b> <b>text.</b> Key elimination is especially useful against short messages.|$|E
5000|$|Thus {{the message}} [...] "Hide {{the gold in}} the tree stump" [...] becomes [...] "BMODZ BXDNA BEKUD MUIXM MOUVI F". (Breaks {{included}} for ease of reading the <b>cipher</b> <b>text.)</b> ...|$|E
50|$|When a key was pressed, a {{light came}} on behind the <b>cipher</b> <b>text</b> letter, always {{different}} from the original letter in the plain text. The illuminated letters made up the coded message.|$|E
3000|$|... {{which is}} drawn for a fault {{on the first}} nibble of the {{internal}} state of 29 th round, if we induce another fault on the same nibble in the next experiment and assume that the output difference of the related S-box at round 29 is 3, it has overlapped with the previous fault {{and it does not}} provide us with new information. It must be noted that we collect the unique nibble of faulty <b>cipher</b> <b>texts</b> and unique nibbles of faulty <b>cipher</b> <b>texts</b> on average to obtain one nibble of S [...]...|$|R
30|$|Two faulty <b>cipher</b> <b>texts</b> {{determine}} eight {{candidates for}} S-box input. In this state, when we apply Algorithm 2, we obtain two, three, four, or five candidates for S-box input.|$|R
30|$|At {{the end of}} this process, we obtain secret <b>cipher</b> <b>texts</b> {{enciphered}} {{from the}} original secret medical data (Brain disease data) of patient to be inserted in the Brain disease cover image.|$|R
50|$|The unsolved D'Agapeyeff cipher, {{which was}} set as a {{challenge}} in 1939, contains 14x14 dinomes and might be based on Sacco’s idea of transposing a fractionated <b>cipher</b> <b>text</b> {{by means of a}} grille.|$|E
50|$|Since all the subkeys are identical, and DES is a Feistel network, the {{encryption}} {{function is}} self-inverting; that is, despite encrypting once giving a secure-looking <b>cipher</b> <b>text,</b> encrypting twice produces the original plaintext.|$|E
5000|$|First Eve {{creates a}} <b>cipher</b> <b>text</b> [...] such that [...] and [...] When Eve writes {{down the steps}} to deciphers e (without {{actually}} calculating the values since {{she does not know}} f) she finds : ...|$|E
30|$|In this paper, we {{introduced}} two new DFAs on PRESENT- 80. Our attacks {{are based on}} the injection of the faults on the intermediate state of the cipher and can retrieve the last round key and the master key efficiently. The basic attack which requires to induce a fault on a single bit of nibbles at the input of the last round requires 48 faulty <b>cipher</b> <b>texts</b> on average, and the extended attack which retrieves the master key induces a fault on a nibble of the intermediate states and requires 18 faulty <b>cipher</b> <b>texts</b> on average.|$|R
30|$|A DFA on PRESENT- 80 key {{schedule}} {{has been}} proposed by Wang et al.[24]. They assumed that the key schedule was corrupted by the fault injection and tried to recover the key. They have reduced the master key search space of PRESENT- 80 to 229 with 64 pairs of correct and faulty <b>cipher</b> <b>texts</b> on average. In addition, Zhao et al.[25] proposed a fault propagation pattern-based DFA on PRESENT- 80 / 128. They reduce the master key search space of PRESENT- 80 / 128 to 214.7 and 221.1, respectively, with 8 and 16 pairs of correct and faulty <b>cipher</b> <b>texts</b> on average.|$|R
30|$|Privacy-preserving {{aggregation}} [38] {{is built}} on homomorphic encryption used as a popular data collecting technique for event statistics. Given a homomorphic public key encryption algorithm, different sources can use the same public key to encrypt their individual data into <b>cipher</b> <b>texts</b> [39]. These <b>cipher</b> <b>texts</b> can be aggregated, and the aggregated result can be recovered with the corresponding private key. But, aggregation is purpose-specific. So, privacy- preserving aggregation can protect individual privacy in the phases of big data collecting and storing. Because of its inflexibility, it cannot run complex data mining to exploit new knowledge. As such, privacy-preserving aggregation is insufficient for big data analytics.|$|R
50|$|CSS {{employs a}} stream cipher and mangles the {{keystream}} with the plain-text data {{to produce the}} <b>cipher</b> <b>text.</b> The stream cipher is based on two linear feedback shift register (LFSR) and set up with a 40-bit seed.|$|E
5000|$|When Bob {{receives}} the message, he will first decrypt the message by reversing the encryption process which Alice applied, using the <b>cipher</b> <b>text</b> blocks [...] The tampered message, delivered to Bob in replacement of Alice's original, is [...]|$|E
50|$|The {{system worked}} in reverse. The person {{decoding}} a cipher message would use an Enigma with identical settings. When {{he pressed the}} <b>cipher</b> <b>text</b> letter, the letter in the original plain text message lit up. The illuminated letters made up the original message.|$|E
3000|$|... 32, it is {{possible}} to determine the master key uniquely. Hence, in total, it {{is possible}} to recover the master key of PRESENT- 80 given 18 faulty <b>cipher</b> <b>texts</b> on average (An toy example of attacks are given in Appendix 3).|$|R
50|$|Jeff Smith {{used the}} {{original}} 1940s Monster Society code in his Shazam!: The Monster Society of Evil miniseries, even titling the miniseries' four chapters with <b>ciphered</b> <b>text.</b> DC Comics' official website provides an on-line tool to cipher and uncipher the messages.|$|R
40|$|Abstract: Cloud Computing {{is a big}} buzz word in today’s {{technology}} uplift, {{storage of}} data in distributed network has been re-defined in the cloud environment and sharing the data stored is {{an important aspect of}} cloud storage systems which has raised many eyebrows with its security policies. In this paper, we present a flexible modeled crypto mechanism that produce constant-size <b>cipher</b> <b>texts</b> such that efficient delegation of decryption rights for any set of <b>cipher</b> <b>texts</b> are possible. The novelty is that one can aggregate any set of secret keys and make them as compact as a single key, but encompassing the power of all the keys being aggregated. In other words, the secret key holder can release a constant-size aggregate key for flexible choices of <b>cipher</b> <b>texts</b> set in cloud storage, but the other encrypted files outside the set remain confidential. This compact aggregate key can be conveniently sent to others or be stored in a smart card with very limited secure storage. We provide formal security analysis of our schemes in the standard model. We also describe other application of our schemes. In particular, our schemes give the first public-key patient-controlled encryption for flexible hierarchy, which was yet to be known...|$|R
