607|239|Public
5000|$|The <b>conceptual</b> <b>schema</b> {{describes}} all {{the data}} items and relationships between them, together with integrity constraints (later). There is only one <b>conceptual</b> <b>schema</b> per database.|$|E
50|$|A {{conceptual}} {{model is a}} formal structure representing a possible world, comprising a <b>conceptual</b> <b>schema</b> {{and a set of}} facts that instantiate the <b>conceptual</b> <b>schema.</b> The <b>conceptual</b> <b>schema</b> is a combination of concepts and facts of what is possible, necessary, permissible, and obligatory in each possible world. The set of facts instantiates the <b>conceptual</b> <b>schema</b> by assertion to describe one possible world. A rule is a fact that asserts either a logical necessity or an obligation. Obligations are not necessarily satisfied by the facts; necessities are always satisfied.|$|E
5000|$|... === <b>Conceptual</b> <b>schema</b> and {{relational}} database design, 1989 === In 1989 Nijssen and Terry Halpin published 'the book <b>Conceptual</b> <b>schema</b> {{and relational}} database design: a fact oriented approach. The introduction it declared {{the background of}} this work: ...|$|E
40|$|We discuss {{our recent}} {{approaches}} {{to enable the}} specication of a <b>conceptual</b> reconciled <b>schema</b> by directly manipulating source <b>conceptual</b> <b>schemas.</b> In particular, we use reverse engineering tools to reconstruct <b>conceptual</b> <b>schemas</b> when these are not available, and use iconic operators to specify how to map source schemas to the reconciled one. Moreover, we describe the mapping of the <b>conceptual</b> reconciled <b>schema</b> to a logical data model, including mechanisms to extract data from sources and loading them to reconciled database...|$|R
40|$|This paper {{presents}} an architecture and a methodology to integrate GDB <b>conceptual</b> <b>schemas</b> {{with the goal}} to enable the reuse {{as well as the}} interchange of them or part of them. The integration is separated in two levels. The syntactic integration consists on transforming the <b>conceptual</b> <b>schemas</b> representation to a canonical format, the GML 3. 0. After that the semantic integration is performed, presenting an algorithm to solve the semantic heterogeneities between the components of the <b>conceptual</b> <b>schemas.</b> This algorithm is based on an ontology and on the application of some similarity matching formulas...|$|R
40|$|Abstract. Like any {{software}} artifact, <b>conceptual</b> <b>schemas</b> {{of information}} systems can be tested. Testing <b>conceptual</b> <b>schemas</b> has some similarities with testing programs, but there are important differences. We present a list of six kinds of tests {{that can be applied}} to <b>conceptual</b> <b>schemas.</b> Some of them require complete schemas comprising both the structural and the behavioral parts, but we show that it is useful to test incomplete schema fragments. We introduce CSTL, a language for writing automated tests of executable schemas written in UML/OCL. We sketch the implementation of a test processor to automatically execute CSTL tests as many times as needed, following the style of the modern xUnit testing frameworks...|$|R
50|$|Conceptual schema—definition of all {{the data}} items and {{relationships}} between them. There is only one <b>conceptual</b> <b>schema</b> per database. Uniface implements the <b>conceptual</b> <b>schema</b> as the Application Model (in various Uniface versions known as the Business Object Model and the Application Object Model).|$|E
5000|$|ISO/TS 19103:2005 Geographic {{information}} -- <b>Conceptual</b> <b>schema</b> language ...|$|E
5000|$|Logical data independence: The {{ability to}} change the logical (<b>conceptual)</b> <b>schema</b> without {{changing}} the External schema (User View) is called logical data independence. For example, the addition or removal of new entities, attributes, or relationships to the <b>conceptual</b> <b>schema</b> sternal schemas or having to rewrite existing application programs.|$|E
40|$|Human factors {{research}} in conceptual modeling is scarce. Recently, quality assurance frameworks, methods and tools for <b>conceptual</b> <b>schemas</b> have received increased research attention, but {{the perception of}} quality by schema users has largely been ignored in this stream of research. This paper proposes a tentative model of user beliefs and attitudes towards the quality of <b>conceptual</b> <b>schemas.</b> The proposed model is original {{in the sense that}} it includes both perceived semantic quality and perceived pragmatic quality measures. The paper also presents a new measurement instrument for the perceived semantic quality of <b>conceptual</b> <b>schemas.</b> This instrument was used in a classroom experiment that tested the proposed user beliefs and attitudes model. It was shown that th...|$|R
40|$|Like any {{software}} artifact, <b>conceptual</b> <b>schemas</b> {{of information}} systems can be tested. Testing <b>conceptual</b> <b>schemas</b> has some similarities with testing programs, but there are important differences. We present a list of six kinds of tests {{that can be applied}} to <b>conceptual</b> <b>schemas.</b> Some of them require complete schemas comprising both the structural and the behavioral parts, but we show that it is useful to test incomplete schema fragments. We introduce CSTL, a language for writing automated tests of executable schemas written in UML/OCL. We sketch the implementation of a test processor to automatically execute CSTL tests as many times as needed, following the style of the modern xUnit testing frameworks. Peer ReviewedPostprint (published version...|$|R
40|$|We are {{developing}} a software tool to support schema matching for data transformations. Schema match-ing {{is the process of}} finding relationships between com-ponents of two given database schemas. The tool is unique in that it first extracts <b>conceptual</b> <b>schemas</b> from the two database schemas and allows the user to use the extracted <b>conceptual</b> <b>schemas</b> as clues to perform schema matching. This paper overviews the tool and explains its implementation. ...|$|R
5000|$|ISO/TS 19103 - <b>Conceptual</b> <b>Schema</b> Language (units of measure, basic types), ...|$|E
50|$|According to ANSI, this {{approach}} allows the three perspectives to be relatively independent of each other. Storage technology can change without affecting either the logical or the <b>conceptual</b> <b>schema.</b> The table/column structure can change without (necessarily) affecting the <b>conceptual</b> <b>schema.</b> In each case, of course, the structures must remain consistent across all schemas of the same data model.|$|E
5000|$|... 1989. <b>Conceptual</b> <b>Schema</b> and Relational Database Design. With G.M. Nijssen. Prentice Hall, Sydney.|$|E
40|$|The {{evolution}} {{of information systems}} from their <b>conceptual</b> <b>schemas</b> is an important research area in information systems engineering. In this paper, we aim at contributing to the area by focusing on a particular conceptual modeling construct, the partitions. We analyze the {{evolution of}} partitions in <b>conceptual</b> <b>schemas</b> of information systems. We deal with conceptual models with multiple specialization and classification, and consider whether entity types are base or derived. We provide a list of possible schema changes and, for each of them, we give its preconditions, {{and its effects on}} the schema, taking into account the state of the information base. In this paper, we deal with <b>conceptual</b> <b>schemas</b> in the UML. However, the results reported here should be applicable to most conceptual modeling languages and also to object-oriented database schemas. Postprint (published version...|$|R
40|$|The Resources-Events-Agents (REA) {{model is}} a {{semantic}} data model {{for the development of}} enterprise information systems. Although this model has been proposed as a benchmark for enterprise information modelling, only few studies have attempted to empirically validate the claimed benefits of REA modelling. Moreover, these studies focused on the evaluation of REA-based system implementations rather than directly assessing the REA-modelled <b>conceptual</b> <b>schemas</b> that these systems are based on. This paper presents a laboratory experiment that measured the user understanding of diagrammatic <b>conceptual</b> <b>schemas</b> developed using the REA model. The theoretical foundation for the hypotheses are cognitive theories that explain pattern recognition phenomena and the resulting reduction in cognitive effort for understanding <b>conceptual</b> <b>schemas.</b> The results of the experiment indicate a more accurate understanding of the business processes and policies modelled when users recognize the REA model's core pattern of enterprise information in the diagram. The implication for modelling practice is that the use of the REA model improves the requirements engineering process by facilitating the user validation of <b>conceptual</b> <b>schemas</b> produced by analysts, and thus helps ensuring the quality of the enterprise information system that is developed or implemented...|$|R
40|$|As the {{geographic}} information system (GIS) community grows, {{more and more people}} needs to share geographic information. As modern GIS data is stored in geographic databases their <b>conceptual</b> <b>schemas</b> have to be, at least, interoperable. Due {{to the fact that the}} databases are designed by many different people from different countries, using different languages and maybe with different definitions for the same phenomenon there is a high probability that the <b>conceptual</b> <b>schemas</b> have semantic heterogeneities between them. In order to handle these heterogeneities this paper suggests the use of ontologies as mediators to the semantic integration. A software architecture is proposed, which handles also syntactic heterogeneities using a standard language, the GML beyond the semantic ones. A ontology that represents a subset of {{the geographic}} reality was created and a similarity matching algorithm was developed to process schemas against it. The mathematical methods of similarity measurement modeling concepts have been tuned for a set of real GDB <b>conceptual</b> <b>schemas.</b> Pages: 247 - 26...|$|R
50|$|ORM's <b>conceptual</b> <b>schema</b> design {{procedure}} (CSDP) {{focuses on}} the analysis and design of data.|$|E
50|$|Entity Data Model Wizard in Visual Studio {{initially}} {{generates a}} one-to-one (1:1) mapping between the database schema and the <b>conceptual</b> <b>schema</b> {{in most of}} the cases. In the relational schema, the elements are composed of the tables, with the primary and foreign keys gluing the related tables together. In contrast, the Entity Types define the <b>conceptual</b> <b>schema</b> of the data.|$|E
5000|$|Rule {{communication}} patterns act as communication {{mechanism for}} the rules (see below) of the <b>conceptual</b> <b>schema.</b>|$|E
40|$|Abstract. Environmental Information System (EIS) {{development}} is a complex task involving modeling several aspects of the physical real world and complexity management. Conceptual modeling is an essential premise for a correct development of complex information systems. Reusable <b>conceptual</b> <b>schemas</b> {{have the potential to}} facilitate this difficult and time-consuming activity. In addition, linking <b>conceptual</b> <b>schemas</b> to reusable software components may provide a way for reusing not only concepts but also software applications. We propose a conceptual model for the development of Component-based Environmental Monitoring Systems studying in a high-level analysis, the appropriate components and conceptual models for them...|$|R
40|$|In {{this paper}} we {{describe}} {{an experience of}} Data Reverse Engineering supported by a repository of <b>conceptual</b> <b>schemas.</b> We first introduce a set of integration/abstraction primitives {{that are used in}} order to organize a large set of <b>conceptual</b> <b>schemas</b> in a repository. We describe the methodology conceived to produce the repository of schemas of central public administrations in Italy. Then we describe an heuristic methodology, applied in the production of the set of schemas of the public administrations of an italian region. We also compare the former exact methodology and the heuristic one according to their correctness, completeness, and efficiency. ...|$|R
40|$|The {{quality of}} the results {{produced}} in the early phases of systems development {{is a major factor}} in determining the overall quality of an information system. Therefore, an important task for research in conceptual modelling and requirements engineering is to clarify the concept of quality and develop methods for improving the quality of <b>conceptual</b> <b>schemas.</b> In this paper, we propose an approach for improving schema quality, which is based on a systematic use of schema transformations to incrementally restructure schemas. We introduce a number of schema transformations as well as a set of quality criteria for <b>conceptual</b> <b>schemas,</b> and we show how the transformations affect these quality criteria. ...|$|R
5000|$|Data source {{specific}} providers, which abstract the ADO.NET interfaces {{to connect}} to the database when programming against the <b>conceptual</b> <b>schema.</b>|$|E
5000|$|Nijssen, Gerardus Maria, and Terence Aidan Halpin. <b>Conceptual</b> <b>Schema</b> and Relational Database Design: a fact {{oriented}} approach. Prentice-Hall, Inc., 1989.|$|E
5000|$|Nijssen, G. M. [...] "Current {{issues in}} <b>conceptual</b> <b>schema</b> concepts." [...] Architecture and Models in Data Base Management Systems (1977): 31-66.|$|E
40|$|One {{important}} aspect in the specification of <b>conceptual</b> <b>schemas</b> {{is the definition}} of general constraints that cannot be expressed by the predefined constructs provided by conceptual modeling languages. In general this is done by means of general-purpose languages, like OCL. In this paper we propose a new approach to facilitate the definition of such general constraints in UML. More precisely, we define a profile that extends the set of UML predefined constraints with some types of constraints that are used very frequently in <b>conceptual</b> <b>schemas.</b> We also study the application of our ideas to the specification of two real-life applications and we show how results in constraint-related problems may be easily incorporated to our proposal. Postprint (published version...|$|R
40|$|This {{exploratory}} research investigates {{the evaluation process}} of conceptual specifications developed using either Extended Entity-Relationship (EER) or Unified Modeling Language (UML) conceptual models. In this paper, we provide a comprehensive framework for evaluating EER and UML <b>conceptual</b> <b>schemas.</b> Furthermore, we define classes of metrics facilitating the evaluation process and leading to {{the choice of the}} appropriate representation among several schemas describing the same reality. Based on quality criteria proposed in the literature, we select a subset of criteria relevant to <b>conceptual</b> EER <b>schema</b> quality evaluation. For each criterion we define one or several metrics allowing the designer to measure the schema quality. We evaluate alternative EER <b>conceptual</b> <b>schemas</b> representing the same universe of discourse using the appropriate criteria and their associated metrics. Finally, we extrapolate this evaluation process to UML schemas. Following the development of our framework, we analyze a case study and provide evidence in the support of the usefulness of the framework...|$|R
40|$|In {{the present}} work we study {{possibilities}} {{in the area}} of automatic construction of Schematron <b>schemas</b> from a <b>conceptual</b> model for XML and possibilities in reverse-engineering of Schematron schemas. The work introduces the reader to <b>conceptual</b> <b>schemas</b> for XML and to rule-based validation of XML documents. Existing techniques for mutual conversions between XML <b>schema</b> languages and <b>conceptual</b> model are also included. The main part of the work is a design and implementation of a new method for deriving Schematron <b>schemas</b> from <b>conceptual</b> <b>schemas</b> for XML. This method allows to get XML schemas, which in some respects outperforms the possibilities of other popular schema languages. The work also discusses the issue of Schematron schema reverse-engineering and shows possibilities in the area and establishing basis for further research...|$|R
5000|$|Bar-On D.* and Oxman R. (2002) “Context Over content: ICPD, A <b>Conceptual</b> <b>Schema</b> for the Building Technology Domain” Automation in Construction, Vol 11, No.4 ...|$|E
5000|$|Pujari A.K.:Data Semantics and <b>conceptual</b> <b>schema</b> in Database Management System, Proc. Of {{the annual}} {{convention}} of the Computer Society of India, CSI-84, March, 1984, Hyderabad.|$|E
50|$|A <b>conceptual</b> <b>schema</b> is a {{high-level}} {{description of a}} business's informational needs. It typically includes only the main concepts and the main relationships among them. Typically this is a first-cut model, with insufficient detail to build an actual database. This level describes {{the structure of the}} whole database for a group of users. The conceptual model is also known as the data model as data model can be used to describe the <b>conceptual</b> <b>schema</b> when a database system is implemented. It hides the internal details of physical storage and targets on describing entities, datatype, relationships and constraints.|$|E
40|$|This paper {{gives an}} {{introduction}} to concepts for a better expert knowledge extraction for geodata harmonisation. Geodata harmonisation involves overcoming heterogeneities on the syntactic, schematic and semantic levels, but user interaction is mostly required for the semantic in-teroperability level. Consequently, {{the goal is to}} provide tools to geodomain experts which allow them to use their knowledge to describe the <b>conceptual</b> <b>schemas</b> of their domain as well as alignments to other domain's <b>conceptual</b> <b>schemas</b> in a sufficiently expressive way without becoming experts in ontology engineering. We describe an approach for this that includes both visual analysis on the basis of geospatial instances and specific interaction guidance processes. Based on this approach, a prototypical implementation of a tool called the HUMBOLDT Alignment Editor (HALE) is introduced...|$|R
40|$|International audienceIn {{this paper}} we propose a {{methodology}} describing a global process used to model both urban spatiotemporal data and applications. During the design phase, we use a tool based on the Entity-Relation formalism that is dedicated to spatiotemporal data design (MADS). The resulting <b>conceptual</b> <b>schemas</b> are adapted to the particularities of the urban data by distinguishing between physical concepts (continuants) and events (occurents). This distinction enables a better readability of <b>conceptual</b> <b>schemas</b> and a more powerful interoperability. The resulting schemas are then implemented in an Object Oriented environment. In the end, we use a GIS to query and graphically represent urban data. In order to test the capacity of our proposed modeling methodology in a real case, we apply it on a case study whose objective is to analyze pedestrian walkways in urban areas...|$|R
40|$|The {{validation}} and the {{verification of}} <b>conceptual</b> <b>schemas</b> have attracted {{a lot of}} interest during the last years, and several tools have been developed to automate this process as much as possible. This is achieved, in general, by assessing whether the schema satisfies different kinds of desirable properties which ensure that the schema is correct. In this paper we describe AuRUS, a tool we have developed to analyze UML/OCL <b>conceptual</b> <b>schemas</b> and to explain their (in) correctness. When a property is satisfied, AuRUS provides a sample instantiation of the schema showing a particular situation where the property holds. When it is not, AuRUS provides an explanation for such unsatisfiability, i. e., a set of integrity constraints which is in contradiction with the property. Peer ReviewedPostprint (author’s final draft...|$|R
