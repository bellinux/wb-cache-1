74|12|Public
5|$|In July 2009, Revolution {{announced}} that a remastered edition of Beneath a Steel Sky would be released on iOS later that year. The remastered edition features new animated movies by Gibbons, a <b>context-sensitive</b> <b>help</b> system and improved audio quality. The game was released on the App Store on October 7, 2009. The animated movies in the iOS remastered version {{make use of the}} original stills and use a sliding paper-like style to animate them.|$|E
25|$|WinHelp also {{supports}} a feature known as <b>context-sensitive</b> <b>help.</b> <b>Context-sensitive</b> <b>help</b> is assistance that {{is appropriate to}} where the user is in the software application, {{and what they are}} trying to do.|$|E
25|$|This {{interface}} {{represents a}} window of a container or contained object. It allows callers to obtain {{the handle of the}} window, and to toggle the <b>context-sensitive</b> <b>help</b> function. When the <b>context-sensitive</b> <b>help</b> function is turned on, typically the mouse-pointer changes to an arrow with a question mark to indicate that clicking a user interface element will result in opening a help window.|$|E
40|$|Abstract: Derivations using branch-interchanging and {{language}} family obtained by context-free and interchange (AB → BA) rules are analysed. This language family {{is between the}} context-free and <b>context-sensitive</b> families <b>helping</b> {{to fill the gap}} between them. Closure properties are analysed. Only semi-linear languages can be generated in this way...|$|R
40|$|Users {{often have}} {{difficulties}} relating general help {{information to the}} specific computer tasks which they are attempting to complete. A factor contributing to this problem is {{the distance between the}} space in which help is presented and the space in which users have to apply what they learn from <b>help.</b> <b>Context-sensitive</b> multimedia <b>help</b> potentially can reduce these distances. This paper discusses the use of context-sensitive graphical animation as one medium of help presentation in which the user's task context is synthesized as part of procedural help demonstrations. This paper also discusses how a support for this kind of help has been integrated in an application environment, thus enabling an automatic generation of this kind of help for various applications...|$|R
40|$|A {{computer}} program package called MEGA {{has been developed}} for estimating evolutionary distances, reconstructing phylogenetic trees and computing basic statistical quantities from molecular data. It is written in C+ + and {{is intended to be}} used on IBM and IBM-compatible personal computers. In this program, various methods for estimating evolutionary distances from nucleotide and amino acid sequence data, three different methods of phylogenetic inference (UPGMA, neighbor-joining and maximum parsimony) and two statistical tests of topological differences are included. For the maximum parsimony method, new algorithms of branch-and-bound and heuristic searches are implemented. In addition, MEGA computes statistical quantities such as nucleotide and amino acid frequencies, transition/transversion biases, codon frequencies (codon usage tables), and the number of variable sites in specified segments in nucleotide and amino acid sequences. Advanced on-screen sequence data and phylogenetic-tree editors facilitate publication-quality outputs {{with a wide range of}} printers. Integrated and interactive designs, on-line <b>context-sensitive</b> <b>helps,</b> and a text-file editor make MEGA easy to use...|$|R
50|$|WinHelp also {{supports}} a feature known as <b>context-sensitive</b> <b>help.</b> <b>Context-sensitive</b> <b>help</b> is assistance that {{is appropriate to}} where the user is in the software application, {{and what they are}} trying to do.|$|E
5000|$|Due to the deprecation of WinHelp, <b>context-sensitive</b> <b>help</b> {{was removed}} in Office 2003.|$|E
5000|$|How To tab {{offering}} <b>context-sensitive</b> <b>help</b> {{depending on}} current selection and tool choice.|$|E
40|$|Online help {{systems have}} {{evolved over the}} past 20 years {{to meet the needs}} of our users. Designers must {{consider}} the content, format, presentation, navigation, and access methods of online help systems. A series of design checklists based on the past 20 years of research are presented in this paper, which summarizes a journal article currently being considered for publication. The latest trend in online help system design is embedded user assistance, which includes integrating information into the interface and including an embedded help pane within that interface to display a <b>context-sensitive</b> online <b>help</b> system...|$|R
40|$|We present Newton’s Pen, a statics tutor {{implemented}} on a “pentop computer, ” {{a writing}} instrument with an in-tegrated digitizer and embedded processor. The tutor, intended for undergraduate education, scaffolds {{students in the}} construction of free body diagrams and equilibrium equations. This project entailed the development of sketch understanding techniques and user interface principles for creating pedagogically-sound instructional tools for pentop computers. Development on the pentop platform presented novel challenges because of limited computa-tional resources and a visually static, ink-on-paper display (the only dynamic output device is an audio speaker). We show that a system architecture based on a finite state machine reduces the computational complexity, and serves as a convenient means for providing <b>context-sensitive</b> tutorial <b>help.</b> Our pilot study suggests that Newton’s Pen has potential as an effective teaching tool. 1...|$|R
40|$|Research on {{automatic}} help generation fails {{to match the}} advance in user interface technology. With users and interfaces becoming increasingly sophisticated, generating help information must be presented with a close tie to the current work context. Help research also needs to utilize the media technology to become effective in conveying information to users. Our work {{on automatic}} generation of help from user interface specifications attempts to bridge the gaps, both between help and user interface making help truly sensitive to the interface context, and between the help media and the interface media making communication more direct and more effective. Our work previously reported emphasized a shared knowledge representation for both user interface and help, and an architecture for automatic generation of <b>context-sensitive</b> animated <b>help</b> in Smalltalk 80. This paper presents a new integrated architecture in C++ which not only generates animation, but also audio as procedural help. The architecture also provide textual help of why an object in an interface is disabled...|$|R
50|$|This {{interface}} {{represents a}} window of a container or contained object. It allows callers to obtain {{the handle of the}} window, and to toggle the <b>context-sensitive</b> <b>help</b> function. When the <b>context-sensitive</b> <b>help</b> function is turned on, typically the mouse-pointer changes to an arrow with a question mark to indicate that clicking a user interface element will result in opening a help window.|$|E
50|$|VBdocman parses the Visual Basic {{projects}} and automatically creates {{the table of}} contents, index, topics, cross-references and F1 <b>context-sensitive</b> <b>help.</b>|$|E
50|$|<b>Context-sensitive</b> <b>help</b> can be {{implemented}} using tooltips, which either provide a terse description of a GUI widget or display a complete topic from the help file. Other commonly used ways to access <b>context-sensitive</b> <b>help</b> start by clicking a button. One way uses a per widget button that displays the help immediately. Another way changes the pointer shape to a question mark, and then, after the user clicks a widget, the help appears.|$|E
40|$|The FORMAK system {{provides}} intelligent support for computerized filling of standard paper forms. These forms can be {{displayed on the}} screen, filled out with optimum support and then printed onto the original paper form if necessary. This kind of hybrid form filling will continue {{to play an important}} role in all inter-company communication, in-house communication and especially in communication between administration and the private sector. FORMAK provides a means of adjusting to this situation using the latest computer technology, including the following advantages: 3 -level on-line help during form-filling, i. e. simple enter requests, explanatory texts for each of the form's boxes and <b>context-sensitive</b> Windows <b>help</b> for complicated situations; position-perfect printing onto the original form; realistic display as screen background assuring familiar 2 -D orientation; intelligent navigation through the form; automatic calculation of certain values on the basis of other entries (as in sprea dsheet systems); selection of values from predefined option lists; learning from user suggestions; access to databases for partial pre-filling of forms and to update the databases...|$|R
40|$|A {{computer}} {{program has been}} written to facilitate appraisals according to the methodology of Capability Maturity Model Integration (CMMI). [CMMI is a government/industry standard, maintained by the Software Engineering Institute at Carnegie Mellon University, for objectively assessing the engineering capability and maturity of an organization (especially, an organization that produces software) ]. The program assists {{in preparation for a}} CMMI appraisal by providing drop-down lists suggesting required artifacts or evidence. It identifies process areas for which similar evidence is required and includes a copy feature that reduces or eliminates repetitive data entry. It generates reports to show the entire framework for reference, the appraisal artifacts to determine readiness for an appraisal, and lists of interviewees and questions to ask them during the appraisal. During an appraisal, the program provides screens for entering observations and ratings, and reviewing evidence provided thus far. Findings concerning strengths and weaknesses can be exported for use in a report or a graphical presentation. The program generates a chart showing capability level ratings of the organization. A <b>context-sensitive</b> Windows <b>help</b> system enables a novice to use the program and learn about the CMMI appraisal process...|$|R
40|$|While {{search engines}} {{are the primary}} means by which {{information}} is located online, significant issues remain when trying to satisfy the needs of searchers, especially {{in the face of}} the type of vague queries that dominate Web search. In this paper, we tackle this problem by applying a recommender system approach to Web search which allows users to dynamically interact with the result-space that is of interest to them. Our proposed recommendation interface also facilitates query expansion through a <b>context-sensitive</b> tag cloud, <b>helping</b> searchers to efficiently assimilate potential expansion terms that are mined from results of interest. We present findings from a live user trial of our approach which indicate, for example, that it facilitates users to locate relevant information more quickly when compared to using standard search engine result lists...|$|R
5000|$|... 4DOS, 4OS2, 4NT / Take Command Console and PowerShell (in PowerShell ISE) {{looks up}} <b>context-sensitive</b> <b>help</b> {{information}} when [...] is pressed.|$|E
50|$|The Qt Creator IDE {{supports}} editing QML and JavaScript code with <b>context-sensitive</b> <b>help,</b> code {{completion of}} V-Play components, navigation between components and more.|$|E
50|$|Zsh {{provides}} {{various forms}} of configurable <b>context-sensitive</b> <b>help</b> {{as part of its}} run-help widget, _complete_help command, or in the completion of options for some commands.|$|E
40|$|AbstractThe {{method of}} local {{constraints}} attempts to describe context-free languages in an apparently <b>context-sensitive</b> form which <b>helps</b> {{to retain the}} intuitive insights about the grammatical structure. This form of description, while apparently context-sensitive is, in fact, context-free and allows a program derivation structure to be represented as a tree with additional constraints, thus allowing {{for the possibility of}} a correctness proof in the form of Knuthian semantics. These semantic aspects will be discussed in a sequel to this paper (Part II: Semantics). Several detailed examples are given to motivate the use of local constraints grammars including some examples from the syntax of ALGOL 60. A parsing algorithm has been described; its purpose is to show that the computation of local constraints is quite reasonable. Transformation rules for transferring a context-free grammar into a local constraints grammar have been described and some heuristic approaches for the inverse transformation have been presented...|$|R
40|$|In {{this thesis}} we {{describe}} {{a novel approach}} to application of Evolutionary Algorithms (EAs) into the field of Inductive Logic Programming (ILP). One of the main issues of ILP is the time complexity {{that comes out of}} the large size of ILP search space. Improving the search efficiency is therefore the main objective of this thesis. To reach this, EAs were used in this work as they have proven to be efficient solvers for many optimization problems in many applications before. The target of the thesis is to design a system that would use EAs to speed up the search process in ILP while also enabling to use full potential of ILP including the possibilities of first order logic as well as the refinement operators. In the same time we aim at developing a system that would not be too problem-specific and would be both user and implementation friendly. Unlike the traditional approaches that focus on evolving populations of logical clauses, our refinement-based approach uses the evolutionary optimization process to search for sequences of refinement actions that iteratively adapt the initial working clause so that it changes into a well classifying clause. Utilization of <b>context-sensitive</b> refinements (adaptations) <b>helps</b> the search operations to produce mostly syntactically correct concepts and enables using available backgroun...|$|R
40|$|The Panel Library and Editor is a {{graphical}} {{user interface}} (GUI) builder for the Silicon Graphics IRIS workstation family. The toolkit creates "widgets" which can be manipulated by the user. Its appearance {{is similar to that}} of the X-Windows System. The Panel Library is written in C and is used by programmers writing user-friendly mouse-driven applications for the IRIS. GUIs built using the Panel Library consist of "actuators" and "panels. " Actuators are buttons, dials, sliders, or other mouse-driven symbols. Panels are groups of actuators that occupy separate windows on the IRIS workstation. The application user can alter variables in the graphics program, or fire off functions with a click on a button. The evolution of data values can be tracked with meters and strip charts, and dialog boxes with text processing can be built. Panels can be stored as icons when not in use. The Panel Editor is a program used to interactively create and test panel library interfaces in a simple and efficient way. The Panel Editor itself uses a panel library interface, so all actions are mouse driven. Extensive <b>context-sensitive</b> on-line <b>help</b> is provided. Programmers can graphically create and test the user interface without writing a single line of code. Once an interface is judged satisfactory, the Panel Editor will dump it out as a file of C code that can be used in an application. The Panel Library (v 9. 8) and Editor (v 1. 1) are written in C-Language (63 %) and Scheme, a dialect of LISP, (37 %) for Silicon Graphics 4 D series workstations running IRIX 3. 2 or higher. Approximately 10 Mb of disk space is required once compiled. 1. 5 Mb of main memory is required to execute the panel editor. This program is available on a. 25 inch streaming magnetic tape cartridge in UNIX tar format for an IRIS, and includes a copy of XScheme, the public-domain Scheme interpreter used by the Panel Editor. The Panel Library Programmer's Manual is included on the distribution media. The Panel Library and Editor were released to COSMIC in 1991. Silicon Graphics, IRIS, and IRIX are trademarks of Silicon Graphics, Inc. X-Window System is a trademark of Massachusetts Institute of Technology...|$|R
50|$|<b>Context-sensitive</b> <b>help</b> is most used in, but is {{not limited}} to, GUI environments. Examples include Apple's System 7 Balloon help, Microsoft's WinHelp, OS/2's INF Help, Panviva's SupportPoint, or Sun's JavaHelp.|$|E
50|$|It had keyboard-driven pop-up menus {{as well as}} one-key commands, {{making it}} fast to operate. It was also user-friendly, {{introducing}} an early instance of <b>context-sensitive</b> <b>help</b> accessed by the F1 key.|$|E
5000|$|In his review, Ballard {{finds the}} {{installation}} troubling. [...] "Unfortunately, getting started was challenging as Zenoss provided no <b>context-sensitive</b> <b>help</b> {{to guide us}} through a truly staggering number of configuration options." ...|$|E
50|$|<b>Context-sensitive</b> <b>help</b> {{is a kind}} {{of online}} help that is {{obtained}} from a specific point {{in the state of the}} software, providing help for the situation that is associated with that state.|$|E
5000|$|Other {{interface}} {{features include}} a basic in-game text editor, for editing in-game mail and other chunks of text, <b>context-sensitive</b> <b>help,</b> and optional sections of topological map (known as [...] "lookmaps") to aid navigation.|$|E
50|$|Process Guide {{provides}} <b>context-sensitive</b> <b>help</b> and {{up-to-date information}} for software users {{in case of}} difficulties with applications. It operates as an employee's personal navigation system that guides users through company and role specific processes.|$|E
50|$|<b>Context-sensitive</b> <b>help,</b> {{as opposed}} to general online help or online manuals, {{does not need to}} be {{accessible}} for reading as a whole. Each topic is supposed to describe extensively one state, situation, or feature of the software.|$|E
50|$|Plug-ins {{are used}} to {{customize}} the application for individual use and can make it into an advanced XML/HTML editor, or an integrated development environment (IDE), with compiler, code completion, <b>context-sensitive</b> <b>help,</b> debugging, visual differentiation and language-specific tools.|$|E
50|$|The code {{editor in}} Qt Creator {{supports}} syntax highlighting for various languages. In addition to that, the code editor can parse code in C++ and QML languages {{and as a}} result code completion, <b>context-sensitive</b> <b>help,</b> semantic navigation are provided.|$|E
50|$|The Kenai portal {{supported}} tagging, {{an advanced}} site search that enables finding people and project types via a tag cloud and other properties, and a project search that enables developers to find projects. There was also <b>context-sensitive</b> <b>help</b> available on every page.|$|E
5000|$|Release 4 was {{the last}} release for DOS. More an upgrade to Release 3.4 than {{in line with the}} Windows Release 3, it {{containing}} an improved interface, and new features including Version Manager, a spell checker, <b>context-sensitive</b> <b>help,</b> and cell comments. Introduced in May 1994.|$|E
50|$|Alpine is a rewrite of the Pine Message System {{that adds}} support for Unicode and other features. Alpine {{is meant to}} be {{suitable}} for both inexperienced email users and the most demanding of power users. Alpine can be learned by exploration and the use of <b>context-sensitive</b> <b>help.</b> The user interface can be customized.|$|E
