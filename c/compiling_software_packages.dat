2|10000|Public
50|$|Gentoo Linux is an {{independent}} 'self-build' source-based distribution that puts an emphasis on <b>compiling</b> <b>software</b> <b>packages</b> from source-code using the Portage Package Manager, rather than installing pre-compiled binary software packages. It supports {{a wide range of}} computer architectures and desktop environments.|$|E
50|$|Source Mage and Lunar Linux are forks of the {{independent}} Linux distribution Sorcerer Linux. Like Sorcerer, they are 'self-build' source-based (opposed to binary-based) Linux distributions that put an emphasis on <b>compiling</b> <b>software</b> <b>packages</b> from source-code, using a software compiler, rather than installing pre-compiled binary software packages.|$|E
40|$|Providing {{users of}} HPC systems {{with a wide}} variety of up to date <b>software</b> <b>packages</b> is a {{challenging}} task. Large software stacks built from source are difficult to manage, requiring powerful package management tools. The Portage package manager from Gentoo is a highly flexible tool that offers a mature solution to this otherwise daunting task. The Gentoo Prefix project develops and maintains a way of installing Gentoo systems in non-standard locations, bringing the virtues of Gentoo to other operating systems. Here we demonstrate how a Gentoo Prefix installation can be used to cross <b>compile</b> <b>software</b> <b>packages</b> for the Intel Xeon Phi known as Knights Corner, as well as to manage large software stacks in HPC environments...|$|R
40|$|AbstractThis paper {{investigated}} the stress-strain state of two diagonal cavities of arbitrary cross-sectional shape {{and the depth}} of a weighty inclining massif with system slots in terms of elastic and elastic-creep deformation rocks. This study was based on the anisotropic mechanical-mathematical model of inclining multilayer massif with a doubly periodic system of slots studied numerically, the patterns of distribution of elastic-creep stresses, displacements near two diagonal cavities of derived shape, {{and the depth of}} the Finite Element Method in generalized plane strain. Calculation algorithm is a designed and <b>compiled</b> <b>software</b> <b>package</b> {{for the study of the}} elastic-creep state of adjacent cavities of derived depth and shapes. Multivariate numerical calculation and analysis of the effect on the components of stresses and displacements near the cavities geometrics, physical parameters, and creep properties of rocks were conducted...|$|R
5000|$|Homebrew {{is written}} in the Ruby {{programming}} language and targets the version of Ruby that comes installed with the macOS operating system. It is by default installed into [...] and consists of a git repository, allowing the user to update Homebrew by pulling an updated repository from GitHub. The <b>package</b> manager builds <b>software</b> from source using [...] "formulae", Ruby scripts constructed with Homebrew's DSL for managing dependencies, downloading source files, and configuring and <b>compiling</b> <b>software.</b> Binary <b>packages</b> called [...] "bottles" [...] provide pre-built formulae with default options.|$|R
40|$|The Simple Tool for Automated Reasoning program (STAR) is an interactive, {{interpreted}} {{programming language}} {{for the development}} and operation of artificial intelligence (AI) application systems. STAR provides an environment for integrating traditional AI symbolic processing with functions and data structures defined in compiled languages such as C, FORTRAN and PASCAL. This type of integration occurs {{in a number of}} AI applications including interpretation of numerical sensor data, construction of intelligent user interfaces to existing <b>compiled</b> <b>software</b> <b>packages,</b> and coupling AI techniques with numerical simulation techniques and control systems software. The STAR language was created as part of an AI project for the evaluation of imaging spectrometer data at NASA's Jet Propulsion Laboratory. Programming in STAR is similar to other symbolic processing languages such as LISP and CLIP. STAR includes seven primitive data types and associated operations for the manipulation of these structures. A semantic network is used to organize data in STAR, with capabilities for inheritance of values and generation of side effects. The AI knowledge base of STAR can be a simple repository of records or it can be a highly interdependent association of implicit and explicit components. The symbolic processing environment of STAR may be extended by linking the interpreter with functions defined in conventional compiled languages. These external routines interact with STAR through function calls in either direction, and through the exchange of references to data structures. The hybrid knowledge base may thus be accessed and processed in general by either side of the application. STAR is initially used to link externally compiled routines and data structures. It is then invoked to interpret the STAR rules and symbolic structures. In a typical interactive session, the user enters an expression to be evaluated, STAR parses the input, evaluates the expression, performs any file input/output required, and displays the results. The STAR interpreter is written in the C language for interactive execution. It has been implemented on a VAX 11 / 780 computer operating under VMS, and the UNIX version has been implemented on a Sun Microsystems 2 / 170 workstation. STAR has a memory requirement of approximately 200 K of 8 bit bytes, excluding externally compiled functions and application-dependent symbolic definitions. This program was developed in 1985...|$|R
40|$|Margrit Betke's {{accompanying}} {{web page}} for the article: [URL] (verified 2014 - 05 - 06). This item will contain the article referenced once that article is available {{after the publication}} process. In the meantime, we make available the software accompanying the article. Here is {{the content of the}} main README. txt file accompanying the software. This archive contains the <b>software</b> <b>packages</b> described in "A method for accurate multi-camera field videography" from Theriault et al. and is currently Supplemental Material file S 1 for that project. See the contents of each directory for further documentation and sample data. easyCamera 	A MATLAB based planning and error-analysis tool with a graphical interface for large volume stereo videography projects such as those described in the manuscript. easyWand 	A MATLAB based camera calibration tool with graphical interface, suitable for large volume stereo videography calibrations conducted following the field protocol described in the manuscript. Contains easySBA, a MATLAB mex implementation of the sparse bundle adjustment (SBA) routines from Lourakis and Argyros, as described in the manuscript. python 	A python interface to the SBA routines used by easyWand. For the advanced user with prior experience in python and in <b>compiling</b> open-source <b>software</b> <b>packages.</b> Stereo videography is a powerful technique for quantifying the kinematics and behavior of animals, but it can be challenging to use in an outdoor field setting. We here present a workflow and associated software for performing calibration of cameras placed in a field setting and estimating the accuracy of the resulting stereoscopic reconstructions. We demonstrate the workflow through example stereoscopic reconstructions of bat and bird flight. We provide software tools for planning experiments and processing the resulting calibrations that other researchers may use to calibrate their own cameras. Our field protocol can be deployed in a single afternoon, requiring only short video clips of light, portable calibration objects...|$|R
40|$|This {{paper has}} arisen from a project which aims at {{developing}} a microcomputer-based fault-diagnostic instrument, {{for use with}} respect to the behaviours of most forms of refrigeration plant. The initial stage in the development of such an instrument is to <b>compile</b> a suitable <b>software</b> <b>package,</b> capable of calculating certain refrigerant and cycle properties from simple pressure and temperature inputs, at the four state-points of the cycle. This has been achieved using a BASIC program which can determine the following: - - the thermodynamic properties at the cycle state-points; - - component energy balances; - - isentropic efficiency of compression; and - - coefficient of performance. By evaluating the various arbitrary constants required in the equations used within the program, it is possible to estimate the properties of refrigerants R 11, R 12, R 13, R 14, R 22, R 113, R 114, R 500 and R 502 as functiions of their characteristic parameters at any state-point. All the derived equations and characteristic constants are collated and presented in this paper. The computed properties of the refrigerants have been compared with pertinent published data, and the presented correlations provide good degrees of agreement between the calculated values and published data. ...|$|R
5000|$|A {{number of}} <b>software</b> <b>packages</b> use the SWMM5 engine, {{including}} many commercial <b>software</b> <b>packages.</b> Some of these <b>software</b> <b>packages</b> include: ...|$|R
50|$|There {{are many}} <b>software</b> <b>packages</b> {{available}} to merge text and images into VDP print files. Some are stand-alone <b>software</b> <b>packages,</b> however {{most of the}} advanced VDP <b>software</b> <b>packages</b> are actually plug-in modules for one or more publishing <b>software</b> <b>packages</b> such as Adobe Creative Suite.|$|R
5000|$|<b>Software</b> <b>packaging</b> formats {{are used}} to create <b>software</b> <b>packages</b> that may be self-installing files.|$|R
5000|$|With {{extraction}} lossy data conversion, <b>software</b> <b>packages</b> take content stored by {{a different}} <b>software</b> <b>package</b> and extract out the content to the desired format. This may allow data to be extracted in a format not recognized by the original <b>software</b> <b>package.</b>|$|R
40|$|Numerous <b>software</b> <b>packages</b> {{are being}} used and updated {{regularly}} on most computer systems. Installing all these <b>software</b> <b>packages</b> is a formidable task because each one has a different procedure for compiling or for placing the files required at run time. The LUDE (Logithèque Universitaire Distribuée et Extensible) software library is an organization for installing <b>software</b> <b>packages,</b> a set of tools to install and uninstall <b>software</b> <b>packages</b> and browse their documentation, {{and a number of}} FTP servers offering over 100 pre-installed freely redistributable <b>software</b> <b>packages.</b> It offers functionality and flexibility not available i...|$|R
40|$|This paper {{presents}} an integrated rule-based and case-based reasoning approach for evaluation and {{selection of the}} <b>software</b> <b>packages.</b> Rule-based reasoning is used to (i) store knowledge about the software evaluation criteria (ii) guide user to capture user needs of the <b>software</b> <b>package.</b> Case-based reasoning is used to (i) determine the fit between candidate <b>software</b> <b>packages</b> and user needs of the <b>software</b> <b>package</b> (ii) rank the candidate <b>software</b> <b>packages</b> according to their score. We have implemented this approach and performed usability test to verify functionality, efficiency and convenience of this approach...|$|R
40|$|The {{presence}} of organic micropollutants (OMPs) in water {{is of great}} environmental concern. OMPs such as endocrine disruptors and certain pharmaceuticals have shown alarming effects on aquatic life. OMPs {{are included in the}} priority list of contaminants in several government directorate frameworks. The low levels of OMPs concentration (ng/L to μg/L) force the use of sophisticated analytical instruments. Although, the techniques to detect OMPs are progressing, the focus of current research is only on limited, important OMPs due to the high amount of time, cost and effort involved in analyzing them. Alternatively, quantitative structure activity relationship (QSAR) models help to screen processes and propose appropriate options without considerable experimental effort. QSAR models are well-established in regulatory bodies as a method to screen toxic chemicals. The goal of the present thesis was to develop QSAR models for OMPs removal by oxidation. Apart from the QSAR models, a decision support system (DSS) based on multi-criteria analysis (MCA) involving socio-economic-technical and sustainability aspects was developed. Also, hybrids of different water treatment processes were studied to propose a sustainable water treatment train for OMPs removal. In order to build the QSAR models, the ozone/hydroxyl radical rate constants or percent removals of the OMPs were <b>compiled.</b> Several <b>software</b> <b>packages</b> were used to 5 compute the chemical properties of OMPs and perform statistical analyses. For DSS, MCA was used since it allows the comparison of qualitative (non-monetary, non-metric) and quantitative criteria (e. g., costs). Quadrant plots were developed to study the hybrid of natural and advanced water treatment processes. The QSAR models satisfied both chemical and statistical criteria. The DSS resulted in natural treatment and ozonation as the preferred processes for OMPs removal. The QSAR models {{can be used as a}} screening tool for OMPs removal by oxidation. Moreover, the QSAR - defining molecular descriptors help in detailed understanding of oxidation. The DSS can be considered as an aid in assessing a multi-barrier approach to remove OMPs. Hybrids of natural and advanced treatment processes help to develop a more sustainable multi-barrier approach for OMPs removal...|$|R
40|$|Teachers using {{traditional}} lecture method {{find it difficult}} to communicate the concept of chemical bonding to students; and students {{find it difficult to}} learn the concept. The trend in the 21 st century learning is the use of computer and <b>software</b> <b>packages</b> to facilitate teaching-learning process. This study set out to develop and validate a <b>software</b> <b>package</b> for teaching chemical bonding in secondary schools. The study produced chemical bonding instructional <b>software</b> <b>package</b> (CBISP), adopting the procedure suggested in FTCESP-model for teacher-made computer educational <b>software</b> <b>package.</b> It also produced an instrument for validation of the <b>software</b> <b>package.</b> The internal consistency (α) of the Chemical Bonding Instructional <b>Software</b> <b>Package</b> (CBISP) has a value of 0. 781, obtained by Kendall's Coefficient of Concordance method used in determining it. The author asserts that the procedure adopted in the development and validation of the CBISP is a veritable way of ensuring sustainable supply of relevant <b>software</b> <b>packages</b> in the school system...|$|R
40|$|Publication of {{this article}} was funded by the Stellenbosch University Open Access Fund. The {{original}} publication is available at [URL] factors exist that may contribute to the unsuccessful completion of application <b>software</b> <b>package</b> implementation projects. The most significant contributor to application <b>software</b> <b>package</b> project failure lies in the misalignment of the organisation’s business processes with the functionality of the application <b>software</b> <b>package.</b> While various IT control frameworks that may assist in the implementation of application <b>software</b> <b>packages</b> are available, the question arises why industry still reports that the success rate of application <b>software</b> <b>package</b> implementation projects remains low. The {{purpose of this study was}} to examine the extent to which the Projects in Controlled Environment (PRINCE 2) framework assists in the alignment of the organisation’s business processes with the functionality provided by the application <b>software</b> <b>package</b> implemented. This study investigated whether PRINCE 2 addresses all the reasons for project failure. It identifies the shortcomings and weaknesses in PRINCE 2 which may contribute to the misalignment between the business processes of the organisation and the functionality of the application <b>software</b> <b>package</b> implemented. The study recommends how these weaknesses identified in PRINCE 2 can be addressed. By taking these recommendations into account when using PRINCE 2 to implement application <b>software</b> <b>packages,</b> proper alignment between the organisation’s business processes and the functionality of the application <b>software</b> <b>package</b> may be achieved. This results in a more successful application <b>software</b> <b>package</b> implementation. Stellenbosch UniversityPublishers' versio...|$|R
40|$|Software defect {{prediction}} {{is the process}} of locating defective modules in software. Software quality may be a field of study and apply that describes the fascinating attributes of <b>software</b> <b>package</b> product. The performance should be excellent with none defects. Software quality metrics are a set of <b>software</b> <b>package</b> metrics that target the standard aspects of the product, process, and project. The <b>software</b> <b>package</b> {{defect prediction}} model helps in early detection of defects and contributes to their economical removal and manufacturing a top quality <b>software</b> <b>package</b> supported many metrics. The most objective of paper is to assist developers determine defects supported existing <b>software</b> <b>package</b> metrics victimization data mining techniques and thereby improve the <b>software</b> <b>package</b> quality. In this paper, role of various classification techniques in software defect prediction process are analyzed...|$|R
40|$|An {{application}} <b>software</b> <b>package</b> implementation is {{a complex}} endeavour, and as such it requires the proper understanding, evaluation and redefining of the current business processes {{to ensure that the}} implementation delivers on the objectives set {{at the start of the}} project. Numerous factors exist that may contribute to the unsuccessful implementation of application <b>software</b> <b>packages.</b> However, the most significant contributor to the failure of an application <b>software</b> <b>package</b> implementation lies in the misalignment of the organisation’s business processes with the functionality of the application <b>software</b> <b>package.</b> Misalignment is attributed to a gap that exists between the business processes of an organisation and what functionality the application <b>software</b> <b>package</b> has to offer to translate the business processes of an organisation into digital form when implementing and configuring an application <b>software</b> <b>package.</b> This gap is commonly referred to as the information technology (IT) gap. This study proposes to define and discuss the IT gap. Furthermore this study will make recommendations for aligning the business processes with the functionality of the application <b>software</b> <b>package</b> (addressing the IT gap). The end result of adopting these recommendations will be more successful application <b>software</b> <b>package</b> implementations...|$|R
25|$|One of the {{elements}} of the package will be the <b>software</b> <b>package.</b> The <b>software</b> <b>package</b> is a package in itself, because it consists of the different software components that together form the product. In contrast with the overall <b>package,</b> the <b>software</b> <b>package</b> is always a technical package in which all the files needed are combined in order to run the software product. Another concept of the <b>software</b> <b>package</b> is the version. This keeps track of the modifications made to the software product. By relating it to the <b>software</b> <b>package</b> the vendor and the customer are able {{to keep track of the}} functionality and properties of the product the customer is using.|$|R
30|$|The {{following}} procedure {{requires a}} computer running Microsoft Windows and our symmetry-mismatch reconstruction <b>software</b> <b>package.</b> Unpacking the <b>software</b> <b>package</b> to a folder and setting {{a path to}} this folder in the Windows system are required before using the <b>software</b> <b>package.</b> This procedure assumes that users have experiences in cryo-EM image processing and single particle reconstruction.|$|R
40|$|A {{statistical}} {{user interface}} is an interface between a human user and a statistical <b>software</b> <b>package.</b> Whenever {{we use a}} statistical <b>software</b> <b>package</b> we want to solve a specific statistical problem. But very often at {{first it is necessary}} to learn specific things about the <b>software</b> <b>package.</b> Everyone of us knows about the ?religious wars? concerning the question which statistical software package/method is the best for a certain task; see Marron (1996) and Cleveland and Loader (1996) and related internet discussions. Experienced statisticians use a bunch of different statistical <b>software</b> <b>packages</b> rather than a single one; although all of the major companies (at least the marketing departments) tell us that we only need their <b>software</b> <b>package.</b> [...] ...|$|R
40|$|This work {{gives an}} {{overview}} of the overall equipment efficiency (OEE) and root cause analysis (RCA) methods. There are summarized parameters necessary to calculate and implement these methods. There has been {{an overview of}} plywood production line gluing process. This work describes overall equipment efficiency and root cause analysis implementation of “Latvijas Finieris” plywood production gluing line, data collection options using Wonderware System Platform, SQL <b>software</b> <b>packages.</b> Data analysis is implemented in several ways: graphs data analyzed with Wonderware Historian <b>software</b> <b>package,</b> logical data processing and calculation implemented through Wonderware System Platform and Wonderware MES <b>software</b> <b>packages,</b> graphical representation is realized with Wonderware Intouch <b>software</b> <b>package.</b> End-user data are available through Wonderware Information Studio <b>software</b> <b>package...</b>|$|R
40|$|Evaluating and {{selecting}} <b>software</b> <b>packages</b> {{that meet}} an organization's requirements {{is a difficult}} software engineering process. Selection of a wrong <b>software</b> <b>package</b> can {{turn out to be}} costly and adversely affect business processes. The aim {{of this paper is to}} provide a basis to improve the process of evaluation and selection of the <b>software</b> <b>packages.</b> This paper reports a systematic review of papers published in journals and conference proceedings. The review investigates methodologies for selecting <b>software</b> <b>packages,</b> <b>software</b> evaluation techniques, software evaluation criteria, and systems that support decision makers in evaluating <b>software</b> <b>packages.</b> The key findings of the review are: (1) analytic hierarchy process has been widely used for evaluation of the <b>software</b> <b>packages,</b> (2) there is lack of a common list of generic software evaluation criteria and its meaning, and (3) there is need to develop a framework comprising of software selection methodology, evaluation technique, evaluation criteria, and system to assist decision makers in software selection. (C) 200...|$|R
30|$|All {{numerical}} simulations and bifurcation diagrams (both one- and two-parameter) {{are constructed}} using the XPPAUT <b>software</b> <b>package</b> [26], using the Runge-Kutta integration method, and computer codes can be downloaded from the following website: [URL] The surface in Figure 9 was constructed using the AUTO <b>software</b> <b>package</b> [27]. All graphics were produced with the <b>software</b> <b>package</b> MATLAB.|$|R
30|$|This section {{presents}} the hardware design, software design, and choice technologies. The hardware {{is an open}} hardware and the <b>software</b> <b>packages</b> used are FLOSS (Free/Libre/Open Source <b>Software)</b> <b>packages.</b>|$|R
50|$|Dependency hell is a colloquial {{term for}} the {{frustration}} of some software users who have installed <b>software</b> <b>packages</b> which have dependencies on specific versions of other <b>software</b> <b>packages.</b>|$|R
40|$|In surveying, volume calculating is {{commonly}} used. Frequently we use cross-section method. Usually terestrical method {{is used to}} determine characteristic points of crosssections. Observations we make on field need to be processed in <b>software</b> <b>packages</b> in order to calculate volume of an object. The calculated volumes may {{vary depending on the}} density of measured cross-sections and selection of <b>software</b> <b>package.</b> In this thesis, we compared the course of processing in <b>software</b> <b>packages</b> and volume differences, which we obtained using different <b>software</b> <b>packages</b> and different density of measured cross-sections...|$|R
5000|$|A large {{proportion}} of free statistical <b>software</b> <b>packages,</b> however, are from individuals. Some of these <b>software</b> <b>packages</b> from individuals include Easyreg, MicrOsiris, [...] OpenStat, PSPP, SOFA, Zelig. and DataMelt ...|$|R
5000|$|Deltek Costpoint is {{a project}} {{accounting}} <b>software</b> <b>package</b> sold by Deltek. Costpoint is the [...] "high-end" [...] of the three main project accounting <b>software</b> <b>packages</b> sold by the company.|$|R
40|$|Abstract — MATLAB is {{at present}} {{among the best}} {{available}} technique for image processing. Medical images after digitalized processed can help {{reducing the number of}} false positives and they assist medical officers in deciding between follow-up and biopsy. This paper gives a survey of image processing algorithms that have been developed for detection of masses and segmentation techniques. 35 students from university campus participated in the Development of Biomedical Image Processing <b>Software</b> <b>Package</b> for New Learners Survey investigating the use of <b>software</b> <b>package</b> for processing and editing image. Composed of 19 questions, the survey built a comprehensive picture of the <b>software</b> <b>package,</b> programming language, workflow of the tool and captured the attitudes of the respondents. The result of this study shows that MATLAB is among the famous <b>software</b> <b>package</b> and this result is expected to be beneficial and able to assist users on effective image processing and analysis in a newly developed <b>software</b> <b>package.</b> Keywords- MATLAB; image processing; image editting; <b>software</b> <b>package.</b> 1...|$|R
40|$|The {{purpose of}} the study was to assess the {{reliability}} of (semi-) automatic left ventricular (LV) function measurements using three different <b>software</b> <b>packages</b> on the same dual-source computed tomography (DSCT) datasets and to compare agreement among the <b>software</b> <b>packages.</b> Forty consecutive patients, undergoing cardiac DSCT were included (31 men, mean age 58 +/- 14 years). LV function analysis was performed with all three <b>software</b> <b>packages.</b> ANOVA testing was used to determine the difference among the repeated measurements and the difference among the <b>software</b> <b>packages.</b> Bland-Altman plots were computed to describe the agreement among the <b>software</b> <b>packages.</b> No significant difference was found among the repeated measurements. In the comparison of the three <b>software</b> <b>packages,</b> a significant difference was observed when measurements were used with minimal user interaction. When end-diastolic and end-systolic phases were manually set, there was no overall significant difference, but in 12. 5 % of patients a large (> 10 %) difference in LVEF was found. All three <b>software</b> <b>packages</b> have good intraobserver variability, but the results of the three packages were significantly different. For clinical use, one should be aware of the clinical impact of possible segmentation flaws when (semi-) automatic LV function assessment is used...|$|R
5000|$|... eXpressDSP is a <b>software</b> <b>package</b> {{produced}} by Texas Instruments. This <b>software</b> <b>package</b> is {{a suite of}} tools used to develop applications on Texas Instruments Digital Signal Processing line of chips.|$|R
30|$|Statistically {{significant}} differences in SUV measurements, between the two <b>software</b> <b>packages,</b> ranging from 9 to 21.8 % were found depending on ROI location. In 79 % (n[*]=[*] 23) of the ROI locations, {{the differences between the}} SUV measurements from each <b>software</b> <b>package</b> were found to be statistically significant. The time taken to perform the analyses and export data from the <b>software</b> <b>packages</b> also varied considerably.|$|R
30|$|We {{used the}} normal {{databases}} {{provided in the}} <b>software</b> <b>packages.</b> Both Wolak et al. [6] and Guner et al. [7] found that the application of an institutional normal database did not significantly improve {{the performance of the}} software. Furthermore, to our knowledge, most clinical users of the <b>software</b> <b>packages</b> use a normal database provided by the vendor and not their own institutional normal database. We wanted the results to reflect the performance of the <b>software</b> <b>packages</b> in clinical routine and we therefore used the same normal databases that are available to other users of the <b>software</b> <b>packages.</b>|$|R
40|$|A {{major problem}} with the {{undergraduate}} mechanical course is the limited exposure of students to <b>software</b> <b>packages</b> coupled with the long learning curve on the existing <b>software</b> <b>packages.</b> This work proposes the use of appropriate <b>software</b> <b>packages</b> for the entire mechanical engineering curriculum to ensure students get sufficient exposure real life design problems. A variety of <b>software</b> <b>packages</b> are highlighted as being suitable for undergraduate work in mechanical engineering, e. g. simultaneous non-linear equations; uncertainty analysis; 3 -D modeling software with the FEA; analysis tools for the solution of problems in thermodynamics, fluid mechanics, mechanical system design, and solid mechanics...|$|R
