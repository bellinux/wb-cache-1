5|114|Public
40|$|Certificates {{are used}} in many applications. These {{certificates}} issued by a certificate authority must be checked by a relying party, {{in order to establish}} a chain of trust. One task thereby is to check whether certificates are revoked. In the SSL-enabled Apache server this is done by <b>checking</b> <b>certificate</b> revocation lists (CRL). We present a service which can check the status for a certificate online over OCSP, instead of accessing static files. A prototype is implemented for the Apache module mod ssl using the OCSP protocol towards a validation authority service...|$|E
40|$|Abstract. A {{certificate}} of (un) satisfiability for a quantified Boolean formula (QBF) represents concrete assignments to the variables, which act as witnesses for its truth value. Certificates are highly requested for practical applications of QBF like formal verification and model checking. We present an integrated {{set of tools}} realizing resolution-based certificate extraction for QBF in prenex conjunctive normal form. Starting from resolution proofs produced by the solver DepQBF, we describe the workflow consisting of proof <b>checking,</b> <b>certificate</b> extraction, and certificate checking. We implemented the steps of that workflow in stand-alone tools and carried out comprehensive experiments. Our results demonstrate the practical applicability of resolution-based certificate extraction. ...|$|E
40|$|Seth et al. [2] have {{proposed}} a security architecture for DTNs based on IBC. They argue that traditional PKI is not well suited for disconnected environments, such as DTNs, since access to online servers for fetching public keys and <b>checking</b> <b>certificate</b> revocation lists cannot be assumed. They use a variation of IBC known as hierarchical identity based cryptography (HIBC) [6] in which different regions have subregions each maintaining their own PKGs. The messages sent from user of one PKG to a user of another PKG are authenticated and protected using the trust relations between PKGs and standard techniques of HIBC. The identifier of a principal can be based on existing well-known identifiers such as e-mail addresses. Seth et al. do not describe how a PKG can verify whether a new principal does indeed {{have the right to}} a well-known identifier: for example, they assume that authorized distribution agents like kiosks can somehow authenticate principals and issue credentials in USB sticks which they can use to enroll with the PKG...|$|E
5000|$|Online Certificate Status Protocol (OCSP) / {{certificate}} revocation list (CRL) — {{this is to}} <b>check</b> <b>certificate</b> revocation status.|$|R
5000|$|Australian Criminal Intelligence Commission ACIC allows organisations {{to provide}} National Police History <b>Check</b> <b>certificates</b> on ASIC's behalf. Some of {{these can be}} {{obtained}} online (such as Veritas), and later verified online.|$|R
50|$|The Association's {{constitution}} and rules {{were distributed to}} the schools, certificates of eligibility were furnished and a system of <b>checking</b> <b>certificates</b> inaugurated. The only statewide activity sponsored by the Association was the basketball championships. The tournament in March 1928, with 16 boys and girls district representatives, {{was held at the}} Stockyards Coliseum in Oklahoma City under the direct supervision of the OHSSA staff for the first time.|$|R
40|$|This legal writing {{entitled}} THE TASK AND FUNCION OF LAND CERTIFICATE ISSUER IN IT APPLICATION OF MAKING LAND RIGHT CERTIFICATE ON THE WAY TO CREATE ORDERLY OF LAND ADMINISTRASION IN MANOKWARI REGENCY THE PROVINCE OF PAPUA BARAT, With set law {{problem is}} : what is task {{and function of}} land certificate issuer in it application of making land administrasion in Manokwari regency the province of Papua Barat have been orderly of land administrasion? The legal writing is a law empirical research. Conclution of this legal writing is task and function at land certificate issuer in Manokwari regency and it application of making trading land right certificate has shown the orderly of land administrasion, by <b>checking</b> <b>certificate</b> uniformity first to land right trading. To give services to society specially land matter, chief of land affair office as a cultivator that interrelated with task and function of land issuer should increase the frequency training for land certificate issuer. Specially for temporary land certificate issuer about land law {{in order to create}} right arrangement and procedure of land registrasion. So it could increase land certificate issuer service to the society...|$|E
40|$|The {{amount of}} {{information}} produced in the last decades has grown notably. Much of this information only exists {{in the form of}} electronic documents and it has often to be stored for long periods. Therefore, digital archives are increasingly needed. However, for the documents to remain trustworthy while they are archived, they need to be protected by the archivists. Important protection goals that must be guaranteed are integrity, authenticity, non-repudiation, and proof of existence. To address these goals, several protection schemes for digital archives have been designed. These schemes are usually based on cryptographic primitives, namely digital signatures and hash functions. However, since documents can be archived for decades or even indefinitely, the used cryptographic primitives can become insecure during the archival time. This is a serious issue because it can be exploited by attackers to compromise the protection goals of the archived documents. Therefore, a requirement for long-term protection schemes is to address the aging of cryptography, i. e. replacing the used primitives properly before they become insecure. In this work we analyze and improve long-term protection schemes for digital archives. More precisely, we aim at answering three questions. (1) How do long-term protection schemes compare with respect to trustworthiness? (2) How do they differ in performance? (3) Can new schemes be designed, which generate more efficient and trustworthy evidence needed to establish the protection goals? Although several protection schemes {{can be found in the}} literature, many of them fail in addressing the aging of cryptography. Therefore, our first step is to identify which existing schemes provide long-term protection with respect to integrity, authenticity, non-repudiation, and proof of existence. Afterwards, to answer question (1) we analyze the trustworthiness of the long-term protection schemes using two approaches. In the first approach, we initially identify the required trust assumptions. Then, based on these assumptions, we compare the protection schemes. In the second approach, we turn to quantifying the trustworthiness of the evidence generated by time-stamping and notarial schemes. To this end, we use a belief trust model and design a reputation system. This leads to two further, more detailed answers to question (1). First, that trustworthiness depends on the reputation of the involved parties rather than the protection schemes themselves. Second, the trustworthiness of evidence tends to degrade in the long term. Therefore, we propose to use the reputation system to create incentives for the involved parties to build good reputation. This raises the trustworthiness of generated evidence, hence addressing question (3). Next, we address question (2) by analyzing how schemes differ in performance using an analytical evaluation and experiments. More precisely, we measure the times needed to create and verify evidence, the space required to store evidence, and the communication necessary to generate evidence. Moreover, this analysis shows that while verifying evidence most of the time is spent on <b>checking</b> <b>certificate</b> chains. The findings in the performance analysis provide us with directions for addressing question (3). We propose three new solutions that provide more efficient evidence. The first solution is a new notarial scheme that generates smaller evidence and that communicates less data than the existing notarial scheme. Novelties in our scheme include balancing the numbers of signatures that users and notaries verify, and using notaries as time-stamp authorities to provide proof of existence. The second solution is based on the time-stamping scheme Content Integrity Service (CIS) and allows for faster evidence verification. To the best of our knowledge, CIS is the only scheme designed for an archive where documents are submitted and time-stamped sequentially but share the same sequence of time-stamps. However, in this case the validities of several time-stamps in this sequence may overlap. Consequently, many of these time-stamps need not be checked when verifying the time-stamp sequence for one document. We address this issue in our new scheme by using a data structure called skip list. The result is a time-stamp sequence where users can skip the time-stamps that are not necessary to guarantee the protection goals of one document. Using an analytical evaluation and experiments, we show that our scheme is notably faster than CIS. The third solution is intended to reduce time spent on <b>checking</b> <b>certificate</b> chains when verifying evidence generated by time-stamping schemes. More precisely, we improve an existing public key infrastructure-based solution where the root certification authority generates smaller verification information for time-stamps. This verification information can be used to replace the certificate chains needed to verify time-stamps. However, this solution requires extra work from time-stamp authorities and the root certification authority, especially when the number of time-stamps grows significantly. In our solution, this issue is addressed such that this extra work is independent of the number of time-stamps. Using an analytical evaluation we demonstrate the advantage of our solution. Finally, we provide our conclusions and future work. In this thesis we design new solutions that allow for more efficient and trustworthy evidence of protection for archived documents. As future work, we suggest conducting more research in the direction of developing methods that address the decay of the trustworthiness of evidence over time...|$|E
40|$|Proof Carrying Code (PCC) is a {{technique}} for downloading mobile code on a host machine while ensuring that the code adheres to the host's security policy. We show how certified abstract interpretation {{can be used to}} build a PCC architecture where the code producer can produce program certificates automatically. Code consumers use proof checkers derived from certified analysers to <b>check</b> <b>certificates.</b> Proof checkers carry their own correctness proofs and accepting a new proof checker amounts to type checking the checker in Coq. The <b>checking</b> of <b>certificates</b> is accelerated by {{a technique}} for (post-) fixpoint compression. The PCC architecture has been evaluated experimentally on a byte code language for which we have designed an interval analysis that allows to generate certificates ascertaining that no array-out-of-bounds accesses will occur...|$|R
2500|$|Multiple-user (shared) {{access to}} {{encrypted}} files (on a file-by-file basis) and revocation <b>checking</b> on <b>certificates</b> used when sharing encrypted files ...|$|R
50|$|MSUFCU offers {{products}} and services including various savings accounts, <b>checking</b> accounts, <b>certificates,</b> Individual Retirement Accounts (IRAs), personal loans, mortgages, Visa lines-of-credit, and business accounts and loans.|$|R
40|$|In {{this paper}} we compare the {{performance}} of all the currently available suites to evaluate and certify QBFs. Our aim is to assess {{the current state of}} the art, and also to understand to which extent QBF en- codings can be evaluated producing certificates that can be checked in a reliable and efficient way. We con- clude that, while the evaluation of some QBFs is still an open challenge, producing and <b>checking</b> <b>certificates</b> for many medium-to-large scale QBFs is feasible with the current technology...|$|R
5000|$|Drake {{began with}} the office as deputy and {{eventually}} became director. She directed race-flagging: she would <b>check</b> birth <b>certificates</b> that bore surnames common to blacks. If the baby was listed as white, she directed workers to <b>check</b> the <b>certificate</b> against a [...] "race list" [...] maintained by the Vital Records Office. If the name appeared on the [...] "race list,”" [...] the Vital Records Office conducted a further study of its genealogical records to reach its own assessment of {{the race of the}} individual and family. pp. 37-38 ...|$|R
40|$|Satisfiability Modulo Theories (SMT) {{techniques}} {{are widely used}} nowadays. SMT solvers are typically used as verification backends. When an SMT solver is invoked, it is quite important to ensure the correctness of its results. To address this problem, we propose a unified certificate framework based on DPLL(T), including a uniform certificate format, a unified certificate generation procedure, and a unified <b>certificate</b> <b>checking</b> procedure. The <b>certificate</b> format is shown to be simple, clean, and extensible to different background theories. The certificate generation procedure is well adapted to most DPLL(T) -based SMT solvers. The soundness and completeness for DPLL(T) + certificates were established. The <b>certificate</b> <b>checking</b> procedure is straightforward and efficient. Experimental {{results show that the}} overhead for certificates generation is only 10 %, which outperforms other methods, and the <b>certificate</b> <b>checking</b> procedure is quite time saving...|$|R
40|$|Abstract. We {{introduce}} program <b>checking</b> with <b>certificates</b> {{by extending}} the traditional notion of black-box program checking. Moreover, we establish program <b>checking</b> with <b>certificates</b> as a safety-scalable and practical method {{to ensure the}} correctness of real-scale applications. We motivate our extension of program checking with concepts of computational complexity theory and show its practical implication on the implementation and verification of checkers. Furthermore, we present an iterative method to construct checkers which is {{able to deal with}} the practically relevant problem of incomplete or missing specifications of software. In our case study, we have considered compilers and their generators, in particular code generators based on rewrite systems...|$|R
40|$|Automatic provers {{that can}} produce proof {{certificates}} {{do not need to}} be trusted. The <b>certificate</b> can be <b>checked</b> by an independent tool, for example an LCF-style proof assistant such as Isabelle/ HOL or HOL 4. Currently, the design of proof formats is mostly dictated by internal constraints of automatic provers and less guided by applications such as <b>checking</b> of <b>certificates.</b> In the worst case, checking can be as involved as the actual proof search simply because important information is missing in the proof certificate. To address this and other issues, we describe design choices for proof formats that we consider both feasible for implementors of automatic provers as well as effective to simplify <b>checking</b> of <b>certificates.</b> ...|$|R
40|$|Abstract: We {{evaluate}} {{the use of}} program checking to ensure the correctness of compiler implementations. Our contributions in this paper are threefold: Firstly, we extend the classical notion of black-box program checking to program <b>checking</b> with <b>certificates.</b> Our <b>checking</b> approach with <b>certificates</b> relies on the observation that the correctness of solutions of NP-complete problems can be checked in polynomial time whereas their computation itself {{is believed to be}} much harder. Our second contribution is the application of program <b>checking</b> with <b>certificates</b> to optimizing compiler backends, in particular code generators, thus answering the open question of how program checking for such compiler backends can be achieved. In particular, we state a checking algorithm for code generation based on bottom-up rewrite systems from static single assignment representations. We have implemented this algorithm in a checker for a code generator used in an industrial project. Our last contribution in this paper is an integrated view on all compiler passes, in particular a comparison between frontend and backend phases, with respect to the applicable methods of program checking...|$|R
50|$|In 1968, UIECU {{began the}} Illinois Guaranteed Loan Program {{in order to}} help members acquire loans for their children's college tuition. In 1973, they began {{offering}} payroll deduction. Soon after, they added share draft <b>checking</b> accounts, <b>certificates,</b> IRAs, second mortgages, and money market accounts.|$|R
50|$|X.509 also {{includes}} standards for certificate revocation list (CRL) implementations, an often neglected aspect of PKI systems. The IETF-approved way of <b>checking</b> a <b>certificate's</b> validity is the Online Certificate Status Protocol (OCSP). Firefox 3 enables OCSP checking by default, as do versions of Windows {{from at least}} Vista and later.|$|R
50|$|Like other {{financial}} institutions, PMCU offers products that include savings accounts, <b>checking</b> accounts, <b>certificates,</b> consumer loans, mortgages, home equitys, lines of credits, credit cards, online banking, {{as well as}} some small business services. Pacific Marine Credit Union also offers more extensive investment services, online brokerage services, and insurance through Pacific Marine Financial Group.|$|R
40|$|Proof-Carrying Code (PCC) is a {{technique}} for downloading mobile code on a host machine while ensuring that the code adheres to the host's safety policy. We show how certified abstract interpretation {{can be used to}} build a PCC architecture where the code producer can produce program certi cates automatically. Code consumers use proof checkers derived from certi ed analysers to <b>check</b> <b>certificates.</b> Proof checkers carry their own correctness proofs and accepting a new proof checker amounts to type checking the checker in Coq. Certi cates take the form of strategies for reconstructing a xpoint and are kept small due to {{a technique}} for fixpoint compression. The PCC architecture has been implemented and evaluated experimentally on a byte code language for which we have designed an interval analysis that allows to generate certificates ascertaining that no array-out-of-bounds accesses will occur...|$|R
50|$|The Department of Motor Vehicles (DMV) sends a {{registration}} renewal notice {{which indicates}} if a smog check is required. If the DMV requires a smog {{check for a}} vehicle, the owner must comply with the notice within 90 days and provide a completed smog <b>check</b> <b>certificate.</b> Until a smog certificate can be provided registration will not be renewed. If the vehicle fails the smog check, the owner {{will be required to}} complete all necessary repairs and pass a smog check retest in order to complete the registration. If the costs of repairing the vehicle outweigh its value, the state may buy it and have it scrapped. The buyback program is part of California’s Consumer Assistance Program (CAP) that also offers consumer assistance for repairs related to smog check. The program is administered by the Bureau of Automotive Repair.|$|R
25|$|Peter Luger Steak House only accepts cash, US debit cards, US <b>checks,</b> {{restaurant}} gift <b>certificates</b> or Peter Luger {{credit cards}} as form of payment; regular {{credit cards are}} not accepted.|$|R
40|$|Photograph {{used for}} {{a story in the}} Oklahoma Times newspaper. Caption: "Receiving a <b>check</b> and <b>certificate</b> {{recognizing}} him for his superior performance for a sustained period of time is A. B. Stevens, center, chief medical technical assistant at El Reno Reformatory. Warden L. B. Stevens, left, makes the presentation as L. C. Floyd, chief medical officer who recommended Stevener for the honor, looks on. ...|$|R
40|$|International audienceIt is the {{exception}} that provers share and trust each others proofs. One {{reason for this is}} that different provers structure their proof evidence in remarkably different ways, including, for example, proof scripts, resolution refutations, tableaux, Herbrand expansions, natural deductions, etc. In this paper, we propose an approach to foundational proof certificates as a means of flexibly presenting proof evidence so that a relatively simple and universal proof checker can <b>check</b> that a <b>certificate</b> does, indeed, elaborate to a formal proof. While we shall limit ourselves to first-order logic in this paper, we shall not limit ourselves in many other ways. Our framework for defining and <b>checking</b> proof <b>certificates</b> will work with classical and intuitionistic logics and with proof structures as diverse as resolution refutations, matings, and natural deduction...|$|R
50|$|A TLS server may be {{configured}} with a self-signed certificate. When {{that is the}} case, clients {{will generally}} be unable to verify the certificate, and will terminate the connection unless <b>certificate</b> <b>checking</b> is disabled.|$|R
50|$|Where an {{individual}} has subscribed, the employer will not need {{to apply for a}} new certificate, but will be able to quickly perform an instant, online free check that the existing certificate is up to date. Under best practice the employer should check the applicant's identity to ensure that the certificate belongs to that individual, <b>check</b> the <b>certificate</b> is genuine and obtain consent to run a DBS update service check.|$|R
40|$|International audienceCloud {{computing}} {{is introducing}} an architectural paradigm shift that involves {{a large part}} of the IT industry. The flexibility in allocating and releasing resources at runtime creates new business opportunities for service providers and their customers. However, despite its advantages, cloud computing is still not showing its full potential. Lack of mechanisms to formally assess the behavior of the cloud and its services/processes, in fact, negatively affects the trust relation between providers and potential customers, limiting customer movement to the cloud. Recently, cloud certification has been proposed as a means to support trustworthy services by providing formal evidence of service behavior to customers. One of the main limitations of existing approaches is the uncertainty introduced by the cloud on the validity and correctness of existing certificates. In this paper, we present a trustworthy cloud certification approach based on model verification. Our approach <b>checks</b> <b>certificate</b> validity at runtime, by continuously verifying the correctness of the service model at the basis of certification activities against real and synthetic service execution traces...|$|R
5000|$|... cryptlib {{provides}} other capabilities including full X.509/PKIX certificate handling (all X.509 versions from X.509v1 to X.509v4) {{with support}} for SET, Microsoft AuthentiCode, Identrus, SigG, S/MIME, SSL, and Qualified certificates, PKCS #7 certificate chains, handling of certification requests and CRLs (certificate revocation lists) including automated <b>checking</b> of <b>certificates</b> against CRLs and online checking using RTCS and OCSP, and issuing and revoking certificates using CMP and SCEP. It also implements {{a full range}} of certification authority (CA) functions provides complete CMP, SCEP, RTCS, and OCSP server implementations to handle online certificate enrolment/issue/revocation and <b>certificate</b> status <b>checking.</b> Alongside the <b>certificate</b> handling, it provides a sophisticated key storage interface that allows the use {{of a wide range of}} key database types ranging from PKCS #11 devices, PKCS #15 key files, and PGP/OpenPGP key rings through to commercial-grade RDBMS' and LDAP directories with optional SSL protection.|$|R
40|$|A. Travelers Checks Defined 1. Courts have {{variously}} described travelers <b>checks</b> as <b>certificates</b> of deposit, negotiable instruments, securities, cash, and cashier 2 ̆ 7 s checks. 2. The most persuasive analysis {{seems to}} treat travelers checks as cashier 2 ̆ 7 s checks {{on which the}} issuer is both the drawer and the drawee, the purchaser once he has countersigned is the payee, and both the purchaser and the next recipient are indorsers...|$|R
5000|$|Recently criticisms {{arose in}} the local media {{concerning}} the health regulation in swimming pool, including WIPE's natatorium. Critics said local swimming pools lacked proper sanitation of water, and inadequately <b>checked</b> Health <b>Certificate</b> of visitors as was required by law. One of the employees here contended that“财力有限，若配备专业医生，费用难承担；并且，根据业内“潜规则”：游泳是不需要《健康证》的。”Roughly Translated as: With limited wherewithal, a doctor can't be afforded; moreover, according to intra-industry hidden rules, {{there is no need}} of Health Certificate beforehand to swim.|$|R
5000|$|Knuth reward {{checks are}} <b>checks</b> or check-like <b>certificates</b> awarded by {{computer}} scientist Donald Knuth for finding mathematical errors, or making substantial suggestions for his publications. The MIT Technology Review describes the checks as [...] "among computerdom's most prized trophies".|$|R
50|$|On {{the night}} of 28 to 29 January 2014 Russia {{tightened}} customs control procedures. This was stated by the Association of International Road Carriers and Federation of Employers of Ukraine. Almost all cargoes going from Ukraine to Russia, now have to be carefully checked. The carrier must unload all products at the border at his own expense. Then they must be weighted, <b>checked</b> for <b>certificates</b> of conformity. The whole procedure of the registration can last up to 15 days.|$|R
40|$|Critical to the {{security}} of any public key infrastructure (PKI) is the ability to revoke previously issued certificates. While the overall SSL ecosystem is well-studied, the fre-quency with which certificates are revoked and the circum-stances under which clients (e. g., browsers) <b>check</b> whether <b>certificates</b> are revoked are still not well-understood. In this paper, we {{take a close look at}} certificate revoca-tions in the Web’s PKI. Using 74 full IPv 4 HTTPS scans, we find that a surprisingly large fraction (8 %) of the certifi-cates served have been revoked, and that obtaining certifi-cate revocation information can often be expensive in terms of latency and bandwidth for clients. We then study the revocation checking behavior of 30 different combinations of web browsers and operating systems; we find that browsers often do not bother to <b>check</b> whether <b>certificates</b> are re-voked (including mobile browsers, which uniformly never check). We also examine the CRLSet infrastructure built into Google Chrome for disseminating revocations; we find that CRLSet only covers 0. 35 % of all revocations. Overall, our results paint a bleak picture of the ability to effectively revoke certificates today...|$|R
25|$|In {{other systems}} the client {{hopes that the}} first time it obtains a server's {{certificate}} it is trustworthy and stores it; during later sessions with that server, the client <b>checks</b> the server's <b>certificate</b> against the stored certificate to guard against later MITM attacks.|$|R
40|$|This paper {{analyzes}} the SSL/TLS procedures and defines the functionality of a monitoring/auditing entity {{running in parallel}} with the protocol, which is decoding, <b>checking</b> the <b>certificate</b> and permitting session establishment based on the decoded certificate information, the network addresses of the endpoints and a predefined access list. Finally, this paper discusses how such a facility {{can be used for}} detection impersonation attempts in Health Care applications and provides case studies to show the effectiveness and applicability of the proposed method...|$|R
