31|132|Public
2500|$|The command {{communications}} system (CCS) provided for digital data transmission from ground stations to the LVDC. This communications link {{was used to}} update guidance information or command certain other functions through the LVDC. Command data originated in the Mission Control Center, Houston, and was sent to remote stations for transmission to the launch vehicle. [...] <b>Command</b> <b>messages</b> were transmitted from the ground at 2101.8MHz. The received message was passed to the command decoder (location 18), where it was checked for authenticity before being passed to the LVDC. Verification of message receipt was accomplished through the IU PCM telemetry system. The CCS system used five antennas: ...|$|E
50|$|The FOX {{messaging}} system simplifies the GUI update strategy: during widget update, the widgets can ask from their targets to update them. This {{means that a}} command message does not also have to explicitly update any widgets as it is typical. In case an application implements N <b>command</b> <b>messages</b> each updating M widgets, then M*N updates must be executed and at most M*N messages must be implemented. On the other hand, if widgets request for update, only N <b>command</b> <b>messages</b> and at most M update messages are implemented. This strategy separates the GUI update from data changes, making the GUI a real-time reflection of the underlying data structures.|$|E
50|$|The shuttle vehicle had two RSSs, {{one in each}} SRB. Both {{were capable}} of {{receiving}} two <b>command</b> <b>messages</b> (arm and fire) transmitted from the ground station. The RSS was used only when the shuttle vehicle violates a launch trajectory red line.|$|E
50|$|Application layer {{message format}} {{consists}} of <b>Command</b> Initiator <b>messages</b> (request <b>messages)</b> and <b>Command</b> Executor (reply <b>messages).</b> Important <b>command</b> initiator <b>messages</b> are as follows.|$|R
5000|$|... byte #8 (0x14) = Message Type ID - 0x14 (20) defines an AMF0 encoded <b>command</b> <b>message.</b>|$|R
5000|$|Before <b>commands,</b> <b>messages</b> {{contain a}} header specifying various data regardingthe transaction. An example message {{containing}} the [...] commandfor begin a refresh synchronization, {{like in the}} previous example, is: ...|$|R
5000|$|The [...] "E" [...] (Error) bit - If set, {{the message}} {{contains}} a protocol error, {{and the message}} will not conform to the CCF described for this <b>command.</b> <b>Messages</b> with the [...] "E" [...] bit set are {{commonly referred to as}} error messages. This bit MUST NOT be set in request messages.|$|E
5000|$|Some of {{the message}} types shown above, such as Ping and Set Client/Server Bandwidth, are {{considered}} low level RTMP protocol messages which do not use the AMF encoding format. <b>Command</b> <b>messages</b> on the other hand, whether AMF0 (Message Type of 0x14) or AMF3 (0x11), use the format and have the general form shown below: ...|$|E
50|$|Control: Control {{refers to}} sending <b>command</b> <b>messages</b> to {{a device to}} operate the I&C and power-system devices. Traditional {{supervisory}} control and data acquisition (SCADA) systems rely on operators to supervise the system and initiate commands from an operator console on the master computer. Field personnel can also control devices using front-panel push buttons or a laptop computer.|$|E
50|$|Robotics.NXT is a Haskell {{interface}} to NXT over Bluetooth. It supports direct <b>commands,</b> <b>messages</b> {{and many}} sensors (also unofficial). It has also {{support for a}} simple message-based control of a NXT brick via remotely executed program (basic NXC code included).|$|R
30|$|BO {{reduction}} at neighboring coordinators {{is performed}} {{prior to the}} arrival of mobile node in their cluster. In PRA, the parent coordinator broadcasts this BO information using decrease beacon interval (DBI) <b>command</b> <b>message</b> [15]. DBI message is transmitted by the coordinator because of the following reasons. Firstly, in WPANs, RFDs have limited energy resources and conserving energy is the most important objective. Therefore, coordinator (FFD) transmits DBI message instead of RFD. Secondly, in beacon-enabled IEEE 802.15. 4 networks, during re-association, RFDs discover the network using passive scan and do not explicitly request for beacons. Since PRA complements and optimizes the performance of beacon-enabled IEEE 802.15. 4, transmission of DBI messages by RFDs is not appropriate. Lastly, the coordinator performs PRD; thus, it transmits the DBI <b>command</b> <b>message.</b>|$|R
30|$|The MAG i {{employs the}} {{received}} loads {{information from the}} candidate MAGs and the domain number to choose the TMAG, which the HMN will move to as described in Section 2.2. Subsequently, a Handover <b>Command</b> <b>Message</b> (HCM) is sent by the MAG i to the HMN.|$|R
50|$|Axis {{occupation}} {{forces in}} Yugoslavia used radio communication extensively. In addition to German Abwehr, Sicherheitsdienst, Luftwaffe, Naval, railway, Army group and High <b>Command</b> <b>messages,</b> GC&CS intercepted and decrypted Yugoslav partisan communications with Comintern {{and with the}} Soviet Union. Cairncross first in Hut 3, then later at MI6 HQ, had access to raw decrypts. Communications from Comintern to Tito supplying some of this intelligence strongly suggests that he passed decrypts concerning Yugoslavia to the KGB.|$|E
5000|$|Optomux [...] is {{a serial}} (RS-422/RS485) network {{protocol}} originally developed by Opto 22 in 1982 {{which is used}} for industrial automation applications. Optomux is an ASCII protocol consisting of <b>command</b> <b>messages</b> and response messages containing data from an Optomux unit & contain a message checksum to ensure secure communications. The serial data link is very reliable, over distances up to 4,000 feet and is suitable for extreme safety applications. An Optomux system is typically made up of three main elements: ...|$|E
50|$|Despite the {{seemingly}} erratic process {{of playing the}} game, players have attempted to collaborate and strategize through various means, including infographics and a user script which hides <b>command</b> <b>messages</b> from the chat window to allow conversation. This was necessary for the players to progress as several areas of the game require coordinated actions to gain Pokémon with a specific skill needed to clear obstacles in Red's way, and earlier attempts without such coordination resulted in missing out on specific opportunities {{early on in the}} playthrough. In essence, the majority of players have attempted to counteract trolls trying to impede progress. A computer program was even created to automatically identify these trolls.|$|E
50|$|Easy to {{understand}} message scripts, define simple <b>command</b> <b>message</b> and time format to define <b>message</b> scripts. <b>Commands</b> are “waittosend” and “waittoreceive” and message {{is the message}} to be sent or wait for. Time define how long to wait in case of “waittoreceive” or how long to wait before sending the message.|$|R
50|$|Ciphering is a radio {{resource}} function and managed with messages in the {{radio resource}} sublayer of L3, but ciphering is tied to authentication because the ciphering key Kc is generated in that process. Ciphering is initiated with the RR Ciphering Mode <b>Command</b> <b>message,</b> which indicates the A5 variant to be used. The MS starts ciphering and responds with the RR Ciphering Mode Complete message in ciphertext.|$|R
40|$|Controlling water {{temperature}} and automatic filling water throught {{short message service}} using microcontroller being necessary. This system detects water level and temperature using high water limited sensor, temperature sensor, analog digital converter, interface, handphone, heater driver, and water pump driver. Microcontrolleras central of processing to active the system to make hot water and keep temperature, when get <b>command</b> <b>message</b> from handphone “SET HEATER ON”...|$|R
5000|$|The command {{communications}} system (CCS) provided for digital data transmission from ground stations to the LVDC. This communications link {{was used to}} update guidance information or command certain other functions through the LVDC. Command data originated in the Mission Control Center, Houston, and was sent to remote stations for transmission to the launch vehicle. <b>Command</b> <b>messages</b> were transmitted from the ground at 2101.8 MHz. The received message was passed to the command decoder (location 18), where it was checked for authenticity before being passed to the LVDC. Verification of message receipt was accomplished through the IU PCM telemetry system. The CCS system used five antennas: ...|$|E
40|$|Ordering of <b>command</b> <b>messages</b> {{from the}} clients {{at the game}} servers is an {{important}} issue that impacts fairness, response times, and smoothness of the game play. Recently, protocols based on “reaction ” times were proposed to order the <b>command</b> <b>messages.</b> This paper presents a protocol {{that can be used to}} control cheating in reaction time based message ordering schemes. We examine the performance of the proposed protocol by emulating wide-area game play scenarios on the Planet-Lab. The results from the experiments indicate that the proposed protocol is able to dramatically reduce the cheating opportunities that exist for the clients...|$|E
30|$|Configuration {{messages}} are {{of three different}} types: CFG- 1, CFG- 2 and CFG- 3. CFG- 1 represents the reporting capability of PMU in terms {{of different types of}} data and is of 100 bytes. CFG- 2 gives information about the synchrophasor measurements which are currently being transmitted/reported and it is 100 bytes. CFG- 3 contains some enhanced flexibility and information about characteristics and measurements that are being sent by a PMU and its size is 110 bytes. The header messages which are 18 bytes contain the readable descriptive information sent from PMU/PDC. <b>Command</b> <b>messages</b> control operation of synchrophasor measurement devices and the transmission of data configuration and header messages and has a size of 20 bytes. For example, <b>command</b> <b>messages</b> are ‘data_on’, ‘data_off’, ‘send_header’ etc.|$|E
5000|$|The MSC/VLR sends a Location Updating Accept {{message to}} the BSS. It also generates a new TMSI for the MS. TMSI {{assignment}} {{is a function of}} the VLR. The BSS will either send the TMSI in the LOC_UPD_ACC message or it will send a separate TMSI Reallocation <b>Command</b> <b>message.</b> In both cases, since the Air Interface is now in cipher mode, the TMSI is not compromised.|$|R
30|$|Step 9 : When {{the serving}} MAG {{has done the}} {{selection}} of the closest MAG to the ideal network environment from the ranking preference, the serving MAG starts a load balancing process by sending a handover <b>command</b> <b>message</b> to HMN. In order to select the ideal TMAG, a new load balancing signaling is proposed. In the next section, the new load balancing signaling within the clustered protocols is explained in detail.|$|R
50|$|The <b>commands</b> log <b>messages</b> to an {{administrative}} area, {{which can be}} useful for diagnosing installation issues or just tracking what software is loaded or removed.|$|R
30|$|After {{calculating the}} set of links {{that needs to be}} measured, the host of the {{algorithm}} (generally a laptop) sends <b>command</b> <b>messages</b> to the wireless nodes through the base station node to tell them when to participate in the measurement and when to go to sleep. Therefore, in the real-time system, the nodes have two phases: one for measurement and the other for receiving <b>command</b> <b>messages</b> from the host computer. In the phase of measurement, the nodes are synchronized and time slots are assigned by the following scheme. In 1 cycle of measurement, the total number of slots {{is the same as the}} number of the nodes. Each node is assigned to transmit only in the slot in which the serial number is equal to its node ID number; in other slots, the node either receives messages from another node for measurement the RSS of the link or keeps radio in sleep phase to save power. The packet transmitted by a node includes the ID of the node and the RSS values that it has already measured. In the measurement phase, the base station node receives all the data packets and sends them to the host computer. Hence, when the last node has sent its data packet, the host computer has all the RSS values of the correlated links. Then the wireless node will turn to the second phase. All of them will keep alive and receive <b>command</b> <b>messages</b> from the base station node. Simultaneously, the host computer will use the measured RSS vector to estimate the target’s location with Algorithm 2.|$|E
30|$|Recently, {{advanced}} fire rescue techniques have required sensing of environmental conditions and firefighters’ vitals {{in addition to}} the regular <b>command</b> <b>messages</b> between the firefighters and the commander, who oversees the entire fire rescue operation [5]. The firefighter network usually consists of sensors either planted inside the firefighter uniform or deployed along the path [6]. The sensors continuously sense the environmental conditions and firefighters’ vitals and send these updates to the BS. The firefighters move inside the fire field to find humans to rescue, as well as to extinguish the fire [7].|$|E
40|$|One of the {{key issues}} with online {{multiplayer}} games is game play fairness. In both centralized and decentralized architectures the ordering of <b>command</b> <b>messages</b> from clients for execution {{is an important issue}} that impacts fairness and response time of game play. Recently, a fair-ordered message exchange protocol (FMEP), based on "reaction" times was proposed to order <b>command</b> <b>messages</b> for a client-server model. This thesis presents a cheat controlled protocol (CCP) {{that can be used to}} control cheating in the FMEP. We examined the performance of the CCP by emulating wide-area game play scenarios on the Planet-Lab. The results from the experiments indicate that the CCP is able to dramatically reduce the cheating opportunities that exist for clients. On the other hand, for the decentralized (distributed) model, one approach is to follow a "lock step" scheme that prevents any client from acting upon a message until that message is received by all clients. In this thesis, we present a fair synchronization protocol (FSP) that enforces fairness and is more efficient than the lock-step scheme. The basic FSP is susceptible to cheating. Therefore, we added a cheat prevention mechanism as an enhancement. We implemented the enhanced protocol, the Cheat Proof Protocol (CPP), on the Planet-Lab and studied the performance under the same game play scenarios used for the CCP. The results indicate that the CPP is effective in enforcing fairness and cheat prevention...|$|E
50|$|Without {{parameters}} {{the will}} display the current {{list of the}} directories.Editing %DPATH% environment variable also can be used.DPATH /? will print the APPEND <b>command</b> help <b>message.</b>|$|R
40|$|SmallSync, an {{internet}} event synchronizer, {{is intended to}} provide a monitoring and visualization methodology for permitting simultaneous analysis and control of multiple remote processes on the web. The current SmallSync includes: (1) a mechanism to multicast web window-based <b>commands,</b> <b>message</b> passing events and process execution events among processes; (2) an event synchronizer to allow concurrent execution of some functions on multiple machines; (3) a means to report when these events cause errors in the processes; and (4) ad hoc visualization of process states using existing visualizers...|$|R
5000|$|An {{improved}} Conversation View groups messages {{by their}} subjects {{regardless of their}} originating folders. Additionally, a new Ignore <b>command</b> deletes all <b>messages</b> in a conversation and sends all future replies to the Deleted Items folder, while a new Clean Up <b>command</b> deletes all <b>messages</b> but the most recent.|$|R
40|$|Abstract — Existing {{plans for}} home {{networks}} {{are aimed at}} the short to medium term and postulate that TCP/IP will extend to home networks. This view may be unsustainable in the long term, with increasing network diversity. This paper proposes a network/transport home network protocol (HNP) that supports multiple levels of flexibility. Protocol layer fusion is possible through a combined mode or TCP compatibility is preserved with a split mode. Within combined mode simple or flexible sub-modes are possible. HNP introduces device-centric addressing allowing anycast and broadcast to be easily supported. Relative to IP addressing, header overhead is reduced and short <b>command</b> <b>messages</b> are supported. I...|$|E
40|$|Abstract. Mobile {{security}} guard has {{the functions of}} prevention of burglary, software management, process management, cache cleanup, mobile anti virus and intercepting the call and message of blacklisted numbers. The program uses Eclipse + ADT plug-in for development. And implementing the functions of inquiring number attribution and commonly used numbers, and mobile anti virus uses SQL technique to inquire the database. For mobile prevention of burglary, broadcast technology is used to monitor and intercept the message to ensure that common messages and <b>command</b> <b>messages</b> are achieved separately. For intercepting the call and message of blacklisted numbers, reflex mechanism of Java, AIDL, content observer and content provider of Android is used to implement...|$|E
40|$|The {{innermost}} {{part of the}} ATLAS experiment at the LHC, CERN, will be a pixel detector, {{which is}} presently under construction. The <b>command</b> <b>messages</b> and the readout data of the detector are transmitted over an optical data path. The readout chain consists of many components which are produced at several locations around the world, and must work together in the pixel detector. To verify that these parts are working together as expected a system test has been built up. It consists of detector modules, optoboards, optical fibres, Back of Crate cards, Readout Drivers, and control computers. In this paper the system test setup and {{the operation of the}} readout chain is described. Also, some results of tests using the final pixel detector readout chain are given...|$|E
40|$|The {{purpose of}} Operations Nomenclature (OpNom) is to {{document}} methods for denoting all {{hardware and software}} and associated data referenced by operations products produced by the International Space Station (ISS) operations community. This includes Operations Data File (ODF) procedures, ground and onboard displays, mission rules, <b>commands,</b> <b>messages</b> and advisories, planning products, etc. This document applies to all agencies and individuals participating in or contributing to ISS mission operations. Mission operations include ground checkout, training, and simulations, as well as real-time activities. The document also applies to all operations documentation (paper or electronic media) and other products that refer to ISS-related equipment or activities...|$|R
50|$|Service {{granularity}} is both {{an application}} domain concern (business granularity), {{as well as a}} software interface design issue (technical granularity); it is a property of the service contract exposed by a service provider. It pertains to the semantics and syntax of the in (request) and out (response) message content, which can be viewed as instances of two general Enterprise Integration Patterns, <b>Command</b> <b>Message</b> and Document Message. By definition a coarse-grained service operation has broader scope than a fine-grained service, although the terms are relative. The former typically requires increased design complexity but can reduce the number of calls required to complete a task.|$|R
3000|$|... [...]. Without loss of generality, {{we assume}} {{the number of}} cluster {{controllers}} in each cluster is the same. The approach could be extended to other scenarios. The cluster can be modeled as the directed full connection graph G={V, E}, where we let the elements in set V denote the nodes in the graph G and the elements in set E represent the edges in the graph G. In addition, we assume that all of cluster controllers enable {{to go to sleep}} when receiving the centralized configuration <b>command</b> <b>message</b> from super controller, and the sleeping cluster controller enables to awaken itself when its queuing length exceeds a certain value.|$|R
