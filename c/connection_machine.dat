486|181|Public
25|$|In the mid-1980s, Wolfram {{worked on}} {{simulations}} of physical processes (such as turbulent fluid flow) with cellular automata on the <b>Connection</b> <b>Machine</b> alongside Richard Feynman and helped initiate {{the field of}} complex systems, founding the first institute devoted to this subject, The Center for Complex Systems Research (CCSR) at the University of Illinois at Urbana–Champaign and the journal Complex Systems in 1987.|$|E
500|$|At Los Alamos, Feynman was {{assigned}} to Hans Bethe's Theoretical (T) Division, and impressed Bethe enough to be made a group leader. He and Bethe developed the Bethe–Feynman formula for calculating the yield of a fission bomb, which built upon previous work by Robert Serber. As a junior physicist, he was not central to the project. He administered the computation group of human computers in the theoretical division. With Stanley Frankel and Nicholas Metropolis, he assisted in establishing a system for using IBM punched cards for computation. He invented a new method of computing logarithms that he later used on the <b>Connection</b> <b>Machine.</b> Other work at Los Alamos included calculating neutron equations for the Los Alamos [...] "Water Boiler", a small nuclear reactor, to measure how close an assembly of fissile material was to criticality.|$|E
500|$|While at Los Alamos National Laboratory {{working on}} the Manhattan Project, Richard Feynman {{developed}} a bit processing algorithm {{that is similar to}} long division and was later used in the <b>Connection</b> <b>Machine.</b> The algorithm uses the fact that every real number [...] is uniquely representable as a product of distinct factors of the form [...] The algorithm sequentially builds that product : if , then it changes [...] to [...] It then increase [...] by one regardless. The algorithm stops when [...] is large enough to give the desired accuracy. Because [...] is the sum of the terms of the form [...] corresponding to those [...] for which the factor [...] was included in the product , [...] may be computed by simple addition, using a table of [...] for all [...] Any base may be used for the logarithm table.|$|E
50|$|DARPA's <b>Connection</b> <b>Machines</b> were {{decommissioned}} by 1996.|$|R
50|$|Gores completes its {{purchase}} of the <b>Connection</b> <b>Machines</b> business unit from Thinking Machines Corporation.|$|R
5000|$|Mesh {{topology}} and the [...] "hypercube" [...] topology of <b>Connection</b> <b>Machines</b> have {{communication requirements}} that follow a rigid algorithm, and cannot {{be tailored to}} specific packaging technologies.|$|R
5000|$|The {{original}} goal of {{this research}} was to explore new models of computational thinking. The first prototype of AgentSheets ran in 1989 at the University of Colorado, NCAR, <b>Connection</b> <b>Machine</b> 2. The <b>Connection</b> <b>Machine</b> is a highly parallel computer with up to 65,536 CPUs. Realizing how hard it was to program the <b>Connection</b> <b>Machine</b> the insight that [...] "CPU cycles will always be ultimately cheaper than cognitive cycles" [...] led to the exploration of several new programming paradigms: ...|$|E
50|$|At Thinking Machines Corporation, Cliff Lasser and Steve Omohundro {{developed}} Star Lisp, {{the first}} programming language for the <b>Connection</b> <b>Machine.</b> Omohundro also {{helped create the}} data parallel style of parallel programming and developed many parallel algorithm libraries and applications for the <b>Connection</b> <b>Machine.</b>|$|E
5000|$|Brewster Kahle - lead {{engineer}} on the <b>Connection</b> <b>Machine</b> projects ...|$|E
5000|$|In the 1993 film Jurassic Park, <b>Connection</b> <b>Machines</b> (non-functioning dummies) {{are visible}} in the park's control room, {{scientist}} Dennis Nedry mentions [...] "eight Connection Machines" [...] and a video about dinosaur cloning mentions [...] "Thinking Machines supercomputers".|$|R
40|$|Automatic device {{helps to}} assure good solder <b>connections.</b> <b>Machine</b> wipes dross away from area on surface of molten solder in pot. Sweeps across surface of molten solder {{somewhat}} in manner of windshield wiper. Each {{cycle of operation}} triggered by pulse from external robot. Equipment used wherever precise, automated soldering {{must be done to}} military specifications...|$|R
50|$|<b>Connection</b> <b>Machines</b> {{were noted}} for their (intentionally) {{striking}} visual design. The CM-1 and CM-2 design teams {{were led by}} Tamiko Thiel.The physical form of the CM-1, CM-2, and CM-200 chassis was a cube-of-cubes, referencing the machine's internal 12-dimensional hypercube network, with the red light-emitting diodes (LEDs), by default indicating the processor status, visible through the doors of each cube.|$|R
5000|$|<b>Connection</b> <b>Machine,</b> a {{real life}} {{supercomputer}} family with a similar architecture ...|$|E
50|$|Thinking Machines Corporation {{built the}} <b>Connection</b> <b>Machine</b> {{employing}} hypercube topology for its compute nodes.|$|E
5000|$|David E. Shaw - {{creator of}} NON-VON machine, which preceded the <b>Connection</b> <b>machine</b> {{slightly}} ...|$|E
50|$|For each {{point-to-point}} connection, {{the dynamic}} system behavior {{is defined by}} a <b>connection</b> state <b>machine.</b> The <b>connection</b> state <b>machine</b> defines the states and sub-states an Agent and Manager pair passes through, including states related to connection, association, and operation. The communication model also defines in detail the entry, exit, and error conditions for the respective states including various operating procedures for measurement data transmission.|$|R
40|$|Packet routing is an {{important}} problem of parallel computing since a fast algorithm for packet routing will imply 1) fast inter-processor communication, and 2) fast algorithms for emulating ideal models like PRAMs on fixed <b>connection</b> <b>machines.</b> There are three different models of packet routing, namely 1) Store and forward, 2) Multipacket, and 3) Cut through. In this paper we provide {{a survey of the}} best known randomized algorithms for store and forward routing, k-k routing, and cut through routing on the Mesh Connected Computers...|$|R
5000|$|The company detects fraud using social data <b>connections</b> and <b>machine</b> {{learning}} algorithms. According to Aberman, [...] "uses your online {{identity to}} verify your {{identity in the}} real world." ...|$|R
50|$|Hypertrees are {{a choice}} for {{parallel}} computer architecture, used, e.g., in the <b>connection</b> <b>machine</b> CM-5.|$|E
5000|$|<b>Connection</b> <b>Machine,</b> models 1 and 2 (CM-1 and CM-2), from Thinking Machines Corporation, c. 1985 ...|$|E
5000|$|Symbolic's 3600-series {{computers}} {{were also used}} as the first front end [...] "controller" [...] computers for the <b>Connection</b> <b>Machine</b> massively parallel computers manufactured by Thinking Machines Inc., another MIT spinoff based in Cambridge, Massachusetts. The <b>Connection</b> <b>Machine</b> ran a parallel variant of Lisp and, initially, was used primarily by the AI community, so the Symbolics Lisp machine was a particularly good fit as a front-end machine.|$|E
50|$|The SSS project {{started after}} a Supercomputing Research Center (SRC) engineer, Ken Iobst, noticed a novel way to {{implement}} a parallel computer. Previous massively SIMD designs, like the <b>Connection</b> <b>Machines,</b> consisted {{of a large number}} of individual processing elements consisting of a simple processor and some local memory. Results that needed to be passed from element to element were passed along networking links at relatively slow speeds. This was a serious bottleneck in most parallel designs, which limited their use to certain roles where these interdependencies could be reduced.|$|R
5000|$|Time <b>Machine</b> <b>connection</b> {{establishment}} and backups are now much faster.|$|R
40|$|This paper {{introduces}} scalable data parallel algorithms for image processing. Focusing on Gibbs and Markov Random Field model representation for textures, {{we present}} parallel algorithms for texture synthesis, compression, and maximum likelihood parameter estimation, currently implemented on Thinking Machines CM- 2 and CM- 5. Use of fine-grained, data parallel processing techniques yields real-time algorithms for texture synthesis and compression that are substantially {{faster than the}} previously known sequential implementations. Although current implementations are on <b>Connection</b> <b>Machines,</b> the methodology presented here enables machine independent scalable algorithms {{for a number of}} problems in image processing and analysis. (Also cross-referenced as UMIACS-TR- 93 - 80. ...|$|R
5000|$|StarTech - a {{parallel}} chess program built {{to run on}} the Thinking Machines Corporation's <b>Connection</b> <b>Machine</b> model CM-5.|$|E
50|$|Gang {{scheduling}} {{was implemented}} {{and used in}} production mode on several parallel machines, most notably the <b>Connection</b> <b>Machine</b> CM-5.|$|E
50|$|Several early massively {{parallel}} computers used 1-bit architectures for the processors as well. Examples include the Goodyear MPP and the <b>Connection</b> <b>Machine.</b> By using a 1-bit architecture {{for the individual}} processors a very large array (e.g.: the <b>Connection</b> <b>Machine</b> had 65,536 processors) could be constructed with the chip technology available at the time. In this case the slow computation of a 1-bit processor was traded off against {{the large number of}} processors.|$|E
40|$|Abstract. Turing machine space {{complexity}} {{is related to}} circuit depth complexity. The relationship complements the known <b>connection</b> between Turing <b>machine</b> time and circuit size, thus enabling us to expose the related nature of some important open problems concerning Turing machine and circuit complexity. We are also able to show some <b>connection</b> between Turing <b>machine</b> complexity and arithmetic complexity...|$|R
40|$|In this paper, {{we develop}} a {{perfectly}} competitive spatial equilibrium model in price and quantity {{variables in the}} presence of discriminatory ad valorem tariffs, a widely used trade policy instrument. We derive the equilibrium conditions and formulate them as a variational inequality problem. An algorithm is then proposed for the computation of the equilibrium pattern and convergence results established. The algorithm resolves the problem into very simple subproblems, each of which can be solved simultaneously and in closed form. Finally, the algorithm is implemented on the massively parallel Thinking Machines CM- 2 and CM- 5 architectures, known as the <b>Connection</b> <b>Machines,</b> and numerical results presented...|$|R
5000|$|In {{her book}} Bronze and iron: old Latin poetry from its {{beginnings}} to 100 B.C., Janet Lembke uses the Anthropotechnic {{to describe the}} [...] "monstrous" [...] <b>connection</b> between <b>machine</b> and man, as compared to social and intimate connections.|$|R
50|$|<b>Connection</b> <b>Machine</b> (CM-2) and J-Machine are {{examples}} of fine-grain parallel computers that have grain size {{in the range of}} 4-5 μs.|$|E
5000|$|Thinking Machines {{produced}} {{a number of}} <b>Connection</b> <b>Machine</b> models (in chronological order): the CM-1, CM-2, CM-200, CM-5, and the CM-5E. The CM-1 and 2 came first in models with 64K (65,536) bit-serial processors (16 processors per chip) and later, the smaller 16K and 4K configurations. The <b>Connection</b> <b>Machine</b> was programmed {{in a variety of}} specialized languages, including *Lisp and CM Lisp (derived from Common Lisp), C* (derived by Thinking Machines from C), and CM FORTRAN. These languages used proprietary compilers to translate code into the parallel instruction set of the <b>Connection</b> <b>Machine.</b> The CM-1 through CM-200 were examples of SIMD architecture (Single Instruction Multiple Data), while the later CM-5 and CM-5E were MIMD (Multiple Instructions Multiple Data) that combined commodity SPARC processors and proprietary vector processors in a [...] "fat tree" [...] network.|$|E
50|$|StarLisp {{operated}} on PVARS (Parallel Variables). PVARS represented <b>Connection</b> <b>Machine</b> memory, and were essentially vectors: one element per CM processor (or virtual processor).|$|E
40|$|A {{deterministic}} parallel algorithm for parallel tree contraction {{is presented}} in this paper. The algorithm takes T time and uses (P processors, where n the number of vertices in a tree using an Exclusive Read and Exclusive Write (EREW) Parallel Random Access Machine (PRAM). This algorithm improves the results of Miller and who use the CRCW randomized PRAM model {{to get the same}} complexity and processor count. The algorithm is optimal {{in the sense that the}} product P is equal to the input size and gives an time algorithm when log Since the algorithm requires space, which is the input size, it is optimal in space as well. Techniques for prudent parallel tree contraction are also discussed, as well as implementation techniques for <b>connection</b> <b>machines...</b>|$|R
40|$|Abstract. Premium {{connection}} {{has high}} quality requirements on thread and sealing surface {{and needs to}} be machined by CNC lathe. Using loop program in CNC machining has advantages in reducing memory occupying, cutting the computational procedure and simplifying program. However, the processing profile curve often has a special shape. As a result, the idle motion of tools is increased and the production efficiency would be lowed. The paper studies the two procedures of rough turning process and finish turning process in a new gas tight premium <b>connection</b> <b>machining.</b> An improved method is developed by which the idle motion of tools is reduced and the machining efficiency is improved. The good result in the field application indicates that the improved method is practical...|$|R
50|$|The {{traditional}} standard prism mounting {{rail system}} requires {{to have the}} scope rail drilled from the side for fixture screws. The more recent propriety systems mainly offer aesthetic advantages {{for people who have}} problems with redundant drill holes in sight in case the riflescope is used on different guns. To avoid drilling the scope rail, the propriety rail mounting systems have special shape <b>connections</b> <b>machined</b> in the inside of the rail. These shape connections prevent ever showing any exterior damage from mounting work on the rifle scope. The propriety rail systems use matching slide-in mount fasteners to connect the riflescope to the gun. Some propriety rails also offer the possibility to tilt the scope up to 1° to the left or right.|$|R
