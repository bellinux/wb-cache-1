2163|632|Public
25|$|<b>Configuration</b> <b>management</b> {{can be used}} to {{maintain}} OS configuration files. Example systems include Ansible, Bcfg2, CFEngine, Chef, Otter, Puppet, Quattor, SaltStack, and Vagrant. Many of these systems utilize Infrastructure as Code to define and maintain configuration.|$|E
25|$|The {{mandatory}} use {{of these}} standards will aid significantly in achieving standardization and result in improvements in availability, maintainability, reliability, and supportability. This, in turn, will enhance lifecycle <b>configuration</b> <b>management</b> and logistic support with subsequent reductions in life cycle costs.|$|E
25|$|<b>Configuration</b> <b>management</b> {{is used to}} {{maintain}} {{an understanding of the}} status of complex assets with a view {{to maintain}}ing the highest level of serviceability for the lowest cost. Specifically, it aims to ensure that operations are not disrupted due to the asset (or parts of the asset) overrunning limits of planned lifespan or below quality levels.|$|E
50|$|Open <b>Configuration</b> and <b>Management</b> Layer (OCML) is a {{universal}} application <b>configuration</b> and <b>management</b> layer that helps to develop integrated applications independent of underlying group of applications, <b>configurations</b> and <b>management.</b>|$|R
5000|$|P3 Aviation GmbH: Quality <b>management,</b> <b>configuration</b> {{and project}} <b>management</b> for the {{aerospace}} industry since 2006; headquarters in Hamburg ...|$|R
50|$|<b>Configuration</b> and <b>management</b> support {{consists}} of software to enumerate, join, {{and check the}} status of available Wi-Fi networks. This also includes support for various encryption methods. These systems are often provided by the operating system backed by a standard driver model. In most cases, drivers emulate an Ethernet device and use the <b>configuration</b> and <b>management</b> utilities built into the operating system. In cases where built in <b>configuration</b> and <b>management</b> support is non-existent or inadequate, hardware manufacturers may include their own software to handle the respective tasks.|$|R
25|$|The {{traditional}} software <b>configuration</b> <b>management</b> (SCM) {{process is}} looked upon by practitioners {{as the best}} solution to handling changes in software projects. It identifies the functional and physical attributes of software at various points in time, and performs systematic control of changes to the identified attributes {{for the purpose of}} maintaining software integrity and traceability throughout the software development life cycle.|$|E
25|$|Because file {{names have}} to be {{exchanged}} between software environments (think network file transfer, file system storage, backup and file synchronization software, <b>configuration</b> <b>management,</b> data compression and archiving, etc.), {{it is very important}} not to lose file name information between applications. This led to wide adoption of Unicode as a standard for encoding file names, although legacy software might be non-Unicode-aware.|$|E
25|$|This shared Situational Awareness {{is derived}} from common {{reporting}} requirements using functionally standardized management tools and common data information exchange formats across the Defense Department. These capabilities collect (or receive), and fuse (enterprise management, network defense and <b>configuration</b> <b>management)</b> data in a real time or near real-time fashion to produce defined views of the mission critical GIG information of concern to a commander or NetOps center.|$|E
2500|$|Configure — {{infrastructure}} <b>configuration</b> and <b>management,</b> Infrastructure as Code tools ...|$|R
5000|$|<b>Configuration</b> files <b>management</b> {{to avoid}} {{overwriting}} existing user configuration files.|$|R
5000|$|Configure — {{infrastructure}} <b>configuration</b> and <b>management,</b> Infrastructure as Code tools ...|$|R
25|$|When {{the vendor}} {{is aware of}} the {{customer}} request it will determine the customer needs. By checking what the customer current configuration is and what the customer desires. This process can also take place automatically by checking the customer configuration in the <b>configuration</b> <b>management</b> system. More information on this system is provided in the next chapter. When it is clear what product the customer needs and the possible modifications to this product it is necessary to determine if the customer current configuration suits the new product. The current configuration is compared to the constraints of the new product. This can also be done automatically by the <b>configuration</b> <b>management</b> system. When the configuration of the customer appears to be insufficient the customer is informed about this. For example the vendor can make clear to the customer that it will need an external product for this new product to run properly. Besides this the Customer Relationship Management (CRM) system of the vendor is updated. There is more information about this in the chapter about CRM.|$|E
25|$|The Software <b>Configuration</b> <b>Management</b> system, is {{a system}} at the vendor’s site which keeps track of the {{configurations}} at the customer site. By storing this in a system the vendor {{will be able to}} give the customer particular service when it needs a new product. In the software <b>configuration</b> <b>management</b> system information about the products used by the customer, the version of these products, as well as which updates are already being done, is stored. In some cases {{it is possible that the}} vendor did some modifications to the product particularly for this customer. This will also have to be stored in the system. Also there needs to be configuration data, some generic information about the configuration the customer is using. For example what operating platform the customer uses for its software. What also should be stored in this system is information about the feedback that the vendor gets from the customer. This includes bug reports, product usage data, error reports and usage questions. More information about this feedback can be found in the CCU phase activation and usage.|$|E
25|$|This diagram {{has been}} {{incorporated}} within the VA-EA {{to provide a}} symbolic representation of the metamodel it used, to describe the One-VA Enterprise Architecture and to build an EA Repository {{without the use of}} Commercial EA Repository Software. It was developed using an object oriented database within the Caliber-RM Software Product. Caliber-RM is intended {{to be used as a}} software <b>configuration</b> <b>management</b> tool; not as an EA repository.|$|E
5000|$|Policy based <b>configuration</b> and <b>management</b> of {{adaptive}} OSAMI-based service systems ...|$|R
50|$|Apple {{produces}} the operating system, the computer hardware, the accompanying drivers, AirPort Wi-Fi base stations, and <b>configuration</b> and <b>management</b> software, simplifying Wi-Fi integration, set-up, and maintenance (including security updates). The built-in <b>configuration</b> and <b>management</b> is integrated throughout {{many of the}} operating system's applications and utilities. Mac OS X has Wi-Fi support, including WPA2, and ships with drivers for all of Apple’s current and past AirPort Extreme and AirPort cards. Many third-party manufacturers make compatible hardware along with the appropriate drivers which work with Mac OS X’s built-in <b>configuration</b> and <b>management</b> software. Other manufacturers distribute their own software.|$|R
5000|$|CLI support (remote <b>configuration</b> and <b>management)</b> via telnet {{or local}} access ...|$|R
25|$|Grose {{joined the}} staff of Northrop Ventura in Rancho El Conejo, California, in 1962, serving as the Director of Applied Technology. In this role, he was {{responsible}} for test activities for the engineering department. He participated in the Mercury, Gemini, and Apollo projects of the National Aeronautics Space Administration (NASA), overseeing the chemistry, metallurgy, reliability, <b>configuration</b> <b>management,</b> and value engineering of the program. In 1964, he transferred to Rocketdyne, which was a division of Rockwell International. At Rocketdyne, located in Van Nuys, Grose was named the Chief of Reliability, where he continued to focus on North American aviation, specifically participating {{in the development of the}} Gemini and Apollo space programs.|$|E
25|$|An {{example of}} a {{successful}} application of the CCU method {{can be found at}} Exact Software (ES). ES is a manufacturer of accounting and enterprise resource planning software based in the Netherlands. ES has combined Product Data Management (PDM), Customer Relationship Management (CRM) and Software <b>Configuration</b> <b>Management</b> (SCM) {{in order to maintain the}} configuration at the customer site in a better and less complex way. ES has a module in its CRM software that contains all contracts of each customer. This is linked to their PDM system. Every contract corresponds to files that can be downloaded for a new version or update of a previous version. In the delivery phase this means that the customers are able to obtain all the products through an online connection. So ES sells contracts (licenses) and stores them into their CRM system, the delivery of the actual products can be done by the customers themselves completely automated requiring little effort. The PDM system is on its turn linked to the SCM system which keeps track of the configurations the customers are using. In the delivery phase this means that ES is able to automatically determine the customer needs whenever a customer does a request.|$|E
2500|$|More {{recently}} <b>configuration</b> <b>management</b> {{has been}} applied to large construction projects which can often be very complex and have a huge amount of details and changes that need to be documented. Construction agencies such as the Federal Highway Administration have used <b>configuration</b> <b>management</b> for their infrastructure projects. There are construction-based <b>configuration</b> <b>management</b> tools that aim to document change orders and RFIs in order to ensure a project stays on schedule and on budget. These programs can also store information to aid in the maintenance and modification of the infrastructure when it is completed. [...] One such application, ccsNet, was tested in a case study funded by the Federal Transportation Administration (FTA) in which the efficacy of <b>configuration</b> <b>management</b> was measured through comparing the approximately 80% complete construction of the Los Angeles County Metropolitan Transit Agency (LACMTA) 1st and 2nd segments of the Red Line, a $5.3 billion rail construction project. [...] This study yielded results indicating a benefit to using <b>configuration</b> <b>management</b> on projects of this nature.|$|E
5000|$|Business Continuity Clustering automates the <b>configuration</b> and <b>management</b> of high-availability, {{clustered}} servers ...|$|R
5000|$|FTTO {{switches}} are managed, {{which requires}} professional skills for their <b>configuration</b> and <b>management.</b>|$|R
5000|$|<b>Configuration</b> and <b>management</b> of {{networking}} {{equipment such as}} routers, switches, firewalls, load balancers ...|$|R
2500|$|The Information Technology Infrastructure Library (ITIL) {{specifies}} {{the use of}} a <b>Configuration</b> <b>management</b> system (CMS) or <b>Configuration</b> <b>management</b> database (CMDB) as a {{means of}} achieving industry best practices for <b>Configuration</b> <b>Management.</b> [...] CMDBs are used to track Configuration Items (CIs) and the dependencies between them, where CIs represent the things in an enterprise that are worth tracking and managing, such as but not limited to computers, software, software licenses, racks, network devices, storage, and even the components within such items.|$|E
2500|$|TechAmerica/ANSI EIA-649-B 2011 <b>Configuration</b> <b>Management</b> Standard ...|$|E
2500|$|ANSI/EIA-649-1998 National Consensus Standard for <b>Configuration</b> <b>Management</b> ...|$|E
5000|$|... #Caption: Figure 4. Example of {{different}} business processes depending on <b>configuration</b> lifecycle <b>management</b> ...|$|R
5000|$|Administration: <b>Configuration</b> and <b>management</b> of the system, {{including}} library, staff, material, fines, and website settings.|$|R
5000|$|Produce a usable <b>configuration</b> and <b>management</b> interface, {{similar in}} scope to {{traditional}} BBS WFC tools.|$|R
2500|$|NATO ACMP 2100 <b>Configuration</b> <b>Management</b> Contractual Requirements ...|$|E
2500|$|GEIA-HB-649 - Implementation Guide for <b>Configuration</b> <b>Management</b> ...|$|E
2500|$|CMMI CMMI for Development, Version 1.2 <b>Configuration</b> <b>Management</b> ...|$|E
5000|$|PolicyCenter (centrally {{manages the}} <b>configuration,</b> policy <b>management,</b> {{software}} distribution and adaptive response tracking of multi-unit deployments.) ...|$|R
50|$|Server Manager - Application used {{to assist}} system administrators with installation, <b>configuration,</b> and <b>management</b> of other RRAS features.|$|R
40|$|Management of {{operating}} system configuration files files {{is an essential}} part of UNIX systems administration. It is particularly difficult in environments with a large number of computers. This paper presents a study of UNIX <b>configuration</b> file <b>management.</b> It compares existing systems and tools from the literature, presents several case studies of <b>configuration</b> file <b>management</b> in practice, examines one site in depth, and makes numerous observations on the configuration process...|$|R
