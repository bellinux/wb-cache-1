2513|84|Public
5|$|Neutopia {{is widely}} {{regarded}} as a clone of the popular Nintendo game The Legend of Zelda in nearly every aspect. Many reviewers have praised the game for making noticeable improvements over Zelda, but various shortcomings – which include long passwords, repetitive gameplay, and poor <b>collision</b> <b>detection</b> – prevent the game from being superior over the 1986 Nintendo title. But overall, reviewers have called Neutopia one of the better video games of its type and one of the better titles in the TurboGrafx-16 library. There would eventually be a sequel to the game NeutopiaII, in which Jazeta disappears and his son sets out to find him.|$|E
5|$|Development began {{shortly after}} the release of Christmas Nights in November 1996. Producer Yuji Naka wanted to create a game which {{involved}} saving people rather than killing them. Sonic Team chose to connect the game with firefighting as they thought it was an effective way of having players identify with heroism. Burning Rangers received mostly positive reviews. Critics unanimously commended the game's soundtrack and audio, with the voice navigation system receiving particular praise. The response to the graphics was mixed, with some critics asserting that it had the best visuals on the Saturn, although it was noted for its poor <b>collision</b> <b>detection</b> and occasional glitching. The game was among the final five Saturn titles released in America.|$|E
5|$|The {{development}} team {{felt that}} the original PlayStation era graphics of Rally 2.0 would not hold up to modern standards on a high pixel density mobile display. To improve the graphical quality they introduced modern shader-based rendering and overhauled the textures. The engine specifications for the vehicles were retained from the classic Rally games. Although the models for the vehicles were also preserved, developers increased their resolution and added more detail and graphical layers to the car bodies. Other features that were carried over include the chassis deformation effects and realistic buildup of dirt on the vehicles. PhysX-based <b>collision</b> <b>detection</b> was implemented to enable more objects and debris to scatter. Changes were also made to lighting, audio, controls, and user interface. The team decided to omit a number of Rally 2.0 features, such as multiplayer, manual transmission, variable gear ratios, weather reports, and the cockpit camera view. Game producer Pete Harrison cited creating a polished, core rallying experience for mobile as {{the focal point of}} the project and felt that some features would not be suitable for the short play sessions that they expected from a portable racing game.|$|E
50|$|<b>Collisions</b> <b>detection</b> {{and machine}} limits management.|$|R
40|$|Abstract: This paper {{introduces}} {{an innovative}} method {{of a potential}} field generation. A new construction of the potentials lets the camera be attracted by implicit goals and simultaneously prevents the observer from getting into the object. Proposed method solves the problem of <b>collisions</b> <b>detection</b> without additional implementation. Proposed potential field lets the user come up to a visually selected object quite smoothly and it reduces discrepancy between movement trail and the user’s intentions Key words: potential fields, <b>collisions</b> <b>detection,</b> camera navigation, virtual environment 1...|$|R
40|$|Abstract: This paper {{introduces}} a new method of camera movement support. The task is aided {{by means of}} innovatively generated potential field [7]. A new construction of the potentials lets the camera be attracted by implicit goals and simultaneously prevents the observer from getting into the object – <b>collisions</b> <b>detection.</b> Paper {{introduces a}}lso {{a new way of}} evaluating final position of the camera to let the user come up to a visually selected object quite smoothly. It reduces discrepancy between movement trail and the user’s intentions. Key words: camera navigation, virtual environment, potential fields, <b>collisions</b> <b>detection</b> 1...|$|R
25|$|<b>Collision</b> <b>detection</b> {{typically}} {{refers to}} the computational problem of detecting the intersection {{of two or more}} objects. While the topic is most often associated with its use in video games and other physical simulations, it also has applications in robotics. In addition to determining whether two objects have collided, <b>collision</b> <b>detection</b> systems may also calculate time of impact (TOI), and report a contact manifold (the set of intersecting points). Collision response deals with simulating what happens when a collision is detected (see physics engine, ragdoll physics). Solving <b>collision</b> <b>detection</b> problems requires extensive use of concepts from linear algebra and computational geometry.|$|E
25|$|The obvious {{approaches}} to <b>collision</b> <b>detection</b> for multiple objects are very slow.|$|E
25|$|Once we're done pruning, we {{are left}} with a number of {{candidate}} pairs to check for exact <b>collision</b> <b>detection.</b>|$|E
500|$|Reviewers {{felt the}} game had an {{extremely}} {{high degree of}} difficulty. GamePro's reviewer cited overly skilled AI racers and poor <b>collision</b> <b>detections</b> as reasons to avoid Jet Moto. Several reviewers cited the games graphics as a down point in the game, although GameSpot's review of the PC port praised the 3Dfx support. Electric Playground also compared it to Wave Race 64, but called the game [...] "light on the great graphics".|$|R
40|$|Abstract-This paper {{presents}} a general and efficient method {{that uses a}} configuration space for planning a collision-free path among known stationary obstacles for an arbitrarily moving object with six degrees of freedom. The basic approach taken in this method is to restrict the free space concerning path planning and to avoid executing unnecessary <b>collision</b> <b>detections.</b> The six-dimensional configuration space is equally quantized into cells by placing a regular grid, and the cells concerning path planning are enumerated by simultaneously executing multiple search strategies. Search strategies of different characteristics are defined by assigning different values to the coefficients of heuristic functions. The efficiency of each search strategy is evaluated during free-space enumeration, and a more promising one is automatically selected and is preferentially executed. The total number of necessary <b>collision</b> <b>detections</b> for free-space enumeration mainly depends on the most efficient search strategy among the evaluated strategies. Therefore, the free-space cells are efficiently enumerated for an arbitrary moving object {{in all kinds of}} working environments. This method has been implemented and has been applied to several examples that have different characteristics. I...|$|R
5000|$|... 1990 Naylor, Amanatides, and Thibault {{provided}} an algorithm for merging two BSP trees {{to form a}} new BSP tree from the two original trees. This provides many benefits including: combining moving objects represented by BSP trees with a static environment (also represented by a BSP tree), very efficient CSG operations on polyhedra, exact <b>collisions</b> <b>detection</b> in O(log n * log n), and proper ordering of transparent surfaces contained in two interpenetrating objects (has been used for an x-ray vision effect).|$|R
25|$|When {{it comes}} to the exact {{pairwise}} <b>collision</b> <b>detection,</b> this is highly trajectory dependent, and one almost has to use a numerical root-finding algorithm to compute the instant of impact.|$|E
25|$|The {{end result}} of all this {{algorithmic}} work is that <b>collision</b> <b>detection</b> can be done efficiently for thousands of moving objects in real time on typical personal computers and game consoles.|$|E
25|$|The main {{benefits}} of the a posteriori methods are as follows. In this case, the <b>collision</b> <b>detection</b> algorithm need {{not be aware of}} the myriad of physical variables; a simple list of physical bodies is fed to the algorithm, and the program returns a list of intersecting bodies. The <b>collision</b> <b>detection</b> algorithm doesn't need to understand friction, elastic collisions, or worse, nonelastic collisions and deformable bodies. In addition, the a posteriori algorithms are in effect one dimension simpler than the a priori algorithms. Indeed, an a priori algorithm must deal with the time variable, which is absent from the a posteriori problem.|$|E
40|$|Spatial {{partitioning}} {{trees are}} needed for processing <b>collision</b> <b>detections</b> efficiently. In order to select split planes for spatial partitioning trees, the tree balance {{and the number of}} polygons overlapped with the split plane should be considered. In this paper, the heuristic algorithm controlling weight values of tree build criteria is proposed for spatial partitioning trees of 3 D games. As the weight values are changed, tree build time, T-junction elimination time which can cause visual artifacts in splitting polygons overlapped with the split plane, rendering speed (frame per second: FPS) according to tree balance are analysed under 3 D game simulations...|$|R
40|$|Numerically {{accurate}} {{simulation of}} the mechanical behavior of thin flexible structures is important in application areas ranging from engineering design to animation special effects. Subdivision surfaces provide {{a unique opportunity to}} integrate geometric modeling with concurrent finite element analysis of thin flexible structures. Their mechanics are governed by the so-called thin-shell equations. We present a concise treatment of thin-shell equations including dynamic behavior, scalable material models, and the treatment of <b>collisions</b> (<b>detection</b> as well as response). The resulting energy minimization problem is non-linear and in turn able to capture effects of far more realism than linear models. We demonstrate these claims with a number of simulations which exhibit characteristic effects of real world experiments...|$|R
40|$|Abstract—The aim of {{the present}} work is to analyze the {{consequences}} of repetitive extreme hip motion in professional ballet dancers. The motivation for {{this study is that}} dancers’ activities can be at the origin of hip osteoarthritis. To verify this hypothesis, bone poses of patient-specific hip joint are obtained using an optical motion capture system, while soft tissue artifacts are reduced by applying a global minimization. Subsequently, <b>collision</b> <b>detections</b> are performed among the joint tissues during motion. Results show a strong correlation between the observed collisions and the diagnosed lesions. The estimation of the hip kinematics was successfully validated with data collected from a dynamic MRI protocol. Keywords-hip joint; impingements; skin artifacts; extreme motion; dancing; 1...|$|R
25|$|Some iterate {{the linear}} {{interpolation}} (Newton's method) {{to calculate the}} time of collision with a much higher precision {{than the rest of}} the simulation. <b>Collision</b> <b>detection</b> utilizes time coherence to allow even finer time steps without much increasing CPU demand, such as in air traffic control.|$|E
25|$|Agarwal et al. (2002) {{describe}} data {{structures for}} maintaining pseudotriangulations of moving points or moving polygons. They show that using pseudotriangulations {{in place of}} triangulations allows their algorithms to maintain these structures with relatively few combinatorial changes as the inputs move, and they use these dynamic pseudotriangulations to perform <b>collision</b> <b>detection</b> among the moving objects.|$|E
25|$|The {{bounding}} diamond, {{the minimum}} bounding parallelogram, the convex hull, the bounding circle or bounding ball, and the bounding ellipse {{have all been}} tried, but bounding boxes remain the most popular due to their simplicity. Bounding boxes are typically used in the early (pruning) stage of <b>collision</b> <b>detection,</b> so that only objects with overlapping bounding boxes need be compared in detail.|$|E
40|$|Road intersections {{are among}} the most complex and {{accident-prone}} elements of modern traffic networks. Thus, new safety systems have to cope with highly complex traffic scenarios where the behavior of the different road users is difficult to predict. Sensing the surrounding environment and assessing possible threats therefore remain challenging problems. This paper provides a novel, efficient active-safety system for frontal <b>collisions</b> <b>detection</b> and prevention/mitigation. More precisely, we provide: (i) a probabilistic motion prediction algorithm based on an unscented Kalman filter; (ii) a probabilistic threat assessment method based on vectors defined by reference points on the vehicles' structure; (iii) a reachability-based decision-making protocol enabling an emergency intervention. Simulation results, based on realistic data obtained specifically for this scenario, are also presented showing the efficiency and the potential of the proposed solution...|$|R
40|$|This paper {{introduces}} {{a new model}} for rapid physical simulation called sparse dynamics. The method employs a quick first pass to identify likely object interactions. These are then flagged for more detailed analysis. As actual collisions are rare in a sparsely populated environment, efficiency is greatly increased. The first pass uses deterministic Newtonian mechanics to predict future collisions analytically, obviating the need to simulate small uniform time steps. Timings indicate this provides a large speed improvement over more traditional methods. In particular {{we were able to}} simulate full <b>collision</b> <b>detections</b> for 1000 polyhedra at real time speeds. We also discuss how to extend the sparse dynamics model to handle complex effects such as gravity, friction, and user interaction. 1 Motivation The graphics community has a tradition of viewing realtime dynamic simulation as intractable. While large strides have been made in real-time rendering and user interfaces, simulations invol [...] ...|$|R
40|$|Abstract: A {{flexible}} manufacturing cell (FMC) {{is defined as a}} highly automated manufacturing system. The design of these kinds of systems is characterized by massive alternatives of components positions and paths. While in practice there is always the attempt to minimize the cycle time, dealing with a lot of alternatives- in respect to components positioning and paths planning- is necessary. There are a lot of constraints and boundary limits of such systems too. For that reason, it is a very difficult task- sometimes it is impossible- to achieve an optimal configuration of FMC components positions and paths without using simulation and 3 D CAD-software. This paper introduces two different solutions for cycle time optimization based on a {{flexible manufacturing}} cell for handling cover parts. The simulation was made on the simulation software Arena 7. 0 for two different scenarios. The components positions and paths as well as <b>collision</b> <b>detections</b> are verified on the ABB 3 D simulation software RobotStudi...|$|R
25|$|In the {{a priori}} methods, we write a <b>collision</b> <b>detection</b> {{algorithm}} {{which will be}} able to predict very precisely the trajectories of the physical bodies. The instants of collision are calculated with high precision, and the physical bodies never actually interpenetrate. We call this a priori because we calculate the instants of collision before we update the configuration of the physical bodies.|$|E
25|$|If the {{triangle}}s are coplanar, {{this test}} is not entirely successful. One can add some extra planes, for instance, planes that are normal to triangle edges, {{to fix the problem}} entirely. In other cases, objects that meet at a flat face must necessarily also meet at an angle elsewhere, hence the overall <b>collision</b> <b>detection</b> will be able to find the collision.|$|E
25|$|Version 1.50, {{released}} on April 20, 2011, introduced real-time multiplayer, improved physics and graphics, and {{greater control over}} <b>collision</b> <b>detection</b> {{as part of a}} suite of new technology that developers could use to create connected gaming experiences. Also with v1.5 were more avatar save slots (24), new facial building features, better furniture management, various graphical tweaks to the Navigator, improved object placement options within the personal space, and increased chat log options.|$|E
40|$|This thesis {{describes}} {{a new model}} for rapid physical simulation called sparse dynamics. The method employs a simplified object representation to quickly identify likely object interactions. These are then flagged for more detailed analysis. As actual collisions are rare in a sparsely popu-lated environment, efficiency is greatly increased. The first phase uses deterministic Newtonian mechanics to predict future collisions analytically, obviating the need to simulate small uniform time steps. The detailed phase makes use of a near-constant time polyhedral distance tracker to minimize the expense of complicated objects. The current system can handle interactions involving linear and accelerated motions (includ-ing gravity), wind resistance, user manipulations, {{and to some extent}} supporting contacts and fric-tion. Methods are discussed to further extend this list. Timings indicate sparse dynamics provides a large speed improvement over more traditional methods. In particular we are able to simulate full <b>collision</b> <b>detections</b> for a simple environment containing 500 polyhedra at real-time speeds. Even in highly realistic or complicated environments, we expect a speed up by an order of magnitude or more...|$|R
50|$|The Rogue is {{currently}} holding the Top Safety Pick For IIHS Ratings. With the safety features {{from the first}} generation, it also includes Lane departure warning, frontal <b>collision</b> warning, object <b>detection</b> warning (SL Trim Only), and a 360 degree backup camera.|$|R
40|$|In {{this paper}} we {{investigate}} di-atomic molecules embedded in ice crystals under strain. In this environment coherent vibrations of many OH-bonds may be generated by one WIMP <b>collision.</b> The <b>detection</b> of such multiple-photon signals {{may provide a}} signature of a 100  GeV/c 2 WIMP. To do a proper lab test of “WIMP-induced” multi-photon emission is very difficult. We suggest that Ice Cube make a search for multi-photon events, and investigate whether the rate of such events exhibits yearly modulation...|$|R
25|$|The {{layers of}} the {{protocol}} suite near the top are logically closer to the user application, while those near the bottom are logically closer to the physical transmission of the data. Viewing layers as providing or consuming a service is a method of abstraction to isolate upper layer protocols from the details of transmitting bits over, for example, Ethernet and <b>collision</b> <b>detection,</b> while the lower layers avoid having to {{know the details of}} each and every application and its protocol.|$|E
25|$|Because games do {{not need}} to mimic actual physics, {{stability}} is not as much of an issue. Almost all games use a posteriori <b>collision</b> <b>detection,</b> and collisions are often resolved using very simple rules. For instance, if a character becomes embedded in a wall, they might be simply moved back to their last known good location. Some games will calculate the distance the character can move before getting embedded into a wall, and only allow him to move that far.|$|E
25|$|The game {{incorporates}} a player-controlled camera {{system that can}} be rotated and zoomed at will; this allows the player to view the world from above, from the ground, or anywhere in between. Combat units (both ground units and aircraft) have inertia incorporated into their physics programming, although it lacks polygon-level <b>collision</b> <b>detection</b> for every object. The player can make their units to move anywhere in the map, given that Fire and Darkness is not designed using a grid-like system like other contemporary games such as Warcraft II.|$|E
40|$|It {{is shown}} that in deep inelastic {{electron}} - ion <b>collisions</b> the <b>detection,</b> in coincidence with the scattered electron, of a nucleus A- 1 {{in the ground}} state, {{as well as a}} nucleon and a nucleus A- 2 also in the ground state, may provide unique information on several long standing problems, such as the origin of the EMC effect, the possible medium modifications of the nucleon structure functions, and the nature of Nucleon-Nucleon correlations. Comment: 14 pages, Latex file, 4 postscript figures generated by epsf. sty included in submissio...|$|R
40|$|Ant System (AS) is {{a general}} purpose {{heuristic}} algorithm inspired by the foraging behaviour of real ant colonies. AS and its improved versions have been successfully applied to difficult combinatorial optimization problems such as travelling salesman problem, quadratic assignment problem and job shop scheduling. In this paper, two versions of multi-colony ant systems that are extensions to the AS are proposed for the multi-hose routing. In both versions, each colony of ants searches for an optimum path between two end points (or commodities). While each colony searches for optimum paths, they try to maximum use of other colonies paths (sharing paths, or bundling) for easy handling of multiple paths. The first version uses a single pheromone matrix for all colonies and the second version uses different pheromone matrices for each colony and a modified random propositional rule to attract ants toward foreign pheromones. The tessellated format of the obstacles {{was used in the}} algorithm instead of the original shapes of the obstacles. As a result of using this format, the algorithm can handle freeform obstacles and speed up the algorithm when checking the <b>collision</b> <b>detections.</b> The experimental results show that there is {{no significant difference in the}} quality of the solutions produced by two versions and the first version takes less computation time. Further first version needs low computer memory and one parameter lesser than of the second version. Keywords...|$|R
40|$|Recent {{publications}} {{report the}} direct electrochemical detection of individual enzyme activity via collisions at microelectrodes, though `back of an envelope' calculations challenge {{the applicability of}} the experimental method. In the light of these studies, we present a comprehensive combined theoretical and computational analysis of the electrode response to a proximate and freely-diffusing enzyme generating an electroactive product. We further present experimental data for the enzyme catalase and critically discuss to what extent observed current transients can be unambiguously attributed to single enzyme <b>collisions</b> comparing <b>detection</b> via electrolysis of enzyme reaction products with detection through direct electron transfer reaction mediated via the enzyme...|$|R
