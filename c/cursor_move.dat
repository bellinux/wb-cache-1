7|123|Public
2500|$|The {{computer}} industry often measures mouse sensitivity {{in terms of}} counts per inch (CPI), commonly expressed as dots per inch (DPI)the number of steps the mouse will report when it moves one inch. In early mice, this specification was called pulses per inch (ppi). The Mickey originally referred {{to one of these}} counts, or one resolvable step of motion. If the default mouse-tracking condition involves moving the cursor by one screen-pixel or dot on-screen per reported step, then the CPI does equate to DPI: dots of cursor motion per inch of mouse motion. The CPI or DPI as reported by manufacturers depends on how they make the mouse; the higher the CPI, the faster the cursor moves with mouse movement. However, software can adjust the mouse sensitivity, making the <b>cursor</b> <b>move</b> faster or slower than its CPI. [...] software can change the speed of the cursor dynamically, taking into account the mouse's absolute speed and the movement from the last stop-point. In most software, an example being the Windows platforms, this setting is named [...] "speed," [...] referring to [...] "cursor precision". However, some operating systems name this setting [...] "acceleration", the typical Apple OS designation. This term is incorrect. Mouse acceleration in most mouse software refers to the change in speed of the cursor over time while the mouse movement is constant.|$|E
50|$|Auto Pilot (osu! {{standard}} only) {{makes the}} <b>cursor</b> <b>move</b> automatically {{so that the}} player only needs to click and cannot fail.|$|E
5000|$|The {{computer}} industry often measures mouse sensitivity {{in terms of}} counts per inch (CPI), commonly expressed as dots per inch (DPI)the number of steps the mouse will report when it moves one inch. In early mice, this specification was called pulses per inch (ppi). The Mickey originally referred {{to one of these}} counts, or one resolvable step of motion. If the default mouse-tracking condition involves moving the cursor by one screen-pixel or dot on-screen per reported step, then the CPI does equate to DPI: dots of cursor motion per inch of mouse motion. The CPI or DPI as reported by manufacturers depends on how they make the mouse; the higher the CPI, the faster the cursor moves with mouse movement. However, software can adjust the mouse sensitivity, making the <b>cursor</b> <b>move</b> faster or slower than its CPI. [...] software can change the speed of the cursor dynamically, taking into account the mouse's absolute speed and the movement from the last stop-point. In most software, an example being the Windows platforms, this setting is named [...] "speed," [...] referring to [...] "cursor precision". However, some operating systems name this setting [...] "acceleration", the typical Apple OS designation. This term is incorrect. Mouse acceleration in most mouse software refers to the change in speed of the cursor over time while the mouse movement is constant.|$|E
5000|$|As the <b>cursor</b> <b>moves</b> over a point, a label, or {{variable}} value will {{appear at the}} top of the graphic screen.|$|R
50|$|Pallurikio {{can only}} jump or roll, and these {{movements}} are directed using a <b>cursor</b> (<b>moved</b> with the Wii remote or the analog stick of the PS system) and calibrated holding a button to give {{power to the}} jump.|$|R
5000|$|As a song progresses, the top screen scrolls {{through one}} bar {{at a time}} (one {{stretching}} across the screen horizontally, and the next few bars shown below it). A <b>cursor</b> <b>moves</b> to show where in the song the player currently is, and as the <b>cursor</b> <b>moves</b> over a note's [...] "head", {{the aim is to}} press the button displayed on that head, and if necessary holding it down {{until the end of the}} [...] "tail". Some long notes will have a tail extending across multiple bars, and very short ones will have none at all. Successfully hit the buttons at the proper time and it'll make an excellent piece of music, but hit it at the wrong time and it'll sound like a jumbled mess.|$|R
5000|$|The lasso tool {{is similar}} to the [...] "marquee" [...] tool, however, the user can make a custom {{selection}} by drawing it freehand. There are three options for the [...] "lasso" [...] tool - regular, polygonal, and magnetic. The regular [...] "lasso" [...] tool allows the user to have drawing capabilities. Photoshop will complete the selection once the mouse button is released. The user may also complete the selection by connecting the end point to the starting point. The [...] "marching ants" [...] will indicate if a selection has been made. The [...] "polygonal lasso" [...] tool will draw only straight lines, which makes it an ideal choice for images with many straight lines. Unlike the regular [...] "lasso" [...] tool, the user must continually click around the image to outline the shape. To complete the selection, the user must connect the end point to the starting point just like the regular lasso tool. [...] "Magnetic lasso" [...] tool is considered the smart tool. It can do the same as the other two, but it can also detect the edges of an image once the user selects a starting point. It detects by examining the color pixels as the <b>cursor</b> <b>move</b> over the desired area. A pixel is the smallest element in an image. Closing the selection {{is the same as the}} other two, which should also should display the [...] "marching ants" [...] once the selection has been closed.|$|E
40|$|Holistic twig join {{algorithms}} {{represent the}} state of the art for evaluating path expressions in XML queries. Using inverted in-dexes on XML elements, holistic twig joins move a set of index cursors in a coordinated way to quickly ¯nd structural matches. Because each <b>cursor</b> <b>move</b> can trigger I/O, the performance of a holistic twig join is largely determined by how many cursor moves it makes, yet, surprisingly, existing join algorithms have not been optimized along these lines. In this paper, we describe TwigOptimal, a new holistic twig join algorithm with optimal cur-sor movement. We sketch the proof of TwigOptimal's optimality, and describe how TwigOptimal can use information in the return clause of XQuery to boost its performance. Finally, experimen-tal results are presented, showing TwigOptimal's superiority over existing holistic twig join algorithms...|$|E
40|$|People {{take account}} of the {{variability}} in their movements in a near-optimal manner in various visuo-motor tasks. Is knowledge of one’s variability needed for such near-optimal performance, or could it arise from responding to one’s success in previous attempts in some simple manner? We asked subjects to move a pen back and forth across a tablet to make a <b>cursor</b> <b>move</b> as quickly as possible between two targets. The cursor had to stop within the targets. Task difficulty was varied between blocks. Part of the variation in difficulty was explicit (three target sizes) whereas the rest had to be discovered during the movements (two mappings between the movements of pen and cursor). In all cases, subjects sped up after stopping within a target and slowed down after failing to do so. We interpret this as evidence that explicit knowledge of one’s variability is not necessary for performing close to optimally...|$|E
50|$|In {{the example}} above, the user {{has gone into}} {{a part of the}} program called the {{procedure}} page, which allows for longer series of commands, and therefore more complex programs can be written. In this program, the <b>cursor</b> <b>moves</b> forward 90 units, turns left 90 degrees, right 180 degrees and then moves forward 4999 units.|$|R
50|$|Electronic Gaming Monthly {{gave the}} 3DO version a 4.8 out of 10. They {{commented that the}} game's whodunnit concept is appealing, but that the {{graphics}} are poor by 3DO standards, the gameplay is frustrating, and the <b>cursor</b> <b>moves</b> too slow when using the control pad, {{making it impossible to}} progress in the game without a Gamegun, which was sold separately.|$|R
5000|$|Scary Larry of GamePro panned the PlayStation version. Though {{he found}} the chief problem to be {{the fact that the}} aiming <b>cursor</b> <b>moves</b> too slowly {{to keep up with the}} enemy ships, he also criticized the poorly {{compressed}} graphics, dull gameplay, and annoying onboard computer voice, and concluded that [...] "Fans of the PC game may wonder why this version was even released." ...|$|R
5000|$|... : Capitalizes the {{character}} under the <b>cursor</b> and <b>moves</b> {{to the end}} of the word.|$|R
5000|$|In {{contrast}} to a 3D Joystick, the stick itself doesn't move or just moves very little and is mounted in the device chassis. To move the pointer, the user has to apply force to the stick. Typical representatives {{can be found on}} notebook's keyboards between the [...] "G" [...] and [...] "H" [...] keys. By performing pressure on the TrackPoint, the <b>cursor</b> <b>moves</b> on the display.|$|R
30|$|For each {{character}} to be entered, the participant initiated the cursor with a selection action (pressing the switch device), {{and then the}} <b>cursor</b> <b>moved</b> across the keyboard with a cursor duration, D, that was fixed for a block of sessions. The cursor always started at the top row and moved down the rows of the keyboard. When the participant hit the switch device to select a row, the <b>cursor</b> started to <b>move</b> across the selected row {{from left to right}} until the participant again triggered the switch or the cursor went past the last character of the row. A correct selection of the target character caused the prompt window to highlight the target character in green, and an incorrect selection (i.e., the participant responded too early or the <b>cursor</b> <b>moved</b> past the target) led to the target character being highlighted in red in the prompt window (see Fig. 5). There was no opportunity for the participant to correct an error; instead, the trial was scored and the participant started the next trial when ready. When a given quote was finished, the participant clicked the “Next text” button in the prompt window to be presented with another quote. Additional file 5 : Movie 5 shows the program in use for a small set of text entry.|$|R
50|$|Programmers may declare cursors as scrollable or not scrollable. The scrollability {{indicates}} {{the direction in}} which a <b>cursor</b> can <b>move.</b>|$|R
50|$|In 1980, Interlisp had a scrollbar that {{appeared}} {{on the left side}} of the window as the <b>cursor</b> <b>moved</b> towards the left. The bar’s shaded thumb showed the percentage of content visible and was controlled by the middle button. The left button scrolled up to move the selected position to the top edge of the window, and the right button scrolled down to move the top edge of the window to the selected position.|$|R
50|$|The third {{method of}} {{determining}} the wind is {{used in conjunction with}} the wind gauge bar. The aircraft is flown on three different headings, typically 120 degrees apart, and the time for the aircraft to travel a certain distance was measured with the timing beads. The bearing plate was rotated to match the compass heading of each leg, and the <b>cursor</b> was <b>moved</b> along the bar to draw a line on the bearing plate along that direction. After three such measurements a small triangle was formed. The aircraft then turned onto the bomb line. Using the drift angle measured from the auxiliary drift bar, the compass was rotated to that drift angle, and the <b>cursor</b> <b>moved</b> so it lay above the center of the triangle. This indicated the direction and speed of the wind.|$|R
2500|$|Mickeys {{per second}} is {{a unit of}} {{measurement}} for the speed and movement direction of a computer mouse, where direction is often expressed as [...] "horizontal" [...] versus [...] "vertical" [...] mickey count. However, speed can also refer to the ratio between how many pixels the <b>cursor</b> <b>moves</b> {{on the screen and}} how far the mouse moves on the mouse pad, which may be expressed as pixels per mickey, pixels per inch, or pixels per centimeter.|$|R
5000|$|There are 10 party games {{available}} {{to play for}} between 2 and 4 players. Instead of using the usual control style where the player manually aims and adjusts their power, all of these games must be played {{in one of three}} control mechanisms that generally involve the player confirming where they want to throw {{at just the right time}} as the aiming <b>cursor</b> <b>moves</b> around the board. This is to suit the sort of games that party mode contains: ...|$|R
25|$|When {{the cursor}} hovers over a link, {{depending}} on the browser and graphical user interface, some informative text about the link can be shown, popping up, not in a regular window, but in a special hover box, which disappears when the <b>cursor</b> is <b>moved</b> away (sometimes it disappears anyway after a few seconds, and reappears when the <b>cursor</b> is <b>moved</b> away and back). Mozilla Firefox, IE, Opera, and many other web browsers all show the URL. In addition, the URL is commonly shown in the status bar.|$|R
2500|$|A screen {{magnifier}} is {{software that}} interfaces with a computer's graphical output to present enlarged screen content. It {{allows users to}} enlarge the texts and graphics on their computer screens for easier viewing. Similar to desktop video magnifiers, this technology assists people with low vision. After the user loads the software into their computer's memory, {{it serves as a}} kind of [...] "computer magnifying glass." [...] Wherever the computer <b>cursor</b> <b>moves,</b> it enlarges the area around it. This allows greater computer accessibility {{for a wide range of}} visual abilities.|$|R
5000|$|GamePros Captain Squideo {{gave the}} 3DO version a {{negative}} review, saying {{that despite the}} variety of gameplay styles, the gameplay feels routine {{due to the lack}} of multiple weapons. He also criticized that the <b>cursor</b> <b>moves</b> too slowly to keep up with enemies even when the player's technique is flawless. Reviewing the Saturn [...] "Special Edition", Scary Larry called it [...] "a poor man's Cyberia", saying that the game has imaginative visuals but grainy full motion video, a cursor that tends to get lost in the graphics, and a general lack of excitement and fun.|$|R
30|$|Several virtual {{keyboard}} designs {{have been}} proposed by commercial companies. For example, the SwitchXS keyboard provides various modes that implement mouse input and keyboard characters (AssistiveWare, 2013). In a common design, an initial switch activation initiates a cursor that follows a path across the keyboard and stops to select an item when the user triggers the switch device again. A default approach is for the user first to select a row containing a desired item and thereby direct the <b>cursor</b> to <b>move</b> across that row’s items for an additional user selection. Other keyboard designs use a similar strategy but define differently the groups of items that can be selected. For example, in the Logo keyboard (Norte & Lobo, 2007), two major scanning groups (numeric and alphabetic) are displayed, and the user first triggers the switch to select {{one of these two}} groups, and then selects the item in the selected group as the <b>cursor</b> <b>moves</b> across the group.|$|R
50|$|Remote Touch {{utilizes}} haptic feedback, {{where the}} controller provides reaction force, and force feedback, where the on-screen <b>cursor</b> can <b>move</b> to nearby buttons automatically. System functions can be configured by the driver.|$|R
25|$|Mouse cursor sharing: Mouse <b>cursor</b> can be <b>moved</b> freely {{between the}} machines.|$|R
5000|$|... (LDA loads a value {{into the}} accumulator; JSR is [...] "jump to subroutine".) On the third OS call, the <b>cursor</b> will <b>move.</b> The {{following}} code would {{draw a line}} from (0, 0) to (0, +100): ...|$|R
50|$|For {{versions}} {{designed for}} EXPRO-02 board, extra raster scaling and transformation effects are {{used throughout the}} game. In addition, player's <b>cursor</b> can <b>move</b> closer to the blocks {{to the point of}} touching them. Tetrahedron boss has longer lightning range.|$|R
40|$|Abstract. We propose MarkerMouse, an {{inexpensive}} method for controlling the mouse cursor using a web cam and a marker {{placed on the}} user’s forehead. Two modes of cursor control were compared: position-control and velocitycontrol. In position-control mode the cursor is positioned where the user's head is pointing. In velocity-control mode the mouse <b>cursor</b> <b>moves</b> in a constant speed in the direction the user’s head is pointing. In an experiment designed according to ISO 9241 - 9, we found a mean throughput 1. 61 bps in positioncontrol mode. Throughput was 34 % less, or 1. 07 bps, in velocity-control mode. We explain how from the marker image we control the mouse cursor position and reduce noise in our computations...|$|R
5000|$|Reviewing the DOS version, a Next Generation critic criticized {{that the}} {{gameplay}} is boringly simplistic. He concluded, [...] "As full-motion video shooting games go, {{this is the}} best of the bunch, but that's not saying much.", and scored it two out of five stars. The magazine's review of the 3DO version focused on how the game was overly similar to previous American Laser Games releases, particularly in {{that it is impossible to}} respond in time to certain enemies without the foresight of having been shot by them before, and that the <b>cursor</b> <b>moves</b> too slowly for the game to be playable without a light gun. The reviewer scored it two out of five stars.|$|R
40|$|As bigger {{screens and}} multi-monitor {{configurations}} become more popular, users employ higher mouse accelerations {{in order to}} traverse the screen reasonably quickly. The faster the mouse <b>cursor</b> <b>moves,</b> however, the more it seems to jump from one position to the next because it is updated only at the refresh rate of the monitor. This lack of visual continuity {{increases the risk of}} users losing track of the cursor. High-density cursor addresses this issue by filling in additional cursor images between actual cursor positions. Unlike existing techniques, such as the Windows mouse trail, the proposed technique preserves the responsiveness of the mouse cursor. In our user study, high-density cursor improved participants' performance for target acquisitions across long distances, often without the conscious awareness of any visual change in the cursor...|$|R
40|$|Heat {{maps are}} a common tool in {{research}} to visualize humancomputer- interaction. Despite being widely used to track navigation, clicks, <b>cursor</b> <b>moves</b> or eye gaze, heat maps {{have not yet been}} explored as a means to understand users' gestural interaction with mobile devices. This understanding is particularly relevant in the case of older adult users who are often novice users and may also struggle with accuracy in gesture performance. This paper explores the application of the DBScan clustering algorithm to uncover the most relevant swipe gestures in a data sets containing the user interaction of two mobile applications. An intuitive visualization of the clustering results will be presented and compared in a case study with a heat map visualization, discussing the novelty and usefulness of these visualizations for user behaviour and usability studies...|$|R
5000|$|... 1.Logitech Air mouse: A {{wireless}} mouse that can control a computer <b>cursor</b> by being <b>moved</b> through the air, equipped with media features.|$|R
5000|$|With a non-scrollable (or forward-only) cursor, you can [...] each row at most once, and the <b>cursor</b> {{automatically}} <b>moves</b> to {{the next}} row. After you fetch the last row, if you fetch again, you will put the cursor after the last row and get the following code: SQLSTATE 02000 (SQLCODE +100).|$|R
40|$|We {{propose the}} “ninja cursor ” {{to improve the}} {{performance}} of target acquisition, particularly on large screens. This technique uses multiple distributed cursors to reduce the average distance to targets. Each <b>cursor</b> <b>moves</b> synchronously following mouse movement. We present the design {{and implementation of the}} proposed technique, including a method to resolve the ambiguity that results when multiple cursors indicate different targets simultaneously. We also conducted an experiment to assess the performance of the ninja cursor. The results indicate that it can generally reduce movement time. However, the performance is greatly affected by the number of cursors and target density. Based on these results, we discuss how our technique can be put into practical use. In addition to presenting a novel method to improve pointing performance, our study is the first to explore a variable number of cursors for performing pointing tasks...|$|R
25|$|Gesture {{recognition}} enables {{humans to}} communicate with the machine (HMI) and interact naturally without any mechanical devices. Using the concept of gesture recognition, it is possible to point a finger at the computer screen so that the <b>cursor</b> will <b>move</b> accordingly. This could make conventional input devices such as mouse, keyboards and even touch-screens redundant.|$|R
