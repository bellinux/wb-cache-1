939|229|Public
25|$|Office 2007 {{includes}} {{new applications}} and server-side tools, including Microsoft Office Groove, a collaboration and communication suite for smaller businesses, which was originally developed by Groove Networks before being acquired by Microsoft in 2005. Also included is Office SharePoint Server 2007, a major revision to the server platform for Office applications, which supports Excel Services, a <b>client-server</b> <b>architecture</b> for supporting Excel workbooks that are shared {{in real time}} between multiple machines, and are also viewable and editable through a web page.|$|E
25|$|The {{terminal}} implements a <b>client-server</b> <b>architecture</b> {{with the}} server {{running on a}} multiprocessor Unix platform. The client, used by end users {{to interact with the}} system, is a Windows application that typically connects directly through a router provided by Bloomberg and installed on-site. End users can also make use of an extra service (Bloomberg Anywhere) to allow the Windows application to connect via internet/IP, or Web access via a Citrix client. There are also applications that allow mobile access via Android, BlackBerry, and iOS. The server side of the terminal was originally developed using mostly the programming languages Fortran and C. Recent years have seen a transition towards C++ and embedded JavaScript on the clients and servers.|$|E
5000|$|Web-based 3-D terrain {{modeling}} with <b>client-server</b> <b>architecture</b> ...|$|E
40|$|While {{clinical}} healthcare {{systems may}} have lagged behind computer applications {{in other fields}} in the shift from mainframes to <b>client-server</b> <b>architectures,</b> the rapid deployment of newer applications is closing that gap. Organizations considering the transition to client-server must identify and position themselves to provide the resources necessary to implement and support the infrastructure requirements of <b>client-server</b> <b>architectures</b> and to manage the accelerated complexity at the desktop, including hardware and software deployment, training, and maintenance needs. This paper describes an information resources assessment of the recently aligned Pennsylvania regional Veterans Administration Stars and Stripes Health Network (VISN 4), {{in anticipation of the}} shift from a predominantly mainframe to a <b>client-server</b> information systems <b>architecture</b> in its well-established VistA clinical information system. The multimethod assessment study is described here to demonstrate this approach and its value to regional healthcare networks undergoing organizational integration and/or significant information technology transformations...|$|R
5000|$|Pando was an {{application}} which was mainly aimed at sending (and receiving) files which {{would normally be}} too large to send via more [...] "conventional" [...] means. It used both peer-to-peer (BitTorrent protocol) and <b>client-server</b> <b>architectures</b> and was released for Windows and Mac OS X operating systems.|$|R
50|$|Decoupling {{the actual}} {{knowledge}} store from the PKB user interface can achieve architectural flexibility. As with all <b>client-server</b> <b>architectures,</b> the benefits include load distribution, platform interoperability, data sharing, and ubiquitous availability. Increased complexity and latency {{are among the}} liabilities, which can indeed be considerable factors in PKB design.|$|R
5000|$|<b>Client-Server</b> <b>architecture</b> with {{user and}} {{transaction}} management and logging facilities ...|$|E
50|$|Like most {{networked}} multiplayer gaming systems, Kaillera {{is implemented}} {{to work on}} <b>client-server</b> <b>architecture.</b>|$|E
5000|$|... use a <b>client-server</b> <b>architecture</b> {{to protect}} the data from {{corruption}} by rogue application code; ...|$|E
40|$|This paper {{attempts}} {{to demonstrate how}} the use of distributed shared virtual memory (DSVM) can make {{the implementation of a}} distributed file system easier. Distributed file systems based on DSVM and <b>client-server</b> <b>architectures</b> are proposed and compared. Prototypes of both architectures are implemented, with the DSVM version constructed using Treadmarks. ...|$|R
50|$|Hospital Information System {{architecture}} {{has three}} main levels, Central Government Level, Territory Level, and Patient Carrying Level. Generally, {{all types of}} hospital information system (HIS) are supported in <b>client-server</b> <b>architectures</b> for networking and processing. Most work positions for HIS are currently resident types. Mobile computing began with wheeled PC stands. Now tablet computers and smartphone applications are used.|$|R
40|$|This paper {{surveys the}} {{theoretical}} {{developments in the}} field of stochastic process algebras, process algebras where action occurrences may be subject to a delay that is determined by a random variable. A huge class of resource-sharing systems [...] - like large-scale computers, <b>client-server</b> <b>architectures,</b> networks [...] - can accurately be described using such stochastic specification formalisms...|$|R
50|$|Most {{distributed}} file {{systems are}} built on the <b>client-server</b> <b>architecture,</b> but other, decentralized, solutions exist as well.|$|E
50|$|Limitations of the GSSAPI include that it standardizes only authentication, and not authorization, {{and that}} it assumes a <b>client-server</b> <b>architecture.</b>|$|E
50|$|CTP pioneered fixed {{time and}} price {{consulting}} services and Rapid application development (RAD), helping clients transform from mainframe-centric solutions to <b>client-server</b> <b>architecture</b> and packaged solutions.|$|E
40|$|The {{field of}} {{information}} systems (IS) has grown dramatically {{over the past three}} decades. Recent trends have transformed the IS landscape. These trends include: the evolution of implementation technology from centralized mainframe environments towards distributed <b>client-server</b> <b>architectures,</b> embracing the internet and intranets; changes in user interface technology from character-based to graphical user interfaces, multimedia, and th...|$|R
40|$|Peer-to-peer systems {{recently}} {{captured the}} attention of practitioners and researchers as they provide an attractive alternative to <b>client-server</b> <b>architectures.</b> Peerto -peer enables the creation of massively distributed networks of data repositories that can be setup and discarded easily according to applicative needs. Nevertheless, the current popularity of these systems is due mostly to their use for file sharing over the Internet...|$|R
50|$|Request-response is {{a message}} {{exchange}} pattern in which a requestor sends a request message to a replier system which receives and processes the request, ultimately returning a message in response. This is a simple, but powerful messaging pattern which allows two applications to have a two-way conversation with one another over a channel. This pattern is especially common in <b>client-server</b> <b>architectures.</b>|$|R
50|$|HOSxP uses a <b>client-server</b> <b>architecture.</b> For the {{database}} server, it is claimed {{to run on}} many RDBMS, like MySQL, Microsoft SQL Server, PostgreSQL, and Interbase/Firebird.|$|E
50|$|Puppet usually follows <b>client-server</b> <b>architecture.</b> The {{client is}} known as agent and the server {{is known as}} master. It {{can also be used}} as a {{stand-alone}} application.|$|E
50|$|The {{feature that}} distinguishes CUBRID {{database}} from other relational database systems is its 3-tier <b>client-server</b> <b>architecture</b> {{which consists of}} the database server, the connection broker and the application layer.|$|E
40|$|Abstract. This paper {{describes}} Paradis-Net, a typed event-driven messagepassing interface {{for designing}} distributed systems. Paradis-Net facilitates {{the development of}} both peer-to-peer and <b>client-server</b> <b>architectures</b> through a mechanism called “Cooperation”. We introduce the programming interface and compare its mechanisms to active messages and remote procedure calls. Finally we demonstrate how the interface {{can be used to}} implement communication patterns typical for distributed systems and how peer-to-peer functionality can be mapped onto Paradis-Net. ...|$|R
40|$|This paper {{examines}} the architectural issues in building storage systems for object-oriented database management systems #OO DBMSs# and persistent languages. We survey techniques for placing {{small and large}} objects on disk and disk space management, and we present <b>client-server</b> <b>architectures</b> for OO DBMSs. We describe alternatives in making a programming language persistent and in particular, we discuss pointers and three pointer dereference mechanisms: import#export, software dereference, and hardware dereference. ...|$|R
40|$|We {{discuss the}} various {{issues related to}} the design and {{implementation}} of multi-modal spoken dialog systems with wireless client devices. In particular we discuss the design of a usable interface that exploits the complementary features of the audio and visual channels to enhance usability. We then describe two <b>client-server</b> <b>architectures</b> in which we implemented applications for mapping and navigating to points of interest. multi-modal, dialog, user interface, architecture. 1...|$|R
50|$|An early form of <b>client-server</b> <b>architecture</b> is remote job entry, dating {{at least}} to OS/360 (announced 1964), where the request was to run a job, and the {{response}} was the output.|$|E
50|$|The Arrilaser 2 was {{released}} in 2009, with new <b>client-server</b> <b>architecture</b> and speeds {{twice as fast as}} the original model. In 2011, the Arrilaser was recognized with an Academy Award of Merit.|$|E
5000|$|In a <b>client-server</b> <b>architecture,</b> on {{the other}} hand, a {{persistent}} connection is typically used so that server state can be managed. This [...] "state" [...] includes server-side cursors, , connection-specific functional settings, and so on.|$|E
40|$|Extensible {{client-server}} software {{requires a}} {{clear separation of}} core services from those that are customizable. This separation is difficult, as these customizable features tend to crosscut the primary functionality of the core services. We believe that an aspect-oriented approach to <b>client-server</b> <b>architectures</b> supports extensibility {{in a way that}} is more flexible than traditional approaches. Our experiment focuses on clients within a distributed file system that dynamically negotiate with servers for adaptive delayed-write and prefetching behaviour. ...|$|R
50|$|In 1995 AOL {{acquired}} Ubique, {{which was}} described by AOL as a <b>client-server</b> software <b>architecture</b> allowing people to virtually meet and interact.|$|R
40|$|Software {{engineers}} {{may experience}} problems in modeling certain aspects while applying object-oriented techniques [4, 10, 11]. Composition-Filters {{are capable of}} expressing various different kinds of aspects in a uniform manner. These aspects are, for example, inheritance and delegation [1] and atomic delegation [2], multiple views, dynamic inheritance and queries on objects [3], coordinated behavior and inter-object constraints [5], real-time [6] and composing real-time and synchronization together [9], synchronization [8] and distributed synchronization [7], and <b>client-server</b> <b>architectures</b> [10]...|$|R
50|$|It uses a two-tier <b>Client-server</b> <b>architecture</b> with server {{software}} running on either Linux or Microsoft Windows and client software can run only on Microsoft Windows.It implements Distributed Component Object Model (DCOM) and uses Multi-tier technology based on Borland DataSnap.|$|E
50|$|In {{software}} engineering, multitier architecture (often {{referred to}} as n-tier architecture) or multilayered architecture is a <b>client-server</b> <b>architecture</b> in which presentation, application processing, and data management functions are physically separated. The most widespread use of multitier architecture is the three-tier architecture.|$|E
50|$|Mumble uses a <b>client-server</b> <b>architecture</b> {{which allows}} users {{to talk to each}} other via the same server. It has a very simple {{administrative}} interface and features high sound quality and low latency. All communication is encrypted to ensure user privacy.|$|E
40|$|International audiencePeer-to-Peer {{networks}} {{are designed to}} provide decentralized, fault-tolerant alternatives to traditional <b>client-server</b> <b>architectures.</b> In previous work, the the resilience of structured P 2 P networks has been evaluated analytically {{as well as by}} simulation. In this paper, we discuss the influence of peer failures on a core component of our cost-optimized hierarchical P 2 P protocol Chordella. We show that the used algorithms lead to a working system even if a high number of superpeers is subject to failures...|$|R
40|$|Today's network games suer from {{scalability}} {{and performance}} limitations caused by centralized <b>client-server</b> <b>architectures</b> and/or broadcast communication. In this paper, {{we argue that}} the communication between components of a game can be modeled as a publish-subscribe system. We present the design of Mercury, a completely distributed publish-subscribe system, which supports a content-based publish-subscribe model of communication and performs distributed matching using a novel content-based routing protocol. We also present preliminary simulation results identifying key design decisions aecting the scalability and network eciency of the system...|$|R
40|$|A {{resilient}} industrial ‘grammar of schooling’ {{is challenged}} by technological disruption. On {{a backdrop of}} commodification and globalization this thrust is marked by the rapid uptake of multi-touch access devices within wireless <b>client-server</b> <b>architectures.</b> Based on two sets of empirical data and personal observations this paper abductively suggests that we may think of {{this in terms of}} the increased importance of (i) intellectual commonplaces, (ii) attention streams and (iii) body languages. In this paradigm the educational institution should be careful not to become a pure operator of extrinsic certification...|$|R
