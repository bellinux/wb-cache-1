8|1617|Public
50|$|The DOS-11 {{operating}} system kernel was one file called MONLIB.LCL. The LCL extension was the acronym for LInked <b>Core</b> <b>Image</b> <b>Library</b> (or LICIL). An LICIL could be stored on {{any type of}} media that the DOS-11 {{operating system}} was distributed on (disk, DECtape, punched tape or magnetic tape). When the LICIL file was installed (Hooked) onto a disk drive as a contiguous file, the monitor library name is changed to MONLIBCIL which could then be booted. The CIL extension was the acronym for <b>Core</b> <b>Image</b> <b>Library.</b> Core, was the term for the core memory systems common to the PDP-11. A <b>Core</b> <b>Image</b> <b>Library</b> could be created with the CILUS (<b>Core</b> <b>Image</b> <b>Library</b> Update and Save) program. A MONLIBCIL typically contained the resident monitor (RMON), the keyboard command routine, device drivers, EMT routines, the clock routines and the transient monitor.|$|E
5000|$|Executable {{programs}} were {{stored in the}} <b>Core</b> <b>Image</b> <b>Library,</b> which did not reclaim space when {{programs were}} deleted or replaced by newer versions. When the <b>Core</b> <b>Image</b> <b>Library</b> became full, {{it had to be}} compressed by one of the utility programs, and this could halt development work for as much as half a day.|$|E
5000|$|CILUS (<b>Core</b> <b>Image</b> <b>Library</b> Update and Save) - File {{format of}} a CIL file.|$|E
50|$|The Xcode Tools include <b>Core</b> <b>Image</b> Fun House and Quartz Composer; both utilize <b>Core</b> <b>Image.</b>|$|R
40|$|Gravitational lensing {{provides}} a unique probe {{of the inner}} 10 – 1000 pc of distant galaxies (z ∼ 0. 2 – 1). Lens theory predicts that every strong lens system should have a faint image {{near the center of}} the lens galaxy, which should be visible in radio lenses but have not been observed. We study these “core” images using models derived from the stellar distributions in nearby early-type galaxies. We find that realistic galaxies predict a remarkably wide range of <b>core</b> <b>images,</b> with lensing magnifications spanning some six orders of magnitude. More concentrated galaxies produce fainter <b>core</b> <b>images,</b> although not with any simple, quantitative, model independent relation. Some real galaxies have diffuse cores and predict bright <b>core</b> <b>images</b> (magnification µcore � 0. 1), but more common are galaxies that predict faint <b>core</b> <b>images</b> (µcore � 0. 001). Thus, stellar mass distributions alone are probably concentrated enough to explain the lack of observed <b>core</b> <b>images,</b> and may require observational sensitivity to improve by an order of magnitude before detections of <b>core</b> <b>images</b> become common. Two-image lenses will tend to have brighter <b>core</b> <b>images</b> than four-image lenses, so they will be the better targets for finding <b>core</b> <b>images</b> and exploiting these tools for studying the central mass distributions of distant galaxies...|$|R
50|$|Note {{that any}} GPU capable of {{handling}} <b>Core</b> <b>Image</b> instructions is also Quartz Extreme capable. The requirements for <b>Core</b> <b>Image</b> are greater than those of Quartz Extreme.|$|R
5000|$|Executable {{programs}} were {{stored in a}} <b>Core</b> <b>Image</b> <b>Library.</b> While running, DOS could not reclaim space as {{programs were}} deleted or replaced with newer versions. When the <b>Core</b> <b>Image</b> <b>Library</b> became full, {{it had to be}} compressed by one of the utility programs, and this could halt development work for as much as half a day. Many shops simply froze changes for a day, compressed the CIL [...] "off-line", and IPLed with the new <b>Core</b> <b>Image</b> <b>Library</b> {{at the beginning of a}} business day. A relocatable library for linkable object programs and a source statement library for assembler macros and include text were also supported. Installations could define additional private relocatable and source statement libraries on other disk volumes.|$|E
5000|$|CIL (<b>Core</b> <b>Image</b> <b>Library)</b> - Similar to {{a shared}} library (.so) on Linux or [...]DLL on Microsoft Windows.|$|E
5000|$|An {{additional}} file structure, partitioned, {{and access}} method (BPAM), is mainly used for managing program libraries. Although partitioned files {{need to be}} compressed to reclaim free space, this has less impact than did a similar requirement for DOS/360's <b>Core</b> <b>Image</b> <b>Library,</b> because MFT and MVT allow multiple partitioned datasets and each project generally has at least one.|$|E
50|$|Used {{in testing}} <b>Core</b> <b>Image</b> units, which {{function}} similar to Adobe Photoshop filters. Each has a specific action, with parameters customize the action. Showcases <b>Core</b> <b>Image,</b> a technology introduced in Mac OS X 10.4, supported by newer graphic hardware.|$|R
5000|$|Any {{programmable}} GPU {{that supports}} the required OpenGL Shader (GLSL) commands is <b>Core</b> <b>Image</b> capable. Apple has used the following graphics cards to support <b>Core</b> <b>Image</b> GPU processing in Mac OS X 10.4 and Aperture, so the following list could be considered an example of minimum requirements: ...|$|R
5000|$|Technical Report Archive & <b>Image</b> <b>Library</b> for NIS-digitized series ...|$|R
5000|$|An {{additional}} file structure, partitioned, {{and access}} method (BPAM), which was mainly used for managing program libraries. Although partitioned files {{needed to be}} compressed to reclaim free space, this seldom halted development work as it did with DOS/360's <b>Core</b> <b>Image</b> <b>Library,</b> because PCP, MFT and MVT allowed an indefinite number of partitioned files and each project generally had at least one.|$|E
40|$|Specific {{modifications}} in the Disk Operational System Unified Series {{to insure the}} relocatability of programs stored permanently in the <b>core</b> <b>image</b> <b>library</b> is described. A self-relocating method for loading programs into the working memory with re-editing all the programs recorded in the <b>core</b> <b>image</b> <b>library</b> is presented. The modified linkage editor can {{be included in a}} relocation dictionary containing data about each address constant at the assembly stage {{at the request of the}} programmer. The relocation dictionary increases the dimension of the RL-phase in comparison with the dimension of this same phase when edited by the standard method, making possible the creation of multiphase program complexes. Generation and use of the modified system using Assembly language is described. An example of the use of the system is given, and limitations of the use of the relocatable programs in the modified system are outlined...|$|E
50|$|<b>Core</b> <b>Image</b> was {{introduced}} with Mac OS X 10.4.Early examples of its use {{can be found}} in the ripple effect in Dashboard, and Apple's professional digital photography application, Aperture. Starting with Mac OS X 10.5, any application that implements Image Kit can utilize <b>Core</b> <b>Image.</b> Preview and iPhoto are common examples.|$|R
50|$|<b>Core</b> <b>Image</b> abstracts the pixel-level {{manipulation}} process required when {{applying a}} filter to an image, making it simple for applications to implement image transformation capabilities without extensive coding. In a simple implementation, <b>Core</b> <b>Image</b> applies a single Image Filter to the pixel data {{of a given}} source to produce the transformed image. Each Image Filter specifies a single transform or effect, either built into <b>Core</b> <b>Image</b> or loaded from a plugin called an Image Unit. Combined with preset or user-defined input parameters, the filter {{can be applied to}} the original pixel data without modifying it, thereby providing non-destructive image editing.|$|R
50|$|Like Photoshop, <b>Core</b> <b>Image</b> {{can apply}} {{multiple}} filters {{to the same}} image source. Instead of applying a series of filters individually, <b>Core</b> <b>Image</b> assembles a dynamic instruction pipeline so that only one calculation needs {{to be applied to}} the pixel data to achieve a cumulative effect. Applying the pixel operations associated with multiple filters can be achieved simultaneously and without a significant increase in processing time. Regardless of the number of filters, <b>Core</b> <b>Image</b> assembles the code for this instruction pipeline with a just-in-time compiler, which is executed by either the CPU or graphics card's GPU, whichever can perform the calculation faster.|$|R
50|$|All {{graphics}} cards {{capable of}} supporting <b>Core</b> <b>Image</b> also support QuartzGL.|$|R
50|$|In 2011, Apple added <b>Core</b> <b>Image</b> to iOS in iOS 5.0.|$|R
5000|$|More than 110 {{visual effect}} objects (Dfx <b>library,</b> <b>Core</b> <b>Image</b> Filters) ...|$|R
50|$|<b>Core</b> <b>Image</b> is a pixel-accurate, near-realtime, {{non-destructive}} {{image processing}} technology in Mac OS X. Implemented {{as part of}} the QuartzCore framework of Mac OS X 10.4 and later, <b>Core</b> <b>Image</b> provides a plugin-based architecture for applying filters and effects within the Quartz graphics rendering layer. The framework was later added to iOS in iOS 5.|$|R
5000|$|... an <b>image</b> loading <b>library.</b> There {{are already}} good {{cross-platform}} <b>image</b> loading <b>libraries.</b>|$|R
5000|$|Integration {{of other}} Apple {{technologies}} such as <b>Core</b> <b>Image</b> and Quartz Composer ...|$|R
50|$|Bergman {{also has}} a {{collection}} with Arenapal : The Performing Arts <b>Image</b> <b>Library.</b>|$|R
5000|$|The Little Sweep (Boosey and Hawkes / ArenaPAL : Performing Arts <b>Image</b> <b>Library)</b> ...|$|R
30|$|Variations in {{grayscale}} {{values of}} the line-scan digital <b>core</b> <b>image,</b> X-ray CT image and X-ray radiograph reflect laminae. Based on the line-scan digital <b>core</b> <b>image,</b> laminae curved downwards due to drilling disturbance close to liners were frequently observed, which are easily recognized by X-ray CT image. The X-ray CT image (Fig. 4 (b)) also captures disturbance of laminae near the pebble at 60 cm. This pebble is clearly captured in the X-ray CT images but cannot {{be seen on the}} split core surface. However, disturbances of original sedimentary structures at corresponding range are evidenced in the line-scan digital <b>core</b> <b>image</b> as shown in Fig. 4 (c).|$|R
50|$|Aerial <b>image</b> <b>libraries</b> {{can provide}} a wealth of {{information}} to users of the imagery. Governments often use such libraries to maintain current records of construction and in conducting property assessment. Insurance companies can also use aerial <b>image</b> <b>libraries</b> to maintain records of natural disaster-related damages. Utilities companies may also keep libraries of electric corridors and pipeline networks to plan expansion or maintenance.|$|R
50|$|Nobby Clarke's full archive is {{currently}} available exclusively through the Arenapal Performing Arts <b>Image</b> <b>Library.</b>|$|R
40|$|The article {{examines}} the practice of some commercial <b>image</b> <b>libraries</b> of asserting an unqualified right to payment for any use of images held in their collections. Assessing the legitimacy of these demands for payment requires exploration of the interplay between the law of copyright, contract and statutory fraud. A better reconciliation {{of the interests of}} commercial <b>image</b> <b>libraries</b> and the users of images is recommended...|$|R
50|$|A new {{graphics}} processing API, <b>Core</b> <b>Image,</b> leveraging {{the power}} of the available accelerated graphics cards.|$|R
50|$|A {{new video}} {{graphics}} API, Core Video, which leverages <b>Core</b> <b>Image</b> to provide real-time video processing.|$|R
50|$|Simple Comic reads any <b>Core</b> <b>Image</b> {{supported}} format, including JPEG, GIF, PNG, JPEG2000 {{and text}} files.|$|R
5000|$|Filters {{are written}} in the <b>Core</b> <b>Image</b> Kernel Language, which shares a subset of {{commands}} with [...] OpenGL Shading Language (GLSL). When a compatible GPU is available, the <b>Core</b> <b>Image</b> compiler writes the instruction pipeline using GLSL, handling buffers and states transparently. Although GPU rendering is preferred, the compiler can operate in a CPU fallback mode, generating commands suitable for the current CPU architecture instead. CPU fallback uses the vector processing capabilities of the current CPU or CPUs, and it is multi-processor aware. Thus, <b>Core</b> <b>Image</b> performance depends on the GLSL capabilities of the GPU or the processing power of the CPU. With a supported GPU, most effects can be rendered in realtime or near-realtime.|$|R
50|$|Marsedit 3.0 was {{released}} in May 2010 and includes WYSIWYG editing, enhanced WordPress support, and <b>image</b> <b>library</b> integration.|$|R
50|$|Picturenation was a British-based online stock <b>image</b> <b>library</b> {{providing}} royalty-free <b>images</b> to the editorial, {{commercial and}} education sectors.|$|R
40|$|Drill cores are {{essential}} {{for the study of}} deep-sea sediments and on-land sites because often no suitable outcrop is available or accessible. These cores form the backbone of stratigraphical studies using and combining various dating techniques. Cyclostratigraphy is usually based on fast and inexpensive measurements of physical sediment properties. One indirect but highly valuable proxy for reconstructing the sediment composition and variability is sediment color. However, cracks and other disturbances in sediment cores may dramatically influence the quality of color data retrieved either directly from photospectrometry or derived from <b>core</b> <b>image</b> analysis. Here we present simple but powerful algorithms to extract color data from <b>core</b> <b>images,</b> and focus on routines to exclude cracks from these images. Results are discussed using the example of an ODP core from the Ceara Rise in the Central Atlantic. The crack correction approach presented highly improves the quality of color data and allows the easy incorporation of cracked cores into studies based on <b>core</b> <b>images.</b> This facilitates the quick and inexpensive generation of large color datasets directly from quantified <b>core</b> <b>images,</b> for cyclostratigraphy and other purposes...|$|R
