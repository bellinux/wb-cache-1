43|0|Public
2500|$|The {{characters}} [...] "<" [...] and [...] "&" [...] are key syntax {{markers and}} may never appear in content outside a <b>CDATA</b> section.|$|E
2500|$|The {{characters}} {{making up}} an XML document {{are divided into}} markup and content, which may be distinguished by the application of simple syntactic rules. Generally, strings that constitute markup either begin with the character < and end with a >, or they begin with the character & and end with a. Strings of characters that are not markup are content. However, in a <b>CDATA</b> section, the delimiters <!> are classified as markup, while the text between them is classified as content. In addition, whitespace {{before and after the}} outermost element is classified as markup.|$|E
50|$|That is why <b>CDATA</b> {{sections}} {{should be}} used only for XML documents that are keyed in manually, where they contain code or XML as data. Enclosing these in a <b>CDATA</b> section greatly improves readability. But when XML is generated programmatically, <b>CDATA</b> sections should be avoided.|$|E
50|$|Except for <b>CDATA</b> nodes, {{the three}} above {{types of actions}} can handle all {{elements}} in an XML document. <b>CDATA</b> in general can be handled either in the creator function or the adder function.|$|E
5000|$|New {{authors of}} XML {{documents}} often misunderstand {{the purpose of}} a <b>CDATA</b> section, mistakenly believing that its purpose is to [...] "protect" [...] data from being treated as ordinary character data during processing. Some APIs for working with XML documents do offer options for independent access to <b>CDATA</b> sections, but such options exist above and beyond the normal requirements of XML processing systems, and still do not change the implicit meaning of the data. Character data is character data, regardless of whether it is expressed via a <b>CDATA</b> section or ordinary markup. <b>CDATA</b> sections are useful for writing XML code as text data within an XML document. For example, if one wishes to typeset a book with XSL explaining the use of an XML application, the XML markup to appear in the book itself will be written in the source file in a <b>CDATA</b> section.|$|E
5000|$|<b>CData</b> Software ships type 4 JDBC Drivers {{for various}} applications, databases, and Web APIs.|$|E
50|$|Finally, {{note that}} markup details, {{such as the}} use of <b>CDATA</b> {{sections}} or the order of attributes, are not necessarily preserved in the output, since this information is not part of the XPath data model. To show <b>CDATA</b> markup in the output, the XSLT stylesheet that contains the identity transform template (not the identity transform template itself) should make use of the xsl:output attribute called cdata-section-elements.|$|E
5000|$|CDATASection {{represents}} a <b>CDATA</b> section in a document (text that will NOT be parsed by a parser) ...|$|E
5000|$|... cdata-section-elements {{specifies}} {{a list of}} {{the names}} of elements whose text node children should be output using <b>CDATA</b> sections.|$|E
5000|$|Another {{issue is}} that an XML {{document}} can be transcoded from one encoding to another during transport. When the XML document is converted to a more limited character set, such as ASCII, characters that cannot be represented any more are converted to [...] character references for a lossless conversion. But within a <b>CDATA</b> section, these characters {{can not be represented}} at all, and have to be removed or converted to some equivalent, altering the content of the <b>CDATA</b> section.|$|E
5000|$|The {{characters}} [...] "<" [...] and [...] "&" [...] are key syntax {{markers and}} may never appear in content outside a <b>CDATA</b> section.|$|E
50|$|The {{population}} is about 1000 people.(Pop - Grants Com1,412 - ABS <b>Cdata</b> 885 - ERP 977). The community is serviced by a barge from Darwin {{once a week}} that comes up the Buckingham River.|$|E
5000|$|... {{it means}} that {{elements}} named foo may optionally have an attribute named [...] "a" [...] which is of type <b>CDATA.</b> In an XML document that is valid according to this DTD, an element like this might appear: ...|$|E
50|$|The {{optional}} syntax attribute {{was added}} to SLINK, ALINK, and TLINK. Syntax {{can be used to}} hold <b>CDATA,</b> but is generally only used by annotation programs to hold the data that {{led to the creation of}} the tag.|$|E
5000|$|Templates {{may also}} {{redirect}} to other patterns, using an element called srai (Symbolic Reduction in Artificial Intelligence). This {{can be used}} to implement synonymy, as in this example (where <b>CDATA</b> is used to avoid the need for XML escaping): ...|$|E
5000|$|In text data, any Unicode {{character}} {{not available}} in the encoding declared in the [...] header can be represented using a [...] numerical character reference. But the text within a <b>CDATA</b> section is strictly limited to the characters available in the encoding.|$|E
50|$|The term <b>CDATA,</b> meaning {{character}} data, is {{used for}} distinct, but related, purposes in the markup languages SGML and XML. The term indicates that a certain portion of the document is general character data, rather than non-character data or character data with a more specific, limited structure.|$|E
50|$|In XML documents, <b>CDATA</b> {{sections}} allows use {{of characters}} such as & and < without an XML parser attempting to interpret them {{as part of}} the structure of the document itself. This can be useful when including literal text and scripting code, to keep the document well formed.|$|E
5000|$|This {{technique}} is only necessary when using inline scripts and stylesheets, and is language-specific. CSS stylesheets, for example, only support the second style of commenting-out (/* .../), but CSS also has less {{need for the}} < and & characters than JavaScript and so less need for explicit <b>CDATA</b> markers.|$|E
5000|$|Similarly, if the numeric {{character}} reference [...] appears in element content, {{it will be}} interpreted as the single Unicode character 00F0 (small letter eth). But if the same appears in a <b>CDATA</b> section, it will be parsed as six characters: ampersand, hash mark, digit 2, digit 4, digit 0, semicolon.|$|E
50|$|The {{following}} code fragment is {{a simple}} ASCII diagram depicting the process flow for a system administration script contained in a Windows Script File running under Windows Script Host. Although a section marking the code appears as a comment, the diagram itself actually appears in an XML <b>CDATA</b> section, which is technically considered distinct from comments, but can serve similar purposes.|$|E
5000|$|All {{external}} entities used {{by these}} standard document types are referenced by simple attributes, declared with the <b>CDATA</b> type in their standard DTD (such as the [...] "href" [...] attribute of an anchor [...] "a" [...] element, or the [...] "src" [...] attribute {{of an image}} [...] "img" [...] element, whose values are interpreted as a URI, without needing any catalog of public identifiers, i.e., known FPI) ...|$|E
50|$|An SGML or XML DTD {{may also}} include entity {{declarations}} {{in which the}} token <b>CDATA</b> is used to indicate that entity consists of character data. The character data may appear within the declaration itself or may be available externally, referenced by a URI. In either case, character reference and parameter entity reference markup is allowed in the entity, and will be processed as such when it is read.|$|E
5000|$|Within {{the body}} of the SGML document, these {{referenced}} external entities (whose name is specified between [...] "&" [...] and [...] ";") are not replaced like usual named entities (defined with a <b>CDATA</b> value), but are left as distinct unparsed tokens that may be used either as the value of an element attribute (like above) or within the element contents, provided that either the DTD allows such external entities in the declared content type of elements or in the declared type of attributes (here the ENTITY type for the data attribute), or the SGML parser is not validating the content.|$|E
5000|$|Some {{applications}} (but not XML or SGML parsers themselves) {{also allow}} referencing notations indirectly by naming {{them in the}} [...] "URN:name" [...] value of a standard <b>CDATA</b> attribute, everywhere a URI can be specified. However this behaviour is application-specific, and requires that the application maintains a catalog of known URNs to resolve them into the notations that have been parsed in a standard SGML or XML parser. This use allows notations to be defined only in a DTD stored as an external entity and referenced only as the external subset of documents, and allows these documents to remain compatible with validating XML or SGML parsers that have no direct support for notations.|$|E
5000|$|... where [...] is {{the random}} amount of new {{commodity}} <b>cdata</b> that exogenously arrives to node n on slot t, and [...] is the transmission rate allocatedto commodity c traffic on link (n,b) on slot t. Note that [...] {{may be more}} than the amount ofcommodity c data that is actually transmitted on link (a,b) on slot t. This is because there may not be enough backlogin node n. For this same reason, Eq. (6) is an inequality, rather than an equality, because {{may be more than}} the actual endogenous arrivals of commodity c to node n on slot t.An important feature of Eq. (6) is that it holds even if the [...] decision variables are chosen independently of queue backlogs.|$|E
50|$|In XML, {{the phrase}} well-formed {{document}} {{is often used}} to describe a text that follows all the syntactic rules as well-formedness rules in the XML specification: strictly speaking the phrase is tautological, since a text that does not follow these rules is not an XML document. The rules for well-formed XML documents go beyond the general requirements for the markup languages mentioned above. The additional rules include, for example, a rule to quote attribute values, case-sensitiveness of tag names, rules about the characters that can appear in names and elsewhere, the syntax of comments, processing instructions, entity references, and <b>CDATA</b> sections, and many other similar details. Sometimes the adjective well-formed is used to contrast with valid: a valid XML document is one that is not only well-formed, but also conforms to the grammar defined in its own DTD (Document Type Definition).|$|E
40|$|R topics documented: bce [...] 2 <b>cdata</b> [...] . 2 center [...] 3 crrc [...] . 3 crrs [...] . 5 crrvvs [...] 8 print. crrs [...] . 8 psh. test [...] . ...|$|E
40|$|This paper aims to {{investigate}} the existence of 2 ̆ 01 <b>cdata</b> network effects 2 ̆ 01 d in data platform services such as Big Data, Internet-of-Things (IoT) and Artificial Intelligence (AI) and their influence on the diffusion of the services. It intendsto present a preliminary formal analysis ofthe effects of data network externalities. Policy implications {{will be discussed in}} terms of the diffusion of services...|$|E
40|$|Background The {{data for}} this study comes from the Queensland Linked Data Set [7] for the 1996 / 1997 {{financial}} year. The data set contains de-identified individual-level linked data from hospital admission records, Medicare Benefits Scheme claims (MBS) and Pharmaceutical Benefits claims (PBS). Population figures are based on 1996 census data by the Australian Bureau of Statistics (ABS 1996 Census of Population and Housing, Postal Area Population Data from <b>CDATA</b> 96) ...|$|E
40|$|OMB No. 0704 - 0788 PUNo, ('epong o [...] ,den for thN, o 01 ectofl Of {{information}} is ewtateo jo a~eraqe I Ncu oer reioov. e. inCluding tthe timne for reviewing instructons. searching r.,stlg <b>cdata</b> soyfcei gathering and mnantaning,the clat. nfeedetl a nd coffloift I g &nd reviewing trie {{collection of information}} Send comnments regardingq thst burden estimnate Of any other aWed of #this coledlon of nt 0 'maton [...] ncluain suggestions for reoa. cing this ouroen to wasmt''gtor, fseacauarteri Services, Directorate for n"form'ation Qoeratlons aria ftegoeai 1215 Jefferso...|$|E
30|$|Context-aware parsing [23, 29] {{refers to}} methods and {{algorithms}} {{in which the}} scanner uses contextual information to disambiguate lexical syntax. This functionality allows a parser to carry out an alternative interpretation for the extension message. When they are ignored, the extension message can later be parsed by a second parser for {{that part of the}} message (e.g., <b>CDATA</b> escape sections in XML documents). The context change may be triggered by different mechanisms like escape strings (or characters), or implicitly at predefined locations (e.g., SOAP envelope messages can only contain XML extensions, which may only be placed inside the <head> or <body> elements).|$|E
40|$|RDDL {{history and}} use The Resource Directory Description Language (RDDL) [RDDL] {{was created to}} answer the {{question}} of what ought a namespace URI reference? RDDL uses an XHTML [XHTML Basic] format in which resource elements are embedded. Each resource element contains a simple XLink referencing the related resource. The use of URIs as a mechanism of namespace partitioning has been controversial and confusing for several reasons: 1. For the computer science community: XML namespaces differ from traditional namespaces as traditional namespaces conventionally refer to a set whereas XML namespaces more properly refer to an unbounded partition 2. For the web community: Use of URIs which can be resolved (i. e URLs) suggests that XML namespace identifiers 'point to something ' yet no guidance is provided on what they ought reference. RDDL [Resource Directory Description Language] is simple, addresses both of these issues, and works with the current Web infrastructure. The Resource Directory Description Language is an extension of W 3 C XHTML Basic 1. 0 with an added element named resource. This element serves as an XLink to the referenced resource, and contains a human-readable description of the resource and machine readable links which describe the purpose of the link {{and the nature of the}} resource being linked to. The nature of the resource being linked to is indicated by the xlink:role attribute and the purpose of the link is indicated by the xlink:arcrole attribute. The rddl:resource element is defined as: <!ATTLIST rddl:resource id ID #IMPLIED xml:lang NMTOKEN #IMPLIED xml:base <b>CDATA</b> #IMPLIED xmlns:rddl <b>CDATA</b> #FIXE...|$|E
40|$|The concept 2 ̆ 01 <b>cData</b> Envelopment Analysis 2 ̆ 01 d (DEA) was {{introduced}} in the journal literature by the highly influential 1978 paper of Charnes, Cooper, and Rhodes. In the subsequent literature the development of research leading up to this paper tended to be forgotten. However, studying this diffusion of ideas may still give valuable insights into research issues still unexplored and insight in the research process itself. A natural starting point is Farrell 2 ̆ 019 s seminal 1957 paper on concepts of efficiency and their computation. The richness of ideas presented in Farrell is demonstrated {{by the fact that the}} developments in the following two decades were based on aspects and ideas there. The origins of the main developments are identified, and the connections to Charnes, Cooper, and Rhodes are explored...|$|E
40|$|DOM is a {{programming}} interface {{that provides}} {{a way for the}} values and structure of an XML document to be accessed and manipulated. Tasks that can be performed with DOM � Navigate an XML document's structure, which is a tree stored in memory. � Report the information found at the nodes of the XML tree. � Add, delete, or modify elements in the XML document. DOM represents each node of the XML tree as an object with properties and behavior for processing the XML. The root of the tree is a Document object. Its children represent the entire XML document except the xml declaration. On the next page we consider a small XML document with comments, a processing instruction, a <b>CDATA</b> section, entity references, and a DOCTYPE declaration, in addition to its element tree. It is valid with respect to a DTD, named root. dtd. ...|$|E
40|$|In {{common with}} much of Asia, most Australians live close to the sea, with a {{significant}} portion living in the immediate coastal hazard zone. In Queensland for example 87 percent of the population, over 2. 8 million people, live in census collection districts within 30 kilometres of the coast. Of these people, over 400 000 are within one kilometre of the sea (ABS <b>CData</b> 2001). It was the one kilometre coastal zone adjacent to the Indian Ocean that bore {{the impact of the}} tsunami of the 26 th December 2004. The coasts of Asia are as variable as those of Australia, but in all places there is a greater concentration of population, settlements and infrastructure on the flattest and lowest land. This paper looks at the Phuket experience of the tsunami to draw some initial observations and lessons that should influence hazard mitigation in Australia and more generally, in coastal hazardous locations elsewhere in the region. There are four significant sets of issues that will be presented. 1. Critical infrastructure and lifelines in relation to response and recovery. 2. Land use and coastal built structures. 3. Tourists and the tourism industry. 4. Hazard education...|$|E
