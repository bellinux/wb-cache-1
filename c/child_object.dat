16|537|Public
50|$|The main {{conceptual}} difference {{under this}} arrangement is that changes {{made to a}} prototype object are not automatically propagated to clones. This {{may be seen as}} an advantage or disadvantage. (However, Kevo does provide additional primitives for publishing changes across sets of objects based on their similarity — so-called family resemblances or clone family mechanism — rather than through taxonomic origin, as is typical in the delegation model.) It is also sometimes claimed that delegation-based prototyping has an additional disadvantage in that changes to a <b>child</b> <b>object</b> may affect the later operation of the parent. However, this problem is not inherent to the delegation-based model and does not exist in delegation-based languages such as JavaScript, which ensure that changes to a <b>child</b> <b>object</b> are always recorded in the <b>child</b> <b>object</b> itself and never in parents (i.e. the child's value shadows the parent's value rather than changing the parent's value).|$|E
5000|$|In prototype-based {{languages}} {{that use}} delegation, the language runtime {{is capable of}} dispatching the correct method or finding the right piece of data simply by following a series of delegation pointers (from object to its prototype) until a match is found. All that is required to establish this behavior-sharing between objects is the delegation pointer. Unlike the relationship between class and instance in class-based object-oriented languages, {{the relationship between the}} prototype and its offshoots does not require that the <b>child</b> <b>object</b> have a memory or structural similarity to the prototype beyond this link. As such, the <b>child</b> <b>object</b> can continue to be modified and amended over time without rearranging the structure of its associated prototype as in class-based systems. It is also important to note that not only data, but also methods can be added or changed. For this reason, some prototype-based languages refer to both data and methods as [...] "slots" [...] or [...] "members".|$|E
5000|$|The {{murder was}} {{committed}} incident to an act, scheme, course of conduct, or criminal episode {{during which the}} murderer committed or attempted to commit aggravated robbery, robbery, rape, rape of a <b>child,</b> <b>object</b> rape, object rape of a child, forcible sodomy, sodomy upon a child, forcible sexual abuse, sexual abuse of a child, aggravated sexual abuse of a child, child abuse, aggravated sexual assault, aggravated arson, arson, aggravated burglary, burglary, aggravated kidnapping, or kidnapping, or child kidnapping; ...|$|E
30|$|It {{should be}} {{stressed}} {{that the number of}} <b>child</b> <b>objects</b> of a template may be left undefined, improving the template expressiveness. The vocabulary allows for defining types. A type for <b>child</b> <b>objects</b> can entail several instantiations.|$|R
5000|$|Determine {{randomly}} if any {{genes are}} mutated in the <b>child</b> <b>objects.</b>|$|R
50|$|Margaret Mahler's separation-individuation {{theory of}} child {{development}} contained three phases regarding the <b>child's</b> <b>object</b> relations.|$|R
50|$|Each {{analysis}} {{or design}} space within STK {{is called a}} scenario. Within each scenario any number of satellites, aircraft, targets, ships, communications systems or other objects can be created. Each scenario defines the default temporal limits to the child objects, {{as well as the}} base unit selection and properties. All of these properties can be overridden for each <b>child</b> <b>object</b> individually, as necessary. Only one scenario may exist at any one time, although data can be exported and reused in subsequent analyses.|$|E
50|$|Cloning {{refers to}} a process whereby a new object is {{constructed}} by copying the behavior of an existing object (its prototype). The new object then carries all the qualities of the original. From this point on, the new object can be modified. In some systems the resulting <b>child</b> <b>object</b> maintains an explicit link (via delegation or resemblance) to its prototype, {{and changes in the}} prototype cause corresponding changes to be apparent in its clone. Other systems, such as the Forth-like programming language Kevo, do not propagate change from the prototype in this fashion, and instead follow a more concatenative model where changes in cloned objects do not automatically propagate across descendants.|$|E
30|$|Relationships give {{semantics}} to a composition. They relate <b>child</b> <b>object</b> interfaces. Since {{child objects}} of a composition (and their interfaces) {{can be left}} undefined by a template, relationships can also be established among child-object types, and among child objects types and resources. Therefore, relationships referring to child-object types need also to specify how to iterate on the interfaces of the instances of these child objects. As an example, {{it is possible to}} create relationships from each instantiated <b>child</b> <b>object</b> of a given type to all other instances of another type.|$|E
30|$|Resources: {{instantiated}} <b>child</b> <b>objects</b> that {{shall be}} inherited by all compositions that use (follow) the template.|$|R
6000|$|... 'How's my Jenny?' {{said the}} man, timidly. 'How's my Jenny Wren, best of <b>children,</b> <b>object</b> dearest {{affections}} broken-hearted invalid?' ...|$|R
30|$|Interfaces of <b>child</b> <b>objects</b> of a {{composition}} may be mapped to interfaces {{of the composition}} in order to externalize these internal interfaces {{to be used in}} relationships defined outside the composition. Similarly to relationships, since interfaces of {{a composition}} can be left undefined by a template, mappings can be established between interface types of <b>child</b> <b>objects</b> and interface types of the composition. Therefore, mappings must also to specify how to iterate on interface instances.|$|R
40|$|Object-oriented {{languages}} {{allow to}} encapsulate the data; {{the unit of}} the encapsulation is an object. Programmers are advised to reect {{the structure of the}} data while designing the layout of objects. This means that a lot of objects may be created. The semantics of Java dictates that such objects are stored in the heap and are accessed through references. Direct implementation of this would suer from the overhead of memory management and pointer dereferencing. Object Inlining is an analysis to detect, whether some child objects could be stored together with their parent|the reference from the parent object to the <b>child</b> <b>object</b> would be replaced with the actual data of the <b>child</b> <b>object.</b> We present our analysis for Object Inlining, whose improvement over the previous ones is, that it can also detect, when a <b>child</b> <b>object</b> is replaced with a new one. 1 Introduction and Related Work Java has a simple, uniform object model|all objects are accessed via references. This simplies p [...] ...|$|E
30|$|Vocabulary: {{defining}} the allowed types of <b>child</b> <b>object</b> (the components) of the template, the allowed types of interfaces for these child objects {{and for the}} template itself, and the allowed relations {{to be used in}} relationships among child objects.|$|E
30|$|Lines 5 to 9 define an {{interface}} type for the template. This type selects every <port> {{element in the}} padding document whose class attribute has “pButton” as value. Concerning indexation, the first element found in the padding document that agrees with the “port[class = pButton]” selector {{is related to the}} pButton [1] identifier; the second to the pButton [2] and so on. This procedure is particularly useful to understand the mapping specifications, defined in lines 6 to 8, between each “pButton” interface to each corresponding “button” component. Note in line 6 how iteration is defined on each pButton[i] interface instance. In line 7 the interface of a <b>child</b> <b>object</b> is specified, by using component attribute and omitting the interface attribute. When the interface parameter is omitted, it is assumed that the <b>child</b> <b>object</b> interface corresponds to the one representing the whole content of the object.|$|E
30|$|Types for <b>child</b> <b>objects</b> of a {{template}} {{are defined by}} the <component> element. Interface types, both for the template itself and for its <b>child</b> <b>objects,</b> are defined by the <interface> element. A relation type {{is defined by the}} <relation> element. These elements have the required id attribute, and the selects attribute, which establishes to which target padding language elements the corresponding types must be applied. The syntax of allowed values for the selects attribute is described in Sect.  3.4.|$|R
5000|$|Composite pattern: defines Composite object (e.g. a shape) {{designed}} as a composition of one-or-more similar objects (other kinds of shapes/geometries), all exhibiting similar functionality. The Composite object then exposes properties and methods for <b>child</b> <b>objects</b> manipulation {{as if it were}} a simple object.|$|R
50|$|School House - A one-room school {{house like}} Dolly {{attended}} as a <b>child.</b> <b>Objects</b> on display include love letters written to Dolly by a schoolmate, {{a photo of}} Dolly {{in front of the}} United States Capitol her senior year, and her high school band uniform.|$|R
30|$|When an <{{interface}}> element defines an {{interface type}} for a composition, in particular for the template, {{it can also}} define a mapping to an interface of a <b>child</b> <b>object</b> of the composition, externalizing this mapped interface. As mappings can be established among types, <forEach> child elements {{can be used to}} iterate on these type instances.|$|E
30|$|Child {{objects of}} {{templates}} can be media objects (any object whose content {{is to be}} processed for exhibition) or other nested compositions. An interface can define part {{of the content of}} a media object, or can define a <b>child</b> <b>object</b> property, like its positioning on the screen, etc. Child composite objects and the template itself may also have interfaces that externalize interfaces of their internal child objects. Note that in defining the vocabulary we are also defining the hierarchy imputed to the child objects, given by the composition nesting.|$|E
40|$|In {{the paper}} we {{describe}} a new construct which {{is referred to}} as concept and a new concept-oriented approach to programming. Concept generalizes conventional classes and consists of two parts: an objects class and a reference class. Each concept has a parent concept specified via inclusion relation. Instances of reference class are passed by value and are intended to represent instances of <b>child</b> <b>object</b> classes. The main role of concepts consists in indirect object representation and access. In concept-oriented programming it is assumed that a system consists of (i) conventional target business methods (BMs), and (ii) hidden representation and access (RA) methods. If conventional classes are used to describe only BMs then concepts allow the programmer to describe both types of functionality including its hidden intermediate functions which are automatically executed when objects are being accessed...|$|E
60|$|I {{asked her}} why she did not take away this very {{fascinating}} child altogether, and arrange for her to enter one of the Army Homes. She answered because, although the mother would be glad enough to let her go, the father, who is naturally fond of his <b>children,</b> <b>objected.</b>|$|R
50|$|Save the <b>Children</b> <b>objected</b> to {{the film}} and refused to pay for it. They {{prevented}} it from being shown until 2011 when they eventually agreed to allow a screening by the BFI. Kestrel Films, co-founded by Tony Garnett and others, nearly went bankrupt in their legal battle with Save the Children.|$|R
50|$|A direct {{correlation}} {{has been established}} between the severity of behavioral problems with {{the age at which}} adoption occurs; adoptions that occur in later life with more extensive maternal deprivation have more difficulties growing up than other children. Researchers consider this maternal deprivation to disrupt the <b>child’s</b> <b>object</b> relations, causing the difficulties.|$|R
40|$|The titled of this ungraduated {{thesis is}} Diversion of {{implementation}} in completion {{the criminal case}} of traffic violations in children, which aims to collect data about the implementation of diversion in the juvenile criminal justice system {{as a form of}} legal protection of children associated with case of traffic violations committed by childrenThis study uses normative research methods that focuses on legislation and the judge's decision with regard to a criminal traffic offense committed by a <b>child.</b> <b>Object</b> used by the author in writing this law is primary data and secondary data. Application of research results in the completion of criminal cases of diversion of traffic violations committed by children is quite effective. Where in Applied diversion must first obtain the consent of the victim. Diversion can be applied starting from the investigation, prosecution by the court...|$|E
40|$|The research, {{develop and}} {{validate}} {{the theory and}} development of teacher educators of mathematics learning {{will lead to a}} better understanding of how expertise is developed in carrying out professional duties. In doing so, will provide evidence to inform discussions about what constitutes best practice in mathematics teacher education. The concept of Zone Proximal Development (ZPD) which was developed by the Soviet psychologist Lev Vygotsky and social constructivist (1896 - 1934) provides an interesting metaphor for designing teaching and learning to analyze, this poses a real challenge when it is practiced. Valsiner has broadened its interpretation of the concept of the ZPD Vygotsky to combine the social setting and the objectives and actions of participants. The theory proposes the existence of two additional zones, Zone of Free Movement (ZFM) and Zone of Promotion Action (ZPA). ZFM is a binding agent that is given by adults to limit access to its territory the <b>child,</b> <b>object,</b> or way of acting on those objects. While the ZPA is what adults are promoting, with no obligation for the child to receive what is being promoted. Further development of the zone when interpreting the ZPD of practitioner Valsiner found the presence of an Illusionary Zone (IZ). The presence or absence of IZ in practitioner provide insights for the development of potential teachers. Exploration in the field found a lack of connection to the conceptual understanding of procedural understanding, this situation makes IZ suspected. Key Words: practitioner, ZPD, ZFM, ZPA, IZ...|$|E
40|$|This ethnographic {{study used}} {{qualitative}} methods {{to explore the}} meaning of toys and other objects {{from the perspective of}} young, typically developing children. It was conducted at the childcare site of a large, university-affiliated medical center in Southern California. The study’s primary unit of analysis was the intersection of <b>child,</b> <b>object,</b> and the social and physical contexts of interaction. Data were collected over six months by methods including participant observation, limited audio recording and extensive video recording in the children’s classroom and large outdoor playground. Research participants included 26 ethnically diverse, four-year-old children enrolled in a single classroom of the childcare center. Five of the children were identified as primary informants. Interviews were completed with selected parents, the center’s director, and two primary classroom teachers. In conjunction with selected literature, data gathered from adults served to triangulate the study’s findings, as the voices and actions of the children themselves remained central throughout interpretation. Data analysis drew heavily on narrative and action theories. This paper presents both broad and fine-grained analyses of the study data. This study’s results suggest that, from the perspective of young children, play with toys and other objects is a seriously important part of all daily routines and occupations. Toy play serves as a key context for actively making meaning of the world and their place in it. For young children not yet fully capable of complex verbal communication and cultural understanding, particular toys achieve meaning out of proportion to the objects themselves, in the context of everyday, social engagement with peers and adults. The meaning of toys is located not in the objects themselves, but as they are activated, or made real by children in sociocultural, physical/material, and temporal contexts. Toys illuminate culturally invested meaning and simultaneously provide the means to imaginatively transform meaning. In social context, toys bridge literal and metaphoric communicative gaps, alternately inviting and buffering participation. They bridge distances between the inner child, the safety of home and family, and the larger world, including daycare. This study confirms the importance of toy play as a necessary, enriching component of early childhood occupational experience...|$|E
50|$|There {{are open}} source tools {{available}} {{to run the}} Certificate Authority and manage the resource certificate and <b>child</b> <b>objects</b> such as ROAs. In addition, the RIRs have a hosted RPKI platform available in their member portals. This allows LIRs to choose {{to rely on a}} hosted system, or run their own software.|$|R
5000|$|Clones: clones are <b>child</b> <b>objects</b> of an {{original}} parent object(s) which can have different transformations applied {{from those of}} the parent object. Clones can be created via Copies, the Spray tool or a Menu interface. Transformations include; size, position, rotation, blur, opacity, color and symmetry (layout). Clones are updated live whenever the parent object changes.|$|R
30|$|Lines 14 to 22 define {{relationships}} established among <b>child</b> <b>objects</b> of the template, {{when any}} of the buttons is selected. Section 3.6 presents relationship specifications in more details. Note, however, that the order to apply the actions defined by a relationship is the order of their definition in the <link> specification; in this case first “stop” and then “start”.|$|R
40|$|Masa kecil adalah masa yang paling indah, di masa anak-anak kita tidak terbebani dengan hiruk pikuk yang terjadi ketika telah dewasa. Peran daya imajinasi pada masa anak-anak ternyata dapat mempengaruhi dalam kehidupan anak tersebut untuk bertumbuh kembang khususnya ketika sedang bermain. Proses imajinatif pada masa anak-anak merupakan fenomena yang menarik untuk dijadikan ide kreatif, oleh karena itu penulis berkeinginan mengambil imajinasi penulis semasa kecil untuk dijadikan ide gagasan dalam berkarya seni. Pembuatan karya skripsi ini memiliki beberapa tujuan, yaitu: 1. Bagaimana mengembangkan gagasan pada karya masa kecilku yang akan diaplikasikan pada seni lukis, 2. Mendeskripsikan visual masa kecilku yang akan diaplikasikan pada seni lukis. Metode penciptaan yang digunakan melalui tahap pencarian ide, stimulasi, kontemplasi, prosedur penciptaan, deskripsi dan apresiasi. Merangkai unsur-unsur dan prinsip seni rupa pada medium kanvas menggunakan cat akrilik. Proses berkarya mencakup pecarian ide dari pengalaman masa kecil penulis yang diolah melalui gambar sketsa untuk dieksplorasi objek. Kemudian sketsa dieksekusi pada kanvas. Karya lukis yang penulis buat berjumlah tiga buah karya, pada karya pertama berjudul “space traveler” berukuran 175 x 175 cm, yang menampilkan objek anak berseragam asronot yang sedang melayang di ruang angkasa menggambarkan imajinasi dari cita-cita penulis di masa kecil, karya yang kedua berjudul “survivor” berukuran 175 x 190 cm, melukiskan diri penulis semasa kecil yang sedang berada di medan perang menggambarkan ide imajinatif dari mainan sederhana seperti batang daun pisang yang terlukiskan pada karya kedua, dan karya yang ketiga berjudul ‘’I can fly’’ berdiameter 175 cm. divisualisasikan dengan objek potret diri penulis semasa kecil yang sedang meniup gelembung sabun sambil terbawa terbawa terbang didalam gelembung sabun, menggambarkan imajinasi yang muncul dari permainan favorit penulis semasa itu. Dengan penciptaan karya lukis ini diharapkan dapat membangun komunikasi antara penulis dan masyarakat luas melalui seni lukis.; [...] -Childhood is {{the most}} beautiful, in the future our {{children}} are not burdened with the bustle that occurs when an adult. The role of imagination in childhood that can affect {{the lives of these}} children to grow flowers, especially when you're playing. Imaginative process in childhood is an interesting phenomenon to be creative ideas, therefore the author desirous of taking the author's imagination as a child to be an idea ideas in the work of art. Making the work of this thesis has several objectives, namely: 1. How to develop ideas on the work of my childhood that will be applied to the art of painting, visual 2. Describe my childhood that will be applied to the art of painting. Creation methods used through the discovery stage of ideas, stimulation, contemplation, creation procedures, descriptions and appreciation. Assembling the elements and principles of art on canvas using acrylic paint medium. Pecarian working process includes the idea of childhood experiences writer is processed through the drawing object to be explored. Then sketch executed on canvas. Paintings that the author made of three pieces of work, the first work titled "space traveler" measuring 175 x 175 cm, which displays the <b>child</b> <b>object</b> uniformed asronot who was floating in space describes the imagination of the ideals of the author in childhood, the work of the second entitled "survivor" measuring 175 x 190 cm, depicts the writer as a child who was in the battlefield illustrate the imaginative idea of a simple toy like stems of banana leaves portrayed in the work of both, and the work of the third titled '' I can fly '' diameter 175 cm. visualized with the object of self-portrait of the author as a child who is blowing bubbles as he brought in a soap bubble fly-borne, depicts the imagination that arises from the author's favorite game during it. With the creation of the painting is expected to establish communication between the writer and society through art...|$|E
60|$|When Button-Bright {{could eat}} no more he filled {{the pockets of}} his jacket with cakes and cheese, and not even the <b>children</b> <b>objected</b> to this. Indeed they all seemed pleased to see the strangers eat, so Cap'n Bill decided that no matter what the King of Jinxland was like, the people would prove {{friendly}} and hospitable.|$|R
5000|$|Chapter 2 {{requires}} {{schools and}} colleges to obtain consent of one parent of a child under 18 for acquiring and processing the child's biometric information and gives the child rights to stop the processing of their biometric information regardless of any parental consent. It also states that processing of biometric information it must be discontinued if any parent of the <b>child</b> <b>objects.</b>|$|R
5000|$|The element {{declares}} an [...] {{method to}} accept a visitor, taking the visitor as an argument. Concrete elements, derived from the element class, implement the [...] method. In its simplest form, this {{is no more than}} a call to the visitor’s [...] method. Composite elements, which maintain a list of <b>child</b> <b>objects,</b> typically iterate over these, calling each child’s [...] method.|$|R
50|$|For each object {{within a}} scenario, various reports and {{graphics}} (both static and dynamic) may be created. Relative parameters, between one object and another {{can also be}} reported {{and the effect of}} real-world restrictions (constraints) enabled so that more accurate reporting is obtained. Through the use of the constellation and chains <b>objects,</b> multiple <b>child</b> <b>objects</b> may be grouped together and the multipath interactions between them investigated.|$|R
5000|$|Part 1, Chapter 2 {{requires}} {{schools and}} colleges to obtain consent of one parent of a child under 18 before acquiring and processing the child's biometric information, gives the child rights to stop the processing of their biometric information regardless of any parental consent, and requires that if any parent of the <b>child</b> <b>objects</b> to the processing of biometric information, it must be discontinued.|$|R
