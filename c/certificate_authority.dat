522|276|Public
25|$|The server usually then sends {{back its}} {{identification}} {{in the form}} of a digital certificate. The certificate contains the server name, the trusted <b>certificate</b> <b>authority</b> (CA) that vouches for the authenticity of the certificate, and the server's public encryption key.|$|E
25|$|For example, Adobe Systems grants permissions {{to enable}} {{additional}} features in Adobe Reader, using public-key cryptography. Adobe Reader verifies that the signature uses a certificate from an Adobe-authorized <b>certificate</b> <b>authority.</b> Any PDF application {{can use this}} same mechanism for its own purposes.|$|E
25|$|For {{security}} reasons, 64-bit {{versions of}} Windows Vista (and of Windows 7 as well) allow only signed drivers {{to be installed}} in kernel mode. Because code executing in kernel mode enjoys wide privileges on the system, the signing requirement aims to ensure that only code with known origin execute at this level. In order for a driver to be signed, a developer/software vendor will have to obtain an Authenticode certificate with which to sign the driver. Authenticode certificates {{can be obtained from}} certificate authorities trusted by Microsoft. Microsoft trusts the <b>certificate</b> <b>authority</b> to verify the applicant's identity before issuing a certificate. If a driver is not signed using a valid certificate, or if the driver was signed using a certificate which has been revoked by Microsoft or the <b>certificate</b> <b>authority,</b> Windows will refuse to load the driver.|$|E
40|$|This thesis {{deals with}} basic {{principles}} of electronic signature and functions of <b>certificate</b> <b>authorities,</b> which is complemented with description of legislation environment in Czech Republic. The {{second part of the}} thesis includes methodology for comparison of <b>certificate</b> <b>authority's</b> functions in the field of qualified personal certificates. This methodology is afterwards applied for comparison of functions of accredited <b>certificate</b> <b>authorities</b> operating in Czech Republic and for determination of the best authority according to defined criteria and their significance weights...|$|R
50|$|Browsers {{other than}} Firefox {{generally}} use the operating system's facilities {{to decide which}} <b>certificate</b> <b>authorities</b> are trusted. So, for instance, Chrome on Windows trusts the <b>certificate</b> <b>authorities</b> included in the Microsoft Root Program, while on macOS or iOS, Chrome trusts the <b>certificate</b> <b>authorities</b> in the Apple Root Program. Edge and Safari use their respective operating system trust stores as well, but each is only available on a single OS. Firefox uses the Mozilla Root Program trust store on all platforms.|$|R
5000|$|Using password-based {{authentication}} {{does not}} require reliance on <b>certificate</b> <b>authorities.</b>|$|R
25|$|In the (more recent) OpenPGP specification, trust {{signatures}} {{can be used}} {{to support}} creation of certificate authorities. A trust signature indicates both that the key belongs to its claimed owner and that the owner of the key is trustworthy to sign other keys at one level below their own. A level 0 signature is comparable to a web of trust signature since only the validity of the key is certified. A level 1 signature is similar to the trust one has in a <b>certificate</b> <b>authority</b> because a key signed to level 1 is able to issue an unlimited number of level 0 signatures. A level 2 signature is highly analogous to the trust assumption users must rely on whenever they use the default <b>certificate</b> <b>authority</b> list (like those included in web browsers); it allows the owner of the key to make other keys certificate authorities.|$|E
25|$|The {{problem of}} {{correctly}} identifying a public key {{as belonging to}} a particular user {{is not unique to}} PGP. All public key/private key cryptosystems have the same problem, even if in slightly different guises, and no fully satisfactory solution is known. PGP's original scheme at least leaves the decision {{as to whether or not}} to use its endorsement/vetting system to the user, while most other PKI schemes do not, requiring instead that every certificate attested to by a central <b>certificate</b> <b>authority</b> be accepted as correct.|$|E
25|$|PGPencryption uses {{a serial}} {{combination}} of hashing, data compression, symmetric-key cryptography, and finally public-key cryptography; each step uses {{one of several}} supported algorithms. Each public key is bound to a user name or an e-mail address. The first version of this system was generally known as a web of trust to contrast with the X.509 system, which uses a hierarchical approach based on <b>certificate</b> <b>authority</b> and which was added to PGP implementations later. Current versions of PGP encryption include both options through an automated key management server.|$|E
50|$|Originally the {{implementation}} of CAA was voluntary: CAs could decide whether they would check for the records or not. However, in March 2017 the CA/Browser Forum {{voted in favor of}} a rule that will make CAA mandatory for all <b>certificate</b> <b>authorities.</b> Starting September 2017 all <b>certificate</b> <b>authorities</b> have to implement CAA checking.|$|R
5000|$|Web browsers {{know how}} to trust HTTPS {{websites}} based on <b>certificate</b> <b>authorities</b> that come pre-installed in their software. <b>Certificate</b> <b>authorities</b> (such as Symantec, Comodo, GoDaddy and GlobalSign) are in this way being trusted by web browser creators to provide valid certificates. Therefore, a user should trust an HTTPS connection to a website {{if and only if}} all of the following are true: ...|$|R
5000|$|The user trusts {{that the}} browser {{software}} correctly implements HTTPS with correctly pre-installed <b>certificate</b> <b>authorities.</b>|$|R
2500|$|However, this SSL {{configuration}} is {{only valid}} for users {{who know how to}} generate a certificate self-signed or signed by a <b>certificate</b> <b>authority</b> and configure a domain name. On June 4, 2015, Plex announced all connections to Plex will be encrypted as soon the user has upgraded to at least 0.9.12.3 and has connected its web server to a Plex account (Plex Pass not needed). Plex also announced the user interface for the user's Plex Media Server will also be available via [...]|$|E
2500|$|As {{this would}} have been too {{expensive}} for Plex to register directly to a <b>certificate</b> <b>authority</b> a certificate each time a Plex user subscribes to a Plex account, Plex had to become a registration authority (RA) (also called subordinate CA). They choose DigiCert to partner with. This kind of offer is often called a private PKI. In DigiCert terms, this is called Managed PKI. In this way of configuration, each user domain name will have a wildcard certificate as [...] Each user's certificate is thus not signed directly by the sub CA of DigiCert (currently DigiCert SHA2 Secure Server CA) anymore, but by Plex directly (Plex Devices High Assurance CA2) which itself is signed by DigiCert root certificates.|$|E
2500|$|In August 2002, several ex-PGP {{team members}} formed a new company, PGP Corporation, {{and bought the}} PGP assets (except for the command line version) from NAI. The new company was funded by Rob Theis of Doll Capital Management (DCM) and Terry Garnett of Venrock Associates. PGP Corporation {{supports}} existing PGP users and honors NAI's support contracts. Zimmermann now serves as a special advisor and consultant to PGP Corporation, as well as continuing to run his own consulting company. [...] In 2003, PGP Corporation created a new server-based product called PGP Universal. [...] In mid-2004, PGP Corporation shipped its own command line version called PGP Command Line, which integrates with the other PGP Encryption Platform applications. In 2005, PGP Corporation made its first acquisition—the German software company Glück & Kanja Technology AG, which is now PGP Deutschland AG. In 2010, PGP Corporation acquired Hamburg-based <b>certificate</b> <b>authority</b> TC TrustCenter and its parent company, ChosenSecurity, to form its PGP TrustCenter division.|$|E
50|$|The {{criteria}} for issuing Extended Validation certificates {{do not require}} issuing <b>certificate</b> <b>authorities</b> to immediately support Online Certificate Status Protocol for revocation checking. However, the requirement for a timely response to revocation checks by the browser has prompted most <b>certificate</b> <b>authorities</b> that had not previously done so to implement OCSP support. Section 26-A of the issuing criteria requires CAs to support OCSP checking for all certificates issued after Dec. 31, 2010.|$|R
50|$|The {{continuing}} use of SGC {{facilitates the}} use of obsolete, insecure Web browsers with HTTPS. However, while certificates that use the SHA-1 signature hash algorithm remain available, some <b>certificate</b> <b>authorities</b> continue to issue SGC certificates (often charging a premium for them) although they are obsolete. The reason <b>certificate</b> <b>authorities</b> can charge a premium for SGC certificates is that browsers only allowed {{a limited number of}} roots to support SGC.|$|R
50|$|In 2011, Marlinspike {{presented}} a talk titled SSL And The Future Of Authenticity at the Black Hat security conference in Las Vegas. He outlined {{many of the}} current problems with <b>certificate</b> <b>authorities,</b> and announced {{the release of a}} software project called Convergence to replace <b>Certificate</b> <b>Authorities.</b> In 2012, Marlinspike and Trevor Perrin submitted an Internet Draft for TACK, which is designed to provide SSL certificate pinning and help solve the CA problem, to the IETF.|$|R
50|$|A robot <b>certificate</b> <b>authority</b> is a <b>certificate</b> <b>authority</b> (CA) which {{automatically}} signs public keys which match some requirement.|$|E
50|$|If {{the request}} is successful, the <b>certificate</b> <b>authority</b> will send back an {{identity}} certificate {{that has been}} digitally signed using the private key of the <b>certificate</b> <b>authority.</b>|$|E
5000|$|An offline root <b>certificate</b> <b>authority</b> is a <b>certificate</b> <b>authority</b> (as {{defined in}} the X.509 {{standard}} and [...] ) which has been isolated from network access, and is often kept in a powered-down state.|$|E
50|$|Some major {{software}} {{contains a}} list of <b>certificate</b> <b>authorities</b> that are trusted by default. This {{makes it easier for}} end-users to validate certificates, and easier for people or organizations that request certificates to know which <b>certificate</b> <b>authorities</b> can issue a certificate that will be broadly trusted. This is particularly important in HTTPS, where a web site operator generally wants to get a certificate that is trusted by nearly all potential visitors to their web site.|$|R
25|$|As a {{consequence}} of choosing X.509 <b>certificates,</b> <b>certificate</b> <b>authorities</b> and a public key infrastructure are necessary to verify the relation between a certificate and its owner, {{as well as to}} generate, sign, and administer the validity of certificates. While this can be more convenient than verifying the identities via a web of trust, the 2013 mass surveillance disclosures made it more widely known that <b>certificate</b> <b>authorities</b> are a weak point from a security standpoint, allowing man-in-the-middle attacks (MITM).|$|R
50|$|An {{authority}} revocation list (ARL) {{is a form}} of CRL containing certificates {{issued to}} <b>certificate</b> <b>authorities,</b> contrary to CRLs which contain revoked end-entity certificates.|$|R
50|$|Dogtag Certificate System is an {{open source}} <b>Certificate</b> <b>authority</b> (CA), which is a full-featured system. It {{supports}} all aspects of certificate life cycle management. It includes <b>Certificate</b> <b>Authority,</b> Key archival, OCSP and smart card management.|$|E
5000|$|Local {{certificate}} management, including <b>Certificate</b> <b>Authority</b> role.|$|E
5000|$|Kamu Sertifikasyon Merkezi (Governmental <b>Certificate</b> <b>Authority)</b> Kamusm.gov.tr ...|$|E
50|$|Broadly speaking, {{there have}} {{traditionally}} been three approaches to getting this trust: <b>certificate</b> <b>authorities</b> (CAs), web of trust (WoT), and simple public key infrastructure (SPKI).|$|R
50|$|Instead {{of relying}} on trusted <b>certificate</b> <b>authorities</b> {{commonly}} found in web browsers, the client has to explicitly trust the public signing key of the chosen provider.|$|R
50|$|The {{group was}} founded in February 2013 with the seven largest <b>certificate</b> <b>authorities,</b> issuers of SSL {{certificates}} — Comodo, Symantec, Trend Micro, DigiCert, Entrust,GlobalSign and GoDaddy.|$|R
5000|$|The {{certificate}} {{is signed}} by a trusted <b>certificate</b> <b>authority.</b>|$|E
5000|$|Public Key Infrastructure (PKI) and Enterprise <b>Certificate</b> <b>Authority</b> support ...|$|E
5000|$|Equifax Secure eBusiness CA-1 ACME Co <b>Certificate</b> <b>Authority</b> Joe User ...|$|E
5000|$|The {{policies}} and processes a provider uses {{to decide which}} <b>certificate</b> <b>authorities</b> their software should trust are called root programs. The most influential root programs are: ...|$|R
50|$|An {{authority}} revocation list (ARL) {{is a form}} of {{certificate revocation}} list (CRL) containing certificates issued to <b>certificate</b> <b>authorities,</b> contrary to CRLs which contain revoked end-entity certificates.|$|R
50|$|The SSL Observatory is {{a feature}} in HTTPS Everywhere {{introduced}} in version 2.0.1 which analyzes public key certificates {{to determine if}} <b>certificate</b> <b>authorities</b> have been compromised, and if the user is vulnerable to man-in-the-middle attacks. In 2013, the ICANN Security and Stability Advisory Committee (SSAC) noted that the dataset used by the SSL Observatory often treated intermediate authorities as different entities, thus inflating the number of <b>certificate</b> <b>authorities.</b> The SSAC criticized SSL Observatory for potentially significantly undercounting internal name certificates, and noted that it used a data set from 2010.|$|R
