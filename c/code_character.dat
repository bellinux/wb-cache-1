15|846|Public
2500|$|Today, many {{products}} are {{an outcome of}} a large number of parts and pieces that come from many different countries, and that may then be assembled together in a third country. In these cases, it's hard to know exactly what is the country of origin, and different rules apply as to how to determine their [...] "correct" [...] country of origin. Generally, articles only change their country of origin if the work or material added to an article in the second country constitutes a substantial transformation, or, the article changes its name, tariff <b>code,</b> <b>character</b> or use (for instance from wheel to car). Value added in the second country may also be an issue.|$|E
5000|$|The Chinese Telegraph Code, Chinese Telegraphic Code, or Chinese Commercial Code ( [...] or [...] ) is a four-digit decimal <b>code</b> (<b>character</b> encoding) for {{electrically}} telegraphing messages {{written with}} Chinese characters.|$|E
5000|$|Dreadnot, {{an early}} {{example of an}} ARG-style project, was {{published}} on sfgate.com in 1996. This ARG included working voice mail phone numbers for characters, clues in the source <b>code,</b> <b>character</b> email addresses, off-site websites, and real locations in San Francisco.|$|E
40|$|This memo {{provides}} {{information for the}} Internet community. It does not specify an Internet standard. Distribution of this memo is unlimited. Summary This memo lists a selection of characters and their presence in some <b>coded</b> <b>character</b> sets. To facilitate the <b>coded</b> <b>character</b> set tabulations an unambiguous mnemonic for each character is used, and a format for tabulating the <b>coded</b> <b>character</b> sets is defined. The <b>coded</b> <b>character</b> sets are given names for easy reference. A family of <b>coded</b> <b>character</b> sets called the mnemonic character sets and conversion between these <b>coded</b> <b>character</b> set without information loss is defined. The character set names are registered with the Internet Assigned Numbers Authority (IANA). Additional character sets not described in this memo should be registered with the IANA. This memo may be updated periodically, or additional specifications may be published, to reflect other <b>coded</b> <b>character</b> sets. Please send any comments including comments about {{the accuracy of the}} tables to the author, Keld Simonse...|$|R
50|$|Among these <b>coded</b> <b>character</b> sets stipulated in {{the fourth}} standard, only the “Shift” <b>coded</b> <b>character</b> set is {{registered}} by the IANA.|$|R
5000|$|GB/T 20542-2006 ("Tibetan <b>Coded</b> <b>Character</b> Set Extension A") and GB/T 22238-2008 ("Tibetan <b>Coded</b> <b>Character</b> Set Extension B") are Chinese {{national}} standards {{that use the}} PUA to encode precomposed Tibetan ligatures.|$|R
5000|$|JIS X 0208 {{codes are}} {{fundamentally}} two bytes of either {{seven or eight}} bits. However, one graphic character (zukei moji), “space”, and every control character (seigyo moji) is represented with a one-byte code. In order to represent code points, column/line numbers and [...] numbers are used. For a way to identify a character without depending on a <b>code,</b> <b>character</b> names are used.|$|E
50|$|Dreadnot was a (non-commercial) ARG {{produced}} with {{a grant from}} the San Francisco Chronicle and published on sfgate.com in 1996. It included most of the aforementioned design principles. The game included working voice mail phone numbers for characters, clues in the source <b>code,</b> <b>character</b> email addresses, off-site websites, real locations in San Francisco, real people (including then-Mayor Willie Brown), and of course a fictional mystery.|$|E
50|$|RTTY {{uses the}} ITA2 (Baudot <b>code)</b> <b>character</b> code. ITA2 is a five bit code with 32 {{possible}} code points. Four code points {{are used for}} null (BLANK), space (SPACE), carriage return (CR), and line feed (LF). Two code points are used for a letter shift (LTRS) or a figure shift (FIGS). The remaining 26 code points are used for characters in the letters and figures sets. Consequently, ITA2 can represent 52 (2*26) additional characters.|$|E
5000|$|ISO/IEC 2375 -- Procedure for {{registration}} of escape sequences and <b>coded</b> <b>character</b> sets, which governs registrations for ISO/IEC 646 (7-bit <b>character</b> <b>codes)</b> and ISO/IEC 2022 (extended <b>character</b> <b>codes)</b> ...|$|R
5000|$|ISO/IEC 10646 Universal Multiple-Octet <b>Coded</b> <b>Character</b> Set (UCS) ...|$|R
2500|$|Information {{technology}} — Universal Multiple-Octet <b>Coded</b> <b>Character</b> Set (UCS) ...|$|R
50|$|The program {{featured}} all {{the standard}} functions of a BBS {{of the time}} including file transfers in several competing protocols (XMODEM, YMODEM, YMODEM-G, ZMODEM) provided with the program or as third party software; they connected externally to the main program itself. It also featured message boards and a primitive form of {{what we now call}} E-mail. The program was also capable of producing simple graphics & text using both the ASCII, PETSCII, and the ANSI escape <b>code</b> <b>character</b> sets and color codes.|$|E
5000|$|The Albino Code (2006) is a {{short film}} parodying the film {{adaptation}} of The Da Vinci Code. The Albino Code was written and produced by, and stars, Dennis Hurley, who has albinism. The film pokes fun at the depiction of people with albinism in Hollywood films by parodying The Da Vinci <b>Code</b> <b>character</b> Silas. Hurley's film points out flaws with the portrayal of Silas, namely that most people with albinism do not have pink eyes, and that due to their impaired vision, they could not function well as assassins.|$|E
5000|$|Today, many {{products}} are {{an outcome of}} a large number of parts and pieces that come from many different countries, and that may then be assembled together in a third country. In these cases, it's hard to know exactly what is the country of origin, and different rules apply as to how to determine their [...] "correct" [...] country of origin. Generally, articles only change their country of origin if the work or material added to an article in the second country constitutes a substantial transformation, or, the article changes its name, tariff <b>code,</b> <b>character</b> or use (for instance from wheel to car). Value added in the second country may also be an issue.|$|E
5000|$|ISO 646: ISO 7-bit <b>Coded</b> <b>Character</b> Set for Information Exchange ...|$|R
5000|$|SHY <b>characters</b> in <b>coded</b> <b>characters</b> sets, roughly in chronological order: ...|$|R
5000|$|... #Subtitle level 2: Display <b>code</b> <b>{{character}}s</b> (64-character {{character set}} version) ...|$|R
50|$|The 6-bit characters, in an {{encoding}} called display code, {{could be}} used to store up to 10 characters in a word. They permitted a character set of 64 characters, which is enough for all upper case letters, digits, and some punctuation. Certainly, enough to write FORTRAN, or print financial or scientific reports. There were actually two variations of the display <b>code</b> <b>character</b> sets in use, 64-character and 63-character. The 64-character set had the disadvantage that two consecutive ':' (colon) characters might be interpreted as the end of a line if they fell {{at the end of a}} 10-byte word. A later variant, called 6/12 display code, was also used in the Kronos and NOS timesharing systems to allow full use of the ASCII character set in a manner somewhat compatible with older software.|$|E
40|$|This is a {{proposal}} to encode a new character in the Sharada block of the Universal Character Set (ISO/IEC 10646). Sharada {{will be included in}} a future version of the UCS at the range U+ 11180 [...] U+ 111 DF (see N 3595 L 2 / 09 - 074 R 2). Properties of the proposed character are: glyph <b>code</b> <b>character</b> name gc ccc bidi mirrored linebrea...|$|E
30|$|The second {{text entry}} method uses an {{ambiguous}} keyboard with six character keys and dictionary-based disambiguation. This is called ambiguous mode. In this mode, character keys are used to compose a sequence of “code characters” represented by the digits 1 to 6. Each <b>code</b> <b>character</b> represents four or five characters of the alphabet (see Figure 2 b). As the user types code characters, the software matches the code sequence among {{the words in the}} same dictionary file as above. The resulting frequency-ordered list of matching candidates contains at most 16 entries (selection as before), including extensions if there are less than 16 candidates equal in length to the code sequence (see Figure 2 d).|$|E
5000|$|JIS X 0211 “Control {{functions}} for <b>coded</b> <b>character</b> sets” (ISO/IEC 6429) ...|$|R
5000|$|JIS X 0221 “Universal Multiple-Octet <b>Coded</b> <b>Character</b> Set (UCS)” (ISO/IEC 10646) ...|$|R
5000|$|ISO/IEC 10646-1:2000 Information {{technology}} — Universal Multiple-Octet <b>Coded</b> <b>Character</b> Set (UCS) ...|$|R
40|$|Character {{recognition}} develops over periode {{with many}} methods used. On this research used thinning and chinning code methods {{to identify the}} vehicles plate number such as car and motorcycle to build up automatic system in recognizing character for parking system. This research builds intelligent system for recognition character using thinning and chain <b>code.</b> <b>Character</b> recognition consists of three processes, namely the process of plate segmentation, character segmentation process, {{and the process of}} similary measurement. Similary measurement process aims to perform character recognition, in which the result is matrix feature. Character recognition is done by comparing the feature matrix of character. On this research, the chain code is used to deacribe the object of counter shape to shape chain code. The test of character recognition used chain code method comes with a good result which is 15 plate numbers, 107 character trial with 86. 6...|$|E
40|$|Abstract—Container code {{examination}} is {{an essential}} step in the container flow management. To date, this step is mostly achieved by human visual inspections, which are however time-consuming and error-prone. We hence propose a new computer vision system for automated container code recognition. The proposed system consists of model construction and code recognition stages. In the model construction stage, we first incorporate a locally thresholding method with prior knowledge of <b>code</b> <b>character</b> geometry to segment the code characters, including English characters A-Z and numeric characters 0 - 9, from a training set of container images. With the segmentation results of each character, we subsequently construct its Eigen-feature model using the principal component analysis (PCA). In the recognition stage, the code characters are firstly segmented from the given container image. Each segmented character is then recognized by finding the best matched Eigen-feature model that maintains the minimal PCA reconstruction error of the character appearance. Experiments showed that the proposed method achieved the code recognition with a high recognition rate and little recognition time for each image automatically. Overall, our proposed system has great potential for improving the efficiency of container terminals as well as enhancing the container management. Index Terms—code recognition, locally thresholding, character geometry, Eigen-feature model, principal component analysis C I...|$|E
40|$|The {{availability}} of camera phones provides {{people with a}} mobile platform for decoding bar codes, whereas conventional scanners lack mobility. However, using a normal camera phone in such applications is challenging due to the out-of-focus problem. In this paper, we present the research effort on the bar code reading algorithms using a VGA camera phone, NOKIA 7650. EAN- 13, a widely used 1 D bar code standard, is taken as an example to show {{the efficiency of the}} method. A wavelet-based bar code region location and knowledge-based bar code segmentation scheme is applied to extract bar code characters from poor-quality images. All the segmented bar code characters are input to the recognition engine, and based on the recognition distance, the bar <b>code</b> <b>character</b> string with the smallest total distance is output as the final recognition result of the bar code. In order to train an efficient recognition engine, the modified Generalized Learning Vector Quantization (GLVQ) method is designed for optimizing a feature extraction matrix and the class reference vectors. 19 584 samples segmented from more than 1000 bar code images captured by NOKIA 7650 are involved in the training process. Testing on 292 bar code images taken by the same phone, the correct recognition rate of the entire bar code set reaches 85. 62 %. We are confident that auto focus or macro modes on camera phones will bring the presented method into real world mobile use...|$|E
5000|$|... #Subtitle level 3: Unicode Transformation Format and Universal <b>Coded</b> <b>Character</b> Set ...|$|R
5000|$|JIS X 0201 “7-bit and 8-bit <b>coded</b> <b>character</b> {{sets for}} {{information}} interchange” ...|$|R
50|$|The most {{commonly}} used EUC codes are variable-width encodings with a character belonging to G0 (ISO-646 compliant <b>coded</b> <b>character</b> set) taking one byte and a character belonging to G1 (taken by a 94x94 <b>coded</b> <b>character</b> set) represented in two bytes. The EUC-CN form of GB2312 and EUC-KR are examples of such two-byte EUC <b>codes.</b> EUC-JP includes <b>characters</b> represented by up to three bytes whereas a single character in EUC-TW {{can take up to}} four bytes.|$|R
50|$|ASMO 449 is a 7-Bit <b>coded</b> <b>character</b> set {{to encode}} the Arabic language.|$|R
5000|$|ECMA-48 - Control Functions for <b>Coded</b> <b>Character</b> Sets, also {{approved}} as ISO/IEC 6429 ...|$|R
2500|$|ANSEL American National Standard for Extended Latin Alphabet <b>Coded</b> <b>Character</b> Set for Bibliographic Use ...|$|R
5000|$|ECMA-6 - 7-bit <b>Coded</b> <b>Character</b> Set (based on ASCII), also {{approved}} as ISO/IEC 646 ...|$|R
50|$|ISO/IEC JTC 1/SC 2 <b>Coded</b> <b>character</b> sets is a {{standardization}} {{subcommittee of}} the Joint Technical Committee ISO/IEC JTC 1 of the International Organization for Standardization (ISO) and the International Electrotechnical Commission (IEC), that develops and facilitates standards {{within the field of}} <b>coded</b> <b>character</b> sets. The international secretariat of ISO/IEC JTC 1/SC 2 is the Japanese Industrial Standards Committee (JISC), located in Japan.|$|R
5000|$|A code {{point of}} a <b>coded</b> <b>{{character}}</b> set is any legal value in the character set.|$|R
