5|157|Public
50|$|An EAD socket was {{a network}} <b>connection</b> <b>socket</b> {{used in the}} early 1990s. They are now {{considered}} obsolete.|$|E
5000|$|The Zetec S [...] "Celebration" [...] was {{a limited}} (400 cars) edition {{based on the}} Zetec S and {{included}} a Celebration Green body, black and white chequered roof decal, unique identity number, chequered scuff plates and mats, full 'Ebony Haze' leather interior, privacy glass and Panther Black door mirrors, bodyside mouldings, roof spoiler, tailgate handle, 16 in alloy wheels, air conditioning, trip computer, electric windows, CD player with portable music <b>connection</b> <b>socket,</b> sports front seats and lowered sports suspension.|$|E
50|$|The A9home {{was smaller}} than the Mac mini and housed in cobalt-blue {{aluminium}} casing, measuring 168 mm × 103 mm × 53 mm in size. The machine runs on a 400 MHz Samsung ARM9 processor, has 128 MB SDRAM of main memory and 8 MB VRAM and houses an internal hard disk of 40 GB. On the front, it features two USB 1.1 ports, a microphone and a headphones socket. On the rear, it has two USB 1.1 ports, two PS/2 ports, 10/100 BaseT network port, a RS-232 serial port and a power <b>connection</b> <b>socket.</b> Like the Mac mini, it is powered by an external PSU (5 V, 20 W). Furthermore, it has a power/reset switch, a status/health indicator and a drive activity indicator LED. The A9home is not designed to be internally expanded.|$|E
5000|$|HDMI <b>connection</b> <b>sockets</b> (although {{some people}} use three-cord sockets for the {{different}} colours) ...|$|R
50|$|The pooled {{object is}} {{obtained}} in predictable time when {{creation of the}} new objects (especially over network) may take variable time. These benefits are mostly true for objects that are expensive with respect to time, such as database <b>connections,</b> <b>socket</b> <b>connections,</b> threads and large graphic objects like fonts or bitmaps.|$|R
50|$|The pooling of {{resources}} {{can offer a}} significant performance boost in situations that have high cost associated with resource acquiring, high rate of the requests for resources, and a low overall count of simultaneously used resources. Pooling is also useful when the latency is a concern, because a pool offers predictable times required to obtain resources since they have already been acquired. These benefits are mostly true for system resources that require a system call, or remote resources that require a network communication, such as database <b>connections,</b> <b>socket</b> <b>connections,</b> threads, and memory allocation. Pooling is also useful for expensive-to-compute data, notably large graphic objects like fonts or bitmaps, acting essentially as a data cache or a memoization technique.|$|R
5000|$|The {{photograph}} above {{shows the}} external flash <b>connection</b> <b>socket</b> {{in the upper}} right corner. The red lever selects among M, F, and X flash synchronizations. The shutter button is barely visible over the letter [...] "h" [...] of [...] "Ricoh." [...] The two large knobs are designed to let the user's two index fingers rapidly focus the camera while following basketball players or other rapidly moving subjects. The wired mount for an external flash unit {{is shown in the}} center of the top view of the camera. The rapid film advance lever shown in the bottom view pivots on its right end and is pulled by the extension (shown folded out of the way) near the lens barrel. The bottom view also shows a reminder ring for noting the speed of the film currently in use.|$|E
40|$|As the {{information}} construction in enterprise goes deeper, {{the data in}} need of management grows dramatically in number {{as well as in}} structural diversification. Supposed that heterogeneous data sources cannot achieve sharing with each other, departments in enterprise would turn to be isolated 'information islands', blocking the internal data circulation and sharing. Based on the existing multidatabase middleware technique, this paper puts forward a novel multi-database middleware for multiple applications. With the utilization of JAVA reflection, it supports cross-platform application. Besides, through the design of an application, the paper introduces several key technologies as JDBC <b>connection,</b> <b>Socket</b> + XML, connection pool and so forth...|$|E
50|$|Some {{connector}} styles {{may contain}} both pin and <b>socket</b> <b>connection</b> types.|$|R
5000|$|... 15,000+ <b>socket</b> <b>connections.</b> Sending/receiving 5000 java objects {{per second}} between 2 {{computers}} works great.|$|R
50|$|NETRJS is the {{protocol}} {{developed by the}} Campus Computing Network at UCLA to deliver batch jobs to their IBM 360 Model 91. This protocol was originally assigned to ARPANET Initial <b>Connection</b> Protocol <b>sockets</b> 71, 73, and 75, and later reassigned to Internet ports 71-74.|$|R
40|$|We {{revisit the}} {{well-known}} object-pool design pattern in Java. In the last decade, the pattern {{has attracted a}} lot of criticism regarding its validity when used for light-weight objects that are only meant to hold memory rather than any other resources (database <b>connections,</b> <b>sockets</b> etc.) and in fact, common opinion holds that is an anti-pattern in such cases. Nevertheless, we show through several experiments in different systems that the use of this pattern for extremely short-lived and light-weight memory objects can in fact significantly reduce the response time of high-performance multi-threaded applications, especially in memory-constrained environments. In certain multi-threaded applications where high performance is a requirement and/or memory constraints exist, we recommend therefore that the object pool pattern be given consideration and tested for possible run-time as well as memory footprint improvements. Comment: 14 pages, 7 figure...|$|R
5000|$|Heavyweight - TCP {{requires}} three packets {{to set up}} a <b>socket</b> <b>connection,</b> {{before any}} user data can be sent. TCP handles reliability and congestion control.|$|R
5000|$|IEC 61968 is {{transport}} independent while MultiSpeak is transport specific. SOAP messages using HTTP, TCP/IP <b>sockets</b> <b>connections</b> directly between applications & file-based transfers {{are used}} for transferring data in multispeak.|$|R
50|$|Generally TCP sockets {{are handled}} by {{spawning}} a separate server to handle each <b>connection</b> concurrently. UDP <b>sockets</b> are generally handled {{by a single}} server instance that handles all packets on that port.|$|R
5000|$|A socket is {{a special}} file used for inter-process {{communication}}. These allow communication between two processes. In addition to sending data, processes can send file descriptors across a Unix domain <b>socket</b> <b>connection</b> using the [...] and [...] system.|$|R
40|$|Abstract] The Air Force Research Laboratory’s (AFRL) Space Vehicles Directorate has {{initiated}} {{a program to}} create the first satellite based entirely {{on the principles of}} plug-and-play as represented by the Space Plug-and-play Avionics (SPA) approach. Unlike other satellites, PnPSat is designed to be constructed extremely rapidly, based on design descriptions that can be eventually produced automatically from a push-button tool flow. The plug-and-play satellite (PnPSat) employs modular components, from the structural panels to the guidance and health/status devices, taking full advantage of the self-describing mechanisms inherent in the SPA approach. Panels contain SpaceWire routers and multiple <b>connection</b> <b>sockets</b> to support the arbitrary arrangement of spacecraft components on the panels and the connections between panels. In most regards, PnPSat reduces the integration of a satellite to a simplified assembly process, analogous to the assembly of components on a personal computer in which components are enumerated by the host as they are added. Since all components are based on the same, self-describing interface, the proliferation of disparate simulators and emulators are sharply reduced, and a unified "test bypass " mechanism is provided to facilitate hardware-in-the-loop simulation of a single component or the entire satellite at any point during integration of the system. This talk will describe the background and status of the PnPSat development program. 1...|$|R
50|$|A Transmission Control Protocol/Internet Protocol (TCP/IP) <b>socket</b> <b>connection</b> {{establishes}} {{communication between}} the CEP and a JODA database server. The JODA receives an initial data download and periodic updates from the CEP, and also communicates with the WHIP and other client programs that are assigned to it.|$|R
5000|$|PuTTY (...) is a {{free and}} {{open-source}} terminal emulator, serial console and network file transfer application. It supports several network protocols, including SCP, SSH, Telnet, rlogin, and raw <b>socket</b> <b>connection.</b> It can also connect to a serial port. The name [...] "PuTTY" [...] has no definitive meaning.|$|R
50|$|It was {{originally}} designed and implemented by Ivan Penev back in 2005 as a network layer capable to handle around 10,000 <b>socket</b> <b>connections.</b> Then it gradually included {{the most common}} functionality a programmer may need - socket communication, simple database access, reading external resources as files, URLs, etc.|$|R
50|$|An organic pin {{grid array}} (OPGA) {{is a type of}} {{connection}} for integrated circuits, and especially CPUs, where the silicon die is attached to a plate made out of an organic plastic which is pierced by an array of pins which make the requisite <b>connections</b> to the <b>socket.</b>|$|R
50|$|Sockets provide {{means for}} {{programming}} TTA processors by allowing to select which bus-to-port <b>connections</b> of the <b>socket</b> are enabled {{at any time}} instant. Thus, data transports taking place in a clock cycle can be programmed by defining the source and destination socket/port connection to be enabled for each bus.|$|R
50|$|When all sockets on a {{line are}} {{connected}} in parallel only the lower pins on a Swedish Standard plug (middle connectors on RJ-plugs) are used. This configuration was earlier not allowed due to Swedish law prohibiting the possibility of eavesdropping on a telephone line (and possibly also to limit each household's load on the exchange). Parallel <b>connection</b> of <b>sockets</b> are now allowed but can be considered bad practice by some, and makes DSL splitter installation more cumbersome. The advantages include compatibility with foreign equipment and conference call-type communication.|$|R
40|$|The {{contribution}} {{deals with}} the possibilities of www technology utilization in real time process control and describes the representation of this information on client site in the www page form. The communication between client and process over web server and <b>socket</b> <b>connection</b> is discussed. The application of one of this method is illustrated...|$|R
50|$|In {{computer}} science, {{resource contention}} {{is a conflict}} over access to a shared resource such as random access memory, disk storage, cache memory, internal buses or external network devices. In recent years, research on the contention is more focused on the resources in the memory hierarchy, e.g., last-level caches, front-side bus, memory <b>socket</b> <b>connection.</b>|$|R
5000|$|Raw TCP socket connection: A raw TCP <b>socket</b> <b>connection</b> {{which can}} be {{initiated}} from the terminal server or from the remote host/server. This can be point-to-point or shared, where serial devices (like card readers, scanners, bar code readers, weight scales, etc.) can be shared amongst multiple devices. TCP sessions can be initiated from the TCP server application or from the terminal server.|$|R
25|$|R-Code is a {{high-level}} scripting language for AIBO. R-Code {{allows you to}} very easily create simple programs for AIBO to execute. While it does not allow the low-level control that the OPEN-R SDK has, what it lacks in power it makes up for in simplicity. Remoting is possible via a simple terminal <b>socket</b> <b>connection</b> via WiFi. Commercial usage is allowed, and the license fee is free.|$|R
50|$|A SPICE client {{connection}} to a remote desktop server consists of multiple data channels, {{each of which is}} run over a separate TCP or UNIX <b>socket</b> <b>connection.</b> A data channel can be designated to operate in either clear-text, or TLS modes, allowing the administrator to tradeoff the security level vs performance. The TLS mode provides strong encryption of all traffic transmitted on the data channel.|$|R
50|$|R-Code is a {{high-level}} scripting language for AIBO. R-Code {{allows you to}} very easily create simple programs for AIBO to execute. While it does not allow the low-level control that the OPEN-R SDK has, what it lacks in power it makes up for in simplicity. Remoting is possible via a simple terminal <b>socket</b> <b>connection</b> via WiFi. Commercial usage is allowed, and the license fee is free.|$|R
2500|$|Switched and {{unswitched}} fused <b>connection</b> units, without <b>sockets,</b> [...] use BS1362 fuses for {{connection of}} permanently wired appliances to a socket-outlet circuit. They {{are also used}} in other situations where a fuse or switch (or both) is required, such as when feeding lighting off a socket-outlet circuit, to protect spurs off a ring circuit {{with more than one}} socket-outlet, and sometimes to switch feeds to otherwise concealed sockets for kitchen appliances.|$|R
50|$|Since connect is a {{messaging}} format, it has {{the advantage}} of being completely language independent. This allows applications and client tools to be created in the programming language of the user's or developer's choice. In practice, {{as long as it is}} possible to create a <b>socket</b> <b>connection,</b> send information through that socket and then receive information that way then STK can be controlled with connect using that language.|$|R
50|$|Switched and {{unswitched}} fused <b>connection</b> units, without <b>sockets,</b> use BS 1362 fuses for {{connection of}} permanently wired appliances to a socket-outlet circuit. They {{are also used}} in other situations where a fuse or switch (or both) is required, such as when feeding lighting off a socket-outlet circuit, to protect spurs off a ring circuit {{with more than one}} socket-outlet, and sometimes to switch feeds to otherwise concealed sockets for kitchen appliances.|$|R
5000|$|The {{force from}} the load plate {{ensures that the}} {{processor}} is completely level, giving the CPU's upper surface optimal contact with the heat sink or cold-water block fixed onto {{the top of the}} CPU to carry away the heat generated by the CPU. This socket also introduces a new method of connecting the heat dissipation interface to the chip surface and motherboard. With LGA 775, the heat dissipation interface is connected directly to the motherboard on four points, compared with the two <b>connections</b> of the <b>Socket</b> 370 and the [...] "clamshell" [...] four-point <b>connection</b> of the <b>Socket</b> 478. This was done to avoid the reputed danger of the heat sinks/fans of pre-built computers falling off in transit. LGA 775 was announced to have better heat dissipation properties than the Socket 478 it was designed to replace, but the Prescott core CPUs (in their early incarnations) ran much hotter than the previous Northwood-core Pentium 4 CPUs, and this initially neutralized the benefits of better heat transfer. However, modern Core 2 processors run at much lower temperatures than the Prescott CPUs they replace.|$|R
40|$|This article {{provides}} implementation and configuration {{information about the}} single logical screen (SLS) technology described in the article “Advanced Display Technologies on HP-UX Workstations. ” 1 Understanding the implementation of SLS requires a little background on the X server architecture. The X server is divided into layers of functionality, each with a specific purpose and each interfacing with its neighbors. At the lowest level, which is closest to the physical hardware, is the device-dependent X (DDX) layer. This layer is responsible for controlling the frame buffer, including all rendering. Specifics of frame buffer control involve functions such as frame buffer initialization and state management, hardware locking, rendering, pointer control, hardware colormap management, and other functions such as direct memory access. Also included within the DDX layer is the detection and management of input. At the highest layer is the device-independent X (DIX) layer. This layer contains code that is independent of the various hardware platforms. Think of this layer as the control layer. It includes the dispatch loop that manages the reception and processing of X protocol, event management, error detection, and other control, organization and bookkeeping operations. This layer also interfaces extensively with the operating system interface layer and with the DDX layers. The operating system interface layer contains operating system calls, and it controls such things as memory management (allocation and deallocation), <b>connections</b> (<b>socket</b> creation), and kernel interactions. Although most of the operating system interface layer code is referenced from within the DIX layer, the DDX layer also invokes interface-layer-specific calls. Although there are other areas, such as font control, they have {{very little to do}} with SLS so they will be omitted from our discussion. Figure 1 shows typical X Client using an X API such as Xlib to communicate with the X server...|$|R
40|$|Factory {{pattern was}} used to define a Display Factory Object that manage weapon and {{artificial}} horizon displays and creates Display Objects. Figure 5 illustrates the dependencies between the classes. The communication between Application Proxy, the visualization, and the DOVE-enabled Browser is solely performed through sockets and TCP/IP. The Application proxy generates random input, which is then fed into a socket connected to the DOVE-enabled Browser. Display_Input_Stream Display feedind data create Display_Object create Display_Output_Stream Display_Client Display_Server Display_Art_Horizon Display_Weapons Display_Object_Factory feeding data create <b>connection</b> via <b>Sockets</b> Figure 5 : Class Diagram for the Original DOVE-enabled Browser 3. 1. 2 Problem Although the first prototype served as a reasonable proof-ofconcept, is was hard to scale to large distribution topologies and hard to extend with new functionality. The main problem centered on the hard-coded socket-based connection bet [...] ...|$|R
25|$|The EV Plug Alliance is an {{association}} of 21 European manufacturers which proposes an alternative connecting solution. The project is to impose an IEC norm and to adopt a European standard for the <b>connection</b> solution with <b>sockets</b> and plugs for electric vehicle charging infrastructure. Members (Schneider Electric, Legrand, Scame, Nexans, etc.) argue {{that the system is}} safer because they use shutters. General consensus is that the IEC 62196 and IEC 61851-1 already have taken care of safety by making parts non-live when touchable.|$|R
