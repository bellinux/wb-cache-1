835|1809|Public
5|$|Creative Assembly's studio director, Tim Heaton, {{explained}} that Halo Wars 2 would not feature gameplay {{similar to their}} Total War series. Instead they wanted to build upon the foundation established with Halo Wars. With Halo Wars 2, the development team hoped to introduce new players to the strategy game genre while appeasing experienced players by including a range of multiplayer modes that {{a wide spectrum of}} players could enjoy. They also wanted to extend the purpose of leader units and their abilities by giving each of them a more defining role in the style of play they represent. Creative Assembly thought that the game needed more units capable of performing long range attacks. They wanted to add more artillery pieces, however they found that there were currently no suitable vehicles in the Halo universe. To remedy this, they created two new vehicles, the Kodiak and the Blisterback, to fit the role. They used reference material supplied by 343 Industries to ensure the new vehicles did not feel out of place. Halo Wars 2s creative director, Alistair Hope, noted that staying true to the source material was important aspect for all of Creative Assembly's games, but stated that the team were given more freedom to explore and expand the Halo universe than they had anticipated. Hope praised the control scheme used in Halo Wars and aimed to enhance the system by ensuring that Halo Wars 2 would be intuitive to play on a console. One <b>common</b> <b>control</b> feature included in many PC RTS games but absent from the original Halo Wars is control groups, which enables sets of units to be manually assigned to a key. As Halo Wars 2 was developed for console and PC, the designers were keen to include the feature for both versions of the game. 343 Industries had initially considered supporting cross-platform play between Windows and Xbox One devices, but the feature was ultimately excluded from the game at launch.|$|E
25|$|Caloric {{restriction}} effect: {{reduction of}} available resources increases lifespan. This behavior has a plausible group benefit in enhancing {{the survival of}} a group under famine conditions and also suggests <b>common</b> <b>control.</b>|$|E
25|$|Lifespan varies greatly among {{otherwise}} {{very similar}} species (e.g. different varieties of salmon 3:1, different fish 600:1) suggesting that relatively few genes control lifespan and that relatively minor changes to genotype could cause major differences in lifespan—suggests <b>common</b> <b>control</b> mechanism.|$|E
25|$|Improvements to the Windows C++ {{standard}} and <b>common</b> <b>controls.</b>|$|R
5000|$|Guidance on the {{management}} of <b>common</b> <b>controls</b> within organizations; and ...|$|R
50|$|With Office 2010, Microsoft {{introduced}} VBA7, {{which contains}} a true pointer data type: LongPtr. This allows referencing 64-bit address space. The 64-bit install of Office 2010 {{does not support}} <b>common</b> <b>controls</b> of MSComCtl (TabStrip, Toolbar, StatusBar, ProgressBar, TreeView, ListViews, ImageList, Slider, ImageComboBox) or MSComCt2 (Animation, UpDown, MonthView, DateTimePicker, FlatScrollBar), so legacy 32-bit code ported to 64-bit VBA code that depends on these <b>common</b> <b>controls</b> will not function. This {{does not affect the}} 32-bit version Office 2010. VBA7 includes no 64-bit version of the <b>common</b> <b>controls,</b> so it leaves developers with no means to migrate VBA applications to 64-bit. Microsoft suggests contacting the software vendor for 64-bit versions of VBA controls.|$|R
25|$|Control: Each team {{tries to}} capture and {{maintain}} a <b>common</b> <b>control</b> point until their capture percentage reaches 100%. This game mode is played in a best-of-three format. Control maps are {{laid out in a}} symmetric fashion so no team has an intrinsic position advantage.|$|E
25|$|<b>Common</b> <b>Control</b> Library: Gives {{applications}} {{access to}} some advanced controls provided by the operating system. These include things like status bars, progress bars, toolbars and tabs. The library resides in a dynamic-link library (DLL) file called commctrl.dll on 16-bit Windows, and comctl32.dll on 32-bit Windows. It is grouped under the User Interface category of the API.|$|E
25|$|Bell System {{installations}} typically had alarm bells, gongs, or chimes {{to announce}} alarms {{calling attention to}} a failed switch element. A trouble reporting card system was connected to switch <b>common</b> <b>control</b> elements. These trouble reporting systems punctured cardboard cards with a code that logged {{the nature of a}} failure. Reed relay technology in stored program control exchange finally quieted the environment.|$|E
50|$|Latest {{support for}} Windows 98, 95, and NT {{including}} multiple monitors, <b>common</b> <b>controls,</b> docking forms and toolbars, and more.|$|R
5000|$|For {{the first}} time since the release of Windows 95, Microsoft {{completely}} revised its user interface guidelines, covering aesthetics, <b>common</b> <b>controls</b> such as buttons and radio buttons, task dialogs, wizards, <b>common</b> dialogs, <b>control</b> panels, icons, fonts, user notifications, and the [...] "tone" [...] of text used.|$|R
5000|$|Third-party {{applications}} can be configured to {{work with}} visual styles. By default, the title bar and the window borders of Windows Forms-based applications are rendered using the user's preferred visual style, {{while the rest of}} the application's graphical user interface (GUI) is rendered in the Classic style. This is because these two different parts of the GUI are rendered using two different software libraries: the title bar and the window borders ("non-client area" [...] or [...] "user controls") use Windows USER, and the remaining controls ("client area" [...] or [...] "common controls") use version 5.8 of the <b>Common</b> <b>Controls</b> Library. Version 6.0 of the <b>Common</b> <b>Controls</b> Library contains both the user <b>controls</b> and the <b>common</b> <b>controls,</b> and developers may configure the application's user interface to be displayed in the user's currently-selected visual style by forcing it to be rendered using version 6.0 of the library.|$|R
25|$|A {{corresponding}} programmed maintenance theory {{based on}} evolvability {{suggests that the}} repair mechanisms are in turn controlled by a <b>common</b> <b>control</b> mechanism capable of sensing conditions, such as caloric restriction, and also capable of producing the specific lifespan needed by the particular species. In this view, the differences between short- and long-lived species are in the control mechanisms, as opposed to each individual maintenance mechanism.|$|E
25|$|User Interface: Provides the {{functions}} {{to create and}} manage screen windows and most basic controls, such as buttons and scrollbars, receive mouse and keyboard input, and other functions associated with the graphical user interface (GUI) part of Windows. This functional unit resides in user.exe on 16-bit Windows, and user32.dll on 32-bit Windows. Since Windows XP versions, the basic controls reside in comctl32.dll, together with the common controls (<b>Common</b> <b>Control</b> Library).|$|E
25|$|When the sender's job was complete, it {{connected}} the talk {{path from the}} originating to the terminating side, and {{dropped out of the}} call, thus being idle for accepting the next caller. A comparatively small number of senders could handle a large amount of traffic, as each was only used for a short duration during call setup. This principle became known as <b>common</b> <b>control,</b> and was used in all subsequent switching systems.|$|E
50|$|The {{adjustment}} {{took the}} form of horizontal hold and vertical hold controls, usually on the front panel along with other <b>common</b> <b>controls.</b> These adjusted the free-run frequencies of the corresponding timebase oscillators.|$|R
5000|$|Controls: Starting with Windows 95, new {{controls}} were placed {{into a separate}} <b>common</b> <b>controls</b> component. Starting with Windows XP, new implementations of the standard {{controls were}} also moved to that same component.|$|R
50|$|Marine radar has {{performance}} adjustment {{controls for}} brightness and contrast, also manual or automatic adjustment of gain, tuning, sea clutter and rain clutter suppression, and interference reduction. Other <b>common</b> <b>controls</b> consist of range scale, bearing cursor, fix/variable range marker or bearing/distance cursor.|$|R
25|$|Crossbar offices {{used more}} shared, <b>common</b> <b>control</b> circuits. For example, a digit {{receiver}} (part of an element called an Originating Register) would {{be connected to}} a call {{just long enough to}} collect the subscriber's dialed digits. Crossbar architecture was more flexible than step offices. Later crossbar systems had punch-card-based trouble reporting systems. By the 1970s, automatic number identification had been retrofitted to nearly all step-by-step and crossbar switches in the Bell System.|$|E
25|$|In December 1909, The New York Times {{reported}} {{a new record}} set: The Manhattan Trust Company, a bank connected to Bankers Trust through <b>common</b> <b>control</b> by J. P. Morgan, acquired the Gillender Building from Helen Gillender Asinari, paying approximately $1,500,000 for the property occupying , or $822 for a square foot of Manhattan land that was worth $55,000 sixty years earlier. Negotiations were in progress since April 1909 and the sale was virtually closed in November.|$|E
25|$|While {{they may}} not have {{recognized}} the collusion of the C and N, Page and Rogers did know that the larger railroads would surely attempt to block any effort to extend the Deepwater a great distance to reach any other major trunk lines, many of which such as the New York Central, Pennsylvania and Baltimore and Ohio Railroad were also under <b>common</b> <b>control</b> of sorts (although it is not known if Page and Rogers realized or even suspected this). However, to their advantage, the Deepwater Railway charter already granted by West Virginia came to a location within a fairly short distance of the Virginia state line.|$|E
50|$|MFC is {{a library}} that wraps {{portions}} of the Windows API in C++ classes, including functionality {{that enables them to}} use a default application framework. Classes are defined for many of the handle-managed Windows objects and also for predefined windows and <b>common</b> <b>controls.</b>|$|R
5000|$|Windows Forms {{provides}} {{access to}} native Windows User Interface <b>Common</b> <b>Controls</b> by wrapping the existent Windows API in managed code. With the help of Windows Forms, the [...]NET Framework provides a more comprehensive abstraction above the Win32 API than Visual Basic or MFC did.|$|R
50|$|New {{features}} {{introduced in}} Windows NT 3.51 include PCMCIA support, NTFS file compression, replaceable WinLogon (GINA), 3D support in OpenGL, persistent IP routes when using TCP/IP, automatic display of textual descriptions when the mouse pointer {{was placed on}} toolbar buttons ("tooltips") and support for Windows 95 <b>common</b> <b>controls.</b>|$|R
25|$|The first Panel-type exchanges {{were placed}} in service in Newark, New Jersey, on January 16, 1915 at the Mulberry central office, and on June 12 in the Waverly central office. These system were semi-mechanical systems using {{telephones}} at customer stations without a dial. Operators answered calls and keyed the station number into the panel switch. The first fully machine-switching Panel systems using <b>common</b> <b>control</b> principles {{were placed in}} service in Omaha, Nebraska in December 1921, followed by the PEnnsylvania exchange in New York City in October 1922. Most Panel installations were replaced by modern systems during the 1970s and the last Panel switch was decommissioned in the Bigelow central office in Newark by 1983.|$|E
25|$|The {{incoming}} {{section of}} the office, being fixed {{to the structure of}} the last four digits of the telephone number, had a limit of 10,000 phone numbers. In some of the urban areas where Panel was used, even a single square mile might have three or five times that many. Thus the incoming selectors of several separate switching entities shared floor space and staff, but required separate incoming trunk groups from distant offices. Sometimes an Office Select Tandem was used to distribute incoming traffic among the offices. This was a Panel office with no senders or other <b>common</b> <b>control</b> equipment; just one stage of selectors and accepting only the Office Brush and Office Group parameters. Panel Sender Tandems were also used when their greater capabilities were worth their additional cost.|$|E
25|$|Moving {{lights are}} much more {{difficult}} to program than their conventional cousins because they have more attributes per fixture that must be controlled. A simple conventional lighting fixture uses only one channel of control per unit: intensity. Everything else that the light must do is pre-set by human hands (colour, position, focus, etc.) An automated lighting fixture can have as many as 30 of these control channels. A slew of products are available on the market to allow operators and programmers to easily control all of these channels on multiple fixtures. Lighting boards are still the most <b>common</b> <b>control</b> mechanism, but many programmers use computer software to do the job. Software is now available that provides a rendered preview of the output produced by the rig once fixtures are connected to the program or console. This allows programmers to work on their show before ever entering the theater and know what to expect when the lights are connected to their controller. These products usually feature some method of converting a computer's USB output to a DMX output.|$|E
50|$|The {{territory}} comprising Pushmataha County {{had been}} part of the Choctaw Nation, Indian Territory. It was almost completely unimproved in the European-American sense. The Choctaw government owned land in “severalty”, or <b>common,</b> <b>controlling</b> the communal land. The Choctaw had their own culture and did not need bridges, roads, or public works.|$|R
50|$|The <b>common</b> {{practices}} <b>Controlled</b> burns {{for prevention}} of forest fires.|$|R
50|$|From 2002-2004 Strauss {{managed the}} {{integration}} and merger of Elite into the Strauss group, following the Elite acquisition in 1996 which left Elite {{as a separate}} company with <b>common</b> <b>controlling</b> ownership. In 2007-2008 Elite was dropped from the company title (which was Strauss-Elite) and company-wide branding, remaining a chocolate and coffee brand.|$|R
2500|$|It {{is typical}} {{for a given}} {{biological}} function {{to be controlled by}} a single mechanism that is capable of sensing the germane conditions and then executing the necessary function [...] The mechanism signals all the systems and tissues that need to respond to that function by means of organism-wide signals (hormones). If ageing is indeed a biological function, we would expect all or most manifestations of ageing to be similarly controlled by a common mechanism. Various observations (listed below) indeed suggest the existence of a <b>common</b> <b>control</b> mechanism.|$|E
2500|$|There was a reason, and it {{presented}} a serious {{obstacle to the}} Deepwater Railway plans: collusion. It was only later revealed that at the time, both the C and the N were essentially under the <b>common</b> <b>control</b> of the even larger Pennsylvania Railroad (PRR) and New York Central Railroad (NYC), whose leaders, Alexander Cassatt and William Vanderbilt respectively, had secretly entered into a [...] "community of interests" [...] pact. The C and the N had apparently agreed {{with each other to}} refuse to negotiate with Col. Page and his upstart Deepwater Railway. It wasn't just the rates that Page wanted to share, which could possibly have been negotiated. The bigger issue was the coal lands which both larger railroads, especially the N, had large investments in.|$|E
2500|$|To {{suppress}} the unwanted image, the tuning of the RF {{stage and the}} LO may need to [...] "track" [...] each other. In some cases, a narrow-band receiver can have a fixed tuned RF amplifier. In that case, only the local oscillator frequency is changed. In most cases, a receiver's input band is wider than its IF center frequency. For example, a typical AM broadcast band receiver covers 510kHz to 1655kHz (a roughly 1160kHz input band) with a 455kHz IF frequency; an FM broadcast band receiver covers 88MHz to 108MHz band with a 10.7MHz IF frequency. In that situation, the RF amplifier must be tuned so the IF amplifier does not see two stations at the same time. If the AM broadcast band receiver LO were set at 1200kHz, it would see stations at both 745kHz (1200455kHz) and 1655kHz. Consequently, the RF stage must be designed so that any stations that are twice the IF frequency away are significantly attenuated. The tracking {{can be done with}} a multi-section variable capacitor or some varactors driven by a <b>common</b> <b>control</b> voltage. An RF amplifier may have tuned circuits at both its input and its output, so three or more tuned circuits may be tracked. In practice, the RF and LO frequencies need to track closely but not perfectly.|$|E
50|$|This {{also allowed}} new {{components}} - new visual or non-visual classes - {{to be written}} easily. The VCL is Windows-based and its implementations of <b>common</b> <b>controls</b> are wrappers of the Windows API, thus {{is close to the}} ground and fully native. New controls can be implemented from scratch or can use existing Windows controls.|$|R
5000|$|Live Connect (previously Messenger Connect, Live Services and Windows Live Dev) is a {{collection}} of APIs and <b>common</b> <b>controls</b> that allow developers to have a deeper control and offers access to the core Windows Live services and data through open and easily accessible application programming interfaces (APIs). At MIX07, Microsoft's Senior Architect Danny Thrope described: ...|$|R
50|$|Delphi 3, {{released}} in 1997, added new VCL components encapsulating the 4.71 version of Windows <b>Common</b> <b>Controls</b> (such as Rebar and Toolbar), TDataset architecture separated from BDE, DLL debugging, the code insight technology, component packages, component templates, DecisionCube and Teechart components for statistical graphing, WebBroker, ActiveForms, MIDAS three tier architecture, component packages and integration with COM through interfaces.|$|R
