3|8|Public
40|$|Abstract. Cryptographic {{protocols}} {{are constantly}} exposed to new attack methods. When some cryptographic protocol gets exposed {{there is a}} need to replace it. This is hard because most cryptographic protocols are hard coded in applications. Applications should implement a way of negotiating cryptographic protocols used. In that way old and vulnerable protocols could be easily replaced with new ones. The agile cryptographic negotiation protocol (ACNP) proposed in this paper represents a layer-agnostic, robust solution that can be deployed for providing <b>cryptographic</b> <b>agility</b> and greatly improve security. It provides minimal communication overhead and represents a universal and secure solution independent of the communication layer and application that uses it. 1...|$|E
40|$|We {{initiate}} a provable-security treatment of <b>cryptographic</b> <b>agility.</b> A primitive (for example PRFs, authenticated encryption schemes or digital signatures) is agile when multiple, individually secure schemes can securely {{share the same}} key. We provide a surprising connection between two seemingly unrelated but challenging questions. The first, new to this paper, is whether wPRFs (weak-PRFs) are agile. The second, already posed {{several times in the}} literature, is whether every secure (IND-R) encryption scheme is secure when encrypting cycles. We resolve the second question in the negative and thereby the first as well. We go on to provide a comprehensive treatment of agility, with definitions for various different primitives. We explain the practical motivations for agility. We provide foundational results that show to what extent it is achievable and practical constructions to achieve it to the best extent possible. On the theoretical side our work uncovers new notions and relations and settles stated open questions, and on the practical side it serves t...|$|E
40|$|We present DKM, a {{distributed}} {{key management}} system. DKM implements a new data protection API. It manages cryptographic keys and policies {{on behalf of}} groups of users that share the data. To ensure long-term protection, DKM supports cryptographic agility: algorithms, keys, and policies can evolve for protecting fresh data while preserving access to old data. DKM is written in C # and currently used by several large datacenter applications. To verify our design and implementation, we also write a lightweight reference implementation of DKM in F#. This code closes the gap between formal models and production code: • Formally, the F # code is a very precise model of DKM: we automatically verify its security properties against new symbolic libraries for <b>cryptographic</b> <b>agility,</b> using the refinement typechecker F 7 coupled with a model checker. • Experimentally, this code closely follows the structure of our production code: we automatically test that the corresponding F # and C # code fragments are interchangeable and yield the same results. We also report on several problems we uncovered and fixed {{as part of this}} joint design, development, and verification process...|$|E
40|$|The {{technical}} analysis used in determining {{which of the}} Advanced Encryption Standard candidates will be selected as the Advanced Encryption Algorithm includes e#ciency testing of both hardware and software implementations of candidate algorithms. Reprogrammable devices such as Field Programmable Gate Arrays #FPGAs# are highly attractive options for hardware implementations of encryption algorithms as they provide <b>cryptographic</b> algorithm <b>agility,</b> physical security, and potentially much higher performance than software solutions. This contribution investigates the signi#cance of FPGA implementations of four of the Advanced Encryption Standard candidate algorithm #nalists. Multiple architectural implementation options are explored for each algorithm. A strong focus is placed on high throughput implementations, which are required to support security for current and future high bandwidth applications. The implementations of each algorithm will be compared in an e#ort to determine t [...] ...|$|R
40|$|Abstract—with today's great {{demand for}} secure {{communications}} systems, {{there is a}} growing demand for real-time implementation of cryptographic algorithms. In this paper we present a hardware implementation of the RC 6 algorithm using VHDL Hardware Description Language. We also investigate the efficiency of RC 6 from the hardware implementation perspective with Field Programmable Gate Arrays (FPGAs) as the target technology. FPGAs are highly attractive options for hardware implementations of encryption algorithms as they provide <b>cryptographic</b> algorithm <b>agility,</b> physical security, and potentially much higher performance than software solutions. Our analysis and synthesis studies of the ciphers will suggest that it would be desirable for FPGA implementations to have a simple cipher design that makes use of simple operations that not only possess good cryptographic properties, but also make the overall cipher design efficient from the hardware implementation perspective...|$|R
40|$|The {{technical}} analysis used in determining {{which of the}} potential Advanced Encryption Standard candidates {{was selected as the}} Advanced Encryption Algorithm includes efficiency testing of both hardware and software implementations of candidate algorithms. Reprogrammable devices such as Field Programmable Gate Arrays (FPGAs) are highly attractive options for hardware implementations of encryption algorithms as they provide <b>cryptographic</b> algorithm <b>agility,</b> physical security, and potentially much higher performance than software solutions. This contribution investigates the significance of FPGA implementations of the Advanced Encryption Standard candidate algorithms. Multiple architectural implementation options are explored for each algorithm. A strong focus is placed on high throughput implementations, which are required to support security for current and future high bandwidth applications. Finally, the implementations of each algorithm will be compared in an e#ort to determine the most suitable candidate for hardware implementation within commercially available FPGAs...|$|R
40|$|Abstract — Data {{security}} {{has always been}} important {{in all aspects of}} life. Data may contain several form of information that we want to secure from any unauthorized access. It can be all the more important as technology continues to control various operations in our day to day life Reprogrammable devices are highly attractive options for hardware implementations of encryption algorithms as they provide <b>cryptographic</b> algorithm <b>agility,</b> physical security, and potentially much higher performance, therefore this paper investigates a hardware design to efficiently implement a special type block ciphers in VHDL and its comparative analysis in different parameter variation. This hardware design is applied to the new secret and variable size key block cipher called Blowfish designed to meet the requirements of the previous known standard and to increase security and to improve performance. The proposed algorithm will be used a variable key size. I...|$|R
40|$|<b>Cryptographic</b> {{algorithm}} <b>agility,</b> or {{the capability}} to switch between several encryption algorithms, has become a desirable feature due to the algorithm-independent design paradigm of modern security protocols. Moreover, applications such as cell encryption in ATM networks require the ability to quickly change ciphers. A promising answer to algorithm agility in hardware is reconfigurable logic. This contribution describes the design and implementation of an algorithm-agile cryptographic co-processor board. The core of the board is an FPGA which can be dynamically configured {{with a variety of}} block ciphers. The FPGA is capable of encrypting data at high speed through an ISA bus interface. The board contains a RAM with a collection of FPGA configuration files. In addition, the algorithms can be added or deleted during operation. The co-processor board also contains other reconfigurable logic and a microprocessor for control functions, and high-speed FIFOs for data storage. We report about the general design, our experiences with this proof-of-concept implementation, and recommendations for future work...|$|R
40|$|In present {{scenario}} various data encryption algorithms {{are available}} for data security which has always been important {{in all aspects of}} life. Data may contain confidential form of information that one want to secure from any third party access. As we are having number of cryptographic algorithm so sometimes it can create little bit confusion to select best one. This paper provides a view to choose the best available one {{on the basis of their}} performance parameter. It can be all the more important as technology continues to control various operations in our day to day life Reprogrammable devices are highly attractive options for hardware implementations of encryption algorithms as they provide <b>cryptographic</b> algorithm <b>agility,</b> physical security, and potentially much higher performance, therefore this paper investigates a hardware design to efficiently implement a special type block ciphers in VHDL and its comparative analysis in different parameter variation. This hardware design is applied to the new secret and variable size key block cipher called Blowfish designed to meet the requirements of the previous known standard and to increase security and to improve performance. The proposed algorithm will be used a variable key size...|$|R
40|$|With the {{expiration}} of the Data Encryption Standard (DES) in 1998, the Advanced Encryption Standard (AES) development process is well underway. It {{is hoped that}} {{the result of the}} AES process will be the specification of a new nonclassified encryption algorithm that will have the global acceptance achieved by DES as well as the capability of longterm protection of sensitive information. The technical analysis used in determining which of the potential AES candidates will be selected as the Advanced Encryption Algorithm includes e#ciency testing of both hardware and software implementations of candidate algorithms. Reprogrammable devices such as Field Programmable Gate Arrays (FPGAs) are highly attractive options for hardware implementations of encryption algorithms as they provide <b>cryptographic</b> algorithm <b>agility,</b> physical security, and potentially much higher performance than software solutions. This contribution investigates the significance of an FPGA implementation of Serpent, one of the Advanced Encryption Standard candidate algorithms. Multiple architecture options of the Serpent algorithm will be explored with a strong focus being placed on a high speed implementation within an FPGA in order to support security for current and future high bandwidth applications. One of the main findings is that Serpent can be implemented with encryption rates beyond 4 Gbit/s on current FPGAs...|$|R
40|$|This {{document}} specifies {{an updated}} Overlay Routable Cryptographic Hash Identifiers (ORCHID) format that obsoletes that in RFC 4843. These identifiers {{are intended to}} be used as endpoint identifiers at applications and Application Programming Interfaces (APIs) and not as identifiers for network location at the IP layer, i. e., locators. They are designed to appear as application-layer entities and at the existing IPv 6 APIs, but they should not appear in actual IPv 6 headers. To make them more like regular IPv 6 addresses, they are expected to be routable at an overlay level. Consequently, while they are considered non-routable addresses from the IPv 6 -layer perspective, all existing IPv 6 applications are expected {{to be able to use}} them in a manner compatible with current IPv 6 addresses. The Overlay Routable Cryptographic Hash Identifiers originally defined in RFC 4843 lacked a mechanism for <b>cryptographic</b> algorithm <b>agility.</b> The updated ORCHID format specified in this document removes this limitation by encoding, in the identifier itself, an index to the suite of cryptographic algorithms in use. Status of This Memo This is an Internet Standards Track document. This document is a product of the Internet Engineering Task Force (IETF). It represents the consensus of the IETF community. It has received public review and has been approved for publication by th...|$|R

