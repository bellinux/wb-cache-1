23|90|Public
25|$|Forms are {{enclosed}} in the HTML form tag. This tag specifies the <b>communication</b> <b>endpoint</b> the data {{entered into the}} form should be submitted to, and the method of submitting the data, GET or POST.|$|E
5000|$|A <b>{{communication}}</b> <b>endpoint</b> {{is a type}} {{of communication}} network node. It is an interface exposed by a communicating party or by a communication channel. An example of the latter type of a <b>communication</b> <b>endpoint</b> is a publish-subscribe topic [...] or a group in group communication systems.|$|E
5000|$|Forms are {{enclosed}} in the HTML [...] tag. This tag specifies the <b>communication</b> <b>endpoint</b> the data {{entered into the}} form should be submitted to, and the method of submitting the data, GET or POST.|$|E
3000|$|... {{may then}} be {{propagated}} through the MANET without other stations {{being aware of}} the <b>communication</b> <b>endpoints,</b> as desired. Nevertheless, all the stations in the path must try to decrypt the message using their private key(s) {{to determine whether they}} are the destination.|$|R
50|$|The HP 870 Unified Wired-WLAN Appliance is {{designed}} to help administrators bridge the gap between wired and wireless networks. According to published reports, the appliance simplifies management and access and supports up to 30,000 <b>communication</b> <b>endpoints.</b> The HP 850 Unified Wired-WLAN Appliance supports up to 10,000 endpoints.|$|R
40|$|Pervasive, {{context-aware}} enterprise communications applications rely on detailed {{knowledge of}} people’s contexts to facilitate efficient communications between people. User presence and activity at <b>communication</b> <b>endpoints</b> constitute {{important elements of}} a person’s context. We describe the challenges and intricacies in collecting and disseminating relevant user context data {{for the purpose of}} refined decision-making in pervasive, context-aware enterprise communications applications. Our client-side architecture Argus {{is an example of a}} system that addresses the user context gathering and propagation challenges. Argus specifically targets Web browsers as universally deployed, widely used, and extremely versatile <b>communication</b> <b>endpoints</b> in enterprises. We present the architecture and implementation of Argus and show how Argus, in conjunction with pervasive, context-aware enterprise communications applications, can accelerate and improve decision-making in an enterprise while introducing a new level of convenience to users when establishing communications in response to enterprise events...|$|R
50|$|A <b>{{communication}}</b> <b>endpoint</b> is a discoverable node {{of communication}} whose scope may be varied to narrow or broaden the discovery zone. Endpoints facilitate a standard programmable layer of abstraction whereby heterogeneous software systems and/or subsystems may {{communicate with each}} other and that the means of communication are decoupled from the communicating subsystems.|$|E
50|$|In {{communication}} networks, a node (Latin nodus, ‘knot’) {{is either}} a redistribution point or a <b>communication</b> <b>endpoint.</b> The definition of a node depends on the network and protocol layer referred to. A physical network node is an active electronic device that {{is attached to a}} network, and is capable of creating, receiving, or transmitting information over a communications channel. A passive distribution point such as a distribution frame or patch panel is consequently not a node.|$|E
50|$|Sophos Group plc is a {{security}} {{software and hardware}} company. Sophos develops products for <b>communication</b> <b>endpoint,</b> encryption, network security, email security, mobile security and unified threat management. Sophos is primarily focused on providing security software to the mid market and pragmatic enterprise from 100 to 5000 Seat organisations. Whilst not a primary focus, Sophos also protects home users, through a free anti virus software (Sophos Home) intended to demonstrate product functionality. It is listed on the London Stock Exchange and is a constituent of the FTSE 250 Index.|$|E
50|$|NFC allows one- and two-way <b>communication</b> between <b>endpoints,</b> {{suitable}} for many applications.|$|R
40|$|We {{propose the}} {{construction}} of an unobservable communications network using social networks. The <b>communication</b> <b>endpoints</b> are vertices on a social network. Probabilistically unobservable communication channels are built by leveraging image steganography and the social image sharing behavior of users. All communication takes place along the edges of a social network overlay connecting friends. We show that such a network can provide decent bandwidth even with a far from optimal routing mechanism such as restricted flooding. We show that such a network is indeed usable by constructing a botnet on top of it, called Stegobot. It is designed to spread via social malware attacks and steal information from its victims. Unlike conventional botnets, Stegobot traffic does not introduce new <b>communication</b> <b>endpoints</b> between bots. We analyzed a real-world dataset of image sharing between members of an online social network. Analysis of Stegobot's network throughput indicates that stealthy as it is, it is also functionally powerful [...] capable of channeling fair quantities of sensitive data from its victims to the botmaster at tens of megabytes every month. Comment: Information Hiding, unobservability, anonymity, botne...|$|R
40|$|This paper {{describes}} {{the design and}} implementation of extensions to the Regis distributed programming platform which add protocol stacks to <b>communication</b> <b>endpoints.</b> Although our initial goal was to extend Regis to support multiple transport protocols, groupcast and multimedia communication, the dynamic nature of the protocol framework allowed new approaches {{to the design of}} communication protocol software. The paper describes this approach through examples and shows how it leads to greater effiency and a greater degree of code reuse. 1. Introductio...|$|R
50|$|Many example {{applications}} exist. It may be {{a communication}} channel with only one <b>communication</b> <b>endpoint.</b> Any message transmitted by such a channel is immediately and only received by that same channel. In telecommunications, loopback devices perform transmission tests of access lines from the serving switching center, which usually {{does not require the}} assistance of personnel at the served terminal. Loop around is a method of testing between stations that are not necessarily adjacent, where in two lines are used, with the test being done at one station and the two lines are interconnected at the distant station. A patch cable may also function as loopback, when applied manually or automatically, remotely or locally, facilitating a loop-back test.|$|E
40|$|This memo defines an Experimental Protocol for the Internet community. It {{does not}} specify an Internet {{standard}} of any kind. Discussion {{and suggestions for}} improvement are requested. Distribution of this memo is unlimited. Aggregate Server Access Protocol (ASAP; RFC 5352), {{in conjunction with the}} Endpoint Handlespace Redundancy Protocol (ENRP; RFC 5353), provides a high-availability data transfer mechanism over IP networks. ASAP uses a handle-based addressing model that isolates a logical <b>communication</b> <b>endpoint</b> from its IP address(es), thus effectively eliminating the binding between the <b>communication</b> <b>endpoint</b> and its physical IP address(es), which normally constitutes a single point of failure. In addition, ASAP defines each logical communication destination as a pool, providing full transparent support for server pooling and loa...|$|E
40|$|Online {{collaboration}} platforms such as Google Wave provide basic {{tools for}} collaboration and communication {{as well as}} an interface to include external applications. Separately, we have defined a collaboration platform called ConnectedSpaces which extends these basic capabilities towards enterprise use. Using the ConnectedSpaces model, here we categorize, illustrate, and analyze new types of feature interactions for collaboration platforms. Furthermore, we discuss handling feature interactions which are caused by using ConnectedSpaces as a <b>communication</b> <b>endpoint</b> with enterprise communication platforms. The work in this paper is novel as it is the first investigation into feature interactions with collaboration platforms. Our approach uses a runtime feature interaction technique which can cope with features provided by different organizations...|$|E
50|$|Today’s Internet’s {{hourglass}} architecture {{centers on}} a universal network layer, IP, which implements the minimal functionality necessary for global inter-connectivity. The contemporary Internet architecture revolves around a host-based conversation model, created in the 1970s to allow geographically distributed users to use a few big, immobile computers. This thin waist enabled the Internet’s explosive growth by allowing both lower and upper layer technologies to innovate independently. However, IP was designed to create a communication network, where packets named only <b>communication</b> <b>endpoints.</b>|$|R
30|$|We now {{proceed to}} the {{security}} analysis of our system using the threat model proposed by Wang at al. [26], adapted to our system. In our analysis we consider three different attack scenarios. In all scenarios we assume that messages are exchanged over a secure channel and <b>communication</b> <b>endpoints</b> cannot lie about their identity. We do not consider the {{case in which a}} malicious entity acts as an ACP and steals the credentials of a consumer, since this attack is out of the scope of our system.|$|R
30|$|ICN {{supports}} in-network caching and decouples {{information from}} its sources {{as an appropriate}} approach to achieve information distribution and mobility support. The ubiquitous in-network caching opens up many opportunities for exploiting content awareness in order to place information closer to the user due to its explicit naming of content rather than <b>communication</b> <b>endpoints.</b> Along with the dramatic developments of mobile wireless networks for information centric services, evolutional architectures and procedures for future access networks based on ICN become a promising direction to promote the integration of cellular and wireless access technologies with ICN [3, 5].|$|R
40|$|Host {{mobility}} {{has traditionally}} been solved at the network layer, but even though Mobile IP has been standardised for 15 years, it hasn’t been supported by operators. IP’s double role as a location identifier and <b>communication</b> <b>endpoint</b> identifier brings a number of functional and performance problems. We argue that {{the best place to}} handle mobility is at the transport layer. While {{this is not a new}} argument, we believe that the emerging standard of Multipath TCP (MPTCP) can be used to solve many issues related to mobility. MPTCP naturally implements make-before-break, can be incrementally deployed, is backwards compatible with standard TCP, and could even ease incremental adoption of IPv 6. Using simulations and indoor experiments with WiFi and 3 G, we show that MPTCP gives better throughput, achieves smoother handoffs, and can be tuned to lower energy consumption. 1...|$|E
40|$|Wireless {{networking}} {{is becoming}} increasingly important for ubiquitous access to the Internet and the Web. However, wireless networks exhibit significant reliability and performance problems, with frequent disconnections, congestions, and packet losses. For these reasons, the traditional TCP/IP suite, designed for wired networks, offers poor performance and inadequate communication semantics in this scenario. There are several research efforts in both protocols and communication infrastructures aimed at producing solutions better suited to wireless network characteristics. This paper presents Mockets, a novel communications middleware specifically designed for wireless networking scenarios. The Mockets middleware permits a <b>communication</b> <b>endpoint</b> to be moved from one node to another without interrupting the communication session. In addition, Mockets provides several delivery services with different communication semantics, semantic classification of data, cancellation/replacement of enqueued data, and priority/lifetime assignment to messages. Initial experimental results in a wireless network scenario show that the Mockets middleware achieves better performance levels than traditional TCP-based infrastructure...|$|E
40|$|JavaGroups {{is a group}} {{communication}} toolkit written in Java providing reliable multicast communication Its rst version uses the {{group communication}} protocols provided by the Ensemble Hay distributed communication toolkit but future versions will have their own builtin group communication protocols Group communication allows communication endpoints to form a group Messages sent to a group are received by all members of that group New members may join a group and subsequently receive all messages sent to the group	 and cur rent members may leave a group at any time Members that have crashed will eventually be removed from a group Communication endpoints can be processes or objects essentially any entity that can send and receive messages to from a group At the core of JavaGroups is a lowlevel abstraction of a <b>communication</b> <b>endpoint</b> of a group a channel When a channel is created it is given a name Multiple channels with the same name form a group A new channel automatically join...|$|E
30|$|Next to communications, {{cybersecurity}} {{was found}} to impact the design and installation costs for synchrophasors [141]. This {{is because they are}} critical to the missionsupport systems of the grid. Different practical ways for utilities to mitigate quality issues like accuracy, timeliness and consistency are also identified. Some methods include employing dedicated communication channels between PMUs and PDCs, encrypting PMU data before communication, and enhancing <b>communication</b> <b>endpoints</b> using firewalls and routers. The report, however, does not delve into the details of how such methods could impact latency (and hence, timeliness) and availability of the data.|$|R
40|$|A {{visualization}} framework {{can be seen}} as {{a solution}} to a specialized data flow problem. Spiegel 1 is a visualization framework which uses the Unix pipeline model to execute programs that visualize scientific data. A visualization program in Spiegel is constructed out of simple components with <b>communication</b> <b>endpoints</b> which can be con- nected together. Spiegel provides a graphical pro- gramming environment, which can be used to write programs using these components. This paper de- scribes the language used to define a Spiegel pro- gram, the graphical programming environment, and the Spiegel architecture...|$|R
40|$|In modern enterprises, {{workflows}} {{are essential}} to au-tomating business processes. During their execution, work-flows need to interact with users using a mechanism called dialogs to deliver information and collect input that is re-quired for further decision-making in the workflows. In-formation delivery and input collection by enterprise work-flows is often a time-sensitive matter. Thus, dialogs have to be communicated to users in a timely fashion, which ne-cessitates sending dialogs to user <b>communication</b> <b>endpoints</b> that permit the recipients to quickly, effectively, and con-veniently view the information and provide the requested feedback. The proliferation of communication devices and clients among enterprise users implies that the middleware that creates dialogs has to provide mechanisms to tailor the content and the rendering of dialogs to {{a large number of}} endpoints. This customization poses several challenges to developing and maintaining a manageable, extensible, and flexible middleware mechanism for synthesizing dialogs from specific decision points in enterprise workflows. In this paper, we first describe the challenges associated with context-sensitive dialog synthesis. We discuss how we have applied templatized model transformation techniques to automatically synthesize dialogs in enterprise workflows. We show how our templatized transformation approach supports the evolution of <b>communication</b> <b>endpoints</b> and sys-tem requirements with a minimum of downtime and invasive design changes. We demonstrate our approach in the con-text of a representative enterprise case study. ...|$|R
40|$|Abstract—In this paper, {{we return}} to the drawing board to rethink the basic {{approach}} to multi-hop forwarding for highly dynamic wireless networks. The result is Listen First, Broadcast Later (LFBL), a surprisingly minimalist forwarding protocol. LFBL is topology-agnostic, that is, it has no knowledge of neighbors, routes, or next hops. LFBL receivers, not senders, make the forwarding decisions, and they only keep a small, fixed amount of state per active <b>communication</b> <b>endpoint</b> in order to do so. As a result, there is little state to go stale, and no predetermined paths to be broken. Frequent topology changes do not adversely impact performance. LFBL uses exclusively broadcast communication for all packets, making it a more natural fit for a wireless medium and allowing for more flexibility in the selection of MAC layer protocols. In addition to physical mobility of nodes, LFBL also supports logical mobility of application-level data. Under simulation, LFBL significantly outperforms AODV. I...|$|E
40|$|The KM 3 NeT-Italia {{underwater}} neutrino detection unit, the tower, {{consists of}} 14 floors. Each floor supports 6 Optical Modules containing front-end electronics needed to digitize the PMT signal, format and transmit {{the data and}} 2 hydrophones that reconstruct in real-time the position of Optical Modules, for a maximum tower throughput of more than 600 [*]MB/s. All floor data are collected by the Floor Control Module (FCM) board and transmitted by optical bidirectional virtual point-to-point connections to the on-shore laboratory, each FCM needing an on-shore counterpart as <b>communication</b> <b>endpoint.</b> In this contribution we present NaNet 3, an on-shore readout board based on Altera Stratix V GX FPGA able to manage multiple FCM data channels with a capability of 800  Mbps each. The design is a NaNet customization for the KM 3 NeT-Italia experiment, adding support in its I/O interface for a synchronous link protocol with deterministic latency at physical level and for a Time Division Multiplexing protocol at data level...|$|E
40|$|Existing online {{collaboration}} {{tools and}} platforms provide basic communications integration {{and the ability}} to include some real-time information sources. Moreover, users prefer to be able to choose which collaboration tool they use for a given interaction, and over the course of long-term collaboration, will typically use a variety of tools, including email, instant messages, wikis, blogs, web conferences, and shared documents. For enterprise use {{there is a need to}} integrate the various tools as well as link with existing intelligent communication systems to support long-term collaborations in a variety of ways. Due to the number and different nature of collaboration services used in enterprises today, building such a federated collaboration platform is challenging. Collaboration tools differ in terms of storage model, APIs, content organization, addressing, formats, user authentication, and user interface. By the very nature of such systems they include a large number of independently developed features and services and thus provide a strong potential for feature interactions. This paper presents novel work on feature interaction analysis in collaboration environments and presents an approach to detect and resolve such interactions where the collaboration space is used as a <b>communication</b> <b>endpoint.</b> In this paper ConnectedSpaces is used as a basis to carry out a detailed analysis of feature interaction problems in collaboration environments. ConnectedSpaces is a new model for federated collaboration environments. Like a number of existing systems, ConnectedSpaces uses a collaboration space as the basic construct. ConnectedSpaces enables the user to work directly in the client application of their choice; this is illustrated with plug-ins for MS Outlook, Internet Explorer and Skype. This paper presents distinctive characteristics of ConnectedSpaces, including views, spaces as communication endpoints, space persistence and structuring, and embedded objects. Using these features, new types of feature interactions for collaboration platforms are categorized and analyzed. The work presented in this paper focuses on handling feature interactions which are caused by using ConnectedSpaces as a <b>communication</b> <b>endpoint</b> with enterprise communication platforms. This work is novel as it is the first investigation into feature interactions with collaboration platforms. Our approach uses a runtime feature interaction technique which can cope with features being provided by different organizations...|$|E
40|$|We {{present a}} location-based view, {{based on the}} GSM (Global System For Mobile Management) and GPS(Global Positioning System) event {{mechanism}} that provides users with Emergency service portability between wide variety of <b>communication</b> <b>endpoints.</b> The architecture supports devices with different configuration formats, {{through the use of}} device controllers that manage all devices in an area. Several means of location discovery are used which, along with user scripts that specify desired Emergency service scenarios. programmed should be able to give the Information to emergency service even when it is not communicating with the Network Representation of Tracking System: Network / satellit...|$|R
40|$|Mockets is a {{comprehensive}} communications library designed to address challenges specific to mobile ad-hoc networks. Mockets have been implemented at the application-level to simplify deployment and portability. Both stream-oriented and message-oriented abstractions are supported, with the message-oriented service providing multiple classes of service (reliable, unreliable, sequenced, unsequenced), message tagging and replacement, and prioritization. Mockets also interfaces with a policy management infrastructure to support bandwidth limitation. Finally, mockets supports transparent migration of <b>communication</b> <b>endpoints</b> across hosts without the need to terminate and reestablish connections. Mockets provides similar semantics to TCP but performs better than TCP on ad-hoc networks...|$|R
40|$|The {{proliferation}} of wireless devices {{and the availability}} of new wireless applications and services raise new privacy and security concerns. Although network-layer anonymity protects the identities of the <b>communication</b> <b>endpoints,</b> the physical layer of many wireless communication protocols offers no such guarantee. The electromagnetic signal transmitted over an open communication medium can be monitored, captured, and analyzed in an effort to trace and identify users of wireless devices. In this paper we present preliminary results on the feasibility of identifying wireless nodes in a network by measuring distinctive electromagnetic characteristics or “signatures ” of Wireless Local Area Network (WLAN) cards...|$|R
30|$|SDPs are {{basically}} composed of service consumers (SCs), service providers (SPs), and service directories (SDs). SPs manages {{the description of}} services (e.g., service type, service specific attributes, and <b>communication</b> <b>endpoint</b> of services), and possibly register their available service descriptions to SDs, while SCs try to discover services by asking SPs and SDs. SDs are centralized cache entities that act as services' directory. SDs may not be introduced to a small and/or mobile network, in which such a centralized entity does not fit {{the characteristics of the}} network, i.e., infrastructure-less mobile ad-hoc network. Depending on SDPs, each component can communicate with either unicast or multicast with/without SD: unicast is appropriate for wide-area service discovery, in which SCs need to discover a topologically distant service in the Internet. In this case, SCs and SPs normally use SDs to avoid broadcasting messages. On the contrary, multicast can be used for small, dynamic mobile network. In such a case SCs and SPs do not need to rely on SDs; they can directly propagate messages within a considered network. Consequently, IP multicast based SDPs fit the characteristics of VANET, in which most participating nodes are mobile and there is no centralized entity.|$|E
30|$|As {{discussed}} in [31], several researchers [32 – 37] addressed general problem of QoS in MANETs, providing overviews and insights {{on the work}} being done in this area. To achieve QoS provisioning, QoS routing algorithms normally integrate QoS provisioning into routing protocols. The QoS version of AODV (QoS-AODV) [37], Core-Extraction Distributed Ad Hoc Routing (CEDAR) protocol [38], and Multimedia Support for Mobile Wireless Networks (MMWN) protocol [39] {{are some of the}} examples of QoS routing algorithms proposed for MANETs. However, QoS signaling techniques are independent of underlying routing protocols. The In-band signaling for QoS in Ad-Hoc Mobile Networks (INSIGNIA) algorithm [40] is a typical signaling protocol designed exclusively for MANETs. The idea of CEDAR and MMWN is to broadcast link-state information across the network in order to enable other nodes to find routes that meet QoS criteria, like minimum bandwidth. On the other hand, INSIGNIA piggybacks resource reservations onto data packets, which can be modified by intermediate nodes to inform the <b>communication</b> <b>endpoint</b> nodes in case of lack of resources. These approaches are {{based on the idea that}} wireless links between mobile nodes have certain QoS-related properties, in particular a known amount of available bandwidth, and that nodes are able to give guarantees for traffic traversing these links.|$|E
40|$|Proceedings of: ACM MobiArch 2011, The 6 th ACM International Workshop on Mobility in the Evolving Internet Architecture, June 28, 2011, Washington, D. C. Host {{mobility}} {{has traditionally}} been solved at the network layer, but even though Mobile IP has been standardised for 15 years, it hasn’t been supported by operators. IP’s double role as a location identif er and <b>communication</b> <b>endpoint</b> identif er brings a number of functional and performance problems. We argue that {{the best place to}} handle mobility is at the transport layer. While {{this is not a new}} argument, we believe that the emerging standard of Multipath TCP (MPTCP) can be used to solve many issues related to mobility. MPTCP naturally implements make-before-break, can be incrementally deployed, is backwards compatible with standard TCP, and could even ease incremental adoption of IPv 6. Using simulations and indoor experiments with WiFi and 3 G, we show that MPTCP gives better throughput, achieves smoother handoffs, and can be tuned to lower energy consumption. This research was supported by Trilogy ([URL] a research project (ICT- 216372) partially funded by the European Community under its Seventh Framework Programme. European Community's Seventh Framework ProgramThis work was partly funded by POSDRU/ 89 / 1. 5 /S/ 62557 Publicad...|$|E
40|$|We propose {{extensions}} to the Message Passing Interface (MPI) that generalize the MPI communicator {{concept to}} allow multiple <b>communication</b> <b>endpoints</b> per process, dynamic creation of endpoints, and {{the transfer of}} endpoints between processes. The generalized communicator construct {{can be used to}} express a wide range of interesting communication structures, including collective communication operations involving multiple threads per process, communications between dynamically created threads, and object- oriented applications in which communications are directed to specific objects. Furthermore. this enriched functionality can be provided in a manner that preserves backward compatibility with MPI. We describe the proposed extensions, illustrate their use with examples, and discuss implementation issues...|$|R
40|$|This {{article is}} focused on the design and {{realization}} of secure long-line data connection in GSM network. The developing module Motorola MPC 860 was used in this solution. This module is based on the operating system Linux. This operating system became the basis for the script development in the realization of automated long-line measuring system in GSM networks. The GSM modem Siemens MC 39 i is implemented in this system with a view to communication with mobile operator. This system enables data transmission by the help of GPRS technology. The secure communication is implemented by VPN connection between particular <b>communication</b> <b>endpoints</b> and the server. Key words...|$|R
40|$|In this paper, {{we present}} a {{middleware}} architecture for coordination services in sensor networks that facilitates interaction between groups of sensors which monitor different environmental events. It sits {{on top of the}} native routing infrastructure and exports the abstraction of mobile <b>communication</b> <b>endpoints</b> maintained at the locations of such events. A single logical destination is created and maintained for every environmental event of interest. Such destinations are uniquely labeled and can be used for communication by application-level algorithms for coordination and sensory data management between the different event locales. For example, they may facilitate coordination, in a distributed intrusion scenario, among nodes {{in the vicinity of the}} intruders. We evaluat...|$|R
