25|16|Public
5000|$|The Asynchronous Transfer Mode packet-switched protocol, {{where the}} packets have fixed length. The channel {{identification}} number {{consists of a}} Virtual <b>Connection</b> <b>Identifier</b> (VCI) and a Virtual Path Identifier (VPI).|$|E
50|$|Reverse ARP {{differs from}} the Inverse Address Resolution Protocol (InARP) {{described}} in RFC 2390, {{which is designed to}} obtain the IP address associated with a local Frame Relay data link <b>connection</b> <b>identifier.</b> InARP is not used in Ethernet.|$|E
5000|$|DLCI-Data Link <b>Connection</b> <b>Identifier</b> Bits. The DLCI {{serves to}} {{identify}} the virtual connection so that the receiving end knows which information connection a frame belongs to. Note that this DLCI has only local significance. A single physical channel can multiplex several different virtual connections.|$|E
50|$|Datalink <b>connection</b> <b>identifiers</b> (DLCIs) are {{numbers that}} refer to paths through the Frame Relay network. They are only locally significant, {{which means that}} when device-A sends data to device-B it will most likely use a {{different}} DLCI than device-B would use to reply. Multiple virtual circuits can be active on the same physical end-points (performed by using subinterfaces).|$|R
40|$|The routing and {{signaling}} protocols {{for supporting}} multipoint-to-multipoint connections in ATM networks {{have been presented}} earlier. VP-Merge and VC-Merge techniques have been proposed as the likely candidates for resolving the sender identification problem associated with these connections. The additional buffer requirements in the VC-Merge mechanism and the excessive use of VPI/VCI space in the VP-Merge mechanism have been {{the main reasons for}} concern about their effective utility. In this paper, we propose improvements to the traditional VC-Merge technique to minimize the need for additional buffers at intermediate merge points. Aptly named Dynamic Multiple VCMerge (DMVC), Fixed Multiple VC-Merge (FMVC) and Selective Multiple VC-Merge (SMVC), these mechanisms define a generic scheme for merging the data from multiple senders onto one or more outgoing links. By appropriately choosing the number of <b>connection</b> <b>identifiers</b> per <b>connection,</b> these schemes lead to a large reduction in the buffer requirements and an effective utilization of the VPI/VCI space. Based on extensive simulations, we show that by using two <b>connection</b> <b>identifiers</b> per <b>connection,</b> there is an 80 % reduction in buffer requirements for DMVC and FMVC when compared to the buffer required for traditional VC-Merge...|$|R
40|$|Multipoint-to-multipoint {{communication}} can {{be implemented}} by combining the pointto -multipoint and multipoint-to-point connection operations. In a multipoint-to-point connection, multiple sources send data to the same destination on a shared tree. Traffic from multiple branches is merged into a single stream after every merge point. It is impossible for the network to determine any source-specific characteristics since all sources in the multipoint connection may use the same <b>connection</b> <b>identifiers.</b> The challenge {{is to develop a}} fair rate allocation algorithm without per-source operations, as these are no longer equivalent to per-connection or per-flow operations. We giv...|$|R
50|$|A {{data link}} <b>connection</b> <b>{{identifier}}</b> (DLCI) is a Frame Relay 10 bit wide link-local virtual circuit identifier {{used to assign}} frames to a specific PVC or SVC. Frame Relay networks use DLCIs to statistically multiplex frames. DLCIs are preloaded into each switch and act as road signs to the traveling frames.|$|E
5000|$|The X.25 and Frame relay packet-switching protocols, {{where the}} packets have varying lengths, {{and the channel}} number is denoted Virtual <b>Connection</b> <b>Identifier</b> (VCI). The {{international}} collection of X.25 providers, using the X.25 protocol suite was colloquially known as [...] "the Packet switched network" [...] in the 1980s and into {{the beginning of the}} 1990s.|$|E
50|$|While {{the exact}} {{mechanics}} of a forwarding table is implementation-specific, the general model is that frame relay switches have statically defined forwarding tables, one per interface. When a frame with a given data link <b>connection</b> <b>identifier</b> (DLCI) is received on one interface, the table {{associated with that}} interface gives the outgoing interface, and the new DLCI to insert into the frame's address field.|$|E
40|$|This memo {{provides}} {{information for the}} Internet community. This memo does not specify an Internet standard of any kind. Distribution of this memo is unlimited. This memo discusses Flow Attribute Notification Protocol (FANP), which is a protocol between neighbor nodes {{for the management of}} cut-through packet forwarding functionalities. In cut-through packet forwarding, a router doesn’t have to perform conventional IP packet processing for received packets. FANP indicates mapping information between a datalink connection and a packet flow to the neighbor node and helps a pair of nodes manage the mapping information. By using FANP, routers (e. g., CSR; Cell Switch Router) can forward incoming packets based on their datalink-level <b>connection</b> <b>identifiers,</b> bypassing usual IP packet processing. The design policy of the FANP is...|$|R
40|$|Multipoint-to-multipoint {{communication}} can {{be implemented}} by combining the point-to-multipoint and multipoint-to-point connection algorithms. In an ATM multipoint-to-point connection, multiple sources send data to the same destination on a shared tree. Traffic from multiple branches is merged into a single stream after every merge point. It is sometimes impossible for the network to determine any source-specific characteristics since all sources in the multipoint connection may use the same <b>connection</b> <b>identifiers.</b> The challenge {{is to develop a}} fair rate allocation algorithm without per-source accounting as this is inequivalent to per-connection or per-flow accounting in this case. We define fairness objectives for multipoint connections, and we design and simulate an O(1) fair ATM-ABR rate allocation scheme for point-to-point and multipoint connections sharing the same links. Simulation results show that the algorithm performs well and exhibits many desirable properties. We list key modifications necessary for any ATM-ABR rate allocation scheme to fairly accommodate multiple sources...|$|R
40|$|In {{high speed}} networks, packet {{processing}} is relatively expensive while bandwidth is cheap. This begs the question: what fields {{can be added}} to packets to make packet processing easier? By exploring this question, we devise a number of novel mechanisms to speed up packet processing. With the advent of new standards for the Data Link, Network, and Transport layers, we believe there is an opportunity to apply these techniques to improve the performance of real protocols. First, we suggest adding a data manipulation header to an easily accessible portion of each packet. This header contains pointers to fields (in various layers) required for data manipulation. This information allows implementations to efficiently combine data manipulation steps (e. g., encryption and copying) in a structured fashion. Second, we suggest adding index fields to protocol identifiers at all layers (e. g.,, <b>connection</b> <b>identifiers,</b> network addresses, DSAPs) to reduce lookup costs and generic protocol processing. [...] ...|$|R
50|$|The LMI global {{addressing}} extension gives Frame Relay data-link <b>connection</b> <b>identifier</b> (DLCI) values global {{rather than}} local significance. DLCI values become DTE addresses that are {{unique in the}} Frame Relay WAN. The global addressing extension adds functionality and manageability to Frame Relay internetworks. Individual network interfaces and the end nodes attached to them, for example, can be identified by using standard address-resolution and discovery techniques. In addition, the entire Frame Relay network {{appears to be a}} typical LAN to routers on its periphery.|$|E
5000|$|Connection-oriented {{communication}} may be {{a circuit}} switched connection, or a packet-mode virtual circuit connection. In the latter case, it may use either a transport layer virtual circuit protocol such as the TCP protocol, allowing data to be delivered in order although the lower layer switching is connectionless, or it {{may be a}} data link layer or network layer switching mode, where all data packets belonging to the same traffic stream are delivered over the same path, and traffic flows are identified by some <b>connection</b> <b>identifier</b> rather than by complete routing information, allowing fast hardware based switching.|$|E
50|$|As {{these cells}} {{traverse}} an ATM network, switching takes place {{by changing the}} VPI/VCI values (label swapping). Although the VPI/VCI values are not necessarily consistent {{from one end of}} the connection to the other, the concept of a circuit is consistent (unlike IP, where any given packet could get to its destination by a different route than the others). ATM switches use the VPI/VCI fields to identify the virtual channel link (VCL) of the next network that a cell needs to transit on its way to its final destination. The function of the VCI is similar to that of the data link <b>connection</b> <b>identifier</b> (DLCI) in frame relay and the logical channel number and logical channel group number in X.25.|$|E
50|$|Common {{resource}} handles are file descriptors, network sockets, database <b>connections,</b> process <b>identifiers</b> (PIDs), and job IDs. Process IDs and job IDs are explicitly visible integers, while file descriptors and sockets (which {{are often}} implemented {{as a form}} of file descriptor) are represented as integers, but are typically considered opaque. In traditional implementations, file descriptors are indices into a (per-process) file descriptor table, thence a (system-wide) file table.|$|R
40|$|Currently IP {{addresses}} {{are used}} both for node identifiers and topological location {{names in the}} Internet. The semantic overloading and non-cryptographic nature of IP addresses {{makes it impossible to}} use them as identifiers from the security point of view. The problem becomes even worse with multi-homed mobile nodes. Multi-homed mobile nodes have several interfaces bound to dynamically changing IP addresses. When a node changes its point of attachment to the network or it reroutes traffic fromone interface to another, the <b>connection</b> <b>identifiers</b> are changed. A peer node cannot verify the validity of the new identifiers without a naming trust relationship between the identifiers and the identity of the node. The peer must have evidence that an identifier belongs to a specific identity. Currently, there are no way for a node, using traditional IP addresses, to prove that it owns a specific address, i. e., an identifier. We present in this paper the philosophy behind separation of end-point identifiers from location names, which is an essential part in designing secure multi-homed mobility architectures...|$|R
30|$|The {{embedded}} {{path management}} approach allocates the <b>connection</b> <b>identifiers</b> (CIDs) in a hierarchical manner. More precisely, the MR-BS allocates CIDs to its subordinate stations {{so that the}} CIDs allocated to all subordinate RSs of any station are {{a subset of the}} allocated CIDs for that station. Consequently, the path management is simplified because {{there is no need to}} store specific routing tables at the RS level and there is a reduced need for signaling to update the path information. On the other hand, the explicit path management approach uses an end-to-end signaling mechanism in order to distribute the routing table along the path. In more details, each path is identified by a path ID to which the CIDs are bound. The MR-BS needs to send the required information to the RSs belonging to the concerned path whenever it is created, updated or removed. Optionally, the MR-BS may specify the QoS requirements associated with each CID in order to enable the RSs to take the scheduling decision independently in case of distributed scheduling mode. The explicit path management approach needs small routing tables at the RSs and enables a reduction of the overhead required to update these tables, [10].|$|R
50|$|Connection-oriented {{transmission}} {{requires a}} setup phase in each involved node before any packet {{is transferred to}} establish the parameters of communication. The packets include a <b>connection</b> <b>identifier</b> rather than address information and are negotiated between endpoints {{so that they are}} delivered in order and with error checking. Address information is only transferred to each node during the connection set-up phase, when the route to the destination is discovered and an entry is added to the switching table in each network node through which the connection passes. The signaling protocols used allow the application to specify its requirements and discover link parameters. Acceptable values for service parameters may be negotiated. Routing a packet requires the node to look up the connection id in a table. The packet header can be small, as it only needs to contain this code and any information, such as length, timestamp, or sequence number, which is different for different packets.|$|E
5000|$|In a connection-oriented packet {{switched}} {{data link layer}} or network layer protocol, all data is sent over the same path during a communication session. The protocol identifies traffic flows only by a channel/data stream number, often denoted virtual circuit identifier (VCI), rather than by complete routing information for each packet (source and destination addresses) used in connectless datagram switching such as conventional IP routers. In connection-oriented communication, routing information may be provided to the network nodes during the connection establishment phase, where the VCI is defined in tables in each node. Thus, the actual packet switching and data transfer can {{be taken care of}} by fast hardware, as opposed to slow software based routing. Typically, this <b>connection</b> <b>identifier</b> is a small integer (10 bits for Frame Relay, 24 bits for ATM, for example). This makes network switches substantially faster (as routing tables are just simple look-up tables, and are trivial to implement in hardware). The impact is so great, in fact, that even characteristically connectionless protocols, such as IP traffic, are being tagged with connection-oriented header prefixes (e.g., as with MPLS, or IPv6's built-in Flow ID field).|$|E
40|$|Careless {{selection}} of the ephemeral port number portion of a transport protocol’s <b>connection</b> <b>identifier</b> {{has been shown to}} potentially degrade security by opening the connection up to injection attacks from “blind ” or “off path ” attackers—or, attackers that cannot directly observe the connection. This short paper empirically explores a number of algorithms for choosing the ephemeral port number that attempt to obscure the choice from such attackers and hence make mounting these blind attacks more difficult...|$|E
30|$|Several MRUs may {{be grouped}} into a data region or burst (see Figure 1), formed by {{successive}} MRUs in frequency and in time directions. Both the MRU and the data region always follow a rectangular shape structure. We consider {{the case that the}} transmitted data in each burst belongs to only one service flow (i.e., to a single MS), and the MCS applied to each burst might be adapted. Since the MS receiver needs to know how the downlink frame is organized in order to properly decode the data, the downlink control channel includes the number of bursts transmitted as well as the signalling for each burst. In the IEEE 802.16 e each burst is signalled by the parameters indicated in Table 1. Multicast transmission is addressed by mapping different <b>connection</b> <b>identifiers</b> (CIDs) to each burst, where the BS is responsible for issuing the service flow identifiers (SFIDs) and mapping it to single CIDs. As it is shown in Figure 1, the signalling bits described in Table 1 are those used into the DL-MAP structure and transmitted {{at the beginning of each}} frame after the synchronization preamble and the frame control header (FCH) [2].|$|R
40|$|Abstract. Existing {{algorithms}} {{for regular}} inference (aka automata learn-ing) allows to infer a {{finite state machine}} by observing the output that the machine produces {{in response to a}} selected sequence of input strings. We generalize regular inference techniques to infer a class of state ma-chines with an infinite state space. We consider Mealy machines extended with state variables that can assume values from a potentially unbounded domain. These values can be passed as parameters in input and output symbols, and can be used in tests for equality between state variables and/or message parameters. This is to our knowledge the first exten-sion of regular inference to infinite-state systems. We intend to use these techniques to generate models of communication protocols from observa-tions of their input-output behavior. Such protocols often have param-eters that represent node adresses, <b>connection</b> <b>identifiers,</b> etc. that have a large domain, and on which test for equality is the only meaningful operation. Our extension consists of two phases. In the first phase we apply an existing inference technique for finite-state Mealy machines to generate a model for the case that the values are taken from a small data domain. In the second phase we transform this finite-state Mealy machine into an infinite-state Mealy machine by folding it into a compact symbolic form. ...|$|R
40|$|Application-Layer Protocol Negotiation (ALPN) {{labels for}} Session Traversal Utilities for NAT (STUN) usages, such as Traversal Using Relays around NAT (TURN) and NAT discovery, are defined in this {{document}} to allow an application layer to negotiate STUN usages within the Transport Layer Security (TLS) <b>connection.</b> ALPN protocol <b>identifiers</b> defined {{in this document}} apply to both TLS and Datagra...|$|R
40|$|John Wiley & Sons, Ltd. Hash {{functions}} are widely applied in network packet processing, and uniformity {{is one of}} their determinant attributes. This paper investigates into the impact of bitwise operators on the uniformity of such hash functions. To this end, we first define <b>connection</b> <b>identifier</b> as their input keyword, whose uniformity is quantized by deviation index. Then, we analyze the impact of all bitwise operators on the deviation indices of its operation results. As for binary bitwise operators, we give the conditions where AND, OR and XOR increase bit uniformity, respectively, and conclude that only XOR improves the uniformity of bits in the <b>connection</b> <b>identifier</b> effectively by verifying these conditions with real network traffic. Furthermore, we derive a positive linear relationship of the uniformity of a bit-stream and that of its any bit under simple independence assumption. As for unary bitwise operators, we prove that NOT keeps bit-stream uniformity as the same even combined with XOR. Nevertheless, we find that circular shift with XOR changes bit-stream uniformity with a great probability. In particular, a way is proposed to determine the optimal staggered number of two bitstreams before their XOR operation. Lastly, we provide guidelines to design uniform hash functions with circular shift and XOR...|$|E
30|$|Thirdly, {{updating}} the switch states upon receiving a new read command {{has to be}} implemented. Since the switch states are stored on the RTU as Modbus coil values, the event handlers for the read coil request and response events are created, as shown in Listing 3. Line 2 stores the address and number of requested coils in a temporary table temp, identified by a string with the <b>connection</b> <b>identifier</b> and transaction identifier. Line 5 checks whether a connection with the defined connection and transaction identifiers is stored in the temporary table. If such a connection is present, {{the value of the}} switch is stored in Line 6, and in Line 7 the element from the temporary table is deleted.|$|E
30|$|The IEEE 802.16 - 2009 [11] {{standard}} specifies the MBS deployment over WiMAX networks. MBS {{provides an}} efficient transmission of multimedia streams {{from one or}} more BSs to multiple MSs through a shared radio resource [2]. Multiple BSs compose an MBS zone, where BSs synchronously transmit over the air multicast data belonging to the same service flow, by using a common <b>connection</b> <b>identifier</b> (CID) and through the same security association. Since BSs located within the same MBS zone use a common Multicast CID (MCID) for the same MBS multimedia stream transmission, MSs do not require registration to any specific BS and the handover functions are transparent to a MS moving within the same MBS zone.|$|E
40|$|Historically, Internet {{services}} provided clients {{with access to}} the resources of a particular host. However, today’s services are no longer defined by a single host or confined to a fixed location. Yet, the network architecture continues to impose an unfortunate coupling between hosts and services by binding connections to topology-dependent addresses, rather than topology-independent service names—complicating everything from server replication, load balancing, and virtualmachine migration, to client mobility and multi-homing. In this paper, we propose a new service access layer that redefines the interaction between the network and transport layers. This layer provides the “thin waist ” needed to enable direct communication on service names, decouple service <b>connections</b> from network <b>identifiers,</b> and enhance the network’s awareness of service availability. We present Serval—a complete architecture built around this new layering that handles server replication, network dynamics, and diverse service-discovery techniques, while ensuring scalability, security, and the efficient handling of churn. By running squarely above the network layer, Serval remains fully backwards compatible with today’s IP networks. We present the design, implementation, and evaluation of a Serval prototype, focusing on datacenter replicated services, including several real applications. 1...|$|R
5000|$|The {{location}} of an element is {{identified by the}} node numbers since each element is connected between two nodes. PSpice works fundamentally with node voltages, and the circuit description requires node numbers. All nodes must be connected to at least two elements and hence appear twice. Node numbers are integers but need not be sequential in PSpice. Node O is the ground node and all nodes must have a dc path to the ground node. Node voltages are identified by node number. The voltage difference between two nodes may be written as v (node 1, node 2), which stands for v(Node 1) - v(Node 2). If two or more connection points are joined by a zero resistance path, then that combination is treated as a single node. Each element in a [...]PSpice circuit must connect to nodes that specify the element’s location. Consequently, even a series <b>connection</b> point requires <b>identifiers</b> and can {{be treated as a}} node. The reference polarity for node voltage is always positive relative to the node O. PSpice employs the passive combination of all elements, with the first named node taken to be at higher potential.|$|R
40|$|A {{contactless}} smartcard is a smartcard {{that can}} communicate with other devices without any physical <b>connection,</b> using Radio-Frequency <b>Identifier</b> (RFID) technology. Contactless smartcards are becoming increasingly popular, with applications like credit-cards, national-ID, passports, physical access. The security of such applications is clearly critical. A key feature of RFID-based systems is their very short range: typical systems are designed to operate at a range of &asymp; 10 cm. In this study we show that contactless smartcard technology is vulnerable to relay attacks: An attacker can trick the reader into communicating with a victim smartcard that is very far away. A "lowtech" attacker can build a pick-pocket system that can remotely use a victim contactless smartcard, without the victim's knowledge. The attack system consists of two devices, which we call the "ghost" and the "leech". We discuss basic designs for the attacker's equipment, and explore their possible operating ranges. We show that the ghost can be up to 50 m away from the card reader [...] 3 orders of magnitude higher than the nominal range. We also show that the leech can be up to 50 cm away from the the victim card. The main characteristics of the attack are: orthogonality to any security protocol, unlimited distance between the attacker and the victim, and low cost of the attack system...|$|R
30|$|As {{defined in}} the IEEE 802.16 specification[3], {{there are two main}} classes of communications: {{management}} messages and user data. The management messages are used to establish communications and update the link as circumstances change. The user data messages are used to transmit application layer data on behalf of the clients using the system. Within the context of the proposed system, this represents Layer 3 Network protocol[26] packets and Internet traffic. The IEEE 802.16 j specification[5] adds another class of messages for traffic between the RS and the BS called relay messages. Relay messages allow an RS to group together traffic to and from the BS by SS nodes served by the RS, and transmit them using a single connection, represented by a <b>connection</b> <b>identifier</b> (CID), making more efficient use of the WiMAX bandwidth.|$|E
40|$|This RFC {{specifies}} an IAB standards track {{protocol for}} the Internet community, and requests discussion {{and suggestions for}} improvements. Please refer to the current edition of the "IAB Official Protocol Standards " for the standardization state and status of this protocol. Distribution of this memo is unlimited. This memo describes additions to ARP that will allow a station to request a protocol address corresponding to a given hardware address. Specifically, this applies to Frame Relay stations that may have a Data Link <b>Connection</b> <b>Identifier</b> (DLCI), the Frame Relay equivalent of a hardware address, associated with an established Permanent Virtual Circuit (PVC), but {{do not know the}} protocol address of the station {{on the other side of}} this connection. It will also apply to other networks with similar circumstances. 3. Convention...|$|E
30|$|One of {{the three}} sublayers in MAC, the {{convergence}} sublayer, is designed to classify and map the MSDUs to the designated service class and <b>connection</b> <b>identifier</b> (CID). Other processing, for instance, optional payload header suppression and packet header restoring, are also the functionalities of the convergence sublayer. Security sublayer, another sublayer in MAC, is responsible for providing authentication, secure key exchange, encryption, and integrity in IEEE 802.16 networks. It is formed to prevent all well-known security attacks that may cause denial of service and other threats to the networks. Lastly, the common part sublayer represents {{the core of the}} MAC protocol, and its responsibilities are bandwidth allocation, connection establishment, and maintenance. Besides, frame construction, multiple access, bandwidth request and grant, scheduling, radio resource management, and QoS management are also part of the common part sublayer. The common part sublayer is thus the core of MAC layer in maintaining the network QoS structure.|$|E
5000|$|Images (and other {{composite}} instances like Presentation States and Structured Reports) {{are then}} retrieved from a PACS server through either a C-MOVE or C-GET request, using the DICOM network protocol. Retrieval {{can be performed}} at the Study, Series or Image (instance) level. The C-MOVE request specifies where the retrieved instances should be sent (using separate C-STORE messages on one or more separate <b>connections)</b> with an <b>identifier</b> known as the destination Application Entity Title (AE Title). For a C-MOVE to work, the server must be configured with mapping of the AE Title to a TCP/IP address and port, {{and as a consequence}} the server must know in advance all the AE Titles that it will ever be requested to send images to. A C-GET, on the other hand, performs the C-STORE operations on the same connection as the request, and hence does not require that the [...] "server" [...] know the [...] "client" [...] TCP/IP address and port, and hence also works more easily through firewalls and with network address translation, environments in which the incoming TCP C-STORE connections required for C-MOVE may not get through. The difference between C-MOVE and C-GET is somewhat analogous to the difference between active and passive FTP. C-MOVE is most commonly used within enterprises and facilities, whereas C-GET is more practical between enterprises.|$|R
40|$|Recent {{research}} in the designing of an elegant mapping service to map identifiers onto locators in networks with locator/identifier separation, focuses on solving practical issues related to mapping system. However, how to provide entire secure support in separation networks is still an open issue. In this paper, we present the design and evaluation of a hierarchical indirect mapping system (HIMS). It provides indirect mapping from <b>connection</b> <b>identifier</b> (CID), a novel flat identifier space introduced to stamp packets, to endpoint identifier (EID), can limit the impact of full range of destination attacks such as Denial of Service (DoS) floods from the outset by EID hidden, and fulfills the requirements such as low latency, efficient network utilization and scalability. Based on an efficient merging rule, HIMS build a hierarchical Chord architecture which can scale to Internet level by preserving the locality and convergence of the inter-domain path. We present scalability assessment and numerical results to demonstrate the performance gains of the proposed approach...|$|E
30|$|The MAC {{layer is}} a connection-oriented {{protocol}} {{that has the}} advantage of controlling network resource sharing among individual connections. The protocol maps both connected and connectionless traffic to a unique <b>connection</b> <b>identifier</b> (CID). If traffic coming from an upper layer arrives at the MAC layer, the SS attempts to establish a connection with the BS. The BS employs a call admission control (CAC) scheme that checks whether the resources available can ensure QoS for the new connection while maintaining the QoS guarantees for the existing users. With the acceptance of a new connection, the BS responds to the SS with a CID to use for the UP and DL traffic. Once a connection is set, the SS can request bandwidth from the BS. The BS grants bandwidth using the grant per subscriber station (GPSS) approach. Once the SS receives bandwidth from the BS, its packet scheduler distributes the bandwidth among its own active connections. The CAC and request-grant bandwidth allocation components of the BS provide support to different applications with various QoS requirements. The 802.16 standard partitions applications into service classes as follows.|$|E
