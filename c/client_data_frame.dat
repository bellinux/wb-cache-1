1|3448|Public
50|$|There are {{two types}} of GFP frames: a GFP client frame and a GFP control frame. A GFP client frame can be further {{classified}} as either a <b>client</b> <b>data</b> <b>frame</b> or a client management frame. The former is used to transport client data, while the latter is used to transport point-to-point management information like loss of signal, etc. Client management frames can be differentiated from the client data frames based on the payload type indicator. The GFP control frame currently consists only of a core header field with no payload area. This frame is used to compensate for the gaps between the client signal where the transport medium has a higher capacity than the client signal, and is better known as an idle frame.|$|E
40|$|To {{solve the}} current data Security problem for cloud disk in {{distributed}} network, for example transmission, storage security problems, access control and data verification, a network cloud disk security storage {{system based on}} Hadoop is proposed. Based on the different secret level of <b>client</b> <b>data,</b> it provides selective encryption method which provides full deliberation to the subsequent security issues, such as {{the security of the}} <b>client</b> <b>data</b> broadcast in the network, <b>client</b> <b>data</b> no verification, the <b>client</b> <b>data</b> privacy might be leaked. Mutual with symmetric encryption algorithm and uniqueness of <b>client</b> <b>data</b> authentication of RSA, the performance of Hadoop, the distributed network cloud data security storage disk can supply protected, efficient, constant effect...|$|R
5000|$|UniPro {{currently}} supports two priority {{levels for}} <b>data</b> <b>frames</b> called Traffic Class 0 (TC0) and Traffic Class 1 (TC1). TC1 has higher priority than TC0. This {{means that if}} an L2 transmitter has a mix of TC0 and TC1 <b>data</b> <b>frames</b> to send, the TC1 <b>data</b> <b>frames</b> will be sent first. Assuming that most data traffic uses TC0 and that the network has congestion, this helps ensure that TC1 <b>data</b> <b>frames</b> arrive at their destination faster than TC0 <b>data</b> <b>frames</b> (analogous to emergency vehicles and normal road traffic). Furthermore, L2 can even interrupt or [...] "preempt" [...] an outgoing TC0 <b>data</b> <b>frame</b> to transmit a TC1 <b>data</b> <b>frame.</b> Additional arbitration rules apply to control frames: in essence these receive higher priority than <b>data</b> <b>frames</b> because they are small and essential for keeping traffic flowing.|$|R
50|$|The {{user can}} create {{multiple}} <b>data</b> <b>frames</b> within one table of contents. The <b>data</b> <b>frame</b> while in that view will only view a single <b>data</b> <b>frame</b> at a time.|$|R
30|$|Nodes in {{the same}} class have the same capture priority. Suppose a class-i node and a class-j node {{simultaneously}} transmit <b>data</b> <b>frame.</b> If i < j, then the <b>data</b> <b>frame</b> of class-i node is captured (i.e., successfully transmitted) but that of class-j node is dropped due to collision. We assume that <b>data</b> <b>frame</b> with higher capture priority can be decoded regardless of any <b>data</b> <b>frames</b> with lower priority. If i = j, then both <b>data</b> <b>frames</b> are dropped.|$|R
30|$|The TEMAC {{generated}} by the intellectual property (IP) core of Xilinx is used to process the <b>data</b> <b>frames.</b> It sends <b>data</b> <b>frames</b> to the GigE Tx and receives <b>data</b> <b>frames</b> from the GigE Rx. The MAC RxQ is similar with the MAC TxQ, which is just in a different transmission direction. When the MAC TxQ sends a <b>data</b> <b>frame,</b> a counter is opened; while the MAC RxQ finishes receiving that <b>data</b> <b>frame,</b> the above counter is closed by the MAC TxQ immediately. By their collaboration, the latency shown in Equation  2, which is accurate to the nanosecond, can be obtained.|$|R
40|$|<b>Data</b> <b>frames</b> are {{integral}} to R. They provide a standard format for passing data to model-fitting and plotting functions, and this standard {{makes it easier}} for experienced users to learn new functions that accept data as a single <b>data</b> <b>frame.</b> Still, many <b>data</b> sets do not easily fit into a single data frame; data sets in ecology with a so-called fourth- corner problem provide important examples. Manipulating such inherently multiple-table data using several <b>data</b> <b>frames</b> can result in long and difficult-to-read workflows. We introduce the R multitable package to provide new data storage objects called data. list objects, which extend the <b>data.</b> <b>frame</b> concept to explicitly multiple-table settings. Like <b>data</b> <b>frames,</b> <b>data</b> lists are lists of variables stored as vectors; what is new is that these vectors have dimension attributes that make accessing and manipulating them easier. As data. list objects can be coerced to <b>data.</b> <b>frame</b> objects, they can be used with all R functions that accept an object that is coercible to a <b>data.</b> <b>frame...</b>|$|R
5000|$|... {{the content}} of a <b>data</b> <b>frame</b> will only be passed once to the upper {{protocol}} layer (duplicate <b>data</b> <b>frames</b> are discarded) ...|$|R
2500|$|Step 2: Gathering <b>client</b> <b>data</b> and {{determining}} goals and expectations ...|$|R
5000|$|Support for JSON <b>client</b> <b>data</b> (for REST and JavaScript clients) ...|$|R
30|$|In {{order to}} fully {{evaluate}} our approach, the network performance measurement system of our approach is compared with it using software to send probe <b>data</b> <b>frames</b> {{for the same}} one communication path. The software system operates at the host computer. It uses the libnet to cyclically encapsulate <b>data</b> <b>frame</b> according to the user’s configurations. Then, it forwards those <b>data</b> <b>frames</b> immediately. Meanwhile, in order to monitor the network traffic transmitted and received for each network interface, the above NetFPGA {{is also used to}} count the network traffic in the software system. Moreover, we do not wait for the interframe gap when sending those <b>data</b> <b>frames</b> so as to maximize the network performance, namely sending back-to-back <b>data</b> <b>frames</b> to reveal the network performance.|$|R
30|$|Consistency: {{determines how}} {{agreeable}} {{the data is}} with the overall structure of its type. Incompatibility of attributes in terms of measurement rates or header labeling between datasets results in outliers, leading to an inconsistent result from an application. The attributes of consistency are as follow. ① Header frame consistency: consistency of the header frame of the device. This could be categorized into: persistence of PMU header that states whether the PMU header structure is consistent over time, and persistence of PDC header that states whether the PDC header structure is consistent over time. ② <b>Data</b> <b>frame</b> consistency: consistency of <b>data</b> <b>frames</b> of the device. This could be categorized into: persistence of PMU <b>data</b> <b>frame</b> that states whether the PMU <b>data</b> <b>frame</b> structure is consistent over time, and persistence of the PDC <b>data</b> <b>frame</b> that states whether the PDC <b>data</b> <b>frame</b> structure is consistent over time. ③ Order consistency of data frames: whether {{the order in which}} the <b>data</b> <b>frames</b> are recorded is consistent in the device. ④ Consistency in compliance to standards recommended for PMU and all the devices associated with it. ⑤ Consistency of reporting rate: whether data reporting rate is consistent across all devices.|$|R
30|$|The <b>data</b> <b>frame</b> is {{initially}} processed by FIFO buffer which buffers some bytes {{if there are}} any downstream processing delays. Then, the frame flows into frame store. Next, the frame is stored in SRAM via SRAM interface. The associated frames with the appropriate frame context information are retrieved via Register I/O so that the <b>data</b> <b>frame</b> in the SRAM can be monitored. When the last word of the <b>data</b> <b>frame</b> is written into the SRAM, the frame store will send a control signal to make frame remove informed, which tells the frame remove to begin reading the <b>data</b> <b>frames</b> in the SRAM.|$|R
30|$|The AP transmits {{the polling}} frames {{to grant the}} {{transmission}} opportunities to the STAs. After the beacon frame, the AP waits for one Short InterFrame Space (SIFS) period, and then transmits to an STA a polling frame on which a <b>data</b> <b>frame</b> destined for the STA can be piggybacked. The STA should respond to the polling frame by transmitting to the AP its <b>data</b> <b>frame</b> on which the ACK frame corresponding to the <b>data</b> <b>frame</b> transmitted by the AP can be piggybacked. After the reception of the <b>data</b> <b>frame</b> transmitted by the STA, the AP transmits to another STA a polling frame on which a <b>data</b> <b>frame</b> and the ACK frame corresponding to the previous <b>data</b> <b>frame</b> transmitted by the STA can be piggybacked. The STA responds to the polling frame by transmitting its <b>data</b> <b>frame</b> on which the ACK frame can be piggybacked. The STAs can respond to the polling frames by transmitting the null frames if the STAs {{do not have the}} <b>data</b> <b>frames</b> to transmit. If the STAs fail to respond to the polling frames within one SIFS period following the transmissions of the AP, for the error recovery, the AP transmits a polling frame to another STA after one PCF InterFrame Space (PIFS) period {{from the end of the}} previous transmission. In this manner, the process of the AP's polling and the STAs' responding continues until the contention-free period (CFP) ends.|$|R
50|$|In {{the event}} of a <b>Data</b> <b>Frame</b> and a Remote Frame with the same {{identifier}} being transmitted at the same time, the <b>Data</b> <b>Frame</b> wins arbitration due to the dominant RTR bit following the identifier.|$|R
50|$|In Enterprise {{model the}} {{application}} module is installed on <b>client's</b> <b>data</b> centre and maintained by themselves.|$|R
40|$|A Health Department <b>client</b> <b>data</b> {{base was}} {{developed}} in 1983 in conjunction with City-owned Brackenridge Hospital. From systems analyses through implementation phases, the Health Department's Information Management team worked closely with Hospital Data Processing to insure mutual accessibility of information between the Hospital Admission/Registration system and the Health Department <b>client</b> <b>data</b> base. Shared information facilitates continuity of health care, effective discharge planning, networking/referral, and program evaluation/monitoring. Of particular concern are the numerous problems encountered during the process: Factors ranging from under-estimates of time required to program and actual implementation to functional impact on clinic operations. These underscore the need to realistically and adequately plan {{the development of a}} mainframe <b>client</b> <b>data</b> base in a local Health Department...|$|R
40|$|Mobile phone {{applications}} {{may enhance}} {{the delivery of}} critical health services and the accuracy of health service data. Yet, the opinions and experiences of frontline health workers on using mobile apps to track pregnant and recently delivered women are underreported. This evaluation qualitatively assessed the feasibility, usability, and acceptability of a mobile <b>Client</b> <b>Data</b> App for maternal, neonatal, and child <b>client</b> <b>data</b> management by community health nurses (CHNs) in rural Ghana. The mobile app enabled CHNs to enter, summarize, and query <b>client</b> <b>data.</b> It also sent visit reminders for clients and provided a mechanism to report level of care to district officers. Fourteen interviews and two focus groups with CHNs, midwives, and district health officers were conducted, coded, and thematically analyzed. Results indicated that the app was easily integrated into care, improved CHN productivity, and was acceptable due to its capacity to facilitate <b>client</b> follow-up, <b>data</b> reporting, and decision-making. However, the feasibility and usability of the app were hindered by high client volumes, staff shortages, and software and device challenges. Successful integration of mobile <b>client</b> <b>data</b> apps for frontline health workers in rural and resource-poor settings requires real-time monitoring, program investments, and targeted changes in human resources...|$|R
3000|$|... {{denotes the}} mean number of MAC {{addresses}} piggybacked on the RAK frames to acknowledge the receptions of the uplink <b>data</b> <b>frames.</b> We will denote by r the probability that the group ACK frame is transmitted at the end of all RAK polling procedures for the multicast <b>data</b> <b>frame.</b> Then, the mean amount of time T needed for the multicast <b>data</b> <b>frame</b> to be successfully transmitted to n recipients can be upper bounded as [...]...|$|R
5000|$|... “The {{format of}} a MAC <b>data</b> <b>frame</b> {{in which the}} octets of any MAC {{addresses}} conveyed in the MAC user data field have the same bit ordering as in the Hexadecimal Representation.” (See MAC <b>data</b> <b>frame,</b> MAC addresses) ...|$|R
5000|$|In {{addition}} to <b>data</b> <b>frames</b> which contain user data, L2 also transmits and receives control frames. The control frames {{can be distinguished}} from <b>data</b> <b>frames</b> by three bits in the first symbol. There {{are two types of}} control frames: ...|$|R
30|$|The host {{computer}} often communicates with the FPGA {{to complete the}} performance measurement. Through Peripheral Component Interconnect (PCI) bus interface, not only the {{host computer}} can send <b>data</b> <b>frames</b> to FPGA through the direct memory access (DMA)-engine, but also the host computer can access the internal registers of the FPGA any time. A CPU RxQ receives the <b>data</b> <b>frames</b> configured by the user from the host computer via PCI bus, which {{is the source of}} the probe <b>data</b> <b>frame.</b>|$|R
50|$|Reference: Table: <b>Data</b> <b>Frame</b> Format.|$|R
30|$|The active {{measurement}} method {{is used to}} generate probe <b>data</b> <b>frames.</b> user <b>data</b> path {{is the core of}} data path processing, which includes an input arbiter and a traffic generator. The input arbiter chooses a <b>data</b> <b>frame</b> from a MAC RxQ or a CPU RxQ and then makes it entry into the traffic generator. By accessing the static random access memory (SRAM), a lot of <b>data</b> <b>frames</b> are generated by the traffic generator according to the parameters configured by the user.|$|R
40|$|We {{show that}} the optimal asset {{allocation}} for an investor depends crucially on the theory with which the investor is modeled. For the same market data and the same <b>client</b> <b>data</b> different theories lead to different portfolios. The market data we consider is standard asset allocation <b>data.</b> The <b>client</b> <b>data</b> is determined by a standard risk profiling question and the theories we apply are mean-variance analysis, expected utility analysis and cumulative prospect theory...|$|R
40|$|In IEEE 802. 15. 4 {{wireless}} personal area networks (WPANs), reliable {{data transmission}} {{is an important}} issue in areas such as body information for medical treatments. Some handshaking mechanisms in literatures are studied and proposed to guarantee successful <b>data</b> <b>frame</b> transmission. One is to adopt ACK frame, which is replied by the receiver back to the sender when the <b>data</b> <b>frame</b> is correctly received. This is a popular mechanism. However, there are many different reasons, such as the fading channel, <b>data</b> <b>frame</b> collision, and hidden terminal problem, by which <b>data</b> <b>frames</b> cannot be correctly received on the receiver. Therefore, a sender should have different data retransmission policies and procedures for <b>data</b> <b>frame</b> retransmission. Neglecting these measures of failed transmission, the <b>data</b> <b>frame</b> retransmission may fail again, and the transmission efficiency will be degraded. In this paper, we propose a cross-layer judgment scheme (CL-JS) to solve the retransmission problem. It does not require the extra control overhead, but it can correctly judge the reasons of failed transmission from overlapped signals. Thus, the sender can adaptively adjust system parameters to handle the different retransmission procedures. Simulation results validated by mathematical analysis show that the proposed scheme significantly improves the goodput with the reduction in power consumption...|$|R
50|$|L2 {{clusters}} 17-bit UniPro L1.5 symbols into packet-like <b>data</b> <b>frames</b> (the term packet {{is reserved}} for L3). These <b>data</b> <b>frames</b> start with a 17-bit start-of-frame control symbol, followed by up to 288 bytes of data (144 data symbols) and followed by an end-of-frame control symbol and a checksum.|$|R
40|$|Cross-platform Perl based R {{function}} to create Excel 2003 (XLS) and Excel 2007 (XLSX) files {{from one or}} more <b>data</b> <b>frames.</b> Each <b>data</b> <b>frame</b> will be written to a separate named worksheet in the Excel spreadsheet. The worksheet name will be {{the name of the}} <b>data</b> <b>frame</b> it contains or can be specified by the user. Author Marc Schwartz and various authors for Perl mod-ules listed in each. pm file. Copyright The copyright holders of the Perl files are listed in each. pm file under the Perl directory...|$|R
3000|$|... {{consists}} of a single connection, the transmitting STA of the connection can transmit its direct <b>data</b> <b>frame</b> to any receiving STA of the established direct link connections in its transmission range when polled by the AP. When the transmitting STA of the connection has no direct <b>data</b> <b>frame</b> to transmit, the STA should use the granted transmission opportunity to transmit its null or <b>data</b> <b>frame</b> to the AP when polled by the AP. The AP can optionally modify the derived polling sequence to insert the AP's polling frame transmissions before the transmissions of the nonsimultaneous polling groups when the AP has the <b>data</b> <b>frames,</b> which are actually piggybacked on the polling frames, destined for the nonsimultaneous polling groups. When no direct link communication through the connections in a simultaneous polling group in [...]...|$|R
30|$|During the RAK polling procedure, the AP can {{piggyback}} on the RAK {{frames the}} MAC addresses of the transmitters of the successfully received uplink <b>data</b> <b>frames.</b> For this purpose, {{the format of}} the RAK frame should be changed to include the MAC addresses of the transmitters of the uplink <b>data</b> <b>frames</b> that are successfully received by the AP. When the AP finds that it has not yet acknowledged the receptions of one or more uplink <b>data</b> <b>frames</b> at the end of all RAK polling procedures for the multicast <b>data</b> <b>frame,</b> it can transmit one group ACK frame an SIFS period {{after the end of the}} last RAK polling procedure. The group ACK frame is assumed to have the same format of the RAK frame, however, has no polling function.|$|R
40|$|A system {{capable of}} {{generating}} every possible <b>data</b> <b>frame</b> subperiod and delayed subperiod of a <b>data</b> <b>frame</b> of length of M clock pulse intervals (CPIs) comprised of parallel modulo-m sub i counters is presented. Each m sub i {{is a prime}} power divisor of M and a cascade of alpha sub i identical modulo-p sub i counters. The modulo-p sub i counters are feedback shift registers which cycle through p sub i distinct states. Every possible nontrivial <b>data</b> <b>frame</b> subperiod and delayed subperiod is derived and a specific CPI in the <b>data</b> <b>frame</b> is detected. The number of clock pulses required to bring every modulo-p sub i counter to a respective designated state or count {{is determined by the}} Chinese remainder theorem. This corresponds to the solution of simultaneous congruences over relatively prime moduli...|$|R
5000|$|Arbers' {{dedicated}} {{email addresses}} {{are subject to}} advertising campaigns from third parties which suggests that <b>client</b> <b>data</b> may be resold behind the scenes.|$|R
5000|$|There are two {{differences}} between a <b>Data</b> <b>Frame</b> and a Remote Frame. Firstly the RTR-bit is transmitted as a dominant {{bit in the}} <b>Data</b> <b>Frame</b> and secondly in the Remote Frame there is no Data Field. The DLC field indicates the data length of the requested message (not the transmitted one) ...|$|R
40|$|A {{system and}} method for data {{synchronization}} in Passive Optical Networks are disclosed. According to an embodiment, the present invention provides {{a method for}} providing upstream data synchronization in an optical communication network. The method includes sending data from an Optical Network Unit. The data includes a first <b>data</b> <b>frame,</b> which includes a header sequence, a synchronization segment, and a data segment. The synchronization segment includes 66 bits, which includes a first number of bits having nonzero values and a second number of bits having a value of zero. The first number {{is different from the}} second number. The method further includes receiving at least the first <b>data</b> <b>frame</b> by an Optical Line Terminal. The method also includes processing the first <b>data</b> <b>frame.</b> The method additionally includes selecting a first segment of the first <b>data</b> <b>frame,</b> the first segment including 66 bit...|$|R
30|$|ADMDM {{processes}} {{the connection}} records based on time window units, {{which means that}} network data are assigned {{into a series of}} time windows based on their occurring time and that the connection records are reconstructed from the raw network data within a time window. Moreover, TCP protocol defines that a data flow ends with the capture of RST <b>data</b> <b>frame</b> or FIN <b>data</b> <b>frame.</b> On the other hand, UDP protocol is a non-connection-based transferring protocol. Lastly, the data flow ends when no <b>data</b> <b>frame</b> is captured from either side of the communication channel within a certain period.|$|R
50|$|Acknowledgement of the {{connect request}} by the IO Device allows {{parameterization}} to follow. From this point forward, both the IO Device and IO Controller start exchanging cyclic process I/O <b>data</b> <b>frames.</b> The process I/O <b>data</b> <b>frames</b> don't contain valid data at this point, but they start serving as keep-alive {{to keep the}} watchdog from expiring.|$|R
