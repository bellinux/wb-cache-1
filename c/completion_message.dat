4|22|Public
50|$|To win the game, {{the player}} must achieve {{a score of}} 100% by solving the various puzzles. Anyone {{completing}} the game without cheating was issued a signed congratulatory certificate by quoting the <b>completion</b> <b>message.</b>|$|E
5000|$|An Event is {{represented}} with {{a circle and}} denotes something that happens (compared with an activity, {{which is something that}} is done). Icons within the circle denote the type of event (e.g., an envelope representing a message, or a clock representing time). Events are also classified as Catching (for example, if catching an incoming message starts a process) or Throwing (such as throwing a <b>completion</b> <b>message</b> when a process ends).|$|E
30|$|Using the real-time-based {{rainfall}} transmission module, as the rainfall accumulation {{records are}} transmitted from the AWS in real time, the rainfall event protocol is retained {{to consider the}} event trigger time and transferred event file. In Fig.  7, {{as soon as a}} rainfall event is detected, the rainfall event time is transmitted from the AWS to the developed system. Then, the generated event file (stored in a oracle server) is transferred in company with the <b>completion</b> <b>message,</b> which is the computational message to inform the transmission or reception of event file and enable the DB, to operate the safety management system. At the developed system server, an event file is calibrated based on the rainfall criteria, according to the file transfer protocol. The rainfall accumulation datasets, including <b>completion</b> <b>message</b> of event time and file, are stored in system database. The alerted rainfall datasets are compared with rainfall criteria for hazard class (Table  3), and the severity level can be determined in 30  s after the occurrence of the rainfall event.|$|E
50|$|SATA NCQ is {{a modern}} {{standard}} which drastically reduces the number of required CPU interrupts compared to ATA TCQ. Like ATA TCQ, it allows up to 32 outstanding commands per device, but was designed {{to take advantage of}} the ability of SATA host bus adapters that are not emulating parallel ATA behavior to support first party DMA. Instead of interrupting the CPU before the task to force it to program the host bus adapter's DMA engine, the hard drive tells the host bus adapter which command it wants to execute, causing the host bus adapter to program its integrated first-party DMA engine with the parameters that were included in the command that was selected by the hard drive when it was first issued, and then the DMA engine moves the data needed to execute the command. To further reduce the interrupt overhead, the drive can withhold the interrupt with the task completed messages until it gathers many of them to send at once, allowing the operating system to notify many threads simultaneously that their tasks have been completed. If another task completes after such an interrupt is sent, the host bus adapter can concatenate the <b>completion</b> <b>messages</b> together if the first set of <b>completion</b> <b>messages</b> has not been sent to the CPU. This allows the hard disk firmware design to trade off disk performance against CPU utilization by determining when to withhold and when to send <b>completion</b> <b>messages.</b>|$|R
50|$|Message Facilities - The system {{provides}} a comprehensive set of codes and messages describing errors and special conditions that occur {{when using the}} operating system. The system handles messages {{in a uniform manner}} to ensure that they are easy to use. Two system direc- tories maintain message files that contain text describing errors, information, and <b>completion</b> <b>messages</b> generated by the system. The directories are expandable to include message files written by users.|$|R
40|$|Abstract — Post {{completion}} {{error is}} the kind of human error which occurs when the main task is completed and there is a known (but not vital) final step which has to be done and that is forgotten or not performed. This paper aims to add to the research being done by conducting experiments imitating the real life door to door sales scenario, where salesmen use electronic devices to sign customers up to contract. The study aimed to examine the effect of a static cue button and a warning message and to find an answer to the hypothesis, “A Post <b>Completion</b> Warning <b>message</b> is more effective than a static cue button to reduce the Post Completion Errors. ” The experiment has three versions, version 1 being conducted using the simple prototype without a cue and warning, version 2 being conducted using the prototype having a cue, and version 3 being conducted using the prototype having a post <b>completion</b> warning <b>message.</b> The results from the experiment showed that a static cue button is useful to reduce human post completion errors; however, a post <b>completion</b> warning <b>message</b> is much more effective than static cue button in reducing post completion errors...|$|R
30|$|The work {{proposed}} in[21] {{presents a}} schedulability test {{for a time}} division multiple access (TDMA) scheduling with slot skipping (TDMA/SS). The authors assume that all message streams in the system are known, and that each node schedules messages in its output queue according to the deadline monotonic algorithm, in contrast to some other policy approaches that use FIFO queues of messages in each node. According to the proposal, when a node finishes its transmissions, it sends a <b>completion</b> <b>message</b> transmission notifying {{that there are no}} more messages to transmit, so a node that has real-time messages to be transmitted can immediately start their own transmissions. In a traditional TDMA protocol, a node that does not wish to transmit messages simply remains silent during the length of the reserved time slot.|$|E
5000|$|Management tasks: {{managing}} error <b>messages,</b> <b>completion</b> of work work {{steps and}} {{to convey to}} the next step, including the change of partners ...|$|R
50|$|Many {{collective}} {{routines and}} directive-based parallel languages impose implicit barriers. For example, a parallel do loop in Fortran with OpenMP {{will not be}} allowed to continue on any thread until the last iteration is completed. This is in case the program relies on the result of the loop immediately after its <b>completion.</b> In <b>message</b> passing, any global communication (such as reduction or scatter) may imply a barrier.|$|R
40|$|This paper {{investigates the}} impact of point-topoint latency on applications' {{performance}} on clusters of workstations interconnected with high-speed networks. At present, clusters are often evaluated through comparison of point-to-point latency and bandwidth obtained by ping-pong tests. This paper shows that this approach to performance evaluation of clusters has limited validity and that latency has minimal impact on {{a large group of}} applications that use medium- to coarse-grain data-parallel algorithms. Message-passing systems with low latency often use polling for <b>message</b> <b>completion,</b> which leads to tight synchronization between the communicating processes and high CPU overhead. Systems with asynchronous <b>message</b> <b>completion</b> have higher point-to-point latency for short messages but offer a number of highperformance mechanisms such as overlapping of computation and communication, independent message progress, efficient collective algorithms, asynchronous processing of communicating nodes [...] ...|$|R
5000|$|Having defined/seen some notations, we {{will see}} want the theorem says,When we are given a {{schedule}} , the corresponding message trellis as a finite directed graph with Vertex set of [...] , in which a typical element is denoted by [...] for [...] , Then after <b>completion</b> of the <b>message</b> passing, state at vertex [...] will be the [...] objective defined in ...|$|R
50|$|Input/output {{completion}} port (IOCP) is an API {{for performing}} multiple simultaneous asynchronous input/output operations in Windows NT versions 3.5 and later, AIX and on Solaris 10 and later. An input/output completion port object is created and {{associated with a}} number of sockets or file handles. When I/O services are requested on the object, completion is indicated by a message queued to the I/O completion port. A process requesting I/O services is not notified of completion of the I/O services, but instead checks the I/O <b>completion</b> port's <b>message</b> queue to determine the status of its I/O requests. The I/O completion port manages multiple threads and their concurrency.|$|R
5000|$|Rcirc is [...] "compact, {{written in}} a single file of less than 2,500 lines of code". It allocates {{separate}} buffers for each server and channel, and includes tab <b>completion</b> and inbound <b>message</b> timestamps. It allows opening new buffers for composing messages, useful for multiline work. All IRC commands are bound to control-c command shortcuts. Sound alerts are available for private messages and for when a user's nick is mentioned in channel.|$|R
40|$|An {{example of}} {{verification}} of authentication protocols with CafeOBJ algebraic specification language is shown. The NSLPK authentication protocol {{is based on}} the public-key cryptosystem. Two principals can use the protocol to achieve the mutual authentication between them. The successful <b>completion</b> of the <b>message</b> exchanges specified by the protocol lets two principals share some information. The secrecy property is as follows: even when there exist malicious principals, the information is never leaked to any third parties. Described is the verification with proof score that the protocol satisfies the (nonce) secrecy property...|$|R
30|$|After the {{back-off}} timer expires, an AP scans for a “free-to-transmit” message. On {{the reception}} of this message, the AP starts to transmit the data packets to its clients. At {{the end of every}} transmission round, the channel has the “free-to-transmit” message of an AP, which is transmitted last in this round. This message will be heard by the first AP of the next transmission round. All the APs embed End-Time (transmission <b>completion)</b> in “free-to-transmit” <b>message.</b> The End-Time received by the first AP is used as the finishing time of the previous beacon interval. End-Time is also used in unused portion allocation.|$|R
40|$|What {{should a}} {{researcher}} do when statistical analysis software terminates before <b>completion</b> with a <b>message</b> that the Hessian is not invertible? The standard textbook {{advice is to}} respecify the model, but this {{is another way of}} saying that the researcher should change the question being asked. Obviously, however, computer programs should not {{be in the business of}} deciding what questions are worthy of study. Although noninvertable Hessians are sometimes signals of poorly posed questions, nonsensical models, or inappropriate estimators, they also frequently occur when information about the quantities of interest exists in the data through the likelihood function. The authors explain the problem in some detail and lay out two preliminary proposals for ways of dealing with noninvertable Hessians without changing the question asked...|$|R
40|$|Abstract-We {{conducted}} a study of user distraction using a simple driving game controlled by a steering wheel. Steering performance was compared in three conditions, two using distracter tasks and one without distractions. One distracter simulated answering calls on a mobile phone. The second simulated sending short text messages using a phone keypad. Both distracters were performed during the primary steering task, necessitating division of attention between two unrelated tasks. Results indicate that the text messaging distracter significantly degraded steering performance. On average, distance {{from the center of}} the “driving lane ” increased by about 33 %, compared to the no distracter condition. The call answering distracter resulted in about a 6 % increase. Deviation during text <b>messaging</b> improved upon <b>completion</b> of a <b>message...</b>|$|R
40|$|The {{question}} “how predictable is English?” {{has long}} fascinated researchers. While prior work {{has focused on}} formal English typically used in news articles, we turn to texts generated by users in online settings that are more informal in nature. We are motivated by a novel application scenario: given the difficulty of typing on mobile devices, can we help reduce typing effort with <b>message</b> <b>completion,</b> especially in conversational settings? We propose a method for automatic response completion. Our approach models both the language used in responses and the specific context provided by the original message. Our experimental results on a large-scale dataset show that both components help reduce typing effort. We also perform an information-theoretic study in this setting and examine the entropy of user-generated content, especially in conversational scenarios, to better understand predictability of user generated English. ...|$|R
40|$|A C 4 ISR {{architecture}} {{for future}} forces {{is a major}} concern to the Army. This report describes progress of an on-going project to develop a framework for assessing individual communication technologies and concepts by accounting for technological and operational detail. Assessments of communication performance (e. g., message delay and <b>message</b> <b>completion</b> rate) factor terrain, mobility, and other scenario specific details via high-resolution simulations. For such measurements, excessive run-times can be a problem. This is usually the case for high-resolution simulation of communication networks. However, in this paper, it is shown that high-resolution communication network simulation runs (using Qualnet©), although time consuming, can be used to capture the dynamics of communication performance in closed form expressions or meta-models. The meta-models can then be embedded into force-on-force simulation (JANUS) to get perhaps the most important performance measure, e. g., warfighter effectiveness. This forms a framework that supports detailed, scenario specific examination of the impact of C 4 ISR on warfighter effectiveness. 1...|$|R
40|$|As {{perhaps the}} highest profile group of {{management}} speakers in the world, so-called management gurus use their appearances {{on the international}} management lecture circuit todisseminate their ideas and to build their personal reputations with audiences of managers. This article examines the use of humour by management gurus during these public performances. Focusing on video recordings of lectures conducted by four leading management gurus (Tom Peters, Rosabeth Moss Kanter, Peter Senge and Gary Hamel), the article explicates the verbal and nonverbal practices that the gurus use when they evoke audience laughter. These practices allow the gurus to project clear <b>message</b> <b>completion</b> points, to signal their humourous intent, to ‘invite’ audience laughter, and to manipulate the relationship between their use of humour and their core ideas and visions. The article concludes by suggesting that the ability of management gurus to use these practices effectively is significant because audience laughter {{can play an important}} role with respect to the expression of group cohesion and solidarity during their lectures...|$|R
40|$|Two {{experiments}} explored {{speed of}} communication when transmitting and receiving chat messages in different formats {{for a military}} command and control (C 2) task. In Experiment 1, participants were prompted with a tactical display and responded by composing chat messages with an appropriate command. Speed, accuracy, and subjective workload were compared for three chat messaging formats: 1) full-text; 2) abbreviated text; or 3) click-chat. Writing full-text messages took longer, resulted in more typing errors and higher workload ratings than abbreviated text or click-chat. Although {{there was no difference}} in response times between abbreviated and click-chat messaging, the abbreviated chat yielded higher error rates. A translation delay was evidenced by slower initial response times for abbreviations and click-chat compared to full-text. However, faster <b>message</b> <b>completion,</b> once initiated, compensated for this delay resulting in faster communication overall. Experiment 2 demonstrated that {{there was no difference in}} the speed, accuracy, or workload for completing commanded actions when receiving abbreviated compared to full-text chat message...|$|R
40|$|We {{approach}} {{the problem of}} handling storage congestion at store-and-forward (DTN) nodes by migrating stored data to neighbors. The proposed solution includes a set of algorithms to determine which messages should be migrated to which neighbors and when. It also includes an extension to the DTN custody transfer mechanism enabling a “pull ” form of custody transfer where a custodian may request custody of a message from another custodian. This approach allows us to decouple the problem of storage allocation among a relatively proximal group of storage nodes from the overall problem of path selection across a larger network. Doing so admits the possibility of localized routing loops for some messages which {{has been shown to}} be desirable for avoiding some head-of-line blocking problems. We select eligible storage neighbors using a function of available storage and incident link characteristics. Using simulation, we evaluate this approach and show how migrating custodian storage in this fashion can improve <b>message</b> <b>completion</b> rate by as much as 48 % for some storage-constrained DTN networks. Categories and Subject Descriptors...|$|R
40|$|Traditional {{automatic}} target recognition (ATR) {{is performed}} by unmanned aerial vehicles (UAVs) depending on a central control tower {{to provide the}} high level organization of the system. The UAVs fly through a region of interest to identify targets and relay all communication through a central control tower. The centralized approach to ATR has limited fault-tolerance, scalability {{with regards to the}} number of UAVs, and susceptibility to malicious attacks on the central tower [2]. A swarm-driven alternative [1] is extended with a communication control scheme to address fault-tolerance and scalability while utilizing the higher onboard processing power now available for UAVs [2]. The {{purpose of this paper is}} to compare the organization systems, centrally controlled versus distributed swarm, and extend on swarm research in the area of communication to aid in the comparison. A swarm communication algorithm is proposed and simulated during search and destroy missions in the MultiUAV 2 simulation framework. Highlighted algorithm properties will be time to <b>message</b> <b>completion,</b> bandwidth costs of each configuration, scalability, and quality of service...|$|R
40|$|The type of {{interconnection}} network employed has {{a profound}} effect on the performance of a multicomputer and multiprocessor design. Adequate models are needed to aid in the design and development of interconnection networks. A novel modeling approach using statistical and optimization techniques is described. This method represents an attempt to compare diverse interconnection network designs in a way that allows not only the best of existing designs to be identified but to suggest other, perhaps hybrid, networks that may offer better performance. Stepwise linear regression is used to develop a polynomial surface representation of performance in a (k+ 1) space with a total of k quantitative and qualitative independent variables describing graph-theoretic characteristics such as size, average degree, diameter, radius, girth, node-connectivity, edge-connectivity, minimum dominating set size, and maximum number of prime node and edge cutsets. Dependent variables used to measure performance are average message delay and the ratio of <b>message</b> <b>completion</b> rate to network connection cost. Response Surface Methodology (RSM) optimizes a response variable from a polynomial function of several independent variables. Steepest ascent path may also be used to approach optimum points...|$|R
40|$|Abstract—A {{synchronous}} network-on-chip using wormhole {{packet switching}} and supporting guaranteed-completion best-effort with low-priority (LP) and high-priority (HP) wormhole packet delivery service {{is presented in}} this paper. Both our proposed LP and HP message services deliver a good quality of service in term of lossless packet <b>completion</b> and in-order <b>message</b> data delivery. However, the LP message service does not guarantee minimal completion bound. The HP packets will absolutely use 100 % bandwidth of their reserved links if the HP packets are injected from the source node with maximum injection. Hence, the service are suitable for small size messages (less than hundred bytes). Otherwise the other HP and LP messages, which require also the links, will experience relatively high latency {{depending on the size}} of the HP message. The LP packets are routed using a minimal adaptive routing, while the HP packets are routed using a non-minimal adaptive routing algorithm. Therefore, an additional 3 -bit field, identifying the packet type, is introduced in their packet headers to classify and to determine the type of service committed to the packet. Our NoC prototypes have been also synthesized using a 180 -nm CMOS standard-cell technology to evaluate the cost of implementing the combination of both services...|$|R
40|$|This paper {{addresses}} {{one critical}} component of C 2 in complex and urban terrain; the use of human performance modeling to explore an effects based approach to coalition planning and execution. Models are an efficient tool for evaluating alternative organizational structures, personnel configurations, and communication networks in a C 2 domain. We used a modeling architecture known as C 3 TRACE (C 3 Techniques for Reliable Assessment of Concept Execution) to evaluate a multinational concept of effects based planning for an urban scenario. The architecture required us to define an organizational structure, identify tasks, task completion times, work assignments, and the flow of communications through the C 2 system. Communications were defined {{by the type of}} information contained in the message, action required for <b>message</b> <b>completion,</b> and contributions of the information to three levels of situation awareness (Endsley, 1995). As we executed the model, communications were degraded by use of an embedded algorithm based on time delays and the original volatility of the message. Messages that contain information on `enemy where', for instance, degrade faster over time than those that identify `enemy who', since the latter is less likely to change than the former. The U. S. Joint Forces Command (USJFCOM) Multinational Experiment 3 (MNE 3) was used to develop and test a new command structure and planning process in a coalition operational headquarters (USJFCOM, 2004) using this C 3 TRACE modeling architecture. In addition to the model execution, data was collected during the experiment and used to extend our understanding of the C 2 challenges in this environmen...|$|R

