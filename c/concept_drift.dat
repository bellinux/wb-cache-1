578|179|Public
25|$|Massive Online Analysis (MOA): a {{real-time}} {{big data}} stream mining with <b>concept</b> <b>drift</b> {{tool in the}} Java programming language.|$|E
50|$|<b>Concept</b> <b>drift</b> {{cannot be}} avoided for complex {{phenomenon}} {{that are not}} governed by fixed laws of nature. All processes that arise from human activity, such as socioeconomic processes, and biological processes are likely to experience <b>concept</b> <b>drift.</b> Therefore periodic retraining, also known as refreshing, of any model is necessary.|$|E
5000|$|IJCNN 2011 Special Session on <b>Concept</b> <b>Drift</b> and Learning Dynamic Environments ...|$|E
40|$|<b>Concept</b> <b>drifting</b> {{is always}} an {{interesting}} problem. For instance, a user is interested {{in a set of}} topics, X, for a period, may switches to a different set of topics, Y, in the next period. In this paper, we focus on two issues of <b>concept</b> <b>drifts,</b> namely, <b>concept</b> <b>drifts</b> detection and model adaptation in a text stream context. We use statistical control to detect <b>concept</b> <b>drifts,</b> and propose a new multi-classifier strategy for model adaptation. We conducted extensive experiments and reported our findings in this paper...|$|R
40|$|<b>Concept</b> <b>drifting</b> is an {{important}} and challenging research issue {{in the field of}} machine learning. This paper mainly addresses the issue of semantic <b>concept</b> <b>drifting</b> in time series such as video streams over a relatively long period of time. An Online-Optimized Incremental Learning framework is proposed as an example learning system for tracking the <b>drifting</b> <b>concepts.</b> Furthermore, a set of measures are defined to track the process of <b>concept</b> <b>drifting</b> in the learning system. These tracking measures are also applied to determine the corresponding parameters used for model updating in order to obtain the optimal up-to-date classifiers. Experiments on the data set of TREC Video Retrieval Evaluation 2004 not only demonstrate the inside <b>concept</b> <b>drifting</b> process of the learning system, but also prove that the proposed learning framework is promising for tackling the issue of <b>concept</b> <b>drifting...</b>|$|R
40|$|Classication {{applications}} {{where the}} probability density function of classes evolve {{over time are}} referred as <b>concept</b> <b>drifts.</b> Abrupt <b>concept</b> <b>drifts</b> refer to situations where the data-generating process suddenly changes from a stationary state to another one, e. g., due to a permanent or a transient fault. Differently, gradual <b>concept</b> <b>drifts</b> refer to cases where the process continuously evolves over time, a situation typically caused by aging effects or thermal drifts...|$|R
5000|$|MOA (Massive Online Analysis): free {{open-source}} software specific for {{mining data}} streams with <b>concept</b> <b>drift.</b> It contains a prequential evaluation method, the EDDM <b>concept</b> <b>drift</b> methods, a reader of ARFF real datasets, and artificial stream generators as SEA concepts, STAGGER, rotating hyperplane, random tree, and random radius based functions. MOA supports bi-directional interaction with Weka (machine learning).|$|E
5000|$|<b>Concept</b> <b>Drift</b> and Learning in Nonstationary Environments at IEEE World Congress on Computational Intelligence ...|$|E
5000|$|HaCDAIS 2011 The 2nd International Workshop on Handling <b>Concept</b> <b>Drift</b> in Adaptive Information Systems ...|$|E
40|$|Although a vast {{majority}} of inductive learning algorithms has been developed for handling of the <b>concept</b> <b>drifting</b> data streams, especially the ones in virtue of ensemble classification models, few of them could adapt to the detection on the different types of <b>concept</b> <b>drifts</b> from noisy streaming data in a light demand on overheads of time and space. Motivated by this, a new classification algorithm for <b>Concept</b> <b>drifting</b> Detection based on an ensembling model of Random Decision Trees (called CDRDT) is proposed in this paper. Extensive studies with synthetic and real streaming data demonstrate that in comparison to several representative classification algorithms for <b>concept</b> <b>drifting</b> data streams, CDRDT not only could effectively and efficiently detect the potential concept changes in the noisy data streams, but also performs much better on the abilities of runtime and space with an improvement in predictive accuracy. Thus, our proposed algorithm provides a significant reference to the classification for <b>concept</b> <b>drifting</b> data streams with noise in a light weight way...|$|R
40|$|<b>Concept</b> <b>drifts</b> usually {{originate}} from many causes instead of only one, which result in {{two types of}} <b>concept</b> drifts: abrupt <b>drifts</b> and gradual drifts. From {{the point of view}} of speed, <b>concept</b> <b>drifts</b> pose strong challenges for data stream mining. In this paper, we propose a selective detector ensemble to detect both abrupt and gradual drifts. We first present our detector ensemble construction method, and then introduce how to use this ensemble to detect <b>concept</b> <b>drifts</b> with the proposed early-find-early-report rule. To evaluate the performance of our method, we compare it with four drift detection methods on eight publicly available data sets containing various <b>concept</b> <b>drifts.</b> The experimental results show that compared with those benchmarks, our ensemble method can effectively improve the recall and false negative rate without significantly increasing the false positive rate, and has stronger generalization ability than those single-change-indicator-based methods...|$|R
40|$|The {{treatment}} of large data streams {{in the presence}} of <b>concept</b> <b>drifts</b> {{is one of the main}} challenges in the field of data mining, particularly when the algorithms have to deal with concepts that disappear and then reappear. This paper presents a new algorithm, called Fast Adapting Ensemble (FAE), which adapts very quickly to both abrupt and gradual <b>concept</b> <b>drifts,</b> and has been specifically designed to deal with recurring concepts. FAE processes the learning examples in blocks of the same size, but it does not have to wait for the batch to be complete in order to adapt its base classification mechanism. FAE incorporates a drift detector to improve the handling of abrupt <b>concept</b> <b>drifts</b> and stores a set of inactive classifiers that represent old concepts, which are activated very quickly when these concepts reappear. We compare our new algorithm with various well-known learning algorithms, taking into account, common benchmark datasets. The experiments show promising results from the proposed algorithm (regarding accuracy and runtime), handling different types of <b>concept</b> <b>drifts...</b>|$|R
5000|$|HaCDAIS: Handling <b>Concept</b> <b>Drift</b> in Adaptive Information Systems (2008-2012), Eindhoven University of Technology (the Netherlands) ...|$|E
5000|$|Text mining, a {{collection}} of text mining datasets with <b>concept</b> <b>drift,</b> maintained by I.Katakis. Access ...|$|E
5000|$|HaCDAIS 2010 International Workshop on Handling <b>Concept</b> <b>Drift</b> in Adaptive Information Systems: Importance, Challenges and Solutions ...|$|E
40|$|This paper mainly {{addresses}} {{the issue of}} semantic <b>concept</b> <b>drifting</b> in temporal sequences, such as video streams, {{over an extended period}} of time. Gaussian Mixture Model (GMM) is applied to model the distribution of under-investigating data, which are supposed to arrive or be generated in batches over time. The up-to-date classifier, which tracks the <b>drifting</b> <b>concept,</b> is directly built on the outdated models trained from the old labeled data. A couple of properties, such as Maximum Lifecycle, Dominant Component, Component Drifting Speed, System Stability, and Updating Speed, are defined to track <b>concept</b> <b>drifting</b> in the learning system, which is applied to determine corresponding parameters for model updating in order to obtain optimal up-to-date classifier. Experiments on simulated data and real-world data demonstrate that our proposed GMM-based batch learning framework is effective and efficient for dealing with <b>concept</b> <b>drifting...</b>|$|R
30|$|SQSI {{performs}} well on datasets Bike, Insects, NOAA, Arabic-Digit, and QG. For these datasets, {{there is}} a clear separation between the topline and baseline quantifiers and SQSI tends to perform closer to the topline. For Mosquitoes dataset, the performances of the baseline and topline are quite close to each other. This is an indication that no <b>concept</b> <b>drifts</b> are present or the occurrence of a significant amount of data chunks with a severely unbalanced class distribution. The unbalanced class distribution in the data chunks for each dataset will be discussed next. For the NOAA dataset, the KS testcorrectly identifies the lack of <b>concept</b> <b>drifts.</b> In total, KS flagged zero <b>concept</b> <b>drifts</b> with the RF classifier during the entire stream. Therefore, SQSI and SQSI-IS variants perform constantly across the entire stream.|$|R
40|$|Abstract. Although most {{business}} processes change over time, contem-porary process mining techniques tend to analyze these processes {{as if they}} are in steady-state. Processes may change suddenly or gradually. The drift may be periodic (e. g. due to seasonal influences) or one-of-a-kind (e. g., the effects of new legislation). For process management it is crucial to discover and understand such <b>concept</b> <b>drifts</b> in processes. In this paper, we present a case study of analyzing <b>concept</b> <b>drifts</b> in three different processes within a large Dutch municipality. ...|$|R
5000|$|Many {{papers have}} been {{published}} describing algorithms for <b>concept</b> <b>drift</b> detection. Only reviews, surveys and overviews are here: ...|$|E
5000|$|VFDTc (2006) extends VFDT for {{continuous}} data, <b>concept</b> <b>drift,</b> {{and application of}} Naive Bayes classifiers in the leaves.|$|E
5000|$|Massive Online Analysis (MOA): a {{real-time}} {{big data}} stream mining with <b>concept</b> <b>drift</b> {{tool in the}} Java programming language.|$|E
40|$|Tracking {{recurring}} <b>concept</b> <b>drifts</b> in data streams is {{a significant}} and challenging issue for machine learning and data mining that frequently appears in real world stream classifi-cation problems. However, it has received little attention from the research community. Motivated by this, we propose a Semi-supervised classification algorithm for data streams with REcurring <b>concept</b> <b>Drifts</b> and Limited LAbeled data, called REDLLA, in which, a decision tree is adopted as the classification model. When growing a tree, a clustering algorithm based on k-Means is installed to produce concept clusters and label unlabeled data at leaves. In view of deviations between history concept clusters and new ones, po-tential <b>concept</b> <b>drifts</b> are distinguished and recurring concepts are maintained. Extensive studies on both synthetic and real-world data confirm the advantages of our REDLLA al-gorithm over two state-of-the-art online classification algorithms and several known online semi-supervised algorithms, even in the case with more than 90 % unlabeled data...|$|R
40|$|Combining several {{classifiers}} on sequential {{chunks of}} training instances {{is a popular}} strategy for data stream mining with <b>concept</b> <b>drifts.</b> This paper introduces human recalling and forgetting mechanisms into a data stream mining system and proposes a Memorizing Based Data Stream Mining (MDSM) model. In this model, each component classifier {{is regarded as a}} piece of knowledge that a human obtains through learning some materials and has a memory retention value reflecting its usefulness in the history. The classifiers with high memory retention values are reserved in a “knowledge repository. ” When a new data chunk comes, most useful classifiers will be selected (recalled) from the repository and compose the current target ensemble. Based on MDSM, we put forward a new algorithm, MAE (Memorizing Based Adaptive Ensemble), which uses Ebbinghaus forgetting curve as the forgetting mechanism and adopts ensemble pruning as the recalling mechanism. Compared with four popular data stream mining approaches on the datasets with different <b>concept</b> <b>drifts,</b> the experimental results show that MAE achieves high and stable predicting accuracy, especially for the applications with recurring or complex <b>concept</b> <b>drifts.</b> The results also prove the effectiveness of MDSM model...|$|R
30|$|This section {{presents}} two reference {{approaches to}} quantify data streams. Although these approaches make assumptions that we consider infeasible in practice, {{such as the}} absence of <b>concept</b> <b>drifts</b> and the instantaneous availability of all labels along the stream, we use them as reference methods.|$|R
50|$|These {{algorithms}} {{are designed}} for large scale machine learning, dealing with <b>concept</b> <b>drift,</b> and big data streams in real time.|$|E
5000|$|MOA (Massive Online Analysis): free {{open-source}} software specific for {{mining data}} streams with <b>concept</b> <b>drift.</b> It has several {{machine learning algorithms}} (classification, regression, clustering, outlier detection and recommender systems). Also it contains a prequential evaluation method, the EDDM <b>concept</b> <b>drift</b> methods, a reader of ARFF real datasets, and artificial stream generators as SEA concepts, STAGGER, rotating hyperplane, random tree, and random radius based functions. MOA supports bi-directional interaction with Weka (machine learning).|$|E
50|$|To prevent {{deterioration}} in prediction accuracy because of <b>concept</b> <b>drift,</b> both active and passive solutions can be adopted. Active solutions rely on triggering mechanisms, e.g., change-detection tests (Basseville and Nikiforov 1993; Alippi and Roveri, 2007) to explicitly detect <b>concept</b> <b>drift</b> as {{a change in}} the statistics of the data-generating process. In stationary conditions, any fresh information made available can be integrated to improve the model. Differently, when <b>concept</b> <b>drift</b> is detected, the current model is no more up-to-date and must be substituted with a new one to maintain the prediction accuracy (Gama et al., 2004; Alippi et al., 2011). On the contrary, in passive solutions the model is continuously updated, e.g., by retraining the model on the most recently observed samples (Widmer and Kubat, 1996), or enforcing an ensemble of classifiers (Elwell and Polikar 2011).|$|E
40|$|In {{learning}} to classify data streams, it is impractical and expensive to label {{all of the}} instances. Online active learning over streaming data poses additional challenges for its increasing volumes and <b>concept</b> <b>drifts.</b> We propose a new online paired ensemble active learning framework consisting of a stable classifier and a timely substituted dynamic classifier to react to different types of <b>concept</b> <b>drifts.</b> Classifiers are built in block based way and will learn new instances incrementally online. According to a combination strategy of uncertainty strategy and random strategy, the decision whether to label the incoming instance for the updating of the stable classifier and the dynamic classifier will be made. Experimental evaluation results on real datasets show {{the advantage of the}} proposed work in comparison with other approaches...|$|R
40|$|Abstract. Real world text {{classification}} {{applications are}} {{of special interest}} for the machine learning and data mining community, mainly because they introduce and combine a number of special difficulties. They deal with high dimensional, streaming, unstructured, and, in many occasions, <b>concept</b> <b>drifting</b> data. Another important peculiarity of streaming text, not adequately discussed in the relative literature, {{is the fact that}} the feature space is initially unavailable. In this paper, we discuss this aspect of textual data streams. We underline the necessity for a dynamic feature space and the utility of incremental feature selection in streaming text classification tasks. In addition, we describe a computationally undemanding incremental learning framework that could serve as a baseline in the field. Finally, we introduce a new <b>concept</b> <b>drifting</b> dataset which could assist other researchers in the evaluation of new methodologies. ...|$|R
40|$|Abstract. In {{applications}} such as fraud and intrusion detection, it is {{of great interest to}} measure the evolving trends in the data. We consider the problem of quantifying changes between two datasets with class labels. Traditionally, changes are often measured by first estimating the probability distributions of the given data, and then computing the distance, for instance, the K-L divergence, between the estimated distributions. However, this approach is computationally infeasible for large, high dimensional datasets. The problem becomes more challenging in the streaming data environment, as the high speed makes it difficult for the learning process {{to keep up with the}} <b>concept</b> <b>drifts</b> in the data. To tackle this problem, we propose a method to quantify <b>concept</b> <b>drifts</b> using a universal model that incurs minimal learning cost. In addition, our model also provides the ability of performing classification. ...|$|R
5000|$|CVFDT (2001) {{can adapt}} to <b>concept</b> <b>drift,</b> {{by using a}} sliding window on {{incoming}} data. Old data outside the window is forgotten.|$|E
5000|$|KDD'99 {{competition}} data contains simulated intrusions in {{a military}} network environment. It is often used as a benchmark to evaluate handling <b>concept</b> <b>drift.</b> Access ...|$|E
50|$|Massive Online Analysis (MOA) {{is a free}} {{open-source}} software project specific {{for data}} stream mining with <b>concept</b> <b>drift.</b> It is written in Java and developed at the University of Waikato, New Zealand.|$|E
30|$|These histograms {{pointed out}} that for Mosquitoes and Insects {{datasets}} {{there is a large}} quantity of data chunks with a severely unbalanced class distribution along the stream. Unsurprisingly, algorithms that updated the model more often were more adversely affected. This is more prominent when there is {{only a small number of}} <b>concept</b> <b>drifts</b> (specifically in the feature space).|$|R
40|$|Abstract. Clustering data streams {{has found}} a few {{important}} applications. While many previous studies focus on clustering objects arriving in a data stream, in this paper, we consider the novel problem of on demand clustering <b>concept</b> <b>drifting</b> data streams. In order to characterize <b>concept</b> <b>drifting</b> data streams, we propose an effective method to estimate densities of data streams. One unique feature of our new method is that its granularity of estimation is adaptive to the available computation resource, which is critical for processing data streams of unpredictable input rates. Moreover, we can apply any clustering method to on demand cluster data streams using their density estimations. A performance study on synthetic data sets is reported to verify our design, which clearly shows that our method obtains results comparable to CluStream [3] on clustering single stream, and much better results than COD [8] when clustering multiple streams. ...|$|R
40|$|Although most {{business}} processes change over time, contemporary process mining techniques tend to analyze these processes {{as if they}} are in a steady state. Processes may change suddenly or gradually. The drift may be periodic (e. g., because of seasonal influences) or one-of-a-kind (e. g., the effects of new legislation). For the process management, it is crucial to discover and understand such <b>concept</b> <b>drifts</b> in processes. This paper presents a generic framework and specific techniques to detect when a process changes and to localize the parts of the process that have changed. Different features are proposed to characterize relationships among activities. These features are used to discover differences between successive populations. The approach has been implemented as a plug-in of the ProM process mining framework and has been evaluated using both simulated event data exhibiting controlled <b>concept</b> <b>drifts</b> and real-life event data from a Dutch municipality...|$|R
