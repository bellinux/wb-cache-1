1|2545|Public
40|$|In this paper, a {{new wave}} {{reflector}} called random wave reflector (RWR) is introduced for the control of transverse vibration and wave propagation in an infinite, multi-span, simple-support beam. In order to illustrate the theory, RWR is first tested in a simple configuration of <b>controlling</b> <b>plane</b> wave propagation through layers of gas media. Results demonstrate that RWR has great advantages over other types of noise abatement methods. RWR is then applied to control the vibration of the multi-span beam in which the support locations are given in a random manner. Two types of external excitations, an incident vibration wave and an external point force, are considered separately. Transmission loss, localization factor, mode shape and input power flow are used to investigate the effectiveness of RWR. The results show that no vibrational power flow can be tapped into or propagate through a random system at any frequency. The passbands, which always exist in traditional systems, are eliminated in a random system for which much better performance is obtained over a broad frequency range. Department of Mechanical Engineerin...|$|E
5000|$|The Management Plane is {{responsible}} for managing the <b>Control</b> <b>plane.</b> Its responsibilities include Configuration Management of the <b>Control</b> <b>Plane</b> Resources, Routing Areas, Transport resource in <b>Control</b> <b>Plane</b> and Policy. It also provides Fault Management, Performance Management, Accounting and Security Management functions. The Management Plane contains the Network Management Entity which is connected to an OCC in <b>Control</b> <b>Plane</b> via the NMI-A ( [...] Network Management Interface for ASON <b>Control</b> <b>Plane)</b> and {{to one of the}} switches via NMI-T ( [...] Network Management Interface for the Transport Network).|$|R
50|$|In essence, {{software-defined}} networking (SDN) is {{an approach to}} build data networking equipment and software that separates and abstracts elements of these systems. It does this by decoupling the <b>control</b> <b>plane</b> and data plane from each other, such that the <b>control</b> <b>plane</b> resides centrally and the forwarding components remain distributed. The <b>control</b> <b>plane</b> interacts both northbound and southbound. In the northbound direction the <b>control</b> <b>plane</b> provides a common abstracted view of the network to higher-level applications and programs using APIs. In the southbound direction the <b>control</b> <b>plane</b> programs the forwarding behavior of the data plane, using device level APIs of the physical network equipment distributed around the network.|$|R
40|$|Routing on the Internet {{combines}} data plane {{mechanisms for}} forwarding traffic with <b>control</b> <b>plane</b> protocols for guaranteeing connectivity and optimizing routes (e. g., shortestpaths and load distribution). We propose data-driven connectivity (DDC), a new routing approach that achieves the fundamental connectivity guarantees {{in the data}} plane rather than the <b>control</b> <b>plane,</b> while keeping the more complex requirements of route optimization in the <b>control</b> <b>plane.</b> DDC enables faster recovery from failures and easier implementation of <b>control</b> <b>plane</b> optimization. Categories and Subject Descriptor...|$|R
40|$|The GMPLS/OBS <b>Control</b> <b>Plane</b> is a bold {{research}} topic. Optical Burst Switching (OBS) networks need to {{be capable}} to be rapidly reconfigured {{with the aim of}} achieving an efficient use of bandwidth, low latency and high degree of transparency. The OBS <b>Control</b> <b>Plane</b> is just a packet switched network requiring a high control complexity. The demands are clear but a well-defined <b>control</b> <b>plane</b> is still an open issue. As one of excellent candidate <b>control</b> <b>plane</b> for most of network scenarios, Generalized Multi-Protocol Label Switching (GMPLS) is being taken as a reference to design such OBS <b>Control</b> <b>Plane.</b> In this paper we first describe the proposal for the interoperable GMPLS/OBS <b>Control</b> <b>Plane</b> and then based on such architecture we propose and analyze some GMPLS protocol extensions that must be done to integrate it properly into OBS networks. Postprint (published version...|$|R
40|$|With the {{increasing}} popularity of Software defined network (SDN), designing a scalable SDN <b>control</b> <b>plane</b> becomes a critical problem. An effective approach {{to improving the}} scalability is to design distributed architecture of SDN <b>control</b> <b>plane.</b> However, how to evaluate the scalability of SDN <b>control</b> <b>planes</b> remains unexplored. In this paper, we propose a metric of scalability for SDN <b>control</b> <b>planes,</b> and study three typical SDN <b>control</b> <b>plane</b> structures, including centralized, decentralized and hierarchical architectures. We build performance models for response time, based on which we evaluate the scalability of these three structures. Furthermore, the comparison between different architectures are analyzed by mathematical methods. Numerical evaluations are also conducted to validate the conclusions drawn in this paper...|$|R
50|$|The dynamic {{provisioning}} {{and maintenance of}} lightpaths is managed by the <b>control</b> <b>plane.</b> The <b>control</b> <b>plane</b> is implemented on a separate network and typically employs one network controller for each node in the data plane, {{as shown in the}} figure. The Generalized Multi-Protocol Label Switching (GMPLS) protocol suite, the de facto standard <b>control</b> <b>plane</b> for WSONs proposed by the IETF, is composed of three protocols.|$|R
40|$|Abstract—We {{explore the}} design of a logically {{centralized}} but physically distributed <b>control</b> <b>plane</b> for 4 D architecture. 4 D architecture proposes centralization of network-wide decision making state and logic in a logical <b>control</b> <b>plane</b> to ease the management complexity of data networks. However, the current design implementations of the 4 D <b>control</b> <b>plane</b> are limited to physical centralization. We argue that exploration of physically distributed <b>control</b> <b>plane</b> designs would be beneficial to the scalability and practical deployment of the architecture, and present design guidelines for different routing strategies {{that can be used to}} optimize the deployment of distributed 4 D architecture. I...|$|R
40|$|Grid-GMPLS is a Network <b>Control</b> <b>Plane</b> {{architecture}} that implements {{the concept of}} Grid Network Services. In the PHOSPHORUS framework, GNS is a service that allows the provisioning of network and Grid resources in a single-step {{through a set of}} seamlessly integrated procedures. By providing a unified network/Grid infrastructure the <b>control</b> <b>plane</b> can flexibly adapt to the demands of applications having intensive requirements on both computational resources and network resources. This article introduces the concept of the Grid-GMPLS <b>control</b> <b>plane</b> architecture with particular focus on new services, deployment models, and interoperability issues of Grid-GMPLS and GMPLS <b>control</b> <b>planes...</b>|$|R
40|$|Design of the Grid-GMPLS <b>Control</b> <b>Plane</b> {{to support}} the Phosphorus Grid AAI This {{document}} describes {{the integration of the}} GAAA-TK library released by the WP 4 in the G 2 MPLS <b>control</b> <b>plane</b> released by the WP 2, showing the GAAA-NRP token-based model adopted by the <b>control</b> <b>plane</b> for multi-domain authorization and the associated signalling used to carry the security context information along the end-to-end path. This documents describes also the functionalities and the implementation of the AuthZ gateway, the module that enables the interaction between the G 2 MPLS <b>control</b> <b>plane</b> and the GAAA-NRP infrastructure...|$|R
40|$|This paper {{concentrates}} on the resilience of the Generalized Multi-Protocol Label Switching (GMPLS) enabled <b>control</b> <b>plane.</b> To this end, the problem of <b>control</b> <b>plane</b> resilience in GMPLS-controlled networks is firstly stated and previous work on the topic reviewed. Next, analytical formulae to quantify the resilience of generic meshed <b>control</b> <b>plane</b> topologies are derived. The resulting model is validated by simulation results on several reference network scenarios. Postprint (published version...|$|R
40|$|This thesis {{investigates the}} design of {{hierarchical}} software-defined networks with improved scalability and service integration. Software Defined Networking (SDN) aims to bring flexi-bility and intelligence into networks by moving the network stack into logically centralized, programmable <b>control</b> <b>planes.</b> While distribution schemes and virtualization have addressed <b>control</b> <b>plane</b> scalability and network stack coexistence, they do so separately as unrelated subjects, and no unified solution exists. This work addresses {{the intersection of the}} two aspects through a little-explored <b>control</b> <b>plane</b> distribution method in which controllers are organized into a hierarchy based on service characteristics. Specifically, this thesis addresses 1) the evolution of SDN <b>control</b> <b>plane</b> architectures, focusing on distributed SDNs based on the OpenFlow SDN control protocol, and 2) the design, implementation, and evaluation of an architecture for a hierarchical OpenFlow <b>control</b> <b>plane.</b> A layered model for <b>control</b> <b>plane</b> architecture is presented as a reference for the design. The widely-adopted Floodlight SDN framework is used to implement a prototype. The prototype is implemented as a series of modules that extend the base platform to use an i...|$|R
30|$|To {{solve the}} {{challenge}} of consistency, two different models can be adopted to implement the SDRAN architecture: “evolutionary” and “clean slate.” The evolutionary model allows for gradually deployment based in existing networks: legacy <b>control</b> <b>plane</b> entities from operators can connect to the core network without modifying the existing interfaces. SDRAN controller implements backward-compatible interfaces to support the interworking with legacy network entities. There are two modes to couple the legacy architecture and future evolutional architecture: loose couple (fully decouple the legacy <b>control</b> <b>plane</b> entities and evolved <b>control</b> <b>plane</b> entities) and tight couple (reuse the legacy <b>control</b> <b>plane</b> entities with evolved structure as much as possible).|$|R
40|$|When {{networks}} were first developed, the <b>control</b> <b>plane</b> merely {{needed to provide}} end-to-end connectivity, {{which is something that}} existing distributed routing protocols do reasonably well. However, current networks are expected to provide far more than just simple connectivity — the <b>control</b> <b>plane</b> must meet an increasing set of new demands including traffic engineering, access control, isolation, and virtualization. One could build new <b>control</b> <b>plane</b> mechanisms for each of these new requirements, bu...|$|R
40|$|Adopting {{distributed}} <b>control</b> <b>planes</b> {{is critical}} towards ensuring high availability and fault-tolerance of dependable Software-Defined Networks (SDNs). However, designing and bootstrapping a distributed SDN <b>control</b> <b>plane</b> is a challenging task, especially if {{to be done}} in-band, without a dedicated control network, and without relying on legacy networking protocols. One of the most appealing and powerful notions of fault-tolerance is self-organization and this paper discusses the possibility of selforganizing algorithms for in-band <b>control</b> <b>planes...</b>|$|R
40|$|Abstract — Peer-to-Peer (P 2 P) {{systems have}} {{witnessed}} an explo-sive growth in popularity {{due to their}} desirable characteristics (robustness, scalability, availability). In this paper, we present an approach to bring these characteristics into the <b>control</b> <b>plane</b> of IP networks, which mainly relies on signaling protocols such as SIP to setup multimedia and instant messaging sessions. We present a structured P 2 P <b>control</b> <b>plane</b> based on modifications to the original Chord P 2 P topology, resulting in a hierarchical over-lay of SIP peers that replaces traditional client-server paradigms in <b>control</b> <b>plane</b> signaling protocols. Implementations were used to study {{the performance of the}} proposed structured P 2 P <b>control</b> <b>plane,</b> and its suitability for use in IP networks. I...|$|R
40|$|International audience—The {{fundamental}} {{tasks of}} the <b>control</b> <b>plane</b> in Software Defined Networking (SDN) are to customize forwarding policies {{for the data}} plane and to provide global network view for applications. The logically centralized design of <b>control</b> <b>plane</b> brings the benefit of network programmability and promises to ease network management. However, it also increases efficiency concerns for large-scale networks. In this paper, {{our goal is to}} build a high-performance SDN <b>control</b> <b>plane</b> using multiple controllers. Previous work seeks to improve <b>control</b> <b>plane</b> efficiency by balancing only the load for data plane behaviors among multiple controllers. Deviating from conventional wisdom, we propose the design and implementation of ParaCon, which resorts to parallel computing to speed up the path computation in SDN <b>control</b> <b>plane.</b> We also address the consistency problem and synchronization overhead under the design. To the best of our knowledge, ParaCon is the first attempt that utilizes node parallelism in path computation for SDN <b>control</b> <b>plane.</b> We experimented ParaCon using both Mininet and real-world clusters. Our results show that the path computing time of ParaCon is able to achieve speedup of 10 x over POX baseline implementation in a 300 -node network with 20 controllers...|$|R
40|$|Software defined {{networking}} implements {{the network}} <b>control</b> <b>plane</b> in an external entity, {{rather than in}} each individual device as in conventional networks. This architectural difference implies a different design for control functions necessary for essential network properties, e. g., loop prevention and link redundancy. We explore how such differences redefine the security weaknesses in the SDN <b>control</b> <b>plane</b> and {{provide a framework for}} comparative analysis which focuses on essential network properties required by typical production networks. This enables analysis of how these properties are delivered by the <b>control</b> <b>planes</b> of SDN and conventional networks, and to compare security risks and mitigations. Despite the architectural difference, we find similar, but not identical, exposures in <b>control</b> <b>plane</b> security if both network paradigms provide the same network properties and are analyzed under the same threat model. However, defenses vary; SDN cannot depend on edge based filtering to protect its <b>control</b> <b>plane,</b> while this is arguably the primary defense in conventional networks. Our concrete security analysis suggests that a distributed SDN architecture that supports fault tolerance and consistency checks is important for SDN <b>control</b> <b>plane</b> security. Our analysis methodology may be of independent interest for future security analysis of SDN and conventional networks...|$|R
40|$|The {{fundamental}} {{tasks of}} the <b>control</b> <b>plane</b> in Software Defined Networking (SDN) are to customize forwarding policies {{for the data}} plane and to provide global network view for applications. The logically centralized design of <b>control</b> <b>plane</b> brings the benefit of network programmability and promises to ease network management. However, it also increases efficiency concerns for large-scale networks. In this paper, {{our goal is to}} build a high-performance SDN <b>control</b> <b>plane</b> using multiple controllers. Previous work seeks to improve <b>control</b> <b>plane</b> efficiency by balancing only the load for data plane behaviors among multiple controllers. Deviating from conventional wisdom, we propose the design and implementation of ParaCon, which resorts to parallel computing to speed up the path computation in SDN <b>control</b> <b>plane.</b> We also address the consistency problem and synchronization overhead under the design. To the best of our knowledge, ParaCon is the first attempt that utilizes node parallelism in path computation for SDN <b>control</b> <b>plane.</b> We experimented ParaCon using both Mininet and real-world clusters. Our results show that the path computing time of ParaCon is able to achieve speedup of 10 x over POX baseline implementation in a 300 -node network with 20 controllers...|$|R
40|$|Self-service Cloud Computing (SSC) [5] is a recently-proposed {{model that}} {{empowers}} clients of public cloud platforms in two ways. First, it improves {{the security and}} privacy of client data by preventing cloud operators from snooping on or modifying client VMs. Second, it provides clients the flexibility to deploy services, such as VM introspection-based tools, on their own VMs. SSC achieves these goals by modifying the hypervisor privilege model. This paper focuses on the unique challenges in-volved in building a <b>control</b> <b>plane</b> for an SSC-based cloud platform. The <b>control</b> <b>plane</b> is the layer that fa-cilitates interaction between hosts in the cloud infras-tructure {{as well as between}} the client and the cloud. We describe a number of novel features in SSC’s <b>control</b> <b>plane,</b> such as its ability to allow specification of VM dependencies, flexible deployment of network middle-boxes, and new VM migration protocols. We report on our design and implementation of SSC’s <b>control</b> <b>plane,</b> and present experimental evaluation of services imple-mented atop the <b>control</b> <b>plane.</b> 1...|$|R
5000|$|The {{traffic from}} user {{connected}} to an ASON network contains data for both Transport and <b>Control</b> <b>Plane.</b> The user {{is connected to}} Transport plane via a PI (Physical Interface), while it communicates with the <b>Control</b> <b>plane</b> via a UNI ( [...] User Network Interface).|$|R
40|$|Abstract. This paper {{discusses}} {{a framework}} for a flexible, self-organized <b>control</b> <b>plane</b> for future mobile and ubiquitous networks. The current diversification of <b>control</b> <b>planes</b> requires a manual configuration of network interworking. The problem will increase in the future, with more dynamic topologies and integration of heterogeneous networks in a ubiquitous, reactive environment. In this paper we introduce the concept of network composition, a basic, scalable and dynamic network operation to achieve autonomic <b>control</b> <b>plane</b> interworking between Ambient Networks – our approach for next generation networks. We show the architectural components of a generic <b>control</b> <b>plane</b> and its flexible interfaces. With an example on seamless mobility we illustrate how composition can simplify and improve the interworking of future networks. Keywords: Designing evolvable NGNs, Self-organization for NGN reconfigurability...|$|R
40|$|The {{resource}} reservation protocol (RSVP) {{was originally}} proposed as a signaling protocol {{to be used}} within a QoS architecture for IP networks. However, the modularity and extensibility of the protocol has led to its adoption as a generic signaling protocol {{that may be used}} to deliver <b>control</b> <b>plane</b> information to nodes in an IP network. RSVP with traffic engineering (TE) extensions, RSVP-TE, is used for signaling in multi-protocol label switching (MPLS) networks initially and, more recently, in generalized MPLS (GMPLS) networks. GMPLS typically necessitates a separation of the <b>control</b> <b>plane</b> and the data <b>plane,</b> hence <b>control</b> <b>plane</b> resiliency is a key issue. This paper discusses {{the manner in which the}} standardised enhancements to RSVP-TE may be used to increase the resilience of the GMPLS <b>control</b> <b>plane...</b>|$|R
40|$|Version: 3. 6 Number of pages: 34 This {{deliverable}} {{investigates the}} separation of user and <b>control</b> <b>plane</b> in the architecture proposed in the MiWEBA project. Starting from the analysis of <b>control</b> <b>plane</b> in mobile access networks, it discusses special requirements for the <b>control</b> <b>plane</b> in millimeter-wave scenarios with separation, then, it investigates the logical localization of network control functionalities. It finally examines with more details the functional separation architectures proposed in 3 GPP and the new context management functionalities required by the proposed architecture...|$|R
40|$|In recent years, the Optical Transport Network (OTN) {{systems have}} been {{introduced}} widely, however, wide adoption has been limited due to the immature infrastructural issues. The OTN infrastructure takes the responsibility of data and signal transmission for substratal layer, as well as provides carrying and maintaining services (mostly the IP-based traffic today) through an optical data transport <b>control</b> <b>plane.</b> Thus, this paper focuses on the latest OTN data <b>control</b> <b>plane</b> and therefore gives a comprehensive introduction on the integrated IP Optical peer <b>control</b> <b>plane...</b>|$|R
40|$|The mobile core is {{currently}} served by gateways having a convoluted <b>control</b> <b>plane</b> and data plane. We abstract and modularize the key functions of these gateways, and sepa-rate the <b>control</b> and data <b>plane</b> in nwEPC, an open source {{implementation of the}} mobile access network gateways. We use our custom load balancer for the <b>control</b> <b>plane</b> to demon-strate the elasticity offered by our implementation...|$|R
40|$|Over {{a decade}} of work has gone into {{securing}} the BGP rout-ing <b>control</b> <b>plane.</b> Through all this, {{there has been an}} oft repeated refrain, ”It is acknowledged that rigorous <b>control</b> <b>plane</b> verification does not in any way guarantee that packets follow the <b>control</b> <b>plane.</b> ” We describe what may be the first deployment of data plane enforcement of RPKI-based con-trol plane validation. OpenFlow switches providing an ex-change fabric and controlled by a Quagga BGP route server drop traffic for prefixes which have invalid origins without requiring any RPKI support by connected BGP peers. 1...|$|R
40|$|Abstract—Grid-GMPLS (G 2 MPLS) is {{conceived}} as a powerful Network <b>Control</b> <b>Plane</b> solution that enhances the standard ASON/GMPLS architecture providing single-step resource reservation, co-allocation and maintenance of both network and Grid resources. This paper identifies and discusses the main issues and considerations that arise by Network Research and Educational Networks and network operators {{in order to facilitate}} the dissemination of G 2 MPLS <b>Control</b> <b>Plane.</b> Interoperability issues and backwards compatibility with existing Network <b>Control</b> <b>Planes</b> centre the scope of this study, which intends to demonstrate the feasibility of adopting the proposed architectures...|$|R
40|$|GMPLS is {{typically}} {{viewed as an}} attractive <b>control</b> <b>plane</b> for optical networks. Motivated {{by a desire to}} investigate the impact of <b>control</b> <b>plane</b> faults on the data plane, the impact of losing messages from the key GMPLS protocols, OSPF-TE and RSVP-TE, is studied in this paper. A number of configurations of both protocols are compared in a range of scenarios, with the impact of control message loss assessed by evaluating the efficacy of the <b>control</b> <b>plane</b> in establishing and maintaining data plane connections and the overhead incurred in doing so...|$|R
40|$|Computer {{networks}} lack {{a general}} control paradigm, as traditional networks {{do not provide}} any networkwide management abstractions. As a result, each new function (such as routing) must provide its own state distribution, element discovery, and failure recovery mechanisms. We believe this lack of a common control platform has significantly hindered the development of flexible, reliable and feature-rich network <b>control</b> <b>planes.</b> To address this, we present Onix, a platform on top of which a network <b>control</b> <b>plane</b> can be implemented as a distributed system. <b>Control</b> <b>planes</b> written within Onix operate on a global view of the network, and use basic state distribution primitives provided by the platform. Thus Onix provides a general API for <b>control</b> <b>plane</b> implementations, while allowing them {{to make their own}} trade-offs among consistency, durability, and scalability. ...|$|R
40|$|Emerging optical {{networks}} {{will provide}} very high bandwidth connections to users. However, improving provisioning times and restoration capabilities after a network failure are important issues in evolving the optical networks. The application of IP-based protocols to the optical network <b>control</b> <b>plane</b> {{has opened up}} new opportunities and challenges for network designers. Although much {{work has been done}} on standardization of the relevant protocols, the reliability of optical networks and their <b>control</b> <b>plane</b> needs further investigation. Based on our experience prototyping an IP based <b>control</b> <b>plane,</b> this paper discusses some general requirements and proposed solutions for reliable optical network design from a service and operational perspective. Our experiments suggest that a reliable IP based <b>control</b> <b>plane</b> for fast provisioning and restoration in optical network is feasible with careful design...|$|R
40|$|Theoperation of multidomain and multivendorEONs can be {{achieved}} by interoperable sliceable bandwidth variable transponders (S-BVTs), a GMPLS/BGP-LS-based <b>control</b> <b>plane,</b> and a planning tool. The <b>control</b> <b>plane</b> is extended to include the control of S-BVTs and elastic cross connects, which combine a large port-count fiber-switch (optical backplane) and bandwidthvariable wavelength-selective switches, enabling the end-to-end provisioning and recovery of network services. A multipartner testbed is built to demonstrate and validate the proposed end-toend architecture. Interoperability among S-BVTs is experimentally tested between different implementations. In this case, transponders are configured using the proposed <b>control</b> <b>plane.</b> The achieved performance with hard-decision and soft-decision FECs using only the information distributed by the <b>control</b> <b>plane</b> is measured against the performance of the single-vendor implementation, where proprietary information is used, demonstrating error-free transmission up to 300 km...|$|R
40|$|Today, the Internet {{depends on}} the {{interactions}} of dozens of <b>control</b> <b>planes</b> protocols (such as routing and signaling protocols) {{in order to provide}} reachability to hundreds of millions of hosts. Yet, despite their critical importance, <b>control</b> <b>plane</b> protocols have been developed organically without any reference architecture to structure their organization and interactions. As a consequence, <b>control</b> <b>plane</b> protocols end up implementing the same basic services (e. g., failure detection, neighbor discovery) in different ways, thus increasing the overall complexity and severely impacting manageability. Moreover, this lack of organization is also the root cause of many networking problems such as forwarding loops or traffic loss. By analyzing several existing protocols, we identified a set of ground principles that every <b>control</b> <b>plane</b> protocol should respect and designed a first modular architecture around them. We describe seven reusable modules and report our experience with a prototype implementation. We believe that protocol designers using such architecture will be able to develop new <b>control</b> <b>plane</b> protocols efficiently reusing the existing modules in novel ways. 1...|$|R
40|$|Energy {{efficiency}} {{is one of}} the key factors impacting the green behavior and operational expenses of telecommunication core network operations. This thesis study is aimed for finding out possible technique to reduce energy consumption in telecommunication infrastructure nodes. The study concentrates on traffic management operation (e. g. media stream control, ATM adaptation) within network processors [LeJ 03], categorized as <b>control</b> <b>plane.</b> The <b>control</b> <b>plane</b> of the telecommunication infrastructure node is a custom built high performance cluster which consists of multiple GPPs (General Purpose Processor) interconnected by high-speed and low-latency network. Due to application configurations in particular GPP unit and redundancy issues, energy usage is not optimal. In this thesis, our approach is to gain elastic capacity within the <b>control</b> <b>plane</b> cluster to reduce power consumption. This scales down and wakes up certain GPP units depending on traffic load situations. For elasticity, our study moves toward the virtual machine (VM) migration technique in the <b>control</b> <b>plane</b> cluster through system virtualization. The traffic load situation triggers VM migration on demand. Virtual machine live migration brings the benefit of enhanced performance and resiliency of the <b>control</b> <b>plane</b> cluster. We compare the state-of-the-art power aware computing resource scheduling in cluster-based nodes with VM migration technique. Our research does not propose any change in data plane architecture as we are mainly concentrating on the <b>control</b> <b>plane.</b> This study shows, VM migration can be an efficient approach to significantly reduce energy consumption in <b>control</b> <b>plane</b> of cluster-based telecommunication infrastructure nodes without interrupting performance/throughput, while guaranteeing full connectivity and maximum link utilization...|$|R
40|$|Security on the Internet {{today is}} treated mostly as a data plane problem. IDS’s, firewalls, and spam filters all {{operate on the}} simple {{principle}} of detecting malicious data plane behavior and erecting data plane filters. In this paper we explore how breaking down the barrier between the <b>control</b> and data <b>plane</b> can significantly enhance {{our understanding of how}} to detect and filter Internet threats like worms and botnets. Our investigation is guided by two specific goals: using information and anomalies detected on the data <b>plane</b> to inform <b>control</b> <b>plane</b> decision support and using anomalies detected on the <b>control</b> <b>plane</b> to inform data plane filtering. We begin by analyzing the source of persistent worms and other persistent malicious and misconfigured data plane traffic to understand the scope of this behavior on the <b>control</b> <b>plane.</b> We then analyze how anomalies on the <b>control</b> <b>plane</b> associated with poorly managed networks correlate with the sources of malicious and misconfigured traffic detected on the data plane. Our results show that malicious and misconfigured data plane behavior is widely spread across the <b>control</b> <b>plane</b> suggesting that constructing only a few <b>control</b> <b>plane</b> filters to block the most infected organizations is ineffective. We demonstrate that networks with data plane anomalies tend to exhibit more routing misconfigurations. Finally, we discuss how these correlations could be used to reject or filter routes and help stop recurring threats like persistent worms. 1...|$|R
5000|$|The <b>control</b> <b>plane</b> carries <b>control</b> {{information}} (also {{known as}} signaling).|$|R
