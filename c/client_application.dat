977|1657|Public
25|$|On December 4, 2012, Plex {{announced}} a <b>client</b> <b>application</b> for Windows 8 {{using the new}} Metro interface.|$|E
25|$|Alternatively, {{the local}} machine may run a small program that {{connects to the}} remote machine and starts the <b>client</b> <b>application.</b>|$|E
25|$|The remote X <b>client</b> <b>application</b> {{will then}} make a {{connection}} to the user's local X server, providing display and input to the user.|$|E
5000|$|... #Subtitle level 3: Centrally hosted thick <b>client</b> <b>applications</b> ...|$|R
40|$|This paper {{examines}} the usability of the hypertext navigation facilities provided by World Wide Web <b>client</b> <b>applications.</b> A notation is defined {{to represent the}} user's navigational acts and the resultant system states. The notation is used to report potential, or `theoretical,' problems in the models of navigation supported by three web <b>client</b> <b>applications.</b> A usability study confirms that these problems emerge in actual use, and demonstrates that incorrect user models of the clients' facilities are common. A usability analysis identifies inadequacies in the clients' interfaces. Motivated by the analysis of usability problems, we propose extensions {{to the design of}} WWW <b>client</b> <b>applications.</b> These proposals are demonstrated by our system WebNetwhich uses dynamic graphical overview diagrams to extend the navigational facilities of conventional World Wide Web <b>client</b> <b>applications.</b> Related work on graphical overview diagrams for web navigation is reviewed. 1 Introduction The small [...] ...|$|R
5000|$|Web View Service (WVS): This type {{of service}} encapsulates the 3D {{rendering}} process for 3D city models at the server side. The server generates views of the 3D scene or intermediate, image-based representations (e.g., virtual panoramas or G-buffer cube maps), which are streamed and uploaded to requesting <b>client</b> <b>applications.</b> The <b>client</b> <b>applications</b> are responsible for re-construction the 3D scene based on the intermediate representations. <b>Client</b> <b>applications</b> {{do not have to}} process 3D graphics data, but to provide management for loading, caching, and displaying the image-based representations of 3D scenes and do not have to process the original (and possibly large) 3D city model.|$|R
25|$|This {{refers to}} the hex-encoded SHA-1 hash of the torrent file info section in question. Note that, {{although}} a particular file is indicated, an availability search for it must still {{be carried out by}} the <b>client</b> <b>application.</b>|$|E
25|$|SQL Server {{also allows}} stored {{procedures}} to be defined. Stored procedures are parameterized T-SQL queries, that {{are stored in}} the server itself (and not issued by the <b>client</b> <b>application</b> {{as is the case}} with general queries). Stored procedures can accept values sent by the client as input parameters, and send back results as output parameters. They can call defined functions, and other stored procedures, including the same stored procedure (up to a set number of times). They can be selectively provided access to. Unlike other queries, stored procedures have an associated name, which is used at runtime to resolve into the actual queries. Also because the code need not be sent from the client every time (as it can be accessed by name), it reduces network traffic and somewhat improves performance. Execution plans for stored procedures are also cached as necessary.|$|E
25|$|T-SQL (Transact-SQL) is the {{secondary}} means of programming and managing SQL Server. It exposes keywords for the operations {{that can be}} performed on SQL Server, including creating and altering database schemas, entering and editing data in the database as well as monitoring and managing the server itself. Client applications that consume data or manage the server will leverage SQL Server functionality by sending T-SQL queries and statements which are then processed by the server and results (or errors) returned to the <b>client</b> <b>application.</b> SQL Server allows it to be managed using T-SQL. For this it exposes read-only tables from which server statistics can be read. Management functionality is exposed via system-defined stored procedures which can be invoked from T-SQL queries to perform the management operation. It is also possible to create linked Servers using T-SQL. Linked servers allow a single query to process operations performed on multiple servers.|$|E
50|$|<b>Client</b> <b>applications</b> are {{available}} for all major desktop and mobile platforms.|$|R
50|$|Automatically {{generate}} desktop Java <b>client</b> <b>applications</b> with rich, interactive user interfaces.|$|R
5000|$|Server Applications- Allows the <b>client</b> <b>applications</b> to {{interact}} using a common interface ...|$|R
2500|$|... using a <b>client</b> <b>application</b> to {{join with}} large numbers of other {{terminal}} users in collaborative workgroups ...|$|E
2500|$|To use an X <b>client</b> <b>application</b> on {{a remote}} machine, the user may do the following: ...|$|E
2500|$|X's network {{protocol}} {{is based on}} X command primitives. [...] This approach allows both 2D and (through extensions like GLX) 3D operations by an X <b>client</b> <b>application</b> which might be running on a different computer to still be fully accelerated on the X server's display. [...] For example, in classic OpenGL (before version 3.0), display lists containing large numbers of objects could be constructed and stored entirely in the X server by a remote X client program, and each then rendered by sending a single glCallList(which) across the network.|$|E
30|$|Interface faults, {{related to}} {{problems}} in the interaction among software components/modules [8], are particularly relevant in service-oriented environments. In fact, services must provide a robust interface to the <b>client</b> <b>applications,</b> even {{in the presence of}} invalid inputs that may occur due to bugs in the <b>client</b> <b>applications,</b> corruptions caused by silent network failures, or even security attacks.|$|R
5000|$|... {{different}} typical thin <b>client</b> <b>applications</b> {{exist as}} premade packages like ICA-Client and RDP-Client ...|$|R
30|$|We can visualise that S 3 will incur {{charges for}} traffic {{consumed}} on the channel that links it to V M I 1 {{and on the}} channel that links it to the <b>client’s</b> <b>application.</b> In addition, S 3 charges will account for operation consumption counted as the aggregation {{of the number of}} operations placed against S 3 by the <b>client’s</b> <b>application</b> and V M I 1. In addition, the charges will take into consideration resource consumption (storage space consumed) measured in storage–time units. This will be counted as the aggregated impact of the activities (put, get, delete, etc.) performed by the <b>client’s</b> <b>applications</b> and V M I 1.|$|R
2500|$|Remote Desktop Connection (RDC, {{also called}} Remote Desktop, {{formerly}} Microsoft Terminal Services Client, mstsc or tsclient) [...] MSTSC in the filename mstsc.exe stands for Microsoft Terminal Services Client.}} is the <b>client</b> <b>application</b> for RDS. [...] It allows a user to remotely log into a networked computer running the terminal services server. RDC presents the desktop interface (or application GUI) of the remote system, {{as if it}} were accessed locally. In addition to regular username/password for authorizing for the remote session, RDC also supports using smart cards for authorization. With RDC 6.0, the resolution of a remote session can be set independently of the settings at the remote computer.|$|E
2500|$|The {{distributor}} of a podcast maintains a central {{list of the}} files on a server as a web feed that can be accessed through the Internet. The listener or viewer uses special <b>client</b> <b>application</b> software on a computer or media player, known as a podcatcher, which accesses this web feed, checks it for updates, and downloads any new files in the series. This process can be automated to download new files automatically, which may seem to users as though new episodes are broadcast or [...] "pushed" [...] to them. Files are stored locally on the user's device, ready for offline use. There are many different mobile applications available for people to use to subscribe and to listen to podcasts. Many of these applications allow users to download podcasts or to stream them on demand {{as an alternative to}} downloading. Many podcast players (apps as well as dedicated devices) allow listeners to skip around the podcast and control the playback speed.|$|E
50|$|A WPS {{is usually}} not invoked directly. More often, it is invoked by a <b>client</b> <b>application</b> that {{provides}} the user with interactive controls. This <b>client</b> <b>application</b> {{may or may not}} be web-based.|$|E
50|$|<b>Client</b> <b>applications</b> may {{use these}} mappings, or choose {{to define their}} own custom mapping.|$|R
5000|$|Ixonos MISP CIMD simulator, Open-Source CIMD v2 {{compliant}} server {{for testing}} CIMD <b>client</b> <b>applications</b> ...|$|R
5000|$|... have an 'active query' {{mechanism}} to update <b>client</b> <b>applications</b> when relevant database changes occur; ...|$|R
5000|$|Programming a TCP <b>client</b> <b>application</b> {{involves}} the following steps: ...|$|E
5000|$|A {{registered}} user can install the Java-based <b>client</b> <b>application</b> (SWT-GUI): ...|$|E
5000|$|Combine {{the many}} {{disparate}} protocols inside the IM <b>client</b> <b>application.</b>|$|E
5000|$|Web 3D Service (W3DS): This type {{of service}} handles geodata access and mapping to {{computer}} graphics primitives such as scene graphs with textured 3D geometry models {{as well as their}} delivery to the requesting <b>client</b> <b>applications.</b> The <b>client</b> <b>applications</b> are responsible for the 3D rendering of delivered scene graphs, i.e., they are responsible for the interactive display using their own 3D graphics hardware.|$|R
5000|$|A {{declarative}} programming {{style that}} allows most <b>client</b> XForms <b>applications</b> {{to be created}} using a small set of approximately 20 elements. This allows rich <b>client</b> <b>applications</b> to be created without knowledge of JavaScript or other procedural scripting languages.|$|R
30|$|Highly {{interconnected}} data, {{because all}} relationships {{need to be}} explicitly handled in the <b>client</b> <b>applications.</b>|$|R
5000|$|Multiple global {{variable}} scope: Request, Session, <b>Client,</b> <b>Application,</b> Server, Cluster ...|$|E
5000|$|... client - a <b>client</b> <b>application</b> {{running on}} target mobile device ...|$|E
5000|$|Users {{can send}} SMS {{messages}} from any Nymgo <b>client</b> <b>application.</b>|$|E
3000|$|REST APIs as interface, {{which allow}} on-demand {{interactions}} with <b>clients,</b> <b>applications</b> and/or other services; [...]...|$|R
50|$|Sphinx is a fulltext F/OSS {{search engine}} that {{provides}} text search functionality to <b>client</b> <b>applications.</b>|$|R
5000|$|Open source <b>client</b> <b>applications</b> such as Evolution, Pidgin, and OpenOffice.org 2.0 onward (and its descendants).|$|R
