2|557|Public
40|$|Approved {{for public}} release; {{distribution}} is unlimitedAmerican industry expended substantial cost for fire protection, fire prevention programs, first-aid facilities, and industrial safety programs. these expenditures {{grow out of}} proper recognition of the economic necessity to minimize loss caused by disasters such as fire, flood, explosion, etc. There is, however, the general lack of a program which pre-assigns specific responsibilities to employees, upon the occurrence of an emergency situation, which could reduce significantly the extent of damage. The {{purpose of this paper}} is to present a model industrial disaster control plan which was developed for use at the Overhaul and Repair Facility, Naval Air Station, Jacksonville, Florida, and which utilize these techniques heretofore applied primarily by shipboard Damage Control organizations. The industrial manager alone can decide whether a similar application of Damage Control principles within his organization can be beneficial. To facilitate the making of this decision, a cost equation for use in <b>computing</b> <b>plan</b> implementation costs is provided. Further, the paper present a method of approach, Involving Simulation techniques, for individual company assessment of the potential value of plan installation in addition to the benefit derived by reduction of actual physical loss. [URL] Commander, United States NavyCommander, United States NavyLieutenant, United States Nav...|$|E
40|$|Academic {{computing}} initiatives rank high on {{the list}} of priorities of many dental schools. However, outcomes of academic computing initiatives have not been presented. The objectives of this program evaluation were to: 1) document a strategic initiative for academic computing over a five-year period; 2) assess outcomes; and 3) demonstrate how outcomes assessment changed strategic goals for the future. In 1992, Temple University School of Dentistry developed an academic <b>computing</b> <b>plan.</b> The plan proposed to develop the computer literacy of faculty, teach students the computer skills they need to be successful in their careers, and introduce computer-aided instruction as a new teaching tool. Before a new five-year plan was developed in 1997, the original plan's outcomes were summarily assessed. Assessment instruments included faculty and student surveys, budgets, inventory records, and utilization statistics. The school has reached two of three goals of the 1992 plan. Eighty percent of all full-time faculty have computers, are computer literate, and use computers for a variety of purposes. The school has implemented a comprehensive predoctoral dental informatics curriculum. However, the implementation of computer-aided instruction has not met expectations. Goals of the 1998 - 2003 plan include establishing an online learning infrastructure, improving student access, implementing computer-based oral health records, and further improving the computer literacy of faculty and students. Planning and supporting academic computing initiatives is a substantial challenge. Factors such as institutional culture, capital investment, ongoing support, and technological change influence plans and their success. While process and structure can be assessed relatively easily, measures for changed educational outcomes are still lacking...|$|E
5000|$|There {{have been}} major criticisms of this {{architectural}} form, according to Balakirsky (2003) {{due to the}} fact that [...] "the planning is performed on a model of the world rather than on the actual world, and the complexity of the <b>computing</b> large <b>plans...</b> Since the world is not static, and may change during this time delay that occurs between sensing, plan conception, and final execution, the validation of the <b>computed</b> <b>plans</b> have been called into question".|$|R
40|$|Released on 2015 / 09 / 21, GitHub Release Link Release notes Features: Fixes Infrastructure Test {{examples}} Next steps In development Heterogeneous fields (for e. g. {{hydraulic conductivity}} parameters) Octree data structures for fast searches OGS#PETSc interface for parallel <b>computing</b> <b>Planned</b> Parallelization scheme using PETSc library Extending the linear elliptic solver to non-linear problem...|$|R
40|$|Abstract: For {{the purpose}} of {{allowing}} an autonomous robot to use task instructions for task planning, we present a for-malization for specifying structured task instructions and provide an approach for integrating these instructions with robot’s built-in knowledge to <b>compute</b> <b>plans</b> for open-ended tasks. We have implemented a prototype of the system. We also report {{a case study of}} the effectiveness of the approach. ...|$|R
40|$|Abstract. This article {{describes}} SHPE (Simple Hierarchical Planning Engine), a hierarchical task network planning {{system designed to}} gen-erate dynamic behaviours for real-time video games. SHPE {{is based on a}} combination of domain compilation and procedural task applica-tion/decomposition techniques in order to <b>compute</b> <b>plans</b> in a very short time-frame. The planner has been able to return relevant plans in less than three milliseconds for several problem instances of the SimpleFPS planning domain. ...|$|R
40|$|I {{summarize}} {{and comment}} {{on some of the}} main ideas presented in the analysis session at CHEP 95. The areas covered are � 1 � analysis and simulation packages and tools� � 2 � graphics � visualization and virtual reality � � 3 � computation and algorithms � and � 4 � parallel and distributed analysis systems. I also discuss the future <b>computing</b> <b>plans</b> presented here by several experiments. ...|$|R
40|$|International audienceThis article {{describes}} SHPE (Simple Hierarchical Planning Engine), a hierarchical task network planning {{system designed to}} generate dynamic behaviours for real-time video games. SHPE {{is based on a}} combination of domain compilation and procedural task application/decomposition techniques in order to <b>compute</b> <b>plans</b> in a very short time-frame. The planner has been able to return relevant plans in less than three milliseconds for several problem instances of the SimpleFPS planning domain...|$|R
40|$|Abstract—We {{present a}} novel {{combination}} of motion plan-ning techniques to <b>compute</b> motion <b>plans</b> for robotic arms. We <b>compute</b> <b>plans</b> that move the arm {{as close as}} possible to the goal region using sampling-based planning and then switch to a trajectory optimization technique for the last few centimeters necessary to reach the goal region. This combination allows fast computation and safe execution of motion plans even when the goals are very close to objects in the environment. The system incorporates realtime sensory inputs and correctly deals with occlusions that can occur when robot body parts block the sensor view of the environment. The system is tested on a 7 degree-of-freedom robot arm with sensory input from a tilting laser scanner that provides 3 D information about the environment. I...|$|R
2500|$|High {{performance}} <b>computing,</b> allowing on-the-fly <b>planning</b> and revisioning ...|$|R
40|$|It is {{well known}} that {{it is much easier to}} find {{open-loop}} plans in partially-observable environments than it is to compute full policies. It is less well appreciated that open-loop plans can provide good (sometimes even optimal) performance in some real-world robotic planning problems. In this paper we identify several conditions under which open-loop plans provide good performance, and show that multi-agent tag (a recently-popular POMDP benchmark problem) satisfies these conditions. We take advantage of this result to <b>compute</b> <b>plans</b> for a team of three robots searching for an evader in an office environment. ...|$|R
40|$|Aims: The {{target volume}} for breast {{radiotherapy}} after conservative surgery {{for breast cancer}} may be affected by breathing motion. We investigated differences between conventional and four-dimensional <b>computed</b> tomography-based treatment <b>planning</b> and whether gating could improve dose volume parameters. Materials and methods: Ten patients with left-sided breast cancer and surgical clips at the excision site had conventional treatment <b>planning</b> <b>computed</b> tomography and four-dimensional <b>computed</b> tomography. Treatment <b>plans</b> using two tangential beams (6. MV X-rays) were optimised for target coverage and homogeneity using a field in field technique for the three-dimensional scan...|$|R
40|$|This paper {{proposes a}} Conditional Task and Motion Planning {{algorithm}} {{able to find}} a plan that minimizes robot efforts while solving assigned tasks. Unlike most of existing approaches that replan a path only when it becomes unfeasible, the proposed algorithm takes into consideration a replanning every time an effort saving is possible. The effort is here considered as the execution time but it is extensible to the energy consumption. The <b>computed</b> <b>plan</b> is both conditional and dynamically adaptable to the unexpected environment changes. Authors prove the completeness and scalability of their proposal...|$|R
40|$|We {{study the}} multi-agent path finding problem (MAPF) {{for a group}} of agents which are allowed to move into {{arbitrary}} directions on a 2 D square grid. We focus on centralized conflict resolution for independently <b>computed</b> <b>plans.</b> We propose an algorithm that eliminates conflicts by using local re-planning and introducing time offsets to the execution of paths by different agents. Experimental results show that the algorithm can find high quality conflict-free solutions at low computational cost. Comment: as submitted to the 2 nd Workshop on Multi-Agent Path Finding ([URL]...|$|R
40|$|Abstract. In recent years, {{within the}} {{planning}} literature {{there has been}} a departure from approaches <b>computing</b> total <b>plans</b> for given goals, in favour of approaches <b>computing</b> partial <b>plans.</b> Total plans can be seen as (partially ordered) sets of actions which, if executed successfully, would lead to the achievement of the goals. Partial plans, instead, can be seen as (partially ordered) sets of actions which, if executed successfully, would contribute to the achievement of the goals, subject to the achievement of further sub-goals. <b>Planning</b> partially (namely <b>computing</b> partial <b>plans</b> for goals) is useful (or even necessary) for a number of reasons: (i) because the planning agent is resource-bounded, (ii) because the agent has incomplete and possibly incorrect knowledge of the environment in which it is situated, (iii) because this environment is highly dynamic. In this paper, we propose a framework to design situated agents capable of planning partially. The framework is based upon the specification of planning problems via an abductive variant of the event calculus. ...|$|R
5000|$|The {{process of}} <b>plan</b> <b>computing</b> (or recomputing) is as follows: ...|$|R
40|$|Most of the {{heuristic}} search based planning systems perform guided search evaluating states to compute a heuristic mea-sure. Although recent planners are quite efficient, {{the time spent}} in computing the heuristic measure is still an issue that the community has to address. In this work we present an ex-tension to the heuristic of the relaxed plan introduced by the FF Planner. We propose to integrate in the heuristic measure the actions preconditions difficulty, which is computed dur-ing the relaxed plan extraction phase. Results show {{that the number of}} evaluated states and the time to <b>compute</b> <b>plans</b> are decreased using this integrated heuristic...|$|R
40|$|In {{this paper}} {{we focus on}} {{qualitative}} reasoning aspects of knowledge representation for robotics and argue why they are appropriate for building robust control systems. We describe how to extract qualitative knowledge from a numerical world model, how to use this model for <b>computing</b> <b>plans,</b> and how to execute these plans. Robotic soccer {{is used as a}} real-world example domain. Problems might arise with regard to reactivity, unreliable sensor data might lead to stability issues and unintended behaviour. These drawbacks need to be treated. However, in general using a qualitative representation to do reasoning with offers several advantages such as robustness and efficiency...|$|R
40|$|We {{propose a}} {{compilation}} that enhances a given classical <b>planning</b> task to <b>compute</b> <b>plans</b> that contain control flow and procedure calls. Control flow instructions and procedures al-low us to generate compact and general solutions {{able to solve}} planning tasks for which multiple unit tests are defined. The paper analyzes the relation between classical planning and structured programming with unit tests and shows how to ex-ploit this relation in a classical planning compilation. In ex-periments, we evaluate the empirical performance of the com-pilation using an off-the-shelf classical planner and show that we can compress classical planning solutions and that these compressed solutions can solve planning tasks with multiple tests...|$|R
40|$|AbstractIn this paper, {{we address}} the problem of specifying and <b>computing</b> {{preferred}} <b>plans</b> using rich, qualitative, user preferences. We propose a logical language for specifying preferences over the evolution of states and actions associated with a plan. We provide a semantics for our first-order preference language in the situation calculus, and prove that progression of our preference formulae preserves this semantics. This leads to the development of PPlan, a bounded best-first search planner that <b>computes</b> preferred <b>plans.</b> Our preference language is amenable to integration with many existing planners, and beyond planning, can be used to support a diversity of dynamical reasoning tasks that employ preferences...|$|R
40|$|Abstract: Self-adaptive {{systems have}} the ability to {{autonomously}} reconfigure their structure in order to meet specific goals. Such systems often include a <b>planning</b> component, <b>computing</b> <b>plans</b> of reconfiguration steps. However, despite the fact that reconfigurations take time in reality, most planning approaches for self-adaptive systems are non-temporal. In this paper, we present a model-based approach to the generation of temporal reconfiguration plans. Besides allowing for durative reconfigurations, our technique also neatly solves concurrency issues arising in such a temporal setting. This provides the modeller with a clear and easy-to-use basis for modelling {{while at the same time}} giving an automatic method for plan construction. ...|$|R
40|$|Abstract — Manipulation {{planning}} from high-level task spec-ifications, {{even though}} highly desirable, is a challenging prob-lem. The large dimensionality of manipulators and complex-ity of task specifications make the problem computationally intractable. This work introduces a manipulation planning framework with linear temporal logic (LTL) specifications. The use of LTL as the specification language allows {{the expression of}} rich and complex manipulation tasks. The framework deals with the state-explosion problem through a novel abstraction technique. Given a robotic system, a workspace consisting of obstacles, manipulable objects, and locations of interest, and a co-safe LTL specification over the objects and locations, the framework <b>computes</b> a motion <b>plan</b> to achieve the task through a synergistic multi-layered planning architecture. The power of the framework is demonstrated through case studies, in which the planner efficiently <b>computes</b> <b>plans</b> for complex tasks. The case studies also illustrate {{the ability of the}} framework in intelligently moving away objects that block desired executions without requiring backtracking. I...|$|R
40|$|Abstract — In this paper, we {{consider}} the problem of steering complex dynamical systems among equilibria in their state space in efficient ways. Efficiency is considered as the possibility of compactly representing the (typically very large, or infinite) set of reachable equilibria and quickly <b>computing</b> <b>plans</b> to move among them. To this purpose, {{we consider}} the possibility of building lattice structures by purposefully introducing quantization of inputs. We consider {{different ways in which}} control actions can be encoded in a finite or numerable set of symbols, review different applications where symbolic encoding of control actions can be employed with success, and provide a unified framework in which to study the many different possible manifestations of the idea. I...|$|R
40|$|Abstract — Path {{finding is}} a fundamental, yet {{computationally}} expensive problem in robotics navigation. Often times, it is nec-essary to sacrifice optimality {{to find a}} feasible plan given a time constraint due to the search complexity. Dynamic environments may further invalidate current <b>computed</b> <b>plans,</b> requiring an efficient planning strategy that can repair existing solutions. This paper presents a massively parallelizable wavefront-based approach to path planning, running on the GPU, that can efficiently repair plans to accomodate world changes and start movement, without having to restart the wavefront propagation process. In addition, we introduce a termination condition which ensures minimum number of GPU iterations while maintaining strict optimality constraints on search graphs with non-uniform costs. I...|$|R
40|$|<b>Computing</b> travel <b>plans</b> for desired {{trips in}} public {{transportation}} systems {{is not exactly}} the same as finding a shortest driving path in a given area. Path planning in the context of public transportation systems must consider the route constraint that public vehicles serve on particular paths and that passengers cannot order the drivers to change the bus routes. Explicit representation of the route constraint helps us to design efficient algorithms that focus on viable routes for <b>computing</b> travel <b>plans</b> of interest. This paper presents two strategies for capturing the route constraint. The first strategy employs connectivity matrices, and applies special properties of matrices for quickly identifying feasible travel plans for the desired trips...|$|R
40|$|In this paper, we {{consider}} the problem of steering complex dynamical systems among equilibria in their state space in efficient ways. Efficiency is considered as the possibility of compactly representing the (typically very large, or infinite) set of reachable equilibria and quickly <b>computing</b> <b>plans</b> to move among them. To this purpose, {{we consider}} the possibility of building lattice structures by purposefully introducing quantization of inputs. We consider {{different ways in which}} control actions can be encoded in a finite or numerable set of symbols, review different applications where symbolic encoding of control actions can be employed with success, and provide a unified framework in which to study the many different possible manifestations of the idea...|$|R
40|$|Abstract. In this paper, {{we address}} the problem of {{reducing}} the time for finding an object. We consider both the time taken by our software to generate a search plan and the expected time to find the object when the plan is executed. The object is sought with a 7 degrees of freedom mobile manipulator robot with an “eye-in-hand ” sensor. The sensor is limited in both range and field of view. We propose two main strategies: 1) To coordinate the motion of robot’s degrees of freedom optimizing only the most relevant for the task, and 2) to repair a previously <b>computed</b> <b>plan</b> whenever the environment changes locally. We have implemented all our algorithms, and we present simulation results in realistic environments...|$|R
40|$|The {{problem of}} how to {{coordinate}} a large fleet of trucks with given itinerary to enable fuel-efficient platooning is considered. Platooning is a promising technology that enables trucks to save significant amounts of fuel by driving close together and thus reducing air drag. A setting is considered in which each truck in a fleet is provided with a start location, a destination, a departure time, and an arrival deadline from a higher planning level. Fuel-efficient <b>plans</b> should be <b>computed.</b> The <b>plans</b> consist of routes and speed profiles that allow trucks to arrive by their arrival deadlines. Hereby, trucks can meet on common parts of their routes and form platoons, resulting in decreased fuel consumption. We formulate a combinatorial optimization problem that combines plans involving only two vehicles. We show that this problem is hard to solve for large problem instances. Hence a heuristic algorithm is proposed. The resulting plans are further optimized using convex optimization techniques. The method is evaluated with Monte Carlo simulations in a realistic setting. We demonstrate that the proposed algorithm can <b>compute</b> <b>plans</b> for thousands of trucks and that significant fuel savings can be achieved. Comment: 10 page, 10 figures, to be published in Transactions on Intelligent Transportation System...|$|R
5000|$|He {{has held}} several visiting {{appointments}} in <b>computing,</b> engineering, <b>planning,</b> and geography {{at the following}} Universities: University of Illinois; University of Melbourne; University of Hong Kong; University of Bristol; University of Michigan; and he currently has visiting appointments at Cardiff University [...] and Arizona State University.|$|R
40|$|Approved {{for public}} release; {{distribution}} is unlimited. A method is given for <b>computing</b> flight <b>plans</b> for aircraft {{returning to the}} carrier after a mission. The basic goal is to minimize the total flight time for the landing aircraft, while maintaining various individual and interactive constraints on the aircraft...|$|R
40|$|AbstractThe {{utility of}} {{including}} loops in plans has been long {{recognized by the}} planning community. Loops in a plan help increase both its applicability and the compactness of its representation. However, progress in finding such plans has been limited largely {{due to lack of}} methods for reasoning about the correctness and safety properties of loops of actions. We present novel algorithms for determining the applicability and progress made by a general class of loops of actions. These methods can be used for directing the search for plans with loops towards greater applicability while guaranteeing termination, as well as in post-processing of <b>computed</b> <b>plans</b> to precisely characterize their applicability. Experimental results demonstrate the efficiency of these algorithms. We also discuss the factors which can make the problem of determining applicability conditions for plans with loops incomputable...|$|R
40|$|During {{the first}} run, CMS {{collected}} and processed more than 10 B data events and simulated more than 15 B events. Up to 100 k processor cores were used simultaneously and 100 PB of storage was managed. Each month petabytes of data were moved {{and hundreds of}} users accessed data samples. In this document we discuss the operational experience from this first run. We present the workflows and data flows that were executed, and we discuss the tools and services developed, and the operations and shift models used to sustain the system. Many techniques were followed from the original <b>computing</b> <b>planning,</b> but some were reactions to difficulties and opportunities. We also address the lessons learned from an operational perspective, and how this is shaping our thoughts for 2015...|$|R
40|$|Due {{to the few}} <b>computing</b> {{resource}} <b>planning</b> options {{currently available}} in Grid <b>computing,</b> capacity <b>planning,</b> an old discipline for analyzing resource purchases, is simple to perform. However, once a commercial computing Grid is established, which provides many different resource types at variable prices, capacity planning will become more complex and the user will require support for handling this difficult process. The support could come from an online Grid Capacity Planning Service, which helps users with little IT expertise {{to make use of}} the Grid in a cost-effective manner. This Grid Capacity Planning Service is a stand-alone service, enabling companies to outsource their capacity planning task. This paper describes the Grid Capacity Planning Service and demonstrates the workings of the service through simulations. Grid Economics, Grid Capacity <b>Planning,</b> Service-Oriented, <b>Computing,</b> Grid Computing, Resource Allocation, Utility Computing...|$|R
40|$|The {{utility of}} {{including}} loops in plans has been long {{recognized by the}} planning community. Loops in a plan help increase both its applicability and the compactness of its representation. However, progress in finding such plans has been limited largely {{due to lack of}} methods for reasoning about the correctness and safety properties of loops of actions. We present novel algorithms for determining the applicability and progress made by a general class of loops of actions. These methods can be used for directing the search for plans with loops towards greater applicability while guaranteeing termination, as well as in post-processing of <b>computed</b> <b>plans</b> to precisely characterize their applicability. Experimental results demonstrate the efficiency of these algorithms. We also discuss the factors which can make the problem of determining applicability conditions for plans with loops incomputable...|$|R
40|$|The Tower of Hanoi puzzle, has {{recently}} been established as a robotics challenge {{as a part of}} EU Robotics coordination action in 2011 and IEEE IROS Conference in 2012. It provides a good standardized test bed to evaluate integration of high-level reasoning capabilities of robots together with their manipulation and perception aspects. We address this challenge within a general planning and monitoring framework: we represent the puzzle in a logic-based formalism, integrate task planning and motion planning, solve this hybrid planning problem with a state-of-the-art automated reasoner (e. g., a SAT solver), execute the <b>computed</b> <b>plans</b> under feedback control while also monitoring for failures, and recover from failures as required. We show the applicability of this framework by implementing it using two robotic manipulators on a physical experimental setup...|$|R
40|$|These tools make it {{possible}} to automate the search for Lyapunov functions. Many researchers have used this capability to find stability proofs that didn’t previously exist for nonlinear systems, or even to estimate the basins of attraction of stable nonlinear systems[18]. In this paper, we begin to explore the implications for planning of being able to efficiently <b>compute</b> <b>planning</b> funnels. Fig. 1 : Cartoon of motion planning with funnels in the spirit of [6]. of this approach was the difficulty in computing, or estimating by trial-and-error, the region of applicability- the mouth of the funnel, or preimage- for each local controller in a nonlinear system. Consequently, besides the particular solution in [6], these ideas have mostly been limited to reasoning about vectorfields on systems without dynamics[13]. B. Direct computation of Lyapunov function...|$|R
