2|6|Public
5000|$|... an {{optional}} 32KB Level 2 cache. The <b>cache</b> <b>card,</b> which {{fit into a}} special slot on the motherboard, was later included in all systems at no charge. Third-party cards offered up to 128KB, but the added cache size yielded little benefit over the base card.|$|E
50|$|The ANS 500/132 uses a PowerPC 604 CPU clocked at 132 MHz, and the ANS 700/150 has {{the same}} family CPU but clocked at 150 MHz. Both have a L1 cache of 32 kB. The ANS 700/200 {{features}} the more advanced PowerPC 604e clocked at 200 MHz, with an L1 cache of 64 kB. The L2 cache of the ANS is mounted on a SIMM, with a standard size of 512 kB for the 500 and 1 MB for the 700s. Any ANS may have the 1 MB <b>cache</b> <b>card</b> fitted. The system bus speed is 44 MHz for the 500, and 50 MHz for the 700s or any ANS to which the 200 MHz processor card had been fitted. The ANS logic board has eight 168-pin DIMM parity RAM slots with four of them free (with a maximum amount of 512 MB of RAM specified). The ANS 500/132 shipped with 32 MB of RAM installed (4 × 8 MB 60 ns parity DIMMs manufactured by IBM) and the ANS 700/150 and the ANS 700/200 shipped with 48 MB (2 × 16 MB 60 ns + 2 × 8 MB parity DIMMs also manufactured by IBM). For all practical purposes, the maximum RAM configuration is 4 × 128 MB parity DIMMs (512 MB, total) or 8 × 64 MB parity DIMMs (also 512 MB total). The machine will not POST (i.e., will not pass the Power-on System Test) if more than 512 MB is installed. This is an absolute restriction built into the machine's ROM-DIMM. If even one RAM DIMM is non-parity, then parity checking is turned off for all RAM, in which case 70 ns RAM DIMMs are acceptable. FPM or EDO RAM DIMMs are acceptable, in any order, as the machine treats EDO RAM DIMMs as FPM RAM DIMMs.|$|E
50|$|Helix Software Company pioneered {{virtual memory}} {{compression}} in 1992, filing a patent application {{for the process}} in October of that year. In 1994 and 1995, Helix refined the process using test-compression and secondary memory <b>caches</b> on video <b>cards</b> and other devices. However, Helix did not release a product incorporating virtual memory compression until July 1996 {{and the release of}} Hurricane 2.0, which used the Stac Electronics Lempel-Ziv-Stac compression algorithm and also used off-screen video RAM as a compression buffer to gain performance benefits.|$|R
25|$|In {{addition}} to the aforementioned film, Ty Cobb's legacy also includes legions of collectors of his early tobacco card issues, as well as game used memorabilia and autographs. Perhaps the most curious item is a 1909 Ty Cobb Cigarettes pack, leaving some to believe Cobb either had, or attempted to have, his own brand of cigarettes. Very little about the card is known other than its similarity to the 1909 T206 Red Portrait card published by the American Tobacco Company, and until 2005 only a handful were known to exist. That year, a sizable <b>cache</b> of the <b>cards</b> was brought to auction by {{the family of a}} Royston, Georgia, man who had stored them in a book for almost 100 years..|$|R
40|$|This paper {{presents}} Cluster-Aware Remote Disks (CARDs), a Single System I/O architecture for cluster computing. CARDs virtualize accesses {{to remote}} cluster disks over a System Area Network. Their operation {{is driven by}} cooperative caching policies that implement a joint management of the cluster <b>caches.</b> All the <b>CARDs</b> of a given disk employ a common policy, independently of other CARD sets. CARD drivers have been implemented as Linux kernel modules which can flexibly accommodate various cooperative caching algorithms. We designed and implemented a decentralized policy called Home-based Serverless Cooperative Caching (HSCC). HSCC showed cache hit ratios over 50 % for workloads that go beyond the limit of the global cache. The best speedup of a CARD over a remote disk interface was 1. 54. ...|$|R
50|$|In {{addition}} to the aforementioned film, Ty Cobb's legacy also includes legions of collectors of his early tobacco card issues, as well as game used memorabilia and autographs. Perhaps the most curious item is a 1909 Ty Cobb Cigarettes pack, leaving some to believe Cobb either had, or attempted to have, his own brand of cigarettes. Very little about the card is known other than its similarity to the 1909 T206 Red Portrait card published by the American Tobacco Company, and until 2005 only a handful were known to exist. That year, a sizable <b>cache</b> of the <b>cards</b> was brought to auction by {{the family of a}} Royston, Georgia man who had stored them in a book for almost 100 years..|$|R
40|$|In this paper, {{we present}} a {{hierarchical}} Data Cache Ar-chitecture called DCA to effectively slash local interconnect traffic and thus boost the storage server performance. DCA is composed of a read <b>cache</b> in NIC <b>card</b> called NIC <b>cache</b> and a read/write unify cache in host memory called Helper cache. NIC cache services most portion of read requests without fetching data via PCI bus, while Helper cache 1) supplies some portions of read requests given partial NIC cache hits; 2) directs cache placement for NIC cache and 3) absorbs most transient writes locally. We developed a novel State Locality Aware cache Placement algorithm called SLAP to improve NIC cache hit ratio for mixed read and write workloads. To demonstrate the effectiveness of DCA, we developed a DCA prototype system and evaluated it with open source iSCSI implementation under representa-tive storage server workloads. Experimental results showed that DCA can boost iSCSI storage server throughput by up to 121 % and slash the PCI traffic by up to 74 % compared with an iSCSI target without DCA. 1...|$|R
40|$|In this thesis, {{security}} {{evaluation of}} side-channel resistance for symmetric ciphers is studied {{in order to}} implement cryptographic algorithms into security devices such as smart cards. Side channel attack (SCA) utilizes physical leakage such as power consumption of a cryptographic implementation during its computation in order to intentionally reveal a secret key in security devices. Recently, many studies of attack methods and countermeasures have been proposed about SCAs. And, for security devices that need high security such as smart cards, it is required to be evaluated whether they have a resistance to SCAs by the evaluation techniques established in an international standard ISO/IEC 15408. Thus, studies of SCAs are of significance for both academia and industrial fields. There are various types of SCAs such as power analysis (PA) attack, electromagnetic analysis (EM) attack, timing attack (TA) (or cache-timing attack (CTA)), and fault analysis (FA) attack, that utilize unintentional physical leakages from security devices. This thesis focuses on the studies of FA attacks. FA attacks are powerful methods that one can precisely induce faults into security devices using a laser beam and so on; however the equipments for attacks are expensive and some expertise are needed for controlling the equipments. Then, few studies of fault injection methods using inexpensive equipments were proposed compared to other SCAs. Further, the theoretical evaluation techniques are required to design the countermeasures; however, {{it is not clear}} that all cryptography can be attacked using the FA attack methods. In this thesis, we study the following evaluations from the theoretical and experimental approaches. 1. We propose a reproducible fault injection method using an inexpensive equipment. And, we show the characteristics of fault occurrence in the hardware implementation of the representative six kinds of block ciphers by the experiments using the proposed method. In the previous studies, the fault injection methods using inexpensive methods such as an irregular clock were proposed; however the results were dependent on each experimental environment and the reproducible experimental methods, that the same byte faults can be induced at the same timing in any experiment, were not proposed. Thus, the properties of fault occurrence in the hardware implementation of block ciphers were not clear and the fact was unclear whether one-byte faults frequently used in the assumption of theoretical studies can be induced arbitrarily and stably using an irregular clock. In this thesis, we propose a fault injection method that we can induce faults at the same timing of cryptographic algorithm in any experiment by synchronizing the fault injection timing with the execution timing of a cryptographic calculation. And, we precisely control the phase differences of two clocks that are generated by the original clock source of the cryptographic device, then, we can stably induce the same number of faulty bytes. Thus, we can obtain the reproducible results using the proposed method. Further, we show the fault occurrences in the hardware implementation on an LSI using the proposed method. In the LSI, six kinds of the representative block ciphers are implemented using a loop architecture that is a general hardware implementation method. As a result, we show that a width of an irregular clock has a relation with the number of induced faulty bytes and we can stably induce any byte fault including a one-byte fault frequently used in the assumption of theoretical studies. The proposed method is a versatile approach that can be applied to other cryptography implemented using a synchronous design. Then, this study contributes the development of experimental evaluation methods of FA attacks. And, this study also contributes the development of the theoretical evaluation studies on FA attacks because the experimental results of this study indicate the types of the induced faults in the hardware implementation. 2. We evaluate theoretical methods of FA attacks against the block-cipher based stream cipher to reveal a secret key and we target stream cipher MUGI as a case study. In the previous studies, it was considered that a secret key could not be extracted by FA attacks because the size of the unknown internal states is bigger that that of the known outputs at each cycle in stream ciphers based on the block cipher structure. Then, there are few studies of countermeasures against such kinds of cryptography. In this thesis, we first propose theoretical FA attacks on the stream cipher based on the block-cipher structures by analyzing the fault propagation of it and the characteristics of the structure of MUGI. Using the proposed attack methods, we can recover all internal states and a secret key by 13 time fault injections that considered to be practical. And, we show that a secret key can be extracted within a minute that is a feasible calculation time from the simulation results conducted on a PC. The results of this study show that the unique countermeasures are required for the implementation of the stream ciphers based on the block-cipher structure because they can be broken using FA attacks. This study contributes the development of the countermeasures that are required to implement a cryptographic algorithm in security. 3. We evaluate the feasibility of a powerful attack by combining FA attacks and other SCAs. Recently, for a high functionality of the security devices such as smart <b>cards,</b> <b>cache</b> memory will be installed in them. Then, there is a possibility that the devices using cache memory are targeted by CTAs to extract a secret key embedded on smart cards. In this thesis, we evaluate attack cost in the case that FA attacks and CTAs are combined. From the results of theoretical evaluation, we show that a secret key can be efficiently extracted using a combination attack compared to each attack. The results give perspective that a combination attack of FA attacks and CTAs becomes to be more threat attack. This studies contribute the development of the techniques of SCAs because we show the possibility of new attack that the multiple SCAs are combined. These series of studies contribute to the development of the evaluation methods and the countermeasures of SCAs. And, they contribute to improve a security level when cryptographic algorithms are implemented in security devices. 電気通信大学 201...|$|R

