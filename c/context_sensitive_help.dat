21|1289|Public
5000|$|Applications have {{online help}} {{accessed}} by a Help menu, {{which is the}} last option on the menu bar; <b>context</b> <b>sensitive</b> <b>help</b> can be summoned by ...|$|E
50|$|<b>Context</b> <b>sensitive</b> <b>help</b> is {{a common}} {{implementation}} of context sensitivity, a single help button is actioned and the help page or menu will open a specific page or related topic.|$|E
5000|$|<b>Context</b> <b>sensitive</b> <b>help</b> Highlighting a PHP {{function}} and hitting [...] will display the function's help page in gPHPEdit (provided {{that you have}} the PHP documentation installed in the correct place and {{that you have the}} gtkhtml2 component installed). After viewing one of the context sensitive pages, the links within the page are active. allowing navigation between related help pages.|$|E
40|$|ABSTRACT-A computerized, PC-based, data {{acquisition}} program that measures motor torque, speed, inputloutput power, power factor, and temperatures for {{an electric motor}} dynamometer test facility {{was developed to meet}} the user requirements for both education and research programs. The {{data acquisition}} program attempts to achieve that goal by incorporating features that include a menu-driven user interface, alternate default configuration files, <b>context</b> <b>sensitive</b> on-line <b>help,</b> windowed input forms, choice lists, scrollable display windows, and device independent graphics. The program has been used rigorously and has proven to be very user-friendly and efficient...|$|R
50|$|The second {{method for}} categorizing {{publications}} in Aigaion is using {{one or more}} keywords to describe a publication. Aigaion offers <b>context</b> <b>sensitive</b> information that <b>helps</b> the user in using consistent keywords. All publications that are assigned to a keyword can be presented in publication lists. Each author and topic display offers a keyword cloud showing the keywords that are assigned to publications of the author or topic.|$|R
50|$|Highlights of {{the program}} include {{separate}} customer and vendor account information, full inventory management and tracking capabilities, complete financial general ledger accountability, check writing, bank account reconciliation, flexible import and export capability, XML Interface to E-commerce shopping carts, robust reporting and form capability, an expandable shipping manager, user level security, and a <b>context</b> <b>sensitive</b> pop-up <b>help</b> system (PhreeHelp). Available add-on modules are: Point of Sale, ZenCart, OpenCart, Document Control, Import Bank Statement, Translator, Return Material Authorization (RMA), Work Order, SKU Price Bulk Loader, Assets and others. Available payment methods are: Authorize.net, Linkpoint API, PayPal, FirstData Gateway and Elevon. Shipping methods are: Endicia, Ups, Fedex and Usps.|$|R
50|$|In {{addition}} to the MP3 player, SL45 offered other advanced features such as dictaphone with several hours of recording time, auto responder, voice dialing and voice commands,WAP browser, and <b>context</b> <b>sensitive</b> <b>help</b> in several languages.Other software include calendar/organizer, alarm clock, stopwatch, calculator, currency converter and games.While SL45 {{was one of the}} most advanced phones in its time, it was also one of the smallest.|$|E
50|$|The program {{incorporated}} functionalities {{such as a}} SDK for C and C++ {{and support}} for SQL. The interface offered, among other features: personalization of menus; tools for creating graphical representations of its output; predefined groups of screen and print formats; and <b>context</b> <b>sensitive</b> <b>help.</b> Data could be exported to or imported from the dBase format, Btrieve format, or SPI's own Open Access format. In monoposition, it was compatible with the Microsoft SQL Server.|$|E
5000|$|In 1992 {{he founded}} UDICO Holdings, a company which, using a [...] "surveillance engine" [...] {{licensed}} from a French company, sought {{to create an}} interactive <b>context</b> <b>sensitive</b> <b>help</b> engine which would intercept [...] "F1" [...] calls for help within Microsoft Word and direct users at that point to an interactive training session for the feature which they sought help with. Though this product (Developed by T. Lindgren and A. Bennedsen) was never released, the company did release a WinHelp authoring tool called W.Y.S.I. Help Composer.|$|E
40|$|A multi-windowing, {{user-friendly}} {{front end}} to an integrated {{hospital information system}} has been developed for the DoD's Composite Health Care System (CHCS) using an X-Windows based graphical user interface. The workstation facilitates system use via a consistent visual presentation of discoverable choices. A User Support System provides <b>context</b> <b>sensitive</b> and process <b>help</b> for each user action. The Clinical DeskTop is the first CHCS application ported to the workstation. It provides the clinical user with tools to enhance the useability of CHCS order entry and result reporting...|$|R
40|$|A multi-windowing, {{user-friendly}} {{front end}} to an integrated {{hospital information system}} has been developed for the DoD's Composite Health Care System. An Intelligent Navigation Aid and an X-Windows based graphical user interface encapsulates the physician from system details, such as menu navigation. The workstation facilitates system use via a consistent visual presentation of discoverable choices. A User Support System provides <b>context</b> <b>sensitive</b> and process <b>help</b> for each user action. This workstation is implemented on a VaxStation 3100 running DEC Windows with MUMPS to X-Windows bindings. Physicians and nurses are using it for patient care in several test hospitals...|$|R
40|$|AbstractOf some 33. 8 million km. of {{classified}} roads that girdle the globe, nearly all unsealed roads {{and an estimated}} 85 % of paved roads are low-volume roads (LVRs) with ADT of less than 1000 vehicles/day. Rural LVRs have {{a critical role in}} economic growth and poverty reduction, and a prominent function in emergency preparedness, disaster relief and rural job creation. This paper discuses the meaning of sustainability and its more practical subset [...] livability, in relation to rural roads and how the application of <b>context</b> <b>sensitive</b> solutions could <b>help</b> achieve a better balance among the economic, social, and environmental dimensions of sustainability...|$|R
50|$|Outtrim {{wanted to}} make a Web page and put up a picture of himself and {{information}} about the music he liked. He tried using HoTMetaL and Web Edit but was frustrated when both programs crashed with the blue screen of death. He decided he could do a better job himself. He built HotDog, an HTML Authoring tool using Visual Basic. It could write Web pages like a word processor, with a WYSIWYG interface, an auto-save feature and other features designed to make it easy to manage sites with many pages. Steve incorporated easy to use, <b>context</b> <b>sensitive</b> <b>help</b> which the competing programs lacked.|$|E
5000|$|Authors use the {{so-called}} [...] "designer component" [...] to create help texts for applications and functions and define process steps. These help texts can be updated easily {{with a few}} clicks if software or processes are changing. On user side, the contents are automatically retrieved via a [...] "Guide", {{as soon as a}} function is used with a help text archived. The [...] "Guide" [...] can also be opened selectively to lead through an application or process. This <b>context</b> <b>sensitive</b> <b>help</b> through texts, links and videos is intended {{to reduce the number of}} errors in everyday work, especially rarely run processes. In particular, this applies for complex processes or software updates.|$|E
40|$|The fgui R {{package is}} {{designed}} for developers of R packages, to help rapidly, and sometimes fully automatically, create a graphical user interface for a command line R package. The interface is built upon the Tcl/Tk graphical interface included in R. The package further facilitates the developer by loading in the help files from the command line functions to provide <b>context</b> <b>sensitive</b> <b>help</b> to the user with no additional effort from the developer. Passing a function as the argument to the routines in the fgui package creates a graphical interface for the function, and further options are available to tweak this interface {{for those who want}} more flexibility. ...|$|E
40|$|This {{paper is}} a short {{introduction}} into the usage of WinMAREG. Two examples are used to illustrate the most common options and features of the software. Keywords: User guide, MAREG, WinMAREG. 1 Introduction This quick start will give the user a short introduction into the handling of WinMAREG. We present the analysis of two data sets, which are provided with the software. These are the `Respiratory Disorder Data' described in Miller, Davis and Landis (1993) and the `Ohio Children Data' described e. g. in Fitzmaurice and Laird (1993). Most of the features and options are presented. A detailled description {{can be found in}} the (<b>context</b> <b>sensitive)</b> online <b>help</b> or in Fieger, Heumann and Kastner (1996). Starting the program displays the main window of WinMAREG presented in figure 1. The menubar consists of the usual file menu (opening and closing data files), the options menu, the two statistics menues (ML and GEE 1) and a help menu. The options menu provides entrys that determine the appeara [...] ...|$|R
40|$|This paper {{explores the}} effect of {{improved}} morphological analysis, particularly <b>context</b> <b>sensitive</b> morphology, on monolingual Arabic Information Retrieval (IR). It also compares {{the effect of}} <b>context</b> <b>sensitive</b> morphology to noncontext sensitive morphology. The results show that better coverage and improved correctness have a dramatic effect on IR effectiveness and that <b>context</b> <b>sensitive</b> morphology further improves retrieval effectiveness, but the improvement is not statistically significant. Furthermore, the improvement obtained {{by the use of}} <b>context</b> <b>sensitive</b> morphology over the use of light stemming was not significantly significant...|$|R
40|$|<b>Context</b> <b>sensitive</b> page {{mappings}} provide different mappings from virtual addresses {{to physical}} page frames {{depending on whether}} a memory reference occurs in a data or instruction context. Such differences {{can be used to}} modify the behavior of programs that reference their executable code in a data context. Previous work has demonstrated several applications of <b>context</b> <b>sensitive</b> page mappings, including protection against buffer-overrun attacks and circumvention of self-checksumming codes. We extend <b>context</b> <b>sensitive</b> page mappings to the virtual machine monitor, allowing operation independent of the guest operating system. Our technique takes advantage of the VMM’s role in enforcing protection between guest operating systems to interpose on guest OS memory management operations and selectively introduce <b>context</b> <b>sensitive</b> page mappings. In this paper, we describe extensions to the Xen hypervisor that support <b>context</b> <b>sensitive</b> page mappings in unmodified guest operating systems. We demonstrate the utility of our technique in a case study by instrumenting and modifying self-checksumming tamper-resistant binaries. We further demonstrate that <b>context</b> <b>sensitive</b> page mappings can be provided by the VMM without incurring extensive overhead. Our measurements indicate only minor performance penalties stem from use of this technique. We suggest several further applications of VMM-provided <b>context</b> <b>sensitive</b> page mappings, including OS hardening and protection of processes from malicious applications...|$|R
40|$|An {{intuitive}} library information gateway {{is critical}} to meeting the information needs of library users in the digital age. This article describes the process involved in redesigning a library Web site. In addition to first determining the goals and requirements for the library Web site, a user and task analysis was conducted for defining the library 2 ̆ 7 s user base and types of tasks which users might be performing at the site. Usability testing methods, such as observational interviews, provided fresh insights about how users are interacting with the library Web interface as they approach various information seeking tasks. These usability studies uncovered problems related to unclear terminology, proper use of color, size and location of navigational links, {{and the need for}} <b>context</b> <b>sensitive</b> <b>help,</b> built-in redundancy, and clear and consistent navigation...|$|E
40|$|The {{purpose of}} this thesis {{is to create a}} tool (Advisor) for the {{development}} and use of online help systems. The study of human-computer interface issues is central to this task. In particular, attention has been given to the analysis of learning principles as related to interface strategies. The Advisor software is used by help designers to develop help systems and by application users to get assistance during applications use. It has two parts: the Designer (editor/outliner used by the help developer for help screen definition) and the Browser (help viewer used by the software end user for assistance from within an application). Using hypertext technology, the Advisory creates a tutorial environment where help screens and keyword links provide <b>context</b> <b>sensitive</b> <b>help</b> to assist the application user. A simple interface exists for access to the Browser by an application program...|$|E
40|$|Virtual realities are {{a type of}} human-computer {{interface}} (HCI) and as such may be understood from a historical perspective. In the earliest era, the computer was a very simple, straightforward machine. Interaction was human manipulation of an inanimate object, {{little more than the}} provision of an explicit instruction set to be carried out without deviation. In short, control resided with the user. In the second era of HCI, some level of intelligence and control was imparted to the system to enable a dialogue with the user. Simple <b>context</b> <b>sensitive</b> <b>help</b> systems are early examples, while more sophisticated expert system designs typify this era. Control was shared more equally. In this, the third era of the HCI, the constructed system emulates a particular environment, constructed with rules and knowledge about 'reality'. Control is, in part, outside the realm of the human-computer dialogue. Virtual reality systems are discussed...|$|E
40|$|<b>Context</b> <b>Sensitive</b> Solutions (CSS) is an {{interdisciplinary}} approach that seeks effective, multimodal transportation solutions {{by working with}} stakeholders to develop, build and maintain cost-effective transportation facilities which fit into and reflect the project's surroundings [...] it's context. Cover title. Includes bibliographical references (p. [10]). Part I. <b>Context</b> <b>Sensitive</b> Solutions: definition and policy development. [...] Part II. Summary of <b>context</b> <b>sensitive</b> solutions guidelines. [...] Part III. Next steps. <b>Context</b> <b>Sensitive</b> Solutions (CSS) is {{an interdisciplinary}} approach that seeks effective, multimodal transportation solutions by working with stakeholders to develop, build and maintain cost-effective transportation facilities which fit into and reflect the project's surroundings [...] it's context. Mode of access: Internet...|$|R
40|$|This paper {{describes}} the Agents Channelling <b>ContExt</b> <b>Sensitive</b> Services (ACCESS) architecture, an open agent-based architecture {{that supports the}} development and deployment of multiple heterogeneous <b>context</b> <b>sensitive</b> services. Specifically, ACCESS provides a common core of functionality that one would expect location-aware context-sensitive services to employ. ...|$|R
5000|$|Exceptional Merit for <b>Context</b> <b>Sensitive</b> Neighborhood Infill Design ...|$|R
40|$|Currently, {{building}} a user interface involves creating a large procedural program. Modelbased programming provides an alternative new paradigm. In the model-based paradigm, developers create a declarative model {{that describes the}} tasks that users are expected to accomplish with a system, the functional capabilities of a system, the style and requirements of the interface, the characteristics and preferences of the users, and the I/O techniques supported by the delivery platform. Based on the model, a much smaller procedural program then determines {{the behavior of the}} system. There are several advantages to this approach. The declarative model is a common representation that tools can reason about, enabling the construction of tools that automate various aspects of interface design, that assist system builders {{in the creation of the}} model, that automatically provide <b>context</b> <b>sensitive</b> <b>help</b> and other run-time assistance to users. The common model also allows the tools that operate on it t [...] ...|$|E
40|$|The Bureau of the Census is {{developing}} a Statistical Metadata Content Standard to define the necessary metadata to describe all aspects of survey design, processing, analysis, and data sets. The draft standards document must be easily reviewed by subject matter experts. Our experience has shown that information displayed in the format of a standard is not easily understood by experts outside the standards community. In order to facilitate review and discussion, we chose to display the standard in a format similar to a textbook's Table of Contents (TOC), with subsequent information displayed in an outline format. To further facilitate review and comment, the TOC was published in HTML format on the Bureau's World Wide Web server. Thus a reviewer, using internet browsers such as Mosaic or Netscape, can traverse the document, display <b>context</b> <b>sensitive</b> <b>help,</b> such as definitions, and leave behind comments as he/she scrutinizes the document. In addition to displaying the standard, the TOC pro [...] ...|$|E
40|$|The {{increasing}} {{availability of}} medical information resources has moved the "Medical Desktop" from a theoretical construct to a practical necessity. Many micro-computers are becoming available in clinical and academic settings that can access several medical information applications. These computers {{are usually not}} powerful workstations {{that are part of}} a clinically oriented information support system, but are personal computers with varied capabilities. The applications on these computers come from different sources, are accessed through different user interfaces and do not share data well. The de facto "Medical Desktop" this situation presents will discourage most end-users because the combination of applications is complex, the applications are poorly integrated, and individual applications are inconsistent. At the State University of New York at Buffalo School of Medicine and Biomedical Sciences we have developed several Microsoft Windows-based tools that accept a systems level diversity of resources, but work toward the construction of a coherent "Medical Desktop. " These tools include a lexical term linker, a resource database, and a <b>context</b> <b>sensitive</b> <b>help</b> system that is tailored to locally available resources...|$|E
5000|$|<b>Context</b> <b>sensitive</b> color {{highlighting}} {{for several}} languages and file types ...|$|R
40|$|Families of {{languages}} generated by classes of <b>context</b> <b>sensitive</b> Lindenmayer systems with tables using nonterminals are {{classified in the}} Chomsky hierarchy. It is shown that the family {{of languages}} generated by deterministic λ-free left <b>context</b> <b>sensitive</b> L systems with two tables using nonterminals coincides with the <b>context</b> <b>sensitive</b> languages. Combined {{with the fact that}} the family of languages generated by deterministic λ-free <b>context</b> <b>sensitive</b> L systems (with one table) using nonterminals is equal to the DLBA languages this shows the classic LBA problem to be equivalent to whether or not a trade-off is possible between one-sided context with two tables and two-sided context with one table for deterministic λ-free L systems using nonterminals. Without the restriction to λ-freeness such a trade-off is possible since the recursively enumerable languages are generated in both cases. By stating the results in their strongest form, a complete classification of the considered language families is obtained since the hierarchies induced by the involved parameters (λ-freeness, determinism, number of tables, amount of context, closure under various types of homomorphisms) basically collapse to the recursively enumerable languages, <b>context</b> <b>sensitive</b> languages, and DLBA languages...|$|R
40|$|The L(PSCG) =L(CS) problem {{asks whether}} {{propagating}} scattered context grammars and <b>context</b> <b>sensitive</b> grammars are equivalent. The presented paper reformulates and answers {{this problem in}} terms of CD grammar systems. More specifically, it characterizes the family of <b>context</b> <b>sensitive</b> languages by two-component CD grammar systems with propagating scattered context rules. Comment: In Proceedings AFL 2017, arXiv: 1708. 0622...|$|R
40|$|Session {{characteristics}} {{taken from}} large transaction logs of three Web search environments (academic Web site, public search engine, consumer health information por-tal) were modeled using cluster analysis {{to determine if}} coherent session groups emerged for each environ-ment and whether the types of session groups are similar across the three environments. The analysis revealed three distinct clusters of session behaviors common to each environment: “hit and run ” sessions on focused topics, relatively brief sessions on popular topics, and sustained sessions using obscure terms with greater query modification. The findings also revealed shifts in session characteristics over time {{for one of the}} datasets, away from “hit and run ” sessions toward more popular search topics. A better understanding of session char-acteristics can help system designers to develop more responsive systems to support search features that cater to identifiable groups of searchers based on their search behaviors. For example, the system may identify strug-gling searchers based on session behaviors that match those identified in the current study to provide <b>context</b> <b>sensitive</b> <b>help...</b>|$|E
40|$|Social {{networking}} sites (SNSs) {{have applied}} personalized filtering {{to deal with}} overwhelmingly irrelevant social data. However, due to the focus of accuracy, the personalized filtering often leads to “the filter bubble” problem where the users can only receive information that matches their pre-stated preferences but fail {{to be exposed to}} new topics. Moreover, these SNSs are black boxes, providing no transparency for the user about how the filtering mechanism decides what is to be shown in the activity stream. As a result, the user’s usage experience and trust in the system can decline. This paper presents an interactive method to visualize the personalized filtering in SNSs. The proposed visualization helps to create awareness, explanation, and control of personalized filtering to alleviate the “filter bubble” problem and increase the users’ trust in the system. Three user evaluations are presented. The results show that users have a good understanding about the filter bubble visualization, and the visualization can increase users’ awareness of the filter bubble, understandability of the filtering mechanism and to a feeling of control over the data stream they are seeing. The intuitiveness of the design is overall good, but a <b>context</b> <b>sensitive</b> <b>help</b> is also preferred. Moreover, the visualization can provide users with better usage experience and increase users’ trust in the system...|$|E
40|$|Graphical user {{interfaces}} (GUIs) {{are difficult to}} construct and, consequently, suffer from high costs. Automatic generation of GUIs from declarative descriptions can reduce costs and enforce design principles. If, in addition, the declarative descriptions are broken into separate components, called models, modularity is improved, and advanced features such as design critics, <b>context</b> <b>sensitive</b> <b>help,</b> and dynamic reconfiguration are enabled. MASTERMIND (MM) [Szekely 96] is a research effort {{in the area of}} model-based {{user interfaces}}. It is a joint effort of the Graphics, Visualization, and Usability Center (GVU) of the Georgia Institute of Technology (GT) and the Information Sciences Institute (ISI) of the University of Southern California. This chapter describes the model-based user interface technology developed at GT and how it can be applied to designing a web browser. MASTERMIND supports designers. Their job is to design user interfaces for software systems. They may or may not participate {{in the design of the}} software systems themselves. There may be more than one designer, and the designers may be broken into teams. Furthermore, the teams may be divided along functional lines, with, for example, one team responsible for screen layout, one for dialogue, and one for application software. Multiple designers require modularization and integration. Given a declarativ...|$|E
40|$|In [AS], Anisimov and Seifert {{show that}} a group has a regular word problem {{if and only if}} it is finite. Muller and Schupp [MS] (together with Dunwoody’s {{accessibility}} result [D]) {{show that a}} group has context free word problem if and only if it is virtually free. In this note, we exhibit a class of groups where the word problem is {{as close as possible to}} being a <b>context</b> <b>sensitive</b> language. This class includes the automatic groups of [ECHLPT] and is closed under passing to finitely generated subgroups. Consequently, it is quite large. For example, it contains all finitely generated subgroups of the n-fold product of free groups, F 2 × [...] . × F 2. For n = 2, these include groups which are not finitely presented, and for n> 2, these include groups which are FPn but not FPn+ 1. Let us make clear what we mean by saying that the word problem is as close as possible to being a <b>context</b> <b>sensitive</b> language. Recall that a <b>context</b> <b>sensitive</b> language cannot contain the empty word e. Since the empty word is always an element of the word problem, strictly speaking, the word problem can never be a <b>context</b> <b>sensitive</b> language. So we will abuse terminology and say that the word problem is <b>context</b> <b>sensitive</b> if, after deleting the empty word, it is <b>context</b> <b>sensitive.</b> We feel that this is not a grievous abuse: i...|$|R
50|$|<b>Context</b> <b>sensitive</b> actions may be {{perceived}} as dumbing down of the user interface - leaving the operator at a loss as to what to do when the computer decides to perform an unwanted action. Additionally non-automatic procedures may be hidden or obscured by the <b>context</b> <b>sensitive</b> interface causing an increase in user workload for operations the designers did not foresee.|$|R
40|$|Abstract. This paper {{introduces}} the Agents Channeling <b>ContExt</b> <b>Sensitive</b> Services (ACCESS) architecture, an agent-based architecture {{that supports the}} development and deployment of <b>context</b> <b>sensitive</b> services. Specifically, ACCESS is comprised of two sub-systems: a run-time system that delivers the minimum functionality necessary to execute ACCESS Agents, and a development environment that delivers structured tool-based support for the creation, development, and visualization of u-commerce services. ...|$|R
