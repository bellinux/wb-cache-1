79|148|Public
2500|$|RFC 3657 Use of the Camellia Encryption Algorithm in <b>Cryptographic</b> <b>Message</b> <b>Syntax</b> (CMS) ...|$|E
2500|$|RFC 5990 Use of the RSA-KEM Key Transport Algorithm in the <b>Cryptographic</b> <b>Message</b> <b>Syntax</b> (CMS) ...|$|E
5000|$|RFC 3657: Use of the Camellia Encryption Algorithm in <b>Cryptographic</b> <b>Message</b> <b>Syntax</b> (CMS) ...|$|E
5000|$|... #Caption: First page of Al-Kindi's 9th century Manuscript on Deciphering <b>Cryptographic</b> <b>Messages</b> ...|$|R
5000|$|... #Caption: The {{first page}} of al-Kindi's {{manuscript}} On Deciphering <b>Cryptographic</b> <b>Messages,</b> containing the first descriptions of cryptanalysis and frequency analysis.|$|R
5000|$|Abu Yusuf Yaqub ibn Ishaq al-Sabbah Al-Kindi, (A Manuscript on Deciphering <b>Cryptographic</b> <b>Messages),</b> 9th century {{included}} {{first known}} explanation of frequency analysis cryptanalysis ...|$|R
5000|$|RFC 5990: Use of the RSA-KEM Key Transport Algorithm in the <b>Cryptographic</b> <b>Message</b> <b>Syntax</b> (CMS) ...|$|E
5000|$|PKCS7 (<b>Cryptographic</b> <b>Message</b> <b>Syntax</b> Standard â€” public keys with {{proof of}} {{identity}} for signed and/or encrypted message for PKI).|$|E
50|$|CAdES (CMS Advanced Electronic Signatures) {{is a set}} of {{extensions}} to <b>Cryptographic</b> <b>Message</b> <b>Syntax</b> (CMS) signed data {{making it}} suitable for advanced electronic signatures.|$|E
50|$|It is {{followed}} by ISO 19092 Financial Services - Biometrics - Part 2: <b>Message</b> <b>syntax</b> and <b>cryptographic</b> requirements.|$|R
50|$|Poly1305 is a <b>cryptographic</b> <b>message</b> {{authentication}} code (MAC) {{created by}} Daniel J. Bernstein. It {{can be used}} to verify the data integrity and the authenticity of a message. It has been standardized in RFC 7539.|$|R
50|$|In version 4.0, {{the basic}} <b>message</b> <b>syntax</b> was {{switched}} over to XML. Further, {{the number of}} roundtrips necessary was reduced, allowing asynchronous communication (e.g. via SMTP) for simple transaction dialogues.|$|R
50|$|The <b>Cryptographic</b> <b>Message</b> <b>Syntax</b> (CMS) is the IETF's {{standard}} for cryptographically protected messages. It {{can be used}} to digitally sign, digest, authenticate or encrypt any form of digital data.|$|E
5000|$|<b>Cryptographic</b> <b>Message</b> <b>Syntax,</b> used in S/MIME (RFC 2311 and RFC 2633). IETF message {{specification}} (based {{on the popular}} Internet MIME standard) that provides a consistent way to send and receive signed and encrypted MIME data.|$|E
50|$|The Certificate Management over CMS (CMC) is an {{internet}} standard by the IETF, defining transport mechanisms for the <b>Cryptographic</b> <b>Message</b> <b>Syntax</b> (CMS). It {{is defined in}} RFC 5272, its transport mechanisms in RFC 5273. It {{is one of two}} protocols utilizing the Certificate Request Message Format (CRMF), described in RFC 4211, with the other protocol being the Certificate Management Protocol (CMP).|$|E
50|$|<b>Message</b> <b>syntax</b> and {{semantics}} {{is defined}} with BEEP profiles associated {{to one or}} more BEEP channels, where each channel is a full-duplex pipe. A framing-mechanism enables simultaneous and independent communication between peers.|$|R
50|$|The Data Authentication Algorithm (DAA) is {{a former}} U.S. {{government}} standard for producing <b>cryptographic</b> <b>message</b> authentication codes. DAA is defined in FIPS PUB 113, which was withdrawn on September 1, 2008. The algorithm is not considered secure by today's standards.|$|R
50|$|Syntax is {{concerned}} with the formalism used to represent a <b>message.</b> <b>Syntax</b> as an area studies the form of communication in terms of the logic and grammar of sign systems. Syntax is devoted {{to the study of the}} form rather than the content of signs and sign-systems.|$|R
50|$|PAdES is {{complementary}} to {{two other}} standards for an implementation of electronic signatures through cryptographically secured digital signatures in compliance to the eIDAS regulation. Like PAdES, they are legally binding in the European Union and suited for applications {{that do not}} involve human-readable documents: <b>Cryptographic</b> <b>Message</b> <b>Syntax</b> Advanced Electronic Signatures (CAdES) and XML Advanced Electronic Signatures (XAdES).The PAdES, CAdES and XAdES standards can be downloaded from the ETSI website ETSI download page.|$|E
5000|$|XML Signature is more {{flexible}} than {{other forms of}} digital signatures such as Pretty Good Privacy and <b>Cryptographic</b> <b>Message</b> <b>Syntax,</b> {{because it does not}} operate on binary data, but on the XML Infoset, allowing to work on subsets of the data, having various ways to bind the signature and signed information, and perform transformations. Another core concept is canonicalization, that is to sign only the [...] "essence", eliminating meaningless differences like whitespace and line endings.|$|E
50|$|S/MIME (Secure/Multipurpose Internet Mail Extensions) is a {{standard}} for public key encryption and signing of MIME data. S/MIME is on an IETF standards track and defined {{in a number of}} documents, most importantly RFCs 3369, 3370, 3850 and 3851. It was originally developed by RSA Data Security Inc. and the original specification used the IETF MIME specification with the de facto industry standard PKCS#7 secure message format. Change control to S/MIME has since been vested in the IETF and the specification is now layered on <b>Cryptographic</b> <b>Message</b> <b>Syntax,</b> an IETF specification that is identical in most respects with PKCS #7. S/MIME functionality is built into the majority of modern email software and interoperates between them.|$|E
30|$|These are {{insufficient}} {{for the case}} of composite message parsing as, in real life situations, protocol stacks may use a mix of message formats that originate from custom-made, CFG, DSL and IDL generators. Hence, message parser composition must deal with the composition of heterogeneous <b>message</b> <b>syntaxes</b> and hence parsers.|$|R
5000|$|There {{are some}} key words {{related to this}} norm: Securities, Messages, Dictionaries, Databases, Data layout, Data organization, Data processing, banking documents, finance, {{electronic}} data interchange, Electronic <b>messaging,</b> <b>Syntax,</b> Character sets, Control characters, Information separators, Sets of data, Data blocks, Codes, Numerical designations, Tags (data processing), Data, Data elements, Coding (data conversion), Access, EDIFACT, Data transmission ...|$|R
50|$|Research areas: <b>cryptographic</b> algorithms, <b>message</b> protocols, and coding {{techniques}} to enhance enterprise and mobile applications.|$|R
40|$|Using SHA 2 Algorithms with <b>Cryptographic</b> <b>Message</b> <b>Syntax</b> This {{document}} {{describes the}} conventions {{for using the}} Secure Hash Algorithm (SHA) message digest algorithms (SHA- 224, SHA- 256, SHA- 384, SHA- 512) with the <b>Cryptographic</b> <b>Message</b> <b>Syntax</b> (CMS). It also describes the conventions for using these algorithms with the CMS an...|$|E
40|$|<b>Cryptographic</b> <b>Message</b> <b>Syntax</b> (CMS) This {{document}} {{describes the}} <b>Cryptographic</b> <b>Message</b> <b>Syntax</b> (CMS). This syntax {{is used to}} digitally sign, digest, authenticate, or encrypt arbitrary message content. Status of This Memo This document specifies an Internet standards track protocol for the Internet community, and requests discussion and suggestions for improvements. Please refer to the current edition of the "Internet Official Protocol Standards " (STD 1) for the standardization state and status of this protocol. Distribution of this memo is unlimited. Copyright and License Notice Copyright (c) 2009 IETF Trust and the persons identified as th...|$|E
40|$|This {{document}} specifies an Internet standards track {{protocol for}} the Internet community, and requests discussion {{and suggestions for}} improvements. Please refer to the current edition of the "Internet Official Protocol Standards " (STD 1) for the standardization state and status of this protocol. Distribution of this memo is unlimited. Copyright Notice Copyright (C) The Internet Society (1999). All Rights Reserved. This document describes the <b>Cryptographic</b> <b>Message</b> <b>Syntax.</b> This syntax is used to digitally sign, digest, authenticate, or encrypt arbitrary messages. The <b>Cryptographic</b> <b>Message</b> <b>Syntax</b> is derived from PKCS # 7 version 1. 5 as specified in RFC 2315 [PKCS# 7]. Wherever possible, backward compatibility is preserved; however, changes were necessary to accommodate attribute certificate transfer and key agreemen...|$|E
3000|$|We {{assume that}} senders learn whether their {{messages}} were ultimately delivered, but not who dropped undelivered messages. This {{is consistent with}} networks in which delivered messages solicit unforgeable, direct responses from recipients. For example, object lookups in Chord solicit a direct response that does not use the overlay, {{and that can be}} authenticated via <b>cryptographic</b> <b>message</b> signing. This information allows each peer i to estimate a running mean E[P [...]...|$|R
40|$|Chameleon {{signatures}} {{are based}} on well established hashand -sign paradigm, where a chameleon hash function is used to compute the <b>cryptographic</b> <b>message</b> digest. Chameleon signatures simultaneously provide the properties of non-repudiation and non-transferability for the signed message, i. e., the designated recipient is capable of verifying {{the validity of the}} signature, but cannot disclose the contents of the signed information to convince any third party without the signer's consent...|$|R
40|$|We {{define a}} new mode of {{operation}} for block encryption which in addition to assuring confidentiality also assures message integrity. In contrast, previously for message integrity a separate pass was required to compute a <b>cryptographic</b> <b>message</b> authentication code (MAC). The new {{mode of operation}}, called Integrity Aware CBC (IACBC), requires a total of m + log m block encryptions on a plaintext of length m blocks. The well known CBC (cipher block chaining) mode requires...|$|R
40|$|This {{document}} specifies a new ASN. 1 type for representing time: BinaryTime. This document also specifies {{an alternate}} to the signing-time attribute {{for use with}} the <b>Cryptographic</b> <b>Message</b> <b>Syntax</b> (CMS) SignedData and AuthenticatedData content types; the binary-signing-time attribute uses BinaryTime. CMS and the signing-time attribute are defined in RFC 5652...|$|E
40|$|Multiple Signatures in <b>Cryptographic</b> <b>Message</b> <b>Syntax</b> (CMS) <b>Cryptographic</b> <b>Message</b> <b>Syntax</b> (CMS) SignedData {{includes}} the SignerInfo structure to convey per-signer information. SignedData supports multiple signers and multiple signature algorithms per signer with multiple SignerInfo structures. If a signer attaches {{more than one}} SignerInfo, there are concerns that an attacker could perform a downgrade attack by removing the SignerInfo(s) with the â€™strongâ€™ algorithm(s). This document defines the multiple-signatures attribute, its generation rules, and its processing rules to allow signers to convey multiple SignerInfo objects while protecting against downgrade attacks. Additionally, this attribute may assist during periods of algorithm migration. Status of This Memo This is an Internet Standards Track document. This document {{is a product of}} the Internet Engineering Task Force (IETF). It represents the consensus of the IETF community. It has received public review and has been approved for publication by th...|$|E
40|$|Asymmetric Key Packages This {{document}} {{defines the}} syntax for private-key {{information and a}} content type for it. Private-key information includes a private key for a specified public-key algorithm {{and a set of}} attributes. The <b>Cryptographic</b> <b>Message</b> <b>Syntax</b> (CMS), as defined in RFC 5652, can be used to digitally sign, digest, authenticate, or encrypt the asymmetric key format content type. This document obsoletes RF...|$|E
50|$|From a legal perspective, {{the use of}} markup {{language}} embedded within a mostly legal prose document leads to reduced transaction costs, faster dispute resolution, better enforceability and enhanced transparency. From a computing perspective, the Ricardian contract is a software design pattern to digitize documents and have them participate within financial transactions, such as payments, without losing any of {{the richness of the}} contracting tradition. Publication of the content and reference to that content by the unique <b>cryptographic</b> <b>message</b> digest eliminates frauds based on multiple presentations.|$|R
40|$|Sphinx is a <b>cryptographic</b> <b>message</b> format used {{to relay}} anonymized {{messages}} within a mix network. It is more compact than any comparable scheme, and supports {{a full set}} of security features: indistinguishable replies, hiding the path length and relay position, as well as providing unlinkability for each leg of the messageâ€™s journey over the network. We prove the full cryptographic security of Sphinx in the random oracle model, and we describe how it can be used as an efficient drop-in replacement in deployed remailer systems. 1...|$|R
40|$|The local Message Bus (Mbus) is a {{light-weight}} message-oriented coordination {{protocol for}} group communication between application components. The Mbus provides automatic location of communication peers, subject based addressing, reliable message transfer and {{different types of}} communication schemes. The protocol is layered on top of IP multicast and is specified for IPv 4 and IPv 6. The IP multicast scope is limited to link-local multicast. This document specifies the Mbus protocol, i. e., <b>message</b> <b>syntax,</b> addressing and transport mechanisms...|$|R
