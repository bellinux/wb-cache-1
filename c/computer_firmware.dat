7|36|Public
50|$|Open Firmware, or OpenBoot in Sun Microsystems parlance, is a {{standard}} defining the interfaces of a <b>computer</b> <b>firmware</b> system, formerly endorsed by the Institute of Electrical and Electronics Engineers (IEEE). It originated at Sun, and {{has been used by}} Sun, Apple, IBM, ARM and most other non-x86 PCI chipset vendors. Open Firmware allows the system to load platform-independent drivers directly from the PCI card, improving compatibility.|$|E
50|$|A ROM image, or ROM file, is a {{computer}} file which contains {{a copy of the}} data from a read-only memory chip, often from a video game cartridge, {{a computer}}'s firmware, or from an arcade game's main board. The term is frequently used in the context of emulation, whereby older games or <b>computer</b> <b>firmware</b> are copied to ROM files on modern computers and can, using a piece of software known as an emulator, be run on a computer.|$|E
5000|$|Another {{approach}} has been to load malicious code onto smartcards or receivers; these programs are intended to detect tampered cards and maliciously damage the cards or corrupt the contents of non-volatile memories within the receiver. This particular Trojan horse attack is often used as an ECM (electronic countermeasure) by providers, especially in North America where cards and receivers are sold by the providers themselves and are easy targets for insertion of backdoors in their <b>computer</b> <b>firmware.</b> The most famous ECM incident was the Black Sunday attack launched against tampered DirecTV [...] "H" [...] on 3 January 21, 2001 and intended to destroy the cards by overwriting a non-erasable part of the cards internal memory in order to lock the processor into an endless loop.|$|E
50|$|Advanced power {{management}} (APM) is an API developed by Intel and Microsoft and released in 1992 which enables an operating system running an IBM-compatible personal computer {{to work with}} the BIOS (part of the <b>computer's</b> <b>firmware)</b> to achieve {{power management}}.|$|R
50|$|Ntdetect.com {{is used on}} {{computers}} that use BIOS <b>firmware.</b> <b>Computers</b> with Extensible <b>Firmware</b> Interface, such as IA-64, use a method of device-detection that is not tied to the operating system.|$|R
50|$|The Platform Initialization Specification (PI Specification) is a {{specification}} {{published by}} the Unified EFI Forum that describes the internal interfaces between different parts of <b>computer</b> platform <b>firmware.</b> This allows for more interoperability between firmware components from different sources. This specification is normally, but not by requirement, {{used in conjunction with}} the UEFI specification.|$|R
5000|$|The {{concept of}} full product NRE as {{described}} above may lead readers to believe that NRE expenses are necessarily high. However, Focused NRE wherein small amounts of NRE money can yield large returns by making existing product changes is an option to consider as well. A small adjustment to an existing assembly may be considered, {{in order to use}} a less expensive or improved subcomponent or to replace a subcomponent which is no longer available. In the world of embedded firmware, NRE may be invested in code development to fix problems or to add features where the costs to implement are a very small percentages of an immediate return. Chrysler found such a way to repair a transmission problem by investing trivial NRE dollars into <b>computer</b> <b>firmware</b> to fix a mechanical problem to save some {{tens of millions of dollars}} in mechanical repairs to transmissions in the field.|$|E
40|$|Data logging {{capability}} of a previously developed self contained cough recorder using an accelerometer as the sensing element is improved {{by using a}} secure digital memory card for later retrieval on a <b>computer.</b> <b>Firmware</b> is developed to enhance the functionality of the cough recorder. Existing libraries are modified for increased write rates. Increased writing speed allows 8 -bit sampling at rates exceeding 8 kHz, allowing for detailed time and frequency domain analysis. Additional features have also been developed to enable easy management of recordings, such as a file system compatibility with Microsoft Windows., and unique file names for each recording...|$|E
40|$|Most {{manufacturing}} processes require physical pointwise {{positioning of the}} components or tools from one location to another. Typical mechanical systems utilize either stop-and-go or fixed feed-rate procession to accomplish the task. The first approach achieves positional accuracy but prolongs overall time and increases wear on the mechanical system. The second approach sustains the throughput but compromises positional accuracy. A <b>computer</b> <b>firmware</b> approach has been developed to optimize this point wise mechanism by utilizing programmable interrupt controls to synchronize engineering processes 'on the fly'. This principle has been implemented in an eddy current imaging system to demonstrate the improvement. Software programs were developed that enable a mechanical controller card to transmit interrupts to a system controller as a trigger signal to initiate an eddy current data acquisition routine. The advantages are: (1) optimized {{manufacturing processes}}, (2) increased throughput of the system, (3) improved positional accuracy, and (4) reduced {{wear and tear on}} the mechanical system...|$|E
5000|$|Before the {{inclusion}} of integrated circuits, other firmware devices included a discrete semiconductor diode matrix. The Apollo guidance <b>computer</b> had <b>firmware</b> consisting of a specially manufactured core memory plane, called [...] "core rope memory", where data were stored by physically threading wires through (1) or around (0) the core storing each data bit.|$|R
50|$|The IBM Personal <b>Computer</b> {{included}} ROM-based <b>firmware</b> {{called the}} BIOS; {{one of the}} functions of that firmware was to perform a power-on self test when the machine was powered up, and then to read software from a boot device and execute it. Firmware compatible with the BIOS on the IBM Personal Computer is used in IBM PC compatible <b>computers.</b> The Extensible <b>Firmware</b> Interface was developed by Intel, originally for Itanium-based machines, and later also used {{as an alternative to}} the BIOS in x86-based machines, including Apple Macs using Intel processors.|$|R
50|$|Advanced RISC Computing (ARC) is a {{specification}} {{promulgated by}} a defunct consortium of computer manufacturers (the Advanced Computing Environment project), setting forth a standard MIPS RISC-based <b>computer</b> hardware and <b>firmware</b> environment.|$|R
40|$|In {{order to}} study dynamic effects in {{accelerator}} magnets, {{such as the}} decay of the magnetic field during the dwell at injection and the rapid so-called ''snapback'' {{during the first few}} seconds of the resumption of the energy ramp, a fast continuous harmonics measurement system was required. A new magnetic field measurement system, based on the use of digital signal processors (DSP) and Analog to Digital (A/D) converters, was developed and prototyped at Fermilab. This system uses Pentek 6102 16 bit A/D converters and the Pentek 4288 DSP board with the SHARC ADSP- 2106 family digital signal processor. It was designed to acquire multiple channels of data with a wide dynamic range of input signals, which are typically generated by a rotating coil probe. Data acquisition is performed under a RTOS, whereas processing and visualization are performed under a host <b>computer.</b> <b>Firmware</b> code was developed for the DSP to perform fast continuous readout of the A/D FIFO memory and integration over specified intervals, synchronized to the probe's rotation in the magnetic field. C, C++ and Java code was written to control the data acquisition devices and to process a continuous stream of data. The paper summarizes the characteristics of the system and presents the results of initial tests and measurements...|$|E
25|$|An {{operating}} system (OS) is system software that manages computer {{hardware and software}} resources and provides common services for computer programs. All <b>computer</b> programs, excluding <b>firmware,</b> require an {{operating system}} to function.|$|R
50|$|The remote, private, {{and secure}} network might be organization's {{in-house}} network or a cloud service. A Secure End Node typically involves authentication of (i.e. establishing trust in) the remote <b>computer's</b> hardware, <b>firmware,</b> software, and/or user. In the future, the device-user's environment (location, activity, other people, etc.) as communicated {{by means of}} its (or the network's) trusted sensors (camera, microphone, GPS, radio, etc.) could provide another factor of authentication.|$|R
40|$|Basic informations on HelenOS {{operating}} system (support functions, scheduler, memory management, application support, device driver environment, inter-process communication). IA- 64 processor overview (instruction computing - EPIC, register stack engine - RSE, system registers, protection, memory access, interruption, I/O, inter-processor communication, firmware - PAL). IA- 64 <b>computers</b> environment (<b>firmware</b> - SAL, lagacy devices, USB). Overview of implemented changes (loader, boot, I/O, interruption, video output, keyboard input, multiprocessing). Evaluation of achievements and misses of implementation...|$|R
50|$|The Power Management Unit (PMU) is a {{microcontroller}} {{that governs}} power functions of digital platforms. This microchip has many similar components {{to the average}} <b>computer,</b> including <b>firmware</b> and software, memory, a CPU, input/output functions, timers to measure intervals of time, and analog to digital converters to measure the voltages of the main battery or power source of the computer. The PMU {{is one of the}} few items to remain active even when the computer is completely shut down, powered by the backup battery.|$|R
5000|$|With {{the release}} of Windows 8 in October 2012, Microsoft's {{certification}} requirements now require that <b>computers</b> include <b>firmware</b> that implements the UEFI specification. Furthermore, if the computer supports the [...] "Connected Standby" [...] feature of Windows 8 (which allows devices to have power management comparable to smartphones, with an almost instantaneous return from standby mode), then the firmware is not permitted to contain a Compatibility Support Module (CSM). As such, systems that support Connected Standby are incapable of booting Legacy BIOS operating systems.|$|R
50|$|Both {{versions}} {{feature a}} stereo output, headphone output and a USB port for <b>computer</b> control and <b>firmware</b> updates. The desktop unit has MIDI In and the keyboard unit has both In and Out. The desktop unit {{is powered by}} a wall wart power supply.|$|R
50|$|The latest {{firmware}} version, which {{surfaced in}} December 2003, is v2.3.3-alpha; the latest stable version is v2.3.2, introduced in mid-2001. Initially, the functions {{provided by the}} player were basic: when music was played back, selecting another track would immediately start this track and stop the current one; playlists had to be created on the computer; files could only be uploaded to the PJB, but not downloaded back to the <b>computer.</b> New <b>firmware</b> versions came out regularly, but were mostly bug fixes with very few new functions introduced.|$|R
5000|$|Because {{much of the}} Toolbox is {{implemented}} in ROM, alongside the <b>computer's</b> <b>firmware,</b> it was convenient {{to use as a}} bootloader environment. In conjunction with resources stored on the ROM chip, the Toolbox could turn the screen gray, show a dialog box with the signature [...] "Welcome to Macintosh" [...] greeting, and display the mouse cursor. The capability to interact with the user without loading an operating system is best known as a Basic Input/Output System, although Toolbox facilities were not used to provide the interactive diagnostic utilities familiar in IBM PC compatibles. Indeed, in using the Toolbox to help boot the machine, a rudimentary Macintosh environment was initialized long before loading the System suitcase from disk (in fact before ROMs on NuBus cards were executed), which is when the decision to use 24-bit or 32-bit addressing has to be made (hence why the System 7's support for 32-bit addressing requires 32-bit clean ROMs, as older Mac ROMs did not have support for this). The need for a BIOS diagnostics as in the IBM PC compatibles was not widely necessary since Macintosh handled most of its diagnostics in POST and automatically reported errors via the [...] "Sad Mac" [...] codes.|$|R
5000|$|Small lithium {{batteries}} are very {{commonly used in}} small, portable electronic devices, such as PDAs, watches, camcorders, digital cameras, thermometers, calculators, personal <b>computer</b> BIOS (<b>firmware),</b> communication equipment and remote car locks. They are available in many shapes and sizes, with a common variety being the 3 volt [...] "coin" [...] type manganese variety, typically 20 mm in diameter and 1.6-4 mm thick. The heavy electrical demands {{of many of these}} devices make {{lithium batteries}} a particularly attractive option. In particular, lithium batteries can easily support the brief, heavy current demands of devices such as digital cameras, and they maintain a higher voltage for a longer period than alkaline cells.|$|R
50|$|An {{automated}} {{information system}} (AIS) is an assembly of <b>computer</b> hardware, software, <b>firmware,</b> or {{any combination of}} these, configured to accomplish specific information-handling operations, such as communication, computation, dissemination, processing, and storage of information. Included are computers, word processing systems, networks, or other electronic information handling systems, and associated equipment. Management information systems are a common example of automated information systems.|$|R
5000|$|Compatible with CompactFlash cards Type I and Type II, {{including}} IBM (and Hitachi's) MicroDrive {{hard drives}} up to 4 GB. Firmware v2.0 {{is required for}} body to recognize cards/drives larger than 2 GB, and cards/drives must be initially formatted as FAT32 in a <b>computer.</b> (Early v1.x <b>firmware</b> supported FAT16 only, so without the firmware upgrade the D100 will {{only be able to}} use or [...] "see" [...] 2 GB of available memory on larger cards.) ...|$|R
50|$|A {{hypervisor}} or {{virtual machine}} monitor (VMM) is <b>computer</b> software, <b>firmware</b> or hardware that creates and runs virtual machines. A computer on which a hypervisor runs one or more virtual machines is called a host machine, and each virtual machine is called a guest machine. The hypervisor presents the guest operating systems with a virtual operating platform and manages {{the execution of the}} guest operating systems. Multiple instances of a variety of operating systems may share the virtualized hardware resources: for example, Linux, Windows, and macOS instances can all run on a single physical x86 machine. This contrasts with operating-system-level virtualization, where all instances (usually called containers) must share a single kernel, though the guest operating systems can differ in user space, such as different Linux distributions with the same kernel.|$|R
5000|$|With {{the release}} of ProDOS version 1.01 and higher, a check was added {{to see if it}} was running on an {{official}} Apple-manufactured computer. If the word [...] "Apple" [...] is found in the <b>computer's</b> ROM <b>firmware,</b> ProDOS will load up as normal. If anything else is found (e.g. [...] "Golden", [...] "Franklin", [...] "Elite") ProDOS refuses to run, locking up at the boot splash screen. This measure was taken by Apple Computer to discourage use of unlicensed Apple II clones. It is still possible to run newer versions of ProDOS on clones; however, users have to apply a small byte patch to every successive version of ProDOS. Some users go as far as replacing their physical ROM chip(s) with an illegal copied version of Apple's own ROM; or, failing that, a custom patched ROM with [...] "Apple" [...] added in the name.|$|R
50|$|A boot {{sector is}} {{a region of}} a hard disk, floppy disk, optical disc, or other data storage device that {{contains}} machine code to be loaded into random-access memory (RAM) by a <b>computer</b> system's built-in <b>firmware.</b> The purpose of a boot sector is to allow the boot process of a computer to load a program (usually, but not necessarily, an operating system) stored on the same storage device. The location {{and size of the}} boot sector (perhaps corresponding to a logical disk sector) is specified by the design of the computing platform.|$|R
50|$|The Radio-86RK (Радио-86РК) is a build-it-yourself home {{computer}} designed in Soviet Union. It {{was featured in}} the popular Radio (Радио) magazine for radio hams and electronics hobbyists in 1986. The letters RK in the title stands for the words Radio ham's Computer (Радиолюбительский компьютер). Design of the computer was published {{in a series of}} articles describing its logical structure, electrical circuitry, drawings of printed circuit boards and <b>firmware.</b> <b>Computer</b> could be built entirely out of standard off-the-shelf parts. Later it was also available in a kit form as well as fully assembled form.|$|R
25|$|Some modern amateur {{transceivers}} have embedded <b>computers</b> with <b>firmware</b> {{which is}} executed {{to provide the}} functions and features of the transceiver. This software must be provided by the original manufacturer of the equipment. Another type of software is that required to control a receiver (or transceiver) without a front panel provided. Examples of this are the Kenwood TS-B2000 and the Ten-Tec Pegasus; both transceivers are sold with PC software to provide the human interface for operation. Most transceivers with front control panels (and many receivers popular among shortwave listeners) have a computer interface such as a serial port, USB or Ethernet port. These ports are useful for satellite-tracking frequency control (Doppler tuning), station logging, digital operation, internet and special-needs accessibility. In many cases, the software adds improved or extra functions and features beyond that provided by the original design. For this reason, some operators purchase radio-control software for non-computerized operation even if their radio has a front control panel.|$|R
40|$|The <b>computer</b> {{software}} and <b>firmware</b> industries spend an enormous {{sum of money}} each year {{on the development of}} new programs. Developing, marketing and maintaing an individual program may involve a substantial investment. A potential for profit obviously exists if a successful program can be copied, thereby saving development and other related expenses, or if a copmuter user can run a program wihtout paying the usual fees to its owner. It is hardly surprising that considerable attention is now being focused on the means by which owners may secure legal protection against the copying or unauthorized use of their programs...|$|R
50|$|However, {{software}} carries its own reliability risks. Reliance on {{a software}} program to trigger an alarm assumes that the analog signal, the programmer's logic code and HMI, the PLC or PC running the programs, and the interaction between all of the above, are all entirely trustworthy. This is exacerbated by frequently changing <b>computer</b> hardware & <b>firmware</b> platforms {{and the need to}} modify existing software. Alternatively new annunciator panels are utilizing long lasting and bright LEDs that significantly reduce the cost and maintenance of the panels. These new versions of the traditional system are still preferred over computer based systems especially in critical plants like nuclear power generation, oil and gas.|$|R
50|$|Intel Boot Guard is a {{processor}} feature that prevents the <b>computer</b> from running <b>firmware</b> images not {{released by the}} system manufacturer. When turned on, the processors verifies a signature contained in the firmware image before executing it, using the hash of the public half of the signing key, which is fused into the system's Platform Controller Hub (PCH) by the system manufacturer (not by Intel). Intel Boot Guard is an optional processor feature, meaning {{that it does not}} need to be activated during the system manufacturing. As a result, Intel Boot Guard, when activated, makes it impossible for end users to install replacement firmware such as Coreboot.|$|R
50|$|On IBM PC-compatible <b>computers,</b> the {{bootstrapping}} <b>firmware</b> (contained {{within the}} ROM BIOS) loads and executes the master boot record. The PC/XT (type 5160) used an Intel 8088 microprocessor. In order to remain compatible, all x86 architecture systems {{start with the}} microprocessor in an operating mode referred to as real mode. The BIOS reads the MBR from the storage device into physical memory, and then it directs the microprocessor {{to the start of}} the boot code. Since the BIOS runs in real mode, the processor is in real mode when the MBR program begins to execute, and so the beginning of the MBR is expected to contain real mode machine language instructions.|$|R
50|$|The {{main product}} of the ACE group is the Advanced RISC Computing specification, or ARC. It was {{initially}} based on MIPS-based <b>computer</b> hardware and <b>firmware</b> environment. Although ACE went defunct, and no computer was ever manufactured which fully complied with the ARC standard, the ARC system still exerts a widespread legacy in that all Microsoft Windows NT-based operating systems (such as Windows XP) used ARC conventions for naming boot devices before Windows Vista. Further, SGI used {{a modified version of}} the ARC firmware (which it calls ARCS) in its systems. All SGI computers which run IRIX 6.1 or later (such as the Indy, Octane, etc.) boot from an ARCS console (which uses the same drive naming conventions as Windows, accordingly).|$|R
50|$|Turning to Judge Mayer’s arguments, {{the blog}} observes:It is totally fair {{to have a}} policy debate about the purpose of our patent laws, what they should protect, and how the patent laws coexist with the Constitution, and with other laws, {{including}} copyright law. But setting aside {{whether you agree or}} disagree with Judge Mayer’s policy prescription, I see the biggest problem as this: I have not yet seen a plausibly practical suggestion for how “software” could be deemed patent-ineligible, while other kinds of <b>computer</b> inventions, including <b>firmware,</b> control systems, and combinations of software and hardware, could still be protected. Above all, what I would like to see is more certain law on which I could rely to counsel my clients. If the Mayo/Alice test, at least for computer inventions, could be articulated in a way so as to draw a bright line, I would be all for taking a serious look.|$|R
5000|$|Leopard can run on {{the later}} flat-panel iMac G4s, the first iMac G5, second iMac G5 (with the ambient light sensor), third iMac G5 (with iSight), iMac Intel Core Duo and iMac Intel Core 2 Duo, PowerBook G4, Power Mac G4, Power Mac G5, iBook G4, MacBook, MacBook Pro, MacBook Air, Mac Pro, Mac Mini, Xserve, Xserve G5, Xserve RAID, Macintosh Server G4, and later eMac models. Leopard can run on older {{hardware}} {{as long as they}} have a G4 upgrade installed running at the 867 MHz or faster, have at least 9 GB free of hard drive space, 512 MB RAM and have a DVD drive. Leopard however will not {{run on the}} 900 MHz iBook G3 models even though they exceed the minimum 867 MHz requirement. This is due to the lack of AltiVec support in the G3 line of processors. Leopard can be [...] "hacked" [...] (see below) to install on these G3 and pre-867 MHz G4 machines but the system may behave erratically and many of the programs, features, and functions may not work properly or at all. As of Mid 2010, some Apple <b>computers</b> have <b>firmware</b> factory installed which will no longer allow installation of Mac OS X Leopard. These computers only allow installation of Mac OS X Snow Leopard. However, some computers (such as the 2011 model of the Mac mini) can have Leopard installed on them without hacking.|$|R
