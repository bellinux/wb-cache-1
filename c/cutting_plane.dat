956|574|Public
25|$|In the 1950s and 1960s, {{the problem}} became {{increasingly}} popular in scientific circles in Europe and the USA after the RAND Corporation in Santa Monica offered prizes for steps {{in solving the}} problem. Notable contributions were made by George Dantzig, Delbert Ray Fulkerson and Selmer M. Johnson from the RAND Corporation, who expressed the problem as an integer linear program and developed the <b>cutting</b> <b>plane</b> method for its solution. They wrote what is considered the seminal paper on the subject in which with these new methods they solved an instance with 49 cities to optimality by constructing a tour and proving that no other tour could be shorter. Dantzig, Fulkerson and Johnson, however, speculated that given a near optimal solution {{we may be able}} to find optimality or prove optimality by adding a small amount of extra inequalities (cuts). They used this idea to solve their initial 49 city problem using a string model. They found they only needed 26 cuts to come to a solution for their 49 city problem. While this paper did not give an algorithmic approach to TSP problems, the ideas that lay within it were indispensable to later creating exact solution methods for the TSP, though it would take 15 years to find an algorithmic approach in creating these cuts. As well as <b>cutting</b> <b>plane</b> methods, Dantzig, Fulkerson and Johnson used branch and bound algorithms perhaps for the first time.|$|E
25|$|Miter gauge: The table has {{one or two}} slots (grooves) {{running from}} front to back, also {{parallel}} to the <b>cutting</b> <b>plane</b> of the blade. These miter slots (or miter grooves) are used to position and guide either a miter gauge (also known as a crosscut fence) or crosscut sled. The miter gauge is usually set to be at 90 degrees to {{the plane of the}} blade's cut, to cause the cut made in the workpiece to be made at a right angle. The miter gauge can also be adjusted to cause the cut to be made at a precisely controlled angle (a so-called miter cut).|$|E
2500|$|To {{formulate}} the Eulerâ€“Cauchy stress principle, {{consider an}} imaginary surface [...] passing through an internal material point [...] dividing the continuous body into two segments, {{as seen in}} Figure 2.1a or 2.1b (one may use either the <b>cutting</b> <b>plane</b> diagram or the diagram with the arbitrary volume inside the continuum enclosed by the surface [...] ).|$|E
40|$|In {{this note}} {{we argue that}} {{semantic}} <b>cutting</b> <b>planes</b> refutations are stronger than syntactic ones. In particular, we give a formula for which any refutation in syntactic <b>cutting</b> <b>planes</b> requires exponential length, {{while there is a}} polynomial length refutation in semantic <b>cutting</b> <b>planes.</b> This means that syntactic <b>cutting</b> <b>planes</b> does not p-simulate (nor simulate) semantic <b>cutting</b> <b>planes.</b> We also give a pair of incompatible <b>cutting</b> <b>planes</b> lines which require exponential length to be refuted in syntactic <b>cutting</b> <b>planes.</b> ...|$|R
40|$|In this paper, {{we compare}} the {{strength}} of the semantic and syntactic version of the <b>cutting</b> <b>planes</b> proof system. First, we show that the lower bound technique of [22] applies also to semantic cutting planes: the proof system has feasible interpolation via monotone real circuits, which gives an exponential lower bound on lengths of semantic <b>cutting</b> <b>planes</b> refutations. Second, we show that semantic refutations are stronger than syntactic ones. In particular, we give a formula for which any refutation in syntactic <b>cutting</b> <b>planes</b> requires exponential length, while there is a polynomial length refutation in semantic <b>cutting</b> <b>planes.</b> In other words, syntactic <b>cutting</b> <b>planes</b> does not p-simulate semantic <b>cutting</b> <b>planes.</b> We also give two incompatible integer inequalities which require exponential length refutation in syntactic <b>cutting</b> <b>planes.</b> Finally, we pose the following problem, which arises in connection with semantic inference of arity larger than two: can every multivariate non-decreasing real function be expressed as a composition of non-decreasing real functions in two variables...|$|R
40|$|An {{algorithm}} {{of constructing}} two <b>cutting</b> <b>planes</b> localizing {{the set of}} {{solutions to the problem}} of convex function e-minimum. This algorithm provides for as small as needed angle between <b>cutting</b> <b>planes.</b> It is based on the procedure of one-dimensional descent. The results of numerical experiments are given...|$|R
2500|$|... : Table saws {{commonly}} have a fence (guide) {{running from}} the front of the table (the side nearest the operator) to the back, parallel to the <b>cutting</b> <b>plane</b> of the blade. The distance of the fence from the blade can be adjusted, which determines where on the workpiece the cut is made. The fence is commonly called a [...] "rip fence" [...] referring to its use in guiding the workpiece during the process of making a rip cut. Most table saws come standard with a rip fence, but some high end saws are available without a fence so a fence of the user's choice can be purchased separately.|$|E
50|$|The {{shape of}} the {{cross-section}} of a solid may depend upon {{the orientation of the}} <b>cutting</b> <b>plane</b> to the solid. For instance, while all the cross-sections of a ball are disks, the cross-sections of a cube depend on how the <b>cutting</b> <b>plane</b> is related to the cube. If the <b>cutting</b> <b>plane</b> is perpendicular to a line joining the centers of two opposite faces of the cube, the cross-section will be a square, however, if the <b>cutting</b> <b>plane</b> is perpendicular to a diagonal of the cube joining opposite vertices, the cross-section can be either a point, a triangle or a hexagon.|$|E
50|$|The related {{branch and}} cut method {{combines}} the <b>cutting</b> <b>plane</b> and {{branch and bound}} methods. In any subproblem, it runs the <b>cutting</b> <b>plane</b> method until no more cutting planes can be found, and then branches {{on one of the}} remaining fractional variables.|$|E
40|$|We {{study the}} Chvatal rank of polytopes as a {{complexity}} measure of unsatisfiable sets of clauses. Our first result establishes {{a connection between}} the Chvatal rank and the minimum refutation length in the <b>cutting</b> <b>planes</b> proof system. The result implies that length lower bounds for <b>cutting</b> <b>planes,</b> or even for tree-like <b>cutting</b> <b>planes,</b> imply rank lower bounds. We also show that the converse implication is false. Rank lower bounds don't imply size lower bounds. In fact we give an example of a class of formulas that have high rank and small size...|$|R
40|$|We {{investigate}} {{the use of}} <b>cutting</b> <b>planes</b> for integer programs with general integer variables. We show how <b>cutting</b> <b>planes</b> arising from knapsack inequalities can be generated and lifted {{as in the case}} of 0 - 1 variables. We also explore the use of Gomory's mixed integer cuts. We address both theoretical and computational issues and show how to embed these <b>cutting</b> <b>planes</b> in a branch-and-bound framework. We compare results obtained by using our cut generation routines in two existing systems with a commercially available branch-and-bound code on a range of test problems arising from practical applications...|$|R
40|$|Abstract. An {{exponential}} {{lower bound}} for the size of tree-like <b>cutting</b> <b>planes</b> refutations of a certain family of conjunctive normal form (CNF) formulas with polynomial size resolution refutations is proved. This implies an exponential separation between the tree-like versions and the dag-like versions of resolution and <b>cutting</b> <b>planes.</b> In both cases only superpolynomial separation...|$|R
50|$|Besides Dynamic Programming, Linear {{programming}} and Branch-bound algorithm are precise algorithms that can solve TSP. Linear programming {{applies to the}} <b>cutting</b> <b>plane</b> method in the integer programming, i.e. solving the LP formed by two constraints in the model and then seeking the <b>cutting</b> <b>plane</b> by adding inequality constraint to gradually converge at an optimal solution. When people apply this method to find a <b>cutting</b> <b>plane,</b> they often depend on experience. So this method is seldom deemed as a general method.|$|E
5000|$|Section, {{a view of}} the {{interior}} at a particular <b>cutting</b> <b>plane</b> ...|$|E
50|$|The term {{cylinder}} {{can also}} mean the lateral {{surface of a}} solid cylinder (see Cylinder (geometry)). If cylinder is used in this sense, the above paragraph would read as follows: A plane section of a right circular cylinder of finite length is a circle if the <b>cutting</b> <b>plane</b> is perpendicular to the cylinder's axis of symmetry, or an ellipse if it is neither parallel nor perpendicular to that axis. If the <b>cutting</b> <b>plane</b> {{is parallel to the}} axis the plane section consists of a pair of parallel line segments unless the <b>cutting</b> <b>plane</b> is tangent to the cylinder, in which case, the plane section is a single line segment.|$|E
40|$|We {{study the}} space {{complexity}} of the <b>cutting</b> <b>planes</b> proof system, in which the lines in a proof are integral linear inequalities. We measure the space used by a refutation {{as the number of}} linear inequalities that need to be kept on a blackboard while verifying it. We show that any unsatisfiable set of linear inequalities has a <b>cutting</b> <b>planes</b> refutation in space five. This is in contrast to the weaker resolution proof system, for which the analogous space measure has been well-studied and many optimal linear lower bounds are known. Motivated by this result we consider a natural restriction of <b>cutting</b> <b>planes,</b> in which all coefficients have size bounded by a constant. We show that there is a CNF which requires super-constant space to refute in this system. The system nevertheless already has an exponential speed-up over resolution with respect to size, and we additionally show that it is stronger than resolution with respect to space, by constructing constant-space <b>cutting</b> <b>planes</b> proofs, with coefficients bounded by two, of the pigeonhole principle. We also consider variable instance space for <b>cutting</b> <b>planes,</b> where we count the number of instances of variables on the blackboard, and total space, where we count the total number of symbols...|$|R
40|$|This paper {{considers}} {{a family of}} <b>cutting</b> <b>planes,</b> recently developed for mixed 0 â€“ 1 polynomial programs and shows that they define facets for the maximum edge-weighted clique problem. There exists a polynomial time exact separation algorithm for these inequalities. The result of this paper {{may contribute to the}} development of more efficient algorithms for the maximum edge-weighted clique problem that use <b>cutting</b> <b>planes...</b>|$|R
40|$|In {{order to}} gain insight into the quality of semidefinite relaxations of {{constrained}} quadratic 0 / 1 programming problems we study the quadratic knapsack problem. We investigate several basic semidefinite relaxations of this problem and compare their strength in theory and in practice. Various possibilities to improve these basic relaxations by <b>cutting</b> <b>planes</b> are discussed. The <b>cutting</b> <b>planes</b> either arise from quadratic representations of linear inequalities or from linear inequalities in the quadratic model. In particular, a large family of combinatorial cuts is introduced for the linear formulation of the knapsack problem in quadratic space. Computational results on a small class of practical problems illustrate the quality of these relaxations and <b>cutting</b> <b>planes...</b>|$|R
5000|$|Branch-and-cut, {{a hybrid}} between {{branch-and-bound}} and the <b>cutting</b> <b>plane</b> methods {{that is used}} extensively for solving integer linear programs.|$|E
50|$|E. Balas, S. Ceria, G. CornuÃ©jols: A Lift-and-Project <b>Cutting</b> <b>Plane</b> Algorithm for Mixed 0-1 Programs, Mathematical Programming 58, 1993; 295-324.|$|E
5000|$|Classical {{methods of}} stereology were {{limited by the}} {{requirement}} that the <b>cutting</b> <b>plane</b> be randomly oriented. Baddeley developed an alternative technique ...|$|E
40|$|The {{problem of}} {{learning}} {{the structure of}} Bayesian networks from complete discrete data with a limit on parent set size is considered. Learning is cast explicitly as an optimisation problem where {{the goal is to}} find a BN structure which maximises log marginal likelihood (BDe score). Integer programming, specifically the SCIP framework, is used to solve this optimisation problem. Acyclicity constraints are added to the integer program (IP) during solving in the form of <b>cutting</b> <b>planes.</b> Finding good <b>cutting</b> <b>planes</b> {{is the key to the}} success of the approach -the search for such <b>cutting</b> <b>planes</b> is effected using a sub-IP. Results show that this is a particularly fast method for exact BN learning...|$|R
5000|$|If {{a surface}} in a {{three-dimensional}} space {{is defined by}} a function of two variables, i.e., , the <b>plane</b> sections by <b>cutting</b> <b>planes</b> that are parallel to a coordinate plane (a plane determined by two coordinate axes) are called level curves or isolines.More specifically, <b>cutting</b> <b>planes</b> with equations of the form [...] (planes parallel to the -plane) produce plane sections that are often called contour lines in application areas.|$|R
40|$|In this paper, we {{introduce}} five {{classes of}} new valid <b>cutting</b> <b>planes</b> for the precedence-constrained (PC) and/or time-window-constrained (TW) Asymmetric Travelling Salesman Problems (ATSPs) and directed Vehicle Routing Problems (VRPs). We show that all five classes of new inequalities are facet-defining for the directed VRP-TW, under reasonable {{conditions and the}} assumption that vehicles are identical. Similar proofs can be developed for the VRP-PC. As ATSP-TW and PC-ATSP can be formulated as directed identical-vehicle VRP-TW and PC-VRP, respectively, this provides a link to study the polyhedral combinatorics for the ATSP-TW and PC-ATSP. The first four classes of these new <b>cutting</b> <b>planes</b> are cycle-breaking inequalities that are lifted from the well-known D - k and D + k inequalities (see GrÃ¶tschel and Padberg in Polyhedral theory. The traveling salesman problem: {{a guided tour of}} combinatorial optimization, Wiley, New York, 1985). The last class of new <b>cutting</b> <b>planes,</b> the TW 2 inequalities, are infeasible-path elimination inequalities. Separation of these constraints will also be discussed. We also present prelimanry numerical results to demonstrate the strengh of these new <b>cutting</b> <b>planes.</b> <br /...|$|R
50|$|Methods {{of solving}} the URPP after the {{pre-processing}} is done consist of the <b>cutting</b> <b>plane</b> algorithm and the branch & cut methodology.|$|E
5000|$|... <b>cutting</b> <b>plane</b> - are thin, medium-dashed lines, or thick {{alternately}} long- {{and double}} short-dashed {{that may be}} used to define sections for section views.|$|E
50|$|By far {{the most}} {{effective}} tool in preventing kickback is operator training. By preventing contact between the bar tip and solid objects, kickback may be avoided. By keeping their head and body out of the <b>cutting</b> <b>plane</b> of the bar, injury may be prevented if kickback occurs. A useful tip {{is that if the}} operator can't read the logo {{on the side of the}} bar, they are too close to the <b>cutting</b> <b>plane</b> and should lean left to ensure safety.|$|E
40|$|This paper {{proposes a}} new slicing {{approach}} that uses multiple sets of <b>cutting</b> <b>planes</b> to automatic determine parting lines and boundaries of undercuts of complex CAD parts for the multi-piece molds design. In this algorithm, {{the group of}} feasible parting directions is first collected and three sets of <b>cutting</b> <b>planes</b> are then formed based on the primary parting direction. One set of <b>cutting</b> <b>planes</b> is used to generate slicing profiles, and two others are used to extract intersection points passed through by parting loops and boundaries of undercuts. The result shows that the proposed parting lines are suitable to obtain parting surfaces and construct the entire mold-pieces. The algorithm provides a highly effective solution for handling many complex industrial parts...|$|R
40|$|In {{this paper}} we solve mixed-integer linear {{programming}} including integer linear programming by isometric surface method under the MATLAB environment. The algorithm can quickly obtain the optimal mixed-integer point simultaneously using isometric <b>planes</b> and <b>cutting</b> <b>planes</b> derived from polyhedral-cones and rounded-minimal-balls {{at the highest}} vertex. Some techniques for making additional <b>cutting</b> <b>planes</b> and isometric planes are given such {{that only a few}} relaxation linear programming problems need to solve. Numerical tests show the conclusions...|$|R
40|$|This paper {{addresses}} {{the problem of}} finding <b>cutting</b> <b>planes</b> for multi-stage stochastic integer programs. We give a general method for generating <b>cutting</b> <b>planes</b> for multi-stage stochastic integer programs based on combining inequalities that are valid for the individual scenarios. We apply the method to generate cuts for a stochastic version of a dynamic knapsack problem and to stochastic lot sizing problems. We give computational results which show that these new inequalities are very effective in a branch-and-cut algorithm...|$|R
5000|$|... #Caption: The angle Î± {{between the}} tangent A and the {{horizontal}} will be maximum if the <b>cutting</b> <b>plane</b> contains {{the direction of}} the gradient A.|$|E
5000|$|... the <b>cutting</b> <b>plane</b> is {{parallel}} to the axis of the torus and its distance to the axis equals the radius of the generating circle (see picture).|$|E
5000|$|Type H {{lines are}} the same as type G, except that every second long line is thicker. These {{indicate}} the <b>cutting</b> <b>plane</b> of an object. 2H pencil ...|$|E
50|$|If <b>cutting</b> <b>planes</b> {{are used}} to tighten LP relaxations within a branch and price algorithm, the method is known as branch price and cut.|$|R
40|$|The {{elementary}} closure $P'$ of a polyhedron $P$ is {{the intersection}} of $P$ with all its Gomory-ChvÃ¡tal <b>cutting</b> <b>planes.</b> $P'$ is a rational polyhedron provided that $P$ is rational. The known bounds {{for the number of}} inequalities defining $P'$ are exponential, even in fixed dimension. We show that the number of inequalities needed to describe the elementary closure of a rational polyhedron is polynomially bounded in fixed dimension. If $P$ is a simplicial cone, we construct a polytope $Q$, whose integral elements correspond to <b>cutting</b> <b>planes</b> of $P$. The vertices of the integer hull $Q_I$ include the facets of $P'$. A polynomial upper bound on their number can be obtained by applying a result of Cook et al. Finally, we present a polynomial algorithm in varying dimension, which computes <b>cutting</b> <b>planes</b> for a simplicial cone that correspond to vertices of $Q_I$...|$|R
5000|$|If desired, {{search for}} <b>cutting</b> <b>planes</b> that are {{violated}} by [...] If any are found, {{add them to}} the LP relaxation and return to 3.2.|$|R
