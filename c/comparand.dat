4|4|Public
5000|$|Because the Fourier {{representation}} of the data has already been computed, it is especially convenient to use the Fourier shift theorem with real-valued (sub-integer) shifts for this purpose, which essentially interpolates using the sinusoidal basis functions of the Fourier transform. An especially popular FT-based estimator is given by Foroosh et al. In this method, the subpixel peak location is approximated by a simple formula involving peak pixel value and the values of its nearest neighbors, where [...] is the peak value and [...] is the nearest neighbor in the x direction (assuming, as in most approaches, that the integer shift has already been found and the <b>comparand</b> images differ only by a subpixel shift).|$|E
40|$|The <b>Comparand</b> pattern {{provides}} a means to interpet different objects as being identical for certain contexts. It does so by introducing an instance variable in each class of interest - the <b>comparand</b> - and using it for comparison. Identification of different objects is needed when more than one reference refers to the (conceptually) same objects. In distributed systems, the <b>Comparand</b> pattern provides for efficient comparison of remote objects...|$|E
40|$|FPGA {{implementations}} of {{a parallel}} associative processor with multi–comparand multi–search operations Multi–comparand associative processors are efficient in parallel processing of complex search problems {{that arise from}} many application areas including computational geometry, graph theory and list/matrix computations. In this paper we report new FPGA implementations of a multi– <b>comparand</b> multi–search associative processor. The architecture of the processor working in a combined bit– serial/bit–parallel word–parallel mode and its functions are described. Then, several implementations of associative processors in VHDL, using Xilinx Foundation ISE software and Digilent development boards with Xilinx FPGA devices are reported. Parameters of the implemented FPGA processors are presented and discussed...|$|E
40|$|Traditional {{pulldown}} comparators {{that are}} used to implement associative addressing logic in superscalar microprocessors dissipate energy on a mismatch in any bit position in the <b>comparands.</b> As mismatches occur much more frequently than matches in many situations, such circuits are extremely energy–inefficient. In recognition of this inefficiency, a series of dissipate–on–match comparator designs have been proposed to address the power considerations. These designs, however, are limited to at most 8 –bit long arguments. In this paper, we examine the designs of energy–efficient comparators capable of comparing arguments as long as 32 bits in size. Such long <b>comparands</b> are routinely used in the load–store queues, caches, BTBs and TLBs. We use the actual layout data and the realistic bit patterns of the <b>comparands</b> (obtained from the simulated execution of SPEC 2000 benchmarks) to show the energy impact from the use of the new comparators. In general, a non–trivial combination of traditional and dissipate–on–match 8 –bit comparator blocks represents the most energy–efficient and fastest solution. As an example of this general approach, we show how fast and energy–efficient comparators can be designed for comparing addresses within the load–store queue of a superscalar processor...|$|R
40|$|In {{this paper}} {{a model of}} a {{versatile}} associative graph processor called AGP is proposed. The model can work both in bit-serial and in bit-parallel mode and enables simultaneous search for a set of <b>comparands</b> and selection of the search types. In addition it has some built–in operations designed for associative graph algorithms. The selected functions and basic procedures of this model are described and its possible architecture is discussed...|$|R
40|$|Abstract. Some of today’s superscalar processors, {{such as the}} Intel Pentium III, {{implement}} physical registers {{using the}} Reorder Buffer (ROB) slots. As much as 27 % of the total CPU power is expended within the ROB in such designs, making the ROB a dominant source of power dissipation within the processor. This paper proposes three relatively independent techniques for the ROB power reduction with no or minimal impact on the performance. These techniques are: 1) dynamic ROB resizing; 2) the use of low–power comparators that dissipate energy mainly on a full match of the <b>comparands</b> and, 3) the use of zero–byte encoding. We validate our results by executing the complete suite of SPEC 95 benchmarks on a true cycle–by–cycle hardware–level simulator and using SPICE measurements for actual layouts of the ROB in 0. 5 micron CMOS process. The total power savings achieved within the ROB using our approaches are in excess of 76 % with the average performance penalty of less than 3 %. ...|$|R
40|$|Abstract: 2 ̆ 2 This paper investigates several {{phenomena}} of superlatives, contrasts them with documented observations about the comparative, and proposes a theory for the semantics of the superlative. Superlatives will be explored {{with respect to}} such properties as ambiguity, operator scope, polarity environments, negation, interactions with modality, and inferential behavior. A brief survey of degree variable, extent variable, difference variable, and interpretive approaches will explore the possible paradigms for a theory of superlatives. The necessity for a new theory, treating the superlative as an independent phenomenon related {{in part to the}} comparative, will be demonstrated. The resulting proposal is based on a Klein-style model-theoretic extent-based account for comparatives, augmented with a Larson-style lambda calculus approach for operator-based representation of scopal phenomena. Attempts to directly apply comparative theories to the superlative are shown to be inadequate, though initial formulations from the comparative are adopted. These are refined with the addition of two semantic constraints, the exclusion constraint and the membership constraint. The membership constraint imposes a set inclusion constraint on the head of the superative [sic]; the exclusion constraint enforces set complementarity upon the second <b>comparand.</b> The final result is a higher-order logic account for the meaning of the superlative which supports several of the superlative- related observations introduced. Its compatibility with several standard assumptions from the comparative theories, including implicitude and uniqueness, are demonstrated. Finally, future directions are indicated along which the foundation laid in this paper could be pursued. 2 ̆...|$|E
40|$|Electronic Support Measures (ESM) -Parameter Filter IC was {{specifically}} designed to process radar signal data. This {{is one of the}} essential ESM functions which must be done in real-time. Considering the complexity of the Filter IC and its crucial service in Electronic Warfare (EW), fault-tolerance should be an important element of the circuit. However, in the initial design, fault-tolerance was not included. Therefore, fault-tolerance schemes especially suitable for ESM Filter IC are presented in this thesis. A concurrent error detection technique is presented. The method utilizes a code, referred to as MATCH code that is inherent in the function of ESM Filter IC. Effectiveness of the approach is measured by its error coverage. In the analysis of the coverage, error detection capability of MATCH code and probability of fault detection are incorporated. The hardware overhead required to implement a lookup-table which stores MATCH code is also given for various CAM (content-addressable memory) cells. As an alternative approach, recomputation with rotated <b>comparands</b> (RERC) is suggested for detection of all single errors. The possibility of multiple error detection and single error correction by the same method is also discussed...|$|R

