12|35|Public
5000|$|Synonyms: on-the-fly-programming, {{just in time}} programming, <b>conversational</b> <b>programming</b> ...|$|E
5000|$|TELCOMP, an interactive, <b>conversational</b> <b>programming</b> {{language}} {{based on}} JOSS, developed by BBN in 1964.|$|E
5000|$|Conversational Programming: (2010) AgentSheets 3 is {{the world}} first {{programming}} environment supporting computational thinking by providing information {{about the meaning of}} the program. Unlike visual programming approaches, which only help with syntactic challenges, such as avoiding missing semicolons, <b>Conversational</b> <b>Programming</b> helps with the semantics, that is the meaning of your program. Is this condition true right now? Would this rule fire? Why does that rule fail? A <b>conversational</b> <b>programming</b> agent will tell all this and more in a non intrusive kind of way.|$|E
5000|$|TELL-A-GRAPH, a {{proprietary}} <b>conversational</b> graphics <b>program</b> from ISSCO of San Diego, CA.|$|R
25|$|Delbarton's fourth headmaster, Father Gerard Lair (1975–1980), {{initiated}} more changes. The {{system of}} discipline from demerits and detention {{changed to a}} <b>conversational</b> <b>program</b> designed to bring about positive changes. As the academic prestige of the School grew, the Board of Trustees decided to terminate the residential program in 1978. The last two resident students graduated in 1983.|$|R
5000|$|... #Subtitle level 3: <b>Conversational</b> English <b>Program</b> in DPR Korea - Project Seeds of Reconciliation ...|$|R
5000|$|In 1966 IBM <b>Conversational</b> <b>Programming</b> System (CPS) {{introduced}} a microprgrammed function [...] to perform [...] "interpretive evaluation of expressions which {{are written in}} a modified Polish-string notation" [...] on an IBM System/360 Model 50 Microcoding this function was [...] "substantially more than a factor of five faster than a program to interpret an assignment statement." ...|$|E
5000|$|In 1966 {{the company}} {{developed}} [...] "RUSH" [...] (Remote Users of Shared Hardware), an interactive dialect of PL/I.Between 1965 and 1966 they {{assisted in the}} development of CPS (<b>Conversational</b> <b>Programming</b> System), a timesharing system that ran under OS/360, under contract to IBM. CPS was a subset of RUSH prepared by IBM with the permission of Allen-Babcock.|$|E
50|$|Horvitz {{was born}} in Chicago, Illinois, the son of Mary R. (Savit), a school teacher, and Oscar Freedom Horvitz, a GAO accountant. He majored in {{mathematics}} at Massachusetts Institute of Technology, where he joined Alpha Epsilon Pi and spent his summers working for IBM, at first wiring panels for accounting machines and then in his final summer helping to develop IBM’s <b>Conversational</b> <b>Programming</b> System.|$|E
40|$|Speech {{takes time}} and takes place over time. As a consequence, {{conversational}} computer systems must be very di erent from graphical user interfaces, which are designed around {{the assumption that the}} graphics operations are more or less instantaneous, in response to user input happening sporadically over time. <b>Conversational</b> <b>programs</b> must account for the duration of an utterance and the history of the conversation...|$|R
50|$|In interviews, Emily Short has {{explained}} that Galatea arose {{out of her}} efforts to develop advanced dialog coding for interactive fiction engines. Although code for simple <b>conversational</b> <b>programs</b> like ELIZA have existed since the 1960s, and limited dialog options have existed in interactive fiction since the 1970s, Short's efforts to develop chatterbot-like dialog required her to produce a simple test case scenario to test NPC interaction. Thus the single-room, single-occupant Galatea was a natural result.|$|R
40|$|We {{developed}} a web-based clinical <b>conversational</b> <b>program</b> that enables ordinary clinicans with web browser to compose, publish, and analyze web-based interactive interviews {{based on a}} centralized reusable object model. Relational database tables and server- and client-side scripts are automatically created and managed. Stored patient data in clinical information system can be accessed and used for conditional branching and the patient response can be captured in clinical data repositories. Well-designed web-based clinical interview incorporated into a clinical information system may facilitate patients' direct interaction with their own medical record and may directly benefit their health care...|$|R
5000|$|<b>Conversational</b> <b>Programming</b> System or CPS was {{an early}} Time-sharing system offered by IBM which ran on System/360 {{mainframes}} circa 1967 through 1972. CPS was implemented as an interpreter, and users could select either a rudimentary form of BASIC or a reasonably complete version of PL/I. A third option provided remote job entry (RJE) features allowing users to submit JCL job streams for batch processing. A fourth option was called control mode. Normally, only the system operator would be permitted to use control mode. The available features in control mode included: ...|$|E
50|$|Mitchell {{was born}} in Kitchener, Ontario, Canada on April 25, 1943. He grew up in Cambridge, Ontario, and {{graduated}} {{with a degree in}} mathematics from the University of Waterloo in 1966.Mitchell began working with computers in 1962 while a student at the University of Waterloo. He and three other undergraduates developed a fast compiler for the Fortran programming language known as WATFOR ("Waterloo FORTRAN"), for the IBM 7040 computer.The project, initiated by Professor J. Wesley Graham, established Waterloo's early reputation as a centre for software and computer science research by assisting the first generation of computer science majors learn to program.He then graduated with a PhD in computer science from Carnegie-Mellon University in 1970. His dissertation was titled <b>Conversational</b> <b>programming</b> LCC.|$|E
40|$|Abstract – Accelerated by the Do-It-Yourself mindset of the Web 2. 0 culture, {{end-user}} programming, {{which is}} programming {{by end users}} with limited, if any, formal programming background, is growing rapidly. Especially in educational settings, children are exposed to computational thinking by making games, building scientific simulations and creating stories. Early educational programming languages such as Logo have made programming substantially more accessible to end users. More recent approaches include visual programming with drag-and-drop style of programming making it nearly impossible to compose syntactically incorrect programs. However, as the syntactic challenges of end-user programming are gradually fading into the past, the new frontier of semantic programming support emerges. This demonstration introduces Future Trace, a system to make programming more conversational. A <b>conversational</b> <b>programming</b> agent runs programs one step into the future in order to visualize discrepancies between the programs users intended to write and the actual programs. computational agents to provide real-time semantic feedback to a programmer so that the programmer can indentify discrepancies between the intended program and the actual program. <b>Conversational</b> <b>programming</b> could be conceptualized as a simple form of pair programming substituting a human partner with a computational agent called the <b>Conversational</b> <b>Programming</b> Agent (CPA). Figure 1 describes a <b>conversational</b> <b>programming</b> architecture...|$|E
5000|$|The term [...] "ChatterBot" [...] was {{originally}} coined by Michael Mauldin (creator {{of the first}} Verbot, Julia) in 1994 to describe these <b>conversational</b> <b>programs.</b> Today, chatbots are part of virtual assistants such as Google Assistant, and are accessed via many organizations' apps, websites, and on instant messaging platforms such as Facebook Messenger. [...] Non-assistant applications include chatbots used for entertainment purposes, for research, and social bots which promote a particular product, candidate, or issue. Actually Semantycs of Full On Net, emulates human behavior and interact with databases and ERP like SAP.|$|R
5000|$|Support {{education}} and health projects in DPRK: Conducting research on establishing a model computer lab in DPR Korea, implementing a <b>conversational</b> English <b>program,</b> and research on renovating a medical lab for the disabled.|$|R
40|$|The {{purpose of}} this study is to develop a <b>conversational</b> factor {{analysis}} <b>program</b> for computer use. Process of factor analysis contains a series of computional procedures. Factor analysts usually compute several different solutions to explore the best one in reference to the purpose of his study. This program provides many options on preparatory data processing, for example, data correction, data transformation and finding outliers, initial factor solutions, estimation of the number of factors, rotation of factor axis and estimation of factor scores. An investigator is allowed to examine various solutions in a variety of conditions without any special background in computer usage. In addition, the program can be used as a kind of computer assisted instruction on factor analysis which gives students step by step exercises. Students will be able to master the process of factor analysis in responding the <b>conversational</b> <b>program</b> without conducting complicated computational works...|$|R
40|$|Our {{powerful}} computers help {{very little}} in debugging the program we have so we can change it into the program we want. We introduce <b>Conversational</b> <b>Programming</b> {{as a way to}} harness our computing power to inspect program meaning through a combination of partial program execution and semantic program annotation. A programmer in our approach interactively selects highly autonomous “agents ” in a program world as conversation topics and then changes the world to explore the potential behaviors of a selected agent in different scenarios. In this way, the programmer proactively knows how their code affects program execution as they explore various contexts. This paper describes <b>conversational</b> <b>programming</b> through design principles and use cases...|$|E
40|$|This {{document}} {{has been}} approved for public release and sale; its As part of the ongoing research program in <b>conversational</b> <b>programming</b> an APL system has been implemented for the PDP- 10. Since this system {{is to be a}} base for extensive study in <b>conversational</b> <b>programming</b> the system was programmed entirely in Bliss, a high-level programming language specifically designed for the writing of systems programs. A few extensions to APL are included in this first version which supports both Teletype and IBM 2741 /Datel terminals. WHY APL? APL has been described in the book, A Prosramming Language, [5] by K. Iverson. It was intended to be a general data processing language but, because of its complicated notation and unwieldy alphabet, was little used even as a descriptive device until an interactive APL 60 version was implemented by IBM for the 360. The combined system and language have proved to be so enormously useful and successful {{in a wide range of}} applications, that implementations for a number of machines other than the 360 have been made, e. g., CDC 3600, 7600...|$|E
40|$|Includes bibliographical {{references}} (page 52) The {{introduction of}} Fast Fourier Transform (FFT) and other modern digital processing techniques offer methods for achieving improved receiving system sensitivity for detecting a continuous wave (CW) signal of length (T) imbedded in Gaussian noise. The finite duration signal is generally narrow band with unknown phase and frequency, the amplitude is constant, and the starting time is unknown. The noise is Gaussian distributed with zero mean, and the random variables are statistically independent. This paper addresses {{the performance of}} key elements in a general Fourier transform receiver system designed to detect such a signal. The performance associated with detection, post detection integration and signal position in the filter is analyzed. Charts are provided to show detectability performance or effects on detectability performance. A computer program is designed using the <b>Conversational</b> <b>Programming</b> System (CPS) to model each element of the system. Exercise of the program provides data to confirm analyzed results...|$|E
50|$|A formal reverse Turing test {{follows the}} same format as a Turing test. Human {{subjects}} attempt {{to imitate the}} conversational style of a conversation program such as ELIZA. Doing this well involves deliberately ignoring, to some degree, {{the meaning of the}} conversationthat is immediately apparent to a human, and the simulation of the kinds of errors that <b>conversational</b> <b>programs</b> typically make. Arguably unlike the conventional Turing test, this is most interesting when the judges are very familiar with the art of conversation programs, meaning that in the regular Turing test they can very rapidly tell the differencebetween a computer program and a human acting normally.|$|R
40|$|Till date no {{computer}} program {{has passed the}} Turing test although even simple <b>conversational</b> <b>programs,</b> socalled “Chatbots”, could make people {{believe that they are}} talking to another human being. The main objective {{of this paper is to}} identify some shortcomings of existing conversational agents (e. g. Chatbots) and describe our approach to model human-like conversational agent that overcomes those limitations to some extent. Our primary focus is to sense affective information from input sentence(s) by applying a cognitive theory of emotions known as the OCC model and generate both proactive and reactive responses according to the input. We thus aim at developing an emotionally intelligent {{computer program}} that not only “understands ” what affective information is conveyed in textual messages, but also may provide automatic empathic response...|$|R
5000|$|PL/I F {{had offered}} some debug {{facilities}} {{that were not}} put forward for the standard but were implemented by others notably the CHECK(variable-list) condition prefix, [...] on-condition and the [...] option. The IBM Optimizing and Checkout compilers added additional features appropriate to the <b>conversational</b> mainframe <b>programming</b> environment (e.g. an [...] condition).|$|R
5000|$|Development of {{the game}} progressed {{organically}} with Short engaging in test runs and drafting new dialog options for every conversational dead-end that arose. The game's multiple endings also arose {{in a similar fashion}} although Short had intended that there be multiple endings from the start. Although the nature {{of the game}}'s development as well as its minimalist final form has led to questions regarding whether it is really a game and not just an experimental <b>conversational</b> <b>program,</b> Short has suggested that to her the definition of interactive fiction requires nothing more than a world model and a parser, and [...] "anything you can cook up with those features counts as IF." [...] Short has acknowledged the helpful influence of the close-knit IF community and the [...] "atmosphere in which experimentation is valued" [...] as leading to the success of her works like Galatea.|$|R
40|$|Subject of investigation: distributing {{and supply}} {{networks}} of electric energy objects. Purpose of the work: development of high-performance effective computing algorithms and dialog programs of {{solution of the}} reactive power compensation problem for the distributing and supply networks of the electric energy systems. The developed algorithms account for the features of capacitor batteries, static characteristics of the load and a constant component of expenditure. Provision is made for a possibility of step-by-step implementation of the obtained solution. The proposed algorithms and <b>conversational</b> <b>programs</b> feature high performance, computing effectiveness, simplicity of the program implementation and a small internal memory of the computer. They operate in the conversational mode "designer - computer". The program of calculation of the reactive power compensation in the supply mains {{is used in the}} electric energy system of the city of Belgorod. The results of the work provide for the minimization of the active power losses bu 11 %Available from VNTIC / VNTIC - Scientific & Technical Information Centre of RussiaSIGLERURussian Federatio...|$|R
25|$|The college's {{students}} {{were the first}} to participate in the Red Cross soup patrol, the Adult Migrant <b>conversational</b> English <b>program,</b> and the Kindred Family support program. The college won Volunteering WA's difference award in 1998 and 2001 for innovative and outstanding service to the community. In 2002, the college became the first school in Australia to implement a graduate requirement of community service for senior students.|$|R
40|$|This {{dissertation}} is {{an outcome}} of the research study conducted and the project being implemented in three secondary schools of Mtakuja, Bunju Girls and Bakili Muluzi in Dar es Salaam. It covers the period between December 2010 up to June 2011. The participatory community assessment conducted in the village using participatory methods and tools like Focus Group Discussions (FGD), semi-structured Interviews and Field visit survey came out with five major community needs which needed to be urgently addressed. Participatory Assessment Method (PAM) was employed to asses {{different aspects of the}} community in. areas of; Water, Sanitation, health, environment and culture. The results showed that environmental degradation, deforestation, water and air pollution and water borne diseases was revealed to be the highest challenges and constraints to development in these areas. These Environmental problems have far reaching ramifications in terms of student’s attendance, performance, high incidences of water borne diseases, heat shocks and fainting. The communities around the schools also experienced problems of diarrhea, chronic typhoid. The study concludes that both students and communities around are susceptible to the danger of developing cancer as result of poor environmental. Therefore the study recommends that deliberate efforts should be taken to involve the youth into environmental <b>conversational</b> <b>programs</b> to ensure sustainability and reduced danger that is threatening the nation. ...|$|R
50|$|Directly {{inspired}} by Garfinkel, Harvey Sacks undertook {{to investigate the}} sequential organization of <b>conversational</b> interaction. This <b>program,</b> pioneered with colleagues Gail Jefferson and Emanuel Schegloff, has produced a large and flourishing research literature. A second, smaller literature has grown out of another of Sacks' interests {{having to do with}} social categorization practices.|$|R
5000|$|In the 1960s at Stanford University, Colby {{embarked}} {{on the creation}} of software programs known as [...] "chatterbots," [...] which simulate conversations with people. One well known chatterbot at the time was ELIZA, a computer program developed by Joseph Weizenbaum in 1966 to parody a psychologist. ELIZA, by Weizenbaum's own admission, was developed more as a language-parsing tool than as an exercise in human intelligence. Named after the Eliza Doolittle character in Pygmalion it was the first <b>conversational</b> computer <b>program,</b> designed to imitate a psychotherapist asking questions instead of giving advice. It appeared to give conversational answers, although it could be led to lapse into obtuse nonsense.|$|R
5000|$|The city of Waukegan has a Hispanic {{population}} {{more than}} three times that of Illinois as a whole. [...] 55% of Waukeganites are non-native speakers of English. [...] In recognition of this, the library offers extensive educational programs in English as a second language. In 2012, it began the [...] "Promotoras Ambassador Program", which sends trained volunteers into the community to better assess the types of library programs that are needed. [...] Among the initiatives that the library embarked upon based on the feedback from the community ambassadors was the <b>Conversational</b> ESL <b>Program,</b> which in its first year graduated 255 students, most of whom went on to receive GEDs.|$|R
50|$|By {{supporting}} {{methods of}} reflective, <b>conversational,</b> and literate <b>programming,</b> SuperCollider makes it {{relatively easy to}} find new sound algorithms and to develop custom software as well as custom frameworks. With regards to domain specific knowledge, it is both general (e.g., it allows to represent properties such as time and pitch in variable degrees of abstraction) and copious of example implementations for specific purposes.|$|R
40|$|When several {{products}} are marketed {{by the same}} sales force, it frequently becomes impossible or impractical for salesmen to promote all items in the product line extensively in each and every time period. Management 2 ̆ 7 s problem is to decide how the available selling effort should be allocated across products and over time. The opportunity costs associated with using limited selling resources to promote certain products but not others must be evaluated. This paper describes a decision calculus-type modeling system for dealing with this question. The problem is analyzed by a two-step procedure. First, a response function is defined which relates selling effort to sales and profit results in a manner which represents some behavioral phenomena considered to be important. An interactive <b>conversational</b> <b>program</b> elicits judgmental data from managers which are used to parameterize the response model. A separate response function is specified for each product in the firm 2 ̆ 7 s line by this method. The set of response functions so obtained becomes the input for the second component of the system, an allocation heuristic. An incremental searchprocedureis employed to find an allocation of the sales force 2 ̆ 7 s time to the various products and over several time periods which is 2 ̆ 2 best 2 ̆ 2 in terms of total contribution to company profits. The model {{is presented in the}} context of an ethical drug manufacturer 2 ̆ 7 s multiple-product sales force allocation problem. Results of an application are summarized and implementation considerations noted. A comparison of the model-based allocation with that determined previously by management indicated that the former plan would offer a substantial improvement in profit...|$|R
40|$|Bifocal VDT (Visual Display Terminal) {{operators}} (50) {{were studied}} from different fields (data entry, <b>conversational</b> task, <b>programming,</b> CAD/CAM etc.) through user-product-environment system. Users profile includes experiments pertaining to users reactions, while products profile covers designs, manufacturing {{and marketing of}} existing computer furniture in the market. Existing VDT workstations were observed inappropriate for bifocal people facing vision problem, which was analysed thoroughly in simulated laboratory conditions by preparing a test fig with adjustable monitor angle from horizontal. Work posture of VDT operators was assessed with EMG, Photogram Metric Technique, and Centre of Gravity in four stages of test rig. An ergonomics criterion for redesigning VDT workstation was developed. It is appropriate and natural for the man-machine-environment system and also allows comfortable posture and greater efficiency of bifocal and normal VDT operators...|$|R
25|$|Therapy for Expressive Aphasia (nonfluent) is beneficial, {{even for}} {{patients}} with severe nonfluent aphasia. A study conducted by Marangolo and co-workers (2013) administered conversational therapy to patients with severe nonfluent aphasia. The {{results of the study}} demonstrated {{a significant increase in the}} patient’s expressive language. The authors suggested that an intensive <b>conversational</b> therapy <b>program</b> should be considered {{for patients with}} moderately severe nonfluent aphasia in order to enhance the patient's quality of life and improve their language expression. In addition, although Anomic Aphasia is seen to be less severe than other aphasias, therapy is still imperative to help decrease the patient’s word finding deficits. A research study conducted by Harnish and co-workers (2014), provided intense treatment to patients with anomic aphasia. Results of the study concluded significant increases in the participant’s expressive language. These results suggest that an intensive intervention program for patients with anomic aphasia provides a surprisingly quick expressive language increase. Specifically, these patients relearned to correctly produce the problematic words after one to three hours of speech-language therapy.|$|R
40|$|In {{this paper}} some {{manpower}} planning problems will be studied. It {{will be shown}} that the <b>conversational</b> computer <b>program</b> system FORMASY, which has been developed at Eindhoven University of Technology, can be of great help in analyzing problems with respect te the prospective distribution of manpower over several categories in a hierarchical system. FORMASY is based on Markov models, which can take into account: grade, qualification, age and grade age of the individual employees. This paper first gives a short introduction te the main features of the computer program system. This will be illustrated by some examples. Then it will be shown by two applications how FORMASY {{can be used for}} policy-making. The first application shows how a promotion- and recruitment policy can be found, such that the prospective distribution of manpower over the forthcoming years remains favourable although the growth of the organisation is stopped. The second application shows how some integration between three manpower groups can be used to absorb this ceasing of the growth without frustrating the career prospects of the employees too much...|$|R
