29|84|Public
5|$|In digital puppetry, machinima creators become virtual actors; each {{crew member}} {{controls}} {{a character in}} real-time, as in a multiplayer game. The director can use built-in camera controls, if available. Otherwise, video is captured {{from the perspectives of}} one or more puppeteers who serve as camera operators. Puppetry allows for improvisation and offers controls familiar to gamers, but requires more personnel than the other methods and is less precise than scripted recordings. However, some games, such as the Halo series, (except for Halo PC and Custom Edition, which allow AI and <b>custom</b> <b>objects</b> and characters), allow filming only through puppetry. According to Marino, other disadvantages are the possibility of disruption when filming in an open multi-user environment and the temptation for puppeteers to play the game in earnest, littering the set with blood and dead bodies. However, Chris Burke intentionally hosts This Spartan Life in these unpredictable conditions, which are fundamental to the show. Other works filmed using puppetry are the ILL Clan's improvisational comedy series On the Campaign Trail with Larry & Lenny Lumberjack and Rooster Teeth Productions' Red vs. Blue. In recamming, which builds on puppetry, actions are first recorded to a game engine's demo file format, not directly as video frames. Without re-enacting scenes, artists can then manipulate the demo files to add cameras, tweak timing and lighting, and change the surroundings. This technique is limited to the few engines and software tools that support it.|$|E
2500|$|Although the Create aspect does include minor tweaks to {{existing}} levels whilst {{they are being}} played, such as placing stickers and decorations in levels, {{the main focus of}} this mode is the level editor. The editor incorporates a large number of editing facilities to create levels from a low to a high degree of complexity. The player may create new objects by starting with a number of basic shapes, such as circles, stars and squares, and then [...] "painting" [...] a shape into the level using one of the many materials. Objects may be glued to each other or to the level. More mechanical features are also available, such as connecting objects together with string, using bolts to spin objects, or using various kinds of triggers. Rocket motors can be attached to objects to propel them across a level. After creating <b>custom</b> <b>objects,</b> the player may save their creation to a library for later use, and even share their object by placing it inside a prize bubble in their level, so that other players who play the level can collect it and may use it in their own levels.|$|E
5000|$|In JavaScript, some {{built-in}} types (numbers, strings) are immutable, but <b>custom</b> <b>objects</b> {{are generally}} mutable.|$|E
5000|$|Duqu malware is {{a variety}} of {{software}} components that together provide services to the attackers. Currently this includes information stealing capabilities and in the background, kernel drivers and injection tools. Part of this malware is written in unknown high-level programming language, dubbed [...] "Duqu framework". It is not C++, Python, Ada, Lua and many other checked languages. However, recent evidence suggests that Duqu may have been written in C with a <b>custom</b> <b>object</b> oriented framework and compiled in Microsoft Visual Studio 2008.|$|R
5000|$|Teigha Architecture is a {{development}} platform available using C++ {{that is used}} in conjunction with Teigha for [...]dwg files to additionally support <b>custom</b> architecture <b>objects.</b>|$|R
5000|$|XML Spreadsheet {{documents}} cannot store Visual Basic for Applications macros, auditing tracer arrows, {{chart and}} other graphic <b>objects,</b> <b>custom</b> views, drawing <b>object</b> layers, outlining, scenarios, shared workbook information and user-defined function categories. In contrast, the newer Office Open XML formats support full document fidelity.|$|R
50|$|The Microsoft Windows {{version of}} Scribblenauts Unlimited is {{integrated}} with Steam Workshop to share <b>custom</b> <b>objects.</b>|$|E
50|$|The Wii U {{version of}} Scribblenauts Unlimited {{contains}} a co-operative multiplayer mode, {{as well as}} online support that allows players to share their saved <b>custom</b> <b>objects</b> with their friends, and can store more than 900 <b>custom</b> <b>objects.</b> This version also {{marks the first time}} the series is released on a home console. As a result, the game has been given a revamped high-definition visual style. The Wii U version also had exclusive cameos from characters and items from the Super Mario and Legend of Zelda games, which later returned in the European release of both Wii U and 3DS versions.|$|E
50|$|ShareNow: Integrates ShareMethods with salesforce.com {{providing}} Single Sign On for salesforce.com {{users and}} {{easy access to}} files related to accounts opportunities, etc. including <b>custom</b> <b>objects.</b> Also facilitates collaboration between salesforce.com users and non-users.|$|E
60|$|The major sniffed. He was surprised, it is true, {{and rather}} pleased, because Bermuda {{is so much}} nearer New York than is California; {{but it was his}} <b>custom</b> to <b>object.</b>|$|R
5000|$|Provides {{developers}} {{with easy}} and safe access to browser events (such as mouse clicks and key presses). It also provides the <b>Custom</b> Event <b>object</b> for publishing and subscribing to custom events.|$|R
5000|$|Teigha Civil is a Teigha {{extension}} {{for civil}} engineering available using C++ {{that is used}} in conjunction with Teigha for [...]dwg files to additionally support <b>custom</b> engineering <b>objects</b> stored in [...]dwg files.|$|R
50|$|Silk Test {{supports}} both {{recording and}} descriptive programming methods {{to identify and}} verify the elements in the AUT. It also identifies any mouse movements and keystrokes, enabling testing against <b>custom</b> <b>objects</b> in the AUT.|$|E
50|$|This release added Deployment Wizard, Graphical view {{of objects}} and relationships, Business {{modelling}} allowing you to represent the <b>custom</b> <b>objects,</b> Service Discovery, Scheduler framework, WSDL Parser Extension plugins, promotion, faceted search, auto suggest, REST interface and a governance profile.|$|E
5000|$|DynAttrMan (Dynamic Attribute Manager) - {{provides}} {{a mechanism to}} store <b>custom</b> <b>objects</b> attributes. Sometimes developer needs flexible approach to manage arbitrary attributes for objects application deals with. DynAttrMan {{makes it possible to}} handle such attributes without database scheme alteration.|$|E
5000|$|Aside from , the C++ {{standard}} library {{also includes}} the [...] function from the C standard library. Compared to , the templated [...] is more type-safe since {{it does not require}} access to data items through unsafe [...] pointers, as [...] does. Also, [...] accesses the comparison function using a function pointer, necessitating large numbers of repeated function calls, whereas in , comparison functions may be inlined into the <b>custom</b> <b>object</b> code generated for a template instantiation. In practice, C++ code using [...] is often considerably faster at sorting simple data like integers than equivalent C code using [...]|$|R
40|$|In a {{distributed}} object system such as Distributed Component Object Model (DCOM), legacy transport protocols {{used for}} communication limit the performance over high-speed networks. By {{making use of}} a lowlatency, high-bandwidth, and low overhead user-level networking architecture such as Virtual Interface (VI) Architecture, this performance bottleneck can be significantly reduced. Since user-level networking architectures provide low-level primitives, the challenge lies in integrating them into high-level applications. This requires a systematic approach. In this paper, a methodology to utilize VI Architecture to improve the performance of DCOM using <b>custom</b> <b>object</b> marshaling is developed. Initial experimental results demonstrate that the latencies of small messages in distributed object computing can be significantly reduced by this methodology...|$|R
50|$|Algorithmic skeletons {{were first}} {{introduced}} by Murray Cole in 1989. Several frameworks {{have been proposed}} by different research groups using different techniques such as functional, imperative, <b>custom</b> and <b>object</b> oriented languages. A recent survey of algorithmic skeleton frameworks {{can be found in}} González-Vélez & Leyton.|$|R
5000|$|Mapping and transformations: Data {{governance}} {{is enabled}} through default object models and transformations for published Resources.IT can publish Resources (objects) {{that are available}} for use in Formulas. Our Multi-level transformation service discovers <b>custom</b> <b>objects</b> and data fields at runtime and enable mapping and transformation as needed.|$|E
50|$|NC is used {{to manage}} a {{computer}} farm or computer cluster and is responsible for accepting, scheduling, dispatching, and managing the remote execution of standalone, parallel, or interactive user jobs. It also manages the allocation of resources such as processors, memory, disk space, software licenses, and <b>custom</b> <b>objects</b> to jobs that require them.|$|E
50|$|Scripting - WME {{provides}} a flexible object-oriented scripting language that supports {{a set of}} methods and attributes to allow you an {{easy access to the}} internal engine workings. You can also create your own <b>custom</b> <b>objects</b> and override and customize built-in methods. It uses a C-like syntax, similar to C++, C#, Java or PHP.|$|E
50|$|Game environments {{constructed}} in the Javaground Level Editor may consist of background tiles, static scenery <b>objects,</b> and <b>custom</b> movable <b>objects</b> such as characters and items. The level editor supports parallax scrolling and is suited {{for the creation of}} side-scrolling platformers, overhead RPGs, and isometric games.|$|R
50|$|Audio interfaces. The runtime {{includes}} {{objects for}} performing speech {{input from the}} microphone or speech output to speakers (or any sound device); {{as well as to}} and from wave files. It is also possible to write a <b>custom</b> audio <b>object</b> to stream audio to or from a non-standard location.|$|R
50|$|Axiom CMS is {{a search}} based content {{management}} system that provides customizable edit forms and an asset management area. The front end is written using Dojo {{with a large number}} of hand coded widgets. The system supports a relational database store as well as a <b>custom</b> built <b>object</b> database built on Apache Lucene. It is licensed under the GPL.|$|R
50|$|Users {{can create}} <b>custom</b> <b>objects,</b> such as {{boundary}} conditions or turbulence models, {{that will work}} with existing solvers without having to modify or recompile the existing source code. OpenFOAM accomplishes this by combining virtual constructors {{with the use of}} simplified base classes as interfaces. As a result, this gives OpenFOAM good extensibility qualities. OpenFOAM refers to this capability as run-time selection.|$|E
50|$|The Designer enables {{users to}} {{graphically}} layout the report. It offers report {{objects such as}} tables, charts, crosstabs, gauges, HTML, formatted text, barcodes, matrix codes, lines, rectangles and images. Object properties can either have a fixed value or a conditional formatting. The Designer can be extended by the developer - <b>custom</b> <b>objects,</b> functions and menu actions are supported. The application can interact with the report via the programmable object model of the report. HTML5 viewer is available.|$|E
50|$|The {{application}} creates {{critical path}} schedules, and critical chain and event chain methodology third-party add-ons also are available. Schedules can be resource leveled, and chains are visualized in a Gantt chart. Additionally, Microsoft Project can recognize different classes of users. These different classes of users can have differing access levels to projects, views, and other data. <b>Custom</b> <b>objects</b> such as calendars, views, tables, filters, and fields {{are stored in}} an enterprise global which is shared by all users.|$|E
40|$|Abstract. Various {{methods of}} {{connecting}} CSP channels to external software systems are examined. The {{aim is to}} facilitate the implementation of distributed heterogeneous systems using channel communication. The paper concentrates on TCP/IP connections in a Java environment. The approaches used are: <b>custom</b> protocol; <b>object</b> serialization stream protocol; Remote Method Invocation (RMI); Common Object Request Broker Architecture (CORBA). Practical systems are described and compared. ...|$|R
40|$|It seems {{extremely}} difficult to give a proper definition of “ culture”, for different scholars tend to interprets the term from different angles. In the present thesis, we are inclined {{to agree with the}} views of sociologists and anthropologists who define culture as the total pattern of beliefs, <b>customs,</b> institutions, <b>objects</b> and techniques that characterize the life of a human community. In sum, [...] . 学位：文学硕士院系专业：外文学院外文系_英语语言文学学号： 1992240...|$|R
50|$|Allsteel {{was founded}} in 1912 as Allsteelequip Company and started out {{manufacturing}} <b>custom</b> metal <b>objects,</b> especially electrical equipment. The name was changed in 1929 to All-Steel-Equip Company. In the 1920s, the company began to branch out and started producing kitchen cabinets and refrigerated food lockers. Requests for metal file cabinets were becoming common, so the company bought out a supplier, the Aurora Metal Cabinet Company, in 1936 to enter this market.|$|R
5000|$|A major {{update to}} the game was user custom content. The TSO-E {{developers}} were interested in any user-submitted ideas on how they could maintain a stable economy to negate the gains players made illegitimately through exploits. <b>Custom</b> <b>objects</b> were enabled within TSO in late 2007, allowing players to upload [...]bmp and [...]jpg images as well as [...]iff files. Furniture could be created and uploaded {{in the form of}} single-tiled chairs, sculptures, and decorations and multi-tiled tables.|$|E
5000|$|In iWork, {{all of the}} {{applications}} share a common underlying document format, the [...] "canvas", a generic container type that provides layout and storage mechanisms. Each application then adds its own <b>custom</b> <b>objects</b> and places them on the canvas. Pages, for instance, conventionally opens with a single large text object on the canvas. To the user {{it appears to be}} a typical word processor, but they can grab the corner and re-size it as in a page layout application. In Numbers, one initially sees a grid of cells like any other spreadsheet, but the user is free to size it smaller than the canvas, and then add multiple grids, charts or even drawings to the same canvas.|$|E
5000|$|The {{phenomena}} of user-created modifications (or [...] "mods") for games, one trend that began during the Wolfenstein 3D and Doom-era, {{continued into the}} start of the 21st century. The most famous example is that of Counter-Strike; released in 1999, it {{is still one of the}} most popular online first-person shooter, even though it was created as a mod for Half-Life by two independent programmers. Eventually, game designers realized the potential of mods and custom content in general to enhance the value of their games, and so began to encourage its creation. Some examples of this include Unreal Tournament, which allowed players to import 3dsmax scenes to use as character models, and Maxis' The Sims, for which players could create <b>custom</b> <b>objects.</b>|$|E
50|$|The <b>custom</b> Operators (<b>objects</b> {{that make}} up Processes) can be two types; Calculations which are {{executed}} within the Orchestrator engine, these can be written in JavaScript. The other type is a TouchPoint script which can also include an inline script containing process level variables. This allows ITPAM {{to act as a}} central repository for scripts to be executed on remote systems. These scripts can be written in any scripting language.|$|R
50|$|Players {{can create}} their own levels in the game by using <b>custom</b> and {{pre-built}} <b>objects.</b> Players can then share their completed levels online. Cooperative multiplayer is also featured in the game, allowing players to create and manipulate their custom dreams together.|$|R
40|$|Abstract—Business {{software}} is increasingly moving towards the cloud. Because of this, variability of software {{in order to}} fit requirements of specific customers becomes more complex. This {{can no longer be}} done by directly modifying the application for each client, {{because of the fact that}} a single application serves multiple customers in the Software-as-a-Service paradigm. A new set of software patterns and approaches are required to design software that supports runtime variability. This paper presents two patterns to solve the problem of dynamically adapting functionality of an online software product; the Component Interceptor Pattern and the Event Distribution Pattern. Addi-tionally, it presents two patterns to dynamically extent the data model; the Datasource Router Pattern and the <b>Custom</b> Property <b>Object</b> Pattern. The patterns originate from case studies of current software systems and are reviewed by domain experts. An evaluation of the patterns is performed in terms of security, per-formance, scalability, maintainability and implementation effort, leading to the conclusion that the Component Interceptor Pattern and <b>Custom</b> Property <b>Object</b> Pattern are best suited for small projects, making the Event Distribution Pattern and Datasource Router Pattern best for large projects. Keywords—architectural patterns, quality attributes, software architecture, variability. I...|$|R
