736|89|Public
25|$|In {{a digital}} circuit, an FSM may be built using a {{programmable}} logic device, a programmable logic controller, logic gates and flip flops or relays. More specifically, a hardware implementation requires a register to store state variables, {{a block of}} <b>combinational</b> <b>logic</b> that determines the state transition, and a second block of <b>combinational</b> <b>logic</b> that determines the output of an FSM. One of the classic hardware implementations is the Richards controller.|$|E
500|$|... <b>combinational</b> <b>logic</b> (such as brute-force {{cryptographic}} techniques); ...|$|E
500|$|For instance, in {{electronic}} circuit design, static <b>combinational</b> <b>logic</b> blocks {{can be represented}} as an acyclic system of logic gates that computes a function of an input, where the input and output of the function are represented as individual bits. In general, the output of these blocks cannot {{be used as the}} input unless it is captured by a register or state element which maintains its acyclic properties. [...] Electronic circuit schematics either on paper or in a database are a form of directed acyclic graphs using instances or components to form a directed reference to a lower level component. [...] Electronic circuits themselves are not necessarily acyclic or directed.|$|E
40|$|Abstract — Contention-less {{flip-flops}} (CLFF’s) {{and separated}} power supply voltages (VDD) between flip-flops (FF’s) and <b>combinational</b> <b>logics</b> are proposed {{to achieve a}} maximum energy efficiency operation. The proposed technologies were applied to a 16 -bit integer unit (IU) for media processing in a 65 -nm CMOS process. Measurement results of fabricated chips show that the proposed CLFF reduces the minimum operating voltage of IU’s by 64 mV on average. By scaling VDD from 1. 2 V to 310 mV with the proposed CLFF, the maximum energy efficiency of 1835 GOPS/W and the highest energy efficiency increase of 12. 7 times are achieved...|$|R
40|$|The {{hardware}} {{realization of}} the decimal multiplication where a novel algorithm and a corresponding architecture are proposed to reduce the area of decimal multiplication while keeping the latency in a reasonable rate. In the sequential architecture, the partial product generation and selection cycles are reduced to one. Moreover, the selected easy multiples reduce the hardware requirement of the partial products selector. With simpler <b>combinational</b> <b>logics</b> and less registers, our design shows a much better performance on the area cost. The latency of a multiplication in the proposed architecture is shortened by a less product of the clock period and number of iterations. The proposed multiplier implemented in Cyclone II FPGA and simulated in ALTERA QUARTUS II. The simulation results as a power, delay, speed of proposed multiplier is compared with start and art multiplier. The proposed multiplier is adapted to the arithmetic logic unit circuit in general purpose processors...|$|R
40|$|Abstract:- One {{of major}} {{implementations}} of Linear Threshold Gate (LTG) is via resonant tunneling diodes (RTD). The functionality of this threshold logic gate greatly {{depends on the}} parameters of the RTD and parametric faults impact its functionality. A suitable fault model for <b>Combinational</b> Threshold <b>Logic</b> gates is presented. A methodology is also developed to generate test patterns that detect these parametric faults...|$|R
500|$|Similarly, topological orderings of DAGs {{can be used}} {{to order}} the {{compilation}} operations in a makefile. The program evaluation and review technique uses DAGs to model the milestones and activities of large human projects, and schedule these projects to use as little total time as possible. <b>Combinational</b> <b>logic</b> blocks in electronic circuit design, and the operations in dataflow programming languages, involve acyclic networks of processing elements. DAGs can also represent collections of events and their influence on each other, either in a probabilistic structure such as a Bayesian network or as a record of historical data such as family trees or the version histories of [...] distributed revision control systems. DAGs can also be used as a compact representation of sequence data, such as the directed acyclic word graph representation of a collection of strings, or the binary decision diagram representation of sequences of binary choices. More abstractly, ...|$|E
2500|$|Unlike many {{processors}} of the {{day that}} used a microcoded architecture, the 6809 more resembled the simplified RISC machines that would later appear in the 1980s. [...] The 6809 was implemented as a register-transfer level (RTL) machine, using a large PLA to implement the <b>combinational</b> <b>logic</b> and a two-phase clock to gate the latches.|$|E
2500|$|In the 1930s, while {{studying}} switching circuits, Claude Shannon observed {{that one could}} also apply the rules of Boole's algebra in this setting, and he introduced switching algebra {{as a way to}} analyze and design circuits by algebraic means in terms of logic gates. Shannon already had at his disposal the abstract mathematical apparatus, thus he cast his switching algebra as the two-element Boolean algebra. In circuit engineering settings today, there is little need to consider other Boolean algebras, thus [...] "switching algebra" [...] and [...] "Boolean algebra" [...] are often used interchangeably. Efficient implementation of Boolean functions is a fundamental problem in the design of <b>combinational</b> <b>logic</b> circuits. Modern electronic design automation tools for VLSI circuits often rely on an efficient representation of Boolean functions known as (reduced ordered) binary decision diagrams (BDD) for logic synthesis and formal verification.|$|E
50|$|Sequential {{logic is}} used to {{construct}} finite state machines, a basic building block in all digital circuitry. Virtually all circuits in practical digital devices are a mixture of <b>combinational</b> and sequential <b>logic.</b>|$|R
40|$|Comprehensive {{and self}} contained, this {{tutorial}} covers {{the design of}} a plethora of <b>combinational</b> and sequential <b>logic</b> circuits using conventional logic design and Verilog HDL. Number systems and number representations are presented along with various binary codes. Several advanced topics are covered, including functional decomposition and iterative networks. A variety of examples are provided for <b>combinational</b> and sequential <b>logic,</b> computer arithmetic, and advanced topics such as Hamming code error correction. Constructs supported by Verilog are described in detail. All designs are continued to completion. Each chapter includes numerous design issues of varying complexity to be resolved by the reader...|$|R
50|$|With {{the use of}} {{minimization}} (sometimes called logic optimization), {{a simplified}} logical function or circuit may be arrived upon, and the <b>logic</b> <b>combinational</b> circuit becomes smaller, and easier to analyse, use, or build.|$|R
5000|$|<b>Combinational</b> <b>logic</b> {{minimization}} uses unassigned state-codes as don't-care {{in order}} to reduce the <b>combinational</b> <b>logic.</b>|$|E
5000|$|<b>Combinational</b> <b>logic</b> is used {{to build}} {{circuits}} that produce specified outputs from certain inputs. The construction of <b>combinational</b> <b>logic</b> is generally done using one of two methods: a sum of products, or a product of sums. Consider the following truth table: ...|$|E
50|$|<b>Combinational</b> <b>logic</b> {{is used in}} {{computer}} circuits to perform Boolean algebra on input signals and on stored data. Practical computer circuits normally contain a mixture of combinational and sequential logic. For example, the part of an arithmetic logic unit, or ALU, that does mathematical calculations is constructed using <b>combinational</b> <b>logic.</b> Other circuits used {{in computer}}s, such as half adders, full adders, half subtractors, full subtractors, multiplexers, demultiplexers, encoders and decoders are also made by using <b>combinational</b> <b>logic.</b>|$|E
40|$|We {{present an}} {{efficient}} algorithm for identification of two-line bridges in <b>combinational</b> CMOS <b>logic</b> that narrows down the two-line bridge candidates based on tester responses for voltage tests. Due to the implicit enumeration of bridge sites, no layout extraction or precomputed stuck-at fault dictionaries are required. The bridge identification is easily refined using additional test pattern results when necessary. We present results for benchmark circuits and four common fault models (wired-AND, wired-OR, dominant, and composite), evaluate the diagnosis against other possible fault types, and summarize {{the quality of}} our results. 1...|$|R
40|$|The goal of Synthetic Biology is to {{engineer}} systems from biological parts. One class of systems are those whose {{purpose is to}} process information. My work seeks to build transcription-based devices for use in <b>combinational</b> digital <b>logic.</b> Preliminary characterization experiments show that existing devices fall short of desired device behavior. I propose to develop a novel implementation of transcription-based logic by designing synthetic transcription factors from well-characterized DNA binding and dimerization domains. Initial modeling work serves to inform design of these devices. Poster presented at the 2005 ICSB meeting, held at Harvard Medical School in Boston, MA...|$|R
40|$|The {{aim of this}} {{bachelor}} tesis puts mind to {{the problem}} of forming <b>combinational</b> and sequential <b>logic</b> circuit tasks. These demonstrational tasks will be used in the educational system for the subject automation. To design the tasks was used the program LOGO!Soft Comfort. Verification of proper running was done by the programmale logic controller LOGO! 0 BA 5...|$|R
5000|$|The {{usual way}} to {{implement}} a synchronous sequential state machine is to divide it into a piece of <b>combinational</b> <b>logic</b> {{and a set of}} flip flops called a [...] "state register." [...] Each time a clock signal ticks, the state register captures the feedback generated from the previous state of the <b>combinational</b> <b>logic,</b> and feeds it back as an unchanging input to the combinational part of the state machine. The fastest rate of the clock is set by the most time-consuming logic calculation in the <b>combinational</b> <b>logic.</b>|$|E
5000|$|... <b>combinational</b> <b>logic</b> (such as brute-force {{cryptographic}} techniques); ...|$|E
50|$|Dynamic {{logic is}} {{distinguished}} from so-called static logic in that dynamic logic uses a clock signal in its implementation of <b>combinational</b> <b>logic</b> circuits. The usual {{use of a}} clock signal is to synchronize transitions in sequential logic circuits. For most implementations of <b>combinational</b> <b>logic,</b> a clock signal is not even needed.|$|E
40|$|A task of {{constructing}} {{transformation of the}} hypercube providing monotony of the separating functions when maintaining a definite metric has been first set and solved. The pesults {{of the structure of}} random monotone functions with a small number of low units have been obtained. The programs of two-level synthesis of <b>combinational</b> and <b>logic</b> circuit have been developed. The algorithm for recognizing images in binary sign space has been proposed. The circuits synthesis programs have been developed, debugged and included in the sigma complex and are used when designing the combinational and logical units of large-scale integrated circuitsAvailable from VNTIC / VNTIC - Scientific & Technical Information Centre of RussiaSIGLERURussian Federatio...|$|R
40|$|Abstract — In any circuit that {{comprises}} the logic gates, there is possibility of occurrence of failure due to revelation of faults. Traditionally, the binary logical circuits have basic fault models such as Stuck-At faults, Bridging faults, Delay faults, etc. This paper describes the survey {{made on the}} fault diagnosis methods in the <b>combinational</b> binary <b>logic</b> circuits, which can be further used to optimize for faulty ternary digital circuits which reduce the interconnection and power consumption when compared to binary in the Integrated Circuit (IC) chips. These methods consist of algorithms for the generation of input test patterns to detect the single or multiple stuck-at faults as logical faults...|$|R
40|$|Abstract- Domino {{logic is}} used {{extensively}} in high speed microprocessor datapath design. Although domino gates have small propagation delay, they consume relatively more power. We propose {{a scheme to}} reduce the power consumption of <b>combinational</b> domino <b>logic</b> blocks while maintaining the performance. We replace the PMOS precharge transistor with an NMOS transistor to reduce the overall power consumption of the gate {{at the expense of}} higher delay. We use a heuristic algorithm to replace the fast, high power gates on the off-critical paths with slower, low power gates while maintaining the circuit performance. Our technique reduces dynamic energy of ISCAS’ 85 circuits by 16. 25 %. I...|$|R
5000|$|... #Caption: The <b>combinational</b> <b>logic</b> {{circuitry}} of the 74181 {{integrated circuit}} ...|$|E
50|$|The {{controlling}} {{of signals}} {{by means of}} <b>combinational</b> <b>logic</b> elements.|$|E
50|$|Once {{the desired}} {{operation}} of a circuit has been described using RTL operations, the datapath components may be derived. Every unique variable that is assigned a value in the RTL program can be implemented as a register. Depending on the functional operation performed when assigning a value to a variable, the register for that variable may be implemented as a straightforward register, a shift register, a counter, or a register preceded by a <b>combinational</b> <b>logic</b> block. The <b>combinational</b> <b>logic</b> block associated with a register may implement an adder, subtracter, multiplexer, or some other type of <b>combinational</b> <b>logic</b> function.|$|E
40|$|A {{graphene}} oxide-based fluorescent nanosensor AGO {{has been}} designed and synthesized by covalent grafting allylamine onto GO surface. In aqueous media, AGO displays a highly selective and sensitive discrimination of Fe 3 + from Fe 2 + and other metal ions through electron transfer-induced fluorescence quenching. The quenching of AGO fluorescence is linearly proportional to Fe 3 + concentration {{in a wide range}} of 0 - 120 μM (correlation coefficient R 2 = 0. 9994). Moreover, AGO can be used to construct a <b>combinational</b> three-input <b>logic</b> gate to discriminate Fe 3 + and Fe 2 +. The logic gate works well in intracellular fluorescence imaging, which shows a potential as a promising platform for biosensing analysis. School of Desig...|$|R
40|$|We {{introduce}} <b>combinational</b> stochastic <b>logic,</b> {{an abstraction}} that generalizes deterministic digital circuit design (based on Boolean logic gates) to the probabilistic setting. We show how this logic {{can be combined}} with techniques from contemporary digital design to generate stateless and stateful circuits for exact and approximate sampling {{from a range of}} probability distributions. We focus on Markov chain Monte Carlo algorithms for Markov random fields, using massively parallel circuits. We implement these circuits on commodity reconfigurable logic and estimate the resulting performance in time, space and price. Using our approach, these simple and general algorithms could be affordably run for thousands of iterations on models with hundreds of thousands of variables in real time. ...|$|R
40|$|This work pre 5 eJlts new algmthms for the {{extraction}} of exact and approximate Observability Don't Care sets (ODC sets) in a <b>combinational</b> multiple-level <b>logic</b> ~twork. The P'opo 8 ed algorithms are efficient because they use local information, i. e. the computation of the ODC for a vertex in the network requires only {{the knowledge of the}} don't care sets at the adjacent vertices. Two approaches are proposed. The former computes the exact ODC sets. The latter computes ODC subsets and can be used when partial information on the don't care sets is available. The algorithms for the simplified computation finds the largest subsets of the acblaI ODC sets, given the information available at the adjacent vertices...|$|R
50|$|A {{synchronous}} circuit {{consists of}} two kinds of elements: registers and <b>combinational</b> <b>logic.</b> Registers (usually implemented as D flip-flops) synchronize the circuit's operation {{to the edges of}} the clock signal, and are the only elements in the circuit that have memory properties. <b>Combinational</b> <b>logic</b> performs all the logical functions in the circuit and it typically consists of logic gates.|$|E
5000|$|... #Caption: The <b>combinational</b> <b>logic</b> {{circuitry}} of the 74181 integrated circuit, {{which is}} a simple four-bit ALU ...|$|E
5000|$|In {{digital circuit}} theory, {{sequential}} logic {{is a type}} of logic circuit whose output depends not only on the present value of its input signals but on the sequence of past inputs, the input history. [...] This is in contrast to <b>combinational</b> <b>logic,</b> whose output is a function of only the present input. That is, sequential logic has state (memory) while <b>combinational</b> <b>logic</b> does not.|$|E
40|$|Includes bibliographical {{references}} (pages 69 - 72) The {{objective of}} this thesis is to develop an algorithm for testing of LSI/VLSI circuits, which will result in increased controllability and observability of the inaccessible nodes. This algorithm utilizes {{a new type of}} gates introduced as bi-functional gates that work in two modes namely 1) functional 2) testing. The algorithm determines wherein a given <b>combinational</b> circuit, <b>logic</b> gates should be replaced with these bi-functional gates to obtain maximum testability of that circuit. The applicability of the algorithm is evaluated by considering two realistic examples. This thesis also includes a comparative study of the existing techniques in the field of design for testability, as well as a review of some of the basic fault detection methods...|$|R
40|$|This paper {{proposes a}} new technique, called scan-mapping, for {{applying}} two-pattern tests {{in a standard}} scan design environment. Scan-mapping is performed by shifting the first pattern (VI) into the scan path and then using <b>combinational</b> mapping <b>logic</b> to generate the second pattern (V 2) in the next clock cycle. The mapping logic {{is placed in the}} scan path and avoids the performance degradation of using more complex scan elements to apply two-pattem tests. A procedure is described for synthesizing the mapping logic required to apply a set of two-paiftern tests. Scan-mapping can be used in deteminisl 5 c testing to apply two-pattern tests that can‘t be applied using scan-shifing or functional justijication, and it can be used in built-in self-testing (BIST) to improve the fault coverage fo...|$|R
40|$|First part of {{this thesis}} {{presents}} the design, validation, and implementation of an Orthogonal Frequency Division Multiplexing (OFDM) transmitter and receiver on a Cyclone II FPGA chip using DSP builder and Quartus II high level design tools. The resources in terms of logical elements (LE) including <b>combinational</b> functions and <b>logic</b> registers allocated by the model have been investigated and addressed. The result shows that implementing the basic OFDM transceiver allocates about 14...|$|R
