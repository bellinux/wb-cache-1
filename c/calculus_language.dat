21|214|Public
50|$|Auburn offers Advanced Placement {{classes in}} biology, <b>calculus,</b> <b>language</b> and composition, {{literature}} and composition, Spanish, U.S. history, European history and U.S. politics and government. Three foreign languages are taught - French, Spanish, and Chinese- {{up to the}} 7/8 (4th year) level.|$|E
5000|$|Separate {{work done}} about 1979 at the University of Kaiserslautern {{produced}} a language called KARL ("KAiserslautern Register Transfer Language"), which included design <b>calculus</b> <b>language</b> features supporting VLSI chip floorplanning and structured hardware design. This work {{was also the}} basis of KARL's interactive graphic sister language ABL, whose name was an initialism for [...] "A Block diagram Language". ABL was implemented in the early 1980s by the Centro Studi e Laboratori Telecomunicazioni (CSELT) in Torino, Italy, producing the ABLED graphic VLSI design editor. In the mid-1980s, a VLSI design framework was implemented around KARL and ABL by an international consortium funded by the Commission of the European Union.|$|E
5000|$|Rockingham County High {{requires}} {{students to}} take four English courses consisting of English I, English II, English III, and English IV. Mandatory math classes include Math I, Math II, and Math III. The school requires Environmental Science, Physical Science, and Biology. History classes needed to graduate are World History, American History I, and American History II. Rockingham County High also offers Visual Arts, Marching Band, Concert Band, Woman's Ensemble, Chorus, Concert Choir, Piano Lab, Theater Arts, Journalism, Yearbook, Latin, Spanish, Physical Development, Team Sports, Fitness Training, AFJROTC, Chemistry, Psychology, Advanced Functions and Modeling, Pre Calculus, Calculus, Career Management, Principals of Business, Entrepreneurship, CTE Advanced Studies, Microsoft ITA, Hospitality and Tourism, Sports and Entertainment Marketing, Agriscience Applications, Animal Science, Agricultural Mechanics, Horticulture, Health Science, Nursing Fundamentals, Appeal and Textile Production, Interior Design, Personal Finance, Introduction to Design, Automotive Service, Drafting, Emergency Medical Technology, Public Safety, Fire Fighter Technology, Career Development Internship, Co-op, and Bible. [...] Many classes have optional honors credits and the school offers AP credit in the following courses: Biology, <b>Calculus,</b> <b>Language</b> and Composition, Literature and Composition, World History, and US History.|$|E
5000|$|American Government, <b>Calculus,</b> English <b>Language</b> & Composition, Human Geography, US History, World History ...|$|R
40|$|We {{discuss the}} issues {{encountered}} in the extended algebra and <b>calculus</b> <b>languages</b> for nested relations defined by Roth, Korth, and Silberschatz. Their equivalence proof between algebra and calculus fails because of the keying problems {{and the use of}} extended set operations. Extended set operations also have unintended side effects. Furthermore, their calculus seems to allow the generation of power sets, thus making it more powerful than their algebra...|$|R
40|$|The applied pi <b>calculus</b> is a <b>language</b> for {{modelling}} security protocols. It is {{an extension}} of the pi <b>calculus,</b> a <b>language</b> for studying concurrency and process interaction. This chapter presents the applied pi calculus in a tutorial style. It describes reachability, correspondence, and observational equivalence properties, with examples showing how to model secrecy, authentication, and privacy aspects of protocols...|$|R
40|$|Starting from an ATN-grammar and {{translation}} rules assigning {{expressions of}} a predicate cal-culus language to {{the symbols of}} the grammar one can produce an attribute grammar for the trans-lation of natural language sentences (here Ger-man) into expressions of the predicate <b>calculus</b> <b>language.</b> The paper illustrates {{that this can be}} done in a straightforward way and outlines fur-ther improvements of the resulting attribute grammar...|$|E
40|$|We {{introduce}} a {{natural language interface}} for building stochastic pi calculus models of biological systems. In this language, complex constructs describing biochemical events are built from basic primitives of association, dissociation and transformation. This language thus allows us to model biochemical systems modularly by describing their dynamics in a narrative-style language, while making amendments, refinements and extensions on the models easy. We demonstrate the language on a model of Fc-gamma receptor phosphorylation during phagocytosis. We provide a tool implementation of the translation into a stochastic pi <b>calculus</b> <b>language,</b> Microsoft Research's SPiM...|$|E
40|$|The {{combined}} {{approach of the}} Qualitative Reasoning and Probabilistic Functions for the knowledge representation is proposed. The method aims at represent uncertain, qualitative knowledge that {{is essential for the}} moving blocks task's execution. The attempt to formalize the commonsense knowledge is performed with the Situation <b>Calculus</b> <b>language</b> for reasoning and robot's beliefs representation. The method is implemented in the Prolog programming language and tested for a specific simulated scenario. In most cases the implementation enables us to solve a given task, i. e., move blocks to desired positions. The example of robot's reasoning and main parts of the implemented program's code are presented...|$|E
50|$|Students {{may take}} Advanced Placement Exams in Biology, <b>Calculus,</b> English <b>Language,</b> English Literature, European History, Foreign Language, Physics, Psychology, U.S. Government & Politics and U.S. History.|$|R
50|$|Leadership Public Schools, Hayward offers college preparatory and Advanced Placement classes. Current AP classes include: biology, <b>calculus,</b> English <b>language,</b> English literature, government, physics, Spanish, statistics, and US history.|$|R
50|$|Honors Courses {{are offered}} in Math, Science, English, Foreign Language, and Social Studies; AP testing is offered in Anatomy/Physiology, Physics II, College <b>Calculus,</b> Foreign <b>Language,</b> and Senior Honors English.|$|R
40|$|As {{database}} {{systems are}} increasingly being used in advanced applications, it is becoming common that data in these applications contain some elements of uncertainty. These arise from many factors, such as measurement errors and cognitive errors. As such, many researchers have focused on defining comprehensive uncertainty data models of uncertainty database systems. However, existing uncertainty data models do not adequately support some applications. Moreover, very few works address uncertainty tuple calculus. In this paper we advocate a probabilistic data model for representing uncertain information. In particular, we establish a probabilistic tuple <b>calculus</b> <b>language</b> and its semantics to meet the corresponding probabilistic relational algebra. 1...|$|E
40|$|Abstract. The {{combined}} {{approach of the}} Qualitative Reasoning and Probabilistic Functions for the knowledge representation is proposed. The method aims at represent uncertain, qualitative knowledge that {{is essential for the}} moving blocks task’s execution. The attempt to formalize the commonsense knowledge is performed with the Situation <b>Calculus</b> <b>language</b> for reasoning and robot’s beliefs representation. The method is implemented in the Prolog programming language and tested for a specific simulated scenario. In most cases the implementation enables us to solve a given task, i. e., move blocks to desired positions. The example of robot’s reasoning and main parts of the implemented program’s code are presented...|$|E
40|$|Database {{programming}} languages provide powerful telationai {{structures and}} operators based on, for exampb, first-order predicate <b>calculus.</b> <b>Language</b> Constructs for database programming, including a tmnsaction concepC requite thsrefof’e a predttteorbnted approach to con~m~lcy c~ntrool. A predicative optimistic concunency control is presented that attacks problems inhefwt in predtcate locking. Oniy those conflicts that achrally occurred between tnurractions Srs detected, and well-known query evaluation algorithms en 9 applied instead of algorithms testing the diijointneas of certain m&icted cbsses of pmdiites. For that reason, {{this approach is}} an elegant solution to the phantom problem. 1 Introduction: Programmer 6 are Afrald of Phantoms Data in a database are often subject to integrity constraints that require, one way or another, that statements ate execute...|$|E
50|$|Advanced Placement {{classes are}} {{available}} in six subjects: Biology, <b>Calculus,</b> English <b>Language</b> and Composition, Psychology, Spanish Language, and United States History. Students may substitute physical education classes with JROTC classes.|$|R
50|$|We {{work with}} first-order {{predicate}} <b>calculus.</b> Our <b>languages</b> allow constant, function and relation symbols. Structures consist of (non-empty) domains and {{interpretations of the}} relevant symbols as constant members, functions or relations over that domain.|$|R
40|$|International audienceWe {{introduce}} a Galois connection <b>calculus</b> for <b>language</b> independent specification of abstract interpretations used in programming language semantics, formal verification, and static analysis. This Galois connection calculus and its type system are typed by abstract interpretation...|$|R
40|$|Recently, many {{temporal}} query languages, such as TCAL and TQuelhave {{been proposed}} for temporal databases. However, {{there are still}} some limitations such as the inadequacy on operating data with temporal elements and handling the semantics of time ‘NOW ’ in these temporal query languages. After defining a new temporal relational algebra, in this paper we build a tuple <b>calculus</b> <b>language</b> based on gap-interval for temporal databases. This tuple calculus is designed to support time query, non-time query, and general temporal query. In particular, the semantics of time ‘NOW ’ is well implemented in this language; and the first temporal-normalform of relations under the extended operators is closure in our temporal query language...|$|E
40|$|Web {{services}} {{are becoming more}} and more complex, involving numerous interacting business objects within considerable processes. In order to fully explore Web service business opportunities while ensuring a correct and reliable modelling and execution, analyzing and tracking Web services interactions will enable them to be well understood and controlled. Then, given the resulting event log we want to verify certain specified properties, to provide knowledge about the context of and the reasons for discrepancies between services'behaviours and related instances. This paper advocates a novel technique to log composite Web services and a formal approach, based on an algeabric specification of the discrete event <b>calculus</b> <b>language</b> DEC, to check behavioural properties of composite Web services regarding their execution log. An automated induction-based theorem prover SPIKE is used as verification back-end...|$|E
40|$|Virtual Worlds {{are very}} popular media for social {{interaction}} {{and we believe}} that the adoption of this media is suitable for Electronic Government applications. It can increase the capillarity of public services, facilitate the access to (and execution of) government services and provide citizens with a natural and immersive experience. In the present paper we introduce a Government Virtual Institution Model that satisfies relevant issues such as: user friendliness to citizens with diverse education levels; facilitated connection between heterogeneous government systems; satisfaction of government services requirements related to security, privacy, reliability, scalability and interoperability. The government services and the information flow across the Government Virtual Institution are formally described using LCC (the Lightweight Coordination <b>Calculus)</b> <b>language,</b> and the model specifies the use of the JamSession decentralized architecture for virtual worlds...|$|E
50|$|All {{students}} in the senior high school division (grades 10 to 12) have courses in Chinese Language, Math (including algebra, geometry and basic <b>calculus),</b> English <b>Language,</b> Physics, Chemistry, Biology, History, Geography, Economics, and Philosophy. All science courses include lab courses and lectures.|$|R
5000|$|Louis Hjelmslev (1899-1965) {{developed}} a formalist approach to Saussure's structuralist theories. His best known work is Prolegomena to a Theory of Language, which was expanded in Résumé of the Theory of Language, a formal development of glossematics, his scientific <b>calculus</b> of <b>language.</b>|$|R
40|$|International audienceWe {{show that}} the {{description}} logic SOQ with number restrictions on transitive roles is decidable by a terminating tableau <b>calculus.</b> The <b>language</b> decided by the calculus includes the universal role, which allows us to internalize TBox axioms. Termination {{of the system is}} achieved through pattern-based blocking...|$|R
40|$|Abstract We {{introduce}} a {{natural language interface}} for building stochastic π calculus models of biological systems. In this language, complex constructs describing biochemical events are built from basic primitives of association, dissociation and transformation. This language thus allows us to model biochemical systems modularly by describing their dynamics in a narrative-style language, while making amendments, refinements and extensions on the models easy. We give a formal semantics for this language and a translation algorithm into stochastic π calculus that delivers this semantics. We demonstrate the language on a model of Fcγ receptor phosphorylation during phagocytosis. We provide a tool implementation of the translation into a stochastic π <b>calculus</b> <b>language,</b> Microsoft Research’s SPiM, 1 2 {{which can be used}} for simulation and analysis. Key words: systems biology; stochastic π calculus; SPiM; modellin...|$|E
40|$|Abstract. Web {{services}} {{are becoming more}} and more complex, involving numerous interacting business objects within considerable processes. In order to fully explore Web service business opportunities while ensuring a correct and reliable modelling and execution, analyzing and tracking Web services interactions will enable them to be well understood and controlled. Then, given the resulting event log we want to verify certain specified properties, to provide knowledge about the context of and the reasons for discrepancies between services’behaviours and related instances. This paper advocates a novel technique to log composite Web services and a formal approach, based on an algeabric specification of the discrete event <b>calculus</b> <b>language</b> DEC, to check behavioural properties of composite Web services regarding their execution log. An automated induction-based theorem prover SPIKE is used as verification back-end. ...|$|E
40|$|Web service {{composition}} {{needs to}} increase the dynamic feature of adapt ing complex and unstable business environment. Thus the service selection and evaluation are very important for service composition. Although previous studies have stated some approaches to support dynamic composition, {{they are unable to}} balance the flexibility and verification very well in dynamic environment. Moreover, most service selection methods only depend on the similarity of a pair of single services. These methods are useful and concise to find substitutes for unavailable services, but sometimes they might be too strict to find a solution. To overcome these problems, we propose a novel approach named SPACE architecture with six basic structures, and define the service composition based on situation <b>calculus</b> <b>language.</b> SPACE estimates the similarity by the basic structures and constraints rather than the features of single service. It can help us to find non-optimal but acceptable substitutes and guarantee the verifications of composition. Finally, as a case study we consider a health care scenario to demonstrate our approach.     </span...|$|E
50|$|Clear Lake High School has AP {{programs}} in biology, <b>calculus,</b> English <b>language,</b> English literature, and U.S. history. ROP classes include computers, photo, and wood shop. In 2011-12, 55% of sophomores passed the English {{portion of the}} CAHSEE and 53% passed the math portion. It had a 91.3% graduation rate in 2010-11.|$|R
40|$|We {{propose a}} {{language}} which can express every computable query. The language is syntactically {{based on the}} first-order predicate calculus, but semantically is interpreted as post-conditions, unlike the customary <b>calculus</b> query <b>languages.</b> The language has a capability to restrict itself to reasonable queries, accepting criteria of reasonability as a parameter...|$|R
2500|$|An axiom system {{discovered}} by Jan Łukasiewicz formulates a propositional <b>calculus</b> in this <b>language</b> as follows. The axioms are all substitution instances of: ...|$|R
40|$|Abstract—Web service {{composition}} {{needs to}} increase the dynamic feature of adapting complex and unstable business environment. Thus the service selection and evaluation are very important for service composition. Although previous studies have stated some approaches to support dynamic composition, {{they are unable to}} balance the flexibility and verification very well in dynamic environment. Moreover, most service selection methods only depend on the similarity of a pair of single services. These methods are useful and concise to find substitutes for unavailable services, but sometimes they might be too strict to find a solution. To overcome these problems, we propose a novel approach named SPACE architecture with six basic structures, and define the service composition based on situation <b>calculus</b> <b>language.</b> SPACE estimates the similarity by the basic structures and constraints rather than the features of single service. It can help us to find non-optimal but acceptable substitutes and guarantee the verifications of composition. Finally, as a case study we consider a health care scenario to demonstrate our approach. Index Terms—web services composition, composite structure, SPACE architecture, situation calculus I...|$|E
40|$|We {{study the}} {{foundations}} of the integration issues that arise in a federation of heterogeneous data sources, possibly storing related information. Some of the notable features of our approach, motivated by the shortcomings of existing technology, include (a) the ability to share data across multiple heterogeneous data sources, (b) the ability to manipulate the meta-data (schema) component of a data source in the same vein as data can be manipulated, and (c) the ability to query besides well-structured data sources (such as relational databases), semi-structured data sources (such as the HTML documents on the World Wide Web). Our approach is declarative and is based on a simple logic called SchemaLog. SchemaLog's syntax is higher-order but it enjoys a first-order semantics. We present a formal account of the semantics of SchemaLog by developing a model theory, a proof theory, and a fixpoint theory. SchemaLog can be implemented on top of existing database systems in a 'non-intrusive' way. Realizing an efficient implementation of a SchemaLog-based system warrants the study of the calculus and algebraic languages underlying SchemaLog. We develop a new algebra by extending the conventional relational algebra with some new operations that are capable of manipulating both data and schema information in a federation of databases. We also develop a <b>calculus</b> <b>language</b> inspired by SchemaLog. Based on the <b>calculus</b> <b>language,</b> we study varying notions of safety that naturally arise in a federation scenario. One of our primary concerns in this dissertation has been the practical relevance and industrial impact of our contributions. In this vein and inspired by the SchemaLog experience, we develop a principled extension of SQL, called SchemaSQL. SchemaSQL is downward compatible with SQL syntax and semantics and is capable of (a) representing data in a database, in a structure substantially different from the original database, in which data and meta-data may be interchanged, (b) creating views whose schema is dynamically dependent on the input database, (c) expressing novel aggregation (over rows, and in general blocks of information) operations, in the spirit of some of the functionalities needed in OLAP applications, and (d) providing a great facility for interoperability and data, meta-data management in multidatabase systems. Legacy as well as non-traditional information systems constitute an important fragment of the data sources available in real-life. We demonstrate that SchemaLog can be naturally extended to support non-relational systems as well. In particular, we address the fundamental problem of retrieving specific information of interest to the user, from the enormous number of resources that are available on the Web. With this in mind, and inspired by SchemaLog, we develop a simple logic called WebLog and illustrate the simplicity and power of WebLog for Web querying and restructuring using a variety of applications involving real-life information in the Web. (Abstract shortened by UMI. ...|$|E
40|$|AbstractWe {{describe}} {{one component}} of a “hybrid” Knowledge Representation Language (KRL) used {{for the development of}} Large Knowledge Bases (LKBs). This hybrid language involves two different aspects, the “descriptive” and the “definitional”. The representation of the elementary events occurring in the real world (descriptive data = “Snoopy is Charlie Brown's beagle”) is organized around “semantic predicates” (with “roles” and “arguments”); this gives rise to units called “predicative occurrences”. The single predicative occurrences can be combined using logical, causal etc., relationships, giving rise to complex conceptual constructions (“binding occurrences”). “Abstract” conceptual units (“templates”) which describe the expected properties of the “concrete” predicative and binding occurrences are placed in a specialization hierarchy (H_TEMP) characterized by the inheritance of properties and behaviours; the concrete “occurrences” constitute the “leaves” of this hierarchy. On the other hand, the “classes” representing the “general categories” of all the basic entities of the application domain which appear in the predicative occurrences are defined in terms of their own specialization hierarchy, H_CLASS (this is definitional data = “A beagle is a sort of hound / a hound is a dog … ”); the concrete “instances” of the defined classes are the “leaves” of this second hierarchy. The “definitional component” is not discussed in this article. The main difference between this KRL and other recent “hybrid” languages is that the “descriptive component” is not a first order predicate <b>calculus</b> <b>language,</b> but a highly structured semantic network...|$|E
50|$|The {{following}} Advanced Placement {{courses are}} offered: English Literature, Art History, Art Studio, Spanish <b>Language,</b> <b>Calculus</b> (BC), Government, US History, Statistics, and European History.|$|R
50|$|MHS offers AP {{courses in}} English literature, English <b>language,</b> <b>calculus,</b> physics, {{environmental}} science, U.S. history, French language, and Spanish language. It has an agriculture department.|$|R
50|$|Advanced Placement courses, {{which are}} {{eligible}} for college credit, include <b>Calculus</b> AB, English <b>language</b> and English literature, environmental science, accounting, United States history, and world history.|$|R
