265|200|Public
2500|$|To convert numbers between bases, {{one can use}} {{the general}} <b>conversion</b> <b>algorithm</b> (see the {{relevant}} section under positional notation). Alternatively, one can use digit-conversion tables. The ones provided below {{can be used to}} convert any duodecimal number between 0.01 and ƐƐƐ,ƐƐƐ.ƐƐ to decimal, or any decimal number between 0.01 and 999,999.99 to duodecimal. To use them, the given number must first be decomposed into a sum of numbers with only one significant digit each. For example: ...|$|E
5000|$|DmitriRender uses GPU-oriented Frame Rate <b>Conversion</b> <b>algorithm</b> {{with native}} DXVA support for frame interpolation.|$|E
50|$|Read-only, right-moving Turing {{machines}} are equivalent to NDFAs (as well as DFAs by conversion using the NDFA to DFA <b>conversion</b> <b>algorithm).</b>|$|E
40|$|Online <b>conversion</b> <b>algorithms</b> are broadly of {{two types}} - {{heuristic}} <b>conversion</b> <b>algorithms</b> and guaranteeing <b>conversion</b> <b>algorithms.</b> The analysis of heuristic <b>conversion</b> <b>algorithms</b> {{is based on}} an experimental perspective, whereas guaranteeing <b>conversion</b> <b>algorithms</b> are analyzed from an analytical perspective. This work conjoins these two approaches in order to verify an algorithms’ applicability to practical problems. Empirical-case as well as worst-case results are derived. First, the question whether the applicability of heuristic <b>conversion</b> <b>algorithms</b> can be verified through competitive analysis is to be answered. Second, the question whether the applicability of guaranteeing <b>conversion</b> <b>algorithms</b> can be verified through experiments is to be answered. Results, presented in the form of research papers, show that combining these approaches provides an insight into the applicability of online <b>conversion</b> <b>algorithms</b> to practical problems...|$|R
40|$|In this paper, three {{parallel}} polygon scan <b>conversion</b> <b>algorithms</b> {{have been}} proposed, and their performance when executed on a shared bus architecture has been compared. It {{has been shown}} that the parallel algorithm that does not use edge coherence performs better than those that use edge coherence. Further, a multiprocessing architecture has been proposed to execute the parallel polygon scan <b>conversion</b> <b>algorithms</b> more efficiently than a single shared bus architecture...|$|R
25|$|Tetrahedra {{are used}} in color space <b>conversion</b> <b>algorithms</b> {{specifically}} for {{cases in which the}} luminance axis diagonally segments the color space (e.g. RGB, CMY).|$|R
5000|$|The sentential rule {{here is not}} an IG rule, {{but using}} the above <b>conversion</b> <b>algorithm,</b> we can define new rules for , {{changing}} the grammar to: ...|$|E
5000|$|In step [...] "START" [...] of {{the above}} <b>conversion</b> <b>algorithm,</b> just a rule S0→Expr {{is added to the}} grammar.After step [...] "TERM", the grammar looks like this: ...|$|E
5000|$|... 1988. [...] "Imcomp -- An Image Compression and <b>Conversion</b> <b>Algorithm</b> for the Efficient Transmission, Storage, and Display of Color Images". With M. Krogh. In: NCSA Data Link. Vol. 2, No. 3, National Center for Supercomputing Applications, June 1988, pp. 11- 24 ...|$|E
40|$|The survey {{investigates the}} {{existing}} 2 D to 3 D <b>conversion</b> <b>algorithms</b> {{developed in the}} past 30 years by various computer vision research communities across the world. According to the depth cues on which the algorithms reply, the algorithms are classified into the following 12 categories: binocular disparity, motion, defocus, focus, silhouette, atmosphere scattering, shading, linear perspective, patterned texture, symmetric patterns, occlusion (curvature, simple transform) and statistical patterns. The survey describes and analyzes algorithms that use a single depth cue and several promising approaches using multiple cues, establishing an overview and evaluating its relative position {{in the field of}} <b>conversion</b> <b>algorithms...</b>|$|R
40|$|In this paper, a new {{adaptive}} approach, namelythe illumination estimation {{approach is}} {{introduced into the}} colorto grayscale conversion technique. In this approach, someassumptions {{will be made to}} calculate the weight contribution ofred, green, and blue components during the conversion process. Two color to grayscale <b>conversion</b> <b>algorithms</b> are developedunder this approach, namely the Gray World Assumption Colorto Grayscale Conversion (GWACG) and Shade of GrayAssumption Color to Grayscale (SGACG) <b>conversion</b> <b>algorithms.</b> Based on the extensive experimental results, the proposedalgorithms outperform the conventional conversion techniquesby producing resultant grayscale images with higher brightness,contrast, and amount of details preserved. For this reason, theseproposed algorithms are suitable for pre- and post- processing ofdigital images...|$|R
50|$|In {{theoretical}} computer science, {{in particular}} in formal language theory, Kleene's algorithm transforms a given deterministic finite automaton (DFA) into a regular expression. Together with other <b>conversion</b> <b>algorithms,</b> it establishes the equivalence of several description formats for regular languages.|$|R
50|$|If {{there is}} little inter-frame motion, this <b>conversion</b> <b>algorithm</b> is fast, {{inexpensive}} and effective. Many inexpensive consumer television system converters have employed this technique. Yet in practise, most video features significant inter-frame motion. To reduce conversion artefacts, more modern or expensive equipment may use sophisticated techniques.|$|E
5000|$|Conversion to a {{character}} form or for display (e.g., to a text-based format such as XML, or to drive signals for a seven-segment display) {{is a simple}} per-digit mapping, and {{can be done in}} linear (O(n)) time. Conversion from pure binary involves relatively complex logic that spans digits, and for large numbers no linear-time <b>conversion</b> <b>algorithm</b> is known (see Binary numeral system).|$|E
5000|$|To convert numbers between bases, {{one can use}} {{the general}} <b>conversion</b> <b>algorithm</b> (see the {{relevant}} section under positional notation). Alternatively, one can use digit-conversion tables. The ones provided below {{can be used to}} convert any duodecimal number between 0.01 and ƐƐƐ,ƐƐƐ.ƐƐ to decimal, or any decimal number between 0.01 and 999,999.99 to duodecimal. To use them, the given number must first be decomposed into a sum of numbers with only one significant digit each. For example: ...|$|E
40|$|Two count <b>conversion</b> <b>algorithms</b> and the {{associated}} dynamic sensor model for the M/WFOV nonscanner radiometers are defined. The sensor model provides and updates the constants necessary for the <b>conversion</b> <b>algorithms,</b> though {{the frequency with which}} these updates were needed was uncertain. This analysis therefore develops mathematical models for the conversion of irradiance at the sensor field of view (FOV) limiter into data counts, derives from this model two <b>algorithms</b> for the <b>conversion</b> of data counts to irradiance at the sensor FOV aperture and develops measurement models which account for a specific target source together with a sensor. The resulting algorithms are of the gain/offset and Kalman filter types. The gain/offset algorithm was chosen since it provided sufficient accuracy using simpler computations...|$|R
40|$|A color {{model is}} an {{abstract}} mathematical model describing the way colors {{can be represented}} as tuples of numbers, typically as three or four values or color components (e. g. RGB and CMYK are color models). However, a color model with no associated mapping function to an absolute color space is {{a more or less}} arbitrary color system with no connection to any globally understood system of color interpretation. This paper mainly discusses about various colour spaces and the how they organized and the colour <b>conversion</b> <b>algorithms</b> like CMYK to RGB, RGB to CMYK, HSL to RGB, RGB to HSL, HSV to RGB, RGB To HSV, YUV to RGB And RGB to YUV. &# 13; &# 13; Keywords: Colour spaces, colour <b>conversion</b> <b>algorithms,</b> CMYK, RGB, HSL, HSV and YU...|$|R
40|$|Time to {{frequency}} and frequency to time domain <b>conversion</b> <b>algorithms</b> {{needed in the}} steady-state analysis of nonlinear circuits using the harmonic balance method become complicated for multitone signal inputs. This paper shows that an efficient algorithm using the multidimensional discrete Fourier transform can be employed for a proper choice of the input signal frequencies. link_to_subscribed_fulltex...|$|R
40|$|Decoding tree {{consisting}} of 40 -bit semiconductor read-only memories interconverts binary and decimal numbers 50 to 100 {{times faster than}} current methods. Decimal-to-binary <b>conversion</b> <b>algorithm</b> {{is based on a}} divided-by- 2 iterative equation, binary-to-decimal <b>conversion</b> <b>algorithm</b> utilizes multiplied-by- 2 iterative equation...|$|E
40|$|ICSLP 2000 : the 6 th International Conference on Spoken Language Processing, October 16 - 20, 2000, Beijing, China. The voice <b>conversion</b> <b>algorithm</b> {{based on}} the Gaussian mixture model (GMM) has also been {{proposed}} by Stylianou et al. In this algorithm, the acoustic space of a speaker is represented continuously. In this paper, we apply this GMM-based voice <b>conversion</b> <b>algorithm</b> to STRAIGHT proposed by Kawahara et al., which is recognized as a high quality vocoder. In order to evaluate this voice <b>conversion</b> <b>algorithm,</b> we perform subjective and objective experiments on speech quality and speaker individuality, comparing with the method {{based on the}} codebook mapping. As results, {{the performance of the}} GMM-based voice <b>conversion</b> <b>algorithm</b> is better than that of the codebook mapping method. Effects by the amount of training data for the voice conversion algorithms are also investigated, as well as the number of the Gaussian mixtures. These evaluation results clarify that the GMM-based voice <b>conversion</b> <b>algorithm</b> is successfully applied to STRAIGHT...|$|E
30|$|Note that 0 is a 4 [*]×[*] 1 zero matrix, {{and that}} {{conversion}} of lattice parameters to process parameters started with two channels, but ended with four channels due to sequential processing. The new Levinson–Durbin type <b>conversion</b> <b>algorithm</b> for a fullbandARMA spectrum estimation can be similarly {{developed as a}} special case of subband implementation. The lattice prediction filter for fullband ARMA spectrum estimation, which consists of one and two-channel sections, is shown in Figure 4. The corresponding <b>conversion</b> <b>algorithm</b> can also be realized in two sections as summarized in Subsection New Levinson-Durbin Type <b>Conversion</b> <b>Algorithm</b> for Two-Channel ARMA Lattice Prediction.|$|E
30|$|Table 6 {{also shows}} the cross-language voice-tag {{application}} {{performances of the}} sequential and batch mode voice-to-phoneme <b>conversion</b> <b>algorithms,</b> where the acoustic models are trained on the seven evaluation languages while the voice-tags are created and applied on American English, a distinct target language. For reference, we also include the American English HMM performance as a baseline.|$|R
40|$|Abstract Ground Logic with Equality (GL =) is {{a subset}} of First-Order Logic (FOL) in which {{functions}} or quantifiers are excluded, but equality is preserved. We argue about GL = ’s unique position (in terms of expressiveness and ease of decidability) between FOL and Propositional Logic (PL). We aim to solve satisfiability (SAT) problems formulated in GL = by converting them into PL using a satisfiability-preserving <b>conversion</b> <b>algorithms,</b> and running a general SAT solver on the resulting PL Knowledge Base (KB). We introduce two <b>conversion</b> <b>algorithms,</b> with the latter utilizing the former as a subroutine, and prove their correctness- that is, that the translation preserves satisfiability. The main contribution of this work is in utilizing input fragmentation to yield PL KBs that are smaller than possible prior to our work, thus resulting {{in the ability to}} solve GL = SAT problems faster than was possible before. ...|$|R
40|$|Canonical-signed-digit (CSD) {{coefficient}} representations lead to efficient add/subtract {{networks for}} hardwired DSP multiplies of two’s complement signals. CSD {{has always been}} considered a fixed-point system, and available <b>conversion</b> <b>algorithms</b> operate on integers. Using methods applicable to many simple number systems, we rederive CSD for fractional numbers, derive a simple floating-point recursion for converting fractions to CSD, and briefly examine the associated truncation error. ...|$|R
40|$|A {{new voice}} <b>conversion</b> <b>algorithm</b> is presented, which {{transforms}} the utterance of a source speaker into the utterance {{of a target}} speaker. The voice <b>conversion</b> <b>algorithm</b> is based on spectral speech analysis, nonlinear frequency transformation, spectral envelope warping, spectrum interpolation and cepstral speech synthesis. Prosodic transformations, i. e. fundamental frequency, time and intensity scale modifications are also shortly mentioned...|$|E
40|$|WESTPRAC VII 2000 : the 7 th West Pacific Regional Acoustics Conference, October 3 - 5, 2000, Kumamoto, Japan. Voice {{conversion}} is {{a technique}} used to convert one speaker's voice into another speaker's voice. As a typical voice <b>conversion</b> <b>algorithm,</b> the codebook mapping method has been studied by Abe et al. The main shortcoming of this method {{is the fact that}} the acoustic space of a speaker is limited to a discrete representation. To represent the acoustic space continuously, the algorithm based on the Gaussian mixture model (GMM) has also been proposed by Stylianou et al. In this paper, we apply this GMM-based voice <b>conversion</b> <b>algorithm</b> to STRAIGHT proposed by Kawahara et al., which is recognized as a high quality vocoder. In order to evaluate this voice <b>conversion</b> <b>algorithm,</b> we performed subjective and objective experiments on speaker individuality and speech quality, comparing with the method based on the codebook mapping. As results, the performance of the GMM-based voice <b>conversion</b> <b>algorithm</b> is better than that of the codebook mapping method. Effects by the amount of training data for the voice conversion algorithms were also investigated, as well as the number of the Gaussian mixtures. These evaluation results clarify that the GMM-based voice <b>conversion</b> <b>algorithm</b> is successfully applied to STRAIGHT...|$|E
40|$|Approved {{for public}} release; {{distribution}} is unlimitedThe Joint Interagency Task Force South (JIATF South) {{serves as the}} center for counterillicit trafficking operations against Central and South American drug cartels. JIATF South has jurisdiction over an enormous area and has {{a limited number of}} search and interdiction assets. Thus, mathematical models and tools to improve the search planning process could provide an immense benefit. This thesis contributes to a multiinstitution effort to develop these models and tools. The goal is to provide enhanced situational awareness to operators about the likely location of smuggling targets and recommend search plans. The thesis combines a probability model and an optimization model into a user-friendly tool that operators and researchers can easily use. We also develop methods to convert the output of the probability model into inputs to the optimization model. This could be especially important if environmental factors {{play a significant role in}} the routes taken by drug smugglers. We examine how accurately this <b>conversion</b> <b>algorithm</b> reproduces the actual paths taken by smugglers. More importantly, we evaluate how well the search plan generated by the <b>conversion</b> <b>algorithm</b> performs. We find, in most cases, that the <b>conversion</b> <b>algorithm</b> provides excellent results; however, there are some situations where the <b>conversion</b> <b>algorithm</b> performs poorly. Lieutenant, United States Nav...|$|E
40|$|The {{equivalence}} {{exists between}} regular grammar and finite automata in accepting languages. Some complicated <b>conversion</b> <b>algorithms</b> {{have also been}} in existence. The simplified forms of the algorithms and their proofs are given. And the construction algorithm 5 of the equivalent conversion from finite automata to left linear grammar is presented {{as well as its}} correctness proof. Additionally, a relevant example is expounded. </p...|$|R
40|$|In this contribution, {{we present}} a system for video {{broadcast}} to mobile receivers, that applies MPEG- 4 encoding and uses DAB/DMB as transmission channel. A central task for the design is the optimization of pre- and post-processing which is {{not covered by the}} standard, e. g. the optimum choice of a channel video format for DAB/DMB, that limits the available video data rate to approximately 1 Mbit/s. For this purpose we developed motion compensated video format <b>conversion</b> <b>algorithms,</b> that consist of two main parts. The first is a fast hybrid recursive motion estimator that produces a dense motion vector field. Then the motion information is used to generate unknown pixel information with an error robust median interpolation technique. The whole system was simulated including pre-processing, encoding, decoding and postprocessing to find the optimum combination of channel formats and format <b>conversion</b> <b>algorithms</b> for the broadcast system. Simulation results are given for a variety of potent [...] ...|$|R
40|$|A {{triangular}} hierarchical {{data structure}} {{has been proposed}} {{as the basis for}} a global geographical information system. In this paper we briefly review one such scheme based on recursive subdivision of an octahedron and <b>conversion</b> <b>algorithms</b> to and from latitude/longitude. Schemes for representing point, line and area objects on the earth's surface are described. We present algorithms for identifying triangle neighbors, region filling and object dilation...|$|R
30|$|The {{errors in}} the {{implementation}} of the grapheme-to-phoneme <b>conversion</b> <b>algorithm</b> and in conversion rules tables have been corrected by modifications, made within an application source code in Python programming language.|$|E
40|$|This thesis {{deals with}} path-controlled grammars, which are grammars that place {{restrictions}} on the paths in a derivation tree of a context-free grammar. The goal of this thesis {{is to create an}} algorithm for conversion between the path-controlled grammars and the state grammars, which is a dierent type of regulated grammars. Another goal is to study the generative power of path-controlled grammars based on the <b>conversion</b> <b>algorithm.</b> The <b>conversion</b> <b>algorithm</b> is implemented and tested on a number of path-controlled grammars. Also, its complexity is discussed. Finally, a parsing tool for path-controlled grammars is implemented. Complexity of this tool is analyzed as well...|$|E
3000|$|... s per FFT was {{achieved}} using 4 streams. Analysis {{was carried out}} to provide a complete breakdown of the execution time and to find {{the performance of the}} <b>conversion</b> <b>algorithm</b> in the FFT calculation.|$|E
40|$|Key-to-address <b>conversion</b> <b>algorithms</b> {{which have}} been used for a large, direct access file are {{compared}} with respect to record density and access time. Cumulative distribution functions are plotted to demonstrate the distribution of addresses generated by each method. The long-standing practice of counting address collisions is shown to be less valuable in fudging algorithm effectiveness than considering the maximum number of contiguously occupied file locations...|$|R
40|$|We {{show how}} the {{complexity}} of counting relates to the well known phenomenon that computing Gröbner bases under a lexicographic order is generally harder than total degree orders. We give simple examples of polynomials {{for which it is}} very easy to compute their Gröbner basis using a total degree order but for which exponential time is required for a lexicographic order. It follows that <b>conversion</b> <b>algorithms</b> do not help in such cases...|$|R
50|$|His {{research}} led to {{an internal}} technical report proposing the CORDIC algorithm to solve sine and cosine functions and a prototypical computer implementing it. The report also discussed the possibility to compute hyperbolic coordinate rotation, logarithms and exponential functions with modified CORDIC algorithms. Utilizing CORDIC for multiplication and division was also conceived at this time. Based on the CORDIC principle, Dan H. Daggett, a colleague of Volder at Convair, developed <b>conversion</b> <b>algorithms</b> between binary and binary-coded decimal (BCD).|$|R
