276|133|Public
25|$|The Windows Registry is a {{hierarchical}} database that stores <b>configuration</b> <b>settings</b> and {{options for the}} operating system. The terminology is somewhat misleading so it is briefly summarised here.|$|E
25|$|In {{addition}} to {{policies and procedures}} and access records, information technology documentation should also include a written record of all <b>configuration</b> <b>settings</b> on {{the components of the}} network because these components are complex, configurable, and always changing.|$|E
25|$|Windows Search Configuration APIs {{are used}} to specify the <b>configuration</b> <b>settings,</b> such as {{the root of the}} URIs that needs to be monitored, setting the {{frequency}} of crawling or viewing status information like number of items indexed or length of the gather queue or the reason for throttling the indexer.|$|E
5000|$|Internet Explorer <b>Configurations</b> (<b>settings)</b> - Monitors browser {{security}} settings ...|$|R
50|$|NewDos/80 {{had many}} options for specifying {{specific}} low-level disk <b>configurations.</b> <b>Settings</b> such as diskette formats, disk drive types, track geometry and controllers could be configured using the PDRIVE command. In version 2.1, Apparat added support for hard disk drives via an external bus adapter.|$|R
50|$|The term {{originated}} for <b>configurations</b> <b>settings</b> {{of network}} systems and addressed network entities. Network location awareness (NLA) services collect network configuration and location information, and notify applications when this information changes. With {{the advent of}} global positioning systems and radio-equipped mobile devices, the term was redefined to include consumer-focused applications.|$|R
25|$|Windows Vista {{contains}} a new networking stack, which brings large improvements {{in all areas}} of network-related functionality. It includes a native implementation of IPv6, as well as complete overhaul of IPv4. IPv6 is now supported by all networking components, services, and the user interface. In IPv6 mode, Windows Vista can use the Link Local Multicast Name Resolution (LLMNR) protocol to resolve names of local hosts on a network which does not have a DNS server running. The new TCP/IP stack uses a new method to store <b>configuration</b> <b>settings</b> that enables more dynamic control and does not require a computer restart after settings are changed. The new stack is also based on a strong host model and features an infrastructure to enable more modular components that can be dynamically inserted and removed.|$|E
500|$|Instead of {{developing}} a custom web browser engine Epiphany originally used the Gecko layout engine until version 2.28 and WebKitGTK+ starting with version 2.20. This approach allows the relatively small developer community to maintain a sufficient level of modern web standards support. The features of Web include reuse of GNOME <b>configuration</b> <b>settings,</b> smart bookmarks and web application integration into user desktop.|$|E
2500|$|The {{distributions}} {{offer the}} benefit of a new Drupal site without having to manually seek out and install third-party contributed modules or adjust <b>configuration</b> <b>settings.</b> They are collections of modules, themes, and associated <b>configuration</b> <b>settings</b> that prepare Drupal for custom operation. For example, a distribution could configure Drupal as a [...] "brochure" [...] site rather than a news site or online store.|$|E
5000|$|... {{to clear}} the <b>configuration</b> and <b>settings</b> of the {{electronic}} device to the default settings ...|$|R
5000|$|... #Caption: Gravity and Geoid {{anomalies}} {{caused by}} various crustal and lithospheric thickness changes {{relative to a}} reference <b>configuration.</b> All <b>settings</b> are under local isostatic compensation.|$|R
30|$|In {{this section}} we {{describe}} the <b>configuration</b> and <b>settings</b> of our simulation model in OMNeT++, including simulation scenario and parameter settings, and definition of performance metrics.|$|R
2500|$|Like Windows NT, Windows 9x stores user-specific and configuration-specific {{settings}} {{in a large}} information database called the Windows registry. Hardware-specific settings are also stored in the registry, and many device drivers use the registry to load configuration data. Previous versions of Windows used files such as AUTOEXEC.BAT, CONFIG.SYS, WIN.INI, SYSTEM.INI and other files with an [...]INI extension to maintain <b>configuration</b> <b>settings.</b> As Windows became more complex and incorporated more features, [...]INI files became too unwieldy for {{the limitations of the}} then-current FAT filesystem. Backwards-compatibility with [...]INI files was maintained until Windows XP succeeded the 9x and NT lines.|$|E
5000|$|System <b>Configuration</b> (<b>{{settings}})</b> - Monitors security-related {{settings in}} Windows ...|$|E
5000|$|DIP switch - Small {{array of}} {{switches}} for internal <b>configuration</b> <b>settings</b> ...|$|E
50|$|Continuous {{configuration}} automation (CCA) is {{the methodology}} or process of automating the deployment and <b>configuration</b> of <b>settings</b> and software for {{both physical and}} virtual data center equipment.|$|R
50|$|The Java based NetWorker Management Console (NMC) software, {{which is}} bundled with the NetWorker distribution, {{provides}} a user interface for {{functions such as}} client <b>configuration,</b> policy <b>settings,</b> schedules, monitoring, reports, and daily operations for deduplicated and non-deduplicated backups.|$|R
5000|$|... #Caption: Gravity and geoid {{anomalies}} {{caused by}} various crustal and lithospheric thickness changes {{relative to a}} reference <b>configuration.</b> All <b>settings</b> are under local isostatic compensation with an elevation of either +1000 or -1000 m above the reference level.|$|R
5000|$|Device {{specific}} settings (multipaths): Fine tune the <b>configuration</b> <b>settings</b> {{for individual}} LUNs.|$|E
5000|$|... custom <b>{{configuration}}</b> <b>settings</b> {{stored in}} configuration files, {{rather than the}} source code; ...|$|E
5000|$|... #Caption: A {{screenshot}} of {{the software}} MiniPanzer showing some of its <b>configuration</b> <b>settings</b> ...|$|E
5000|$|Verification Environment <b>Configuration</b> - those <b>settings</b> in the DUT and {{environment}} that are alterable while the simulation is running ...|$|R
50|$|Windows 3.1 also {{introduced}} Windows Registry, a centralized database that can store <b>configuration</b> information and <b>settings</b> for various operating systems components and applications.|$|R
50|$|Windows Registry is a {{repository}} for <b>configuration</b> and <b>settings</b> {{information for the}} operating system and for other software, such as applications. It {{can be thought of}} as a filesystem optimized for small files. However, it is not accessed through file system-like semantics, but rather through a specialized set of APIs, implemented in kernel mode and exposed to user mode.|$|R
5000|$|<b>Configuration</b> <b>settings</b> and {{temporary}} files {{are stored in}} a single directory, allowing portable use ...|$|E
50|$|The <b>configuration</b> <b>settings</b> of a bean can {{be saved}} to {{persistent}} storage and restored.|$|E
5000|$|Setting Wizard (automatically {{sets the}} <b>configuration</b> <b>settings</b> {{of the phone}} for e-mail and network) ...|$|E
30|$|The {{impact of}} {{parameter}} <b>configuration,</b> environment <b>settings,</b> and tuning on performance. The setting and configuration of parameters require expertise in experimentation, data collection, and analysis. The complexity of parameter setting and tuning {{can be very}} large; therefore, selection of the proper parameters and setting the proper values remain an act of art unless extensive experiments are used to validate the selected parameters and their values.|$|R
40|$|ITC/USA 2010 Conference Proceedings / The Forty-Sixth Annual International Telemetering Conference and Technical Exhibition / October 25 - 28, 2010 / Town and Country Resort & Convention Center, San Diego, CaliforniaThis paper {{describes}} {{a model of}} how to configure settings on instrumentation. For any given instrument there may be 100 s of settings that can be set to various values. However, randomly selecting values for each setting {{is not likely to}} produce a valid configuration. By "valid" we mean a set of setting values that can be implemented by each instrument. The valid configurations must satisfy a set of dependency rules between the settings and other constraints. The formalization provided allows for identification of different sets of <b>configurations</b> <b>settings</b> under control by different systems and organizations. Similarly, different rule sets are identified. A primary application of this model is {{in the context of a}} multi-vendor system especially when including vendors that maintain proprietary rules governing their systems. This thus leads to a discussion of an application user interface (API) between different systems with different rules and settings...|$|R
40|$|The {{increasing}} {{complexity of}} configurable software systems creates {{a need for}} more intelligent sampling mechanisms to detect and locate failure-inducing dependencies between configurations. Prior work shows that test schedules based on a mathematical object, called a covering array, can be used to detect and locate failures in combination with a classification tree analysis. This paper addresses limitations of the earlier approach. First, the previous work requires developers to choose the covering arrayâ€™s strength, even though there is no scientific or historical basis for doing so. Second, if a single covering array is insufficient to classify specific failures, the entire process must be rerun from scratch. To address these issues, our new approach incrementally and adaptively builds covering array schedules. It begins with a low strength, and continually increases this as resources allow, or poor classification results require. At each stage, previous tests are reused. This allows failures due to only one or two <b>configurations</b> <b>settings</b> to be found and classified as early as possible, and also limits duplication of work when multiple covering arrays must be used...|$|R
50|$|SDO: Service Data Object - <b>Configuration</b> <b>settings,</b> {{possibly}} node ID, baud rate, offset, gain, etc.|$|E
5000|$|The {{distributions}} {{offer the}} benefit of a new Drupal site without having to manually seek out and install third-party contributed modules or adjust <b>configuration</b> <b>settings.</b> They are collections of modules, themes, and associated <b>configuration</b> <b>settings</b> that prepare Drupal for custom operation. For example, a distribution could configure Drupal as a [...] "brochureware" [...] site rather than a [...] "news" [...] site or an [...] "online store".|$|E
5000|$|Base: Provides an {{interface}} {{to basic}} <b>configuration</b> <b>settings,</b> {{as well as}} the ability to create custom static pages.|$|E
50|$|Internet Explorer {{is fully}} {{configurable}} using Group Policy. Administrators of Windows Server domains (for domain-joined computers) or the local computer can apply and enforce {{a variety of}} settings on computers that affect the user interface (such as disabling menu items and individual configuration options), as well as underlying security features such as downloading of files, zone <b>configuration,</b> per-site <b>settings,</b> ActiveX control behaviour and others. Policy settings can be configured for each user and for each machine. Internet Explorer also supports Integrated Windows Authentication.|$|R
5000|$|... 100 Boots is Antin's best-known {{conceptual}} work. In this project, {{she set up}} 100 {{boots in}} various <b>configurations</b> and <b>settings,</b> photographed them, and created 51 postcards of the images that were mailed to hundreds of recipients around the world from 1971-73. 100 Boots relied on the recipients to remember and construct the boots' adventures, as the postcards were mailed out at intervals ranging from 3 days to 5 weeks [...] "depending upon what Antin took to be the 'internal necessities' of the narrative." ...|$|R
5000|$|After {{creating}} a [...]ZAP file and {{placing it in}} an accessible share - usually {{creating a}}n Active Directory Group with access to this location - the Systems Administrator needs to create a Group Policy Object, open the editing screen, select User <b>Configuration,</b> Software <b>Settings</b> and Software Installation and create a New Package {{to the location of}} the [...]ZAP file. Since GPOs default to [...]MSI, the System Admin needs to ensure that they search for [...]ZAP files, instead of [...]MSI files.|$|R
