4|11|Public
50|$|After {{attending}} her grandmother's {{funeral in}} Texas, hotel manager Lisa Reisert (Rachel McAdams) arrives at Fort Worth International Airport {{to take a}} red-eye flight back to Miami, Florida. While waiting in the <b>check-in</b> <b>line,</b> she meets Jackson Rippner (Cillian Murphy), who is boarding the same plane. After their flight is delayed due to severe weather concerns, they meet again at an airport bar and engage in small talk while they wait. When boarding, Lisa discovers to her surprise that Jackson is seated beside her.|$|E
50|$|Many {{airlines}} have {{a deadline for}} passengers to check-in before each flight. This is to allow the airline to offer unclaimed seats to stand-by passengers, to load luggage onto the plane and to finalize documentation for take-off. The passenger must also {{take into account the}} time that would be required for them to clear the <b>check-in</b> <b>line,</b> to pass security and then to walk (sometimes also to ride) from the check-in area to the boarding area. This may take several hours at some airports or at some times of the year. On international flights, additional time would be required for immigration and customs clearance.|$|E
50|$|Lisa {{attempts}} {{to find a way}} to keep both her father and Keefe safe. When she first places a call to the hotel, answered by her co-worker, Cynthia (Jayma Mays), the line goes dead midway through the conversation, and Lisa tries (unsuccessfully) to fool Jackson into thinking she is still ordering the room change, but Jackson catches on. She then makes two unsuccessful tries to alert the other passengers to the danger. She first {{attempts to}} write a warning in a book, when a friendly woman (Angela Paton) from the <b>check-in</b> <b>line</b> she met and gave the book to comes to talk to her about it, but Jackson knocks her unconscious and manages to get the book back before the woman sees the message. She tries again when the airphones go out due to the storms. Lisa goes to the restroom, and writes a warning in soap on the mirror, but Jackson confronts her and sees the writing on the mirror, and forces Lisa back inside, locking the door. A little girl witnesses Jackson enter the bathroom with Lisa still inside and notifies an attendant, but she dismisses it as Jackson and Lisa having sex. When Lisa begs him not to kill her father, Jackson simply responds by telling her she should stop gambling with his life. He then notices a scar above Lisa's breast, and asks her if someone did that to her. When she tells him no, he believes that she is lying and briefly chokes her before wiping away the message.|$|E
25|$|At Reagan National Airport, <b>check-in</b> <b>lines</b> {{lengthened}} after {{baggage handling}} programs were affected.|$|R
50|$|From February to November 2012, {{the airport}} began {{the work of}} {{expansion}} to the terminal building. The work consists of improve the operation, the airport functionality and the passenger comfort, with an expansion of 3,000m², including: the new terminal lobby and the growth in outpatient, remodeling of 2,500m² for passengers, reconfiguration of check-in point on upper level with 3 simultaneous <b>check-in</b> <b>lines,</b> {{the construction of a}} vertical circulation core in the front façade including a panoramic elevator, the growth of the waiting lounge area, the shopping area redesign and a projection of an image of modernity in its façade and inside it.|$|R
40|$|Resource sharing systems {{describe}} {{situations in}} which users compete for service from scarce resources. Examples include <b>check-in</b> <b>lines</b> at airports, waiting rooms in hospitals or queues in contact centers, data buffers in wireless networks, and delayed service in cloud data centers. These are all situations with jobs (clients, patients, tasks) and servers (agents, beds, processors) that have large capacity levels, ranging from the order of tens (checkouts) to thousands (processors). This survey investigates how to design such systems to exploit resource pooling and economies-of-scale. In particular, we review the mathematics behind the Quality-and-Efficiency Driven (QED) regime, which lets the system operate close to full utilization, {{while the number of}} servers grows simultaneously large and delays remain manageable. We also discuss emerging research directions related to load balancing, overdispersion and model uncertainty...|$|R
40|$|Have you lately been {{standing}} in a <b>check-in</b> <b>line</b> during a national holiday and wondered why the airline staff could not handle the queue more efficiently? While we assume our day to day operations run smoothly, they are actually subject to frequent variations. The main source of these variations is our environment, which introduces changing conditions. If we insist on keeping our processes as if nothing has changed, we may get poor performance or even worse. Changing environmental conditions may include the season, and how it affects the check-in process; the falling commodity prices; or expected or unexpected local or global events (e. g., {{a drop in the}} national interest rate, a new president). You may want to change your shipment processes as fuel prices go up and transportation becomes very costly. Differing exchange rates of foreign currencies may affect the way you select your suppliers. Failing to adapt your processes to changes in the environment can lead to poor performance in terms of service, time, or cost. In some cases, the results {{of not being able to}} respond to changes or to unexpected events in the environment may be even worse. In a recent example, a German bank lost € 300 Million in a scheduled swap transaction to Lehman Brothers hours after the American investment bank had announced bankruptcy. The imminent threat caused by th...|$|E
40|$|Stochastic service systems {{describe}} {{situations in}} which customers compete for service from scarce resources. Think of <b>check-in</b> <b>lines</b> at airports, waiting rooms in hospitals or queues in supermarkets, where the scarce resource is human manpower. Next to these traditional settings, resource sharing is also important in large-scale service systems such as the internet, wireless networks and cloud computing facilities. In these virtual environments, geographical conditions do not restrict the system size, {{paving the way for}} the emergence of large-scale resource sharing networks. This thesis investigates how to design large-scale systems in order to achieve the dual goal of operational efficiency and quality-of-service, by which we mean that the system is highly occupied and hence efficiently utilizes the expensive resources, while at the same time, the level of service, experienced by customers, remains high. Comment: PhD thesi...|$|R
50|$|The port, {{located in}} Port Canaveral, at cruise {{terminal}} A, {{is a large}} building, owned by Port Canaveral, and operated by the Walt Disney Company. At 70000 sq ft, this massive building includes the base for Disney Cruise <b>Line</b> <b>check-in,</b> security, and boarding. The terminal was designed loosely on the old Ocean Terminal in Southampton.|$|R
25|$|While status {{levels were}} not {{originally}} {{part of the}} MileagePlus program, they were introduced in 1987 to reward customers who had achieved certain qualification thresholds within a given calendar year. All Premier members are eligible for Premier Access, which allows them to use exclusive <b>check-in</b> and security <b>lines,</b> as well as priority boarding and baggage retrieval.|$|R
2500|$|The first {{proposal}} for a people mover was launched by NSB in 1986 and was centered around being a link for the airport. [...] The line would have its start at Stabekk Station on the Drammen Line, {{where it would be}} located next to the railway platforms. NSB would schedule all services along the Drammen Line stop at Stabekk. The stations at the terminals would be built in the immediate vicinity of the <b>check-ins.</b> The <b>line</b> would have been [...] long and have two stations, one at each of the terminals. In such capacity it would double as a transit system between the terminals, which would be situated {{on each side of the}} runway. Travel time to Oslo Central Station was estimated at 15 minutes. A major advantage compared to the loop line was that the people mover would be able to serve both terminals, not just the new terminal.|$|R
50|$|While status {{levels were}} not {{originally}} {{part of the}} MileagePlus program, they were introduced in 1987 to reward customers who had achieved certain qualification thresholds within a given calendar year. All Premier members are eligible for Premier Access, which allows them to use exclusive <b>check-in</b> and security <b>lines,</b> as well as priority boarding and baggage retrieval.Members reach Premier status by earning the required number of Premier qualifying miles (PQM) or Premier qualifying segments (PQS).Starting in 2014, members living in United States must in addition meet a minimum annual spending level, tracked as Premier Qualifying Dollars (PQD), on United issued tickets in a calendar year {{to qualify for a}} tier.|$|R
40|$|Abstract Aspect-oriented {{software}} development (AOSD) and software product line engineering (SPLE) are two approaches for software reuse, which promote model-driven development and variability management. While AOSD supports developing crosscutting concerns separately from traditional units and weaving them to different software products, software product line engineering (SPLE) handles {{the development and}} maintenance of families of software products utilizing different domain and application engineering techniques. In this chapter, we review the existing points of synergy between these two approaches and, in particular, the complementary and aggregative use of these approaches. Furthermore, we present a method that uses aspect-oriented principles for horizontal reuse and domain engineering guidelines for vertical reuse. We term this kind of use dimensional synergy. The presented method supports defining families of aspects and their weaving rules applied to families of software products, potentially increasing the reuse throughout the entire development life cycle. We exemplify the method on a <b>Check-In</b> check-Out product <b>line</b> and a family of security aspects, utilizing UML 2 class and sequence diagrams...|$|R

