1006|1852|Public
25|$|The term average bitrate {{is used in}} case of {{variable}} bitrate multimedia source coding schemes. In this context, the peak bit rate is {{the maximum number of}} bits required for any short-term block of <b>compressed</b> <b>data.</b>|$|E
25|$|The SIMD vector {{processor}} (VMX128) was modified for the Xbox {{to include a}} dot-product instruction. The dot-product instruction took far less latency than discrete instructions. The VMX128 was also modified {{by the addition of}} direct 3D (D3D) <b>compressed</b> <b>data</b> format. This led to an approximate 50 percent savings in required band-width and memory footprint making the CPU having a theoretical peak performance of 115.2GFLOPS, being capable of 9.6 billion dot products per second. Each core of the CPU was capable of simultaneous multithreading and was clocked at 3.2GHz. However, to reduce CPU die size, complexity, cost, and power demands, the processor used in-order execution in contrast to the Intel Coppermine 128-based Pentium III used in the original Xbox, which used more complex out of order execution. The original chip used a 90nm process, although a newer 65nm process SOI revision was implemented on later models, which was in-turn superseded by a 45nm combined CPU and GPU chip. A 21.6GB/s front side bus, aggregated 10.8GB/s upstream and downstream, connected Xenon with the graphics processor/northbridge. Xenon was equipped with an 8th way set associative 1MB Level 2 cache on-die running at half CPU clock speed. This cache was shared amongst the three CPU cores. Each core had separate L1 caches, each containing a two-way set associative 32-Kbyte L1 instruction cache and a four-way set associative 32-Kbyte L1 data cache. The write-through data cache did not allocate cache lines on writes. The CPU also contained ROM storing Microsoft private encrypted keys, used to decrypt game data. The heat sink implemented to cool the Xenon CPU was composed of aluminum fins with a copper base, and a heat pipe. Newer revisions, which had a smaller core, do not feature the heat pipe or copper base. The heat sink was cooled by two 70mm fans {{at the rear of the}} console on original-style consoles, while a single fan mounted on the side of the consoles was used in Xbox 360 S consoles. There were several types of fan used in Xbox 360s, which were produced by Nidec, Sunon and Delta Electronics.|$|E
2500|$|Despite the {{bandwidth}} limitations, transparent TCP/IP is supported. [...] Iridium claims {{data rates}} up to 10 {{kilobits per second}} for their [...] "direct Internet" [...] service which utilizes v.42bis compression over a PPP dialup connection to Iridium's Arizona gateway. [...] Actual data rates remain at 2300 to 2400 bit/s for any <b>compressed</b> <b>data</b> such as a JPG image or ZIP file, but plain text or HTML may transfer [...] "up to" [...] 10 kbit/s. [...] Iridium 9500, 9505 and 9505A phones can be connected to computers using an RS-232 connection, as can the 9522A transceiver module. [...] The 9555 and Extreme phones connect to computers with a standard USB cable, using an internal USB to serial bridge chip and Windows drivers to emulate a serial COM port for compatibility with standard PPP clients.|$|E
50|$|MPPE {{alone does}} not <b>compress</b> or expand <b>data,</b> but the {{protocol}} is often {{used in conjunction with}} Microsoft Point-to-Point Compression which <b>compresses</b> <b>data</b> across PPP or VPN links.|$|R
50|$|Additionally, the column-based storage enables SAP IQ to <b>compress</b> <b>data</b> {{efficiently}} on the fly.|$|R
5000|$|Compressed Memory is {{a virtual}} memory {{compression}} system which automatically <b>compresses</b> <b>data</b> from inactive apps when approaching maximum memory capacity.|$|R
2500|$|A JPEG image {{consists}} of a sequence of segments, each beginning with a marker, each of which begins with a 0xFF byte followed by a byte indicating what kind of marker it is. Some markers consist of just those two bytes; others are followed by two bytes (high then low) indicating the length of marker-specific payload data that follows. (The length includes the two bytes for the length, but not the two bytes for the marker.) Some markers are followed by entropy-coded data; the length of such a marker {{does not include the}} entropy-coded data. Note that consecutive 0xFF bytes are used as fill bytes for padding purposes, although this fill byte padding should only ever take place for markers immediately following entropy-coded scan data (see JPEG specification section B.1.1.2 and E.1.2 for details; specifically [...] "In all cases where markers are appended after the <b>compressed</b> <b>data,</b> optional 0xFF fill bytes may precede the marker").|$|E
50|$|Deleted undecodable whole {{frames are}} the {{principal}} type of data loss that affects <b>compressed</b> <b>data</b> sets. In general, {{there would be little}} to gain from attempting to use <b>compressed</b> <b>data</b> from a frame marked as undecodable.|$|E
5000|$|BLU-acceleration: OLAP {{oriented}} column-organized tables, compressed with order-preserving [...] "approximate Huffman encoding", exploiting SIMD {{vector processing}} of <b>compressed</b> <b>data.</b> Because the compression is order preserving, a greater range of operations {{can be performed}} on <b>compressed</b> <b>data.</b>|$|E
3000|$|The Slepian-Wolf problem {{refers to}} the problem of losslessly <b>compressing</b> <b>data</b> from two {{correlated}} sources in a distributed manner. Let [...]...|$|R
50|$|NX {{is faster}} than its predecessors, as it {{eliminates}} {{most of the}} X round trips, while dxpc and MLView only <b>compress</b> <b>data.</b>|$|R
50|$|Omega coding {{is used in}} {{applications}} {{where the}} largest encoded value is not known ahead of time, or to <b>compress</b> <b>data</b> in which small values are much more frequent than large values.|$|R
50|$|This is {{immediately}} {{followed by the}} <b>compressed</b> <b>data.</b>|$|E
50|$|Immediately {{following}} {{the list of}} files is the <b>compressed</b> <b>data.</b>|$|E
5000|$|Encrypted-by-NTFS, sparse data streams, or <b>compressed</b> <b>data</b> streams {{cannot be}} made resident.|$|E
40|$|This paper {{presents}} {{the design and}} implementation of an intelligent transportation web service (ITWS) and studies various QoS requirements for the web service infrastructure. In particular, we {{pay attention to the}} performance issues on ITWS data transmission and compression. Since SOAP message is a textual document, we can improve the data transmission time by <b>compressing</b> <b>data</b> on transmission. In our experiment, <b>compressing</b> <b>data</b> before or after SOAP serialization both can reduce the size of transmitted message down to as little as 2 % and cut the response time to a quarter of the original message. 1...|$|R
50|$|Nokia Xpress Browser uses {{intermediate}} Nokia {{proxy servers}} to optimize web pages {{based on the}} capabilities and screen size of the device. The proxy servers also <b>compress</b> <b>data</b> to reduce data transmission charges for the mobile user.|$|R
50|$|Nokia Asha 501 comes {{preloaded}} {{with the}} Nokia Xpress browser, which (according to Nokia) <b>compresses</b> <b>data</b> server-side by 90% {{to facilitate the}} least amount of transferable data with the phone. Nokia Xpress Now is a new app that offers location-based content.|$|R
5000|$|US Patent 3,769,442 (1973) <b>Compressed</b> <b>Data</b> Base for Radar Land Mass Simulator ...|$|E
50|$|<b>Compressed</b> <b>data</b> {{is stored}} in {{independent}} blocks to allow {{direct access to the}} data, facilitate parallel processing and limit the effects of potential damage to files. Data fidelity is ensured by a 32-bit cyclic redundancy check in each <b>compressed</b> <b>data</b> block using the Koopman polynomial (0xEB31D82E), which has a Hamming distance of from 4 to 114 kbits.|$|E
5000|$|Databases: Teradata Database 12 has a {{capacity}} of 50 petabytes of <b>compressed</b> <b>data.</b>|$|E
5000|$|Context-adaptive binary {{arithmetic}} coding (CABAC), an algorithm to losslessly compress syntax {{elements in the}} video stream knowing the probabilities of syntax elements in a given context. CABAC <b>compresses</b> <b>data</b> more efficiently than CAVLC but requires considerably more processing to decode.|$|R
40|$|This paper investigates {{compression}} of encrypted data. It {{has been previously}} shown that data encrypted with Vernamâ€™s scheme [1], {{also known as the}} one-time pad, can be compressed without knowledge of the secret key, therefore this result can be applied to stream ciphers used in practice. However, it was not known how to <b>compress</b> <b>data</b> encrypted with non-stream ciphers. In this paper, we address the problem of <b>compressing</b> <b>data</b> encrypted with block ciphers, such as the Advanced Encryption Standard (AES) used in conjunction with one of the commonly employed chaining modes. We show that such data can be feasibly compressed without knowledge of the key. We present performance results for practical code constructions used to compress binary sources. ...|$|R
50|$|This {{has great}} use in {{compression}} theory as {{it provides a}} theoretical means for <b>compressing</b> <b>data,</b> allowing us to represent any sequence Xn using nH(X) bits on average, and, hence, justifying the use of entropy {{as a measure of}} information from a source.|$|R
50|$|Following this header is {{a series}} of <b>compressed</b> <b>data</b> blocks with the {{following}} structure.|$|E
50|$|This is {{followed}} by 256 bytes of decompression table and finally the actual <b>compressed</b> <b>data.</b>|$|E
5000|$|Operating on <b>compressed</b> <b>data</b> stored {{into the}} Hadoop {{ecosystem}} using algorithms including DEFLATE, BWT, snappy, etc.|$|E
50|$|Stac Electronics, {{originally}} incorporated as State of the Art Consulting {{and later}} shortened to Stac, Inc., was a technology company founded in 1983. It is known primarily for its Lempel-Ziv-Stac lossless compression algorithm and Stacker disk compression utility for <b>compressing</b> <b>data</b> for storage.|$|R
40|$|Traditionally, lossy {{compression}} schemes {{have focused on}} <b>compressing</b> <b>data</b> at fixed bit rates to either communicate information over limited bandwidth communi- cation channels, or to store information in a fixed-size storage media. In this paper we describe a class of 1 ossy algorithms {{that is capable of}} <b>compressing</b> image <b>data</b> over a wide range of rates so that quick browsing of large amounts of information as well as detailed examination of high resolution areas can be achieved by the same compression system...|$|R
40|$|Report {{discusses}} {{application of}} noiseless data-compression coding to digitized readings of spaceborne magnetometers for transmission back to Earth. Objective of such coding {{to increase efficiency}} by decreasing rate of transmission without sacrificing integrity of <b>data.</b> Adaptive coding <b>compresses</b> <b>data</b> by factors ranging from 2 to 6...|$|R
5000|$|The term <b>compressed</b> <b>data</b> {{structure}} {{arises in}} the computer science subfields of algorithms, data structures, and theoretical computer science. It refers to a data structure whose operations are roughly as fast as those of a conventional data structure for the problem, but whose size can be substantially smaller. The size of the <b>compressed</b> <b>data</b> structure is typically highly dependent upon the entropy of the data being represented.|$|E
50|$|These {{compress}} {{the original}} script and output a new script {{that has a}} decompressor and <b>compressed</b> <b>data.</b>|$|E
50|$|SLGs are of {{interest}} in fields like Kolmogorov complexity, Lossless data compression, Structure discovery and <b>Compressed</b> <b>data</b> structures.|$|E
50|$|Nokia Xpress Browser uses {{intermediate}} Nokia {{proxy servers}} to optimize web pages {{based on the}} capabilities and screen size of the device. The proxy servers also <b>compress</b> <b>data</b> to reduce data transmission charges for the mobile user. The browser was released for Lumia devices in 2012.|$|R
40|$|Momentarily-best {{compression}} algorithm selected. Proposed competitive-parallel-processing system <b>compresses</b> <b>data</b> for transmission in channel of limited band-width. Likely application for compression lies in high-resolution, stereoscopic color-television broadcasting. Data from information-rich source like color-television camera compressed by several processors, each operating with different algorithm. Referee processor selects momentarily-best compressed output...|$|R
40|$|Abstract This paper {{examines}} information-theoretic {{questions regarding}} the difficulty of <b>compressing</b> <b>data</b> versus the difficulty of decompressing data and the role that information loss plays in this interaction. Finite-state compression and decompression are shown to be of equivalent difficulty, even when the decompressors are allowed to be lossy...|$|R
