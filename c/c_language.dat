2026|2786|Public
5|$|The {{development}} toolkit for the Motorola CPU {{included a}} compiler for the C programming language, {{which the two}} programmers were familiar with. After Atari had conducted performance evaluations, it approved usage of the language. Cerny and Flanagan's decision to program Marble Madness in the <b>C</b> <b>language</b> had positive and negative consequences. Atari games had previously been programmed in assembly language. The <b>C</b> <b>language</b> was easier to program, but was less efficient, so the game operates at the slower speed of 30Hz instead of the normal 60Hz frequency of arcade games at the time. Cerny decided to use a trackball system (marketed by Atari as Trak-Ball) to give the game a unique control system, and he chose a motorized trackball for faster spinning and braking when the in-game ball traveled downhill and uphill, respectively. As it was building the prototypes, Atari's design department informed Cerny that the motorized trackball's design had an inherent flaw—one of the four supports had poor contact with the ball—and {{the use of a}} regular trackball was more feasible. Additionally, Cerny had anticipated the use of powerful custom chips that would allow RAM-based sprites to be animated by the CPU, but the available hardware was a less-advanced system using ROM-based, static sprites.|$|E
25|$|The POSIX {{standard}} declares exec {{functions in}} the unistd.h header file, in the <b>C</b> <b>language.</b> The same functions are declared in process.h for DOS (see below), OS/2, and Microsoft Windows.|$|E
25|$|Octave's '&&' and '||' logical {{operators}} are evaluated in a short-circuit fashion (like the corresponding operators in the <b>C</b> <b>language),</b> {{in contrast to}} the element-by-element operators '&' and '|'.|$|E
50|$|Frama-C {{relies on}} CIL (<b>C</b> Intermediate <b>Language)</b> to {{generate}} an abstract syntax tree.The abstract syntax tree supports annotations written in ANSI/ISO <b>C</b> Specification <b>Language</b> (ACSL).|$|R
40|$|The aim of {{this work}} is to examine {{capabilities}} of NEON coprocessor. Various implementations of the same algorithm are compared: <b>language</b> <b>C,</b> assembly <b>language,</b> <b>language</b> <b>C</b> with intinsic functions and automatically vectorized code. Main conslusion is, that computation time can be reduced up to 60 times, allowing real-time HD video processing...|$|R
50|$|The CRX10 is an {{autonomous}} mobile robot platform for education, training and research that was developed by South Korean robotics company CNRobot. CRX10 supports MSRDS, SPL (Simple Programming <b>Language),</b> AVR (<b>C</b> <b>languages)</b> and Android programming languages. The CRX10 was unveiled on May, 2011.|$|R
25|$|Version 1.0.0 of : {{contains}} a <b>C</b> <b>language</b> implementation of Shor's algorithm with their simulated quantum computer library, but the width variable in shor.c {{should be set}} to 1 to improve the runtime complexity.|$|E
25|$|A {{reference}} {{simulation software}} implementation, {{written in the}} <b>C</b> <b>language</b> and later known as ISO 11172-5, was developed (in 1991–1996) {{by the members of}} the ISO MPEG Audio committee in order to produce bit compliant MPEG Audio files (Layer 1, Layer 2, Layer 3). It was approved as a committee draft of ISO/IEC technical report in March 1994 and printed as document CD 11172-5 in April 1994. It was approved as a draft technical report (DTR/DIS) in November 1994, finalized in 1996 and published as international standard ISO/IEC TR 11172-5:1998 in 1998. The reference software in <b>C</b> <b>language</b> was later published as a freely available ISO standard. Working in non-real time on a number of operating systems, it was able to demonstrate the first real time hardware decoding (DSP based) of compressed audio. Some other real time implementation of MPEG Audio encoders and decoders were available for the purpose of digital broadcasting (radio DAB, television DVB) towards consumer receivers and set top boxes.|$|E
25|$|A common {{misconception}} is that JavaScript {{is similar}} or {{closely related to}} Java. It is true that both have a C-like syntax (the <b>C</b> <b>language</b> being their most immediate common ancestor language). They also are both typically sandboxed (when used inside a browser), and JavaScript was designed with Java's syntax and standard library in mind. In particular, all Java keywords were reserved in original JavaScript, JavaScript's standard library follows Java's naming conventions, and JavaScript's Math and Date objects are based on classes from Java 1.0, but the similarities end there.|$|E
40|$|The paper {{assesses the}} {{potential}} of Java for developing both portable and efficient communication software. Specifically, this paper presents and compares implementation of a multimedia transport protocol, POC, using the Java and <b>C</b> <b>languages.</b> Performances measurement are applied to the transport of MPEG streams...|$|R
50|$|UNOS {{was written}} in the {{programming}} <b>languages</b> <b>C</b> and assembly <b>language,</b> and supported Fortran, COBOL, Pascal, and Business Basic.|$|R
40|$|Many {{barriers}} {{exist for}} novice programmers {{when confronted with}} the <b>C</b> programming <b>language,</b> such as its low level orientation, cryptic syntax and ambiguous compiler error messages. This paper presents the design and development of a block-based visual shell for the <b>C</b> programming <b>language</b> following the recognition over recall design pattern to eliminate syntax errors and enable the effective internalization of <b>C</b> programming <b>language</b> constructs. The evaluation studies provide evidence {{of the effectiveness of}} this shell, in tutorial/lab settings without the presence of human tutors...|$|R
25|$|In {{the case}} of ODBC, the drivers {{encapsulate}} many functions that {{can be broken down}} into several broad categories. One set of functions is primarily concerned with finding, connecting to and disconnecting from the DBMS that driver talks to. A second set is used to send SQL commands from the ODBC system to the DBMS, converting or interpreting any commands that are not supported internally. For instance, a DBMS that does not support cursors can emulate this functionality in the driver. Finally, another set of commands, mostly used internally, is used to convert data from the DBMS's internal formats to a set of standardized ODBC formats, which are based on the <b>C</b> <b>language</b> formats.|$|E
25|$|MS-DOS {{continued}} {{to be the most}} popular operating system for BBS use up until the mid-1990s, and in the early years, most multi-node BBSes were running under a DOS based multitasker such as DESQview or consisted of multiple computers connected via a LAN. In the late 1980s, a handful of BBS developers implemented multitasking communications routines inside their software, allowing multiple phone lines and users to connect to the same BBS computer. These included Galacticomm's MajorBBS (later WorldGroup), eSoft The Bread Board System (TBBS), and Falken. Other popular BBS's were Maximus and Opus, with some associated applications such as BinkleyTerm being based on characters from the Berkley Breathed cartoon strip of Bloom County. Though most BBS software had been written in BASIC or Pascal (with some low-level routines written in assembly language), the <b>C</b> <b>language</b> was starting to gain popularity.|$|E
500|$|Following {{the release}} of [...] in , fans waited five years for , the active {{development}} of which took four years. By re-using the game engine and graphics from Ocarina of Time, a smaller team required only one year to finish Majora's Mask. According to director Eiji Aonuma, they were [...] "faced with the very difficult question of {{just what kind of}} game could follow Ocarina of Time and its worldwide sales of seven million units", and as a solution, came up with the three-day system to [...] "make the game data more compact while still providing deep gameplay". Shigeru Miyamoto and Yoshiaki Koizumi came up with the story that served {{as the basis for the}} script written by Mitsuhiro Takano. The idea of the [...] "three-day system" [...] came from Miyamoto and Koizumi. Majora's Mask was programmed in the <b>C</b> <b>language</b> ...|$|E
5000|$|Cross-platform software, {{implemented}} in <b>C</b> programming <b>language</b> ...|$|R
40|$|Domain-speci <b>c</b> <b>languages</b> (DSLs) can {{be viewed}} from both a {{programming}} language and a software architecture perspective. The goal {{of this paper is}} to relate the two viewpoints. In particular, we demonstrate that DSLs can be constructed using an existing formal methodology for developing general purpos...|$|R
5000|$|X3J11, a <b>C</b> {{programming}} <b>language</b> ANSI standard-setting committee ...|$|R
2500|$|... doc longer {{documents}} detailing major subsystems, {{such as the}} <b>C</b> <b>language</b> and troff ...|$|E
2500|$|Double precision, usually used to {{represent}} the [...] "double" [...] type in the <b>C</b> <b>language</b> family (though this is not guaranteed). This is a binary format that occupies 64 bits (8 bytes) and its significand has a precision of 53 bits (about 16 decimal digits).|$|E
2500|$|Feedback from Thompson's Unix {{development}} was also {{instrumental in the}} development of the C programming language. Thompson would later say that the <b>C</b> <b>language</b> [...] "grew up with one of the rewritings of the system and, as such, it became perfect for writing systems".|$|E
5000|$|... #Subtitle level 2: Bit {{manipulation}} in the <b>C</b> programming <b>language</b> ...|$|R
5000|$|C99, ANSI C, {{previous}} {{standards for}} the <b>C</b> programming <b>language</b> ...|$|R
5000|$|In the <b>C</b> {{programming}} <b>language,</b> {{the implementation}} would be like: ...|$|R
2500|$|Single precision, usually used to {{represent}} the [...] "float" [...] type in the <b>C</b> <b>language</b> family (though this is not guaranteed). This is a binary format that occupies 32 bits (4 bytes) and its significand has a precision of 24 bits (about 7 decimal digits).|$|E
2500|$|Largely {{because of}} its {{resource}} requirements with respect to early computing hardware (including early microprocessors), Lisp did not become as popular outside of the AI community as Fortran and the ALGOL-descended <b>C</b> <b>language.</b> [...] Because of its suitability to complex and dynamic applications, Lisp is enjoying some resurgence of popular interest in the 2010s.|$|E
2500|$|C++ is {{standardized}} by the International Organization for Standardization (ISO), {{with the}} latest standard version ratified and published by ISO in December 2014 as ISO/IEC 14882:2014 (informally known as C++14). The C++ programming language was initially standardized in 1998 as ISO/IEC 14882:1998, which was then amended by the C++03, ISO/IEC 14882:2003, standard. The current C++14 standard supersedes these and C++11, with new features and an enlarged standard library. [...] Before the initial standardization in 1998, C++ was developed by Bjarne Stroustrup at Bell Labs since 1979, {{as an extension of}} the <b>C</b> <b>language</b> as he wanted an efficient and flexible language similar to C, which also provided high-level features for program organization. The C++17 standard is due in July 2017, with the draft largely implemented by some compilers already, and C++20 is the next planned standard thereafter.|$|E
5000|$|The <b>C</b> Programming <b>Language</b> (1978, 1988) with Dennis M. Ritchie ...|$|R
50|$|C99 is a past {{version of}} the <b>C</b> {{programming}} <b>language</b> standard.|$|R
5000|$|An {{optimized}} {{implementation in}} the <b>C</b> programming <b>language</b> operates as follows: ...|$|R
2500|$|In 1979, Bjarne Stroustrup, a Danish {{computer}} scientist, {{began work}} on [...] "", the predecessor to C++. The motivation for creating a new language originated from Stroustrup's experience in programming for his Ph.D. thesis. Stroustrup found that Simula had features that were very helpful for large software development, but the language was too slow for practical use, while BCPL was fast but too low-level to be suitable for large software development. When Stroustrup started working in AT Bell Labs, he had the problem of analyzing the UNIX kernel with respect to distributed computing. Remembering his Ph.D. experience, Stroustrup set out to enhance the <b>C</b> <b>language</b> with Simula-like features. C was chosen because it was general-purpose, fast, portable and widely used. As well as C and Simula's influences, other languages also influenced C++, including ALGOL 68, Ada, CLU and ML.|$|E
2500|$|After abandoning their {{short-lived}} Close to Metal API, AMD {{focused on}} OpenCL. AMD first released its Stream Computing SDK (v1.0), in December 2007 under the AMD EULA, {{to be run}} on Windows XP. The SDK includes [...] "Brook+", an AMD hardware optimized version of the Brook language developed by Stanford University, itself {{a variant of the}} ANSI C (<b>C</b> <b>language),</b> open-sourced and optimized for stream computing. The AMD Core Math Library (ACML) and AMD Performance Library (APL) with optimizations for the AMD FireStream and the COBRA video library (further renamed as [...] "Accelerated Video Transcoding" [...] or AVT) for video transcoding acceleration will also be included. Another important part of the SDK, the Compute Abstraction Layer (CAL), is a software development layer aimed for low-level access, through the CTM hardware interface, to the GPU architecture for performance tuning software written in various high-level programming languages.|$|E
2500|$|Double extended, {{also called}} [...] "extended precision" [...] format. This is a binary format that {{occupies}} at least 79 bits (80 if the hidden/implicit bit rule is not used) and its significand has a precision {{of at least}} 64 bits (about 19 decimal digits). A format satisfying the minimal requirements (64-bit precision, 15-bit exponent, thus fitting on 80 bits) {{is provided by the}} x86 architecture. [...] In general on such processors, this format can be used with [...] "long double" [...] in the <b>C</b> <b>language</b> family (the C99 and C11 standards [...] "IEC 60559 floating-point arithmetic extension- Annex F" [...] recommend the 80-bit extended format to be provided as [...] "long double" [...] when available). [...] On other processors, [...] "long double" [...] may be a synonym for [...] "double" [...] if any form of extended precision is not available, or may stand for a larger format, such as quadruple precision.|$|E
5000|$|C11 (C {{standard}} revision), standardized {{version of}} the <b>C</b> programming <b>language</b> ...|$|R
5000|$|... #Subtitle level 2: Example of usage {{under the}} <b>C</b> {{programming}} <b>language</b> ...|$|R
50|$|Charm is a {{computer}} programming language devised in the early 1990s with similarities to the RTL/2, Pascal and <b>C</b> <b>languages</b> in addition to containing some unique features of its own. The Charm language is defined by a context-free grammar amenable to being processed by recursive descent parser as described in seminal books on compiler design.|$|R
