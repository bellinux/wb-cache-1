1|5|Public
30|$|Lead time {{is one of}} {{the major}} limits that affect {{planning}} at every stage of the supply chain system. In this paper, we study a continuous review inventory model. This paper investigates the ordering cost reductions are dependent on lead time. This study addressed two-echelon supply chain problem consisting of a single vendor and a single buyer. The main contribution of this study is that the integrated total cost of the single vendor and the single buyer integrated system is analyzed by adopting two different (linear and logarithmic) types ordering cost reductions act dependent on lead time. In both cases, we develop effective solution procedures for finding the optimal solution and then illustrative numerical examples are given to illustrate the results. The solution procedure is to determine the optimal solutions of order quantity, ordering cost, lead time and the number of deliveries from the single vendor and the single buyer in one production run, so that the integrated total cost incurred has the minimum value. Ordering cost reduction is the main aspect of the proposed model. A numerical example is given to validate the model. Numerical example solved by using Matlab software. The mathematical model is solved analytically by minimizing the integrated total cost. Furthermore, the sensitivity analysis is included and the numerical examples are given to illustrate the results. The results obtained in this paper are illustrated with the help of numerical examples. The sensitivity of the proposed model has been checked with respect to the various major parameters of the system. Results reveal that the proposed integrated inventory model is more applicable for the supply chain manufacturing system. For each case, an algorithm procedure of finding the optimal solution is developed. Finally, the graphical representation is presented to illustrate the proposed model and also include the <b>computer</b> <b>flowchart</b> in each model.|$|E
50|$|In 1965, Applied Data Research was one {{of those}} custom {{software}} development firms. It wrote a software program for RCA mainframes called Autoflow, designed to create flowcharts documenting the structure of other <b>computer</b> programs (such <b>flowcharts</b> were an important tool for documenting and maintaining software). RCA decided not to license the product. Other computer manufacturers also refused to license Autoflow, so in 1965 Goetz decided to market it directly to RCA mainframe users. This is generally cited as {{the first time that a}} software program was marketed and sold as a standalone product.|$|R
40|$|This article {{proposes a}} {{monitoring}} method to prevent scaffold-frame shoring systems, {{used as a}} falsework for an elevated concrete formwork, from collapse. Basically, if a scaffold-frame shoring fails, it fails in buckling failure mode. To avoid the buckling failure, {{it is recommended that}} two parameters, axial forces and lateral displacements, be monitored in the field. The allowable axial forces and displacements for these two parameters as well as the locations of the monitoring instruments to be installed are proposed based on analysis and full-scale laboratory experiments. A data gathering real-time analysis program should be combined with the monitoring process so that warning signals can be issued in advance of the collapse, The whole monitoring process including the alert giving can be managed using a personal <b>computer.</b> A <b>flowchart</b> to show this management is also proposed herein. Finally, a site test has been performed, and the test result indicates that the suggested monitoring method is basically applicable. (C) 2000 Elsevier Science Ltd. All rights reserved...|$|R
5000|$|A {{number of}} key terms are used to {{describe}} the processes involved in the perception, storage, and production of speech. Typically, they are used by Speech Pathologists while treating a child patient. The input signal is the speech signal heard by the child, usually assumed to come from an adult speaker. The output signal is the utterance produced by the child. The unseen psychological events that occur between the arrival of an input signal and the production of speech are the focus of psycholinguistic models. Events that process the input signal are referred to as input processes, whereas events that process the production of speech are referred to as output processes. Some aspects of speech processing are thought to happen online—that is, they occur during the actual perceptionor production of speech and thus require a share of the attentional resources dedicated to the speech task. Other processes, thought to happen offline, take place as part of the child’s background mental processing rather than during the time dedicated to the speech task.In this sense, online processing is sometimes defined as occurring in real-time, whereas offline processing is said to be time-free (Hewlett, 1990). In box-and-arrow psycholinguistic models, each hypothesized level of representation or processing can be represented in a diagram by a “box,” and the relationships between them by “arrows,” hence the name. Sometimes (as in the models of Smith, 1973, and Menn, 1978, described later in this paper) the arrows represent processes additional to those shown in boxes. Such models make explicit the hypothesized information-processing activities carried out in a particular cognitive function (such as language), in a manner analogous to <b>computer</b> <b>flowcharts</b> that depict the processes and decisions carried out by a computer program. Box-and-arrow models differ widely in the number of unseen psychological processes they describe and thus in the number of boxes they contain. Some have only one or two boxes between the input and output signals (e.g., Menn, 1978; Smith, 1973), whereas others have multiple boxes representing complex relationships between a number of different information-processing events (e.g., Hewlett, 1990; Hewlett, Gibbon, & Cohen- McKenzie,1998; Stackhouse & Wells, 1997). The most important box, however, and the source of much ongoing debate, is that representing the underlying representation (or UR). In essence, an underlying representation captures information stored in a child’s mind about a word he or she knows and uses. As the following description of several models will illustrate, the nature of this information and thus the type(s) of representation present in the child’s knowledge base have captured the attention of researchers for some time. (Elise Baker et al. Psycholinguistic Models of Speech Development and Their Application to Clinical Practice. Journal of Speech, Language, and Hearing Research. June 2001. 44. p 685-702.) ...|$|R
40|$|The {{computer}} program EASI, {{an acronym for}} Equilibrium Air Shock Interference, was developed to calculate the inviscid flowfield, the maximum surface pressure, and the maximum heat flux produced by six shock wave interference patterns on a 2 -D, cylindrical configuration. Thermodynamic properties of the inviscid flowfield are determined using either an 11 -specie, 7 -reaction equilibrium chemically reacting air model or a calorically perfect air model. The inviscid flowfield is solved using the integral form of the conservation equations. Surface heating calculations at the impingement point for the equilibrium chemically reacting air model use variable transport properties and specific heat. However, for the calorically perfect air model, heating rate calculations use a constant Prandtl number. Sample calculations of the six shock wave interference patterns, a listing of the <b>computer</b> program, and <b>flowcharts</b> of the programming logic are included...|$|R
40|$|An {{accurate}} flowchart is {{an important}} part of the documentation for any <b>computer</b> program. The <b>flowchart</b> offers the user an easy to follow overview of program operation and the maintenance programmer an effective debugging tool. The TAMU FLOWCHART System was developed to flowchart any program written in the FORTRAN language. It generates a line printer flowchart which is representative of the program logic. This flowchart provides the user with a detailed representation of the program action taken as each program statement is executed. The TAMU FLOWCHART System should prove to be a valuable aid to groups working with complex FORTRAN programs. Each statement in the program is displayed within a symbol which represents the program action during processing of the enclosed statement. Symbols available include: subroutine, function, and entry statements; arithmetic statements; input and output statements; arithmetical and logical IF statements; subroutine calls with or without argument list returns; computed and assigned GO TO statements; DO statements; STOP and RETURN statements; and CONTINUE and ASSIGN statements. Comment cards within the source program may be suppressed or displayed and associated with a succeeding source statement. Each symbol is annotated with a label (if present in the source code), a block number, and the statement sequence number. Program flow and options within the program are represented by line segments and direction indicators connecting symbols. The TAMU FLOWCHART System should be able to accurately flowchart any working FORTRAN program. This program is written in COBOL for batch execution and has been implemented on an IBM 370 series computer with an OS operating system and with a central memory requirement of approximately 380 K of 8 bit bytes. The TAMU FLOWCHART System was developed in 1977...|$|R

