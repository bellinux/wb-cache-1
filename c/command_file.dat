55|299|Public
5000|$|Example {{of using}} DECK /DOLLARS {{to create one}} <b>command</b> <b>file</b> from another: ...|$|E
5000|$|... "This is {{not just}} another pseudo <b>command</b> <b>file</b> {{processor}}; {{it is based on}} VMS features. The DCL <b>command</b> <b>file</b> processor is fully supported and integrated in RSTS through extensive changes to DCL and the monitor. DCL executes command files as part of your job; therefore, no pseudo keyboard or forcing of commands to your keyboard is necessary (as with ATPK)." ...|$|E
5000|$|In later {{releases}} of RT-11, {{it was possible}} to invoke a series of commands using a [...]COM <b>command</b> <b>file,</b> but they would be executed in sequence with no flow control. Even later, {{it was possible to}} execute a series of commands with great control through use of the Indirect <b>Command</b> <b>File</b> Processor (IND), which took [...]CMD control files as input.|$|E
5000|$|Batch {{services}} provide centralized {{background execution}} of DCL <b>command</b> <b>files.</b>|$|R
40|$|The Boeing Aero Grid and Paneling System (AGPS) is a {{programming}} language with built-in geometry features. Accessible through either a graphical user interface (GUI) or through a command line, AGPS {{can be used by}} operators with different levels of experience. Distributed with AGPS are approximately 300, 000 lines of macros, or <b>command</b> <b>files,</b> which automate many engineering design and analysis tasks. Most <b>command</b> <b>files</b> were developed to produce inputs to engineering analysis codes such as A 502 [1] and TRANAIR [2]. In many cases, <b>command</b> <b>files</b> have been grouped together in AGPS “packages, ” which offer users simple menu pick and dialog options to automate entire engineering processes...|$|R
5000|$|... ktcheck, which updates the locally stored <b>command</b> <b>files</b> and {{transcripts}} {{to match}} {{those on the}} server.|$|R
5000|$|... $ COPY SYS$INPUT SYS$SCRATCH:TEMP.COM$ DECK /DOLLARS=$$$$$ TYPE SYS$INPUTThis is {{an example}} of using DECK to createa <b>command</b> <b>file</b> from within a command file$$$$$! other {{commands}} follow ...|$|E
5000|$|Any KRL code {{consists}} of two different files with the same name: a permanent data file, with the extension [...]dat, and a movement <b>command</b> <b>file,</b> with the extension [...]src.|$|E
5000|$|Derived {{data from}} the {{original}} data, with code, algorithm or <b>command</b> <b>file</b> used to create them. (In the case of TDMS, one example is an expectation report derived from the analysis of an equipment datasheet) ...|$|E
5000|$|The data {{dictionary}} consists of record types (tables) {{created in the}} database by systems generated <b>command</b> <b>files,</b> tailored for each supported back-end DBMS. Oracle has a list of specific views for the [...] "sys" [...] user. This allows users to look up the exact information that is needed. <b>Command</b> <b>files</b> contain SQL Statements for CREATE TABLE, CREATE UNIQUE INDEX, ALTER TABLE (for referential integrity), etc., using the specific statement required by that type of database.|$|R
25|$|Science {{operations}} are resumed using the Short Mission Timeline and <b>Command</b> <b>Files</b> {{instead of the}} Long Time Line resident on the suspect Solid-State Mass Memory.|$|R
50|$|In 2013 the US Naval <b>Command</b> <b>filed</b> a {{proposal}} to obtain the island for {{a new group of}} live-fire and maneuver Ranges and Training Areas (RTAs).|$|R
50|$|File writing verify {{was turned}} off in DOS XL. This was due to OSS's own {{experience}} that resulted in faster writes with virtually no risk of errors. The <b>command</b> <b>file</b> VERIFY.COM was included to reenable writes with verify. Atari DOS 2.0S by default verified file writes to disk.|$|E
50|$|Logical names do {{not have}} a close {{equivalent}} in POSIX operating systems. They resemble Unix environment variables, except they are expanded by the file system, instead of the command shell or application program. They must be defined before use, so it is common for many logical names to be defined in the system startup <b>command</b> <b>file,</b> as well as user login command files.|$|E
5000|$|The COLLECT command {{combines}} different {{object code}} modules {{into a single}} module, and is driven by its own local <b>command</b> <b>file</b> which is incorporated inline in the SCL between the delimiters [...] "----" [...] and [...] "++++". The sub-commands INPUT and NEWMODULE identify {{the names of the}} input and output modules; SUPPRESS and RETAIN determine the external visibility of named procedures within the collected module; and LISTMODULE requests a report describing the output module.|$|E
5000|$|Note {{that there}} is nothing {{malicious}} about the COM file format itself; this is an exploitation of the coincidental name collision between [...]com <b>command</b> <b>files</b> and [...]com commercial web sites.|$|R
50|$|SHAZAM is {{extensible}} {{through the}} development of SHAZAM Procedures that can be included or reused in SHAZAM <b>command</b> <b>files.</b> Numerous SHAZAM Procedures have been written and are available from the SHAZAM Website or from many sites throughout the internet.|$|R
40|$|Several {{different}} model reduction {{methods are}} developed and detailed implementation information is provided for those methods. <b>Command</b> <b>files</b> {{to implement the}} model reduction methods in a proprietary control law analysis and design package are presented. A comparison and discussion of the various reduction techniques is included...|$|R
5000|$|With {{high cost}} of labor in {{developed}} countries, production automation has become increasingly popular. Rather than being assembled by hand, mosaics designed using computer aided design (CAD) software can be assembled by a robot. Production can be greater than 10 times faster with higher accuracy. But these [...] "computer" [...] mosaics have a different look than hand-made [...] "artisanal" [...] mosaics. With robotic production, colored tiles are loaded into , and then the robot picks and places tiles individually according to a <b>command</b> <b>file</b> from the design software.|$|E
50|$|SCL is {{designed}} to allow both line-at-a-time interactive use from a console or from a <b>command</b> <b>file,</b> and creation of executable scripts or programs (when the language is compiled into object module format {{in the same way}} as any other VME programming language). The declaration of a procedure within SCL also acts as the definition of a simple form or template allowing the procedure to be invoked from an interactive terminal, with fields validated according to the data types of the underlying procedure parameters or using the default procedure parameter values.|$|E
5000|$|Some {{computer}} virus writers have hoped {{to take advantage}} of modern computer users' likely lack of knowledge of the [...]com file extension and associated binary format, along with their more likely familiarity with the [...]com Internet domain name. E-mail has been sent with attachment names similar to [...] "www.example.com". Unwary Microsoft Windows users clicking on such an attachment would expect to begin browsing a site named , but instead would run the attached binary <b>command</b> <b>file</b> named , giving it full permission to do to their machine whatever its author had in mind.|$|E
50|$|SCCS {{consists}} of two parts: SCCS <b>commands</b> and SCCS <b>files.</b> All basic operations (e.g., create, delete, edit) can be realized by SCCS <b>commands.</b> SCCS <b>files</b> have a unique format prefix , which is controlled by SCCS commands.|$|R
5000|$|Automatic sorting/batching, rescheduling, and {{executing}} of transmissions: The {{system can}} execute all necessary network commands {{to carry out}} the communication task arranged by <b>command</b> <b>files</b> of the MMMR/MMAR system. The system adjusts the path as needed in order to complete transmissions that have been delayed because of problems in the system.|$|R
5000|$|... #Subtitle level 2: SPFPC Select List Line <b>Commands</b> - <b>File</b> Manager ...|$|R
5000|$|Server {{sessions}} {{can support}} user to MTS or client to MTS interactions {{and while there}} may be interaction with the user, MTS commands are usually read from a <b>command</b> <b>file</b> and the user is not likely to have to know or enter MTS commands. Server sessions can be sponsored in which case they will appear to be free to the user, and do not require that the user enter an ID and password. Server sessions can also be charged for and require a valid ID and password. Server sessions can be initiated from the network or from within an MTS session using the $MOUNT command.|$|E
5000|$|Windows 9x also {{installs}} {{a different}} [...] file, {{regarded as a}} [...] "fake" [...] by some, but it's actually a configuration file, if parameter , then Windows 95/98 will not boot, and instead a [...] {{will appear on the}} screen (Windows can still be loaded by calling the [...] <b>command</b> (<b>file</b> WIN.COM). This file contains some switches that designate how the system will boot, one of which controls whether or not the system automatically goes into Windows. This [...] "BootGUI" [...] option must be set to [...] "0" [...] in order to boot to a DOS prompt. By doing this, the system's operation essentially becomes that of a DOS/Windows pairing like with earlier Windows versions. Windows can be started as desired by typing [...] at the DOS prompt.|$|E
50|$|The {{software}} {{was released in}} its first version in 1968 as the Statistical Package for the Social Sciences (SPSS) after being developed by Norman H. Nie, Dale H. Bent, and C. Hadlai Hull. Those principals incorporated as SPSS Inc. in 1975. Early versions of SPSS Statistics were designed for batch processing on mainframes, including for example IBM and ICL versions, originally using punched cards for input. A processing run read a <b>command</b> <b>file</b> of SPSS commands and either a raw input file of fixed format data with a single record type, or a 'getfile' of data saved by a previous run. To save precious computer time an 'edit' run {{could be done to}} check command syntax without analysing the data. From version 10 (SPSS-X) in 1983, data files could contain multiple record types.|$|E
5000|$|Program {{invocation}} under TRSDOS, DOS and UNIX {{is done by}} filename; no explicit LOAD {{command is}} required for normal binary executables nor for text <b>command</b> <b>files</b> (batch files in DOS and shell scripts in UNIX/Linux). The LOAD command under TRSDOS would load a binary program into memory, but would not execute it; neither DOS nor UNIX has an equivalent.|$|R
5000|$|... 1. Borland Sprint Reference Guide 1988 (Jan 8, 2013)From the bitsavers.org collection, a scanned-in computer-related document. Topics: sprint, <b>command,</b> menu, text, <b>file,</b> <b>commands,</b> choose, formatter, chapter, format, {{reference}} guide,...Bitsavers ...|$|R
40|$|A Practical Guide to Trade Policy Analysis aims to help {{researchers}} and policymakers update {{their knowledge of}} quantitative economic methods and data sources for trade policy analysis. Using this guide The guide explains analytical techniques, reviews the data necessary for analysis and includes illustrative applications and exercises. An accompanying DVD contains datasets and programme <b>command</b> <b>files</b> required for the exercises. Find out mor...|$|R
5000|$|When run {{on certain}} PDP-11 processors, each DEC {{operating}} system displayed a characteristic light {{pattern on the}} front of the processor in the [...] "Data" [...] lights when the system was idle. In RSX, this light pattern was created by an idle task that ran at the system's lowest scheduling priority. The light pattern was produced when the processor displayed the contents CPU register R0 when the [...] "WAIT" [...] instruction was executed. The RSX-11M light pattern was two sets of lights that swept outwards to the left and right from the center of the light display (or inwards if the IND indirect <b>command</b> <b>file</b> processor program was currently running). By contrast, the IAS light pattern was a single bar of lights that swept leftwards. Correspondingly, a jumbled light pattern (reflecting memory fetches) was a visible indication that the computer was under load as this meant that the system idle task was not being run. Other PDP-11 operating systems such as RSTS/E had their own distinctive patterns in the console lights.|$|E
40|$|As {{a result}} of the mission failure of the Mars Climate Orbiter (MCO) {{spacecraft}} in 1999, the Jet Propulsion Laboratory (JPL) initiated the development of a Mission Operations Assurance (MOA) program to be implemented across all flight projects managed by JPL. One of the initiatives undertaken in 2001 was the collection of data on <b>command</b> <b>file</b> errors occurring in the operational phase of the mission. This paper defines <b>command</b> <b>file</b> errors and how and where they occur in the operations process. It also describes the problem reporting system (PRS) in use for mission operations at JPL. We examine the recent modifications to the PRS that enable the collection of metrics, specifically on <b>command</b> <b>file</b> errors. This paper discusses what the data show us since metrics have been collected for the operational missions conducted by JPL. We examine the evolution of an operational working group initiative to evaluate proximate, contributing, and root causes for the errors. As part of this discussion we see what the metrics have indicated over a decade. At the macro level, we can say that the aggregate <b>command</b> <b>file</b> error rate has been cut to roughly one third of the initial 2001 level by the end of 2011. Additionally, we explore efficient and innovative means to continually integrate the findings and recommendations from the working group back into the flight operations environment...|$|E
40|$|BUFFERED SURFACE WATERS (100 ft. buffer for surface contribution, 150 ft. buffer {{in areas}} {{prescribed}} by planners for BMP’s, call them BUFFERP and BUFFERB). A. Prepare coverages for analysis, using ARC/INFO: (Note: Much {{of this can}} be done with an ARC/INFO <b>command</b> <b>file</b> which is currently being developed) ...|$|E
50|$|The PRO also is {{responsible}} for managing all ground commanding of U. S. payload systems and experiments on board the International Space Station. The PRO manages the command system, receives and sends <b>command</b> <b>files</b> to the mass storage device and configures the system to allow flight controllers in the Payload Operations Center and remote users to send commands to their equipment on the space station.|$|R
5000|$|Radmind {{operates}} as a tripwire, detecting changes in a client's filesystem (and, {{in the case of}} Microsoft Windows, the registry) and reversing the changes. Radmind stores filesystem specifications in text files called transcripts, signified with a [...]T extension. Transcripts are referenced from <b>command</b> <b>files,</b> signified with a [...]K extension, which specify which transcripts (and with what precedence) should be applied to a client machine's filesystem.|$|R
5000|$|<b>Command</b> line/batch <b>file</b> {{applications}} {{which allow}} GT Power systems {{to participate in}} Fidonet, RIME, and QWK networking; ...|$|R
