0|13|Public
5000|$|... 96 (RO): Operations <b>control,</b> <b>rerouting,</b> diversion, consolidation, {{aircraft}} {{change for}} {{reasons other than}} technical ...|$|R
40|$|The MOMBASA Software Environment is a toolkit that {{implements}} mobility-related functionalities complementing multicast protocols for multicast-based mobility support. The functionalities {{provided by}} the MOMBASA Software Environment include detection of link availability, registration, location update, paging, address translation, handoff initiation, handoff <b>control,</b> <b>rerouting,</b> prevention of hando oscillation and inactive handoff suppression...|$|R
40|$|Abstract — Delay-based TCPs detect network {{congestion}} {{in the early}} stage and successfully prevent periodic packet loss that usu-ally occurs in loss-based mechanisms. It has been demonstrated that delay-based algorithms outperform loss-based schemes in many aspects. However, a delay-based TCP may not prevent unnecessary throughput degradation when rerouting occurs and in mobile IP networks and mobile ad hoc networks because it could not differentiate whether the increased RTT is due to route change or {{network congestion}}. This work investigates how to improve the performance of delay-based TCPs with rerouting and proposes a mechanism for delay-based TCPs. The proposed mechanism is able to re-measure the BaseRTT if necessary by detecting the change of TTL value of two end-hosts. Based on the simulation results, we demonstrate the effectiveness and utilities. Index Terms — Transport protocol, delay-based TCP, conges-tion <b>control,</b> <b>rerouting,</b> Mobile IP, and mobile ad hoc networks...|$|R
40|$|A {{sequential}} optimization {{method is}} applied to manage air traffic flow under uncertainty in airspace capacity and demand. To support its testing, a decision support system is developed by integrating a deterministic integer programming model for assigning delays to aircraft under en route capacity constraints to reactively account for system uncertainties. To reduce computational complexity, the model assigns only departure controls, while a tactical control loop consisting of a shortest path routing algorithm and an airborne holding algorithm refines the strategic plan to keep flights from deviating into capacity constrained airspace. This integrated approach is used to conduct thirty-two, 6 -hour fast-time simulation experiments to explore variations in the number and severity of departure <b>controls,</b> tactical <b>reroutes,</b> and airborne holding controls. Three feasible types of traffic flow controls emerged. The first type relied primarily on departure <b>controls</b> and strategic <b>reroutes</b> on the 300 to 400 nmi look-ahead horizon and worked best when rerouting occurred at a frequency of 10 to 15 minutes. The second type generated more tactical reroutes on the 200 – 300 nmi look-ahead horizon and required little airborne holding or pre-departure <b>control</b> when <b>rerouting</b> occurred at a frequency of 5 minutes. The last type relied heavily on airborne holding controls and infrequent updates to the weather avoidance reroutes. This last type was the least desirable solution due {{to the impact of}} its airborne holding on airspace complexity and airspace users. I...|$|R
40|$|Abstract. The MOMBASA Software Environment is a toolkit that {{implements}} mobility-related functionalities complementing multicast protocols for multicast-based mobility support. The functionalities {{provided by}} the MOMBASA Software Environment include detection of link availability, registration, location update, paging, address translation, handoff initiation, handoff <b>control,</b> <b>rerouting,</b> prevention of handoff oscillation and inactive handoff suppression. The MOMBASA Software Environment is targeted for researchers investigating the support of host mobility in IP-based cellular networks. It aims at performance evaluation of mobility support by means of measurements. The software is easy to maintain, to configure and to extend: a) It has a clear design, b) it provides well-defined configuration and management interfaces, c) policies {{can be used to}} control and tune the system behavior and d) it has a generic interface to the multicast which facilitates to investigate multicast protocols of different types. This paper describes the functionalities, features and structure of the MOMBASA Software Environment and presents a framework for evaluating the performance of mobility support using the MOMBASA Software Environment. The MOMBASA Software Environment is open software under GNU Public License. It is freely available, extensively tested and well documented. ...|$|R
40|$|The {{simulated}} annealing optimisation technique {{is used to}} {{provide a framework for}} <b>controlling</b> ripup and <b>rerouting</b> transformations within an implementation of Lee‘s routing algorithm. The performance of the optimised router is compared with a more traditional implementation of Lee’s algorithm. The results show a significant improvement in completion rate obtained by the optimised router. In addition, the versatility of the optimised router is confirmed by the diverse nature of the experimental data. ...|$|R
40|$|Hardware and {{algorithms}} {{have been}} developed to transfer electrical power and data connectivity safely, efficiently, and automatically from an identified damaged/defective wire in a cable to an alternate wire path. The combination of online cable testing capabilities, along with intelligent signal rerouting algorithms, allows the user to overcome the inherent difficulty of maintaining system integrity and configuration <b>control,</b> while autonomously <b>rerouting</b> signals and functions without introducing new failure modes. The incorporation of this capability will increase the reliability of systems by ensuring system availability during operations...|$|R
40|$|An air traffic-control (ATC) {{simulator}} for {{the evaluation}} of flow management strategies was designed and implemented in Lisp. The ATC system is modeled as a network of queueing systems. Flights are generated from a flight schedule, a text file created by the simulation scenario designer. The simulator supports the following flow control actions: ground holds, airborne holds, speed <b>control,</b> and <b>rerouting.</b> Tools are included for schedule generation and statistical analysis. The design of a scenario requires a working knowledge of Lisp. This thesis includes an overview of the flow management problem, a discussion of modeling issues and design considerations, a description of the implementation of the simulator in moderate detail, results from a sample simulation scenario which includes a simple flow management strategy, and suggestions for possible improvements to the simulator. Cover titleFebruary 1987 Also issued as an M. S. thesis, Massachusetts Institute of Technology, Dept. of Aeronautics and Astronautics, 1987 Includes bibliographical references (p. 55) Supported, in part, by the NASA/FAA TRI-University Program...|$|R
50|$|Through the process, Mattingly, {{ironically}} enough, {{developed an}} ability eerily {{similar to the}} one of Vyking, the Morituri he depicted in the series, namely, the ability to redirect energy. His <b>control</b> of energy <b>rerouting</b> was also more refined and focused than the one Vyking had in his own powers. In the first official mission of the new generation of Morituri, however, one of the new members, Wildcard suffered a horrible death, due to the Morituri effect. Witnessing this, Backhand freaked out and went screaming, arguing he no longer wanted to be a Morituri. However, he managed to eventually regain his calmness.|$|R
40|$|This paper {{addresses}} {{the problem of}} optimal Quality of Service (QoS), Traffic Engineering (TE) and Failure Recovery (FR) in Computer Networks by introducing novel algorithms that only use source inferrable information. More precisely, optimal data rate adaptation and load balancing laws are provided which are applicable to networks where multiple paths are available and multiple Classes of Service (CoS) are to be provided. Different types of multiple paths are supported, including point-to-point multiple paths, point-to-multipoint multiple paths, and multicasting. In particular, it is shown that the algorithms presented only need a minimal amount of information to achieve an optimal operating point. More precisely, they only require knowledge of whether a path is congested or not. Hence, the control laws provided in this paper allow source inferred congestion detection {{without the need for}} explicit congestion feedback from the network. The proposed approach is applicable to utility functions of a very general form and endows the network with the important property of robustness with respect to node/link failures; i. e., upon the occurrence of such a failure, the presented <b>control</b> laws <b>reroute</b> traffic away from the inoperative node/link and converge to the optimal allocation for the “reduced ” network. The proposed control laws set the foundation for the development of feature-rich traffic control protocols at the IP, transport, or higher layers with provable global stability and convergence properties. Highly scalable QoS, TE, and FR features ca...|$|R
40|$|Adaptive flexi-grid optical {{networks}} {{should be}} able to autonomously decide where and when to dynamically setup, reoptimize, and release elastic optical connections, in reaction to network state changes. A stateful path computation element (PCE) is a key element for the introduction of dynamics and adaptation in generalized multiprotocol label switching (GMPLS) -based distributed control plane for flexi-grid DWDM networks (e. g., global concurrent reoptimization, defragmentation, or elastic inverse-multiplexing), as well as for enabling the standardized deployment of the GMPLS control plane in the software defined network control architecture. First, this paper provides an overview of passive and active stateful PCE architectures for GMPLS-enabled flexi-grid DWDM networks. A passive stateful PCE allows for improved path computation considering not only the network state (TED) but also the global connection state label switched paths database (LSPDB), in comparison with a (stateless) PCE. However, it does not have direct <b>control</b> (modification, <b>rerouting)</b> of path reservations stored in the LSPDB. The lack of control of these label switched paths (LSPs) may result in the suboptimal performance. To this end, an active stateful PCE allows for optimal path computation considering the LSPDB for the control of the state (e. g., increase of LSP bandwidth, LSP rerouting) of the stored LSPs. More recently, an active stateful PCE architecture has also been proposed that exposes the capability of setting up and releasing new LSPs. It is known as active stateful PCE with instantiation capabilities. This paper presents the first prototype implementation and experimental evaluation of an active stateful PCE with instantiation capabilities for the GMPLS-controlled flexi-grid DWDM network of the ADRENALINE testbed...|$|R
40|$|Over {{the past}} three decades, growth in the demand for air {{transportation}} has exceeded {{the growth in the}} national airspace system (NAS) capacity. Systems operating near capacity inevitably have delays and NAS d elays have increased in recent years. The desire to minimize delay costs has placed attention on the NAS air traffic management (ATM) syste m. One initiative that has helped to provide user representation in the ATM solution is the collaborative decision making (CDM) process. CDM addresses this issue by bringing users (referred to here as airline operation centers [AOCs]) and ATM providers together for information e xchange and cooperative planning. Such cooperative planning has been instituted, for instance, for the purpose of planning airport slot <b>control</b> strategies and <b>rerouting</b> strategies. While the CDM initiatives ha ve met with much success, they have also introduced the potential for AOCs to manipulate the system in unforeseen, unintended, and perhaps undesirable ways, from a system-wide, synoptic perspective. This type of manipulation is sometimes referred to as "gaming" the system. This study uses a high-fidelity simulation tool to investigate several models of user decision making behavior which could be considered to be gaming behavior and the emergent system dynamics and interactions between AOCs and traffic management...|$|R
40|$|Quantitative {{decision-making}} {{relies on}} appropriate mathematical {{models of the}} systems about which decisions are to be made. Intelligent transport systems (ITS), which apply combined advanced detection, communication, and computer science technologies to traffic and transport systems, are im-portant examples of such quantitative decision support systems. Figure 1, adapted from [10], depicts the logic diagram for an advanced traffic management system (ATMS), a paradigmatic case of ITS. This generic ATMS assumes that the network is equipped with an appropriate layout of detectors that provide real-time measurements of traf-fic variables, flows, speeds, and occupancy levels; these measurements constitute the main input to traffic models that are solved to estimate {{the current state of}} the network and forecast its short-term evolution. System performance is estimated in terms of “measures of efficiency ” (MOE) : travel times, delays, mean queue lengths, and possibly others, depending on the manager’s objectives; the latter can include estimates of fuel consumption and emission levels when the sustainability of the transportation system is to be taken into account. The estimated system perform-ance and its predicted short-term evolution are then compared with the management performance objectives (e. g., minimize congestion, travel time, or delays, or hold emissions under critical threshold values); in the case of significant deviations, appropriate management strategies are activated (linear speed <b>control,</b> ramp metering, <b>rerouting</b> policies, changes in signal timings, and so on) and put into operation by appropriate ITS devices (variable message signal (VMS) panels, adaptive controllers, in-car information systems, and so on). Of particular interest for real-life applications is the case in which the ATMS is called on to support real-time management in response to incidents or situations, recurrent or not. In such cases, the system needs additional functions, such as...|$|R

