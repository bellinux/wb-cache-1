0|11|Public
40|$|<b>Network</b> <b>Constructors</b> are an {{extension}} of the standard population protocol model in which finite-state agents interact in pairs under the control of an adversary scheduler. In this work we present NETCS, a simulator designed to evaluate the performance of various <b>network</b> <b>constructors</b> and population protocols under different schedulers and network configurations. Our simulator provides researchers with an intuitive user interface and a quick experimentation environment to evaluate their work. It also harnesses the power of the cloud, as experiments are executed remotely and scheduled through the web interface provided. To prove the validity and quality of our simulator we provide an extensive evaluation of multiple protocols with more than 100000 experiments for different network sizes and configurations that validate the correctness of the theoretical analysis of existing protocols and estimate the real values of the hidden asymptotic coefficients. We also show experimentally (with more than 40000 experiments) that a probabilistic algorithm is capable of counting the actual size of the network in bounded time given a unique leader...|$|R
40|$|A game-theoretic {{model for}} the study of dynamic {{networks}} is analyzed. The model is motivated by communication networks that are subject to failure of nodes and where the restoration needs resources. The corresponding two-player game is played between "Destructor" (who can delete nodes) and "Constructor" (who can restore or even create nodes under certain conditions). We also include the feature of information flow by allowing Constructor to change labels of adjacent nodes. As objective for <b>Constructor</b> the <b>network</b> property to be connected is considered, either as a safety condition or as a reachability condition (in the latter case starting from a non-connected network). We show under which conditions the solvability of the corresponding games for Constructor is decidable, and in this case obtain upper and lower complexity bounds, as well as algorithms derived from winning strategies. Due to the asymmetry between the players, safety and reachability objectives are not dual to each other and are treated separately. Comment: In Proceedings GandALF 2011, arXiv: 1106. 081...|$|R
40|$|In this work, we {{consider}} {{a solution of}} automata similar to Population Protocols and <b>Network</b> <b>Constructors.</b> The au-tomata, also called nodes, move passively in a well-mixed solution and can cooperate by interacting in pairs. Dur-ing every such interaction, the nodes, apart from updating their states, may also choose to connect {{to each other in}} order to start forming some required structure. The model introduced here is a more applied version of Network Con-structors, imposing geometrical constraints on the permissi-ble connections. Each node can connect to other nodes only via a very limited number of local ports, which implies that at any given time it has only a bounded number of neigh-bors. Connections are always made at unit distance and are perpendicular to connections of neighboring ports. Thoug...|$|R
40|$|In 2003 the Supreme Court {{confirmed}} in {{a ruling that}} cable and pipeline networks are immovable properties and also that the authorized <b>constructor</b> of a <b>network</b> is the legal owner of the network if the network is constructed in a parcel {{which is owned by}} someone else. This ruling is transposed into national law. On February 1, 2007 a new article was introduced in the Civil Code. In the second paragraph of Article 5 : 20 is regulated that a network that is being placed, in, on or above the subsoil of others, belongs to the authorized <b>constructor</b> of that <b>network</b> or its predecessor. Authorized construction may result from private law (building lease, contract) or public law (obligation to consent). The parcel owner – who is not the <b>constructor</b> of the <b>network</b> – is not the owner of the network on the bases that the network is durably united with the parcel. Determining the real status of networks has also resulted in the fact that a legal transfer of ownership of a network has to be registered in the public registers. Through amendment of Article 3 : 17 of the Civil Code the construction and removal of a network itself is also registrable as a fact. In the new ownership rule two key concepts are introduced, namely the concept of ‘network’ and the concept of the ‘authorized constructor’. With respect to ‘network’, the size of a network is determined by the legal description in specific (sector) regulations. In the absence of such a specific description, the size is determined by the ideas in practice. The network with all its components will be considered as one factual and functional unit. For acquisition of ownership of a network the construction of the network must be authorized by the parcel owner. In practice it turned out that it was difficult for the intended owner to deliver evidence which sufficiently shows that he or his predecessors were authorized to construct the network. To solve this problem an amendment is proposed on the basis of which the person who has acted as an owner on February 1, 2007 may register the ownership of the network on his name in the public registers. Although the new ownership rule, including the proposed amendment, has clarified the question about the ownership of networks, several new questions have arisen. For instance the question whether a supplement to the ownership rule is necessary so that besides the ownership also the use (construction, maintenance) of the network is regulated. Another question is whether the new ownership rule applies to networks that are constructed in the subsoil that is owned by the constructor himself. In this thesis these questions will be discusse...|$|R
40|$|In {{order to}} deal with {{unexpected}} or illegal behavior in multi-agent systems, underlying causal models connecting the target system's behavior and each agent's behavior are indispensable. In this paper, we present a method for generating causal networks, which consist of arithmetic and differential relations for ex- plicitly defined parameters and implicitly existing parameters embedded in the target system. The task consists of three components: 1) A macro-behavior rule generator, which pre- pares implicit parameters and generates the rules about system's behavior at macro-level. 2) A causal <b>network</b> <b>constructor.</b> 3) An expla- nation generator. In the course of this process, spatial extents are represented and reasoned with qualitative regions. We took, as an example for this method, the foraging behavior of ant colonies, which are typical mobile multi-agent systems with a local communication method by means of the chemical pheromone...|$|R
40|$|We {{consider}} {{a solution of}} automata similar to Population Protocols and <b>Network</b> <b>Constructors.</b> The automata (or nodes) move passively in a well-mixed solution and can cooperate by interacting in pairs. Every such interaction may result in an update of the local states of the nodes. Additionally, the nodes may also choose to connect {{to each other in}} order to start forming some required structure. We may think of such nodes as the smallest possible programmable pieces of matter. The model that we introduce here is a more applied version of <b>Network</b> <b>Constructors,</b> imposing physical (or geometrical) constraints on the connections. Each node can connect to other nodes only via a very limited number of local ports, therefore at any given time it has only a bounded number of neighbors. Connections are always made at unit distance and are perpendicular to connections of neighboring ports. We show that this restricted model is still capable of forming very practical 2 D or 3 D shapes. We provide direct constructors for some basic shape construction problems. We then develop new techniques for determining the constructive capabilities of our model. One of the main novelties of our approach, concerns our attempt to overcome the inability of such systems to detect termination. In particular, we exploit the assumptions that the system is well-mixed and has a unique leader, in order to give terminating protocols that are correct with high probability (w. h. p.). This allows us to develop terminating subroutines that can be sequentially composed to form larger modular protocols. One of our main results is a terminating protocol counting the size $n$ of the system w. h. p [...] We then use this protocol as a subroutine in order to develop our universal constructors, establishing that the nodes can self-organize w. h. p. into arbitrarily complex shapes while still detecting termination of the construction. Comment: 39 pages, 10 figure...|$|R
40|$|Factory {{pattern of}} [Gam 95] once again. Rather than declaring these methods in SyncVersionImpl, we declare {{them in an}} {{abstract}} class named SyncVersionFactory. (Indeed, the method to return the earliest possible version and the method to return a pure local version are not naturally associated with an existing version object, so they would be naturally declared in SyncVersionImpl as static methods; but static methods can not be overridden in different ways by different subclasses of SyncVersionImpl.) There are three concrete subclasses of SyncVersionFactory [...] -one that generates VersionVector objects, one that generates 63 CentralizedSyncVersion objects on a central replica, and one that generates CentralizedSyncVersion objects on subordinate replicas. A parameter to the SyncStoreState <b>constructor</b> specifies the <b>network</b> role of the replica [...] -either a peer, a central replica, or a subordinate replica in a central-replica topology. Based on this parameter, the SyncStoreState construc [...] ...|$|R
40|$|Biochemical network {{maps are}} helpful for {{understanding}} the mechanism of how a collection of biochemical reactions generate particular functions within a cell. We developed a new and computationally feasible notation that enables drawing a wide resolution map from the domain-level reactions to phenomenological events and implemented it as the extended GUI <b>network</b> <b>constructor</b> of CADLIVE (Computer-Aided Design of LIVing systEms). The new notation presents ‘Domain expansion’ for proteins and RNAs, ‘Virtual reaction and nodes’ {{that are responsible for}} illustrating domain-based interaction and ‘InnerLink’ that links real complex nodes to virtual nodes to illustrate the exact components of the real complex. A modular box is also presented that packs related reactions as a module or a subnetwork, which gives CADLIVE a capability to draw biochemical maps in a hierarchical modular architecture. Furthermore, we developed a pathway search module for virtual knockout mutants as a built-in application of CADLIVE. This module analyzes gene function {{in the same way as}} molecular genetics, which simulates a change in mutant phenotypes or confirms the validity of the network map. The extended CADLIVE with the newly proposed notation is demonstrated to be feasible for computational simulation and analysis...|$|R
40|$|A goal {{of systems}} biology is to {{construct}} biochemical networks {{of the whole}} cell at the molecular interaction level and to understand some design principles underlying their molecular processes. There are two main approaches: topological and dynamic analyses. Topological analysis aims at capturing macroscopic features, such as scale-free networks, hierarchical modularity, and small worlds. Dynamic analysis approaches {{to an understanding of}} the mechanism that generates a robust property to genetic changes and environmental stresses. In order to implement these analyses, we have developed the CADLIVE system that consists of a network editor, a database, a network map integrator, an automatic layout module, a dynamic simulator, and a pathway search module for virtual knockout mutants [1 - 3]. The CADLIVE <b>network</b> <b>constructor</b> is a software suite for drawing a large-scale map of biochemical networks and for registering their associated regulator-reaction equations (RREs) in an extension of SBML level 2 [1]. CADLIVE improves on Kohn's MIM notation for computer simulation, which describes signal transduction pathways and metabolic circuits in a form that can be readily processed by both computers and humans. Visualization of biochemical network maps is indispensable to research of complex biochemical networks. Thus, CADLIVE implements an automatic grid layout program to draw them, which exhibits cluste...|$|R
40|$|The {{position}} of the <b>constructor</b> in communication <b>networks,</b> including those before the commencement of construction, is likely related {{to the quality of}} work health and safety (WHS) outcomes realized. In order to examine the extent of this relationship, 23 cases were drawn from 10 participating construction projects in Australia and New Zealand. Social network analysis was used to mathematically and graphically model information exchanges in 13 of these cases. For each case, the quality of WHS risk control outcomes was measured. This measurement was based on an established &# 039;hierarchy of control&# 039; in which risk controls are classified in descending order of effectiveness from the elimination of a hazard (the most effective) to the reliance on personal protective equipment (the least effective). Social network metrics were calculated reflecting: (1) the ratio of actual links among parties in the project network relative to the maximum number of links possible (network density); and (2) {{the extent to which the}} constructor communicated with other parties in pre-project planning and design stages (the constructors&# 039; degree centrality). Network metrics were compared for cases in which the risk control scores were higher and lower than average. The results showed a significant difference in constructors&# 039; pre-construction degree centrality for cases with high and low risk control scores. The results provide preliminary evidence as to the potential WHS benefits of ensuring that constructors&# 039; knowledge about construction methods, materials, WHS risks and means of risk control, are integrated into pre-construction decision-makin...|$|R
40|$|The Population Protocol {{model is}} a {{distributed}} model that concerns systems of very weak computational entities that cannot control the way they interact. The model of <b>Network</b> <b>Constructors</b> is a variant of Population Protocols capable of (algorithmically) constructing abstract networks. Both models are characterized by a fundamental inability to terminate. In this work, we investigate the minimal strengthenings of the latter that could overcome this inability. Our main conclusion is that initial connectivity of the communication topology combined with {{the ability of the}} protocol to transform the communication topology plus a few other local and realistic assumptions are sufficient to guarantee not only termination but also the maximum computational power that one can hope for in this family of models. The technique is to transform any initial connected topology to a less symmetric and detectable topology without ever breaking its connectivity during the transformation. The target topology of all of our transformers is the spanning line and we call Terminating Line Transformation the corresponding problem. We first study the case {{in which there is a}} pre-elected unique leader and give a time-optimal protocol for Terminating Line Transformation. We then prove that dropping the leader without additional assumptions leads to a strong impossibility result. In an attempt to overcome this, we equip the nodes with the ability to tell, during their pairwise interactions, whether they have at least one neighbor in common. Interestingly, it turns out that this local and realistic mechanism is sufficient to make the problem solvable. In particular, we give a very efficient protocol that solves Terminating Line Transformation when all nodes are initially identical. The latter implies that the model computes with termination any symmetric predicate computable by a Turing Machine of space Θ(n^ 2) ...|$|R

