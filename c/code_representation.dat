145|618|Public
2500|$|The MSF signals {{started in}} 1950, {{following}} the transmission pattern described below. They were {{originally intended to}} provide frequency references at 2.5, 5 and 10MHz, originally only occasionally during the day. At first, there were announcements every fifteen minutes, beginning with the Morse <b>code</b> <b>representation</b> of [...] "MSF MSF MSF" [...] (MSF is [...] "-- ··· ··-·" [...] in Morse code), followed by speech [...] "This is MSF, Rugby, England, transmitting ...". From May 1953, the signal was broadcast 24 hours a day, but with regular five-minute stoppages to allow the reception of other signals. The 60kHz signal finally became an uninterrupted 24-hour service in 1966, and the frequency references were discontinued in February 1988.|$|E
50|$|The LLVM Compiler Infrastructure uses SSA {{form for}} all scalar {{register}} values (everything except memory) in its primary <b>code</b> <b>representation.</b> SSA form is only eliminated once register allocation occurs, {{late in the}} compile process (often at link time).|$|E
5000|$|Strictly speaking, JIS X 0201 {{encoding}} as [...] "half-width katakana" [...] is incorrect, as {{the standard}} does not define character widths - it defines only the <b>code</b> <b>representation</b> of katakana characters. In the JIS X 0201 standard, katakana characters are printed in normal (full) width, not half-width.|$|E
5000|$|Associated control {{functions}} and their <b>coded</b> <b>representation</b> for information interchange ...|$|R
5000|$|... the <b>coded</b> <b>representation</b> of {{synthetic}} two-dimensional (2D) or three-dimensional (3D) objects {{that can be}} manifested audibly or visually; ...|$|R
25|$|The ITU {{has never}} codified formal Morse <b>Code</b> <b>representations</b> for {{currencies}} as the ISO 4217 Currency Codes are preferred for transmission.|$|R
5000|$|The {{distress}} signal SOS (with the overbar indicating {{that it is}} a prosign, sent as a single Morse character) is often believed to be an abbreviation for [...] "Save Our Ship" [...] or [...] "Save Our Souls". In fact, it was chosen because it has a simple and unmistakable Morse <b>code</b> <b>representation</b> three dots, three dashes, three dots, all sent without any pauses between characters.|$|E
5000|$|... (C) If SUBR {{is later}} linked with other code {{it may be}} stored at a {{location}} other than zero. In this example the linker places it at location 120. The address in the jump instruction, which is now at location 133, must be relocated {{to point to the}} new location of the code for statement ST, now 125. 61 shown in the instruction is the MIX machine <b>code</b> <b>representation</b> of 125.|$|E
5000|$|... srcML {{allows the}} use of {{most if not all}} current XML APIs and tools to write transformations. It also allows for {{the use of}} XSLT {{directly}} using the argument—xslt={name}.xls on the srcml2src command. Using srcML's markup with XSLT allows the user to apply Program Transformations on an XML-like structure(srcML) to obtain transformed xml which can then be written back its source <b>code</b> <b>representation</b> using the srcml2src tool. The application of srcML to program transformation is explained, in detail, by Collard et al.|$|E
5000|$|... the <b>coded</b> <b>representation</b> of the spatio-temporal {{positioning}} of audio-visual objects {{as well as}} their behaviour in response to interaction (scene description); ...|$|R
5000|$|ISO/IEC JTC 1/SC 29 {{currently}} has 541 published standards {{within the field}} of <b>coded</b> <b>representation</b> of audio, picture, multimedia, and hypermedia information, including: ...|$|R
40|$|There is an {{increasing}} interest within the reverse engineering community in using the XML language and its related technologies {{as a way to}} foster the development, reuse and interoperability of code analysis tools. However, most of the work done in this direction has thus far concentrated on the interoperability issue, mainly with the proposal of new XML-based source <b>code</b> <b>representations,</b> and the development of new facilities for extracting those <b>representations</b> from source <b>code.</b> This paper attempts to fill this gap by showing how XML-based source <b>code</b> <b>representations</b> and query technologies can be used to facilitate the development and reuse of code analysis tools...|$|R
5000|$|The {{original}} {{source is}} the paper Macro Instruction Extensions of Compiler Languages, {{according to the}} early and influential paper TRAC, A Text-Handling Language: One of the main design goals was that the input script of TRAC (what is typed in by the user) should be identical to the text which guides the internal action of the TRAC processor. In other words, TRAC procedures should be stored in memory as a string of characters exactly as the user typed them at the keyboard. If the TRAC procedures themselves evolve new procedures, these new procedures should also be stated in the same script. The TRAC processor in its action interprets this script as its program. In other words, the TRAC translator program (the processor) effectively converts the computer into a new computer with a new program language -- the TRAC language. At any time, {{it should be possible}} to display program or procedural information in the same form as the TRAC processor will act upon it during its execution. It is desirable that the internal character <b>code</b> <b>representation</b> be identical to, or very similar to, the external <b>code</b> <b>representation.</b> In the present TRAC implementation, the internal character representation is based upon ASCII. Because TRAC procedures and text have the same representation inside and outside the processor, the term homoiconic is applicable, from homo meaning the same, and icon meaning representation....Following suggestion of McCullough, W. S., based upon terminology due to Peirce, C. S. s McIlroy. M. D., [...] "Macro Instruction Extensions of Compiler Languages," [...] Comm. ACM, p. 214-220; April, 1960.|$|E
5000|$|The MSF signals {{started in}} 1950, {{following}} the transmission pattern described below. They were {{originally intended to}} provide frequency references at 2.5, 5 and 10 MHz, originally only occasionally during the day. At first, there were announcements every fifteen minutes, beginning with the Morse <b>code</b> <b>representation</b> of [...] "MSF MSF MSF" [...] (MSF is [...] "-- ··· ··-·" [...] in Morse code), followed by speech [...] "This is MSF, Rugby, England, transmitting ...". From May 1953, the signal was broadcast 24 hours a day, but with regular five-minute stoppages to allow the reception of other signals. The 60 kHz signal finally became an uninterrupted 24-hour service in 1966, and the frequency references were discontinued in February 1988.|$|E
30|$|The {{rationale}} {{beyond the}} use of gray <b>code</b> <b>representation</b> is the following. In the gray code space, just a subset of all possible bit combinations {{is related to the}} eyes patches. We wish to select those bits that usually differ in terms of binary value between eye and non-eye patches. Moreover, by using gray <b>code</b> <b>representation</b> rather than classic bit planes decomposition, we reduce the impact of small changes in intensity of patches that could produce significant variations in the corresponding binary code [17].|$|E
5000|$|The {{scope of}} ISO/IEC JTC 1/SC 29 is “Standardization of <b>coded</b> <b>representation</b> of audio, picture, {{multimedia}} and hypermedia information - and sets of compression and control functions {{for use with}} such information - such as:” ...|$|R
50|$|Markdown {{also uses}} {{indentation}} {{as part of}} the formal syntax of the language. Indentation is required in Markdown when creating certain source <b>code</b> <b>representations</b> of block quotations as well as when creating sections of source code to be rendered as the code itself.|$|R
50|$|Bit arrays {{are also}} a useful {{abstraction}} for examining streams of compressed data, which often contain elements that occupy portions of bytes or are not byte-aligned. For example, the compressed Huffman <b>coding</b> <b>representation</b> of a single 8-bit character can be anywhere from 1 to 255 bits long.|$|R
30|$|In[2], {{a mixture}} of model-driven and {{generative}} programming techniques are proposed to support variability configuration of video surveillance systems. In order to better manage features combination at runtime, it separates the variability in domain and <b>code</b> <b>representation</b> spaces.|$|E
40|$|Nowadays, a {{large number}} of {{extraction}} tools are available. However, using them, {{it is often difficult to}} gather and incorporate new metrics. On the other hand, the metric specifications often lack precision and therefore lead to multiple implementation patterns. In this paper, we propose a new approach of metric gathering. This approach, which is at the same time generic and practical, is based on a metric description mechanism. It uses a language that makes it possible to manipulate data from the source <b>code</b> <b>representation</b> model. In a first phase, we have defined a generic model for object oriented <b>code</b> <b>representation.</b> A second phase defines a description language that offers the syntactic constructions necessary for data manipulation of the generic mode...|$|E
40|$|Research title: feature {{extraction}} and selection algorithm for chain <b>code</b> <b>representation</b> of handwritten character Aug 2008 Universiti Teknologi Malaysia MSc in Computer Science CGPA 3. 47 Thesis title: conversion and optimization of SIMULINK model to C source code for robot simulation software (case study: robot mitsubishi RV- 2 AJ...|$|E
40|$|<b>Coded</b> <b>representation</b> of {{time signals}} [...] day, hour, minute, second [...] is changed from binary-coded decimal (BCD) to IRIG {{standard}} time-code format B by circuit that uses nine integrated circuits. Input to code-converter circuit is parallel BCD pulses on bus output is serial pulses of IRIG-B on single line...|$|R
40|$|A {{variety of}} {{representation}} learning approaches {{have been investigated}} for reinforcement learning; much less attention, however, {{has been given to}} investigating the utility of sparse coding. Outside of reinforcement learning, sparse <b>coding</b> <b>representations</b> have been widely used, with non-convex objectives that result in discriminative representations. In this work, we develop a supervised sparse coding objective for policy evaluation. Despite the non-convexity of this objective, we prove that all local minima are global minima, making the approach amenable to simple optimization strategies. We empirically show that it is key to use a supervised objective, rather than the more straightforward unsupervised sparse coding approach. We compare the learned representations to a canonical fixed sparse representation, called tile-coding, demonstrating that the sparse <b>coding</b> <b>representation</b> outperforms a wide variety of tilecoding representations. Comment: 6 (+ 1) pages, 2 figures, International Joint Conference on Artificial Intelligence 201...|$|R
5000|$|ISO 639-4:2010 <b>Codes</b> for the <b>representation</b> {{of names}} of languages—Part 4: General {{principles}} of <b>coding</b> of the <b>representation</b> of names of languages and related entities ...|$|R
40|$|By {{allowing}} the programmer to write code that can generate code at run-time, meta-programming offers a powerful approach to program construction. For instance, meta-programming {{can often be}} employed to enhance program efficiency and facilitate the construction of generic programs. However, meta-programming, especially in an untyped setting, is notoriously error-prone. In this paper, we aim at making meta-programming less error-prone by providing a type system to facilitate the construction of correct meta-programs. We first introduce some code constructors for constructing typeful <b>code</b> <b>representation</b> in which program variables are replaced with deBruijn indices, and then formally demonstrate how such typeful <b>code</b> <b>representation</b> {{can be used to}} support meta-programming. The main contribution of the paper lies in recognition and then formalization of a novel approach to typed meta-programming that is practical, general and flexible...|$|E
40|$|Abstract—A fast {{method of}} {{handwritten}} word recognition suitable for real time applications {{is presented in}} this paper. Preprocessing, segmentation and feature extraction are implemented using a chain <b>code</b> <b>representation</b> of the word contour. Dynamic matching between characters of a lexicon entry and segment(s) of the input word image is used to rank the lexicon entries in order of best match. Variable duration for each character is defined and used during the matching. Experimental results prove that our approach using the variable duration outperforms the method using fixed duration {{in terms of both}} accuracy and speed. Speed of the entire recognition process is about 200 msec on a single SPARC- 10 platform and the recognition accuracy is 96. 8 percent are achieved for lexicon size of 10, on a database of postal words captured at 212 dpi. Index Terms—Handwritten word recognition, segmentation algorithm, variable duration, chain <b>code</b> <b>representation,</b> dynami...|$|E
40|$|In this paper, {{adaptive}} coding schemes for contour line drawings based on chain <b>code</b> <b>representation</b> is presented. In this scheme, the chain code or the chain-difference code of a contour is modeled as an n-order Markov sequence and then coded with arithmetic coding scheme adaptively. Experimental result {{shows that the}} proposed approach is better than some other conventional approaches. Department of Electrical Engineerin...|$|E
30|$|Sparse coding adopts {{independent}} coding {{method for}} features, and the coding {{of the same}} image may change because {{of the influence of}} illumination changes, occlusion, and other noises. In addition, sparse coding also ignores the correlation between local descriptors and good <b>coding</b> <b>representation</b> should make similar image features have similar coding to minimize intra-class differences.|$|R
5000|$|Standards {{such as the}} UDEF {{depend on}} {{accurate}} <b>coding</b> of <b>Representation</b> Terms.|$|R
40|$|International Telemetering Conference Proceedings / October 09 - 11, 1973 / Sheraton Inn Northeast, Washington, D. C. Prefix {{insertion}} {{prior to}} the <b>coded</b> <b>representation</b> of every fixed length block of data provides a simple synchronization method for variable length coding. Unlike fixed length coding where the prefix appears with a set period, the appearance time of each prefix word in the variable length <b>coded</b> <b>representation</b> is a random variable. At the receiver a synchronization decision is made whenever a pattern within a threshold Hamming distance of the prefix is received. In this paper an expression is found for small synchronization error probabilities. This egression depends on the coded block length only through its average value L. The optimal value for the recognition threshold is found. The necessary and sufficient condition for an arbitrarily small synchronization error probability is shown {{to be that the}} prefix length grows as log L. The results are discussed from the viewpoint of data compression and source encoding...|$|R
40|$|Binary {{translation}} {{is the process}} of converting machine code created for one architecture to semantically equivalent machine code for another architecture. Static binary translation in particular is one of many ways to achieve Architecture-Independent Computing (AIC). AIC aims to provide the ability to execute code on any machine regardless of the original target. Unlike other solutions for AIC, such as portable virtual machines, emulators, or interpreters, static binary translation presents the possibility to create a framework that can translate code between any two machine code languages and provide results at near native speeds. In this thesis we present the Binary Translation System (BTS), a new static binary translator that can retarget machine code for arbitrary computing architectures. This thesis presents the extensible BTS framework {{that can be used to}} create translators for any common instruction set architecture. We also present our architecture-independent <b>code</b> <b>representation</b> and manipulations that we used to face some of the common problems with binary translation. Our prototype BTS implements a RISC-like, architecture-independent <b>code</b> <b>representation,</b> a PowerPC decoder, and a SPARC encoder to demonstrate the feasibility and problems of static binary translation. The PowerPC decoder in particular, exemplifies many decompilation problems that must be dealt with when converting machine code to an architecture-independent <b>code</b> <b>representation.</b> Our test results show that our prototype can achieve comparable performance and compatiblilty to other AIC solutions. Our methods and approaches presented in this thesis may be of interest to binary translation writers, reverse engineers, decompiler/compiler designers, and engineers wanting to do binary program manipulation or instrumentation. 1...|$|E
40|$|International audienceAn edge {{coding scheme}} based on chain <b>code</b> <b>representation</b> in a multiresolution image coding context is presented. Our method enhances the coding schemes that {{describe}} the source structure with Markov models, by using also an a priori knowledge from the previous decoded resolution images. Experiments using adaptive arithmetic coding have shown up to a 5 % improvement for the bitrate compared to a Markovian scheme...|$|E
40|$|Over {{the past}} decade, since Java was first {{introduced}} and integrated into the Netscape web browser, several intermediate representations have been developed that might be potentially used for mobile code applications. This paper examines the requirements for a mobile <b>code</b> <b>representation,</b> presents several examples of stack-based, tree-oriented, and proof-annotating mobile code representations, and evaluates each of these representations according to the requirements. Povzetek: Članek podaja pregled mobilnih kod. ...|$|E
40|$|Fingers {{can be used}} {{to express}} {{numerical}} magnitudes, and cultural habits about the fixed order in which fingers are raised determine which configurations become canonical and which non-canonical. Although both types of configuration carry magnitude information, {{it has been shown that}} the canonical ones are recognized faster and directly linked to number semantics. Here we tested whether this difference is a consequence of differences in the qualitative way of processing the two types of configurations. When participants named Arabic digits (Experiment 1) or verbal numerals (Experiment 2) primed by canonical and non-canonical finger configurations, qualitatively different priming patterns were observed for the two types of configurations. Canonical configurations activated a place <b>coding</b> <b>representation,</b> with priming spreading to close smaller and larger magnitudes as a function of the prime-target distance. Conversely, non-canonical configurations activated a summation <b>coding</b> <b>representation</b> priming smaller and equal magnitudes independently of the prime-target distance, and larger targets depending on this distance...|$|R
40|$|Real estate {{markets in}} Chinese cities are in transition. Advertising for new {{developments}} in these markets often reflects changing city aspirations and branding rather than environmental and social experience. This paper investigates real estate marketing as a site of potential ethical transformation of values related to new urban development. It uses Kenneth Burke’s rhetorical analysis as an approach to <b>coding</b> real estate <b>representations</b> from in-flight magazine advertisements {{as a means of}} capturing environmental and social viewpoints in China during 2008 - 2009. Both Chinese and foreign participants <b>coded</b> <b>representations</b> into four <b>code</b> modalities. These were based on anthropocentric - non-anthropocentric environmental orientations and nationalistic - universal social orientations. The results suggested that {{new developments in}} China {{are more likely to be}} understood as based on environmental resource use for continued national economic expansion rather than for a more sustainable world. Emerging patterns in <b>coded</b> <b>representations</b> have opened up the possibility of greater social choices that were however difficult to unambiguously decode from Chinese real estate advertising. From this it is concluded that it may take some time before real estate demand shifts in response to representations of Chinese eco-cities being promoted by Chinese policy makers in the 2000 s...|$|R
40|$|A {{method of}} {{representing}} an object appearing in a still or video image, by processing signals {{corresponding to the}} image, comprises deriving a plurality of sets of co-ordinate values representing {{the shape of the}} object and quantising the co-ordinate values to derive a <b>coded</b> <b>representation</b> of the shape, and further comprises quantising a first co-ordinate value over a first quantisation range and quantising a smaller co-ordinate value over a smaller range...|$|R
