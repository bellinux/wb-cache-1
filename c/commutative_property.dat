78|53|Public
25|$|Robertson wrote three {{important}} {{papers on the}} mathematics of quantum mechanics. In the first, written in German, {{he looked at the}} coordinate system required for the Schrödinger equation to be solvable. The second examined the relationship between the <b>commutative</b> <b>property</b> and Heisenberg's uncertainty principle. The third extended the second to the case of m observables. In 1931 he published a translation of Weyl's The Theory of Groups and Quantum Mechanics.|$|E
25|$|Multiplication {{can also}} be visualized as {{counting}} objects arranged in a rectangle (for whole numbers) or as finding the area of a rectangle whose sides have given lengths. The area of a rectangle {{does not depend on}} which side is measured first, which illustrates the <b>commutative</b> <b>property.</b> The product of two measurements is a new type of measurement, for instance multiplying the lengths of the two sides of a rectangle gives its area, this is the subject of dimensional analysis.|$|E
500|$|Records of the {{implicit}} {{use of the}} <b>commutative</b> <b>property</b> go back to ancient times. [...] The Egyptians used the <b>commutative</b> <b>property</b> of multiplication to simplify computing products. Euclid {{is known to have}} assumed the <b>commutative</b> <b>property</b> of multiplication in his book Elements. [...] Formal uses of the <b>commutative</b> <b>property</b> arose in the late 18th and early 19th centuries, when mathematicians began to work on a theory of functions. [...] Today the <b>commutative</b> <b>property</b> is a well known and basic property used in most branches of mathematics.|$|E
5|$|This {{recursive}} {{formulation of}} addition {{was developed by}} Dedekind as early as 1854, and he would expand upon it in the following decades. He proved the associative and <b>commutative</b> <b>properties,</b> among others, through mathematical induction.|$|R
40|$|The {{integrable}} mappings formalism is generalized on non [...] commutative case. Arising hierarchies of integrable {{systems are}} invariant {{with respect to}} this "quantum" discrete transformations without any assumption about <b>commutative</b> <b>properties</b> of unknown operators they include. Partially, in the scope of this construction are the equations for Heisenberg operators of quantum (integrable) systems. Comment: 9 page...|$|R
5000|$|A {{rational}} expression {{is an expression}} that may be rewritten to a rational fraction by using {{the properties of the}} arithmetic operations (<b>commutative</b> <b>properties</b> and associative properties of addition and multiplication, distributive property and rules for the operations on the fractions). In other words, a {{rational expression}} is an expression which may be constructed from the variables and the constants by using only the four operations of arithmetic. Thus, [...] is a rational expression, whereas [...] is not.|$|R
500|$|The <b>{{commutative}}</b> <b>property</b> (or commutative law) is {{a property}} generally associated with binary operations and functions. [...] If the <b>commutative</b> <b>property</b> holds {{for a pair}} of elements under a certain binary operation then the two elements are said to commute under that operation.|$|E
500|$|The {{associative}} property {{is closely related}} to the <b>commutative</b> <b>property.</b> [...] The {{associative property}} of an expression containing two or more occurrences of the same operator states that the order operations are performed in does not affect the final result, as long as the order of terms doesn't change. In contrast, the <b>commutative</b> <b>property</b> states that the order of the terms does not affect the final result.|$|E
500|$|Some authors {{call the}} first addend the augend. In fact, during the Renaissance, many authors did not {{consider}} the first addend an [...] "addend" [...] at all. Today, due to the <b>commutative</b> <b>property</b> of addition, [...] "augend" [...] is rarely used, and both terms are generally called addends.|$|E
40|$|Permutable Chebyshev polynomials (T polynomials) defined {{over the}} field of real numbers are {{suitable}} for creating a Diffie-Hellman-like key exchange algorithm that is able to withstand attacks using quantum computers. The algorithm {{takes advantage of the}} <b>commutative</b> <b>properties</b> of Chebyshev polynomials of the first kind. We show how T polynomial values can be computed faster and how the underlying principle can further be used to create public key encryption methods, as well as certificate-like authentication-, and signature schemes. Comment: Algorithm has been broke...|$|R
40|$|A «brush-commutator» {{contact is}} one of the factor that affects <b>commutative</b> <b>properties</b> and commutation. The paper {{presents}} a new method for estimation of a commutation. It is based not on the researchers’ experience but on the corresponding indicated values of a computer optoelectronic sparking analyzer. This analyzer permits to identify specific commutator sectors and its circuits at an inequality angle of every individual sector, rotation rate, time selection of measuring cycle, sparking estimation of separate commutator sectors and every sector of subsequent measuring cycle.   </p...|$|R
40|$|The {{theory of}} {{mathematical}} analysis over split quaternions is formulated in a closest possible analogy {{to the usual}} theory of analytic functions of a complex variable. After reviewing split quaternion algebra via an isomorphic 4 £ 4 matrix representation, a different definition is given to partial derivatives involving split quaternions. This {{takes care of the}} ambiguity involved in the no <b>commutative</b> <b>properties</b> of split quaternions. A closely analogous condition for analyticity of functions of a split quaternion variable is found. The analogy with complex variables is illustrated for both the derivative. 128 - 13...|$|R
500|$|In {{group and}} set theory, many {{algebraic}} structures are called commutative when certain operands satisfy the <b>commutative</b> <b>property.</b> [...] In higher branches of mathematics, such as analysis and linear algebra the commutativity of well-known operations (such as addition and multiplication on real and complex numbers) {{is often used}} (or implicitly assumed) in proofs.|$|E
500|$|The first {{recorded}} {{use of the}} term commutative was in a memoir by François Servois in 1814, which used the word commutatives when describing functions that have what is now called the <b>commutative</b> <b>property.</b> [...] The word is a combination of the French word commuter meaning [...] "to substitute or switch" [...] and the suffix -ative meaning [...] "tending to" [...] so the word literally means [...] "tending to substitute or switch." [...] The term then appeared in English in 1838 in Duncan Farquharson Gregory's article entitled [...] "On the real nature of symbolical algebra" [...] published in 1840 in the Transactions of the Royal Society of Edinburgh.|$|E
500|$|Arthur Cayley {{published}} a treatise on geometric transformations using matrices {{that were not}} rotated versions of the coefficients being investigated as had previously been done. Instead he defined operations such as addition, subtraction, multiplication, and division as transformations of those matrices and showed the associative and distributive properties held true. Cayley investigated and demonstrated the non-commutative property of matrix multiplication {{as well as the}} <b>commutative</b> <b>property</b> of matrix addition. [...] Early matrix theory had limited the use of arrays almost exclusively to determinants and Arthur Cayley's abstract matrix operations were revolutionary. He was instrumental in proposing a matrix concept independent of equation systems. In 1858 Cayley published his A memoir on the theory of matrices in which he proposed and demonstrated the Cayley-Hamilton theorem.|$|E
40|$|We {{show that}} in a weak <b>commutative</b> inverse <b>property</b> loop, such as a Bruck loop, if α is a right [left] pseudoautomorphism with {{companion}} c, then c [c^ 2] must lie in the left nucleus. In particular, for any such loop with trivial left nucleus, every right pseudoautomorphism is an automorphism and if the squaring map is a permutation, then every left pseudoautomorphism is an automorphism as well. We also show that every pseudoautomorphism of a <b>commutative</b> inverse <b>property</b> loop is an automorphism, generalizing a well-known result of Bruck. Comment: to appear in Comment. Math. Univ. Caroli...|$|R
40|$|We {{investigate}} deformed superconformal symmetries on non(anti) commutative (super) spaces {{from the}} point of view of the Drinfel’d twisted symmetries. We classify all possible twist elements derived from an abelian subsector of the superconformal algebra. The symmetry breaking caused by the non(anti) commutativity of the (super) spaces is naturally interpreted as the modification of their coproduct emerging from the corresponding twist element. The remaining unbroken symmetries are determined by the <b>commutative</b> <b>properties</b> of those symmetry generators possessing the twist element. We also comment on non-canonically deformed non(anti) commutative superspaces, particularly those derived from the superconformal twist element FSS...|$|R
40|$|ISBN : 978 - 3 - 642 - 22220 - 7 International audienceThis article {{presents}} {{an extension of}} Minimalist Categorial Gram- mars (MCG) to encode Chomsky's phases. These grammars are based on Par- tially Commutative Logic (PCL) and encode properties of Minimalist Grammars (MG) of Stabler. The first implementation of MCG were using both non- <b>commutative</b> <b>properties</b> (to respect the linear word order in an utterance) and commutative ones (to model features of different constituents). Here, we pro- pose to adding Chomsky's phases with the non-commutative tensor product of the logic. Then we could give account of the PIC just by using logical prop- erties of the framework...|$|R
2500|$|... (<b>commutative</b> <b>property</b> of addition—the {{order of}} the summands can be changed) ...|$|E
2500|$|Symbolically, {{addition}} {{is represented}} by the [...] "plus sign": +. So the statement [...] "three plus five equals eight" [...] can be written symbolically as [...] The order in which two numbers are added does not matter, so [...] This is the <b>commutative</b> <b>property</b> of addition.|$|E
2500|$|In some countries, and in more {{advanced}} arithmetic, other multiplication signs are used, e.g[...] In some situations, especially in algebra, where numbers can be symbolized with letters, the multiplication symbol may be omitted; e.g. xy means [...] The {{order in which}} two numbers are multiplied does not matter, so that, for example, three times four equals four times three. [...] This is the <b>commutative</b> <b>property</b> of multiplication.|$|E
40|$|International audienceEqual {{groups and}} {{rectangular}} arrays {{are examples of}} multiplicative situations that have different qualities related to students' understanding of the distributive and the <b>commutative</b> <b>properties.</b> These properties are, inter alia, important for flexible mental calculations. In order to design effective instruction we need to investigate how students construct understanding of these properties. In this study sixth grade students were invited to reason with a peer about calculation strategies for multiplication {{with the goal of}} explaining and justifying distributivity. Their discussions demonstrate that the representation of multiplication as equal groups helps them to explain and justify distributivity. At the same time this representation hinders their efficient use of commutativity...|$|R
40|$|This article {{presents}} {{an extension of}} Minimalist Categorial Gram- mars (MCG) to encode Chomsky's phases. These grammars are based on Par- tially Commutative Logic (PCL) and encode properties of Minimalist Grammars (MG) of Stabler. The first implementation of MCG were using both non- <b>commutative</b> <b>properties</b> (to respect the linear word order in an utterance) and commutative ones (to model features of different constituents). Here, we pro- pose to adding Chomsky's phases with the non-commutative tensor product of the logic. Then we could give account of the PIC just by using logical prop- erties of the framework. Comment: Logical Aspect of Computational Linguistic, Montpellier : France (2011...|$|R
40|$|Abstract. In this paper, {{we present}} a general {{revision}} model on epistemic states based on plausibility measures proposed by Fried-man and Halpern. We propose our revision strategy and give some desirable properties, e. g., the reversible and <b>commutative</b> <b>properties.</b> Moreover, we develop a notion called plausibility kinematics and show that our revision strategy follows plausibility kinematics. Fur-thermore, we prove that the revision following plausibility kinemat-ics satisfies the principle of minimal change based on some distance measures. Finally, we discuss a revision operator defined for plausi-bility functions and its relationship with iterated belief revision pro-posed by Darwiche and Pearl. We show that the revision operator satisfies all the DP postulates when it is Max-Additive. ...|$|R
5000|$|Records of the {{implicit}} {{use of the}} <b>commutative</b> <b>property</b> go back to ancient times. The Egyptians used the <b>commutative</b> <b>property</b> of multiplication to simplify computing products. Euclid {{is known to have}} assumed the <b>commutative</b> <b>property</b> of multiplication in his book Elements. [...] Formal uses of the <b>commutative</b> <b>property</b> arose in the late 18th and early 19th centuries, when mathematicians began to work on a theory of functions. Today the <b>commutative</b> <b>property</b> is a well known and basic property used in most branches of mathematics.|$|E
50|$|The <b>{{commutative}}</b> <b>property</b> (or commutative law) is {{a property}} generally associated with binary operations and functions. If the <b>commutative</b> <b>property</b> holds {{for a pair}} of elements under a certain binary operation then the two elements are said to commute under that operation.|$|E
5000|$|... which, by the <b>commutative</b> <b>property</b> of convolution, is {{equivalent}} to ...|$|E
2500|$|This {{is another}} version of Euler's formula, but with a general bivector in three {{dimensions}}. Unlike in two dimensions bivectors are not <b>commutative</b> so <b>properties</b> that depend on commutativity do not apply in three dimensions. For example, in general [...] in three (or more) dimensions.|$|R
40|$|Abstract — Rough {{set theory}} was {{introduced}} by Pawlak [1, 2] mainly to handle uncertainty and impreciseness. The rough set theory got extended to multigranular based rough sets by Qian, Y. H and Liang, J. Y [3, 4]. In multi-granular rough sets, the granules were represented through multi-equivalence relations. Since it uses multi-equivalence relations it was highly enriched to handle practical applications. In general, the algebraic property used to deal with elements and studies the relationship among the elements. In this paper, the database based validation for algebraic property of multigranular rough sets particularly associative, <b>commutative</b> <b>properties</b> are provided. Also this paper contains the database based validation for {{the conditions under which}} the two types of multigranulations reduced to single granulation. Index Terms — algebraic property, multi-granular rough sets, equivalence relations, database I...|$|R
50|$|Usually, but not always, an {{implementation}} appends n 0-bits (n {{being the}} size of the CRC) to the bitstream to be checked before the polynomial division occurs. Such appending is explicitly demonstrated in the Computation of CRC article. This has the convenience that the remainder of the original bitstream with the check value appended is exactly zero, so the CRC can be checked simply by performing the polynomial division on the received bitstream and comparing the remainder with zero. Due to the associative and <b>commutative</b> <b>properties</b> of the exclusive-or operation, practical table driven implementations can obtain a result numerically equivalent to zero-appending without explicitly appending any zeroes, by using an equivalent, faster algorithm that combines the message bitstream with the stream being shifted out of the CRC register.|$|R
5000|$|... {{which is}} {{equivalent}} to the following by the <b>commutative</b> <b>property</b> of convolution ...|$|E
5000|$|... {{which is}} 0, and the <b>commutative</b> <b>property</b> would lead us also to define ...|$|E
5000|$|Two {{matrices}} p and q {{are said}} to have the <b>commutative</b> <b>property</b> whenever ...|$|E
3000|$|... (i) X is an Abelian variety if {{and only}} it is a {{projective}} variety {{and there is}} a morphism X × X → X, (x,y) [...] (x · y^- 1), which makes X a group (see [303], it follows indeed that the group is <b>commutative).</b> This <b>property</b> holds for X if and only if it holds for X^ϕ.|$|R
40|$|International audienceIn formal approaches, {{messages}} {{sent over}} a network are usually modeled by terms {{together with an}} equational theory, axiomatizing {{the properties of the}} cryptographic functions (encryption, exclusive or,...). The analysis of cryptographic protocols requires a precise understanding of the attacker knowledge. Two standard notions are usually used: deducibility and indistinguishability. Only few results have been obtained (in an ad-hoc way) for equational theories with associative and <b>commutative</b> <b>properties,</b> {{especially in the case of}} static equivalence. The main contribution of this paper is to propose a general setting for solving deducibility and indistinguishability for an important class (called monoidal) of these theories. Our setting relies on the correspondence between a monoidal theory E and a semiring SE which allows us to give an algebraic characterization of the deducibility and indistinguishability problems. As a consequence we recover easily existing decidability results and obtain several new ones...|$|R
40|$|In this paper, {{we present}} {{a version of the}} linear hash {{structure}} algorithm to increase concurrency using multi-level transaction model. We exploit the semantics of the linear hash operations at each level of nesting to allow more concurrency. We consider locks at both vertex (page) and key level (tuple) to further increase concurrency. As undo based recovery is not possible with multi-level transactions and therefore, we have used compensating based undo to achieve atomicity. 1. Introduction Weikum presented a multi-level transaction model [1, 18], which has received considerable attention for designing high performance transaction processing and concurrency control algorithms [2, 15, 16,]. The multi-level transaction model takes into account the <b>commutative</b> <b>properties</b> of the semantics of operations at each level of data abstraction to achieve a high degree of concurrency. If two operations at the same high level commute then their conflicting descendants at the same lower level will [...] ...|$|R
