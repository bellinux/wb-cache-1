602|1524|Public
25|$|SA {{errors are}} {{actually}} pseudorandom, {{generated by a}} <b>cryptographic</b> <b>algorithm</b> from a classified seed key available only to authorized users (the U.S. military, its allies {{and a few other}} users, mostly government) with a special military GPS receiver. Mere possession of the receiver is insufficient; it still needs the tightly controlled daily key.|$|E
25|$|As well {{as being}} aware of {{cryptographic}} history, <b>cryptographic</b> <b>algorithm</b> and system designers must also sensibly consider probable future developments while working on their designs. For instance, continuous improvements in computer processing power have increased the scope of brute-force attacks, so when specifying key lengths, the required key lengths are similarly advancing. The potential effects of quantum computing are already being considered by some cryptographic system designers developing post-quantum cryptography; the announced imminence of small implementations of these machines may be making the need for this preemptive caution rather more than merely speculative.|$|E
25|$|In Simple Electromagnetic Analysis (SEMA) attacks, the {{attacker}} deduces the key directly by observing the trace. It is very effective against asymmetric cryptography implementations. Typically, {{only a few}} traces are needed, though {{the attacker}} {{needs to have a}} strong understanding of the cryptographic device and of the implementation of the <b>cryptographic</b> <b>algorithm.</b> An implementation vulnerable to SEMA attacks will perform a different operation depending on whether the bit of the key is 0 or 1, which will use different amounts of power and/or different chip components. This method is prevalent in many different types of side-channel attacks, in particular, power analysis attacks. Thus, the attacker can observe the entire computation of encryption and can deduce the key.|$|E
40|$|Specifically {{designed}} and developed <b>cryptographic</b> <b>algorithms,</b> which {{are suitable for}} implementation in resource constrained devices such as RFID systems, smart cards and wireless sensor networks are called light weight <b>cryptographic</b> <b>algorithms.</b> In this paper a survey is done on the selected light weight <b>cryptographic</b> <b>algorithms.</b> The light weight <b>cryptographic</b> <b>algorithms</b> are of two types, block ciphers and stream ciphers. Algorithms under both these categories are presented in this paper. Security features and performances of hardware implementations of these algorithms are also analyzed...|$|R
40|$|In {{a network}} {{communication}} process, <b>cryptographic</b> <b>algorithms</b> play important role for secure process. This paper presents {{a new system}} architecture named "DCCS. " This system can handle flexible operations of both <b>cryptographic</b> <b>algorithms</b> and the keys. For experimental evaluation, two representative <b>cryptographic</b> <b>algorithms</b> DES and Triple-DES are designed and implemented into an FPGA chip on the SEBSW- 1. Then the developed board is confirmed to change its <b>cryptographic</b> <b>algorithms</b> dynamically. Also its throughput confirmed {{the ability of the}} real-time network use of the designed system...|$|R
40|$|Bachelor's thesis {{deals with}} {{analysis}} of the various <b>cryptographic</b> <b>algorithms</b> that are used for securing communications. The first part is devoted to symmetrical <b>cryptographic</b> <b>algorithms,</b> asymmetric <b>cryptographic</b> <b>algorithms</b> and hashing functions. The second part deals with the security classification and attacks {{that are used to}} attack <b>cryptographic</b> <b>algorithms</b> and hash function. The third part deals with the selected testing algorithm RC 4 and MD 5 hashed function for using CrypTool. The final section provides an evaluation and test results of algorithm RC 4 and MD 5 hashing function...|$|R
25|$|However, other {{cryptographic}} algorithms do {{not appear}} to be broken by those algorithms. Some public-key algorithms are based on problems other than the integer factorization and discrete logarithm problems to which Shor's algorithm applies, like the McEliece cryptosystem based on a problem in coding theory. Lattice-based cryptosystems are also not known to be broken by quantum computers, and finding a polynomial time algorithm for solving the dihedral hidden subgroup problem, which would break many lattice based cryptosystems, is a well-studied open problem. It has been proven that applying Grover's algorithm to break a symmetric (secret key) algorithm by brute force requires time equal to roughly 2n/2 invocations of the underlying <b>cryptographic</b> <b>algorithm,</b> compared with roughly 2n in the classical case, meaning that symmetric key lengths are effectively halved: AES-256 would have the same security against an attack using Grover's algorithm that AES-128 has against classical brute-force search (see Key size). Quantum cryptography could potentially fulfill some of the functions of public key cryptography.|$|E
2500|$|Cryptographic hash {{functions}} are a third type of <b>cryptographic</b> <b>algorithm.</b> They take {{a message of}} any length as input, and output a short, fixed length hash, {{which can be used}} in (for example) a digital signature. For good hash functions, an attacker cannot find two messages that produce the same hash. MD4 is a long-used hash function that is now broken; MD5, a strengthened variant of MD4, is also widely used but broken in practice. The US National Security Agency developed the Secure Hash Algorithm series of MD5-like hash functions: SHA-0 was a flawed algorithm that the agency withdrew; SHA-1 is widely deployed and more secure than MD5, but cryptanalysts have identified attacks against it; the SHA-2 family improves on SHA-1, but it isn't yet widely deployed; and the US standards authority thought it [...] "prudent" [...] from a security perspective to develop a new standard to [...] "significantly improve the robustness of NIST's overall hash algorithm toolkit." [...] Thus, a hash function design competition was meant to select a new U.S. national standard, to be called SHA-3, by 2012. The competition ended on October 2, 2012 when the NIST announced that Keccak would be the new SHA-3 hash algorithm. Unlike block and stream ciphers that are invertible, cryptographic hash functions produce a hashed output that cannot be used to retrieve the original input data. Cryptographic hash {{functions are}} used to verify the authenticity of data retrieved from an untrusted source or to add a layer of security.|$|E
5000|$|RFC 7321: <b>Cryptographic</b> <b>Algorithm</b> Implementation Requirements and Usage Guidance for Encapsulating Security Payload (ESP) and Authentication Header (AH) ...|$|E
40|$|The goal of {{the paper}} is to discuss some {{possibilities}} of effective implementing <b>cryptographic</b> <b>algorithms</b> in software development. There are concerned two aspects of the term “effectiveness”: efficacy (i. e., meeting a goal of using <b>cryptographic</b> <b>algorithms</b> – providing a protection of information) and efficiency (i. e., implementing <b>cryptographic</b> <b>algorithms</b> in an economical way; as well as implementing <b>cryptographic</b> <b>algorithms</b> {{to the effect that}} they execute in an economical way). In the paper, there are defined and classified errors which are the causes of possible vulnerabilities in implementation of <b>cryptographic</b> <b>algorithms</b> on a computer. There are given general recommendations, how to escape from these vulnerabilities. There is also considered implementation of <b>cryptographic</b> <b>algorithms</b> in software development by using software libraries and frameworks. Several widespread software frameworks which provide cryptographic functionality are compared with each other by the speed of execution of algorithms. Finally, there are discussed some possibilities of maximising the speed of execution of <b>cryptographic</b> <b>algorithms,</b> emphasising the importance of parallelisation of algorithms. For block ciphers, possible parallelisation is discussed especially deeply, referencing the results obtained in practical experiments that demonstrate and estimate the benefits of parallelising block ciphers...|$|R
50|$|In {{addition}} to mathematical analysis of <b>cryptographic</b> <b>algorithms,</b> cryptanalysis includes {{the study of}} side-channel attacks that do not target weaknesses in the <b>cryptographic</b> <b>algorithms</b> themselves, but instead exploit weaknesses in their implementation.|$|R
40|$|This thesis {{deals with}} the {{measurement}} of power quality. The evaluating quality parameters, data collection systems and transfer technologies will be discussed. The various type of <b>cryptographic</b> <b>algorithms</b> are also described. <b>Cryptographic</b> <b>algorithms,</b> which ensure to secure data communications from remote collection points of measurement, will be realized. These <b>cryptographic</b> <b>algorithms</b> will be realized in MATLAB and C/C++. The last part is focus on designed and implemented a simulation model to telemetry the power quality...|$|R
5000|$|RFC 4305: <b>Cryptographic</b> <b>Algorithm</b> Implementation Requirements for Encapsulating Security Payload (ESP) and Authentication Header (AH) (obsoleted by RFC 4835) ...|$|E
5000|$|Security binding assertions control basic {{security}} safeguards like transport and message level security, <b>cryptographic</b> <b>algorithm</b> suite and required timestamps.|$|E
5000|$|Asynchronous {{password}} token. A {{one-time password}} is generated {{without the use}} of a clock, either from a one-time pad or <b>cryptographic</b> <b>algorithm.</b>|$|E
40|$|The goal of {{the paper}} is to analyse common {{problems}} of implementation of <b>cryptographic</b> <b>algorithms,</b> {{as well as to}} discuss some possibilities of implementing <b>cryptographic</b> <b>algorithms</b> in software development. In the paper, there are defined possible vulnerabilities in an implementation of <b>cryptographic</b> <b>algorithms</b> on a computer, and errors which are the causes of these vulnerabilities are classified. There are given general recommendations, how to escape from possible vulnerabilities. There is also considered implementation of cryptographic methods in software development by using software libraries and frameworks. Several widespread software frameworks which provide cryptographic functionality are compared with each other by several criteria (including the speed of execution of <b>cryptographic</b> <b>algorithms).</b> The goal of this comparison is to construct some guidelines which will help select a feasible solution for implementing a cryptographic functionality in software. Finally, there are discussed some general possibilities of maximising the speed of execution of <b>cryptographic</b> <b>algorithms...</b>|$|R
40|$|Providing formal {{assurance}} of correctness {{is a key}} issue for <b>cryptographic</b> <b>algorithms.</b> Yet, automated reasoning tools have only been used for the verification of security protocols, and almost never for the verification and cryptanalysis of the <b>cryptographic</b> <b>algorithms</b> on which those protocols rely. We clai...|$|R
40|$|Wireless sensor {{networks}} {{consist of}} many inexpensive wireless nodes, each having sensing capability with some computational and communication power. Asymmetric <b>cryptographic</b> <b>algorithms</b> are {{not suitable for}} providing security on wireless sensor networks due to limited computation, power, and storage resources available on sensor nodes. Therefore, the energy-efficient security protocol proposed in this paper uses symmetric <b>cryptographic</b> <b>algorithms</b> to support security. To mitigate the drawbacks of symmetric <b>cryptographic</b> <b>algorithms,</b> the session key is changed dynamically, in addition to employing code-hopping technique in non-blocking OVSF codes...|$|R
5000|$|In {{cryptography}} research, it {{is desirable}} to prove the equivalence of a <b>cryptographic</b> <b>algorithm</b> and a known hard mathematical problem. These proofs are often called [...] "security reductions", and are used to demonstrate the difficulty of cracking the encryption algorithm. In other words, {{the security of a}} given <b>cryptographic</b> <b>algorithm</b> is reduced to the security of a known hard problem. Researchers are actively looking for security reductions in the prospects for post quantum cryptography. Current results are given here: ...|$|E
50|$|In cryptography, key size or {{key length}} {{is the number}} of bits in a key used by a <b>cryptographic</b> <b>algorithm</b> (such as a cipher).|$|E
5000|$|... 1977: Data Encryption StandardIBM-developed Data Encryption Standard (DES), a <b>cryptographic</b> <b>algorithm,</b> {{is adopted}} by the U.S. National Bureau of Standards as a {{national}} standard.|$|E
5000|$|Hardware {{architectures}} for public-key and secret-key <b>cryptographic</b> <b>algorithms</b> ...|$|R
40|$|<b>Cryptographic</b> <b>algorithms</b> are {{constantly}} evolving to meet security needs, and modular arithmetic {{is an integral}} part of these algorithms, especially in the case of public-key cryptosystems. To achieve optimal system performance while maintaining physical security, it is desirable to implement <b>cryptographic</b> <b>algorithms</b> in hardware. However, many public-key <b>cryptographic</b> <b>algorithms</b> require the implementation of modular arithmetic, specifically modular multiplication, for operands of 1024 bits in length. Additionally, algorithm agility is required to support algorithm independent protocols, a feature of most modern security protocols. Reprogrammability, particularly in-system reprogrammability, is critical in enabling the switching between <b>cryptographic</b> <b>algorithms</b> required for algorithm independent protocols. Field Programmable Gate Arrays (FPGAs) are a viable option for achieving this goal. Ideally, the targeted FPGA will have been designed with the architectural requirements for wide-oper [...] ...|$|R
5000|$|New and {{emerging}} <b>cryptographic</b> <b>algorithms</b> and protocols targeting embedded devices ...|$|R
5000|$|Synchronous dynamic {{password}} token. A timer {{is used to}} rotate through various combinations produced by a <b>cryptographic</b> <b>algorithm.</b> The token and the authentication server must have synchronized clocks.|$|E
5000|$|Key {{exchange}} (also {{known as}} [...] "key establishment") is any method in cryptography by which cryptographic keys are exchanged between two parties, allowing {{use of a}} <b>cryptographic</b> <b>algorithm.</b>|$|E
50|$|According {{to budget}} item {{justification}} document for FY 2004-2005, this <b>cryptographic</b> <b>algorithm</b> {{is used for}} Global Positioning Systems (GPS), Space-Based Infrared Systems (SBIRS), MILSATCOM, and other Special Project Systems.|$|E
40|$|Modern <b>cryptographic</b> <b>algorithms,</b> such as DES, IDEA, etc., {{are very}} complex and {{therefore}} difficult to learn. Textbooks {{explain in detail}} how these algorithms work, but they usually do not explain why these algorithms were designed as they were. In this paper, we explain why, and thus, hopefully, make <b>cryptographic</b> <b>algorithms</b> easier to learn...|$|R
40|$|<b>Cryptographic</b> <b>algorithms</b> {{are widely}} used in {{embedded}} systems. Applications of <b>cryptographic</b> <b>algorithms</b> include credentials establishment (e. g., authentication), securing contents (e. g., encryption/decryption of communication data or rights-managed objects), IP protection, and tamper-resistance checking. Resource constrained embedded systems can benefit greatly from employing <b>cryptographic</b> <b>algorithms</b> that are tuned to consume as little system resources as possible, {{while at the same}} time providing reasonable performance. In this paper, we study some of the most commonly used <b>cryptographic</b> <b>algorithms.</b> We analyze their performance on an embedded system targeting the Blackfin DSP. We attempt to reduce encryption/decryption time, as well as reduce the energy consumed, by exploiting the architectural features available on the Blackfin. Our results show that by applying a set of optimization steps we can obtain 4 x improvement in execution time and as much as 90 % reduction in energy consumption. ...|$|R
25|$|Additionally, some <b>cryptographic</b> <b>algorithms</b> have export {{restrictions}} (see export of cryptography).|$|R
50|$|The <b>Cryptographic</b> <b>Algorithm</b> Validation Program (CAVP), which {{provides}} guidelines for validation testing for FIPS approved and NIST recommended cryptographic algorithms and components of algorithms, {{is a prerequisite}} for CMVP.|$|E
5000|$|In cryptography, an adversary's {{advantage}} {{is a measure}} of how successfully it can attack a <b>cryptographic</b> <b>algorithm,</b> by distinguishing it from an idealized version of that type of algorithm. Note that in this context, the [...] "adversary" [...] is itself an algorithm and not a person. A <b>cryptographic</b> <b>algorithm</b> is considered secure if no adversary has a non-negligible advantage, subject to specified bounds on the adversary's computational resources (see concrete security). [...] "Negligible" [...] usually means [...] "within O(2−p)" [...] where p is a security parameter associated with the algorithm. For example, p might be the number of bits in a block cipher's key.|$|E
5000|$|The Rijndael S-box is {{a square}} matrix (square array of numbers) {{used in the}} Rijndael cipher, which the Advanced Encryption Standard (AES) <b>cryptographic</b> <b>algorithm</b> was based on. [...] The S-box (substitution box) serves as a lookup table.|$|E
50|$|Schneier {{has been}} {{involved}} in the creation of many <b>cryptographic</b> <b>algorithms.</b>|$|R
5000|$|... #Caption: Yubico USB devices {{implement}} OpenPGP {{card and}} HOTP <b>cryptographic</b> <b>algorithms.</b>|$|R
5000|$|Encryption/Decryption, the {{protection}} of information in the payload using <b>cryptographic</b> <b>algorithms</b> ...|$|R
