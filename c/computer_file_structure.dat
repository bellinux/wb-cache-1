1|9581|Public
40|$|This paper {{describes}} {{the design of}} a functional assessment system, a component of a management information system (MIS) that supports a comprehensive rehabilitation facility. Products of the subsystem document the functional status of rehabilitation clients through process evaluation reporting and outcomes reporting. The {{purpose of this paper is}} to describe the design of this MIS component. The environment supported, the integration requirements and the needed development approach is unique, requiring significant input from health care professionals, medical informatics specialists, statisticians and program evaluators. Strategies for the implementation of the functional assessment system are the major results reported in this paper. They are most useful to the systems designer or management engineer in a human service delivery setting. MIS plan development, <b>computer</b> <b>file</b> <b>structure</b> and access methods, and approaches to scheduling applications is described. Finally, the development of functional status measures is discussed. Application of the methodologies described will facilitate similar efforts towards systems development in other human service delivery settings...|$|E
5000|$|A {{text file}} (sometimes spelled [...] "textfile": an old {{alternative}} name is [...] "flatfile") {{is a kind}} of <b>computer</b> <b>file</b> that is <b>structured</b> as a sequence of lines of electronic text. A text file exists within a <b>computer</b> <b>file</b> system. The end of a text file is often denoted by placing one or more special characters, known as an end-of-file marker, after the last line in a text file. Such markers were required under the CP/M and MS-DOS operating systems. On modern operating systems such as Windows and Unix-like systems, text files do not contain any special EOF character.|$|R
2500|$|A {{text file}} (sometimes spelled [...] "textfile"; an old {{alternative}} name is [...] "flatfile") {{is a kind}} of <b>computer</b> <b>file</b> that is <b>structured</b> as a sequence of lines of electronic text. [...] A text file exists stored as data within a <b>computer</b> <b>file</b> system. [...] The end of a text file is often denoted by placing one or more special characters, known as an end-of-file marker, after the last line in a text file. Such markers were required under the CP/M and MS-DOS operating systems. On modern operating systems such as Windows and Unix-like systems, text files do not contain any special EOF character.|$|R
40|$|This article {{describes}} results from two empirical studies of two visualization tools for depicting hierarchies, in particular, <b>computer</b> <b>file</b> and directory <b>structures.</b> The two tools examined implement space-filling methodologies, one rectangular, the Treemap method, and one circular, the Sunburst method. Participants performed typical file/directory search and analysis tasks using the two tools. In general, performance trends favored the Sunburst tool {{with respect to}} correct task performance, particularly on initial use. Performance with Treemap tended to improve over time and use, suggesting a greater learning cost that was partially recouped over time. Each tool afforded somewhat different search strategies, which also appeared to in#uence performance. Finally, participants strongly preferred the Sunburst tool, citing better ability to convey structure and hierarch...|$|R
40|$|One of {{the main}} tasks in {{information}} visualisation research is creating visual tools to facilitate human understanding of large and complex information spaces. Hierarchies, being a good mechanism for organising such information, are ubiquitous. Although much research effort has been spent on finding useful representations for hierarchies, visualising large hierarchies is still a difficult topic. One of the difficulties is {{how to handle the}} ever increasing scale of hierarchies. Another is how to enable the user to focus on multiple selections of interest while maintaining context. This paper describes a hierarchy visualisa-tion technique called FlexTree to address these problems. It contains some important features that have not been exploited so far. A profile or contour unique to the hierarchy being visualised can be viewed in a bar chart layout. A normalised view of a common attribute of all nodes can be selected by the user. Multiple foci are consistently accessible within a global context through interaction. Furthermore it can handle a large hierarchy that contains 10, 000 nodes in a PC environment. This technique has been applied to visualise <b>computer</b> <b>file</b> system <b>structures</b> and decision trees from data mining results. The results from informal user evaluations against these two applications are also presented. User feedback suggests that FlexTree is suitable for visualising large decision trees...|$|R
40|$|A {{variety of}} {{information}} visualization tools {{have been developed}} recently, but relatively little effort {{has been made to}} evaluate the effectiveness and utility of the tools. This article describes results from two empirical studies of two visualization tools for depicting hierarchies, in particular, <b>computer</b> <b>file</b> and directory <b>structures.</b> The two systems examined implement space-filling methodologies, one rectangular, the Treemap method, and one circular, the Sunburst method. Participants performed typical file/directory search and analysis tasks using the two tools. In general, performance trends favored the Sunburst tool with respect to correct task performance, particularly on initial use. Performance with Treemap tended to improve over time and use, suggesting a greater learning cost that was partially recouped over time. Each tool afforded somewhat different search strategies, which also appeared to influence performance. Finally, participants strongly preferred the Sunburst tool, citing better ability to convey structure and hierarchy...|$|R
5000|$|A {{document}} is a written, drawn, presented, or memorialized representation of thought. The word originates from the Latin documentum, which denotes a [...] "teaching" [...] or [...] "lesson": the verb doceō denotes [...] "to teach". In {{the past the}} word was usually used to denote a written proof useful as evidence of a truth or fact. In the computer age, [...] "document" [...] usually denotes a primarily textual <b>computer</b> <b>file,</b> including its <b>structure</b> and format, e. g. fonts, colors, and images. Contemporarily, [...] "document" [...] is not defined by its transmission medium, e. g., paper, given the existence of electronic documents. [...] "Documentation" [...] is distinct because it has more denotations than [...] "document". Documents are also distinguished from [...] "realia", which are 3 dimensional objects that would otherwise satisfy the definition of [...] "document" [...] because they memorialize or represent thought; documents are considered more as 2 dimensional representations.|$|R
50|$|The way {{information}} is grouped into a file is entirely up {{to how it}} is designed. This {{has led to a}} plethora of more or less standardized <b>file</b> <b>structures</b> for all imaginable purposes, from the simplest to the most complex. Most <b>computer</b> <b>files</b> are used by computer programs which create, modify or delete the files for their own use on an as-needed basis. The programmers who create the programs decide what files are needed, how they are to be used and (often) their names.|$|R
50|$|In computing, a {{directory}} is a <b>file</b> system cataloging <b>structure</b> which contains references to other <b>computer</b> <b>files,</b> and possibly other directories. On many computers, directories {{are known as}} folders, or drawers to provide some relevancy to a workbench or the traditional office file cabinet.|$|R
50|$|By using {{computer}} programs, {{a person}} can open, read, change, and close a <b>computer</b> <b>file.</b> <b>Computer</b> <b>files</b> may be reopened, modified, and copied an arbitrary number of times.|$|R
40|$|Travel is {{unnecessary}} to see certain objects of mathematical interest, as new technology makes it convenient to be a stay-at-home explorer of 3 D mathematical models. With the right equipment, one can create {{and enjoy a}} mathematical museum collection without leaving ones office. Figure 1 shows an assortment of physical models on shelves of my office. New technologies—commercially available or under development—allow the creation of physical models that are very compact, intricate, and accurate. These state-of-the-art processes involve the automated (robotic) construction of physical objects by assembling thin cross-sections calculated from the designer's <b>computer</b> <b>file</b> describing the <b>structure</b> to be built. Engineers call these “rapid prototyping ” fabrication processes because at present their major application is for quickly making prototypes of parts that are later mass-produced by industrial techniques. However, the more general term “solid freeform fabrication ” (SFF) conveys the idea that these objects need be neither rapid—some of these models took a machine three days to build—nor prototypes—for us they are the final result. Figure 1. Mathematical forms, mostly about 3 inches in diameter, built with various SFF machines. SFF technology has applications {{in the creation of}} all types of educational 3 D objects, e. g., topological, algebraic, molecular, crystal, anatomical, or historical models. Remnants of older collections, e. g., a...|$|R
50|$|A <b>computer</b> <b>file</b> is a <b>computer</b> {{resource}} for recording data discretely {{in a computer}} storage device. Just as words can be written to paper, so can information be written to a <b>computer</b> <b>file.</b>|$|R
30|$|We created {{combined}} distance matrices for {{all possible}} combinations of distance matrices. In {{the case of}} the four input attributes considered in this paper, that means, we produced 11 combined matrices (sentences and DOM tags, sentences and <b>file</b> <b>structures,</b> sentences and images, DOM tags and <b>file</b> <b>structures,</b> DOM tags and images, <b>file</b> <b>structure</b> and images, sentences and DOM tags and <b>file</b> <b>structure,</b> sentences and DOM tags and images, sentences and <b>file</b> <b>structures</b> and images, DOM tags and <b>file</b> <b>structures</b> and images, and sentences and DOM tags and <b>file</b> <b>structures</b> and images). In situations where many additional features are used, several specifically targeted feature combinations could also be identified for creating a limited number of combined distance matrices.|$|R
50|$|Digital wallet: a <b>computer</b> <b>file</b> for {{maintaining}} digital currency.|$|R
5000|$|Thou {{shalt not}} snoop around in other people's <b>computer</b> <b>files.</b>|$|R
50|$|Media Descriptor File (MDF) is a {{proprietary}} disc image file format developed for Alcohol 120%, an optical disc authoring program. Daemon Tools, CDemu, MagicISO, PowerDVD, and WinCDEmu can also read the MDF format. A disc {{image is a}} <b>computer</b> <b>file</b> replica of the <b>computer</b> <b>files</b> and file system of an optical disc.|$|R
5000|$|Can {{work with}} streams, {{databases}} or <b>computer</b> <b>files</b> on memory cards.|$|R
5000|$|All audio {{tracks in}} <b>computer</b> <b>file</b> format, {{ready for an}} MP3 player ...|$|R
2500|$|Chess {{games are}} often stored in <b>computer</b> <b>files</b> using Portable Game Notation (PGN), ...|$|R
50|$|File {{deletion}} {{is a way}} {{of removing}} a <b>file</b> from a <b>computer's</b> <b>file</b> system.|$|R
50|$|Listed {{below are}} some notable <b>computer</b> <b>file</b> systems that {{work well with}} solid-states drives.|$|R
5000|$|Files - {{a content}} library for storing, sharing and {{revision}} management of <b>computer</b> <b>files.</b>|$|R
5000|$|Examples of long-time {{de facto}} but never de jure {{standards}} (for <b>computer</b> <b>file</b> formats): ...|$|R
50|$|Some <b>computer</b> <b>file</b> systems, {{such as the}} OpenVMS Filesystem, {{also keep}} {{versions}} for files.|$|R
5000|$|Namespace Editor {{to access}} informations about {{objects in the}} network (users, <b>computers,</b> <b>file</b> systems, ...) ...|$|R
50|$|QuickTime File Format (QTFF) is a <b>computer</b> <b>file</b> format used {{natively}} by the QuickTime framework.|$|R
5000|$|Parchive, {{an error}} {{correction}} system for <b>computer</b> <b>files.</b> The second version {{is known as}} PAR2.|$|R
5000|$|Opening junk emails of {{suspicious}} emails and/or opening/running attachments or <b>computer</b> <b>files</b> {{contained in}} these ...|$|R
5000|$|Police may access an individual's <b>computer</b> <b>files</b> {{without a}} warrant {{to prevent a}} {{terrorist}} act.|$|R
50|$|The tab manage {{contains}} a file manager for navigating in the <b>computers</b> <b>file</b> system opening files.|$|R
5000|$|Any {{printable}} <b>computer</b> <b>file</b> can be faxed, {{without having}} to first print the document on paper.|$|R
5000|$|File carving is {{the process}} of {{reassembling}} <b>computer</b> <b>files</b> from fragments in the absence offilesystem metadata.|$|R
5000|$|Disk image, a <b>computer</b> <b>file</b> that {{contains}} the exact data structure of an actual storage device ...|$|R
5000|$|The {{modification}} {{or access}} {{time of a}} file or directory in a <b>computer</b> <b>file</b> system or database ...|$|R
5000|$|... file is a {{standard}} Unix program for recognizing the type of data contained in a <b>computer</b> <b>file.</b>|$|R
50|$|The Administration of Library Owned <b>Computer</b> <b>Files,</b> Association for Research Libraries, 1989 (OMS SPEC Kit and Flyer, #159).|$|R
