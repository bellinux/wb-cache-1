7|25|Public
5000|$|Pull coding or <b>client</b> <b>pull</b> is a {{style of}} network {{communication}} where the initial request for data originates from the client, and then is responded to by the server. The reverse is known as push technology, where the server pushes data to clients.|$|E
50|$|In 1994, {{he became}} a {{founding}} engineer of Netscape Communications and programmed the networking code for the first versions of the Netscape web browser. He was also responsible for several browser innovations, such as HTTP cookies, the blink element, server push and <b>client</b> <b>pull,</b> HTTP proxying, and encouraging the implementation of animated GIFs into the browser. While at Netscape, {{he also was a}} founding member of the HTML working group at the W3C and was a contributing author of the HTML 3.2 specification. He is one of only six inductees in the World Wide Web Hall of Fame announced at the First International Conference on the World-Wide Web in 1994.|$|E
5000|$|... "BKPC (Barbie and Ken Politically Correct)", 1993, is {{a series}} of photo vignettes. The photos were {{originally}} offered on the thing bbs for download in 1993. When the internet became popular in 1994 the piece was reworked as a primitive HTML <b>client</b> <b>pull</b> animation. The piece also has been exhibited in physical form as a photo series. The work created a minor uproar when Mattel inc. {{sent a letter to the}} thing accusing it of copyright dilution and demanding that the work be removed immediately.The work focuses on interracial sex and white supremacy. It presents the point of view of a little girl playing with dolls and fantasizing about sex.|$|E
5000|$|... 1. The <b>client</b> <b>pulls</b> {{data stored}} in the {{computer}} archives. That includes the player's statistics, map objects, mobs, artworks, character behaviors and other static data to create the player's surroundings.|$|R
5000|$|Supports both PUSH (i.e. Run on the <b>client)</b> and <b>PULL</b> (i.e. Run on the server) methods ...|$|R
40|$|Abstract Traditional {{software}} and security patch update delivery mechanisms {{rely on a}} client/server ap-proach where <b>clients</b> <b>pull</b> updates from servers regu-larly. This approach, however, suffers a high window of vulnerability (WOV) for clients {{and the risk of}} a single point of failure. Overlay-based information dissemi-nation schemes overcome these problems, but often incur high infrastructure cost to set up and maintain in-dividual information dissemination networks. Agains...|$|R
50|$|Each medium {{can only}} be used at midnight by one who harbors a desire for revenge against their object of hatred. Should someone submit the name of someone against whom they bear a grudge or immense hatred, and their request is accepted, Enma Ai will take them to a realm of {{perpetual}} twilight where she offers them a straw doll, {{which is one of}} her companions, with a red string wound around its neck and describe to the client the details of their contract. Should the <b>client</b> <b>pull</b> the string tied around the doll's neck, Enma Ai will ferry the target of the revenge straightaway to Hell. However, once the client's life has ended, he/she will also go to Hell, and a black crest-shaped mark appears on the client's chest to serve as a permanent reminder of their decision to send someone to Hell. However, this mark is no guarantee that the person themselves won't be sent to Hell by another client.|$|E
40|$|In this work, I use ns- 3 {{simulations}} {{to compare}} and evaluate {{different approaches to}} web based adaptive bitrate (ABR) video streaming. In particular, I look at the difference between <b>client</b> <b>pull</b> and server push based approaches, the effects of media formatting parameters such as chunk duration and number of encoding rates, and the implementation of bandwidth estimation and request scheduling strategies. I find that <b>client</b> <b>pull</b> applications with a 2 second chunk duration are very inefficient with bandwidth compared to applications using a server push based approach. The reasons for this stem from the effect of frequent idle periods at chunk boundaries, which are absent with server push, on the behaviour of TCP. Increasing the chunk duration to 10 seconds makes a significant difference to <b>client</b> <b>pull</b> applications and allows them to perform at a level much more comparable with server push applications. I also find that ABR applications in general are vulnerable to suffering from encoding rate instability, a result that echoes findings {{from a number of}} recent studies. This problem seems to stem from the difficulty of selecting a suitable encoding rate based on transfer rates observed at the application layer. Effective remedies for encoding rate instability include ensuring that the system is not over provided for {{in terms of the number}} of available encoding rates, and using an averaging function, such as the harmonic mean, over a series of recent transfer rates in order to filter out short term fluctuations in the estimate of available bandwidth. I also show that a simple request scheduling strategy can be used to avoid over buffering and the associated problems, but that periodic request scheduling can introduce further problems related to fairness when multiple ABR flows compete. Finally, I show that a hybrid of <b>client</b> <b>pull</b> and server push, which I call pull selective, can offer a useful compromise between the two, by matching the performance characteristics of server push whilst maintaining the low server overheads and scalability attributes of <b>client</b> <b>pull...</b>|$|E
40|$|Phoenix is a {{real-time}} {{network-attached storage}} device (NASD) that guarantees real-time data delivery to network clients even across single disk failure. The service interfaces that Phoenix provides are best-effort/real-time reads/writes based on unique object identifiers and block offsets. Data retrieval from Phoenix can be serviced in server push or <b>client</b> <b>pull</b> modes. Phoenix's real-time disk subsystem performance {{results from a}} standard cycle-based scan-order disk scheduling mechanism. However, the disk I/O cycle of Phoenix is either completely active or completely idle. This on-off disk scheduling model effectively reduces the power comsumption of the disk subsystem, without increasing the buffer size requirement. Phoenix also exploits unused disk storage space and maintains additional redundancy beyond the generic RAID 5 -style parity. This extra redundancy, typically {{in the form of}} block replication, reduces the time to reconstruct the data on the failed disk. This paper describes [...] ...|$|E
50|$|While request-response is {{the most}} common {{client-server}} design, there are others, such as the publish-subscribe pattern. In the publish-subscribe pattern, clients register with a pub-sub server, subscribing to specified types of messages; this initial registration may be done by request-response. Thereafter, the pub-sub server forwards matching messages to the clients without any further requests: the server pushes messages to the client, rather than the <b>client</b> <b>pulling</b> messages from the server as in request-response.|$|R
2500|$|NSB soon {{agreed to}} support the venture. A permit was secured to allow [...] trucks from Sweden {{to run to the}} terminal. The {{initiative}} led to the incorporation of Haldenterminalen A/S in 1983. The municipal council approved a terminal on the farms of Helle, Ødegård and Berger. Two issues then arose which postponed construction. The first was that Tollpost Globe, one of the major potential <b>clients,</b> <b>pulled</b> out because they were not allowed to buy the entire terminal. The municipality opposed a sale because they wanted a terminal open to any potential transport companies. Second, a dispute regarding agricultural conservation arose with demands that non-agricultural land be used for the terminal.|$|R
40|$|Abstract. Caching {{is a key}} {{technique}} for improving data access performance of mobile clients. The emergence of peer-to-peer communication technologies now brings to reality “cooperative caching ” in which mobile clients help one another in caching. They not only can retrieve data items from mobile support stations, {{but also from the}} cache in their peers. Traditional caching is based on an on-demand paradigm, where <b>clients</b> <b>pull</b> data to be cached. In this work, we also consider the use of the inherent broadcast mechanism from the mobile support station to complement on-demand pull-based access from the station and from peer mobile clients, to form the hybrid environment. The performance is evaluated for cooperative caching in these environments. Pull-based environments generally lead to lower access latency, while push-based and hybrid environments could effectively reduce power consumption...|$|R
40|$|Thin-client {{computing}} {{offers many}} advantages over traditional PC computing including lower costs, ubiquitous access to resources, higher security, and easier maintenance. Unfortunately thin clients rely upon {{the services of}} other networked computers to properly function. Because of this tight-knit relationship, high- latency environments can render thin clients practically unusable. With the VNC thin-client system, performance can be capped at 1 frame per round-trip time (RTT) due to its <b>client</b> <b>pull</b> communication style. We extend VNC to build VNC-HL and show how to improve frame rate performance by employing PR, a pre-requesting technique, to periodically request updates, even with several previous requests pending. Experimental results demonstrate up to {{an order of magnitude}} of improvement. VNC-HL achieved 14 FPS of multimedia computing in a 500 ms latency network with negligible additional resource consumption. In this thesis we demonstrate that VNC can be improved to sustain high frame rate performance in high-latency environments by employing a periodic pre-request at the desired FPS rat...|$|E
40|$|Even {{though the}} AJAX {{paradigm}} helps web applications {{to become more}} responsive, AJAX alone does not provide an efficient mechanism for real-time data delivery. Use cases of applications that need such a service include stock tickers, auction sites or chat rooms. The user interface components of these applications must be kept up-to-date with the latest data from the server, and changes should be received immediately. There are two different static ap-proaches used in the industry to provide real-time data de-livery: Either the <b>client</b> <b>pulls</b> for the latest data, or the server pushes it to the client. However, such a static ap-proach is not optimal, since both techniques have their own advantages and disadvantages. In this paper we present an adaptive algorithm that combines both solutions in or-der to increase scalability, network performance and user-perceived latency. ...|$|R
60|$|The Celebrity did not stint his {{praises of}} Mohair, {{coming up the}} drive, but so lavish were his {{comments}} on the house that they won for him a lasting place in Mr. Cooke's affections, and encouraged my <b>client</b> to <b>pull</b> up his horses in a favorable spot, and expand on the beauties of the mansion.|$|R
40|$|A new push-and-pull hybrid data {{broadcast}} {{scheme is}} proposed for providing wireless information services to {{three types of}} <b>clients,</b> general, <b>pull</b> and priority <b>clients.</b> Only <b>pull</b> and priority <b>clients</b> have the back channel for sending requests to the broadcast server. There is no scalability problem with the hybrid scheme because the amount of <b>pull</b> and priority <b>clients</b> is very small. Based on the requests collected from <b>pull</b> and priority <b>clients,</b> the server estimates the interest pattern changes of the whole client population. Then the broadcast schedule on the push channel for the next broadcast cycle is adjusted. Besides the push channel, {{a small amount of}} broadcast bandwidth is allocated to a pull channel. The data to be broadcast on the pull channel is decided by the server in real-time and priority is given to requests from priority clients. Simulations show that with a time-varying client interest pattern, the average data access time for all three types of clients can be minimized. Because of the priority in using the <b>pull</b> channel, priority <b>clients</b> can achieve the lowest access time and <b>pull</b> <b>clients</b> can achieve a lower access time than general clients. To further improve the performance, the hybrid scheme with local client cache is also investigated. published_or_final_versio...|$|R
40|$|This paper {{examines}} {{the construction of}} distributed information systems that incorporate the ability to push data out to clients (i. e., dissemination) {{in addition to having}} <b>clients</b> <b>pull</b> data from servers. One key issue that distinguishes such dissemination-based information systems (DBIS) from more traditional ones is communications asymmetry. Asymmetry arises in many new applications due to both physical characteristics such as network bandwidths, as well as to workload characteristics. We outline a number of different data delivery mechanisms, and then focus on one particular dissemination mechanism that we have developed, called Broadcast Disks. Finally, we discuss issues that arise in the design of a DBIS architecture that can provide many different modes of data delivery. 1 Introduction Ongoing advances in communications including the proliferation of the Internet and intranets, the development of mobile and wireless networks, and the impending availability of high bandwidth link [...] ...|$|R
40|$|Preprint {{of paper}} {{published}} in: AEWSE 2008 - Proceedings of the Third International Workshop on Adaptation and Evolution in Web Systems Engineering, 16 July 2008 Even though the AJAX paradigm helps web applications {{to become more}} responsive, AJAX alone does not provide an efficient mechanism for real-time data delivery. Use cases of applications that need such a service include stock tickers, auction sites or chat rooms. The user interface components of these applications must be kept up-to-date with the latest data from the server, and changes should be received immediately. There are two different static approaches used in the industry to provide real-time data delivery: Either the <b>client</b> <b>pulls</b> for the latest data, or the server pushes it to the client. However, such a static approach is not optimal, since both techniques have their own advantages and disadvantages. In this paper we present an adaptive algorithm that combines both solutions {{in order to increase}} scalability, network performance and userperceived latency. Software Computer TechnologyElectrical Engineering, Mathematics and Computer Scienc...|$|R
30|$|The STOMP client used by PyMHealth {{application}} {{to publish the}} data is a Pyhton client, while the client program that is executed on the CMU side is a JavaScript <b>pull</b> <b>client</b> provided by the Orbited daemon.|$|R
50|$|On 10 May 2012, Danske Bank {{announced}} that Northern Bank and National Irish Bank would be merged on 1 June 2012, under the Northern Bank management {{team and the}} Danske Bank name, effectively reversing the separation between the two. The rebrand was completed on 18 November 2012. At the time the bank closed its 27 branches to focus on corporate and private <b>clients,</b> subsequently <b>pulling</b> out of the personal/retail banking market completely.|$|R
50|$|The initial {{launch of}} an {{application}} {{would be important}} for the end user and the Packaging process might be optimized to achieve this. Once launched, common functions would be followed. As these functions are requested by the end user, these may be streamed in a similar manner. In this case the <b>client</b> is <b>pulling</b> the application from the stream server. Otherwise, the full application might be delivered from the server to the client in the background. In this case, the server pushes the application to the client.|$|R
40|$|Measures of {{treatment}} integrity {{are needed to}} advance clinical research in general and are viewed as particu-larly relevant for dissemination and implementation research. Although some efforts to develop such mea-sures are underway, a conceptual and methodological framework will help guide these efforts. The {{purpose of this article}} is to demonstrate how frameworks adapted from the psychosocial treatment, therapy process, healthcare, and business literatures can be used to address this gap. We propose that components of treat-ment integrity (i. e., adherence, differentiation, compe-tence, alliance, <b>client</b> involvement) <b>pulled</b> from the treatment technology and process literatures can be used as quality indicators {{of treatment}} implementation and thereby guide quality improvement efforts in prac-tice settings. Further, we discuss how treatment integ-rity indices can be used in feedback systems that utilize benchmarking to expedite the process of translating evidence-based practices to service settings. Key words: children’s mental health, disseminatio...|$|R
40|$|Currently, for {{the display}} of {{synthetic}} and archived multimedia movies and clips, buffers are managed at the server end (push mode), at the <b>client</b> end (<b>pull</b> mode), or in the push-pull mode to avoid excessive server side disk access time, avoid hot spots for multiple disk accesses for the same media objects, and/or to smoothen the effect of variations in transmission delay. However, the current schemes suffer {{from the lack of}} static analysis and the coordination between server and the clients to reduce jitters. In this paper, we describe a server coordinated predictive buffer management scheme for mobile devices that integrates static analysis of frame based synthetic movies and server directed client side management to reduce the retransmission of reusable multimedia objects over the Internet. Performance evaluation shows that the scheme reduces the jitter significantly while maintaining the needed QoS, and the scheme outperforms popular rendering formats...|$|R
50|$|Sabayon Linux {{relies on}} two package managers. Portage is {{inherited}} from Gentoo, while Entropy {{was developed for}} Sabayon by Fabio Erculiani and others. Portage downloads source-code and compiles it specifically for the target system, whereas Entropy manages binary files from servers. The binary tarball packages are precompiled using the Gentoo Linux unstable tree. Entropy <b>clients</b> then <b>pull</b> these tarballs and perform the various post- and pre-compilation calls of the Gentoo ebuild {{to set up a}} package correctly. This means the system is completely binary-compatible with a Gentoo system using the same build configuration. The adoption of two package managers allows expert users to access the full flexibility of the Gentoo system and others to easily and quickly manage software applications and updates. The Entropy software features the ability of allowing users to help generate relevant content by voting and by attaching images, files and web links to a package.|$|R
40|$|Wireless {{systems that}} form a body-area network {{must be made}} small and low power without sacrificing performance. To achieve {{high-throughput}} communication in low-cost wireless body area networks, we propose a lowcomplexity, “pulling ” MAC protocol. Such a network architecture consists of low-complexity nodes and moderatecomplexity base stations, which act as <b>clients</b> to <b>pull</b> data from the nodes that act as thin servers. This organization achieves intra-network collision-free multiple access as in TDMA but without expensive time synchronization. It also achieves high utilization of air bandwidth and adaptivity of CSMA protocols but without collision or complexity on the node side. Experimental results show that our pulling protocol achieves better good channel utilization of up to 52. 8 % and high data throughput of up to 432 Kbps. We also tested our MAC protocol on a wireless ECG system. Our MAC protocol can transmit ten simultaneous streams of data at 200 samples per second each from ten sensing devices. ...|$|R
40|$|Abstract—The {{limitations}} of traditional pull-based Web services become significant to users {{who depend on}} timely and up-to-date information. Users are forced to frequently check the data of interest, or use <b>clients</b> which <b>pull</b> for data at regular intervals in search of changes. Such solutions can consume resources extensively: They are inadequate for environments with wireless bandwidth limitations. Push-based active dissemination of published content to interested users has recently been proposed as a viable alternative. This approach {{is based on the}} publish/subscribe (P/S) interaction model. In this paper we present the architecture and discuss the initial prototype implementation of m-NewsBoard, a P/S-based news dissemination service for mobile users. This service enables mobile users to browse the repository of current news, to publish additional news, and to receive notifications with news of their interest. The service architecture comprises loosely coupled components: a WAP-enabled Web interface, and a dissemination component providing different transportation mechanisms for content publishing, such as P/S-based content dissemination, e-mail, or SMS. The paper presents the initial m-NewsBoard’s implementation and discusses our experiences related to the development of services for mobile users. Index terms—mobile service, content dissemination, publish/subscribe, Web service I...|$|R
40|$|The {{growth in}} Internet traffic {{associated}} with video streaming and sharing of videos is so rapid {{that it may}} soon dwarf all other forms of Internet content. One {{reason for this is}} that only some forms of content can be cached (such as movies). Data generated in real time such as by live video broadcasts (e. g. sports games, IPTV or new episodes of popular TV shows), chat systems, immersive virtual reality applications and games typically can’t be cached at all, and in today’s systems, each <b>client</b> may <b>pull</b> such information on its own point-to-point (TCP) stream directly from the data center, even if large numbers of clients share interest in at least some aspects of the data. We propose a new system called GRADIENT aimed at reducing the load on providers of such and enabling scalable, bandwidthsensitive streaming service for heterogeneous consumers. The core of the system is an overlay networking architecture intended to run directly on a content hosting platform, and which optimizes aggregate bandwidth use by transforming in-flight data to match the ideal stream quality – expressed as an economic utility – of the consuming client. 1...|$|R
40|$|In {{this paper}} we {{introduce}} the Inverted Browser, {{a novel approach}} to enable mobile users to view content from their personal devices on public displays. The Inverted Browser is a network service to start and control a browser that is then used to view the content. In contrast to a traditional Web browser, which runs on the <b>client</b> device and <b>pulls</b> content from a server, content is pushed to the Inverted Browser from a personal data source upon user input. This approach allows {{a wide variety of}} personal content to be viewed by facilitating symbiotic relationships between mobile devices and intelligent displays in the environment. Our initial Inverted Browser prototype is based on a Web Services wrapper around a traditional Web browser. Our experiments show that the Inverted Browser approach is superior to other solutions in terms of user convenience, ease of use, energy consumption, and privacy, but interaction latencies need improvement. 1...|$|R
40|$|As {{today the}} amount of {{accessible}} information is overwhelming, the intelligent and personalized filtering of available information is a main challenge. Additionally, {{there is a growing}} need for the seamless mobile and multi-modal system usage throughout the whole day to meet the requirements of the modern society (“anytime, anywhere, anyhow”). A personal information agent that is delivering the right information at the right time by accessing, filtering and presenting information in a situationaware matter is needed. Applying Agent-technology is promising, because the inherent capabilities of agents like autonomy, proand reactiveness offer an adequate approach. We developed an agent-based personal information system called PIA for collecting, filtering, and integrating information at a common point, offering access to the information by WWW, e-mail, SMS, MMS, and J 2 ME <b>clients.</b> Push and <b>pull</b> techniques are combined allowing the user to search explicitly for specific information {{on the one hand and}} to be informed automatically about relevant information divided in pre-, work and recreation slots on the other hand. In the core of the PIA system advanced filtering techniques are deployed through multiple filtering agent communities for content-based and collaborative filtering. Information-extracting agents are constantly gathering new relevant information from a variety of selected sources (internet, files, databases, web-services etc.). A personal agent for each user is managing the individual information provisioning, tailored to the needs of this specific user, knowing the profile, the current situation and learning from feedback...|$|R
40|$|Magister Commercii - MComThis study {{seeks to}} {{evaluate}} the performance of unit trust managers based on their client affiliation classification. Worldwide, the number of investors investing in unit trusts {{is on the rise}} and increasingly {{they want to be able}} {{to evaluate the}} performance of the managers managing their funds so as to make better investment decisions. This increase in the asset size and number of unit trusts funds could be attributed but not limited to the low capital required for investment by small investors who before could not afford to invest in portfolios requiring large capital (Prather, Bertin, and Henker, 2004). In addition, the fund managers of these units are believed to have special skills such as market timing and stock selectivity which contribute to the performances they achieve. The evaluation of the performance of unit trust fund managers is a largely unexplored area in South Africa. As a result, the study focuses on South Africa fund managers and has as aim to evaluate the performance of two groups of fund managers (independent and dependent) who were classified based on their client affiliation structure. The client affiliation classification is as a result of the fund manager's clientele base. The dependent group are those who formed part of a group structure and offer other wealth management services for which their clients or investors in the unit trust services originate from within the group while the independent group are those whose <b>clients</b> are <b>pulled</b> together from diverse individuals or institutions and does not form part of a group or render other services other than fund management. Two fund types were selected namely; general equity funds and balanced funds. It has also examined the underlying skills the different groups of fund managers possess. The performance of unit trust has an effect on many parties who are related in one way or the other to the unit trust funds. The results of this study will inform individual investors, trustees and asset consultants in their decision making process of selecting a fund manager. The results of the study will be of value to the asset management industry in terms of assessing their structures and restructuring the investment service business to meet the expectations of their clients; the investors. It could also be used as a marketing tool. Publicly available historical data on the returns generated by fund managers for a five year period from 2005 to 2009 was obtained. Analyses were done using the independent sampled t-test and the Treynor Mazel model respectively for the different research questions posed. The results obtained indicated that there were no statistically significant differences between the performances of independent fund managers with those of dependent fund managers. However, dependent fund managers of equity funds performed better than their counterparts the independent fund managers. In the case of balanced funds, the independent fund managers performed better than their dependent counterparts. On average, both fund manager types possessed selectivity skills for equity funds and none for balanced funds. However for both fund types, the dependent fund manager demonstrated more selectivity skills than their independent counterparts. The results for market timing skills demonstrated that on average, both fund managers did not possess market timing skills for balanced funds while possessing these skills for equity funds. The dependent fund managers demonstrated more market timing skills for balanced funds though negative when compared to that of their counterparts. On the other hand, the equity fund independent fund managers demonstrated more market timing skills than the dependent fund managers. South Afric...|$|R
40|$|Release_ 2015. 03. 1 ******* (Changes {{relative}} to Release_ 2014. 09. 2) !!!!!! IMPORTANT !!!!!! This release {{has a new}} algorithm for canonical atom ordering. This means that canonical SMILES generated with the new version will be different from those generated with previous versions. Acknowledgements: David Cosgrove, Andrew Dalke, JP Ebejer, Niko Fechner, Igor Filippov, Patrick Fuller, David Hall, J Bach Hardie, Jan Holst Jensen, Brian Kelley, Rich Lewis, John May, Michael Reutlinger, Sereina Riniker, Alexander Savelyev, Roger Sayle, Nadine Schneider, Paolo Tosco, Samo Turk, JL Varjo, Riccardo Vianello Highlights: A new algorithm for generating canonical atom orders. The new algorithm is faster and more robust than the old one. C++-based molecule drawing code, allows consistent molecule renderings from C++, Java, and Python. This will become the default renderer in the next release. General performance improvements and reduction of memory usage. Torsion Fingerprints for comparing 3 D conformations to each other MCS code now available from the PostgreSQL cartridge Bug Fixes: fmcs: use the zero bond type instead of other (github issue # 368 from AlexanderSavelyev) bug fixed in TorsionFingerprints. GetTFDMatrix (github issue # 376 from sriniker) rdkit. Chem. MolDb. Loader_sa does not work with python 3. 4 (github issue # 390) ChemReactions: Bugfix/Memleak-fix in runReactants (github issue # 394 from NadineSchneider) TorsionConstraint bug fix (github issue # 395 from ptosco) Fixed LoadSDF to keep 3 D info (github pull # 401 from samoturk) Incorrect expected absolute stereochemistries in a test (github issue # 407) GetSubstructMatches() consumes all available memory (github issue # 409) Bugfix in the chirality handling of chemical reactions (github pull # 410 from NadineSchneider) fixed two minor bugs in MMFF code (github issue # 416 from ptosco) Varied sanitise rejection with hydrogen representation (github issue # 418) Fixed two trivial bugs (github issue # 419 from ptosco) RDKit learns how to roundtrip MOLFile values. (github issue # 420 from bp-kelley) cairoCanvas. py python 3 compatibility (github issue # 426 from bach-hardie) Chem. FragmentOnSomeBonds() should update implicit H count on aromatic heteroatoms when addDummies is False (github issue # 429) Chem. FragmentOnSomeBonds() crashes if the bond list is empty (github issue # 430) Increase limit for smallest ring size (github issue # 431 from cowsandmilk) Problems caused by heteroatoms with radicals in aromatic rings. (github issue # 432) Conversion from mol to InChI getting ring stereo wrong (github issue # 437) Metals in mol 2 blocks handled incorrectly (github issue # 438) Fixed a few tests failing when the Windows git client is used (github pull # 439 from ptosco) Fixed tests failing on Windows when retrieving sources through the Windows git <b>client</b> (github <b>pull</b> # 440 from ptosco) Conformers not copied correctly in renumberAtoms (github issue # 441) Radicals are not correctly assigned when reading from SMILES (github issue # 447) moving RDBoost/Exceptions. h to RDGeneral (github pull # 458 from rvianello) Add code to accept blank SMILES input. (github issue # 468 from janholstjensen) Accept empty SMILES and SMARTS (github issue # 470) Fix MolFile Atom Line List Writer (github issue # 471 from bp-kelley) Moved 3 D ipython renderer to dependency (github pull # 472 from patrickfuller) Windows build/test failure fixes (github issue # 473 from ptosco) install missing FMCS/Graph. h header file (github pull # 478 from rvianello) added const qualifiers to some methods of Atom/Bond iterator classes (github pull # 479 from rvianello) Bugfix in SmilesWrite and some additional tests for getMolFrags function (github issue # 482 from NadineSchneider) Removed a while(1) {} in BFGSOpt. h which might result in an infinite loop (github issue # 484 from ptosco) Gasteiger charge calculation fails with hexavalent sulfur # 485 (github issue # 485) SmilesWriter not creating automatic name values for molecules read from CTABs (github issue # 488) Fix StringType access, remove unused imports (github issue # 494 from bp-kelley) New Features: Isomeric fix in PandasTools (github issue # 369 from samoturk) added SaveXlsxFromFrame - first version (github issue # 371 from samoturk) New feature: Torsion fingerprints (github issue # 372 from sriniker) Add function to extract a molecule with a single (particular) conformer from a multiconf mol (github issue # 384) Added C++ and Python helpers to retrieve force-field parameters (github issue # 387 from ptosco) Support providing all options to SWIG-wrapped FMCS (github issue # 397) Add function to request if calling UpdatePropertyCache is necessary (github issue # 399) Add function to test if UpdatePropertyCache is necessary (github issue # 400 from NadineSchneider) Substructure highlighting in pandas dataframe (fixes # 362) (github issue # 403 from nhfechner) Added SDF Export to PandasTools and adjusted SDF Import (github issue # 404 from nhfechner) support count-based avalon fingerprint (github issue # 408) New C++ drawing code (github issue # 412 from greglandrum) RDKit learns how to compute code coverage for tests (github issue # 413 from bp-kelley) Dictionary access is saniztized and optimized. (github issue # 414 from bp-kelley) expose MolOps::rankAtoms() and MolOps::rankAtomsInFragment() to python (github issue # 421) Dev/expose rank atoms to python (github issue # 422 from bp-kelley) rdkit learns how to wrap a proper RWMol in python (github issue # 423 from bp-kelley) Docs: document "magic" property values that are used throughout the code (github issue # 425) MolDraw 2 D: expose class to Python (github issue # 433) RDKit learns how to query properties on Atoms (github issue # 442 from bp-kelley) Issue 445 : provide helper functions for multithreaded evaluation of some expensive functions (github issue # 448 from greglandrum) RDKit learns how to release the GIL in python (github pull # 449 from bp-kelley) Dev/property queries (github pull # 450 from bp-kelley) Support a confId argument to the atom pair fingerprinting code (github issue # 453) Save the atom bookmarks so we can deconvolute reaction products. (github pull # 454 from bp-kelley) Cartridge: Support converting no structs to InChI (github issue # 455) RDKit learns how to expose ChemicalReaction copy constructor to python (github pull # 456 from bp-kelley) chirality flag was implemented for fmcs() function (github pull # 466 from AlexanderSavelyev) Support copy and deepcopy properly for at least Mol and RWMol (github issue # 467) Cartridge: add qmol_from_smiles() and qmol_from_ctab() (github issue # 469) restore java and python wrappers. New parameter (matchChiralTag) (github issue # 477 from AlexanderSavelyev) Added a Python wrapper for getShortestPath() (github issue # 487 from ptosco) Dev/merge query hs no unmapped atoms (github issue # 490 from bp-kelley) New Database Cartridge Features: The MCS code is now available within the cartridge The functions qmol_from_smiles() and qmol_from_ctab() New Java Wrapper Features: The new molecule rendering code is accessible from the SWIG wrappers. Deprecated code (to be removed in next release) : C++: The functionality in $RDBASE/Code/GraphMol/MolDrawing has been superseded by the new drawing code in $RDBASE/Code/GraphMol and will be removed in the next release. Python: rdkit/Dbase/Pubmed rdkit/Chem/fmcs (this has been superseded by the C++ implementation) Cartridge: support for v 8. x of PostgreSQL (v 8. 4 is no longer supported by the PostgreSQL project team as of July 2014) Removed code: the method Atom::setMass() has been removed. Please use setIsotope() instead. the methods involving an atom's dativeFlag have been removed. Contrib updates: Other: Python 2. 6 support is deprecated. Starting with the next RDKit release, we will only support python 2. 7 and python 3. 4 and higher. Python 2. 6 has not been supported since October 2013. If you believe that you are stuck with python 2. 6 because of the version of RHEL you are running, please read this post to learn about your options: [URL] The RDKit molecule objects (ROMol and RWMol) now require about 15 % less memory to stor...|$|R

