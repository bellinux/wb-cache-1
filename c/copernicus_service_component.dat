0|3238|Public
5000|$|... #Subtitle level 2: <b>Copernicus</b> Climate Change <b>Service</b> <b>Components</b> ...|$|R
50|$|<b>Copernicus</b> <b>services</b> are {{dedicated}} to the monitoring and forecasting of the Earth's subsystems. They contribute directly to the monitoring of climate change. <b>Copernicus</b> <b>services</b> also address emergency management (e.g. in case of natural disaster, technological accidents or humanitarian crises) and security-related issues (e.g. maritime surveillance, border control).|$|R
50|$|<b>Copernicus</b> {{data and}} <b>services</b> as {{provided}} by the Sentinel-satellites and <b>Copernicus</b> <b>services</b> are available on a full, open and free-of-charge basis.|$|R
5000|$|... {{exploring}} {{approaches to}} the integration of in-situ assets and networks into long-term sustainable frameworks for <b>Copernicus</b> <b>services</b> ...|$|R
5000|$|In 2014-2015 Copernicus {{is moving}} towards an {{operational}} phase. The key to providing operational <b>Copernicus</b> <b>services</b> {{is to have}} an appropriate governance and business model structure in place that supports provisioning of these <b>services.</b> <b>Copernicus</b> has been moving from R&D to operational services, following a phased approach: ...|$|R
5000|$|Before the Sentinel {{missions}} provide data to Copernicus, numerous {{existing or planned}} space missions provide or {{will provide}} data useful to the provision of <b>Copernicus</b> <b>services.</b> (These missions are {{often referred to as}} [...] "GMES Contributing Missions (GCMs)".) ...|$|R
40|$|Copernicus is an European system {{created for}} Earth {{observation}} and monitoring. It {{consists of a}} set of Earth observation satellites and in-situ sensors that provide geo-information that are used, through a set of <b>Copernicus</b> <b>services,</b> for applications related to the environment and global security. The main <b>services</b> of the <b>Copernicus</b> programme address six thematic areas: land, marine, atmosphere, climate change, emergency management and security. In Germany, there is a national <b>service</b> team of <b>Copernicus</b> <b>service</b> coordinators, who are responsible for the national development of the <b>Copernicus</b> <b>services</b> and for providing user-specific information about the Copernicus processes. These coordinators represent the contact points for all the programmes and services concerning their respective Copernicus theme. To publish information about Copernicus, national conferences and workshops are organised. Many people are involved in planning the continuous process of bringing the information to public authorities, research institutes and commercial companies. The Federal Agency for Cartography and Geodesy (Bundesamt für Kartographie und Geodäsie, BKG) is one such organisation, and is mainly responsible for the national land monitoring <b>service</b> of <b>Copernicus.</b> To make use of the freely available data from the Copernicus programme, the Federal Agency for Cartography and Geodesy is currently developing new applications and projects in the field of remote sensing and land monitoring. These projects can be used by other public authorities as examples on how to use the <b>Copernicus</b> data and <b>services</b> for their individual demands and requirements. <b>Copernicus</b> data and <b>services</b> are currently not very commonly used in the daily routine of the national mapping agencies, but they will soon be...|$|R
5000|$|... 2008 - 2010: <b>Copernicus</b> {{pre-operational}} <b>services</b> (FTS and Pilot services) ...|$|R
40|$|In {{the first}} {{hours of a}} disaster, {{up-to-date}} information about the area of interest is crucial for effective disaster management. However, due to the delay induced by collecting and analysing satellite imagery, disaster management systems like the <b>Copernicus</b> Emergency Management <b>Service</b> (EMS) are currently not able to provide information products until up to 48 – 72 h after a disaster event has occurred. While satellite imagery is still a valuable source for disaster management, information products can be improved through complementing them with user-generated data like social media posts or crowdsourced data. The advantage of these new kinds of data {{is that they are}} continuously produced in a timely fashion because users actively participate throughout an event and share related information. The research project Evolution of Emergency <b>Copernicus</b> <b>services</b> (E 2 mC) aims to integrate these novel data into a new EMS <b>service</b> <b>component</b> called Witness, which is presented in this paper. Like this, the timeliness and accuracy of geospatial information products provided to civil protection authorities can be improved through leveraging user-generated data. This paper sketches the developed system architecture, describes applicable scenarios and presents several preliminary case studies, providing evidence that the scientific and operational goals have been achieved...|$|R
5000|$|ESA is {{currently}} developing seven missions under the Sentinel programme. The Sentinel missions include radar and super-spectral imaging for land, ocean and atmospheric monitoring. Each Sentinel mission {{is based on}} a constellation of two satellites to fulfill and revisit the coverage requirements for each mission, providing robust datasets for all <b>Copernicus</b> <b>services.</b> The Sentinel missions will have the following objectives: ...|$|R
40|$|Applications {{for near}} real time oil and ship detection, wind and wave based on {{satellite}} image data of {{synthetic aperture radar}} (SAR) like Sentinel- 1 or TerraSAR-X are being developed and implemented as the first <b>Copernicus</b> <b>services</b> for Maritime Situational Awareness. The presentation gives an overview about the current service implementation, developed at the Maritime Security Lab Bremen and Neustrelitz, part of the Earth Observation Center (EOC) ...|$|R
50|$|In-situ {{data are}} all data from sources other than Earth {{observation}} satellites. Consequently, all ground-based, air-borne, and ship/buoy-based observations and measurements {{that are needed}} to implement and operate the <b>Copernicus</b> <b>services</b> {{are part of the}} in-situ component. In-situ data are indispensable; they are assimilated into forecasting models, provide calibration and validation of space-based information, and contribute to analysis or filling gaps not available from space sources.|$|R
5000|$|... #Subtitle level 2: <b>Copernicus</b> Climate Change <b>Service</b> Architecture ...|$|R
5000|$|... #Subtitle level 2: Evolution of the <b>Copernicus</b> Climate Change <b>Service</b> ...|$|R
40|$|Dynamic {{engineering}} and adaptation of complex e- and m-commerce systems supports business agility and flexibility. This work-in-progress paper presents research on <b>service</b> <b>components</b> with several distinct classes of service, called service offerings, and their dynamic adaptation. Having multiple service offerings enables a <b>service</b> <b>component</b> to provide to every consumer an appropriate {{level of service}} and quality of service (QoS). It also supports different capabilities, rights, and needs of consumers of the <b>service</b> <b>component.</b> <b>Service</b> <b>components</b> and <b>service</b> offerings are described in a comprehensive XML-based specification that describes functionality, dependencies from other <b>service</b> <b>components,</b> functional and QoS constraints, authorization policies, as well as cost. Dynamic adaptation mechanisms that we explore {{are based on the}} manipulation of service offerings. Our mechanisms enhance robustness of the relationship between a <b>service</b> <b>component</b> and its consumer. This robustness is important in eand m-commerce systems due to the issues of trust and customer retention. 1...|$|R
40|$|The <b>Service</b> <b>Component</b> Architecture Specification {{is being}} {{provided}} by the copyright holders under the following license. By using and/or copying this work, you agree that you have read, understood and will comply with the following terms and conditions: Permission to copy and display the <b>Service</b> <b>Component</b> Architecture Specification and/or portions thereof, without modification, in any medium without fee or royalty is hereby granted, provided that you include the following on ALL copies of the <b>Service</b> <b>Component</b> Architecture Specification, or portions thereof, that you make: 1. A link or URL to the <b>Service</b> <b>Component</b> Architecture Specification at these locations...|$|R
40|$|<b>Service</b> <b>Component</b> Architecture (SCA) {{provides}} a programming model to support Service Oriented Architecture (SOA). SCA based application has long product development life-cycle. Slight change in one <b>service</b> <b>component</b> may affect functionality of other component. This leads to requirement of continuous checking for stability of integrated systems. If defects are identified in earlier stage and total {{time required for}} product development get reduced then it would certainly improve performance. In this paper, we introduce continuous assimilation policy for <b>service</b> <b>component</b> architecture, which gives continuous and rapid development of <b>service</b> <b>components.</b> It focuses on implementation strategies for SOA application...|$|R
50|$|The <b>Copernicus</b> Atmosphere Monitoring <b>Service</b> (CAMS) {{is part of}} the Copernicus Programme and {{provides}} continuous data and information on atmospheric composition. The service describes the current situation, forecasts the situation a few days ahead, and analyses consistently retrospective data records for recent years. This service has around 10 years of developments, and its current precursor project, MACC-III (Monitoring Atmospheric Composition and Climate - Interim Implementation), is delivering the pre-operational <b>Copernicus</b> Atmosphere <b>Service.</b> The service is being implemented by the European Centre for Medium-Range Weather Forecasts (ECMWF).|$|R
40|$|At {{the last}} NGN-GSI meeting on January 2010, we had {{discussed}} NGN architecture with web <b>service</b> <b>component</b> in Y. NGN-Web (Functional Requirements and Architecture of Web <b>Service</b> <b>Component</b> in NGN). When we reviewed the figure (i. e., Figure 6 in Y. NGN-Web) on NGN architecture with web <b>service</b> <b>component,</b> we {{had received a}} comment for this figure at the meeting {{as you can see}} the editor's note in Section 9. 1 in Y. NGN-Web. So, this contribution provides the revised figure for NGN architecture with web <b>service</b> <b>component</b> in Y. NGN-Web. After discussion, we would like to replace the current figure by the revised figure...|$|R
40|$|This paper {{introduces}} {{the design of}} a template of architectural building blocks (ABBs) for the <b>Service</b> <b>Component</b> layer in the SOA Solution Stack (S 3) reference architecture. SOA solution architects can use the industry practice-based template as a starting point to quickly configure, customize, and prototype their application-specific <b>service</b> <b>component</b> layer that provides code containers that implement services. We then formalize the issue of <b>service</b> <b>component</b> implementation selection into a one-sided sealed English auction problem. Along with architectural decisions, a cost decision model is deduced to help solution practitioners in selecting proper <b>service</b> <b>component</b> providers for the most cost-effective design of service-oriented solution design...|$|R
30|$|Ubiquity. <b>Service</b> <b>components</b> can be {{gathered}} into communities of components that are equivalent in functionality and QoS. <b>Service</b> <b>components</b> are defined equivalent if {{they provide the}} same services with the same QoS even if their algorithms are different.|$|R
40|$|At {{the last}} IPTV-GSI meeting on October 2009, we had {{discussed}} NGN architecture with web <b>service</b> <b>component</b> in Y. NGN-Web (Functional Requirements and Architecture of Web <b>Service</b> <b>Component</b> in NGN). The new figure (i. e., Figure 6) on web <b>service</b> <b>component</b> was inserted in Y. NGN-Web. In this figure, web <b>service</b> <b>component</b> {{has a direct}} interface with end user. As we can see an editor's note in Section 7. 2, Figure 2 on service classification is also modified in order to align with Figure 6. So, this contribution provides the revised figure for service classification according to different service control in Y. NGN-Web. After discussion, {{we would like to}} replace the current figure by the proposed figure...|$|R
40|$|In {{this paper}} {{we focus on}} a {{composition}} model for services, which are composed from pre-programmed <b>service</b> <b>components</b> represented as Java classes. A common formal basis for representing the semantics of dynamic composition of <b>services</b> from <b>service</b> <b>components</b> is presented. We propose a logic and a specification language that enable us to reason about and deploy <b>service</b> <b>components</b> automatically. The proposed composition model uses a logical proof as witness for the correct deployment of <b>service</b> <b>components</b> {{in the context of}} their use. The composition model has been implemented in Java as an environment for dynamic composition of services. We illustrate the proposed composition method on an example of composition of a service...|$|R
40|$|Abstract — IT {{organizations}} and IT service providers decompose monolithic IT services in IT <b>service</b> <b>components</b> for reaching {{a higher degree}} of reusability and therefore realizing higher economies of scales. Existing concepts of modularity are being adapted when creating these IT <b>service</b> <b>components.</b> In the area of software intensive systems modularity is a widely-used design principle to implement reusable and combinable elements. The elements (e. g. classes in object-oriented programming or services of a service-oriented architecture) commonly integrate the data and its behavior as well as supply interfaces for communication between them. Typically these elements are considered from a technological point of view regarding the possibilities to be composed. But IT <b>service</b> <b>components</b> are slightly different: they can be described by both technological and organizational aspects. The following paper examines both aspects of IT <b>services</b> and its <b>components</b> and demonstrates possibilities to integrate these facts in the description of IT <b>service</b> <b>components.</b> This approach is useful to decrease the effort for retrieving the necessary information in the process of IT service composition and therefore leads to less time-to-market, higher degree of reusability and higher quality of the delivered IT service. Keywords-IT <b>service,</b> IT <b>service</b> <b>component,</b> IT <b>service</b> composition, IT service engineering, IT <b>service</b> <b>component</b> descriptio...|$|R
40|$|AbstractThe <b>Service</b> <b>Component</b> Architecture (SCA) {{provides}} a platform-independent component model for service-oriented development. A <b>service</b> <b>component</b> with different communication mechanisms and implementation languages can be modeled in SCA. However, it lacks a formal foundation for SCA-based system specification and verification. This paper presents a formal <b>service</b> <b>component</b> signature model {{with respect to}} the specification of the SCA assembly model. Inspired by the idea of independence in SCA, a language-independent dynamic behaviour model is proposed for specifying the interface behaviour of the <b>service</b> <b>component</b> by port activities. Based on the dynamic behaviour model, the compatibility relation between components is discussed. A set of transition rules are given to map Business Process Execution Language for Web Services (BPEL) to dynamic behaviour expressions and then to Petri nets, thus the <b>service</b> <b>component</b> based system can be verified with existing tools. A case study is demonstrated to illustrate how to use our approach to constructing a web application in a rigorous way...|$|R
50|$|The <b>Service</b> <b>Component</b> Reference Model (SRM) is a {{business}} and performance-driven, functional framework that classifies <b>Service</b> <b>Components</b> with respect to how they support business and/or performance objectives. The SRM is intended for use to support the discovery of government-wide business and application <b>Service</b> <b>Components</b> in IT investments and assets. The SRM is structured across horizontal and vertical service domains that, independent of the business functions, can provide a leverage-able foundation to support the reuse of applications, application capabilities, <b>components,</b> and business <b>services.</b>|$|R
40|$|Complex network {{services}} {{can be constructed}} by composing simpler <b>service</b> <b>components</b> in a well defined way. To benefit most from such an approach, <b>service</b> <b>components</b> should be reusable for different services. Furthermore the composition must be performed automatically and customized to the service execution platform...|$|R
40|$|Abstract. For {{problem of}} {{heterogeneous}} system integration, Service-oriented component of integration model is proposed and the integration framework of component-based is constructed in this paper,which {{is based on}} research <b>service</b> <b>component</b> and integrated structure of SOA. The structure of <b>service</b> <b>components</b> is Designed,and analysis its working principle. WEB service and description criterion of registered for system is defined. Paper further study the key technical of heterogeneous information integration and mapping model. Finaly, with examples no heterogeneous systems integrate framework of <b>service</b> <b>component</b> is designed and implemented...|$|R
5000|$|Open Service-Oriented Architecture's <b>Service</b> <b>component</b> {{architecture}} (SCA) ...|$|R
5000|$|Copernicus is the {{long-term}} European Union Earth observation and monitoring programme under the former name of GMES (Global Monitoring for Environment and Security) and established by a Regulation that entered into force in 2014. It is a user-driven programme under civil control, which will notably encompass {{the launch of}} six families of dedicated, EU-owned earth observation satellites and instruments - the so-called Sentinels - and the ramp-up of the 6 <b>Copernicus</b> <b>Services</b> {{in the fields of}} atmosphere-, marine- and land-monitoring, climate change, emergency management and security. <b>Copernicus</b> data and <b>services</b> are available on a full, open and free-of charge basis to users, including EU institutions, Member States' authorities, the private sector for the development of commercial downstream applications and services, international partners, the global scientific community, and interested citizens. It provides multi temporal Synthetic Aperture Radar images with a temporal gap of 12 days. Data products can be used for SAR Interferometry applications. Data downloads can be done through sentinel data hub [...] Sentinel 2 mission outputs are also available in the same data hub.|$|R
40|$|SOA) {{has been}} {{gathering}} significant momentum in both academia and industry in recent years. SCA, which describes {{a model for}} building applications and systems using a SOA, extends and complements prior approaches to implementing services. However, {{it is very difficult}} to test if the <b>service</b> <b>components</b> integration satisfies the requirements. In this paper we propose a formal <b>service</b> <b>component</b> architecture model according to the specification of <b>service</b> <b>component</b> issued as a standard in Mar. 2007. A formulism, called Port Algebra, is developed to describe architecture. Test generation formulas are created to generate test cases for each <b>service</b> <b>component.</b> Based on the interactions of the components, SYN-sequences are derived to test the integration as a whole. Since the test generation is based on formulas, the test process could be in a systematical and automatical way...|$|R
40|$|At {{the last}} IPTV-GSI meeting on October 2009, we had {{discussed}} functional entities for web <b>service</b> <b>component</b> in Y. NGN-Web (Functional Requirements and Architecture of Web <b>Service</b> <b>Component</b> in NGN). The new figure (i. e., Figure 7) on functional entities was inserted in Y. NGN-Web. In this figure, web <b>service</b> <b>component</b> includes several functions. As {{we can see}} an editor's note in Section 9. 2, detailed descriptions for each functional entity should be added for further progress. The modification of current figure (i. e., Figure 7) is also required. So, this contribution provides the revised figure and relevant descriptions for functional entities for web <b>service</b> <b>component</b> in Y. NGN-Web. After discussion, {{we would like to}} represent the revised text for Section 9. 2 in the following page in Y. NGN-Web...|$|R
5000|$|The {{objective}} is to use multi-source data to get timely and quality information, services and knowledge, and to provide autonomous and independent access to information {{in relation to the}} environment and security on a global level. In other words, it will pull together all the information obtained by the Copernicus environmental satellites, air and ground stations to provide a comprehensive picture of the [...] "health" [...] of Earth. The geo-spatial information <b>services</b> offered by <b>Copernicus</b> can be grouped into six main interacting themes: land, ocean, emergency response, atmosphere, security and climate change. The first three <b>Copernicus</b> <b>services</b> under the land, ocean and emergency response themes and two additional services addressing the atmosphere and security themes were unveiled at the Copernicus Forum held in Lille in September 2008.|$|R
30|$|Availability {{represents}} the accessibility {{rate of the}} <b>service</b> <b>component.</b>|$|R
40|$|Many {{services}} {{are provided by}} a structure of <b>service</b> <b>components</b> that are dynamically bound and performed by system <b>components.</b> <b>Service</b> modularity requires that <b>service</b> <b>components</b> can be developed separately, deployed dynamically and then used to provide situated services without undesirable service interactions. In this paper we introduce a two-dimensional approach where <b>service</b> <b>components</b> are roles defined using UML 2. 0 collaborations and system components are agents representing domain entities such as users and terminals. The process of dynamic role binding takes place during service execution and provides general mechanisms to handle context dependency, personalisation, resource limitations and compatibility validation. A policy framework for these mechanisms is outlined...|$|R
50|$|The TRM is a component-driven, {{technical}} framework categorizing {{the standards}} and technologies to support and enable the delivery of <b>Service</b> <b>Components</b> and capabilities. It also unifies existing agency TRMs and E-Gov guidance by providing a foundation to advance the reuse and standardization of technology and <b>Service</b> <b>Components</b> from a government-wide perspective.|$|R
