3|127|Public
30|$|Word {{processing}} is {{the oldest}} application on commercial personal computers. No one wonders how easily typewriters were replaced. Learning how to use basic functions of word processing, like spell <b>check,</b> <b>table</b> creation, and working with headers one can apply also in email {{and a lot of}} other applications.|$|E
40|$|A {{highway traffic}} {{accident}} normally {{appears to be}} a random event, but also have its inevitability. Some potential factors hidden behind the appearance make such random events occur. There must be some relationship between the appearance and the factors of the accident. This paper will use expert investigation method to establish a <b>check</b> <b>table</b> to clarify the factors behind the appearances, find out the degree of contribution that such appearance made on reflecting the internal factors. Finally, combined with traffic accident statistics analysis on black-spots, calculate the scores of various causes. The higher score causes makes more effect for this black-spot...|$|E
40|$|This paper {{focuses on}} the {{management}} of Climate Change Mitigation (CCM), seeking a working institution capable of addressing its cross-scale and multi-level challenges. Currently, two most studied forms of institution are co-management and transnational networks, of which a common point is that they both attempt to build up cooperative networks. While cooperative networks have a general form of viability, this paper develops an Interactions <b>Check</b> <b>Table</b> (ICT) to illustrate those interactions between stakeholders in those two forms of cooperative networks. On {{the basis of the}} ICT analysis, this paper makes suggestions for improving cooperative networks as a working institution. QC 2011051...|$|E
5000|$|... shortages, mistakes, {{inadequate}} {{verification of}} equipment causing delays {{and can be}} avoided by <b>check</b> <b>tables,</b> especially visual ones, and setup on an intermediary jig ...|$|R
50|$|From 1920, the cab side of Great Western Railway (GWR) steam {{locomotives}} bore {{a letter}} on a coloured disc, which enabled staff to quickly assess {{the capabilities of}} locomotives without the need to <b>check</b> <b>tables</b> of data. The letter showed the power classification, and the coloured disc showed the weight restriction. This system continued after the GWR became the Western Region of British Railways.|$|R
40|$|This paper {{describes}} an indexing substrate for typed feature structures (ISTFS), {{which is an}} efficient retrieval engine for typed feature structures. Given a set of typed feature structures, the ISTFS efficiently retrieves its subset whose elements are unifiable or in a subsumption relation with a query feature structure. The efficiency of the ISTFS is achieved by calculating a unifiability <b>checking</b> <b>table</b> prior to retrieval and finding the best index paths dynamically. ...|$|R
40|$|In {{studying}} Leopoldt's conjecture for Galois number fields {{a sufficient}} condition is proposed {{which includes the}} known criteria and moreover refers only to the character table of the Galois group in question. Hence it may easily be <b>checked.</b> <b>Tables</b> of the computations are given. New examples, if only few, of imaginary number fields are exhibited for which Leopoldt's conjecture is proved to be true for all primes p. Some of them are covered by some kind of “Verschiebungssatz” for Leopoldt's conjecture...|$|R
5000|$|... where mU and σU are {{the mean}} and {{standard}} deviation of U, is approximately a standard normal deviate whose significance can be <b>checked</b> in <b>tables</b> of the normal distribution. mU and σU are given by ...|$|R
30|$|The sensor {{tables for}} the SV step and m/q are dumped {{instead of the}} count data. No {{scientific}} data are acquired in this mode. This mode is mainly used for <b>checking</b> the <b>table</b> data after replacing them.|$|R
40|$|Timed Decision Tables (TDTs) {{have been}} used earlier for {{modeling}} behavioral descriptions, applying presynthesis optimizations for efficient circuit synthesis and HDL restructuring. We describe here work that optimizes TDT models for generation of software in a highlevel programming language. The optimization for software synthesis is targeted at reducing the numbers of conditionals and actions in the generated code. The TDT-based optimizations and software synthesis is implemented in C. Experimental results {{on a set of}} examples show significant {{reduction in the number of}} conditionals <b>checked.</b> <b>Table</b> of Contents 1 Introduction 2 2 Timed Decision Tables 2 2. 1 Hierarchy in TDTs........................... 3 3 Software Synthesis from TDTs 4 3. 1 Algebraic Model for Control Flow in TDTs............. 6 4 Implementatio...|$|R
5000|$|By default, all the {{arguments}} of a tabled call are used in variant checking and all answers are tabled for a tabled predicate. B-Prolog supports table modes, which allow the system to use only input arguments in variant <b>checking</b> and <b>table</b> answers selectively. The table mode declaration ...|$|R
50|$|These {{results have}} been <b>checked</b> against the <b>table,</b> and no {{discrepancies}} were found. More results might be added as they emerge.|$|R
5000|$|On November 6, 2007 version 2008 was released. It {{included}} inline spell <b>checking,</b> <b>table</b> editing, {{ability to}} add categories, page authoring for WordPress and TypePad, support for excerpts and extended entries, improved hyperlinking and image insertion, {{and a new}} [...] "Paste Special" [...] function. Also improved integration to SharePoint 2007 support, new APIs enabling custom extensions by weblog providers, automatic synchronization of local and online edits, integration with Windows Live Gallery, and support for [...] "Blogger Labels". On December 15, 2008 Windows Live Writer version 2009 was released {{as part of the}} Windows Live Essentials suite. Released in September 30, 2010, Windows Live Writer 2011 featuring the new Ribbon user interface.On August 7, 2012 Windows Live Writer 2012 as part of its Windows Essentials 2012 suite was released, the last major official update.|$|R
30|$|On {{receiving}} the RREQ, CH <b>checks</b> its neighbour <b>table</b> and replies with RREP (Route REPly) packet containing the location information of destination Node D.|$|R
5000|$|Boole (named after George Boole) - {{a program}} that {{facilitates}} the construction and <b>checking</b> of truth <b>tables</b> and related notions (tautology, tautological consequence, etc.); ...|$|R
50|$|WinShell {{includes}} a text editor, syntax highlighting, project management, spell <b>checking,</b> a <b>table</b> wizard, BibTeX front-end, Unicode support, different toolbars, user configuration options {{and it is}} portable (e.g. on a USB drive).It is not a LaTeX system; an additional LaTeX compiler system for Microsoft Windows (such as MiKTeX or TeX Live) is required.|$|R
50|$|In {{this way}} packets with {{destinations}} {{within the same}} zone as the originating zone are delivered immediately using a stored routing table. Packets delivered to nodes outside the sending zone avoid the overhead of <b>checking</b> routing <b>tables</b> along the way by using the reactive protocol to check whether each zone encountered contains the destination node.|$|R
40|$|Aegis is a Software Configuration Management system, which {{provides}} a method for managing concurrent development and peer review with strong auditability. These features are useful to more environments than the development of software. This paper presents two systems being managed with Aegis at AGSO: DNS and the Web. Using Aegis to manage DNS provides a reliable way to add entries to the DNS <b>tables,</b> <b>check</b> the <b>tables,</b> and generate the reverse maps. It is even generating some NIS+ tables. The system is peer reviewed, so no “broken ” changes {{are able to get}} into the system tables. The net result is a more reliable service to the users. Using Aegis to manage the AGSO We...|$|R
50|$|A rootkit is {{a program}} that uses low-level, hard-to-detect methods to subvert control of an {{operating}} system from its legitimate operators. Rootkits usually obscure their installation and attempt to prevent their removal through a subversion of standard system security. They may include replacements for system binaries, making it virtually {{impossible for them to}} be detected by <b>checking</b> process <b>tables.</b>|$|R
40|$|Tabular {{notation}} is a {{very important}} part of the functional documentation method that is used to produce computer system specifications. Many types of tables are currently used by the Software Engineering Research Group at McMaster University. Generalized decision tables are one of the types. In order to facilitate the use of tabular notation, a variety of tools were built or are being built to simplify tables, convert between <b>table</b> formats, <b>check</b> syntax, automatically generate test oracles, etc. Other types of decision tables are used by industry to write software specifications. Structured decision tables are one of the four types of tables adopted by Ontario Hydro for their safety critical software documentation. Like the Software Engineering Research Group, they also have tools to conduct syntax checking, software design verification, <b>table</b> completeness <b>checking,</b> <b>table</b> consistency <b>checking,</b> etc. The two sets of tools overlap in some areas but not others. Structured decision tables [...] ...|$|R
40|$|This command {{displays}} a table showing each {{value of a}} created variable, followed by each unique combination of values of the component variables {{that were used to}} create it, and the frequency of each combination. This command is more useful if the created and component variables have few discrete values than if they have a large number of values. <b>check,</b> contract, <b>table,</b> tabulate...|$|R
5000|$|Another {{aspect of}} Fuzions {{flexibility}} is the easy {{adaptation to the}} use of d12 or d20 dice for making <b>checks.</b> Consult the <b>table</b> below for variations of the Difficulty Values by die type: ...|$|R
60|$|By {{this time}} (my {{patience}} being completely worn out) I had taken my check-book from the table-drawer, had signed my name, and had handed the blank <b>check</b> across the <b>table</b> to my legal adviser.|$|R
40|$|We {{indicate}} how {{to extend the}} Risch algorithm to handle a class of special functions {{defined in terms of}} integrals. Most of the integration machinery for this class of functions is similar to the machinery in the algorithm which handles logarithms. A program embodying much of the extended integration algorithm has been written. It was used to <b>check</b> a <b>table</b> of integrals and it succeeded in finding some misprints in it...|$|R
30|$|Hypermap Relational Database Management System (RDBMS) {{is based}} on PostgreSQL, an {{advanced}} open source database. In Hypermap, all of the needed information is managed using different relational tables. The main tables contain the information related to the Hypermap entities, the main ones being services, layers and <b>checks.</b> Other <b>tables</b> are used by Django to store the metadata of the web application, and others are used by the task queue component to schedule tasks and their results.|$|R
50|$|Brumado has {{a campus}} of the State University of Bahia (Uneb), the only public {{university}} in the city; Baiano Federal Institute (Ifba), which also encompasses superior courses to its curriculum. The National Industrial Learning Service (SENAI) and the former Luís Eduardo Magalhães Model College (Ceep) offer technical and professional courses, {{as well as other}} private technical schools. In 2010, according to the IBGE census, 50 899 people were literate. <b>Check</b> the <b>table</b> below for a portrait of education in the municipality in 2015.|$|R
40|$|Top photo) Jenny Wrenn wearing straw hat, {{sitting in}} {{floor in front}} of a futon couch, smiling and holding a pink tray of goodies. On the wall behind her is a partial view of her "White Clothespins. " Circa 1987. Two bottom photos: Clothespin Fever Press table at Sunset Junction Street Fair. Left: Carolyn and Jenny sitting behind a table with pink and white <b>checked</b> {{tablecloth}} <b>table</b> and balloons. Behind them two unidentified people perusing wares of other table. May 23, 24, 25; Saturday, Sunday, Monday 1987...|$|R
5000|$|... "His {{managers}} {{never knew}} {{what time of day}} or night he’d show up at the kitchen door and go bird-dogging almost at a half-run through the kitchen, the pantries, the storage rooms, the refrigerators, the restaurant itself, running a finger over the shelves to check for dust, <b>checking</b> under <b>tables</b> and in cutlery drawers, checking the ranges, the storage rooms, the trays about to be served, sampling the root beer, and raising hell if everything wasn’t spotless, neat, clean, bright, polished, done efficiently, done well." ...|$|R
40|$|National Chiao-Tung University Recently, wafer {{fabrication}} {{has become more}} complicated and lengthened the product queue time. To ensure final product yield, engineers need to set up queue time limits for particular machines during wafer processing; we name it as “time constraints”. Time constraint problems are more serious when the time constraint is short, process is reentrant and batching. Generally, batch processing in {{wafer fabrication}} is matching these characteristics. To eradicate difficulties with time constraints and batching process, capacity planning must be addressed. This paper applied GI/G/m queuing theory to develop a capacity determination model for batch processing machines. The batching behavior is considered and taken as a factor to modify the mean and squared coefficient of variation of arrive rate in this model. By this queuing network model, the expected waiting time between machines in production systems can be estimated. Managers can also determine the capacity through the setting of expected rate of over time constraints. Furthermore, a <b>checking</b> <b>table</b> is derived for different utilizations, time constraints, and the probability of expected waiting time over time constraints. The approximate performance measures are compared with discrete-event simulation. The result shows {{the effectiveness of the}} proposed model and demonstrates that it is superior to the current planning method...|$|R
6000|$|He laid my <b>check</b> on the <b>table</b> {{with a low}} bow, {{and left}} me. Among the curious {{developments}} of human stupidity which occasionally present themselves to view, surely the least excusable is the stupidity which, to this day, persists in wondering why the Scotch succeed so well in life! ...|$|R
25|$|Top-down approach: This is {{the direct}} {{fall-out}} of the recursive formulation of any problem. If {{the solution to}} any problem can be formulated recursively using the solution to its sub-problems, and if its sub-problems are overlapping, then one can easily memoize or store the solutions to the sub-problems in a table. Whenever we attempt to solve a new sub-problem, we first <b>check</b> the <b>table</b> {{to see if it}} is already solved. If a solution has been recorded, we can use it directly, otherwise we solve the sub-problem and add its solution to the table.|$|R
50|$|To {{avoid this}} problem, {{transposition}} tables are used. Such a {{table is a}} hash table {{of each of the}} positions analyzed so far up to a certain depth. On encountering a new position, the program <b>checks</b> the <b>table</b> to see if the position has already been analyzed; this can be done quickly, in expected constant time. If so, the table contains the value that was previously assigned to this position; this value is used directly. If not, the value is computed and the new position is entered into the hash table.|$|R
5000|$|Top-down approach: This is {{the direct}} {{fall-out}} of the recursive formulation of any problem. If {{the solution to}} any problem can be formulated recursively using the solution to its sub-problems, and if its sub-problems are overlapping, then one can easily memoize or store the solutions to the sub-problems in a table. Whenever we attempt to solve a new sub-problem, we first <b>check</b> the <b>table</b> {{to see if it}} is already solved. If a solution has been recorded, we can use it directly, otherwise we solve the sub-problem and add its solution to the table.|$|R
5000|$|However, the Royal Mail discourages this usage {{because their}} optical {{character}} recognition technology and Mailsort lookup <b>tables</b> <b>check</b> for the post town {{at the beginning of}} a line if the postcode is missing, unreadable or incorrect. Additionally, [...] "Near" [...] and [...] "Nr." [...] can be confused with [...] "North".|$|R
40|$|In nite {{loops and}} {{redundant}} computations are long recognized open problems in Prolog. Two ways have been explored {{to resolve these}} problems: loop <b>checking</b> and <b>tabling.</b> Loop <b>checking</b> can cut innite loops, but it cannot be both sound and complete even for function-free logic programs. Tabling {{seems to be an}} eective way to resolve in-nite loops and redundant computations. However, existing tabulated resolutions, such as OLDT-resolution, SLG-resolution, and Tabulated SLS-resolution, are non-linear because they rely on the solution-lookup mode in formulating tabling. The principal disadvantage of non-linear resolutions is that they cannot be implemented using a simple stack-based memory structure like that in Prolog. Moreover, some strictly sequential operators such as cuts may not be handled as easily as in Prolog. In this paper, we propose a hybrid method to resolve innite loops and redundant computations. We combine the ideas of loop <b>checking</b> and <b>tabling</b> to establish a linear tabulated resolution called TP-resolution. TP-resolution has two distinctive features: (1) It makes linear tabulated derivations {{in the same way as}} Prolog except that innite loops are broken and redundant computations are reduced. It handles cuts as eectively as Prolog. (2) It is sound and complete for positive logic programs with the bounded-term-size property. The underlying algorithm can be implemented by an extension to any existing Prolog abstract machines such as WAM or ATOAM...|$|R
30|$|In this step, {{once the}} HMAG 1 {{receives}} a LPBU message, it <b>checks</b> its BUL <b>table</b> {{to see if}} the MN 1 is a member on its list. If the HMAG 1 find the MN 1 entry, it sends a LPBA message to the MAG 2 without any intervention from the LMA.|$|R
