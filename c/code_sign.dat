10|404|Public
5000|$|... #Caption: A Federal Route <b>code</b> <b>sign,</b> {{placed at}} pole along the road.|$|E
5000|$|... #Caption: Emergency tap <b>code</b> <b>sign</b> {{mounted on}} side of closed diving bell ...|$|E
50|$|Double Image backup {{software}} runs on Windows, laptops, workstations and Windows Servers. Double Image was first released in March 1994 and since followed by major releases with Double Image 7.0 released January 12, 2011 to become compatible with Windows 7, Windows Vista and Windows Server 2008 operating systems. Double Image 7.0.54, released June 15, 2017, includes compatibility with Windows 10, Windows 8, Windows Server 2016 and Windows Server 2012 and with added options for encryption and decryption. The Double Image code and installation package are <b>code</b> <b>sign</b> certified using SHA-2.|$|E
5000|$|... use a valid <b>code</b> <b>signing</b> {{certificate}} {{issued by}} an approved <b>code</b> <b>signing</b> authority, ...|$|R
50|$|The {{group has}} also worked to secure {{software}} distribution with digital <b>code</b> <b>signing.</b> <b>Code</b> <b>signing</b> certificates {{play a key}} role in helping users identify authentic software code from reputable publishers and receive the assurance that the code has not been tampered with beforehand.|$|R
50|$|<b>Code</b> <b>signing</b> {{can provide}} several {{valuable}} features. The most common use of <b>code</b> <b>signing</b> {{is to provide}} security when deploying; in some programming languages, {{it can also be}} used to help prevent namespace conflicts. Almost every <b>code</b> <b>signing</b> implementation will provide some sort of digital signature mechanism to verify the identity of the author or build system, and a checksum to verify that the object has not been modified. It {{can also be used to}} provide versioning information about an object or to store other meta data about an object.|$|R
50|$|BlackBerry {{announced}} on March 24, 2011, {{that it would}} expand its application ecosystem for the PlayBook to include BlackBerry Java and Android-based applications. In a press release, BlackBerry stated that developers {{would be able to}} simply repackage, <b>code</b> <b>sign,</b> and submit their Android apps into BlackBerry App World, however for the first update, only Android 2.3 applications will be able to run on the PlayBook. These applications became available in the BlackBerry Tablet OS 2.0, released on February 21, 2012. However, Java applications will not be available until a future update. Popular Android applications that have not been ported onto BlackBerry world such as Pinterest and Whatsapp can be installed by users through the sideloading process. However, after the 2.1 OS update, RIM denied this sideloading process.|$|E
40|$|We {{present a}} scheme to steganographically embed {{information}} in x 86 program binaries. We define sets of functionally-equivalent instructions, and use a key-derived selection process to encode information in machine code by using the appropriate instructions from each set. Such a scheme {{can be used to}} watermark (or fingerprint) <b>code,</b> <b>sign</b> executables, or simply create a covert communication channel. We experimentally measure the capacity of the covert channel by determining the distribution of equivalent instructions in several popular operating system distributions. Our analysis shows that we can embed only a limited amount of information in each executable (approximately 110 bit encoding rate), although this amount is sufficient for some of the potential applications mentioned...|$|E
40|$|International audienceA new <b>code</b> <b>sign</b> {{implementation}} of vector median rational hybrid filter based on efficient hardware/software implementation is introduced {{and applied to}} colour image filtering problems. This filter is used essentially to remove impulsive and Gaussian noise in colour images. In our design we start by implementing the software solution in system on programmable chip context using NIOS-II softcore processor and µClinux as operating system. We evaluate the execution time of the whole filtering process. Than we add a hardware accelerator part. This latter is implemented using fast parallel architecture. Compared to the software solution results, {{the use of the}} hardware accelerator improves clearly the filtering speed and maintains the good filtering quality as shown by simulations...|$|E
5000|$|... #Subtitle level 3: Securing Software Distribution with Digital <b>Code</b> <b>Signing</b> ...|$|R
5000|$|Rectangle-shaped highway shield with highway <b>code</b> <b>signs</b> {{are black}} and white ...|$|R
50|$|JKR hexagon-shaped highway shield with expressway/highway <b>code</b> <b>signs</b> {{are black}} and yellow.|$|R
40|$|Abstract: A new <b>code</b> <b>sign</b> {{implementation}} of vector median rational hybrid filter based on efficient hardware/software implementation is introduced {{and applied to}} colour image filtering problems. This filter is used essentially to remove impulsive and Gaussian noise in colour images. In our design we start by implementing the software solution in system on programmable chip context using NIOS-II softcore processor and µClinux as operating system. We evaluate the execution time of the whole filtering process. Than we add a hardware accelerator part. This latter is implemented using fast parallel architecture. Compared to the software solution results, {{the use of the}} hardware accelerator improves clearly the filtering speed and maintains the good filtering quality as shown by simulations. Keywords: Filtering, co-design, FPGA implementation, SoPC, NIOS-II processor...|$|E
40|$|Problem statement: Nowadays, Reconfigurable System on Chip (RSoC) shows great {{potential}} in many high performance applications that benefit from Hardware customization. Approach: In this study, {{we present a}} design approach of FPGA based Controller for electromechanical system. In this way, we present solutions obtained by Hardware/Software <b>Code</b> <b>sign</b> methodology targeted {{for the implementation of}} a motor control drive system using Multiprocessor SoC (MPSoC) architecture. In order to enhance flexibility and performance of the considered system, we design different modules of HW current controller of electronic motor. A Dynamic Partial Reconfiguration (DPR) mechanism allowing switching on the fly between those modules is described. Results: Test and validation are done to validate the approach adopted. Experimental results confirmed the efficiency of the approach and allow us to determine more recommendations that should be considered while designing a RSoC control drive system. Conclusion/Recommendations: DPR enable flexible control system hardware design. This concept allows switching between different low order controls...|$|E
40|$|Abstract- This paper shows {{far-field}} wireless powering for low-power wireless sensors. Sometimes in {{many applications}} where {{the sensors are}} used, is difficult or impossible to change the batteries of sensor unit because we don’t know the exact position of the sensors or sensors are mobile. Here expected radio-frequency (RF) power densities is {{in the range of}} 20 – 200 -µW/cm 2, overall size of sensor is small which transmit data at low duty cycles. For these type of applications low-power nondirective wireless powering is appropriate for sensors. The power is provided to the sensor platform through an antenna which receives incident electromagnetic waves in the gigahertz frequency range. This antenna gives the energy to a rectifier circuit which charges a storage device (e. g., thin-film battery) through an efficient power management circuit. The entire platform, including sensors and a low-power wireless transmitters are controlled through a low-power microcontroller. For low incident power density levels, <b>code</b> <b>sign</b> of the RF powering and the power management circuits is required for optimal performance. The power management circuitry are presented with integrated antenna rectifiers operating in the 1. 96 -GHz cellular and in 2. 4 -GHz industrial – scientific – medical (ISM) bands...|$|E
5000|$|JKR hexagon-shaped highway shield with highway <b>code</b> <b>signs</b> {{are black}} and yellow ...|$|R
50|$|The Microsoft Authenticode <b>code</b> <b>signing</b> {{system uses}} X.509 to {{identify}} authors of computer programs.|$|R
5000|$|DLLs {{listed in}} the {{registry}} entry [...] are loaded into every process that loads User32.dll during the initial call of that DLL. Beginning with Windows Vista, AppInit_DLLs are disabled by default. Beginning with Windows 7, the AppInit_DLL infrastructure supports <b>code</b> <b>signing.</b> Starting with Windows 8, the entire AppInit_DLL functionality is disabled when Secure Boot is enabled, regardless of <b>code</b> <b>signing</b> or registry settings.|$|R
40|$|The {{countermeasure}} 2 ̆ 2 Turning traffic must {{yield to}} pedestrians 2 ̆ 2 (Manual on Uniform Traffic Control Devices (MUTCD) <b>code</b> <b>sign</b> R 10 - 15) {{is used to}} address problems such as pedestrians not waiting for signals or an acceptable gap before crossing the streets resulting in conflicts between right turning vehicles and pedestrians. The aim {{of this paper is}} to evaluate the effectiveness of this installation. Various measures of effectiveness (MOEs) were identified. These MOEs are pedestrian / vehicle conflict, presence of pedestrians in the crosswalk during the flashing DON 2 ̆ 7 T WALK and during the all red, percent of vehicles blocking the crosswalk, percent of right turn on red drivers coming to a complete stop, percent of turning drivers yielding to pedestrians, percent of pedestrians who look at the start of WALK signal for turning vehicles, pedestrian delay, and vehicle delay. The study site is Harmon Avenue / Paradise Road intersection located in the Las Vegas metropolitan area. A 2 ̆ 2 before-and-after 2 ̆ 2 data collection strategy was applied to test any significant difference in the identified MOEs between the two study periods. Data were collected during AM and PM peak hours. Statistical tests, test for two proportions and two-sample t-test, were used to test the significance of differences in MOEs during the two study periods. The result shows that motorists yielding behavior while turning either on red or green increased during the after study period. A significant reduction was observed in vehicles blocking the crosswalk while a significant increase in vehicles stopped completely before turning on red (P 3 ̆c 0. 001). Average pedestrian delay increased during the after study period from 44 sec/pedestrian to 61 sec/pedestrian whereas the average vehicle delay increased from 67 sec/vehicle to 76 sec/vehicle. The installation of R 10 - 15 effective increases the yielding behavior of turning traffic at green in presence of pedestrians which also leads to increase in both pedestrian and vehicle delay...|$|E
50|$|The growing Internet of Things (IoT) {{is giving}} <b>code</b> <b>signing</b> {{critical}} new importance. As {{more and more}} sensors and devices are connected to close network ecosystems, certificate issuance mechanisms have been extended beyond identifying people to identifying machines. Device credentialing enables control over the manufacturing process of high technology products and protects against unauthorized production of counterfeits. Together with <b>code</b> <b>signing,</b> the technology ensures physical authenticity and the authenticity and integrity of the code they possess {{at the time of}} manufacture {{through the use of a}} digital birth certificate, or during subsequent upgrades through code validation any time during the product lifecycle. This is creating a new dimension for <b>code</b> <b>signing,</b> and elevating the security awareness and need to maintain private signing keys secured within a dedicated protected environment to establish a root of trust for the entire system. Given the prevalence of malware and Advanced Persistent Threats (APTs), many software vendors, providers of online services, enterprise IT organizations and manufacturers of high-technology IoT devices are under pressure to increase the security of their high technology manufacturing and <b>code</b> <b>signing</b> process.|$|R
5000|$|If it {{was turned}} on in all browsers by default, {{including}} <b>code</b> <b>signing,</b> {{it would probably}} crash the infrastructure.|$|R
50|$|Davidson {{students}} {{are bound by}} a strict honor <b>code,</b> <b>signed</b> by each student {{at the start of}} their Freshman year.|$|R
5000|$|Extended Key Usage: The {{applications}} {{in which the}} certificate may be used. Common values include TLS server authentication, email protection, and <b>code</b> <b>signing.</b>|$|R
50|$|Since 2014, {{the project}} is {{actively}} maintained by Adrien J. and Maxime C. with the fork Dokany and gracefully <b>code</b> <b>signed</b> by the company ISLOG.|$|R
50|$|<b>Code</b> <b>signing</b> {{is used on}} Windows and Mac OS X to {{authenticate}} software on first run, ensuring that the software has not been maliciously tampered with by a third-party distributor or download site. This form of <b>code</b> <b>signing</b> is not used on Linux because of that platform's decentralized nature, the package manager being the predominant mode of distribution for all forms of software (not just updates and patches), {{as well as the}} open source model allowing direct inspection of the source code if desired.|$|R
40|$|This {{document}} {{provides an}} overview of two emulation-based software protection schemes which pro-vide protection from reverse code engineering (RCE) and software exploitation using encrypted code execution and page-granularity <b>code</b> <b>signing,</b> respectively. The two protection mechanisms execute within trusted emulators while remaining out-of-band of untrusted systems being emulated. The integrity and reliability of the protection mechanisms depend upon attackers remaining sandboxed within the emulated environments. The three sections below provide an overview of emulation sandboxing, emulation-based encrypted code execution and emulation-based page granularity <b>code</b> <b>signing...</b>|$|R
25|$|Other new {{features}} included its on-the-fly file encryption software with <b>code</b> <b>signing</b> and Keychain technologies, Remote Networking and File Server packages, and much improved list of USB drivers.|$|R
5000|$|According to Song [...] "if {{you want}} to engage in {{theological}} decoding these <b>codes,</b> <b>signs,</b> and symbols ... we need to deepen our theological imagination and enhance its power." ...|$|R
50|$|Certificates {{can also}} be used to {{validate}} signatures on programs to ensure they were not tampered with during delivery. Authenticode is one example of a <b>code</b> <b>signing</b> scheme.|$|R
50|$|Any {{certificate}} that {{cannot be}} used to sign other certificates. For instance, TLS/SSL server and client certificates, email certificates, <b>code</b> <b>signing</b> certificates, and qualified certificates are all end-entity certificates.|$|R
50|$|Sigreturn-oriented {{programming}} (SROP) is {{a computer}} security exploit technique that allows an attacker to execute code in presence of security measures with non-executable memory and <b>code</b> <b>signing</b> being an example.|$|R
50|$|The Flame malware {{successfully}} used a new variation of a chosen-prefix collision attack to spoof <b>code</b> <b>signing</b> of its components by a Microsoft root certificate that still used the compromised MD5 algorithm.|$|R
5000|$|A {{software}} taggant {{is a form}} of <b>code</b> <b>signing</b> {{somewhat similar}} to Authenticode (which is used for programs operating under Microsoft Windows). The key differences between a software taggant and Authenticode are: ...|$|R
5000|$|Another {{criticism}} is that SmartScreen makes non-commercial/small end software development unaffordable. Developers {{either have to}} purchase standard <b>code</b> <b>signing</b> certificates or more expensive extended validation certificates. Extended validation certificates allow the developer to immediately establish reputation with SmartScreen [...] but are often unaffordable for people developing software either for free or not for immediate profit. The standard <b>code</b> <b>signing</b> certicates however pose a [...] "catch-22" [...] for developers, since SmartScreen warnings make people reluctant to download software, as a consequence to get downloads requires first passing Smartscreen, passing SmartScreen requires getting reputation and getting reputation is dependent on downloads.|$|R
50|$|In 1951 he {{switched}} <b>codes,</b> <b>signing</b> for Wigan. He made his début on 22 December 1951. He later also played three matches for the Other Nationalities {{side in the}} European Rugby League Championship.|$|R
50|$|Return-oriented {{programming}} (ROP) is {{a computer}} security exploit technique that allows an attacker to execute code {{in the presence of}} security defenses such as non-executable memory (W xor X technique) and <b>code</b> <b>signing.</b>|$|R
