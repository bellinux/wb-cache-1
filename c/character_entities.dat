15|111|Public
25|$|XML (and hence XHTML) defines an &apos; {{character}} {{entity reference}} for the ASCII typewriter apostrophe. No equivalent entity {{is defined in}} the HTML 4 standard, despite all the other predefined <b>character</b> <b>entities</b> from XML being defined in HTML. If it cannot be entered literally in HTML, a numeric character reference could be used instead, such as &#x27; or &#39;. &apos; is officially supported in HTML since HTML 5.|$|E
5000|$|... "Tag soup" [...] {{encompasses}} many common authoring mistakes, such as malformed HTML tags, improperly nested HTML elements, and unescaped <b>character</b> <b>entities</b> (especially ampersands (&) and less-than signs (<)).|$|E
5000|$|However, the {{references}} to predefined numeric <b>character</b> <b>entities</b> are substituted wherever they occur, without needing a validating parser (they are only introduced by the [...] "&" [...] character).|$|E
5000|$|Unlike {{traditional}} HTML {{with its}} large range of <b>character</b> <b>entity</b> references, in XML {{there are only}} five predefined <b>character</b> <b>entity</b> references. These are used to escape characters that are markup sensitive in certain contexts: ...|$|R
50|$|In {{addition}} to native character encodings, characters {{can also be}} encoded as character references, which can be numeric character references (decimal or hexadecimal) or <b>character</b> <b>entity</b> references. <b>Character</b> <b>entity</b> references are also {{sometimes referred to as}} named entities, or HTML entities for HTML. HTML's usage of character references derives from SGML.|$|R
50|$|For {{the full}} list, see: List of XML and HTML <b>character</b> <b>entity</b> references.|$|R
5000|$|Instead, HTML {{standards}} predefine a large set {{of several}} hundred named <b>character</b> <b>entities,</b> which can still be handled as standard parsed entities defined in the DTD used by the parser.|$|E
50|$|HTML 4, for example, has 252 {{built-in}} <b>character</b> <b>entities</b> that don't {{have to be}} explicitly declared. XML has five. XHTML has {{the same}} five as XML, but if its DTDs are explicitly used, then it has 253 (&apos; being the extra entity beyond those in HTML 4).|$|E
50|$|There {{is another}} kind of {{character}} reference called a character entity reference, which allows a character {{to be referred to}} by a name instead of a number. (Naming a character creates a character entity.) HTML defines some <b>character</b> <b>entities,</b> but not many; all other characters can only be included by direct encoding or using NCRs.|$|E
5000|$|The HTML <b>character</b> <b>entity</b> {{references}} are [...] and [...] for lower and upper case, respectively.|$|R
50|$|In HTML, a {{semicolon}} is used {{to terminate}} a <b>character</b> <b>entity</b> reference, either named or numeric.|$|R
25|$|In HTML/XHTML, the upper- and lower-case phi <b>character</b> <b>entity</b> {{references}} are &Phi; (Φ) and &phi; (φ), respectively.|$|R
50|$|An entity {{is similar}} to a macro. The entity {{declaration}} assigns it a value that is retained throughout the document. A common use is to have a name more recognizable than a numeric character reference for an unfamiliar <b>character.</b> <b>Entities</b> help to improve legibility of an XML text. In general, there are two types: internal and external.|$|E
50|$|Other {{features}} included rlogin and telnet hyperlinks, Cyrillic support (added at 25 November 1994 in version 2.15), {{and ability}} {{to be set up}} as a proxy client. The browser could run as a background process and download files. The Line Mode Browser has had problems recognizing <b>character</b> <b>entities,</b> properly collapsing whitespace, and supporting tables and frames.|$|E
5000|$|<b>Character</b> <b>entities</b> can be {{included}} in an HTML document via the use of entity references, which take the form ''''''EntityName'''''', where EntityName {{is the name of}} the entity. For example, , much like [...] or , represents : the em dash character [...] " [...] - [...] " [...] even if the character encoding used doesn't contain that character.|$|E
5000|$|HTML 2 (1995) {{incorporated}} the [...] "&shy;" [...] <b>character</b> <b>entity</b> from SGML, but explicitly discouraged its use.|$|R
25|$|In HTML <b>character</b> <b>entity</b> reference, {{the codes}} for Ñ and ñ are &Ntilde; and &ntilde; or &#209; and &#241;.|$|R
5000|$|In HTML <b>character</b> <b>entity</b> reference, {{the codes}} for Ñ and ñ are [...] and [...] or [...] and [...]|$|R
5000|$|Predefined named <b>character</b> <b>entities</b> {{are similar}} to {{internal}} entities: 5 of them however are treated specially in all SGML, HTML and XML parsers. These entities are a bit different from normal parsed entities, because when a named character entity reference is encountered in the document, the reference is also replaced immediately by the character content defined in the entity, but the parsing continues after the replacement text, which is immediately inserted literally in the currently parsed token (if such character is permitted in the textual value of that token). This allows some characters that are needed for the core syntax of HTML or XML themselves to be escaped from their special syntactic role (notably [...] "&" [...] which is reserved for beginning entity references, [...] "<" [...] or [...] ">" [...] which delimit the markup tags, and [...] "double" [...] or 'single' quotation marks, which delimit the values of attributes and entity definitions). Predefined <b>character</b> <b>entities</b> also include numeric character references that are handled {{the same way and}} {{can also be used to}} escape the characters they represent, or to bypass limitations in the character repertoire supported by the document encoding.|$|E
50|$|In HTML, {{there is}} a {{standard}} set of 252 named <b>character</b> <b>entities</b> for characters - some common, some obscure - that are either not found in certain character encodings or are markup sensitive in some contexts (for example angle brackets and quotation marks). Although any Unicode character can be referenced by its numeric code point, some HTML document authors prefer to use these named entities instead, where possible, as they are less cryptic and were better supported by early browsers.|$|E
50|$|If the XML {{document}} type declaration includes any SYSTEM identifier for the external subset, it can't be safely processed as standalone: the URI should be retrieved, otherwise {{there may be}} unknown named <b>character</b> <b>entities</b> whose definition {{may be needed to}} correctly parse the effective XML syntax in the internal subset or in the document body (the XML syntax parsing is normally performed after the substitution of all named entities, excluding the five entities that are predefined in XML and that are implicitly substituted after parsing the XML document into lexical tokens). If it just includes any PUBLIC identifier, it may be processed as standalone, if the XML processor knows this PUBLIC identifier in its local catalog from where it can retrieve an associated DTD entity.|$|E
2500|$|The HTML 4 <b>character</b> <b>entity</b> {{references}} for the Greek {{capital and}} small letter lambda are [...] "&#923;" [...] and [...] "&#955;", respectively.|$|R
5000|$|SGML's [...] "Numeric and Special Graphic" [...] (isonum) <b>character</b> <b>entity</b> set (ISO 8879:1986) {{includes}} [...] "&shy;" [...] for the ISO 8859-1 soft hyphen.|$|R
50|$|One {{drawback}} {{of escape}} sequences, when used by people, {{is the need}} to memorize the codes that represent individual characters (see also: <b>character</b> <b>entity</b> reference, numeric <b>character</b> reference).|$|R
40|$|This is {{an attempt}} to make an {{overview}} of SGML/XML <b>character</b> <b>entities</b> in ISO 8879 : 1986 and their L ATEX equivalents. It is also a handy reference to the ISO <b>character</b> <b>entities</b> for non-L ATEX users as it shows the visual appearance of the <b>character</b> <b>entities.</b> The latest version of this documentation and the source material resides a...|$|E
40|$|As you design Web pages, {{there may}} be {{occasions}} {{when you want to}} insert characters that arenot available on your keyboard. Or you may wish to use characters that could be confused as HTML markup or JavaScript code (the> and < symbols, for example). You also may find that you have a need to use certain international characters. In all of these situations, you can solve your problem by making use of entities. The numeric and <b>character</b> <b>entities</b> listed in the tables that follow are taken from the International Standards Organization’s list of Latin characters (ISO 8859 - 1). As you browse the list, you will notice that some of the characters include both numeric and <b>character</b> <b>entities,</b> while others have only the numeric entity. A number of other entity lists are available, including lists of mathematical operators, symbols, Greek letters, and additional internationalization characters. These {{can be found at the}} World Wide Consortium’s Web site, at www. w 3. org/TR/html 4 /charset. html#didx. character_entity_references. Commonly Used Entities The following table contains a list of commonly used entities and symbols. You’ll find most of the characters you need in this list. More extensive lists may be found at the W 3 C’s HTML page, www. w 3. org...|$|E
40|$|Language {{identification}} of written {{text in the}} domain of Latin-script based languages is a well-studied research field. However, new challenges arise when it is applied to non-Latin-script based languages, especially for Asian languages ' web pages. The objective {{of this paper is to}} propose and evaluate the effectiveness of adapting Universal Declaration of Human Rights and Biblical texts as a training corpus, together with two new heuristics to improve an n-gram based language identification algorithm for Asian languages. Extension of the training corpus produced improved accuracy. Improvement was also achieved by using byte-sequence based HTML parser and a HTML <b>character</b> <b>entities</b> converter. The performance of the algorithm was evaluated based on a written text corpus of 1, 660 web pages, spanning 182 languages from Asia, Africa, the Americas, Europe and Oceania. Experimental result showed that the algorithm achieved a language identification accuracy rate of 94. 04 %...|$|E
5000|$|The non-obligatory symbol {{used in a}} mask work {{protection}} {{notice is}} Ⓜ (M enclosed in a circle; Unicode code point [...] or HTML numeric <b>character</b> <b>entity</b> [...] ) or *M*.|$|R
5000|$|The HTML 4 <b>character</b> <b>entity</b> {{references}} for the Greek {{capital and}} small letter lambda are [...] "&#923;" [...] and [...] "&#955;", respectively.The Unicode code points for lambda are U+039B and U+03BB.|$|R
50|$|In {{addition}} to its suite of syntax usage, Textile automatically inserts <b>character</b> <b>entity</b> references for apostrophes, opening and closing single and double quotation marks, ellipses and em dashes, to name a few.|$|R
5000|$|Any kind of dash {{can be used}} {{directly}} in an HTML document, but HTML also lets them be entered using character references. The em dash and the en dash are special in {{that they can be}} written using <b>character</b> <b>entity</b> references as [...] and , respectively.|$|R
2500|$|The figure dash {{is often}} unavailable; in this case, one may use a hyphen-minus instead. In Unicode, the figure dash is [...] (decimal 8210). HTML authors must use the numeric forms &#8210; or &#x2012; to type it unless the file is in Unicode; {{there is no}} {{equivalent}} <b>character</b> <b>entity.</b>|$|R
50|$|As of version 4.0, HTML {{defines a}} set of 252 <b>character</b> <b>entity</b> {{references}} and {{a set of}} 1,114,050 numeric character references, both of which allow individual characters to be written via simple markup, rather than literally. A literal character and its markup counterpart are considered equivalent and are rendered identically.|$|R
5000|$|... "Transparent name mangling" [...] {{involves}} replacing {{characters in}} the address with equivalent HTML references {{from the list of}} XML and HTML <b>character</b> <b>entity</b> references, e.g. the '@' gets replaced by either 'U+0040' or '&#64; and the '.' gets replaced by either 'U+002E'or '&#46;' with the user knowing to take out the dashes.|$|R
50|$|Gruber wrote a Perl script, , which {{converts}} marked-up text {{input to}} valid, well-formed XHTML or HTML and replaces left-pointing angle brackets '' and ampersands '' with their corresponding <b>character</b> <b>entity</b> references. It {{can be used}} as a standalone script, as a plugin for Blosxom or Movable Type, or as a text filter for BBEdit.|$|R
5000|$|In contrast, a <b>character</b> <b>entity</b> {{reference}} {{refers to}} a character {{by the name of}} an entity which has the desired character as its replacement text. The entity must either be predefined (built into the markup language) or explicitly declared in a Document Type Definition (DTD). The format is the same as for any entity reference: ...|$|R
