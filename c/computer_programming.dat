4496|10000|Public
5|$|An Introduction to <b>Computer</b> <b>Programming</b> and Data Structures using MACRO-11 (1981). MACRO-11 was an {{assembly}} language for PDP-11 computers.|$|E
5|$|Avery Coonley {{began using}} {{computers}} for instruction in 1971 and offering <b>computer</b> <b>programming</b> to students {{as young as}} the fourth group in 1976. Desktop computers were brought into the classrooms to teach math, language arts, music, art, and <b>computer</b> <b>programming,</b> in 1978. Students begin learning basic keyboard and mouse skills in kindergarten and progress to multimedia presentations, data management, and software coding in the eighth group.|$|E
5|$|Hexadecimal is a base-16 {{numeral system}} {{used in the}} fields of <b>computer</b> <b>programming</b> and mathematics. The key is an {{ordinary}} number most widely known by its hexadecimal representation; in decimal notation, it is 13,256,278,887,989,457,651,018,865,901,401,704,640.|$|E
5000|$|Can a <b>computer</b> <b>program</b> only be {{excluded}} as a <b>computer</b> <b>program</b> as such {{if it is}} explicitly claimed as a <b>computer</b> <b>program?</b> ...|$|R
40|$|Cover title. Includes bibliographies. v. 1. Theory {{manual for}} STARS- 2 P digital <b>computer</b> <b>program.</b> [...] v. 2. User's manual for STARS- 2 P digital <b>computer</b> <b>program.</b> [...] v. 3. Engineer's program manual for STARS- 2 P digital <b>computer</b> <b>program.</b> [...] v. 4. SATELLITE- 1 P program for STARS- 2 P digital <b>computer</b> <b>program.</b> Mode of access: Internet...|$|R
50|$|An {{application}} launcher is a <b>computer</b> <b>program</b> that helps a user {{to locate and}} start other <b>computer</b> <b>programs.</b> An {{application launcher}} provides shortcuts to <b>computer</b> <b>programs,</b> and stores the shortcuts in one place so they are easier to find.|$|R
5|$|Erez Lieberman Aiden {{grew up in}} Brooklyn {{with three}} siblings. He began <b>computer</b> <b>programming</b> {{at the age of}} seven. His father, Aharon Lieberman, was a {{technology}} entrepreneur and owned a factory in New Jersey. As a child Lieberman Aiden spoke Hebrew and Hungarian, making English his third language.|$|E
5|$|The {{professor}} {{has received}} acclaim from critics, particularly for his bizarre inventions {{such as the}} hamburger earmuffs, and he has appeared on many reviewers' listings of their favorite supporting characters from The Simpsons. Frink has been featured in other media relating to the show, such as comics, video games, and a simulator ride at Universal Studios Florida. The character's popularity has led to him giving the name to the <b>computer</b> <b>programming</b> language Frink.|$|E
5|$|Wales {{wanted to}} {{participate}} in the online-based entrepreneurial ventures which were increasingly popular and successful during the mid-1990s. His experience (from gaming in his youth) impressed on him the importance of networking. Wales was interested in computer science, experimenting with source code on the Internet and improving his skill at <b>computer</b> <b>programming.</b> In his spare time after work at Chicago Options Associates, Wales constructed his own web browser. While at the firm, he noted the successful 1995 initial public offering of Netscape Communications.|$|E
5000|$|Gene {{expression}} programming (GEP) {{also uses}} populations of <b>computer</b> <b>programs.</b> These complex <b>computer</b> <b>programs</b> are encoded in simpler linear chromosomes of fixed length, which are afterwards expressed as expression trees. Expression trees or <b>computer</b> <b>programs</b> evolve because the chromosomes undergo mutation and recombination {{in a manner}} similar to the canonical GA. But thanks to the special organization of GEP chromosomes, these genetic modifications always result in valid <b>computer</b> <b>programs.</b>|$|R
5000|$|... otherwise, {{since all}} <b>computer</b> <b>programs</b> are {{suitable}} {{to run on}} a computer, no distinction could be made between, on the one hand, <b>computer</b> <b>programs</b> with a technical character and, on the other hand, <b>computer</b> <b>programs</b> as such. In other words, {{the mere fact that}} an invention is a <b>computer</b> <b>program</b> is not a sufficient reason to conclude that it has a technical character, when interpreting these legal provisions.|$|R
25|$|A {{part of a}} <b>computer</b> <b>program</b> that {{performs}} a well-defined task is known as an algorithm. A collection of <b>computer</b> <b>programs,</b> libraries, and related data {{are referred to as}} software. <b>Computer</b> <b>programs</b> may be categorized along functional lines, such as application software and system software.|$|R
5|$|Wendi Richter {{grew up in}} Dallas, Texas, {{and before}} she entered the sport of {{professional}} wrestling, she worked on her family's ranch and took part in rodeo competitions. She attended Bossier High School, where she participated in volleyball, track, and cross-country. She later majored in <b>computer</b> <b>programming</b> at Dallas's Draughon's Business College. In the 1980s, she moved to Crystal River, Florida.|$|E
5|$|After the Sequel was {{inspired}} by Sonic Heroes and other games {{both inside and outside}} the Sonic series, and it was developed with Sonic Worlds, an engine based in Multimedia Fusion 2 that reduces the amount of <b>computer</b> <b>programming</b> involved in game creation. It was released as a free download for Microsoft Windows personal computers. The game was very well received by video game journalists, who lauded its preservation of retro Sonic gameplay and its eclectic, 1990s-style soundtrack. The trilogy of Before the Sequel, After the Sequel, and their successor Sonic Chrono Adventure performed unusually well for fangames, having been downloaded 120,000 times by March 2014.|$|E
5|$|In C++ <b>computer</b> <b>programming,</b> allocators are an {{important}} component of the C++ Standard Library. The standard library provides several data structures, such as list and set, commonly referred to as containers. A common trait among these containers is their ability to change size during the execution of the program. To achieve this, some form of dynamic memory allocation is usually required. Allocators handle all the requests for allocation and deallocation of memory for a given container. The C++ Standard Library provides general-purpose allocators that are used by default, however, custom allocators may also be supplied by the programmer.|$|E
40|$|It is {{well known}} that the {{computer}} in lighting technology is a vital component for lighting designers. Lighting <b>computer</b> <b>programs</b> are preferred in preparing architectural projects in lighting techniques, especially in lighting calculations. Lighting <b>computer</b> <b>programs,</b> which arise with the aim of helping lighting designers, gain more interest day by day. The most important property of lighting <b>computer</b> <b>programs</b> is the ability to enable the simulation of lighting projects without requiring any real life applications. In addition, with the use of lighting <b>computer</b> <b>programs,</b> incomplete parts of projects are determined to make necessary calculations. In this study, the details about lighting <b>computer</b> <b>programs,</b> especially as used in interior lighting, are mentioned. A comparison of programs will be made by pointing out necessary characteristics in lighting <b>computer</b> <b>programs...</b>|$|R
50|$|The {{abstract}} {{computer is}} used to give precise meaning to the phrase `simple explanation'. In the formalism used, explanations, or theories of phenomena are <b>computer</b> <b>programs</b> that generate observation strings whenrun on the abstract computer. A simple explanation is a short computer program; a complex explanation is a long <b>computer</b> <b>program.</b> Simple explanations are more likely, so a high-probability observation string is one generatedby a short <b>computer</b> <b>program,</b> or perhaps by any {{of a large number}} of slightly longer <b>computer</b> <b>programs.</b> A low-probability observation string is one that can only be generated by a long <b>computer</b> <b>program.</b>|$|R
40|$|The {{development}} of uniform <b>computer</b> <b>program</b> standards and conventions for the modular space station is discussed. The accomplishments analyzed are: (1) {{development of}} <b>computer</b> <b>program</b> specification hierarchy, (2) definition of <b>computer</b> <b>program</b> development plan, and (3) recommendations for utilization of all operating on-board space station related data processing facilities...|$|R
5|$|Stoppelman {{was born}} in Arlington, Virginia in 1977. His mother, Lynn, was an English teacher, and his father, John, was a {{securities}} lawyer. Stoppelman is Jewish. He attended a Reform temple {{as a child and}} had a Bar Mitzvah. As a child Stoppelman had an interest in computers and business and began investing in stocks at the age of 14. Stoppelman aspired to be a video game developer and took <b>computer</b> <b>programming</b> classes, where he learned the Turbo Pascal software programming system. He attended the University of Illinois at Urbana-Champaign and obtained a bachelor's degree in computer engineering in 1999. After graduating he took a job with @Home Network.|$|E
5|$|All {{students}} {{enroll in}} one of five magnet programs. The High School University (HSU) magnet offers a traditional college preparatory curriculum with electives. The Math/Science/Technology (MST) magnet specifically prepares students for college programs in engineering, science and math. Minimal requirements for MST students include courses in algebra, trigonometry, calculus (including mandatory AP Calculus), biology, chemistry and <b>computer</b> <b>programming.</b> The Journalism & Communication (J) magnet focuses on journalism, publishing, and media production. To earn class credit, J students can participate in production of the school's national award-winning yearbook (The Crimson), student newspaper (The Crimson Record), award-winning literary magazine (One Blue Wall), multimedia website (RedEye) or a weekly morning television show called Manual AM, which is broadcast to all classrooms. The J program was formerly known as CMA (Communications and Media Arts), but the name was changed so that the Manual program would stand out from others in the district with similar names.|$|E
5|$|In 1946, John Mauchly {{made the}} first mention of binary search {{as part of the}} Moore School Lectures, the first ever set of lectures {{regarding}} any computer-related topic. Every published binary search algorithm worked only for arrays whose length is one less than a power of two until 1960, when Derrick Henry Lehmer published a binary search algorithm that worked on all arrays. In 1962, Hermann Bottenbruch presented an ALGOL 60 implementation of binary search that placed the comparison for equality at the end, increasing the average number of iterations by one, but reducing to one the number of comparisons per iteration. The uniform binary search was presented to Donald Knuth in 1971 by A. K. Chandra of Stanford University and published in Knuth's The Art of <b>Computer</b> <b>Programming.</b> In 1986, Bernard Chazelle and Leonidas J. Guibas introduced fractional cascading as a method to solve numerous search problems in computational geometry.|$|E
40|$|Many {{seemingly}} different {{problems in}} artificial intelligence, symbolic processing, and machine learning {{can be viewed}} as requiring discovery of a <b>computer</b> <b>program</b> that produces some desired output for particular inputs. When viewed in this way, the process of solving these problems becomes equivalent to searching a space of possible <b>computer</b> <b>programs</b> for a most fit individual <b>computer</b> <b>program.</b> The new genetic programming paradigm described herein provides a way to search for this most fit individual <b>computer</b> <b>program.</b> In this new genetic programming paradigm, populations of <b>computer</b> <b>programs</b> are genetically bred using the Darwinian principle of survival of the fittest and using a genetic crossover (recombination) operator appropriate for genetically mating <b>computer</b> <b>programs.</b> In this paper, the process of formulating and solving problems using this new paradigm is illustrated using examples from various areas...|$|R
5000|$|... 1. Article 1(2) of the <b>Computer</b> <b>Programs</b> Directive (Council Directive 91/250/EEC of 14 May 1991) must be {{interpreted}} as meaning that neither the functionality of a <b>computer</b> <b>program</b> nor the programming language and the format of data files used in a <b>computer</b> <b>program</b> in order to exploit certain of its functions constitute a form of expression of that program and, as such, are not protected by copyright in <b>computer</b> <b>programs</b> {{for the purposes of}} that directive.|$|R
40|$|The {{development}} of a <b>computer</b> <b>program</b> is reported for extracting features from remotely sensed data presented in digital image form. This <b>computer</b> <b>program</b> requires no human supervision or prejudgment and operates unassisted on the raw digital data. A condensed general background is included on remote sensing of earth features and a short synopsis {{on some of the}} most commonly used types of feature extraction techniques. Results obtained from the unsupervised feature extraction <b>computer</b> <b>program</b> along with a description and listing of the <b>computer</b> <b>program</b> are presented. Prepared at George C. Marshall Space Flight Center. Cover title. Bibliography: p. 84 - 85. The {{development of}} a <b>computer</b> <b>program</b> is reported for extracting features from remotely sensed data presented in digital image form. This <b>computer</b> <b>program</b> requires no human supervision or prejudgment and operates unassisted on the raw digital data. A condensed general background is included on remote sensing of earth features and a short synopsis on some of the most commonly used types of feature extraction techniques. Results obtained from the unsupervised feature extraction <b>computer</b> <b>program</b> along with a description and listing of the <b>computer</b> <b>program</b> are presented. Mode of access: Internet...|$|R
5|$|Chris Stamper {{was born}} in 1958. He had a long-standing {{interest}} in electronics, and built an oscilloscope in his youth. While at university, he built a kit computer with an 8-bit processor and taught himself how to program by creating traffic light signalling software. He attended Loughborough University of Technology {{with the intent of}} earning degrees in electronics and physics, but left the university in 1981 to pursue <b>computer</b> <b>programming</b> full-time. Chris worked with arcade machine electronics, resolving software bugs and converting Space Invaders into Galaxian machines. He persuaded his brother Tim, two years younger (b. February 1961) to join him. The brothers worked as game designers at the arcade game company Associated Leisure with a college friend, John Lathbury. They followed the company's director when he started his own business, Zilec Electronics, which worked on arcade conversions. They worked on 12 arcade games, including Gyruss and Blue Print, and others whose names were kept secret and sold to other arcade manufacturers, including Konami and Sega. The job included international travel to Japan, where the brothers became acquainted with the Japanese game industry. During this time, Chris purchased, studied, and taught himself to program the new ZX80 processor within two years.|$|E
25|$|In 1990 he {{was awarded}} the one-of-a-kind {{academic}} title of Professor of The Art of <b>Computer</b> <b>Programming,</b> which has since been revised to Professor Emeritus of The Art of <b>Computer</b> <b>Programming.</b>|$|E
25|$|In May 2017, the Emmaus High School <b>computer</b> <b>programming</b> {{team won}} the American Computer Science League Invitational All-Star contest, a global tournament of the best high school-age <b>computer</b> <b>programming</b> teams {{from around the world}} held in Thousand Oaks, California.|$|E
40|$|Sources of {{geometric}} and radiometric fidelity {{errors in}} AN/APQ- 102 A radar imagery are discussed, {{along with a}} digital <b>computer</b> <b>program</b> to correct the distortions. The major effort, a <b>computer</b> <b>program</b> which will process digitalized recorded AN/APQ- 102 A phase histories into imagery, is described. All <b>computer</b> <b>programs</b> are listed...|$|R
40|$|This paper {{introduces}} a design and optimization <b>computer</b> simulation <b>program</b> for autonomous hybrid PV/wind/battery energy system. The main {{function of the}} new proposed <b>computer</b> <b>program</b> {{is to determine the}} optimum size of each component of the hybrid energy system for the lowest price of kWh generated and the best loss of load probability at highest reliability. This <b>computer</b> <b>program</b> uses the hourly wind speed, hourly radiation, and hourly load power with several numbers of wind turbine (WT) and PV module types. The proposed <b>computer</b> <b>program</b> changes the penetration ratio of wind/PV with certain increments and calculates the required size of all components and the optimum battery size to get the predefined lowest acceptable probability. This <b>computer</b> <b>program</b> has been designed in flexible fashion that is not available in market available software like HOMER and RETScreen. Actual data for Saudi sites have been used with this <b>computer</b> <b>program.</b> The data obtained have been compared with these market available software. The comparison shows the superiority of this <b>computer</b> <b>program</b> in the optimal design of the autonomous PV/wind/battery hybrid system. The proposed <b>computer</b> <b>program</b> performed the optimal design steps in very short time and with accurate results. Many valuable results can be extracted from this <b>computer</b> <b>program</b> that can help researchers and decision makers...|$|R
40|$|Mixing {{methodology}} improvement for the JANNAF DER and CICM injection/combustion analysis <b>computer</b> <b>programs</b> was accomplished. ZOM plane {{prediction model}} development was improved for installation {{into the new}} standardized DER <b>computer</b> <b>program.</b> An intra-element mixing model developing approach was recommended for gas/liquid coaxial injection elements for possible future incorporation into the CICM <b>computer</b> <b>program...</b>|$|R
25|$|He {{accepted}} {{a commission to}} write a book on <b>computer</b> <b>programming</b> language compilers. While working on this project, Knuth decided that he could not adequately treat the topic without first developing a fundamental theory of <b>computer</b> <b>programming,</b> which became The Art of <b>Computer</b> <b>Programming.</b> He originally planned to publish this as a single book. As Knuth developed his outline for the book, he concluded that he required six volumes, and then seven, to thoroughly cover the subject. He published the first volume in 1968.|$|E
25|$|The outer {{product is}} also a related {{function}} in some <b>computer</b> <b>programming</b> languages.|$|E
25|$|DePaul University {{was ranked}} the best <b>computer</b> <b>programming</b> {{school in the}} Midwestern United States in 2015.|$|E
40|$|A <b>computer</b> <b>program</b> is {{described}} which represents a comprehensive analytical tool providing the capability for predicting the output power and temperature profile of an arbitrary radioisotope thermoelectric generator (RTG) {{design in the}} presence of time-dependent operating conditions. The approach taken involves the merging of three existing <b>computer</b> <b>programs</b> - namely, an RTG weight optimization design program, a thermoelectric analysis program, and a nodal heat-transfer <b>computer</b> <b>program.</b> A total of seven transient conditions are included in the <b>computer</b> <b>program</b> as the principal transients affecting long- and short-term performance characteristics of RTGs. This <b>computer</b> <b>program</b> is unique in that it designs an optimum RTG, generates a thermal model or analog and performs heat-transfer analysis of the RTG under user-specified transient conditions...|$|R
40|$|Summary: The Copyright Protection of <b>Computer</b> <b>Programs</b> The aim of {{my thesis}} is to analyse the {{copyright}} protection of <b>computer</b> <b>programs.</b> Primary I {{focused on the}} copyright protection according to the Czech Copyright Act with regard to international Conventions and the European Legislation. The thesis is composed of nine chapters, each of them dealing with {{different aspects of the}} topic. Chapter One is introductory and defines basic terminology used in the thesis: <b>Computer</b> <b>program</b> is the instruction for a computer. A <b>computer</b> requires <b>program</b> to function. The term computer software includes <b>computer</b> <b>programs,</b> databases, <b>computer</b> files, preparatory design materials, all manner of works stored digitally to be accessed by computer and associated printed documentation such as manuals for users. Chapter Two shows the history of <b>computers</b> and <b>computer</b> <b>programs</b> and the development of the protection of <b>computer</b> <b>programs.</b> Chapter Three concerns the international Conventions and the European Legislation and their effect on the Czech Copyright Act. International Conventions in the area of copyright are mainly the Berne Convention, WIPO Copyright Treaty (WCT) and the TRIPS Agreement. The most important EU copyright Directive is the <b>Computer</b> <b>Programs</b> Directive. Chapter Four and Five deal with the nature of computer [...] ...|$|R
50|$|One {{aspect of}} the {{practice}} change was a reversal in the UKIPO practice concerning <b>computer</b> <b>program</b> claims. For several years previously, the UKIPO had allowed claims directed to a <b>computer</b> <b>program</b> if the method performed by the <b>computer</b> <b>program</b> was itself patentable. In light of {{the first step of}} the Aerotel/Macrossan four step test, to construe the claim, the UKIPO decided that claims to a <b>computer</b> <b>program</b> were not a permissible form of claim even if the underlying method was found to be patentable.|$|R
