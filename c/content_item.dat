84|1133|Public
5000|$|Translation of each {{individual}} <b>content</b> <b>item</b> (e.g. folder, news, file, HTML document, event) ...|$|E
50|$|Content itemsA common <b>content</b> <b>item</b> is a question. Other {{acceptable}} content {{items include}} skill based or manual techniques, written comments (such as a thesis, point, illustration, or other words), {{and any other}} components, five of which constitute the evaluation. A <b>Content</b> <b>Item</b> is a fundamental aspect of knowledge, a collection of keyfacts, a set of essential abilities, and/or a demonstrated understanding that is the intended outcome of the learning activity.|$|E
5000|$|A {{comprehensive}} takedown {{method is}} in use to identify child pornography, but not deployed to remove infringing <b>content.</b> (<b>item</b> 24) ...|$|E
50|$|In {{the third}} type, tags {{are used as}} a {{categorization}} method for <b>content</b> <b>items.</b> Tags are represented in a cloud where larger tags represent the quantity of <b>content</b> <b>items</b> in that category.|$|R
30|$|An initial {{analysis}} of contribution-related numbers within the content repository {{reveals that the}} information system is used intensively. Within the last ten business years, over 37, 000 contributors (students, teachers, staff) have contributed more than 5 million times to over 2 million informational artifacts (<b>content</b> <b>items).</b> The social network analysis metrics reveal that this translates {{to an average of}} about 65 provided/enhanced <b>content</b> <b>items</b> per individual contributor (Table 1, AD).|$|R
50|$|Definition 0.1 Learning Units is {{gained by}} an outcome based {{evaluation}} composed of 5 <b>content</b> <b>items</b> learned, with a pass rate of 80%.|$|R
50|$|European {{public service}} {{broadcasters}} {{are more likely}} to push for additional signals to indicate that content should not be encrypted in receiver devices, and that such receivers should also ignore any revocations while playing the specific <b>content</b> <b>item.</b>|$|E
5000|$|Brainstorm content {{ideas to}} publish, where to publish, {{and when to}} publish; include backup content items for each piece of content; include dates to {{determine}} whether to delay or kill each <b>content</b> <b>item</b> (for example, if a writer becomes ill or an interview subject is unavailable) ...|$|E
5000|$|Each item in {{a library}} or list is a <b>content</b> <b>item.</b> Examples of content items include [...] "Document" [...] - which may have a [...] "Name", [...] "Contact" [...] - with contact {{information}} fields, or [...] "Sales Invoice" [...] - with fields such as [...] "Total" [...] and [...] "Customer ID".|$|E
40|$|A {{mechanism}} for discerning user preferences for categories of provided content. A computer receives response data including {{a set of}} preference values that have been assigned to <b>content</b> <b>items</b> by <b>content</b> users. Output data is computed based on the response data using a latent factor model. The output data includes at least: an association matrix that defines K concepts associated with the <b>content</b> <b>items,</b> wherein K is smaller {{than the number of}} the <b>content</b> <b>items,</b> wherein, for each of the K concepts, the association matrix defines the concept by specifying strengths of association between the concept and the content items; and a concept-preference matrix including, for each content user and each of the K concepts, an extent to which the content user prefers the concept. The computer may display a visual representation of the association strengths in the association matrix and/or the extents in the concept-preference matrix...|$|R
40|$|KiWi is a {{framework}} for semantic social software applica- tions that combines the Wiki philosophy with Semantic Web technolo- gies. Applications based on KiWi can therefore leverage i. a. reasoning and versioning to follow both aspects and even go beyond existing tech- nologies. For example, KiWi allows composition of <b>content</b> <b>items,</b> which poses {{a challenge to the}} versioning system. In this paper we discuss ver- sioning of composed <b>content</b> <b>items</b> and challenges related to reasoning in collaborative social software, as both topics are concerned with updates on the application state. ...|$|R
40|$|User-to-user {{interactions}} {{have become}} ubiquitous in Web 2. 0. Users exchange emails, post on newsgroups, tag web pages, co-author papers, etc. Through these interactions, users co-produce or co-adopt <b>content</b> <b>items</b> (e. g., words in emails, tags in social bookmarking sites). We model such dynamic interactions as a user interaction network, which relates users, interactions, and <b>content</b> <b>items</b> over time. After some interactions, a user may produce content {{that is more}} similar to those produced by other users previously. We term this effect social dependency, and we seek to mine from such networks {{the degree to which}} a user may be socially dependent on another user over time. We propose a Decay Topic Model to model the evolution of a user’s preferences for <b>content</b> <b>items</b> at the topic level, as well as a Social Dependency Metric that quantifies the extent of social dependency based on interactions and content changes. Our experiments on two user interaction networks induced from real-life datasets show the effectiveness of our approach...|$|R
5000|$|The domain model {{defines the}} aspects of the {{application}} which can be adapted or which are otherwise required for {{the operation of the}} adaptive system. The domain model contains several concepts that stand as the backbone for the content of the system. Other terms which have been used for this concept include content model, application model, system model, device model and task model. It describes educational content such as information pages, examples, and problems. The simplest content model relates every <b>content</b> <b>item</b> to exactly one domain concept (in this model, this concept is frequently referred to as a domain topic). More advanced content models use multi-concept indexing for each <b>content</b> <b>item</b> and sometimes use roles to express the nature of item-concept relationship.A cognitively valid domain model should capture descriptions of the application at three levels, namely: ...|$|E
50|$|ECM systems {{facilitate}} collaboration {{by using}} information databases and processing methods {{that are designed}} to be used simultaneously by multiple users, even when those users are working on the same <b>content</b> <b>item.</b> They make use of knowledge based on skills, resources and background data for joint information processing. Administration components, such as virtual whiteboards for brainstorming, appointment scheduling, and project management systems, communications application such as video conferencing, etc., may be included.|$|E
50|$|A {{bibliographic record}} is an entry in a bibliographic index (or a library catalog) which {{represents}} and describes a specific resource. A bibliographic record contains the data elements necessary to help users identify and retrieve that resource, {{as well as}} additional supporting information, presented in a formalized bibliographic format. Additional information may support particular database functions such as search, or browse (e.g., by keywords), or may provide fuller presentation of the <b>content</b> <b>item</b> (e.g., the article's abstract).|$|E
30|$|Information layer: The OpenACS system [71] {{provides}} a generic content repository infrastructure, {{which is used}} by practically all applications (forums, news, wiki, et cetera) to store <b>content</b> <b>items</b> (informational artifacts).|$|R
3000|$|... {{is created}} in the cache for <b>content</b> <b>items</b> which are {{requested}} more than once {{within a short time}} span, and the remaining cache is considered as an unprotected segment S [...]...|$|R
50|$|Pass rateThe pass rate is {{a minimum}} of 80%, or {{four out of five}} <b>content</b> <b>items.</b> In some cases, Providers or Approval Agencies may require a higher {{standard}} where necessary or required.|$|R
50|$|In an {{inverted}} file or inverted index, {{the contents of}} the data are used as keys in a lookup table, and the values in the table are pointers to the location of each instance of a given <b>content</b> <b>item.</b> This is also the logical structure of contemporary database indexes, which might only use the contents from a particular columns in the lookup table. The inverted file data model can put indexes in a second set of files next to existing flat database files, in order to efficiently directly access needed records in these files.|$|E
50|$|This {{approach}} {{was first used}} in the Sky News iPad project (March 2011) and later amended to form the constitution of Sky New's content management system for the expanded Sky News iPhone project (October 2011).The main {{goal is to create}} a data structure that closely matches the applications navigation, ensuring a breadth of content, but forcing the depth of each <b>content</b> <b>item</b> to a maximum of two levels. Therefore, the root of the data is only ever a maximum of two back button taps anywhere in the navigation, adhering to the users exploring behavior while allowing them to keep a mental model {{of the structure of the}} content. Due to the tight coupling of the data to the navigation structure it allows any issues discovered by users to be investigated and solved quickly by development teams that were not involved in the original development process.|$|E
40|$|Content {{items are}} {{revealed}} to a user {{based on whether}} they have been previously reviewed by the user. A number of content items are thus received over time. The content items may be discrete content items, or may be portions of a content stream, and may be received over different media. For each <b>content</b> <b>item,</b> it is determined whether the <b>content</b> <b>item</b> was previously reviewed by a user. Where the <b>content</b> <b>item</b> was not previously reviewed, the item is revealed to the user, such as by being displayed or announced to the user. Where the <b>content</b> <b>item</b> was previously reviewed, the item is hidden from the user, such as by being deleted, by being replaced with an alternative <b>content</b> <b>item,</b> and so on...|$|E
5000|$|... ivi.ru {{offers more}} than 65,000 <b>content</b> <b>items,</b> {{including}} movies, TV shows, cartoons and music videos, making it the largest online library of licensed content in Russia with more than 19 million unique visitors monthly.|$|R
50|$|The FishVille {{store is}} {{constantly}} updated with new <b>items</b> and <b>content.</b> <b>Items</b> are also added for seasons and for special themes. Special themes when added, provide players {{with the opportunity}} to decorate the tank with items related to a particular season or theme.|$|R
40|$|Abstract—Recommender systems (RSs) {{proved to}} make easier the task of {{accessing}} relevant information in {{a broad range of}} domains. In content-based RSs, preferences on <b>content</b> <b>items</b> expressed by users turned out to be reliable indicators to suggest and filter interesting <b>contents.</b> <b>Item</b> representation {{plays a key role in}} content-based RSs, thus choosing proper facets to represent items is a fundamental task for deploying effective RSs. Contextual facets are often marginally relevant to predict user preferences, but in some domains disregarding contextual facets makes recommendations useless. This paper proposes a strategy to improve the effectiveness of a content-based RS that dynamically suggests tours within a museum by exploiting contextual facets such the physical layout of items and the interaction of users with the environment...|$|R
40|$|The present {{invention}} {{relates to}} a method, a device {{and a system}} for preventing unauthorized introduction of content items in a network containing compliant devices and enabling users in the network to be anonymous. A basic idea of the present invention {{is to provide a}} CA (206) with a fingerprint of a <b>content</b> <b>item</b> to be introduced in a network at which the CA is arranged. Further, the CA is provided with an identifier of a content introducer (201), which introduces the particular <b>content</b> <b>item</b> in the network. The CA compares the fingerprint to a predetermined set of fingerprints, and <b>content</b> <b>item</b> intro duction is allowed if the <b>content</b> <b>item</b> fingerprint cannot be found among the fingerprints comprised in the set. On introduction of the <b>content</b> <b>item,</b> the CA generates a pseudonym for the content introducer and creates a signed content ID certificate comprising at least said fingerprint and a unique content identifier for the <b>content</b> <b>item</b> and the pseudonym of the content introducer...|$|E
30|$|FIFO: FIFO is the {{simplest}} policy for content eviction. The <b>content</b> <b>item</b> {{which has been}} in the cache for longest time is evicted to make room for a new <b>content</b> <b>item.</b> The popularity of contents and expiration time of content availability are not considered.|$|E
30|$|Both q-LRU and k-LRU {{differ from}} LRU for the {{insertion}} policy, but are identical to LRU for eviction policy. In q-LRU, upon {{arrival of a}} request, a new <b>content</b> <b>item</b> is inserted into the cache with probability q. In k-LRU, the cache is managed by a virtual cache. The requests have to traverse a chain of k[*]−[*] 1 virtual caches, which store only <b>content</b> <b>item</b> hashes and perform meta-cache operations before the <b>content</b> <b>item</b> is stored in the physical cache indexed by k. When a cache request arrives, the request enters cache i if its hash is already stored in cache i- 1 (or if i[*]=[*] 1).|$|E
3000|$|Let δ {{express the}} average size (the number of chunks) of content. According to Carofiglio et al. [39], {{a group of}} <b>content</b> <b>items</b> Q are averagely divided in K classes based on their {{popularity}}. Assume that the popularity in Q follow a Zipf-like distribution. Let q [...]...|$|R
50|$|Beginning in the 1990s, the Internet {{has contributed}} to a {{tremendous}} increase in the accessibility of Western media content. Departing from media offered in bundled content packages (magazines, CDs, television and radio slots), the Internet has primarily offered unbundled <b>content</b> <b>items</b> (articles, audio and video files).|$|R
40|$|The Video on Demand (VoD) {{service is}} {{becoming}} a dominant service in the telecommunication market due to the great convenience regarding the choice of <b>content</b> <b>items</b> and their independent viewing time. However, due to its high traffic demand nature, the VoD streaming systems {{are faced with the}} problem of huge amounts of traffic generated in the core of the network, especially for serving the requests for <b>content</b> <b>items</b> that are not in the top popularity range. Therefore, we propose a peer assisted VoD model that takes advantage of the clients unused uplink and storage capacity to serve requests for less popular items with the objective to keep the traffic {{on the periphery of the}} network, reduce the transport cost in the core of the network and make the system more scalable...|$|R
3000|$|... is full, the <b>content</b> <b>item</b> {{that was}} brought into {{earliest}} will be evicted from the cache; If an item in S [...]...|$|E
40|$|This paper {{demonstrates}} {{a new approach}} to detecting high-level events that may be depicted in images or video frames. Given a non-annotated <b>content</b> <b>item,</b> a large number of pre-viously trained visual concept detectors are applied to it and their responses are used for representing the <b>content</b> <b>item</b> with a model vector in a high-dimensional concept space. Subsequently, an improved subclass discriminant analysis method is used for identifying a concept subspace within the aforementioned concept space, that is most appropriate for detecting and recognizing the target high-level events. In this subspace, the nearest neighbor rule is used for compar-ing the non-annotated <b>content</b> <b>item</b> with a few known ex-ample instances of the target events. The high-level events used as target events in the present version of the system are those defined for the TRECVID 2010 Multimedia Event Detection (MED) task...|$|E
40|$|Abstract. KiWi is a {{framework}} for semantic social software applica-tions that combines the Wiki philosophy with Semantic Web technolo-gies. Applications based on KiWi can therefore leverage i. a. reasoning and versioning to follow both aspects and even go beyond existing tech-nologies. For example, KiWi allows composition of content items, which poses {{a challenge to the}} versioning system. In this paper we discuss ver-sioning of composed content items and challenges related to reasoning in collaborative social software, as both topics are concerned with updates on the application state. Versioning of composed content items. Versioning is an essential feature of Wikis. Currently, it is applied for a transactional unit of work in KiWi, which means that data is collected during one application transaction. Thus, one version af-fects only one <b>content</b> <b>item</b> 3. Changes during one application transaction in textual/media content, or in meta-data (e. g. applied tags and RDF triples) are stored in one version. Composed content items can either be created by copying or by referencing a <b>content</b> <b>item</b> into another one. If we apply a copy, the nested <b>content</b> <b>item</b> would be independent of the original document. A reference, however, could ensure that composed content items are kept consistent. This would lead to a reorganization of the versioning implementation. If one <b>content</b> <b>item</b> is referenced in another <b>content</b> <b>item,</b> both are placed in a new version if one of them changes. Hence, updates and versions have to be applied in a user unit of work, which means that not only updates during one application transaction are stored, but also referencing content items. This ensures the global consistency of dependent content and makes revisions more applicable for the user, who does not have to update each composed <b>content</b> <b>item</b> manually. Furthermore, the system could inform the author about dependent updates. The user could decide, whether it is reasonable to keep the reference to composed content items or to change it to a copy, so that it gets decoupled from dependency updates...|$|E
5000|$|The portal {{includes}} databases of publications, news, events, {{software tools}} & blog posts. Since {{the start of}} BUILD UP II in 2009 the portal introduced added value <b>content</b> <b>items</b> namely as overview articles (allowing for users to read / download them on demand) and free participation webinars, providing an effective learning resource.|$|R
40|$|This {{study focused}} on the {{development}} of a pre-service agricultural education “Program Planning ” course that could be utilized nationally for preparing high school agricultural science and business teachers. The researchers created a course that would meet the needs of agricultural education students, teachers, and faculty across the United States in the form of open courseware. Using the Tyler Rationale, the subjects of the study were teachers (learners), teacher educators (subject specialists), and 22 university program planning course syllabi collected from agricultural education teacher preparation programs. A collective list of <b>content</b> <b>items</b> was derived from the course syllabi. Outstanding high school agricultural education teachers and university teacher educators were asked to rate the importance of each item. Only those items rated as important by both groups were incorporated into a new curriculum framework for the course. Overall, 59 <b>content</b> <b>items</b> were considered important by both group...|$|R
50|$|A {{web feed}} is a {{document}} (often XML-based) whose discrete <b>content</b> <b>items</b> include web {{links to the}} source of the content. News websites and blogs are common sources for web feeds, but feeds are also used to deliver structured information ranging from weather data to top-ten lists of hit tunes to search results. The two main web feed formats are RSS and Atom.|$|R
