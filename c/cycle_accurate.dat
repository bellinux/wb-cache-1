289|109|Public
50|$|Instruction Set Simulator and <b>Cycle</b> <b>Accurate</b> Simulator are {{simulators}} whose {{scope is}} the simulation of a sole microprocessor. They diverge {{in the level}} of details that they provide. Instruction set simulators focus on the fast simulation of the processor functions while <b>cycle</b> <b>accurate</b> simulators aim at allowing accurate timings of the processor.|$|E
50|$|Sound: {{4-channel}} PSG sound via POKEY sound chip, {{which also}} handles keyboard scanning, serial I/O, high resolution interrupt capable timers (single <b>cycle</b> <b>accurate),</b> and random number generation.|$|E
50|$|ARMulator II {{formed the}} basis for the high accuracy, cycle {{callable}} co-verification models of ARM processors, these CoVs models (see <b>Cycle</b> <b>Accurate</b> Simulator) were the basis of many CoVerification systems for ARM processors.|$|E
50|$|Each {{of these}} is an eclipse <b>cycle.</b> Less <b>accurate</b> <b>cycles</b> may be {{constructed}} by combinations of these.|$|R
5000|$|To ensure replicable casting <b>cycles</b> of <b>accurate</b> reproductions with a {{high quality}} finish, the spin casting process {{requires}} casting materials with the following qualities, for the following reasons: ...|$|R
40|$|To satisfy {{customer}} requirements and simultaneously fully utilize the production machines, {{there is a}} need to determine appropriate cycle time. Especially in pull systems with varying product mixes, <b>accurate</b> <b>cycle</b> time is even more crucial. <b>Accurate</b> <b>cycle</b> time also reduces the need for buffers. When the product mix varies, especially in a pull production system with parallel flow, determination of <b>accurate</b> <b>cycle</b> time becomes problematic. Hence this paper studies the relations between cycle times and product mixes in a parallel pull production system using discrete event simulation. Experiments with varying product mixes for parallel production systems are simulated. The simulation results show that optimal cycle time is inversely proportional to product mixes, when the product mix is 50 : 5...|$|R
50|$|While the TMS9918 {{can still}} be found online from sites like eBay, they are old stock and {{sometimes}} prove to be unreliable, counterfeit or fake. In recent years, a modern replacement has been created that claims to be 100% <b>cycle</b> <b>accurate.</b> This replacement can be found here.|$|E
50|$|ARMulator II {{formed the}} basis for the high accuracy, cycle {{callable}} co-verification models of ARM processors, these CoVs models (see <b>Cycle</b> <b>Accurate</b> Simulator) were the basis of many CoVerification systems for ARM processors. Mentor Graphic's Seamless have the market leading CoVs system that supports many ARM cores, and many other CPUs.|$|E
50|$|The {{emulation}} {{engine in}} blueMSX is <b>cycle</b> <b>accurate,</b> {{which means that}} the timing and synchronization between emulated hardware components appear the same as on a real MSX. The goal is to replicate each individual component as accurately as possible, {{which means that the}} emulator require a more high end PC than emulators optimized for speed.|$|E
2500|$|By {{combining}} appropriate {{numbers of}} 11-year and 19-year periods, {{it is possible}} to generate ever more <b>accurate</b> <b>cycles.</b> For example, simple arithmetic shows that: ...|$|R
3000|$|The {{purpose of}} this section is to show the {{convenience}} of using the response functions away from the limit <b>cycle</b> to obtain <b>accurate</b> predictions of the ultimate phase advancement. To this end, we force a system with pulse-trains of period [...]...|$|R
40|$|Low power Electromagnetic (EM) Wave sensors {{can measure}} general {{properties}} of human speech articulator motions, as speech is produced. See Holzrichter, Burnett, Ng, and Lea, J. Acoust. Soc. Am. 103 (1) 622 (1998). Experiments have demonstrated extremely accurate pitch measurements (< 1 Hz per pitch <b>cycle)</b> and <b>accurate</b> onset of voiced speech. Recent measurements of pressure-induced tracheal motions enable very good spectra and amplitude estimates of a voiced excitation function. The {{use of the}} measured excitation functions and pitch synchronous processing enable the determination of each pitch <b>cycle</b> of an <b>accurate</b> transfer function and, indirectly, of the corresponding articulator motions. In addition, direct measurements have been made of EM wave reflections from articulator interfaces, including jaw, tongue, and palate, simultaneously with acoustic and glottal open/close signals. While several types of EM sensors are suitable for speech articulator measurements, the homodyne sensor {{has been found to}} provide good spatial and temporal resolution for several applications...|$|R
5000|$|Ensata is an {{official}} emulator provided to developers in Nintendo DS development kits. It emulates the ARM7 and ARM9 dual screen processor at 100% with some software exceptions. The touch screen is fully emulated with a cursor {{and works with}} a keyboard. Ensata is a <b>cycle</b> <b>accurate</b> emulator, and is designed for testing games which are in development, and not for general gameplay. Ensata version 1.3c was leaked to the emulation community by an unknown source and cracked by the [...] "SMT" [...] group to operate without a Nintendo developer account. Version 1.4d was leaked and cracked by the [...] "EXPERiENCE" [...] group.|$|E
50|$|Performance of ARMulator is {{good for}} the {{technology}} employed, it's about 1000 host (PC) instructions per ARM instruction. This means that emulated speeds of 1 MHz were normal for PCs of the mid to late 90s. Accuracy is good too, although it is classed as cycle count accurate rather than <b>cycle</b> <b>accurate,</b> this is because the ARM pipeline isn't fully modeled (although register interlocks are). Resolution is to an instruction, as a consequence when single stepping the register interlocks are ignored and different cycle counts are returned than if the program had simply run, this was unavoidable.|$|E
50|$|Verilator {{converts}} synthesizable Verilog to C++ or SystemC. It {{can handle}} all versions of Verilog {{and also some}} SystemVerilog and Sugar/PSL assertions. The approach is closer to synthesis than event driven simulation. The entire design is flattened (that is all modules are expanded, to create one module). Static analysis is used to eliminate wires and schedule all processes at model generation time. Since this is a <b>cycle</b> <b>accurate</b> model, all intra-cycle delays are ignored. A C++ class is generated with a function which will take 2-state values on input ports and advance them to values on output ports at the next clock edge.|$|E
40|$|Jet Propulsion Laboratory {{currently}} operates lidar {{systems at}} Table Mountain Facility (TMF), California (34. 4 deg N, 117. 7 deg W at 2300 m) and Mauna Loa Observatory (MLO), Hawaii (19. 5 deg N, 155. 6 deg W at 3400 m) under the Network for the Detection of Atmospheric Composition Change (NDACC, formerly NDSC). To complement existing NDACC lidars at TMF, which {{acts as a}} primary site for inter-comparisons, a new water vapor and temperature lidar has begun routine operation with typically 3 - 4 nightly profiles per week. As water vapor is a key greenhouse gas, and is highly variable on annual and seasonal <b>cycles,</b> <b>accurate</b> long term measurements are necessary for predictions of climate change and to increase {{our understanding of the}} atmospheric processes it contributes to. The new TMF lidar has demonstrated high spatial and temporal resolution, {{with a high degree of}} optimization being achieved over the past year, although the authors believe further improvement may yet be possible. The lidar has been designed for accuracies of 5 % up to 12 km in the free troposphere with the capability to measure to the tropopause and lower stratosphere with accuracies of 1 ppm. It is anticipated that the data sets produced will be used for Aura validation and for incorporation into NDACC archives. Validation results for the optimized system are presented with intercomparisons using Vaisala RS 92 -K radiosondes...|$|R
40|$|Haemodynamic forces {{appear to}} play an {{influential}} role {{in the evolution of}} aneurysms. This has led to numerous studies, usually based on computational fluid dynamics. Their focus is predominantly on the wall shear stress (WSS) and associated derived parameters, attempting to find correlations between particular patterns of haemodynamic indices and regions subjected to disease formation and progression. The indices are generally determined by integration of flow properties over a single cardiac cycle. In this study, we illustrate that in some cases the transitional flow in aneurysms can lead to significantly different WSS distributions in consecutive cardiac <b>cycles.</b> <b>Accurate</b> determination of time-averaged haemodynamic indices may thus require simulation {{of a large number of}} cycles, which contrasts with the common approach to determine parameters using data from a single cycle. To demonstrate the role of transitional flow, two exemplary cases are considered: flow in an abdominal aortic aneurysm and in an intracranial aneurysm. The key differences that are observed between these cases are explained in terms of the integral timescale of the transitional flows in comparison with the cardiac cycle duration: for relatively small geometries, transients will decay before the next cardiac cycle. In larger geometries, transients are still present when the systolic phase produces new instabilities. These residual fluctuations serve as random initial conditions and thus seed different flow patterns in each cycle. To judge whether statistics are converged, the derived indices from at least two successive cardiac cycles should be compared...|$|R
30|$|Evapotranspiration (ET) {{is one of}} {{the major}} {{elements}} of the hydrologic <b>cycle,</b> and its <b>accurate</b> predictions is of paramount importance for many investigations such as irrigation system design and management, hydrologic water balance, crop yield simulation, irrigation scheduling, drainage studies, agricultural and forest meteorology, and water resources planning and management (Banihabib et al. 2012; Kumar et al. 2002; Valipour 2014 c, d, e, f, g, h).|$|R
5000|$|Verilator is an {{open source}} tool, and has in turn been adopted {{by a number of}} other projects. The Fedora Electronic Lab http://fedoraproject.org/wiki/Features/FedoraElectronicLab has adopted Verilator as part of its open source design flow for Fedora 11. The OpenRISC {{architecture}} from OpenCores includes a <b>cycle</b> <b>accurate</b> reference model, generated from Verilog using Verilator. A recent paper [...] described how the regression test suite for GCC could be run against a Verilator model of the OpenRISC 1200 as a way of detecting errors in the Verilog RTL implementation. TestDrive Profiling Master https://sourceforge.net/projects/test-drive/ tool provides the virtual FPGA environment using Verilator.|$|E
50|$|VisualSim {{simulation}} {{models of the}} proposed systems can be developed at various levels of hierarchy: Conceptual, Functional and Architectural Level Modeling. The conceptual level models can contain a network of systems including Satellites, aircraft and Ground vehicles. VisualSim functional models contain stochastic definitions of electronics, software, networks and workload. Various types of statistical traffic generators and queuing models of the resources {{are available in the}} library folder. At architectural level, the hardware and software models have <b>cycle</b> <b>accurate</b> blocks of processors, memory-subsystems, bus protocols and trace files. Software behaviour /application behaviour can be defined using a State Machine, flow diagram, read/write operations and IO activity. The mapping of the application to the system platform is defined in a spreadsheet. Communication architecture between different systems or sub-systems can be defined using VisualSim networking and wireless libraries. Software task arbitration and scheduling can be defined using VisualSim schedulers or the scripting language. The legacy models can be obtained by importing third-party models built in SystemC or C/C++. Algorithms developed using MatLab and Simulink {{can be used as a}} part of VisualSim model.|$|E
40|$|This paper {{focuses on}} {{enhancing}} performance of <b>cycle</b> <b>accurate</b> simulation with multiple processor simulators. Simulation performance {{is determined by}} how often simulators exchange events {{with one another and}} how accurately simulators model their behavior. Previous techniques have limited their applicability or sacrificed accuracy for performance. In this paper, we notice that inaccuracy comes from events which arrive between event exchange boundaries. To solve the problem, we propose <b>cycle</b> <b>accurate</b> transaction-driven simulation which maintains event exchange boundaries at bus transactions but compensates for accuracy. The proposed technique is implemented in a publicly available CATS framework and our experiment with 64 processors achieves 1. 2 M processor cycles/s (200 K instructions/s) which is faster than other <b>cycle</b> <b>accurate</b> frameworks by an order of magnitude. ...|$|E
40|$|Abstract — We present SimGate – a full-system {{simulator}} for the Stargate intermediate-level, resource-constrained, {{sensor network}} device. We empirically evaluate the accuracy {{and performance of}} the system in isolation as well as coupled with simulated Mica 2 motes. Our system is functionally correct and achieves <b>accurate</b> <b>cycle</b> estimation (i. e. cycle-close). Moreover, the overhead of simulated execution is modest with respect to previously published work. I...|$|R
40|$|We {{have applied}} video time lapse {{microscopy}} {{to the study}} of the chlamydial developmental <b>cycle.</b> Linked with <b>accurate</b> measures of genome replication this provides a defined framework to analyse the developmental cycle and to investigate and provide new insights into the effects of antibiotic treatments. Removal of penicillin allows recovery of the normal developmental cycle by 10 - 20 hrs and the process occurs by budding from aberrant RBs...|$|R
40|$|Network-on-Chip (NoC) {{architectures}} {{have a wide}} vari-ety of parameters {{that can}} be adapted to the designer’s re-quirements. Fast exploration of this parameter space is only possible at a high-level and several methods have been pro-posed. <b>Cycle</b> and bit <b>accurate</b> simulation is necessary when the actual router’s RTL description needs to be evaluated and verified. However, extensive simulation of the NoC ar-chitecture with cycle and bit accuracy is prohibitively time consuming. In this paper we describe a simulation method to simulate large parallel homogeneous and heterogeneous network-on-chips on a single FPGA. The method is espe-cially suitable for parallel systems where lengthy <b>cycle</b> and bit <b>accurate</b> simulations are required. As a case study, we use a NoC that was modelled and simulated in SystemC. We simulate the same NoC on the described FPGA simu-lator. This enables us to observe the NoC behavior under a large variety of traffic patterns. Compared with the Sys-temC simulation we achieved a speed-up of 80 - 300, without compromising the cycle and bit level accuracy...|$|R
40|$|We present new results {{concerning}} {{the integration of}} high level designed ips into a complete System on Chip. We first introduce a new computation model {{that can be used}} for <b>cycle</b> <b>accurate</b> simulation of register transfer level synthesized hardware. Then we provide simulation of a SoC integrating a data-flow ip synthesized with MMAlpha and the SocLib <b>cycle</b> <b>accurate</b> simulation environment. This integration also validates an efficient generic interface mechanism for data-flow ips...|$|E
40|$|TLM 2. 0 based virtual {{platforms}} {{are well}} suited for fast simulation and exploration on system level. However, for the exploration of memory subsystems, <b>cycle</b> <b>accurate</b> (CA) core models are needed, which slow down the simulation tremendously. In this {{paper we propose a}} method to playback previously recorded memory traces from the gem 5 simulator in a TLM 2. 0 based virtual platform, to preserve simulation speed, while keeping accuracy at the same level as with <b>cycle</b> <b>accurate</b> models...|$|E
40|$|RR 2004 - 18, ENS-Lyon, 24 pagesWe present new results {{concerning}} {{the integration of}} high level designed ips into a complete System on Chip. We first introduce a new compu- tation model {{that can be used}} for <b>cycle</b> <b>accurate</b> simulation of register transfer level synthesized hardware. Then we provide simulation of a SoC integrating a data-flow ip synthesized with MMAlpha and the So- cLib <b>cycle</b> <b>accurate</b> simulation environment. This integration also vali- dates an efficient generic interface mechanism for data-flow ips...|$|E
40|$|A four-dimensional {{analysis}} {{is applied to}} spectral nonlinear models of the atmosphere. The experiment reveals that the four-dimensional analysis errors are smaller than measurement errors, the method is stable in an assimilation <b>cycle,</b> and an <b>accurate</b> estimate of the velocity field is maintained using only temperature observations. It is concluded that the four-dimensional analyses display rapid initial error growth and therefore are better than ordinary forecasts from observations for only the first 24 hours...|$|R
40|$|Since {{the current}} solar cycle 23 has progressed {{near the end}} of the <b>cycle</b> and <b>accurate</b> solar minimum and maximum occurrences have been defined, a {{statistical}} model based on the odd-even behavior of historical sunspot cycles was reexamined. Separate calculations of activity levels were made for the rising and declining phases in solar cycle 23, which resulted in improved projection of sunspots in the remainder of cycle 23. Because a fundamental understanding of the transition from cycle to cycle has not been developed, at this time it is assumed for projection purposes that solar cycle 24 will continue at the same activity level in the declining phase of cycle 23. Projection errors in solar cycle 24 can be corrected as the cycle progresses and observations become available because this model is shown to be self-correcting...|$|R
25|$|A {{life cycle}} {{analysis}} {{is only as}} valid as its data; therefore, {{it is crucial that}} data used for the completion of a life <b>cycle</b> analysis are <b>accurate</b> and current. When comparing different life cycle analyses with one another, it is crucial that equivalent data are available for both products or processes in question. If one product has a much higher availability of data, it cannot be justly compared to another product which has less detailed data.|$|R
40|$|Abstract—This {{article is}} {{in the context of}} {{real-time}} embedded systems domain. These critical systems require an important effort in validation and verification that can be done at many abstraction levels, from high-level application model to the actual binary code using an accurate model of the processor. As the development of a handwritten simulator of a processor at a <b>cycle</b> <b>accurate</b> level is a difficult and tedious work, we use HARMLESS, a hardware description language that can generate both a functional and a <b>cycle</b> <b>accurate</b> simulators. The latter gives a temporal information of the simulation execution, but at the cost of a heavy computation overhead. This paper applies the compiled simulation principles to a <b>cycle</b> <b>accurate</b> simulator. It shows that this simulation mechanism can reduce computation time up to 45 %, preserving timing information. Keywords—Cycle Accurate Simulation; interpreted simulation; compiled simulation; HAD...|$|E
40|$|This paper {{evaluates the}} use of pin and <b>cycle</b> <b>accurate</b> SystemC models for {{embedded}} system design exploration and early software development. The target system is Mi-croBlaze VanillaNet Platform running MicroBlaze uClinux operating system. The paper compares Register Transfer Level (RTL) Hardware Description Language (HDL) sim-ulation speed to the simulation speed of several different SystemC models. It is shown that simulation speed of pin and <b>cycle</b> <b>accurate</b> models can go up to 150 kHz, compared to 100 Hz range of HDL simulation. Furthermore, utilising techniques that temporarily compromise cycle accuracy, ef-fective simulation speed of up to 500 kHz can be obtained. ...|$|E
40|$|With {{advances}} in semiconductor technology, processors are becoming {{larger and more}} complex. Future processor designers will face an enormous design space, and must evaluate more architecture design points to reach a final optimum design. This exploration is currently performed using <b>cycle</b> <b>accurate</b> simulators that are accurate but slow, limiting a comprehensive search of design options. The vast design space and time to market economic pressures motivate the need for faster architectural evaluation methods. The model {{presented in this paper}} facilitates a rapid exploration of the architecture design space for superscalar processors. It supplements current design tools by narrowing a large design space quickly, after which existing <b>cycle</b> <b>accurate</b> simulators can arrive at a precise optimum design. This allows a designer to select the final architecture design much faster than with traditional tools. The model calculates the instruction throughput of superscalar processors using a set of key architecture and application properties. It was validated with the Simplescalar out-of-order simulator. Results were within 5. 5 % accuracy of the <b>cycle</b> <b>accurate</b> simulator, but executed 40, 000 times faster. ...|$|E
40|$|The {{purpose of}} this article is to explore {{customer}} retention strategies and tactics implemented by firms in recession. Our investigations show just how big a challenge many organizations face in their ability to manage customer retention effectively. While leading organizations have embedded real-time customer life <b>cycle</b> management, developed <b>accurate</b> early warning systems, price elasticity models and ‘deal calculators’, the organizations we spoke to have only gone as far as calculating the value at risk and building simple predictive models...|$|R
40|$|As {{processor}} microarchitectures {{continue to}} increase in complexity, so does {{the time required to}} explore the design space. Performing <b>cycle</b> [...] <b>accurate,</b> detailed timing simulation of a realistic workload on a proposed processor microarchitecture often incurs a prohibitively large time cost. We propose a method to reduce the time cost of simulation by dynamically varying the complexity of the processor model throughout the simulation. In this paper, we give first evidence of the feasibility of this approach. We demonstrate that there are significant amounts of time during a simulation where a reduced processor model accurately tracks important behavior of a full model, and that by simulating the reduced model during these times the total simulation time can be reduced. Finally, we discuss metrics for detecting areas where the two processor models track each other, which is crucial for dynamically deciding when to use a reduced rather than a full model...|$|R
40|$|Accurate branch {{prediction}} and instruction fetch prediction of a microprocessor {{are critical to}} achieve high performance. For a processor which fetches and executes multiple instructions per <b>cycle,</b> an <b>accurate</b> and high bandwidth instruction fetching mechanism becomes increasingly important to performance. Unfortunately, the relatively small basic block size exhibited in many general-purpose applications severely limits instruction fetching. In order to achieve a high fetching rate for wide-issue superscalars, a scalable method to predict multiple branches per block of sequential instructions is presented. Its accuracy is equivalent to a scalar two-level adaptive prediction. Also, to overcome the limitation imposed by control transfers, a scalable method to predict multiple blocks is presented. As a result, a two block, multiple {{branch prediction}} mechanism for a block width of 8 instructions achieves an effective fetching rate of 8 instructions per cycle on the SPEC 95 benchmark suite. 1 [...] ...|$|R
