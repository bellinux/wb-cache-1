2581|2|Public
5|$|In early {{versions}} of Perl, database interfaces {{were created by}} relinking the interpreter with a <b>client-side</b> database library. This was sufficiently difficult that it was done {{for only a few}} of the most-important and most widely used databases, and it restricted the resulting perl executable to using just one database interface at a time.|$|E
5|$|Python {{can serve}} as a {{scripting}} language for web applications, e.g., via mod_wsgi for the Apache web server. With Web Server Gateway Interface, a standard API has evolved to facilitate these applications. Web frameworks like Django, Pylons, Pyramid, TurboGears, web2py, Tornado, Flask, Bottle and Zope support developers in the design and maintenance of complex applications. Pyjs and IronPython can be used to develop the <b>client-side</b> of Ajax-based applications. SQLAlchemy can be used as data mapper to a relational database. Twisted is a framework to program communications between computers, and is used (for example) by Dropbox.|$|E
5|$|Twitter has {{a history}} of both using and {{releasing}} open source software while overcoming technical challenges of their service. A page in their developer documentation thanks dozens of open source projects which they have used, from revision control software like Git to programming languages such as Ruby and Scala. Software released as open source by the company includes the Gizzard Scala framework for creating distributed datastores, the distributed graph database FlockDB, the Finagle library for building asynchronous RPC servers and clients, the TwUI user interface framework for iOS, and the Bower <b>client-side</b> package manager. The popular Twitter Bootstrap web design library was also started at Twitter and is the second most popular repository on GitHub.|$|E
5|$|PHP is a {{general-purpose}} {{scripting language}} that is especially suited to server-side web development, in which case PHP generally runs on a web server. Any PHP code in a requested file is executed by the PHP runtime, usually to create dynamic web page content or dynamic images used on websites or elsewhere. It {{can also be used}} for command-line scripting and <b>client-side</b> graphical user interface (GUI) applications. PHP can be deployed on most web servers, many operating systems and platforms, and can be used with many relational database management systems (RDBMS). Most web hosting providers support PHP for use by their clients. It is available free of charge, and the PHP Group provides the complete source code for users to build, customize and extend for their own use.|$|E
25|$|<b>Client-side</b> image maps were {{introduced}} in HTML 3.2, and do not require any special logic to be executed on the server (they are fully <b>client-side).</b> They also do not require any JavaScript.|$|E
25|$|The {{de facto}} <b>client-side</b> {{scripting}} language for web sites is JavaScript.|$|E
25|$|Sometimes, if {{part of the}} {{software}} generating the CAPTCHA is <b>client-side</b> (the validation is done on a server but the text that the user is required to identify is rendered on the client side), then users can modify the client to display the un-rendered text. Some CAPTCHA systems use MD5 hashes stored <b>client-side,</b> which may leave the CAPTCHA vulnerable to a brute-force attack.|$|E
25|$|While Web 2.0 and Ajax {{developers}} {{require the}} use of JavaScript, some web applications are written to allow operation without the need for any <b>client-side</b> scripts. This allows users, if they choose, to disable scripting in their browsers before using the application. In this way, even potentially malicious <b>client-side</b> scripts could be inserted unescaped on a page, and users would not be susceptible to XSS attacks.|$|E
25|$|Underscore.js is {{a utility}} JavaScript library for data {{manipulation}} {{that is used}} in both <b>client-side</b> and server-side network applications.|$|E
25|$|Forms {{are usually}} {{combined}} with programs written in various programming language to allow developers to create dynamic web sites. The most popular languages include both <b>client-side</b> and/or server-side languages.|$|E
25|$|There is no single, {{standardized}} {{classification of}} cross-site scripting flaws, but most experts distinguish between {{at least two}} primary flavors of XSS flaws: non-persistent and persistent. Some sources further divide these two groups into traditional (caused by server-side code flaws) and DOM-based (in <b>client-side</b> code).|$|E
25|$|As Google Maps is coded {{almost entirely}} in JavaScript and XML, some end users have reverse-engineered the tool and {{produced}} <b>client-side</b> scripts and server-side hooks which allowed a user or website to introduce expanded or customized features into the Google Maps interface.|$|E
25|$|Internet Explorer {{does not}} include any native {{scripting}} functionality. Rather, MSHTML.dll exposes an API that permits a programmer to develop a scripting environment to be plugged-in and to access the DOM tree. Internet Explorer 8 includes the bindings for the Active Scripting engine, which {{is a part of}} Microsoft Windows and allows any language implemented as an Active Scripting module to be used for <b>client-side</b> scripting. By default, only the JScript and VBScript modules are provided; third party implementations like ScreamingMonkey (for ECMAScript 4 support) can also be used. Microsoft also makes available the Microsoft Silverlight runtime (not supported in Windows RT) that allows CLI languages, including DLR-based dynamic languages like IronPython and IronRuby, to be used for <b>client-side</b> scripting.|$|E
25|$|Using {{the core}} engine and the map/satellite images hosted by Google, such tools can {{introduce}} custom location icons, location coordinates and metadata, and even custom map image sources into the Google Maps interface. The script-insertion tool Greasemonkey provides {{a large number}} of <b>client-side</b> scripts to customize Google Maps data.|$|E
25|$|While <b>client-side</b> {{languages}} used {{in conjunction}} with forms are limited, they often can serve to do pre-validation of the form data and/or to prepare the form data to send to a server-side program. This usage is being replaced, however, by HTML5's new input field types and required attribute.|$|E
25|$|Initially only {{implemented}} <b>client-side</b> in web browsers, JavaScript {{engines are}} now embedded {{in many other}} types of host software, including server-side in web servers and databases, and in non-web programs such as word processors and PDF software, and in runtime environments that make JavaScript available for writing mobile and desktop applications, including desktop widgets.|$|E
25|$|The most {{significant}} problem with blocking all scripts on all websites by default is substantial reduction in functionality and responsiveness (<b>client-side</b> scripting {{can be much}} faster than server-side scripting {{because it does not}} need to connect to a remote server and the page or frame {{does not need to be}} reloaded). Another problem with script blocking is that many users do not understand it, and do not know how to properly secure their browsers. Yet another drawback is that many sites do not work without <b>client-side</b> scripting, forcing users to disable protection for that site and opening their systems to vulnerabilities. The Firefox NoScript extension enables users to allow scripts selectively from a given page while disallowing others on the same page. For example, scripts from example.com could be allowed, while scripts from advertisingagency.com that are attempting to run on the same page could be disallowed.|$|E
25|$|Persistent XSS {{vulnerabilities}} can be {{more significant}} than other types because an attacker's malicious script is rendered automatically, without the need to individually target victims or lure them to a third-party website. Particularly {{in the case of}} social networking sites, the code would be further designed to self-propagate across accounts, creating a type of <b>client-side</b> worm.|$|E
25|$|Another {{mitigation}} {{present in}} Internet Explorer (since version 6), Firefox (since version 2.0.0.5), Safari (web browser) (since version 4), Opera (since version 9.5) and Google Chrome, is an HttpOnly flag which allows a web server {{to set a}} cookie that is unavailable to <b>client-side</b> scripts. While beneficial, the feature can neither fully prevent cookie theft nor prevent attacks within the browser.|$|E
25|$|Firefox {{implements}} many web standards, including HTML4 (almost full HTML5), XML, XHTML, MathML, SVG 2 (partial), CSS (with extensions), ECMAScript (JavaScript), DOM, XSLT, XPath, and APNG (Animated PNG) {{images with}} alpha transparency. Firefox also implements standards proposals {{created by the}} WHATWG such as <b>client-side</b> storage, and canvas element. These standards are implemented through the Gecko layout engine, and Spidermonkey JavaScript engine.|$|E
25|$|JavaScript, a {{scripting}} language widely used for <b>client-side</b> web development, became the originating dialect of the ECMAScript standard. It is a dynamic, weakly typed, prototype-based language with first-class functions. JavaScript {{was influenced by}} many languages and was designed to look like Java, but to be easier for non-programmers to work with. Brendan Eich invented JavaScript (which he called Mocha) in 1995; it later became renamed to LiveScript, and finally to JavaScript.|$|E
25|$|While Java was {{originally}} made for e.g. <b>client-side</b> applet use in web browsers (usage shifted {{mostly to the}} backend), major browsers no longer have applet support (nor is that use case officially supported by Oracle; neither do they or Apple support Java for macOS; outdated Windows XP is also no longer officially supported, and Microsoft in general hindered use of unchanged Java with their Windows operating system, for a time competing with a J# language).|$|E
25|$|In 2008, Verdasys {{launched}} SiteTrust, an {{encryption software}} service for banks, brokerages, {{and other big}} companies that served customers over the Internet and were legally liable for losses from online fraud. Its <b>client-side</b> software package turned on whenever the user visited a website protected by the SiteTrust service and spawned a new instance of the user’s Web browser, shutting out malware and creating a secure space around all communications with the protected site.|$|E
25|$|Historically XSS {{vulnerabilities}} {{were first}} found in applications that performed all data processing on the server side. User input (including an XSS vector) {{would be sent}} to the server, and then sent back to the user as a web page. The perceived need for an improved user experience resulted in popularity of applications that had a majority of the presentation logic (maybe written in JavaScript) working on the <b>client-side</b> that pulled data, on-demand, from the server using AJAX.|$|E
25|$|However, {{the rise}} of thin client {{computing}} using HTML as an intermediate format has reduced the need for ODBC. Many web development platforms contain direct links to target databases – MySQL being very common. In these scenarios, {{there is no direct}} <b>client-side</b> access nor multiple client software systems to support; everything goes through the programmer-supplied HTML application. The virtualization that ODBC offers is no longer a strong requirement, and development of ODBC is no longer as active as it once was.|$|E
25|$|RuneScape is {{a fantasy}} MMORPG {{developed}} {{and published by}} Jagex, released originally in January 2001. RuneScape {{can be used as}} a graphical browser game, implemented on the <b>client-side</b> in Java, and incorporates 3D rendering. Since the release of the NXT client in April 2016, a non-browser based version of the game that is written in C++ is also available. The game has had over 200million accounts created and is recognised by the Guinness World Records as the world's largest free MMORPG and the most-updated game.|$|E
25|$|Asynchronous JavaScript and JSON (or AJAJ) {{refers to}} the same dynamic web page {{methodology}} as Ajax, but instead of XML, JSON is the data format. AJAJ is a web development technique that provides for {{the ability of a}} webpage to request new data after it has loaded into the web browser. Typically it renders new data from the server in response to user actions on that webpage. For example, what the user types into a search box, <b>client-side</b> code then sends to the server, which immediately responds with a drop-down list of matching database items.|$|E
25|$|Although Second Lifes {{client and}} server {{incorporate}} Digital Rights Management technology, the visual data {{of an object}} must ultimately {{be sent to the}} client in order for it to be drawn; thus unofficial third-party clients can bypass them. One such program, CopyBot, was developed in 2006 as a debugging tool to enable objects to be backed up, but was immediately hijacked for use in copying objects; additionally, programs that generally attack <b>client-side</b> processing of data, such as GLIntercept, can copy certain pieces of data. Such use is prohibited under the Second Life TOS and could be prosecuted under the DMCA.|$|E
25|$|Cross-site {{scripting}} attacks use {{known vulnerabilities}} in web-based applications, their servers, or the plug-in systems {{on which they}} rely. Exploiting one of these, attackers fold malicious content into the content being delivered from the compromised site. When the resulting combined content arrives at the <b>client-side</b> web browser, it has all been delivered from the trusted source, and thus operates under the permissions granted to that system. By finding ways of injecting malicious scripts into web pages, an attacker can gain elevated access-privileges to sensitive page content, to session cookies, and {{to a variety of}} other information maintained by the browser on behalf of the user. Cross-site scripting attacks are a case of code injection.|$|E
25|$|World Wide Web browser software, such as Microsoft's Internet Explorer/Edge, Mozilla Firefox, Opera, Apple's Safari, and Google Chrome, lets users {{navigate}} {{from one}} web {{page to another}} via hyperlinks embedded in the documents. These documents may also contain any combination of computer data, including graphics, sounds, text, video, multimedia and interactive content that runs while the user is interacting with the page. <b>Client-side</b> software can include animations, games, office applications and scientific demonstrations. Through keyword-driven Internet research using search engines like Yahoo!, Bing and Google, users worldwide have easy, instant access to a vast and diverse amount of online information. Compared to printed media, books, encyclopedias and traditional libraries, the World Wide Web has enabled the decentralization of information on a large scale.|$|E
25|$|The Offline Files feature, which {{maintains}} a <b>client-side</b> cache of files shared over a network, has been significantly improved. When synchronizing {{the changes in}} the cached copy to the remote version, the Bitmap Differential Transfer protocol is used so that only the changed blocks in the cached version are transferred, but when retrieving changes from the remote copy, the entire file is downloaded. are synchronized on a per-share basis and encrypted on a per-user basis and users can force Windows to work in offline mode or online mode or sync manually from the Sync Center. The Sync Center can also report sync errors and resolve sync conflicts. Also, if network connectivity is restored, file handles are redirected to the remote share transparently.|$|E
25|$|By {{the mid-1980s}} the rapid {{improvement}} in microcomputers, {{and especially the}} introduction of the graphical user interface and data-rich application programs like Lotus 1-2-3 led to an increasing interest in using personal computers as the <b>client-side</b> platform of choice in client-server computing. Under this model, large mainframes and minicomputers would be used primarily to serve up data over local area networks to microcomputers that would interpret, display and manipulate that data. For this model to work, a data access standard was a requirement – in the mainframe field it was highly likely that all of the computers in a shop were from one vendor and clients were computer terminals talking directly to them, but in the micro field there was no such standardization and any client might access any server using any networking system.|$|E
25|$|Besides content filtering, other {{imperfect}} {{methods for}} cross-site scripting mitigation are also commonly used. One {{example is the}} use of additional security controls when handling cookie-based user authentication. Many web applications rely on session cookies for authentication between individual HTTP requests, and because <b>client-side</b> scripts generally have access to these cookies, simple XSS exploits can steal these cookies. To mitigate this particular threat (though not the XSS problem in general), many web applications tie session cookies to the IP address of the user who originally logged in, then only permit that IP to use that cookie. This is effective in most situations (if an attacker is only after the cookie), but obviously breaks down in situations where an attacker is behind the same NATed IP address or web proxy as the victim, or the victim is changing his or her mobile IP.|$|E
25|$|Psyonix's {{team were}} aware of past {{difficulties}} that they had with Battle-Cars and other racing games with online play and <b>client-side</b> prediction, and the issues that would arise from that with Rocket Leagues fast-paced play style. To solve this, the physics in the game are based on using the Bullet physics engine within the Unreal Engine 3's PhysX engine, which tracks the movement of all the cars and actors, allowing them to periodically re-synchronize the game state across players based on the stored physics states, which enabled players to have quick reactions from their client. At the time of Battle-Cars, Psyonix could not afford a dedicated server network and were forced to rely on individual hosts, {{which could lead to}} poor performance with slow Internet connections. With Rocket League, Psyonix was able to put a dedicated server network in place, writing their own service protocols to interface with Sony's and Valve's online services so as to enable cross-platform play, as well as improving matchmaking capabilities. Psyonix's previous experience in contract work for AAA titles had exposed them to the larger developers' approach to release and quality control, {{and they were able to}} apply those principles and aim for the same level of quality requirements in the final release of Rocket League.|$|E
25|$|Microsoft Office 2007 {{includes}} features geared towards {{collaboration and}} data sharing. As such, Microsoft Office 2007 features server components for {{applications such as}} Excel, which work in conjunction with SharePoint Services, to provide a collaboration platform. SharePoint works with Microsoft Office SharePoint Server 2007, {{which is used to}} host a SharePoint site, and uses IIS and ASP.NET 2.0. Excel server exposes Excel Services, which allows any worksheet to be created, edited and maintained via web browsers. It features Excel Web Access, the <b>client-side</b> component which is used to render the worksheet on a browser, Excel Calculation Service which is the server side component which populates the worksheet with data and perform calculations, and Excel Web Services that extends Excel functionalities into individual web services. SharePoint {{can also be used to}} host Word documents for collaborative editing, by sharing a document. SharePoint can also be used to hold PowerPoint slides in a Slide Library, from which the slides can be used as a formatting template. It also notifies users of a slide automatically in case the source slide is modified. Also by using SharePoint, PowerPoint can manage shared review of presentations. Any SharePoint hosted document can be accessed from the application which created the document or from other applications such as a browser or Microsoft Office Outlook.|$|E
25|$|The <b>client-side</b> (Web browser) {{technologies}} used in Web 2.0 development include Ajax and JavaScript frameworks. Ajax programming uses JavaScript and the Document Object Model {{to update}} selected {{regions of the}} page area without undergoing a full page reload. To allow users to continue {{to interact with the}} page, communications such as data requests going to the server are separated from data coming back to the page (asynchronously). Otherwise, the user would have to routinely wait for the data to come back before they can do anything else on that page, just as a user has to wait for a page to complete the reload. This also increases overall performance of the site, as the sending of requests can complete quicker independent of blocking and queueing required to send data back to the client. The data fetched by an Ajax request is typically formatted in XML or JSON (JavaScript Object Notation) format, two widely used structured data formats. Since both of these formats are natively understood by JavaScript, a programmer can easily use them to transmit structured data in their Web application. When this data is received via Ajax, the JavaScript program then uses the Document Object Model (DOM) to dynamically update the Web page based on the new data, allowing for a rapid and interactive user experience. In short, using these techniques, Web designers can make their pages function like desktop applications. For example, Google Docs uses this technique to create a Web-based word processor.|$|E
