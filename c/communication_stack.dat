169|141|Public
50|$|Each {{standard}} addresses {{different layers}} in the OSI model <b>communication</b> <b>stack.</b>|$|E
50|$|Since version 2.0, Proxmox VE {{offers a}} high {{availability}} option for clusters {{based on the}} Corosync <b>communication</b> <b>stack.</b> Individual virtual servers can be configured for high availability, using the Red Hat cluster suite. If a Proxmox node becomes unavailable or fails the virtual servers can be automatically moved to another node and restarted.The database- and FUSE-based Proxmox Cluster filesystem (pmxcfs) {{makes it possible to}} perform the configuration of each cluster node via the Corosync <b>communication</b> <b>stack.</b>|$|E
50|$|The {{standard}} {{is based on}} the <b>communication</b> <b>stack</b> of EIB but enlarged with the physical layers, configuration modes and application experience of BatiBUS and EHS.|$|E
50|$|The Appia core {{offers a}} clean {{way for the}} {{application}} to express inter-channel constraints. This feature is obtained as an extension to the functionality provided by current systems. Thus, Appia retains a flexible and modular design that allows <b>communication</b> <b>stacks</b> to be composed and reconfigured in run-time.|$|R
40|$|With the {{popularity}} of Java programming language and the progress on Java compiler techniques, people {{have been trying to}} use Java to develop applications where C/C++ ruled before. However, to deliver comparable overall run-time performance with C/C++, Java I/O must also keep up with that of C/C++. In this paper, we studied comprehensively the performances of Java <b>communication</b> <b>stacks</b> over InfiniBand and Giga-bit Ethernet, and compared them with those of benchmarks written in C. We found the network performance of current version of Sun Java run-time could be parallel with C over Giga-bit Ethernet. But for higher performance InfiniBand network, the current <b>communication</b> <b>stacks,</b> mainly the TCP/IP emulation layers, showed rather poor performances. It can be concluded it’s necessary to invent new approach to support InfiniBand in Java applications...|$|R
50|$|The IEC 61400-25 {{standard}} is {{a basis for}} simplifying the roles that the wind turbine and SCADA systems have to play. The {{crucial part of the}} wind power plant information, information exchange methods, and <b>communication</b> <b>stacks</b> are standardized. They build a basis to which procurement specifications and contracts could easily refer.|$|R
50|$|This <b>communication</b> <b>stack</b> {{reflects}} {{the beginning of}} various innovations. The OPC UA architecture is a service-oriented architecture (SOA) {{and is based on}} different logical levels.|$|E
5000|$|These {{drawbacks}} {{along with}} a number of other considerations pushed the decision to develop a new and independent stack for OPC UA, which replaces COM/DCOM. The main characteristics of this <b>communication</b> <b>stack</b> were: ...|$|E
50|$|The Dutch Connect&Drive project {{implemented}} CACC {{in seven}} Toyota Prius vehicles in 2009-2010. This project used a <b>communication</b> <b>stack</b> {{based on the}} reference architecture of the Car-2-Car Communication Consortium, using IEEE 802.11a hardware at the physical layer.|$|E
50|$|A similar {{layering}} {{may be seen}} in <b>communication</b> <b>stacks,</b> where {{a protocol}} (such as the OSI model) is divided into layers (in this case seven), with each layer performing a limited and well-defined function and communicating with other layers using specific and standardized methods. Such a design eases the evolutionary improvement of the entire stack through layer-specific improvements.|$|R
5000|$|For many bus {{architectures}} like PCI Express, PCI, SAS, SATA, and USB, engineers {{also use}} a [...] "Bus Exerciser" [...] or “Protocol Exerciser”. Such exercisers can emulate partial or full <b>communication</b> <b>stacks</b> which comply with the specific bus communication standard, thus allowing engineers to surgically control and generate bus traffic to test, debug and validate their designs.|$|R
40|$|Abstract. Group {{communication}} is a programming abstraction {{that allows a}} distributed group of processes to provide a reliable service {{in spite of the}} possibility of failures within the group. The goal of the project was to improve {{the state of the art}} of group communication in several directions: protocol frameworks, group <b>communication</b> <b>stacks,</b> specification, verification and robustness. The paper discusses the results obtained. ...|$|R
50|$|Virtual Telecommunications Access Method (VTAM) is the IBM {{subsystem}} that implements Systems Network Architecture (SNA) for mainframe environments. VTAM {{provides an}} {{application programming interface}} (API) for communication applications, and controls communication equipment such as adapters and controllers. In modern terminology, VTAM provides a <b>communication</b> <b>stack</b> and device drivers.|$|E
50|$|In {{contrast}} to the COM-based specifications, the UA specifications are not pure application specifications. They describe typically UA internal mechanisms, which get handled through the <b>communication</b> <b>stack</b> and are normally only of interest for those that port a stack to a specific target or those that want to implement their own UA stack.|$|E
5000|$|... 2. Support for {{multiple}} operating systems {{on a single}} processorTypically this is used to run a real-time operating system (RTOS) for low-level real-time functionality (such as the <b>communication</b> <b>stack)</b> {{while at the same}} time running a general purpose OS, (GPOS) like Linux or Windows, to support user applications, such as a web browser or calendar. The objective might be to upgrade an existing design without the added complexity of a second processor, or simply to minimize the bill of materials (BoM).|$|E
5000|$|The Hola company {{claims the}} following: [...] "The Internet is slowed down by server {{response}} times, Internet congestion, round trip times, and poorly written <b>communication</b> <b>stacks</b> in operating systems. Hola removes these bottlenecks by securely caching content on peers as they view it, and later serving {{it up to}} other nearby peers as they need it. Hola also compresses communication between peers to further speed the net." ...|$|R
40|$|This paper {{discusses}} {{the merits of}} using synchronous group remote method call (GRMC) to implement peer protocols in group communication settings. Peer protocols are used in layered protocol stacks to communicate horizontally between two layers of the same type. We will show that the higher abstraction level of G-RMC leads to less code, better understanding of a peer protocol and improved maintainability. However, ordering properties commonly required by group <b>communication</b> <b>stacks</b> may interfere with the synchronous calling of remote methods, causing deadlocks. We will present a solution that detects and resolves such deadlocks...|$|R
40|$|ITC/USA 2011 Conference Proceedings / The Forty-Seventh Annual International Telemetering Conference and Technical Exhibition / October 24 - 27, 2011 / Bally's Las Vegas, Las Vegas, NevadaThe {{increasing}} {{of space}} explorations requires space communication protocols {{to provide more}} capabilities, such as dynamic routing, adaptive data transformation and automatic resource allocation. Accordingly, a universal space <b>communication</b> protocol <b>stack</b> should be provided instead of specially designing protocol for given space mission. Considering the requirements and characters of space mission, potential protocols of all layers were compared and analyzed. Simulations were made based on OPNET. And a suggestion for space <b>communication</b> protocol <b>stacks</b> is proposed...|$|R
50|$|Another {{solution}} for Arduino {{has been presented}} in an Application Note published by KissBox for their RTP-MIDI OEM module. This solution {{is similar to the}} one used by the MIDIBox community (external communication processor board, connected over a fast SPI link). This solution allows to use Arduino boards with very limited amount of RAM, like the Arduino Uno, and frees completely the microprocessor for user's tasks, since the external module implements the whole <b>communication</b> <b>stack</b> and act as buffer between the network and the Arduino.|$|E
5000|$|The Grand Cooperative Driving Challenge (GCDC) [...] in 2011 was an {{international}} challenge for teams from universities and industry to participate with a vehicle which could cooperatively drive several defined traffic scenarios. CACC {{was a large}} part of the challenge. The <b>communication</b> <b>stack</b> was based on CALM FAST, using (by that time commercially available) IEEE 802.11p hardware in the 5.9 GHz range. The criteria on CACC performance included low platoon length, fast traveling time, platoon merging behaviour, and damping behaviour in strong acceleration and deceleration situations.|$|E
40|$|This paper {{describes}} the <b>communication</b> <b>stack</b> of the REMPLI system: a structure using power-lines and IPbased networks for communication, for data acquisition {{and control of}} energy distribution and consumption. It is furthermore prepared to use alternative communication media like GSM or analog modem connections. The REMPLI system provides communication service for existing applications, namely automated meter reading, energy billing and domotic applications. The <b>communication</b> <b>stack,</b> consisting of physical, network, transport, and application layer is described {{as well as the}} communication services provided by the system. We show how the peculiarities of the power-line communication influence the design of the <b>communication</b> <b>stack,</b> by introducing requirements to efficiently use the limited bandwidth, optimize traffic and implement fair use of the communication medium for the extensive communication partners...|$|E
40|$|Abstract — Location-aware {{computing}} {{becomes an}} exciting research as recent advancements in RF circuits and wireless <b>communication</b> <b>stacks.</b> In this paper, {{we present a}} fingerprinting based location estimation technology in ZigBee network. The system uses the signal strength from several base stations rather than time or angle for determining the location of mobile station. Instead of modeling the complex attenuation of signal strength, the system models the probabilistic distribution in different geographical areas which we called fingerprinting. It combines the measured data and fingerprinting to determine the mobile station’s location. The experiment results demon-strate the validity of location estimation in ZigBee network based on fingerprinting...|$|R
40|$|Abstract. Although modularized {{protocol}} frameworks are {{flexible and}} adaptive {{to the increasing}} heterogeneity of networking environments, it remains a challenge to automatically compose <b>communication</b> <b>stacks</b> from protocol modules. The typical static classification into network layers or class hierarchies cannot appropriately accommodate cross-cutting changes such as overlay routing or cross-layer signaling. In this paper, we discuss how protocol composition can be driven by functionality and demand at runtime based on extensible semantic models of protocols and their execution environment. Such an approach allows to reason about the functionality and quality of automatically composed and adapted protocol compounds and it is open to existing and future protocols. ...|$|R
40|$|Abstract—In this paper, we {{introduce}} the first fully implemented two way authentication security scheme for the Internet of Things (IoT) based on existing Internet standards, especially the Data-gram Transport Layer Security (DTLS) protocol. The proposed security scheme {{is based on}} the most widely used public key cryptography (RSA), and works on top of standard low power <b>communication</b> <b>stacks.</b> We believe that by relying on an established standard, existing implementations, engineering techniques and security infrastructure can be reused, which enables easy security uptake. We present an implemented system architecture for the proposed scheme based on a low-power hardware platform suitable for the IoT. We further demonstrate its feasibility (low overheads and high interoperability) through extensive evaluation. I...|$|R
40|$|Abstract:- To {{ensure the}} correct {{behaviour}} of a Networked Control System, the communication network must provide {{a reliable and}} timely communication service. The two components with the highest impact on the communication delays are the Medium Access Control (MAC) protocol and the local <b>communication</b> <b>stack,</b> therefore, the usage of an adequate <b>communication</b> <b>stack</b> is of utmost importance to guarantee the timing correctness of a feedback control application. In this paper, we propose the use of state-of-the-art scheduling algorithms to manage the outgoing queue of a local <b>communication</b> <b>stack.</b> We demonstrate {{that it is possible}} to improve the responsiveness of applications supported by the CAN communication protocol, by using just a light scheduling middleware to adequately schedule the outgoing queue. We also show that implementing such middleware even on top of COTS communication hardware, opens the possibility to enhance the communication process by minimizing the number of deadline misses for highly loaded network scenarios...|$|E
30|$|ADDA {{approaches}} use network-wide {{application information}} to optimise {{the manner in}} which information is collected and routed across the network. These efforts focus upon the network and application layers of the <b>communication</b> <b>stack.</b>|$|E
40|$|There {{are many}} {{difficult}} challenges {{ahead in the}} design of an energy-efficient <b>communication</b> <b>stack</b> for wireless sensor networks. Due to the severe nodes' constraints, protocols have to be simple yet scalable. To this end, collective social insects behavior could be adopted to guide the design of these protocols. We exploit the simple behaviors of ant swarms in foraging and brood sorting to design a hierarchical and scalable data dissemination strategy. In order to allow a realistic evaluation, a comprehensive simulator involving critical components of the <b>communication</b> <b>stack</b> is incorporated. The proposed scheme promotes a uniform distribution of clusterheads, which subsequently enables substantial energy savings over other clustering algorithms...|$|E
30|$|Advocates of an {{evolutionary}} {{approach to a}} future internet of things create new architectures by reusing as many components as possible from existing networking solutions. In their vision, the current internet should 'evolve' into an architecture that is more suited for an internet of things. A first approach is to gradually improve the existing <b>communication</b> <b>stacks,</b> replacing one function at a time, whenever the need arises. A typical example is the introduction of IPv 6 addresses to replace current IPv 4 addresses. For this approach to be successful, architectures should be easily extensible. Otherwise, this approach results in a difficult adoption of new technologies, {{as shown by the}} problematic transition into IPv 6 we are witnessing at the moment.|$|R
40|$|In this paper, we {{introduce}} the first fully implemented two way authentication security scheme for the Internet of Things (IoT) based on existing Internet standards, especially the Datagram Transport Layer Security (DTLS) protocol. The proposed security scheme {{is based on}} the most widely used public key cryptography (RSA), and works on top of standard low power <b>communication</b> <b>stacks.</b> We believe that by relying on an established standard, existing implementations, engineering techniques and security infrastructure can be reused, which enables easy security uptake. We present an implemented system architecture for the proposed scheme based on a low-power hardware platform suitable for the IoT. We further demonstrate its feasibility (low overheads and high interoperability) through extensive evaluation...|$|R
40|$|International audienceIn this chapter, {{we present}} a service-oriented {{architecture}} designed {{for the use of}} wireless sensors networks (WSNs) in industrial applications such as the operation and maintenance of industrial installations. This architecture comprises the OCARI wireless sensor network and the OPC-UA/ROSA middleware, as well as the KASEM predictive maintenance system. In contrast to well-known <b>communication</b> <b>stacks</b> for wireless sensor networks such as ZigBee and WirelessHart, OCARI has been designed to support mobility of sensor nodes. Furthermore, the OPC-UA/ROSA middleware provides service discovery to enable the interconnection of the WSN with the Internet of Things (IoT). This architecture targets various industrial applications such as process monitoring, pollutant detection, monitoring of fuel storage area, fire detection in temporary worksites, health monitoring of people working in hazardous conditions, etc...|$|R
40|$|In the {{automotive}} industry today, embedded systems have reached a level of complexity which is not maintainable with the traditional approach of design- ing automotive embedded systems. For this purpose, many of the worlds leading automotive manufacturers have formed an alliance to apprehend this problem. This has resulted in AUTOSAR, an open standardized architecture for automotive embedded systems, which strives for increased flexibility and safety regulations. This thesis will explore the possibilities of implementing a CAN <b>Communication</b> <b>stack</b> using the AUTOSAR architecture and its corresponding methodology. As {{a result of this}} thesis, a complete AUTOSAR CAN <b>communication</b> <b>stack</b> has been implemented, as well has a simulator application with the purpose of testing its functionality. ...|$|E
40|$|Historically, smart objects {{have used}} a plethora of {{communication}} technologies, both at the physical and medium access control layers, and at upper layers. The upper layers of the <b>communication</b> <b>stack</b> remain either proprietary or specified by exclusive alliances. This plethora of solutions renders interoperability between different sensor network...|$|E
40|$|Abstract—For {{designers}} of the <b>communication</b> <b>stack</b> of sensor nodes {{there is a}} constant tension between performance and modularity. To alleviate this tension, researchers {{have come up with a}} number of modular architectures. In this work we take a refreshed view of the design of an abstract link level service, an important component in the <b>communication</b> <b>stack.</b> We start with a critical review of one such service, the Sensornet Protocol (SP), and then we implement an SP-flavored link level service featuring a novel combination of ARQ and MAC. Experimental results of transmission delay and energy efficiency highlight a few subtle architectural design trade-offs we have encountered, namely semantics binding, implicit information sharing, and time scope initialization. These aspects have significant impact on software modularity in tiny sensor nodes. I...|$|E
40|$|VANETs employ {{cryptographic}} measures - like signing and verifying messages - to ensure security {{and trust in}} vehicle- 2 -x communication (V 2 X) applications. Before deployment those V 2 X applications need to be validated and assessed in simulations and field operational tests. While usual key performance indicators cover network layers from PHY to networking as well as traffic efficiency and safety benefits assessing and validating the network security has not been widely addressed. We therefore present a comprehensive security simulator Agez {{that allows us to}} measure the impacts of the network and application security utilized in state-of-the-art vehicle- 2 -x <b>communication</b> <b>stacks.</b> We present how Agez can be integrated in available simulation environments and how novel security mechanisms can be easily assessed...|$|R
40|$|In this paper, we {{introduce}} the first fully implemented two-way authentication security scheme for the Internet of Things (IoT) based on existing Internet standards, specifically the Datagram Transport Layer Security (DTLS) protocol. By relying on an established standard, existing implementations, engineering techniques and security infrastructure can be reused, which enables easy security uptake. Our proposed security scheme is therefore based on RSA, {{the most widely}} used public key cryptography algorithm. It is designed to work over standard <b>communication</b> <b>stacks</b> that offer UDP/IPv 6 networking for Low power Wireless Personal Area Networks (6 LoWPANs). Our implementation of DTLS is presented {{in the context of a}} system architecture and the scheme 2 ̆ 7 s feasibility (low overheads and high interoperability) is further demonstrated through extensive evaluation on a hardware platform suitable for the Internet of Things...|$|R
40|$|This paper {{presents}} {{a method of}} cryptographic key distribution using an `artificially' noisy channel. This is an important development because, while {{it is known that}} a noisy channel can be used to generate unconditional secrecy, there are many circumstances in which {{it is not possible to}} have a noisy information exchange, such as in error corrected <b>communication</b> <b>stacks.</b> It is shown that two legitimate parties can simulate a noisy channel by adding local noise onto the communication and that the simulated channel has a secrecy capacity even if the underlying channel does not. A derivation of the secrecy conditions is presented along with numerical simulations of the channel function to show that key exchange is feasible. Comment: 7 Pages, 5 Figures, Submitted to IEEE Transactions on Information Theory, Corrected typo in eqn...|$|R
