319|249|Public
25|$|The {{mathematics}} of a <b>cyclic</b> <b>redundancy</b> <b>check,</b> used {{to provide}} a quick check against transmission errors, {{are closely related to}} those of an LFSR.|$|E
25|$|The <b>cyclic</b> <b>redundancy</b> <b>check</b> (CRC) {{is based}} on {{division}} in the ring of polynomials over the finite field GF(2) (the integers modulo 2), that is, the set of polynomials where each coefficient is either zero or one, and arithmetic operations wrap around.|$|E
25|$|In {{the high}} {{definition}} {{serial digital interface}} (and in dual-link HD), additional check words are provided to increase the robustness of the interface. In these formats, the four samples immediately following the EAV packets (but not the SAV packets) contain a <b>cyclic</b> <b>redundancy</b> <b>check</b> field, and a line count indicator. The CRC field provides a CRC of the preceding line (CRCs are computed independently for the Y and C streams), {{and can be used}} to detect bit errors in the interface. The line count field indicates the line number of the current line.|$|E
5000|$|... #Article: Polynomial {{representations}} of <b>cyclic</b> <b>redundancy</b> <b>checks</b> ...|$|R
50|$|These are {{polynomial}} {{representations of}} <b>cyclic</b> <b>redundancy</b> <b>checks</b> CRCs.|$|R
50|$|See Polynomial {{representations}} of <b>cyclic</b> <b>redundancy</b> <b>checks</b> for the algebraic {{representations of}} the polynomials for the CRCs below.|$|R
25|$|A blank {{unformatted}} diskette has a {{coating of}} magnetic oxide with no magnetic {{order to the}} particles. During formatting, the magnetizations of the particles are aligned forming tracks, each broken up into sectors, enabling the controller to properly read and write data. The tracks are concentric rings around the center, with spaces between tracks where no data is written; gaps with padding bytes are provided between the sectors {{and at the end}} of the track to allow for slight speed variations in the disk drive, and to permit better interoperability with disk drives connected to other similar systems. Each sector of data has a header that identifies the sector location on the disk. A <b>cyclic</b> <b>redundancy</b> <b>check</b> (CRC) is written into the sector headers {{and at the end of}} the user data so that the disk controller can detect potential errors. Some errors are soft and can be resolved by automatically re-trying the read operation; other errors are permanent and the disk controller will signal a failure to the operating system if multiple attempts to read the data still fail.|$|E
2500|$|W. Wesley Peterson, {{mathematician}} {{and computer}} scientist, {{best known for}} inventing the <b>Cyclic</b> <b>Redundancy</b> <b>Check</b> (CRC) ...|$|E
5000|$|... 8-bit <b>cyclic</b> <b>redundancy</b> <b>check</b> byte (generator: x8+x7+x4+x3+x+1) ...|$|E
5000|$|<b>Cyclic</b> <b>redundancy</b> <b>checks</b> (CRCs) can correct 1-bit errors for {{messages}} at most [...] bits {{long for}} optimal generator polynomials of degree , see Mathematics of <b>cyclic</b> <b>redundancy</b> checks#Bitfilters ...|$|R
50|$|In {{longitudinal}} <b>redundancy</b> <b>checking</b> and <b>cyclic</b> <b>redundancy</b> <b>checking,</b> {{block check}} characters are computed for, and added to, each message block transmitted. This block check character is {{compared with a}} second block check character computed by the receiver {{to determine whether the}} transmission is error free.|$|R
50|$|Error {{detection}} and correction is performed at various layers in the protocol stack. Network packets may contain a checksum, parity bits or <b>cyclic</b> <b>redundancy</b> <b>checks</b> to detect errors that occur during transmission.|$|R
50|$|A <b>cyclic</b> <b>redundancy</b> <b>check</b> {{uses the}} {{remainder}} of polynomial division to detect errors in transmitted messages.|$|E
5000|$|W. Wesley Peterson, {{mathematician}} {{and computer}} scientist, {{best known for}} inventing the <b>Cyclic</b> <b>Redundancy</b> <b>Check</b> (CRC) ...|$|E
5000|$|<b>Cyclic</b> <b>redundancy</b> <b>check</b> {{checksums}} {{for data}} transmission/retry and data storage, e.g. PCI Express (PCIe) Advanced Error Reporting, redundant I/O paths.|$|E
50|$|Constantly checked as data is transmitted, {{this scheme}} {{is able to}} correct single-bit errors and detect many multiple-bit errors.For a {{tutorial}} and an example of computing the CRC see mathematics of <b>cyclic</b> <b>redundancy</b> <b>checks.</b>|$|R
50|$|There {{exists a}} vast variety of {{different}} hash function designs. However, some are of particularly widespread use because of either their simplicity or their suitability for detecting certain kinds of errors (e.g., the <b>cyclic</b> <b>redundancy</b> <b>check's</b> performance in detecting burst errors).|$|R
50|$|LAPM is {{an error}} control {{protocol}} defined in ITU-T recommendations V.42. Like many {{data link layer}} protocols, it is a variant of HDLC. Like the Microcom Networking Protocols that preceded it, LAPM uses <b>cyclic</b> <b>redundancy</b> <b>checking</b> (CRC) and retransmission of corrupted data (ARQ) to ensure data reliability.|$|R
50|$|<b>Cyclic</b> <b>redundancy</b> <b>check</b> bits: The last 16 bits {{contain an}} error {{detection}} code computed over the previous bits of the channel.|$|E
50|$|Even parity is {{a special}} case of a <b>cyclic</b> <b>redundancy</b> <b>check</b> (CRC), where the 1-bit CRC is {{generated}} by the polynomial x+1.|$|E
50|$|Even parity is {{a special}} case of a <b>cyclic</b> <b>redundancy</b> <b>check,</b> where the single-bit CRC is {{generated}} by the divisor x + 1.|$|E
40|$|Abstract—I {{revisit the}} {{fault-tolerance}} of <b>cyclic</b> <b>redundancy</b> <b>checks</b> (CRCs), expanding {{on the work}} of Driscoll et al [1]. I introduce the concepts of Schrödinger-Hamming weight and Schrödinger-Hamming distance, and I argue that under a fault model in which stuck-at-one-half or slightly-out-of-spec faults dominate, current methods for computing the fault detection of CRCs may be over-optimistic. Keywords-cyclic <b>redundancy</b> <b>check</b> (CRC), slightly-out-ofspec, fault-tolerance, reliability I...|$|R
50|$|Checksum algorithms, such as CRC32 {{and other}} <b>cyclic</b> <b>redundancy</b> <b>checks,</b> are {{designed}} to meet much weaker requirements, and are generally unsuitable as cryptographic hash functions. For example, a CRC was used for message integrity in the WEP encryption standard, but an attack was readily discovered which exploited the linearity of the checksum.|$|R
40|$|<b>Cyclic</b> <b>redundancy</b> <b>checks</b> (CRCs) {{are widely}} used in {{error-prone}} channels to detect corruption of data blocks. This report describes implementations of both the standard bit-by-bit technique for computing CRCs and a high-speed technique that employs precomputed tables to compute CRCs on a byte-by-byte basis. The technique could be further extended to compute CRCs word-by-word...|$|R
50|$|Finally, {{some form}} of error-detecting code (perhaps {{as simple as a}} <b>cyclic</b> <b>redundancy</b> <b>check)</b> is applied to the packet, and the packet is transmitted.|$|E
50|$|The {{mathematics}} of a <b>cyclic</b> <b>redundancy</b> <b>check,</b> used {{to provide}} a quick check against transmission errors, {{are closely related to}} those of an LFSR.|$|E
5000|$|A {{final section}} {{containing}} user-defined auxiliary data, any necessary padding to produce uniform syncframe lengths, and a 16-bit <b>cyclic</b> <b>redundancy</b> <b>check</b> code for error detection.|$|E
40|$|We have {{illustrated}} our {{techniques for}} designing and implementing <b>cyclic</b> <b>redundancy</b> <b>checks</b> for multilevel systems by discussing a particular example where {{the number of}} levels is 9. However, the techniques that we have {{described in this article}} are applicable in general. We hope that they will be useful to engineers designing other multilevel transmission systems...|$|R
40|$|Using a {{trace of}} address references, we {{compared}} the efficiency of several different hashing functions, such as <b>cyclic</b> <b>redundancy</b> <b>checking</b> (CRC) polynomials, Fletcher checksum, folding of address octets using the exclusive-or operation and bit extraction from the address. Guidelines are provided for determining {{the size of the}} hashmark required to achieve a specified level of performance...|$|R
40|$|Abstract—Motivated by {{the recent}} concept of Space-Time Shift Keying (STSK), we propose a novel {{cooperative}} STSK family, which is capable of achieving a flexible rate-diversity tradeoff, {{in the context of}} cooperative space-time transmissions. More specifically, we first propose a Coherent cooperative STSK (CSTSK) scheme, where each Relay Node (RN) activates Decodeand-Forward (DF) transmissions, depending on {{the success or failure of}} <b>Cyclic</b> <b>Redundancy</b> <b>Checking</b> (CRC). We invoke a bitto-STSK mapping rule, where according to the input bits, one of th...|$|R
5000|$|All frames not {{employing}} the Reed-Solomon code use a <b>cyclic</b> <b>redundancy</b> <b>check</b> (CRC) error-detecting code, {{which has an}} undetected frame-error rate of less than 1 in 32,000.|$|E
50|$|Data on the {{interface}} is framed using the IEEE Ethernet standard. As such it consists of a preamble, start frame delimiter, Ethernet headers, protocol specific data and a <b>cyclic</b> <b>redundancy</b> <b>check</b> (CRC).|$|E
50|$|Archive files {{often include}} parity checks and other {{checksums}} for error detection, for instance zip files use a <b>cyclic</b> <b>redundancy</b> <b>check</b> (CRC). RAR archives may include redundant error correction data (called recovery records).|$|E
50|$|The simple {{checksums}} {{described above}} fail to detect some common errors which affect many bits at once, such as changing {{the order of}} data words, or inserting or deleting words with all bits set to zero. The checksum algorithms most used in practice, such as Fletcher's checksum, Adler-32, and <b>cyclic</b> <b>redundancy</b> <b>checks</b> (CRCs), address these weaknesses by considering not only the value of each word but also {{its position in the}} sequence. This feature generally increases the cost of computing the checksum.|$|R
5000|$|Numerous {{varieties}} of <b>cyclic</b> <b>redundancy</b> <b>checks</b> have {{been incorporated into}} technical standards. By no means does one algorithm, or one of each degree, suit every purpose; Koopman and Chakravarty recommend selecting a polynomial according to the application requirements and the expected distribution of message lengths. [...] The number of distinct CRCs in use has confused developers, a situation which authors have sought to address. [...] There are three polynomials reported for CRC-12, nineteen conflicting definitions of CRC-16, and seven of CRC-32.|$|R
40|$|Abstract—We {{examine how}} the overall {{reliability}} of network protocol stacks {{is affected by the}} use of error-detecting checksums and <b>Cyclic</b> <b>Redundancy</b> <b>Checks</b> at each protocol layer. How these checksums cover their frames and payloads can affect the reliability {{of the rest of the}} stack, particularly higher layers, and the resulting delivery of data. We then apply insights gained to a comparison of new protocols promising delivery of packets with payload errors, to determine how well those protocols achieve that goal when used in realistic stacks...|$|R
