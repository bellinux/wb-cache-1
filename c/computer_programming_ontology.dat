0|10000|Public
5000|$|Can a <b>computer</b> <b>program</b> only be {{excluded}} as a <b>computer</b> <b>program</b> as such {{if it is}} explicitly claimed as a <b>computer</b> <b>program?</b> ...|$|R
50|$|Profiling (<b>computer</b> <b>programming)</b> {{can be done}} by work {{sampling}} a <b>computer</b> <b>program.</b>|$|R
40|$|Cover title. Includes bibliographies. v. 1. Theory {{manual for}} STARS- 2 P digital <b>computer</b> <b>program.</b> [...] v. 2. User's manual for STARS- 2 P digital <b>computer</b> <b>program.</b> [...] v. 3. Engineer's program manual for STARS- 2 P digital <b>computer</b> <b>program.</b> [...] v. 4. SATELLITE- 1 P program for STARS- 2 P digital <b>computer</b> <b>program.</b> Mode of access: Internet...|$|R
50|$|An {{application}} launcher is a <b>computer</b> <b>program</b> that helps a user {{to locate and}} start other <b>computer</b> <b>programs.</b> An {{application launcher}} provides shortcuts to <b>computer</b> <b>programs,</b> and stores the shortcuts in one place so they are easier to find.|$|R
5000|$|Gene {{expression}} programming (GEP) {{also uses}} populations of <b>computer</b> <b>programs.</b> These complex <b>computer</b> <b>programs</b> are encoded in simpler linear chromosomes of fixed length, which are afterwards expressed as expression trees. Expression trees or <b>computer</b> <b>programs</b> evolve because the chromosomes undergo mutation and recombination {{in a manner}} similar to the canonical GA. But thanks to the special organization of GEP chromosomes, these genetic modifications always result in valid <b>computer</b> <b>programs.</b>|$|R
5000|$|... otherwise, {{since all}} <b>computer</b> <b>programs</b> are {{suitable}} {{to run on}} a computer, no distinction could be made between, on the one hand, <b>computer</b> <b>programs</b> with a technical character and, on the other hand, <b>computer</b> <b>programs</b> as such. In other words, {{the mere fact that}} an invention is a <b>computer</b> <b>program</b> is not a sufficient reason to conclude that it has a technical character, when interpreting these legal provisions.|$|R
40|$|A {{common problem}} in <b>computer</b> <b>programming</b> use for {{education}} in general, not simply as a technical skill, is that children and teachers find themselves constrained by what is possible through limited expertise in <b>computer</b> <b>programming</b> techniques. This is particularly noticeable at the preliterate level, where constructs tend {{to be limited to}} extremely simple elements. Having worked for 4 years with over 150 children, aged 3 to 5, we present age-appropriate <b>computer</b> <b>programming</b> activities involving different <b>computer</b> <b>programming</b> techniques, from the basic (computer language syntax) to the advanced (client-server). These may contribute to expand the panorama on viable <b>computer</b> <b>programming</b> techniques available to children and educators, thus broadening the variety of educational activities and projects that can be approached in educational settings using <b>computer</b> <b>programming.</b> <b>Computer</b> <b>programming</b> by preschoolers and kindergartners <b>Computer</b> <b>programming</b> is the craft of specifying the behaviour of a computer. It is employed by computer professionals who create applications or games for use by the general public, by professionals in other fields to produce computer tools o...|$|R
25|$|A {{part of a}} <b>computer</b> <b>program</b> that {{performs}} a well-defined task is known as an algorithm. A collection of <b>computer</b> <b>programs,</b> libraries, and related data {{are referred to as}} software. <b>Computer</b> <b>programs</b> may be categorized along functional lines, such as application software and system software.|$|R
40|$|It is {{well known}} that the {{computer}} in lighting technology is a vital component for lighting designers. Lighting <b>computer</b> <b>programs</b> are preferred in preparing architectural projects in lighting techniques, especially in lighting calculations. Lighting <b>computer</b> <b>programs,</b> which arise with the aim of helping lighting designers, gain more interest day by day. The most important property of lighting <b>computer</b> <b>programs</b> is the ability to enable the simulation of lighting projects without requiring any real life applications. In addition, with the use of lighting <b>computer</b> <b>programs,</b> incomplete parts of projects are determined to make necessary calculations. In this study, the details about lighting <b>computer</b> <b>programs,</b> especially as used in interior lighting, are mentioned. A comparison of programs will be made by pointing out necessary characteristics in lighting <b>computer</b> <b>programs...</b>|$|R
50|$|The {{abstract}} {{computer is}} used to give precise meaning to the phrase `simple explanation'. In the formalism used, explanations, or theories of phenomena are <b>computer</b> <b>programs</b> that generate observation strings whenrun on the abstract computer. A simple explanation is a short computer program; a complex explanation is a long <b>computer</b> <b>program.</b> Simple explanations are more likely, so a high-probability observation string is one generatedby a short <b>computer</b> <b>program,</b> or perhaps by any {{of a large number}} of slightly longer <b>computer</b> <b>programs.</b> A low-probability observation string is one that can only be generated by a long <b>computer</b> <b>program.</b>|$|R
5000|$|In <b>computer</b> <b>programming,</b> {{redundant}} code is source code or compiled code in a <b>computer</b> <b>program</b> that is unnecessary, such as: ...|$|R
40|$|This paper {{introduces}} {{a case study}} method to teach adult students <b>computer</b> <b>programming</b> at tertiary level. It applies adult teaching theory to <b>computer</b> <b>programming</b> education. The author is pleased to share this experience and findings with other teachers who also teach <b>computer</b> <b>programming</b> at this level...|$|R
40|$|<b>Computer</b> <b>programming</b> can be {{challenging}} for beginners {{because of the need}} to understand abstract programming concepts. In this paper, we study the use of the Second Life (SL) virtual world for learning <b>computer</b> <b>programming</b> concepts. We conduct an empirical study for learning <b>computer</b> <b>programming</b> in SL by addressing affordances of SL for experiential problem-based learning pedagogies. We present preliminary findings, the promises and the limitations of Second Life as an environment for learning <b>computer</b> <b>programming...</b>|$|R
40|$|The paper {{presents}} {{the use of}} <b>computer</b> <b>programming</b> to solving typical engineering problems. First of all, the basic information about the <b>computer</b> <b>programming</b> ideology and types of <b>computer</b> <b>programming</b> languages were outlined. Secondly, the Matlab environment that combines computing, visualization and programming was described. In the final part of the paper the author presented solution of the beam with a uniformly distributed load problem by use of special <b>computer</b> <b>program</b> prepared in Matlab language...|$|R
40|$|The {{development}} of uniform <b>computer</b> <b>program</b> standards and conventions for the modular space station is discussed. The accomplishments analyzed are: (1) {{development of}} <b>computer</b> <b>program</b> specification hierarchy, (2) definition of <b>computer</b> <b>program</b> development plan, and (3) recommendations for utilization of all operating on-board space station related data processing facilities...|$|R
40|$|Many {{seemingly}} different {{problems in}} artificial intelligence, symbolic processing, and machine learning {{can be viewed}} as requiring discovery of a <b>computer</b> <b>program</b> that produces some desired output for particular inputs. When viewed in this way, the process of solving these problems becomes equivalent to searching a space of possible <b>computer</b> <b>programs</b> for a most fit individual <b>computer</b> <b>program.</b> The new genetic programming paradigm described herein provides a way to search for this most fit individual <b>computer</b> <b>program.</b> In this new genetic programming paradigm, populations of <b>computer</b> <b>programs</b> are genetically bred using the Darwinian principle of survival of the fittest and using a genetic crossover (recombination) operator appropriate for genetically mating <b>computer</b> <b>programs.</b> In this paper, the process of formulating and solving problems using this new paradigm is illustrated using examples from various areas...|$|R
5000|$|... 1. Article 1(2) of the <b>Computer</b> <b>Programs</b> Directive (Council Directive 91/250/EEC of 14 May 1991) must be {{interpreted}} as meaning that neither the functionality of a <b>computer</b> <b>program</b> nor the programming language and the format of data files used in a <b>computer</b> <b>program</b> in order to exploit certain of its functions constitute a form of expression of that program and, as such, are not protected by copyright in <b>computer</b> <b>programs</b> {{for the purposes of}} that directive.|$|R
40|$|The {{development}} of a <b>computer</b> <b>program</b> is reported for extracting features from remotely sensed data presented in digital image form. This <b>computer</b> <b>program</b> requires no human supervision or prejudgment and operates unassisted on the raw digital data. A condensed general background is included on remote sensing of earth features and a short synopsis {{on some of the}} most commonly used types of feature extraction techniques. Results obtained from the unsupervised feature extraction <b>computer</b> <b>program</b> along with a description and listing of the <b>computer</b> <b>program</b> are presented. Prepared at George C. Marshall Space Flight Center. Cover title. Bibliography: p. 84 - 85. The {{development of}} a <b>computer</b> <b>program</b> is reported for extracting features from remotely sensed data presented in digital image form. This <b>computer</b> <b>program</b> requires no human supervision or prejudgment and operates unassisted on the raw digital data. A condensed general background is included on remote sensing of earth features and a short synopsis on some of the most commonly used types of feature extraction techniques. Results obtained from the unsupervised feature extraction <b>computer</b> <b>program</b> along with a description and listing of the <b>computer</b> <b>program</b> are presented. Mode of access: Internet...|$|R
40|$|There are {{individuals}} who cannot understand {{the approach to}} <b>computer</b> <b>programming</b> well, although they have read textbooks or attended lectures on <b>computer</b> <b>programming.</b> The self-learning system for <b>computer</b> <b>programming</b> skill is expected to support learning for such individuals. We propose a new web-based self-learning system for <b>computer</b> <b>programming</b> skill. The learners can study building algorithms using flowcharts. If the learners understand the technique of building algorithms, they can learn not only <b>computer</b> <b>programming</b> skill but also its language easily. The system enables to execute flowcharts built by the learners, and shows {{the result of the}} execution. The learners can visually check the algorithm; as a result, the learning effect is enhanced...|$|R
40|$|Sources of {{geometric}} and radiometric fidelity {{errors in}} AN/APQ- 102 A radar imagery are discussed, {{along with a}} digital <b>computer</b> <b>program</b> to correct the distortions. The major effort, a <b>computer</b> <b>program</b> which will process digitalized recorded AN/APQ- 102 A phase histories into imagery, is described. All <b>computer</b> <b>programs</b> are listed...|$|R
40|$|This paper {{introduces}} a design and optimization <b>computer</b> simulation <b>program</b> for autonomous hybrid PV/wind/battery energy system. The main {{function of the}} new proposed <b>computer</b> <b>program</b> {{is to determine the}} optimum size of each component of the hybrid energy system for the lowest price of kWh generated and the best loss of load probability at highest reliability. This <b>computer</b> <b>program</b> uses the hourly wind speed, hourly radiation, and hourly load power with several numbers of wind turbine (WT) and PV module types. The proposed <b>computer</b> <b>program</b> changes the penetration ratio of wind/PV with certain increments and calculates the required size of all components and the optimum battery size to get the predefined lowest acceptable probability. This <b>computer</b> <b>program</b> has been designed in flexible fashion that is not available in market available software like HOMER and RETScreen. Actual data for Saudi sites have been used with this <b>computer</b> <b>program.</b> The data obtained have been compared with these market available software. The comparison shows the superiority of this <b>computer</b> <b>program</b> in the optimal design of the autonomous PV/wind/battery hybrid system. The proposed <b>computer</b> <b>program</b> performed the optimal design steps in very short time and with accurate results. Many valuable results can be extracted from this <b>computer</b> <b>program</b> that can help researchers and decision makers...|$|R
40|$|Mixing {{methodology}} improvement for the JANNAF DER and CICM injection/combustion analysis <b>computer</b> <b>programs</b> was accomplished. ZOM plane {{prediction model}} development was improved for installation {{into the new}} standardized DER <b>computer</b> <b>program.</b> An intra-element mixing model developing approach was recommended for gas/liquid coaxial injection elements for possible future incorporation into the CICM <b>computer</b> <b>program...</b>|$|R
40|$|C-Jump <b>Computer</b> <b>Programming</b> Board is a {{new game}} in the game {{industry}} that teaches basic <b>computer</b> <b>programming</b> statements to its players. It educates the basic commands of a programming language, such as the concept of variables, "if", "else", "switch", "while" and "continue". Players {{will be able to}} see how the real <b>computer</b> <b>program</b> looks like...|$|R
40|$|A <b>computer</b> <b>program</b> is {{described}} which represents a comprehensive analytical tool providing the capability for predicting the output power and temperature profile of an arbitrary radioisotope thermoelectric generator (RTG) {{design in the}} presence of time-dependent operating conditions. The approach taken involves the merging of three existing <b>computer</b> <b>programs</b> - namely, an RTG weight optimization design program, a thermoelectric analysis program, and a nodal heat-transfer <b>computer</b> <b>program.</b> A total of seven transient conditions are included in the <b>computer</b> <b>program</b> as the principal transients affecting long- and short-term performance characteristics of RTGs. This <b>computer</b> <b>program</b> is unique in that it designs an optimum RTG, generates a thermal model or analog and performs heat-transfer analysis of the RTG under user-specified transient conditions...|$|R
40|$|Summary: The Copyright Protection of <b>Computer</b> <b>Programs</b> The aim of {{my thesis}} is to analyse the {{copyright}} protection of <b>computer</b> <b>programs.</b> Primary I {{focused on the}} copyright protection according to the Czech Copyright Act with regard to international Conventions and the European Legislation. The thesis is composed of nine chapters, each of them dealing with {{different aspects of the}} topic. Chapter One is introductory and defines basic terminology used in the thesis: <b>Computer</b> <b>program</b> is the instruction for a computer. A <b>computer</b> requires <b>program</b> to function. The term computer software includes <b>computer</b> <b>programs,</b> databases, <b>computer</b> files, preparatory design materials, all manner of works stored digitally to be accessed by computer and associated printed documentation such as manuals for users. Chapter Two shows the history of <b>computers</b> and <b>computer</b> <b>programs</b> and the development of the protection of <b>computer</b> <b>programs.</b> Chapter Three concerns the international Conventions and the European Legislation and their effect on the Czech Copyright Act. International Conventions in the area of copyright are mainly the Berne Convention, WIPO Copyright Treaty (WCT) and the TRIPS Agreement. The most important EU copyright Directive is the <b>Computer</b> <b>Programs</b> Directive. Chapter Four and Five deal with the nature of computer [...] ...|$|R
5000|$|Marco Guarnerio - <b>computer</b> <b>programming</b> track A1, {{keyboards}} programming & guitars track A2, keyboards & <b>computer</b> <b>programming</b> track A3, {{acoustic guitar}} track B2, keyboards track B3 ...|$|R
5000|$|... as {{the broad}} term for {{all aspects of}} the {{practice}} of <b>computer</b> <b>programming,</b> as opposed to the theory of <b>computer</b> <b>programming,</b> which is called computer science; ...|$|R
50|$|One {{aspect of}} the {{practice}} change was a reversal in the UKIPO practice concerning <b>computer</b> <b>program</b> claims. For several years previously, the UKIPO had allowed claims directed to a <b>computer</b> <b>program</b> if the method performed by the <b>computer</b> <b>program</b> was itself patentable. In light of {{the first step of}} the Aerotel/Macrossan four step test, to construe the claim, the UKIPO decided that claims to a <b>computer</b> <b>program</b> were not a permissible form of claim even if the underlying method was found to be patentable.|$|R
40|$|Abstract:- Many {{seemingly}} different {{problems in}} artificial intelligence, symbolic processing, and machine learning {{can be viewed}} as requiring discovery of a <b>computer</b> <b>program</b> that produces some desired output for particular inputs. When viewed in this way, the process of solving these problems becomes equivalent to searching a space of possible <b>computer</b> <b>programs</b> for a most fit individual <b>computer</b> <b>program.</b> The new “genetic programming ” paradigm described herein provides a way to search for this most fit individual <b>computer</b> <b>program.</b> In this new “genetic programming ” paradigm, populations of <b>computer</b> <b>programs</b> are genetically bred using the Darwinian principle of survival of the fittest and using a genetic crossover (recombination) operator appropriate for genetically mating <b>computer</b> <b>programs.</b> In this paper, the process of formulating and solving problems using this new paradigm is illustrated using examples from various areas. Examples come from the areas of machine learning of a function...|$|R
40|$|Evidence {{created by}} <b>computer</b> <b>programs</b> dominates modern {{criminal}} trials. From DNA to fingerprints to facial recognition evidence, criminal courts are confronting a deluge {{of evidence that}} is generated by <b>computer</b> <b>programs.</b> In a worrying trend, {{a growing number of}} courts have insulated this evidence from adversarial testing by preventing defendants from accessing the source code that governs the <b>computer</b> <b>programs.</b> This Note argues that defendants are entitled to view, test, and critique the source code of <b>computer</b> <b>programs</b> that produce evidence offered at trial by the prosecution. To do so, this Note draws on three areas of law: the Confrontation Clause, the Due Process Clause, and Daubert and its progeny. While courts and commentators have grappled with specific <b>computer</b> <b>programs</b> in specific criminal contexts, this Note represents the first attempt to justify the systematic disclosure of source code by reference to the structural features of <b>computer</b> <b>programs...</b>|$|R
40|$|Includes bibliographical {{references}} (pages 25 - 27 and 48 - 52) The {{purpose of}} this study was to develop an interactive <b>computer</b> <b>program</b> and study its usefulness in weight loss programs that use behavior modification techniques. This <b>computer</b> <b>program</b> was designed to give quick feedback on the level of goal attainment for target behaviors such as exercise and eating behaviors and response-contingent positive reinforcement. The effectiveness of this <b>computer</b> <b>program</b> as a tool in weight loss programs was evaluated and assessed in order to determine possible applications of such innovative techniques in the future. Ten subjects participated in this study. The subjects were divided randomly into two cohorts, Group A and Group B. The duration of study was eight weeks and a crossover design was used. Group A used the <b>computer</b> <b>program</b> for the first four weeks and then group B used the <b>computer</b> <b>program</b> for the remaining four weeks of the study. During the weeks when the subjects were not using the <b>computer</b> <b>program,</b> the individuals in that group were given written feedback by a graduate assistant. Results indicated that most of the subjects maintained their commitments better when they were using the <b>computer</b> <b>program,</b> but none of the differences are statistically significant except for food commitment scores in one group. The subject's opinions about the benefits of the <b>computer</b> <b>program</b> and the <b>computer</b> attitude scores did not change after using the <b>computer</b> <b>program.</b> M. S. (Master of Science...|$|R
5000|$|... "Many {{people are}} {{interested}} in meditation, but not so many are interested in <b>computer</b> <b>programming.</b> Yet <b>computer</b> <b>programming</b> is so similar that you could call it meditation." ...|$|R
40|$|This paper {{describes}} the recently developed "genetic programming " paradigm which genetically breeds popu-lations of <b>computer</b> <b>programs</b> to solve problems. In ge-netic programming, {{the individuals in}} the population are hierarchical <b>computer</b> <b>programs</b> of various sizes and shapes. This paper also extends the genetic program-ming paradigm to a "co-evolution " algorithm which op-erates simultaneously on two populations of indepen-dently-acting hierarchical <b>computer</b> <b>programs</b> of various sizes and shapes. 1. INTRODUCTION AND OVERVIEW This paper {{describes the}} recently developed "genetic pro-gramming " paradigm which genetically breeds populations of <b>computer</b> <b>programs</b> to solve problems. In genetic pro...|$|R
50|$|In <b>computer</b> <b>programming,</b> gene {{expression}} programming (GEP) is an evolutionary algorithm that creates <b>computer</b> <b>programs</b> or models. These <b>computer</b> <b>programs</b> are complex tree structures that learn and adapt by changing their sizes, shapes, and composition, {{much like a}} living organism. And like living organisms, the <b>computer</b> <b>programs</b> of GEP are also encoded in simple linear chromosomes of fixed length. Thus, GEP is a genotype-phenotype system, benefiting from a simple genome to keep and transmit the genetic information and a complex phenotype to explore the environment and adapt to it.|$|R
40|$|A {{very large}} scale <b>computer</b> <b>programming</b> {{procedure}} called the DIALOG Executive System {{has been developed}} for the Univac 1100 series computers. The executive <b>computer</b> <b>program,</b> DIALOG, controls the sequence of execution and data management function for a library of independent <b>computer</b> <b>programs.</b> Communication of common information is accomplished by DIALOG through a dynamically constructed and maintained data base of common information. The unique feature of the DIALOG Executive System is {{the manner in which}} <b>computer</b> <b>programs</b> are linked. Each program maintains its individual identity and as such is unaware of its contribution to the large scale program. This feature makes any <b>computer</b> <b>program</b> a candidate for use with the DIALOG Executive System. The installation and use of the DIALOG Executive System are described at Johnson Space Center...|$|R
5000|$|Operator is {{also used}} for {{denoting}} the symbol of a mathematical operation. This is related with the meaning of [...] "operator" [...] in <b>computer</b> <b>programming,</b> see operator (<b>computer</b> <b>programming).</b>|$|R
