110|374|Public
5|$|From {{the advent}} of very-large-scale {{integration}} (VLSI) computer-chip fabrication technology in the 1970s until about 1986, speed-up in computer architecture was driven by doubling <b>computer</b> <b>word</b> size—the amount of information the processor can manipulate per cycle. Increasing the word size reduces the number of instructions the processor must execute to perform an operation on variables whose sizes are greater than {{the length of the}} word. For example, where an 8-bit processor must add two 16-bit integers, the processor must first add the 8 lower-order bits from each integer using the standard addition instruction, then add the 8 higher-order bits using an add-with-carry instruction and the carry bit from the lower order addition; thus, an 8-bit processor requires two instructions to complete a single operation, where a 16-bit processor would be able to complete the operation with a single instruction.|$|E
25|$|A {{number of}} {{typographical}} conventions originate from {{the widespread use}} of the typewriter, based on the characteristics and limitations of the typewriter itself. For example, the QWERTY keyboard typewriter did not include keys for the en dash and the em dash. To overcome this limitation, users typically typed more than one adjacent hyphen to approximate these symbols. This typewriter convention is still sometimes used today, even though modern <b>computer</b> <b>word</b> processing applications can input the correct en and em dashes for each font type.|$|E
2500|$|In {{handwriting}} neither Esperanto nor Novial presents any problem. However, the diacritics of Esperanto {{require special}} methods for typing and printing. The original method {{was a set}} of digraphs {{now known as the}} [...] "h-system", but with the rise of <b>computer</b> <b>word</b> processing a so-called [...] "x-system" [...] has become equally popular. These systems are described in the article Esperanto orthography. However, with the advent of Unicode, the need for such work-arounds has lessened.|$|E
50|$|Sheller-Globe's {{plastics}} {{manufacturing capabilities}} were also expanded in 1984 {{with the addition}} of the Engineered Polymers Company, a custom molder of structural foam cabinets for <b>computers,</b> <b>word</b> processors, work station components, communications devices, networking systems and other business machines.|$|R
5000|$|Watterson College was a private, {{for profit}} two-year vocational/technical school that {{operated}} in Los Angeles, California from 1915-1997. It offered classes {{and training in}} various entry-level professions such as business, <b>computers,</b> <b>word</b> processing, medical assisting, retailing, and paralegal services.|$|R
50|$|Employing {{approximately}} 1,700 vacuum tubes, the <b>computer's</b> <b>word</b> length was 33 bits. It had an ultrasonic mercury {{delay line}} memory of 255 words, with an average access time of 500 microseconds. An addition or subtraction was clocked at 100 microseconds, multiplication at 1,600 microseconds, and division at 2,100 microseconds.|$|R
2500|$|In {{handwritten}} Esperanto, the diacritics pose no problem. However, {{since they}} don't appear on standard alphanumeric keyboards, various alternative {{methods have been}} devised for representing them in printed and typed text. The original method was a set of digraphs {{now known as the}} [...] "h-system", but with the rise of <b>computer</b> <b>word</b> processing a so-called [...] "x-system" [...] has become equally popular. These systems are described below. However, with the advent of Unicode, the need for such work-arounds has lessened.|$|E
2500|$|A subset Y of X can be {{identified}} with an indexed family of bits with index set X, with the bit indexed by x ∈ X being 1 or 0 according {{to whether or not}} x ∈ Y. (This is the so-called characteristic function notion of a subset.) [...] For example, a 32-bit <b>computer</b> <b>word</b> consists of 32 bits indexed by the set {0,1,2,…,31}, with 0 and 31 indexing the low and high order bits respectively. For a smaller example, if X = {a,b,c} where a, b, c are viewed as bit positions in that order from left to right, the eight subsets {}, {c}, {b}, {b,c}, {a}, {a,c}, {a,b}, and {a,b,c} of X can {{be identified}} with the respective bit vectors 000, 001, 010, 011, 100, 101, 110, and 111. Bit vectors indexed by the set of natural numbers are infinite sequences of bits, while those indexed by the reals in the unit interval [...] are packed too densely to be able to write conventionally but nonetheless form well-defined indexed families (imagine coloring every point of the interval [...] either black or white independently; the black points then form an arbitrary subset of [...] ).|$|E
50|$|The byte (B) is {{a binary}} {{character}} string typically operated upon as one unit. It is usually shorter than a <b>computer</b> <b>word.</b>|$|E
25|$|High-end {{digital image}} {{equipment}} are often {{able to deal}} with larger integer ranges for each primary color, such as 0..1023 (10 bits), 0..65535 (16 bits) or even larger, by extending the 24-bits (three 8-bit values) to 32-bit, 48-bit, or 64-bit units (more or less independent from the particular <b>computer's</b> <b>word</b> size).|$|R
50|$|Since a {{macro virus}} {{depends on the}} {{application}} rather than the operating system, it can infect a computer running any operating system to which the targeted application has been ported. In particular, since Microsoft Word is available on Macintosh <b>computers,</b> <b>word</b> macro viruses can attack some Macs in addition to Windows platforms.|$|R
5000|$|List of {{computer}} term etymologies, {{the origins of}} <b>computer</b> science <b>words</b> ...|$|R
50|$|PC-Write was a <b>computer</b> <b>word</b> {{processor}} {{and was one}} of the first three widely popular software products sold via the marketing method that became known as shareware. It was originally written by Bob Wallace in early 1983.|$|E
5000|$|B is typeless, or more {{precisely}} has one data type: the <b>computer</b> <b>word.</b> Most operators (e.g. , , , [...] ) treated this as an integer, but others treated it as a memory address to be dereferenced. In many other ways it {{looked a lot like}} an early version of C. There are a few library functions, including some that vaguely resemble functions from the standard I/O library in C.|$|E
5000|$|In {{handwriting}} neither Esperanto nor Novial presents any problem. However, the diacritics of Esperanto {{require special}} methods for typing and printing. The original method {{was a set}} of digraphs {{now known as the}} [...] "h-system", but with the rise of <b>computer</b> <b>word</b> processing a so-called [...] "x-system" [...] has become equally popular. These systems are described in the article Esperanto orthography. However, with the advent of Unicode, the need for such work-arounds has lessened.|$|E
50|$|Check digits and parity bits {{are special}} cases of checksums, {{appropriate}} for small {{blocks of data}} (such as Social Security numbers, bank account numbers, <b>computer</b> <b>words,</b> single bytes, etc.). Some error-correcting codes are based on special checksums which not only detect common errors but also allow the original data to be recovered in certain cases.|$|R
40|$|We {{propose a}} new {{algorithm}} for fast multiplication of large integers having a precision of 2 <b>computer</b> <b>words,</b> where k is an integer. The algorithm {{is derived from}} the Karatsuba-Ofman Algorithm and has the same asymptotic complexity. However, the running time of the new algorithm is slightly better, and it makes one third as many recursive calls...|$|R
5000|$|Writing in the <b>Computer</b> Age: <b>Word</b> Processing Skills and Style for Every Writer ...|$|R
5000|$|In {{handwritten}} Esperanto, the diacritics pose no problem. However, {{since they}} don't appear on standard alphanumeric keyboards, various alternative {{methods have been}} devised for representing them in printed and typed text. The original method was a set of digraphs {{now known as the}} [...] "h-system", but with the rise of <b>computer</b> <b>word</b> processing a so-called [...] "x-system" [...] has become equally popular. These systems are described below. However, with the advent of Unicode, the need for such work-arounds has lessened.|$|E
50|$|A {{number of}} {{typographical}} conventions originate from {{the widespread use}} of the typewriter, based on the characteristics and limitations of the typewriter itself. For example, the QWERTY keyboard typewriter did not include keys for the en dash and the em dash. To overcome this limitation, users typically typed more than one adjacent hyphen to approximate these symbols. This typewriter convention is still sometimes used today, even though modern <b>computer</b> <b>word</b> processing applications can input the correct en and em dashes for each font type.|$|E
50|$|Adaptive {{technology}} is the modification, or adaptation, of existing devices, methods, or {{the creation of new}} uses for existing devices, to enable a person to complete a task. Examples include the use of remote controls, and the autocomplete (word completion) feature in <b>computer</b> <b>word</b> processing programs, which both help individuals with mobility impairments to complete tasks. Adaptations to wheelchair tires are another example; widening the tires enables wheelchair users to move over soft surfaces, such as deep snow on ski hills, and sandy beaches.|$|E
50|$|An {{automated}} {{information system}} (AIS) is an assembly of computer hardware, software, firmware, or {{any combination of}} these, configured to accomplish specific information-handling operations, such as communication, computation, dissemination, processing, and storage of information. Included are <b>computers,</b> <b>word</b> processing systems, networks, or other electronic information handling systems, and associated equipment. Management information systems are a common example of automated information systems.|$|R
40|$|In {{the article}} {{the method of}} {{acceleration}} of calculations {{at the level of}} the simultaneous processing of <b>computer</b> <b>words</b> in the systems, guided the flow of data is offered. The structure of the system, allowing the simultaneous forming and execution of a few instructions, is considered. Possibility of automatic identification of words of actors and dates on the basis of graph of task is shown. ? ?????? ????????? ????? ????????? ?????????? ?? ?????? ???????????? ????????? ???????? ???? ? ????????, ??????????? ??????? ??????. ??????????? ????????? ???????, ??????????? ????????????? ???????????? ? ?????????? ?????????? ??????. ???????? ??????????? ?????????????? ????????????? ???? ??????? ? ?????? ?? ?????? ????? ??????...|$|R
50|$|The Sirius {{was based}} on decimal numbers stored as 4 binary digits each, a useful design for many tasks that the Neuron {{circuits}} allowed to be implemented inexpensively. Numbers were stored as a string of ten decimal digits in one of eight accumulators, along with a parity bit. The <b>computer</b> <b>words</b> {{could also be used}} to store half of a double-length number, or five characters.|$|R
50|$|The use of Vietnamese Quoted-Readable (VIQR), a {{convention}} for writing in Vietnamese using ASCII characters, began during the Vietnam War, when typewriters {{were the main}} tool for word processing. Because the U.S. military required a way to represent Vietnamese scripts accurately on official documents, VIQR was invented for the military. Due to its longstanding use, VIQR was a natural choice for <b>computer</b> <b>word</b> processing, prior to the appearance of VNI, VPSKeys, VISCII, and Unicode. It is still widely used for information exchange on computers, but is not desirable for design and layout, due to its cryptic appearance.|$|E
5000|$|<b>Computer</b> <b>word</b> {{processors}} {{will allow}} the user to input as many spaces as desired. Although the default setting for many applications' grammar-checkers (e.g., Microsoft Word) is single sentence spacing, they can be adjusted to recognize double sentence spacing as correct also. A program called PerfectIt is an [...] "MS Word add-in that helps professionals to proofread faster". The producer states that a feature {{was added to the}} most recent version of their program (as of August 2009), [...] "to convert two spaces {{at the end of a}} sentence into one", but they have [...] "never had any requests to convert one space into two".|$|E
50|$|A {{voice font}} is a computer-generated voice {{that can be}} {{controlled}} by specifying parameters such as speed and pitch and made to pronounce text input. The concept is akin {{to that of a}} text font or a MIDI instrument {{in the sense that the}} same input may easily be represented in several different ways based on the design of each font. In spite of current shortcomings in the underlying technology for voice fonts, screen readers and other devices used to enhance accessibility of text to persons with disabilities, can benefit from having more than one default voice font. This happens in the same way that users of a traditional <b>computer</b> <b>word</b> processor benefit from having more than one text font.|$|E
5000|$|If each node and edge can be {{represented}} in [...] space, the entire tree can {{be represented}} in [...] space. The total length of all the strings {{on all of the}} edges in the tree is , but each edge can be stored as the position and length of a substring of , giving a total space usage of [...] <b>computer</b> <b>words.</b> The worst-case space usage of a suffix tree is seen with a fibonacci word, giving the full [...] nodes.|$|R
5000|$|Business - Accounting, Business Technology and the web, Advanced <b>Computer</b> Applications <b>word,</b> excel and powerpoint, Introduction to Business, Marketing, Personal Computer Applications, English, Languages ...|$|R
50|$|Memory is {{addressed}} as 8-bit bytes. Loads and stores support data sizes from 8 bits to the <b>computer's</b> <b>word</b> size. Loads and stores {{larger than a}} byte need not be aligned to their natural word-width, but alignment may increase performance. (E.g. 16-bit, 2-byte data may fetch and store in less time if it is always aligned to start only on even addresses.) This feature reduces code size, and can be supported on simple CPUs with software emulation driven by an alignment failure interrupt.|$|R
50|$|From {{the advent}} of very-large-scale {{integration}} (VLSI) computer-chip fabrication technology in the 1970s until about 1986, speed-up in computer architecture was driven by doubling <b>computer</b> <b>word</b> size—the amount of information the processor can manipulate per cycle. Increasing the word size reduces the number of instructions the processor must execute to perform an operation on variables whose sizes are greater than {{the length of the}} word. For example, where an 8-bit processor must add two 16-bit integers, the processor must first add the 8 lower-order bits from each integer using the standard addition instruction, then add the 8 higher-order bits using an add-with-carry instruction and the carry bit from the lower order addition; thus, an 8-bit processor requires two instructions to complete a single operation, where a 16-bit processor would be able to complete the operation with a single instruction.|$|E
50|$|The M&R Enterprises Sup'R'Terminal was {{the first}} Apple II {{peripheral}} card to enable the display of 80 columns of text on a connected monitor. The Sup'R'Terminal is compatible with slot 03 in the Apple II and II+. As the first card making 80 columns of upper and lower case text displayable on these machines, {{it is the only}} card supported by the II+ version of Apple Writer and thus the only way to see on a monitor the true layout of text as it will be printed on a page with this popular early personal <b>computer</b> <b>word</b> processor. The Apple II and II+ had until this time only displayed 40 columns of text per line, half the characters included per line on a printed page. This transition to 80-column display was an early step in bringing the WYSIWYG concept to the Apple ecosystem.|$|E
50|$|The {{process of}} {{creating}} the charge well is used as the write operation in a computer memory, storing a single binary digit, or bit. A collection of dots or spaces, often one horizontal row on the display, represents a <b>computer</b> <b>word.</b> There is {{a relationship between the}} size and spacing of the dots and their lifetime, as well as the ability to reject crosstalk with adjacent dots. This places an upper limit on the memory density, and each Williams tube could typically store about 1024-2560 bits of data. Because the electron beam is essentially inertia-free and can be moved anywhere on the display, the computer can access any location, making it a random access memory. Typically the computer would load the address as an X and Y pair into the driver circuitry and then trigger a time base generator that would sweep the selected locations, reading from or writing to the internal registers, normally implemented as flip-flops.|$|E
5000|$|The {{basics of}} <b>computers</b> and <b>word</b> {{processing}} along with scanning and computer art techniques are taught. Students learn {{to write and}} publish their own magazine.|$|R
50|$|Typewriters and {{eventually}} <b>computer</b> based <b>word</b> processors and printers let people print {{and put together}} their own documents. Desktop publishing is common in the 21st century.|$|R
5000|$|Most early {{computers}} {{used some}} form of serial memory (primarily delay line memory). Unlike the random access memory of modern <b>computers,</b> <b>words</b> in serial memory are made available one at a time; {{the time required to}} access a particular word depends on the [...] "distance" [...] between it and the word currently being read. If a given line held n words, the average time to read a word would be [...] word times. Without optimum coding, such a machine would spend most of its time idly waiting for instructions and data.|$|R
