4|26|Public
50|$|The JTAG In <b>Circuit</b> <b>Emulator</b> (JTAGICE) {{debugging}} tool supports on-chip debugging (OCD) of AVRs with a JTAG interface. The original JTAGICE mkI uses an RS-232 interface to a PC and {{can only}} program AVR's with a JTAG interface. The JTAGICE mkI {{is no longer in}} production, however it has been replaced by the JTAGICE mkII.|$|E
40|$|Abstract—The {{measures}} and proposals of teaching {{reform in the}} MCU course based on PROTEUS platform are introduced in this paper. The reform of theoretical teaching and practical teaching is presented. At present, many colleges teach theoretical knowledge and practical experiment separately in the MCU course. In order to solve these common problems, a new teaching method combined theory and practice based on PROTEUS platform is proposed. This new teaching method is constructed by online teaching resource, experimental box, simulation platform and <b>circuit</b> <b>emulator,</b> it is mainly implemented through a specific program. It has proved that this new teaching method not only let students understand the MCU principles well, but also improve their capability to develop a systematic design...|$|E
40|$|In the {{framework}} of the LARGE-SOFC European Integrated Project, an SOFC anodic <b>circuit</b> <b>emulator</b> has been designed to study the interaction between anodic and cathodic sides of the fuel cell stack. This new experimental facility has been designed to be coupled with the cathodic side emulator developed by TPG at the University of Genoa, Italy. This activity has been carried out in order to built a complete hybrid system emulator equipped with a 100 kW recuperated micro gas turbine, a cathodic vessel located between recuperator outlet and combustor inlet, and an anodic circuit based on the coupling of a single stage ejector with an anodic volume. In order to design the anodic circuit test rig, a system analysis has been carried out considering the coupling between a planar SOFC stack and the 100 kW commercial microturbine installed at TPG laboratory. A new hybrid system has been studied and the anodic side properties have been defined in terms of fuel mass flow rate, recirculated mass flow rate, pressures, and temperatures. Starting from these calculations the ejector geometry has been designed and the anodic side volume has been defined. A CFD analysis has been carried out to design the pipes necessary for the connection between the ejector and the anodic volume, and for the anodic side outlet. Particular attention has been devoted to the heat exchanger designed to emulate the anodic flow heating inside the stack. In fact, two original tubolar heat exchangers have been designed to be introduced inside the cathodic volume, in order to exploit the cathodic heat for the anodic side too...|$|E
30|$|In this paper, a CMOS <b>emulator</b> <b>circuit</b> {{that can}} {{reproduce}} nanoscale memristive behavior is proposed. The proposed <b>emulator</b> <b>circuit</b> can mimic the pinched hysteresis loops of nanoscale memristor memory's current-voltage relationship without using any resistor array, complicated circuit blocks, etc. that may occupy very large layout area. Instead {{of using a}} resistor array, other complicated circuit blocks, etc., the proposed <b>emulator</b> <b>circuit</b> can describe the nanoscale memristor's current-voltage relationship using a simple voltage-controlled resistor, where its resistance can be programmed by the stored voltage at the state variable capacitor. Comparing the layout area between the previous <b>emulator</b> <b>circuit</b> and the proposed one, the layout area of the proposed <b>emulator</b> <b>circuit</b> {{is estimated to be}} 32 times smaller than the previous <b>emulator</b> <b>circuit.</b> The proposed CMOS <b>emulator</b> <b>circuit</b> of nanoscale memristor memory will be very useful in developing hybrid circuits of CMOS/nanoscale memristor memory.|$|R
30|$|In this paper, a CMOS circuit {{that could}} emulate memristive {{behavior}} was proposed. The proposed <b>emulator</b> <b>circuit</b> could mimic the pinched hysteresis loops of a memristor's current-voltage relationship without using a resistor array and complicated circuit blocks that may occupy very large layout area. Instead {{of using a}} resistor array, other complicated circuit blocks, etc., the proposed <b>emulator</b> <b>circuit</b> could mimic memristive behavior using simple voltage-controlled resistors, where the resistance can be programmed by the stored voltage at the state variable capacitor. Comparing the layout area between the previous <b>emulator</b> <b>circuit</b> and the proposed one, the layout area of the <b>emulator</b> <b>circuit</b> proposed in this paper {{was estimated to be}} 32 times smaller than the previous <b>emulator</b> <b>circuit.</b>|$|R
30|$|To {{mitigate}} the large area overhead {{of the previous}} <b>emulator</b> <b>circuit,</b> we propose a new <b>emulator</b> <b>circuit</b> of memristors that is more compact and simpler than the previous <b>emulator</b> <b>circuits</b> [6]. The new <b>emulator</b> <b>circuit</b> does not use a resistor array, an analog-to-digital converter, and so on that usually occupy very large area. Instead of using the complicated circuit blocks that were mentioned just earlier, the new circuit can change its memristance value by a simple voltage-controlled resistor that can be realized by a single n-type metal-oxide-semiconductor field-effect transistor (NMOSFET) device.|$|R
40|$|Abstract. The {{essential}} {{dynamics of}} some biological central pattern generators (CPGs) can {{be captured by}} a model consisting of N neurons connected in a ring. These circuits, like many oscillatory nonlinear circuits of sucient complexity, are capable of multistability, that is, of generating dierent firing patterns distin-guished by the phasic relationships between the firing in each circuit element (neuron). Moreover, a shift in firing pattern can be induced by a transient perturba-tion. A systematic approach, based on phase-response curve (PRC) theory, {{was used to determine}} the optimum timing for perturbations that induce a shift in the firing pattern. The first step was to visualize the solution space of the ring circuit, including the attrac-tive basins for each stable firing pattern; this was possible using the relative phase of N ÿ 1 oscillators, with respect to an arbitrarily selected reference oscilla-tor, as coordinate axes. The trajectories in this phase space were determined using an iterative mapping based only on the PRCs of the uncoupled component oscillators; this algorithm was called a <b>circuit</b> <b>emulator.</b> For an accurate mapping of the attractive basin of each pattern exhibited by the ring circuit, the emulator had {{to take into account the}} eect of a perturbation or input on the timing of two bursts following the onset of the perturbation, rather than just one. The visualiza-tion of the attractive basins for rings of two, three, and four oscillators enabled the accurate prediction of the amounts of phase resetting applied to up to N ÿ 1 oscillators within a cycle that would induce a transition from any pattern to any another pattern. Finally, the timing and synaptic characterization of an input called the switch signal was adjusted to produce the desired amount of phase resetting. ...|$|E
30|$|Figure  2 e,[*]f,[*]g,[*]h {{shows the}} {{simulation}} {{results of the}} proposed <b>emulator</b> <b>circuit</b> with four times higher frequency of 40 kHz than that of Figure  2 a,[*]b,[*]c,[*]d, VIN, IIN, VC, and the pinched hysteresis loop, respectively, with 10 kHz. A sinusoidal voltage with 40 kHz that {{is applied to the}} <b>emulator</b> <b>circuit</b> is shown in Figure  2 e. Here the first three peaks are for increasing VC in Figure  1; thereby, the <b>emulator</b> <b>circuit</b> changes from RESET to SET. The next three peaks are for decreasing the state variable; thus, the <b>emulator</b> <b>circuit</b> can return to RESET. IIN and VC with the sinusoidal function that is indicated in Figure  2 e are shown in Figure  2 f,[*]g, respectively. Figure  2 h shows the voltage-current relationship of the <b>emulator</b> <b>circuit.</b> In Figure  2 h we can see three voltage-current loops at the right and another three voltage-current loops at the left which correspond to the three high peaks and three low peaks in Figure  2 e, respectively.|$|R
30|$|To {{describe}} the memristive behavior {{that follows the}} relationship of current and voltage in Equation 1, a few <b>emulator</b> <b>circuits</b> have already been proposed [3 – 5]. Pershin and Ventra proposed an <b>emulator</b> <b>circuit</b> that is composed of an analog-to-digital converter and micro-controller that are implemented by discrete off-chip devices. Thus, they can be considered too much complicated and too large to be integrated in a single chip [3]. Jung et al. proposed an <b>emulator</b> <b>circuit</b> {{that is based on}} CMOS technology [4], where a memristor that should change its resistance in response to the applied current and voltage is implemented by an array of resistors. In the <b>emulator</b> <b>circuit</b> with resistor array, the analog-to-digital converter and the decoder circuit select a proper resistor among many resistors that are placed in the resistor array according to the applied voltage or current [4]. One problem in the <b>emulator</b> <b>circuit</b> [4] is that the voltage-current relationship seems sawtooth. This is because the resolution of memristance change is decided by the resolution of the analog-to-digital converter, as you see in [4]. If we have 4 -bit analog-to-digital converter in the <b>emulator</b> <b>circuit,</b> it means that only 16 values of memristance are available. As a result, when we apply a voltage that is a sinusoidal function to the memristor, we can know that its current is increased or decreased like sawtooth. To improve the resolution of memristance change, the resolution of the analog-to-digital converter should be increased too. If the resolution of the analog-to-digital converter is improved from 4 to 5 bit, the voltage-current relationship of the <b>emulator</b> <b>circuit</b> with 5 bit seems to be much finer than the <b>emulator</b> <b>circuit</b> with a 4 -bit analog-to-digital converter, as shown in [4]. To improve the resolution twice, however, the number of resistors in the resistor array should be double too. It can cause a large area overhead in realizing this <b>emulator</b> <b>circuit</b> in a single chip. Especially, in implementing memristor array with this <b>emulator</b> <b>circuit,</b> this large area overhead of each memristor emulator cell can be a serious problem because each cell in the memristor array should be realized by this large-area single memristor emulator.|$|R
40|$|We suggest <b>circuit</b> realizations of <b>emulators</b> {{transforming}} memristive devices into effective floating memcapacitive and meminductive systems. The <b>emulator's</b> <b>circuits</b> {{are based}} on second generation current conveyors and involve either four single-output or two dual-output current conveyors. The equations governing the resulting memcapactive and meminductive systems are presented. Comment: Electronics Letters (in press...|$|R
40|$|A VHDL {{library is}} {{presented}} here which allows a designer to quickly develop test benches, monitors and virtual In <b>Circuit</b> <b>Emulators</b> (ICE) for simulation. This library mimics {{most of the}} useful C string functions, C file processing functions and UNIX-like pattern matching functions. This allows the VHDL designer to think in the C/UNIX language paradigm. These features are demonstrated for a basic virtual ICE-wrapper test bench implementation. When generating test benches for testing a hardware design, {{there are many ways}} this test bench can be written. There are third party test bench generation tools and languages. However to maintain a design with its tests in the most neutral format, the design and its tests should be described in the most neutral format. For hardware designs the most neutral format would b...|$|R
40|$|This brief {{introduces}} a new floating memristor <b>emulator</b> <b>circuit</b> based on second-generation current conveyors and passive elements. A mathematical model {{to characterize the}} memristor behavior was derived, showing a good accuracy among HSPICE simulations and experimental results. An analysis of the frequency behavior of the memristor is also described, showing that the frequency-dependent pinched hysteresis loop in the current-versus-voltage plane holds up to 20. 2 kHz. Theoretical derivations and related results are experimentally validated through implementations from commercially available devices, and the proposed memristor <b>emulator</b> <b>circuit</b> can easily be reproducible at a low cost. Furthermore, the <b>emulator</b> <b>circuit</b> {{can be used as}} a teaching aid and for future applications with memristors, such as sensors, cellular neural networks, chaotic systems, programmable analog circuits, and nonvolatile memory devices. © 2004 - 2012 IEEE. Peer Reviewe...|$|R
30|$|Memristors {{are being}} intensively {{explored}} as possible candidate for future memories because of simplicity in fabrication, possibility in three-dimensional integration, compatibility with (complementary metal-oxide-semiconductor) CMOS {{technology in the}} fabrication process, and so on. However, real integration of memristors and CMOS circuits is very rarely available to most engineers and scholars {{who want to be}} involved in designing various kinds of CMOS circuits using memristors. To help those engineers and scholars who cannot access memristor fabrication technology but want to design memristor <b>circuits,</b> a CMOS <b>emulator</b> <b>circuit</b> that can reproduce the physical hysteresis loop of memristor's voltage-current relationship is needed.|$|R
40|$|A new {{floating}} emulator for the flux-controlled memristor {{is introduced}} in this paper. The proposed <b>emulator</b> <b>circuit</b> {{is very simple}} and consists of only two current feedback operational amplifiers (CFOAs), two analog multipliers, three resistors, and two capacitors. The emulator can be configured as an incremental or decremental type memristor by using an additional switch. The mathematical model of the emulator is derived to characterize its behavior. The hysteresis behavior of the emulator is discussed in detail, showing that the pinched hysteresis loops in v-i plane depend {{not only on the}} amplitude-to-frequency ratio of the exciting signal but also on the time constant of the <b>emulator</b> <b>circuit</b> itself. Experimental tests are provided to validate the emulator’s workability...|$|R
40|$|In this {{contribution}} {{we present}} a complete direct power injection setup suitable for the susceptibility measurement of battery management systems. To provide a defined state, we propose {{the use of a}} battery stack <b>emulator</b> <b>circuit,</b> which applies adjustable and reproducible inputs to the battery monitoring system...|$|R
40|$|This chapter reviews {{a number}} of recent methods to model memristive systems using analog and micro-processor based circuits. As memristors have not yet entered the market in any format, these <b>emulator</b> <b>circuits</b> provide {{effective}} platforms for researchers to develop applications for memristive systems. Department of Electronic and Information Engineerin...|$|R
40|$|Thesis (Master's) [...] University of Washington, 2016 - 06 The Large Hadron Collider (LHC) at the European Center for Nuclear Research (CERN) tracks a {{schedule}} of long physics runs, followed by periods of inactivity known as Long Shutdowns (LS). During these LS phases both the LHC, and the experiments around its ring, undergo maintenance and upgrades. For the LHC these upgrades improve their ability to create data for physicists; the more data the LHC can create the more opportunities there are for rare events to appear that physicists will be interested in. The experiments upgrade so they can record the data and ensure the event won’t be missed. Currently the LHC is in Run 2 having completed the first LS of three. This thesis focuses {{on the development of}} Field-Programmable Gate Array (FPGA) -based readout systems that span across three major tasks of the ATLAS Pixel data acquisition (DAQ) system. The evolution of Pixel DAQ’s Readout Driver (ROD) card is presented. Starting from improvements made to the new Insertable B-Layer (IBL) ROD design, which was part of the LS 1 upgrade; to upgrading the old RODs from Run 1 to help them run more efficiently in Run 2. It also includes the research and development of FPGA based DAQs and integrated <b>circuit</b> <b>emulators</b> for the ITk upgrade which will occur during LS 3 in 2025...|$|R
40|$|The Large Hadron Collider (LHC) at the European Center for Nuclear Research (CERN) tracks a {{schedule}} of long physics runs, followed by periods of inactivity known as Long Shutdowns (LS). During these LS phases both the LHC, and the experiments around its ring, undergo maintenance and upgrades. For the LHC these upgrades improve their ability to create data for physicists; the more data the LHC can create the more opportunities there are for rare events to appear that physicists will be interested in. The experiments upgrade so they can record the data and ensure the event won’t be missed. Currently the LHC is in Run 2 having completed the first LS of three. This thesis focuses {{on the development of}} Field-Programmable Gate Array (FPGA) -based readout systems that span across three major tasks of the ATLAS Pixel data acquisition (DAQ) system. The evolution of Pixel DAQ’s Readout Driver (ROD) card is presented. Starting from improvements made to the new Insertable B-Layer (IBL) ROD design, which was part of the LS 1 upgrade; to upgrading the old RODs from Run 1 to help them run more efficiently in Run 2. It also includes the research and development of FPGA based DAQs and integrated <b>circuit</b> <b>emulators</b> for the ITk upgrade which will occur during LS 3 in 2025...|$|R
30|$|VC that {{controls}} two voltage-controlled resistors M 1 and M 2 {{acts as a}} state variable in the <b>emulator</b> <b>circuit</b> that is calculated by an amount of stored charge at C 1. When VIN+ is greater than VIN-, TG 7 is on and both TG 5 and TG 6 are off. At this time, the current mirror that is composed of M 5 and M 6 delivers the programming current to C 1 to increase an amount of stored charge; thereby the state variable becomes larger. On the other hand, when VIN- is greater than VIN+, TG 7 is off and both TG 5 and TG 6 are on. By doing so, we can decrease the amount of charge that is stored at the state variable capacitorC 1. The discharging current path is composed of M 7, M 8, M 9, and M 10 in Figure  1. Here VBN and VBP are the biasing voltages for NMOSFETs and PMOSFETs, respectively. VBN and VBP are made from the biasing circuit that is shown in Figure  1. D 1, D 2, and D 3 are the diodes {{that are used in}} the proposed <b>emulator</b> <b>circuit</b> to limit the minimum value of VC. This minimum value of VC is needed to avoid the dead zone which may be caused by the sub-threshold region of the voltage-controlled resistors M 1 and M 2. VD means the diode voltage of D 1, D 2, and D 3. VDD is the power supply voltage of the CMOS <b>emulator</b> <b>circuit</b> in Figure  1.|$|R
40|$|Traditionally, FPGAs {{have been}} {{confined}} to the limited role of small, low-volume ASIC replacements and as <b>circuit</b> <b>emulators.</b> However, continued Moore's law scaling has given FPGAs new life as accelerators for applications that map well to fine-grained parallel substrates. Examples of such applications include processor modelling, compression, and digital signal processing. Although FPGAs continue to increase in size, some interesting designs still fail to fit in to a single FPGA. Many tools exist that partition RTL descriptions across FPGAs. Unfortunately, existing tools have low performance due to the inefficiency of maintaining the cycle-by-cycle behavior of RTL among discrete FPGAs. These tools are unsuitable for use in FPGA program acceleration, as the purpose of an accelerator is to make applications run faster. This thesis presents latency-insensitive channels, a language-level mechanism by which programmers express points in their their design at which the cycle-by-cycle behavior of the design may be modified by the compiler. By decoupling the timing of portions of the RTL from the high-level function of the program, designs may be mapped to multiple FPGAs without suffering the performance degradation observed in existing tools. This thesis demonstrates, using a diverse set of large designs, that FPGA programs {{described in terms of}} latency-insensitive channels obtain significant gains in design feasibility, compilation time, and run-time when mapped to multiple FPGAs. by Kermin Elliott Fleming, Jr. Thesis (Ph. D.) [...] Massachusetts Institute of Technology, Dept. of Electrical Engineering and Computer Science, 2013. Cataloged from PDF version of thesis. Includes bibliographical references (p. 190 - 197) ...|$|R
40|$|Evolvable Hardware is a {{technique}} derived from evolutionary computation applied to a hardware design. The term evolutionary computation involves similar steps as involved in the human evolution. It has been given names {{in accordance with the}} electronic technology like, Genetic Algorithm (GA), Evolutionary Strategy (ES) and Genetic Programming (GP). In evolutionary computing, a configured bit is considered as a human chromosome for a genetic algorithm, which has to be downloaded into hardware. Early evolvable hardware experiments were conducted in simulation and the only elite chromosome was downloaded to the hardware, which was labelled as Extrinsic Hardware. With the invent of Field Programmable Gate Arrays (FPGAs) and Reconfigurable Processing Units (RPUs), it is now possible for the implementation solutions to be fast enough to evaluate a real hardware circuit within an evolutionary computation framework; this is called an Intrinsic Evolvable Hardware. This research has been taken in continuation with project 'Evolvable Hardware' done at Manukau Institute of Technology (MIT). The project was able to manually evolve two simple electronic circuits of NAND and NOR gates in simulation. In relation to the project done at MIT this research focuses on the following: To automate the simulation by using In <b>Circuit</b> Debugging <b>Emulators</b> (IDEs), and to develop a strategy of configuring hardware like an FPGA without the use of their company supplied in <b>circuit</b> debugging <b>emulators,</b> so that the evolution of an intrinsic evolvable hardware could be controlled, and is hardware independent. As mentioned, the research conducted here was able to develop an evolvable hardware friendly Generic Structure which could be used for the development of evolvable hardware. The structure developed was hardware independent and was able to run on various FPGA hardware’s for the purpose of intrinsic evolution. The structure developed used few configuration bits as compared to current evolvable hardware designs...|$|R
40|$|This paper {{starts with}} a short {{description}} of the Marburg model. The features required for a dedicated hardware emulator are worked out. Then a digital circuit solution is deduced, starting with the synapse circuit, continuing with the parameter storage slrategy and ending with the whole <b>emulator</b> <b>circuit</b> design. It will be shown that the emulator presented can be cascaded to fully interconnected networks and multilayer networks with or without feedback between layers. Further architectural possibilities {{are discussed in the}} last chapte...|$|R
30|$|One {{more thing}} to {{consider}} {{here is that}} the nonlinearity of memristive behaviors can be found when the effective width of memristor, w(t), in Equation 1 becomes much closer to the boundary constraints [1, 7]. This nonlinearity near the boundary values of w(t) was introduced in the HP model [1] and mathematically modeled by Corinto and Ascoli [7] to describe various nonlinear behaviors of memristors. In terms of implementation, the diode bridge circuit with LCR filter was proposed to reproduce memristive nature with nonlinearity by using a very simple electronic circuit [8]. In this paper, the window function that is used to define two boundary values of the state variable in the HP model [1] is realized in the CMOS <b>emulator</b> <b>circuit</b> that is shown in Figure  1. The <b>emulator</b> <b>circuit</b> in Figure  1 has two boundary values of the state variable that is defined by VC. Here we can know that the maximum value of VC cannot exceed VDD. And also, VC cannot be lower than VDD- 3 VD. Thus, the state variable of VC in Figure  1 can exist only between VDD and VDD- 3 VD, not being higher than VDD and lower than VDD- 3 VD, respectively.|$|R
40|$|Small scale {{solar and}} wind {{turbines}} are finding increased application in stand-alone, grid-connected and micro grid scenarios. New controllers for these devices are continually being developed. This paper documents the design and development of a low cost circuit to emulate the electrical characteristics of both photovoltaic arrays and wind turbines. The <b>emulator</b> <b>circuit</b> is intended {{as a tool to}} aid in the development of new wind turbine and photovoltaic controllers. The emulator consists of a DC / DC converter controlled by a microprocessor. A separate Maximum Power Point Tracking (MPPT) module is also described...|$|R
40|$|A memristor bridge {{neural circuit}} which {{is able to}} perform signed {{synaptic}} weighting was proposed in our previous study, where the synaptic operation was verified via software simulation of the mathematical model of the HP memristor. This study {{is an extension of}} the previous work advancing toward the circuit implementation where the architecture of the memristor bridge synapse is built with memristor <b>emulator</b> <b>circuits.</b> In addition, a simple neural network which performs both synaptic weighting and summation is built by combining memristor emulators-based synapses and differential amplifier circuits. The feasibility of the memristor bridge neural circuit is verified via SPICE simulations...|$|R
40|$|A new EPROM {{programmer}} and <b>emulator</b> <b>circuit</b> {{is described}} In this paper. This circuit is general purpose and has many useful features and applications, among which are; I- It {{can be used}} with any 8 bit microprocessor. Ii- It contains RAM and EPROM with variable capacities. Iii- It can be controlled via an IBM compatible PC. Iv- The RAM and EPROM can be used at the same time. V- The output signals can be connected to the external system using various methods (flat cable, D type connector or socket connector). The presented programmer/emulator circuit can be used for debugging microprocessor system with highly reduced costs and time. I...|$|R
40|$|International audienceThe {{time spent}} in {{simulation}} grows in an exponential form with {{the complexity of the}} circuit. Therefore, improving the simulation speed can represent a significant profit regarding the verification time. Several approaches can be used to speedup the simulation. These recent years, FPGAs have been used to develop emulators. These systems are composed of several thousands of FPGAs connected together through a programmable network. Although this approach seems very attractive with regard to the speedup, all the information included in a circuit description cannot be mapped on the emulator. In this paper, we propose a method to reproduce the timing behavior of the <b>circuit</b> on an <b>emulator...</b>|$|R
40|$|Conceptual memristors have {{recently}} gathered wider interest {{due to their}} diverse application in non-von Neumann computing, machine learning, neuromorphic computing, and chaotic circuits. We introduce a compact CMOS circuit that emulates idealized memristor characteristics and can {{bridge the gap between}} concepts to chip-scale realization by transcending device challenges. The CMOS memristor circuit embodies a two-terminal variable resistor whose resistance is controlled by the voltage applied across its terminals. The memristor 'state' is held in a capacitor that controls the resistor value. This work presents the design and simulation of the memristor emulation circuit, and applies it to a memcomputing application of maze solving using analog parallelism. Furthermore, the memristor <b>emulator</b> <b>circuit</b> can be designed and fabricated using standard commercial CMOS technologies and opens doors to interesting applications in neuromorphic and machine learning circuits. Comment: Submitted to International Symposium of Circuits and Systems (ISCAS) 201...|$|R
40|$|Understanding complex quantum matter {{presents}} a central challenge in condensed matter physics. The difficulty {{lies in the}} exponential scaling of the Hilbert space with the system size, making solutions intractable for both analytical and conventional numerical methods. As originally envisioned by Richard Feynman, this class of problems can be tackled using controllable quantum simulators. Despite many efforts, building an quantum emulator capable of solving generic quantum problems remains an outstanding challenge, as this involves controlling {{a large number of}} quantum elements. Here, employing a multi-element superconducting quantum circuit and manipulating a single microwave photon, we demonstrate that we can simulate the weak localization phenomenon observed in mesoscopic systems. By engineering the control sequence in our <b>emulator</b> <b>circuit,</b> we are also able to reproduce the well-known temperature dependence of weak localization. Furthermore, we can use our circuit to continuously tune the level of disorder, a parameter that is not readily accessible in mesoscopic systems. By demonstrating a high level of control and complexity, our experiment shows the potential for superconducting quantum circuits to realize scalable quantum simulators. Comment: 9 pages, including supplemen...|$|R
30|$|The VIN {{delivering}} {{block that}} {{is composed of}} four transmission gates, TG 1, TG 2, TG 3, and TG 4, can deliver VIN+ and VIN- that are plus and minus polarity of VIN, respectively, to VA that has only plus polarity, not minus. The delivered voltage VA is copied exactly to VB by the negative feedback circuit that is composed of the OP amp, G 2, M 3, and M 4. Using this circuit block, VB can {{be the same as}} VA by the feedback amplifier with unity gain. VB is connected to the voltage-controlled resistor M 2 that is controlled by VC. One more thing to note here is that VC controls both voltage-controlled resistors M 1 and M 2 that are electrically isolated from each other. By doing so, we can separate the memristor's current from the programming current to change the state variable that is stored at the capacitor C 1. If the memristor's current is not separated from the programming current, the state variable that decides memristance value can be maintained only at the moment when the programming voltage or current is applied to the memristor. If so, the <b>emulator</b> <b>circuit</b> cannot keep its programmed state variable when the applied voltage or current is removed.|$|R

