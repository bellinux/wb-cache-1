39|97|Public
25|$|A {{proportional}} typeface contains glyphs {{of varying}} widths, while a monospaced (non-proportional or fixed-width) typeface uses a single standard width for all glyphs in the font. Duospaced fonts {{are similar to}} monospaced fonts, but characters can also be two character widths instead of a single <b>character</b> <b>width.</b>|$|E
2500|$|In English-speaking countries, {{the commonplace}} {{typewriters}} printing fixed-width characters were standardized to print six horizontal lines per vertical inch, and had either of two variants of <b>character</b> <b>width,</b> called [...] "pica" [...] for ten characters per horizontal inch and [...] "elite" [...] for twelve. This {{differed from the}} use of these terms in printing, where they refer to the height of the characters on the page ("pica" [...] designating ten horizontal lines per vertical inch).|$|E
2500|$|The typeball {{elements}} for the Selectric Composer would physically fit on a Selectric, and vice versa, {{but they could}} not actually be used on each other's machines, because the characters were arranged differently around the element and were also positioned differently within each character area. Selectric Composer elements can be identified by a colored index arrow (the color is used to set a median <b>character</b> <b>width</b> on the machine) and an abbreviated series of letters and numbers identifying the font, size, and variation, for example [...] "UN-11-B" [...] for Univers 11-point bold (Adrian Frutiger had adapted his Univers font specifically for the Selectric Composer).|$|E
50|$|In {{addition}} to extra font width and weight combinations, the fonts are digitally interpolated, so that <b>character</b> <b>widths</b> scale uniformly with changing font weights. For fonts {{within a specific}} font weight, caps height, x-height, ascender and descender heights are the same. For oblique fonts, the slope is increased from 12° to the 16° of Frutiger's original drawings, and the <b>character</b> <b>widths</b> were adjusted optically. In addition, characters such as &, ®, euro sign, are redesigned, the ampersand to Frutiger's preferred true et ligature.|$|R
50|$|Differences in {{individual}} <b>character</b> <b>widths</b> accumulate over {{the length of}} a line, so that comparatively small differences would become readily apparent. Because of the differing <b>character</b> <b>widths</b> employed, the letterspacing exhibited by the Killian documents (matching that produced by a modern computer and printer) could not have been produced with a mechanical typewriter using proportional letterspacing in the early 1970s. At the time the documents were purportedly created, the matching letterspacing could only have been produced using phototypesetting or hot-metal printing. Since it is not a realistic possibility that Killian would have had these documents printed, Phinney concluded that they are almost certainly modern forgeries.|$|R
5000|$|The {{original}} Pitney-Bowes specification actually varies the narrow:wide width ratio to {{make all}} <b>characters</b> the same <b>width.</b> That is, <b>characters</b> with 2 wide elements use a 3:1 ratio, while characters with 3 wide elements use a 2:1 ratio, so all characters are 10 narrow elements wide (plus the inter-character space makes 11). [...] "Rationalized codabar" [...] uses a fixed ratio and allows the <b>character</b> <b>widths</b> to vary.|$|R
2500|$|The {{horizontal}} spacing of digits {{can also}} be proportional, with a <b>character</b> <b>width</b> tightly matching {{the width of the}} figure itself, or tabular, where all digits have the same width. Proportional spacing places the digits closely together, reducing empty space in a document, and is thought to allow the numbers to blend into the text more effectively. As tabular spacing makes all numbers with the same number of digits the same width, it is used for typesetting documents such as price lists, stock listings and sums in mathematics textbooks, all of which require columns of numeric figures to line up {{on top of each other}} for easier comparison. Tabular spacing is also a common feature of simple printing devices such as cash registers and date-stamps.|$|E
2500|$|Shortly {{after the}} machine was introduced, a [...] "Tech-3" [...] ribbon appeared. It {{essentially}} replaced the cloth ribbon, as it offered typing quality close to the film ribbon but at a use cost comparable to the reusable cloth. Like the cloth ribbon, Tech-3 ribbons incremented {{only a fraction of}} the <b>character</b> <b>width</b> after being struck. Unlike the cloth ribbon, the Tech-3 ribbon provided high quality impressions for several characters from each spot on the one-time-use ribbon. [...] Because characters overstrike each other on a Tech-3 ribbon several times it could not be easily read to discover what had been typed. The Tech-3 ribbon offered equivalent security to the carbon film ribbon, as its impressions were permanent as soon as they were struck. The Tech-3 ribbon was used with the same cover-up tape that worked with the other non-correctable ribbons.|$|E
50|$|Although it {{was billed}} as a WYSIWYG system, it did not provide for display of {{proportional}} fonts. It did, however allow the use of proportional fonts by adjusting the margins based on the current text size using an estimated average <b>character</b> <b>width</b> in version 1. Primeword v2 had font <b>character</b> <b>width</b> tables, and were given a utility that could generate them from HP font files.|$|E
5000|$|Monotype's Arial, {{designed}} in 1982, while different from Helvetica in several details, has identical <b>character</b> <b>widths,</b> and is indistinguishable by most non-specialists. The characters C, G, R, Q, 1, a, e, r, and t {{are useful for}} quickly distinguishing Arial and Helvetica. Differences include: ...|$|R
5000|$|Strictly speaking, JIS X 0201 {{encoding}} as [...] "half-width katakana" [...] is incorrect, as {{the standard}} does not define <b>character</b> <b>widths</b> - it defines only the code representation of katakana characters. In the JIS X 0201 standard, katakana characters are printed in normal (full) width, not half-width.|$|R
50|$|As Phinney explained, the letterspacing of the Times New Roman font used by Microsoft Word with {{a modern}} {{personal}} computer and printer employs {{a system of}} 18 units relative to the letter height (em), with common characters being 5 to 17 units wide. (The technology allows even finer variability of <b>character</b> <b>widths,</b> but the 18 unit system was chosen for compatibility with the Linotype phototypesetting and earlier hot-metal versions of the font.) In contrast, the variability of <b>character</b> <b>widths</b> available on early 1970s typewriters using proportional letterspacing was more limited, due to the mechanical technology employed. The most sophisticated of these machines, the IBM Selectric Composer, used a system of 9 units relative to the letter height, in which all characters were 3 to 9 units wide. Less complex machines used fewer widths.|$|R
5000|$|... 24 lines (or {{possibly}} 25 - {{sometimes a}} special status line) of 80 characters of text (sometimes with two <b>character</b> <b>width</b> settings).|$|E
50|$|Cardfile {{was also}} {{released}} as a 32-bit accessory {{for the early}} versions of Windows NT, using a modification of the Windows 3.1 file format but changing the signature to DKO and the <b>character</b> <b>width</b> for text data to 16 bits {{in order to support}} Unicode.|$|E
50|$|The {{modular system}} was {{designed}} such {{that for a}} given character with specific weight and lean, {{it has the same}} x-height, <b>character</b> <b>width,</b> gray tone, caps among all families, so that no document reflowing is need. In this aspect, Compatil behaves similar as e.g. the typeface family group of Generis.|$|E
50|$|Word {{processing}} and desktop publishing programs for personal computers such as—Microsoft Word, WordPerfect, QuarkXPress, Adobe InDesign, Adobe FrameMaker, Adobe Illustrator, and Adobe Photoshop—use differing methods of adjusting letter-spacing. What {{is common to}} most systems is that the default letter-spacing is zero, using the <b>character</b> <b>widths</b> and kerning information built into the font itself.|$|R
50|$|The models {{provided}} a short one-line dot-matrix LCD display, {{to show the}} current line of input text, or a segment of it containing the cursor. <b>Character</b> <b>widths</b> in these models varied from 12 characters in the PC-4 and PC-7 to 24 characters {{on most of the}} rest. The displays also included some way of indicating operational mode, scientific mode, and other states and conditions.|$|R
50|$|TeX font metric (TFM) is a font {{file format}} {{used by the}} TeX {{typesetting}} system. It is a font metric format, not an outline font format like TrueType, because it provides only the information necessary to typeset the font such as each <b>character's</b> <b>width,</b> height and depth. The actual glyphs are stored elsewhere. This {{is not unique to}} TeX; Adobe's AFM files and Windows' PFM (NTF on modern Windows PostScript driver) files use the same technique.|$|R
50|$|In {{addition}} to the character height, when using the mechanical sense of the term, there are several characteristics which may distinguish fonts, though they would also depend on the script(s) that the typeface supports. In European alphabetic scripts, i.e. Latin, Cyrillic and Greek, the main such properties are the stroke width, called weight, the style or angle and the <b>character</b> <b>width.</b>|$|E
50|$|The glyphs in Block Elements each {{share the}} same <b>character</b> <b>width</b> in most {{supported}} fonts, allowing them to be used graphically in row and column arrangements. However, the block doesn't contain a space character of its own and ASCII space {{may or may not}} render at the same width as Block Elements glyphs. This fatal flaw tends to discourage their use, as rendering across platforms and browsers is rarely consistent.|$|E
5000|$|In English-speaking countries, {{the commonplace}} {{typewriters}} printing fixed-width characters were standardized to print six horizontal lines per vertical inch, and had either of two variants of <b>character</b> <b>width,</b> called [...] "pica" [...] for ten characters per horizontal inch and [...] "elite" [...] for twelve. This {{differed from the}} use of these terms in printing, where they refer to the height of the characters on the page ("pica" [...] designating ten horizontal lines per vertical inch).|$|E
50|$|MPS {{has many}} limitations. It does not specify the {{direction}} of optimization which is handled differently by solvers. Numeric fields have 12 <b>characters</b> <b>width</b> therefore limiting the precision. The representation is neither easy for human interpretation nor compact (although reserves column / row order information, which is often beneficial for LP solver behaviour reproducibility). One of the alternatives to MPS {{that does not have}} its limitations and is supported by most solvers is the nl file format.|$|R
50|$|Non-breaking space <b>characters</b> {{with other}} <b>widths</b> also exist.|$|R
5000|$|Whitespace {{character}} for additional space <b>characters</b> of varying <b>widths</b> ...|$|R
5000|$|Some fonts, {{especially}} those intended for professional use, are duplexed: made with multiple weights {{having the same}} <b>character</b> <b>width</b> so that (for example) changing from regular to bold or italic does not affect word wrap. Sabon as originally designed was a notable example of this. (This was a standard feature of the Linotype hot metal typesetting system with regular and italic being duplexed, requiring awkward design choices as italics normally are narrower than the roman.) ...|$|E
5000|$|Width {{allows the}} <b>character</b> <b>width</b> to be {{extended}} or compressed. Although any font can be compressed or expanded by software, the results from a multiple master font are superior. When a font is artificially expanded, all the features are expanded, including the line weight. This means that vertical strokes will be proportionally thicker than the horizontal strokes, giving an uneven appearance. Multiple master fonts with a width axis are designed to scale appropriately.|$|E
50|$|The {{typeface}} {{is inspired}} by the forms of the American Type Founders' gothics by Morris Fuller Benton, such as News Gothic, Lightline Gothic and Franklin Gothic, modified with both a larger x-height and <b>character</b> <b>width</b> and more humanist-influenced italic forms. It is available in six weights (Regular, ExtraLight, Light, Semibold, Bold, Black) in upright and italic styles. The typeface has wide language support for Latin script, including Western and Eastern European languages, Vietnamese, pinyin Romanization of Chinese, and Navajo.|$|E
40|$|AbstractÐTo {{maintain}} OCR accuracy with decreasing {{quality of}} page image composition, production, and digitization, {{it is essential}} to tune the system to each document. We propose a prototype extraction method for document-specific OCR systems. The method automatically generates training samples from unsegmented text images and the corresponding transcripts. It is tolerant of transcription errors, so a transcript produced automatically by an imperfect omnifont OCR system can be used. The method is based on new algorithms for estimating <b>character</b> <b>widths,</b> <b>character</b> locations in a word, and match/nonmatch probabilities from unsegmented text. An experimental word recognition system is designed and developed to combine prototype extraction algorithms and segmentation-free word recognition. The system can adapt itself to different page images and achieve high recognition accuracy on heavily degraded print. Index TermsÐOptical character recognition, adaptive classification, template matching, segmentation, document image analysis, text reader. ...|$|R
5000|$|... 30 average width metrics:This is bit #19 of the {{compatibility}} bits word, with {{hexadecimal value}} , {{known by the}} symbolic name [...] in [...] This flag causes Windows to re-scale all fonts {{by a factor of}} [...] when calculating their average <b>character</b> <b>widths.</b> The {{reason for this is that}} one particular Windows 3.0 application, TurboTax, hard-coded the values that it was using for such size calculations, which failed to work correctly with the new TrueType-compatible font average width calculation method employed by Windows 3.1. This prevented people from using TurboTax to print their income tax return forms on PostScript printers.|$|R
5000|$|Multicolor text (4×8 pixels per <b>character,</b> double pixel <b>width</b> in x direction) ...|$|R
5000|$|There {{were three}} models of 2260. Model 1 {{displayed}} 240 characters, formatted as six rows of forty characters. Model 2 displayed 480 characters, formatted as twelve rows of forty characters. Model 3 displayed 960 characters, formatted as twelve rows of eighty characters. A model without a keyboard {{was available for}} display-only applications. [...] The eighty <b>character</b> <b>width</b> corresponded to IBM punch card format. The IBM 2260 and successor devices were transitional punch-card-to-CRT computer hardware that inspired many office of the future authors {{to write about the}} potential of the paperless office.|$|E
50|$|In later models, a 1443 {{line printer}} could be attached, which could print {{faster than the}} data could be put out on punch cards. The line printer could print 120 or 144 columns. The <b>character</b> <b>width</b> was fixed, so it was the paper size that changed; the printer printed 10 {{characters}} to the inch, so a printer could print a maximum of 12 inches or 14.4 inches of text. In addition, the printer had a buffer, so the I/O delay for the processor was reduced. However, the print instruction would block if the line had not completed.|$|E
5000|$|The Diatype was a {{relatively}} small desktop-sized headline-setting device (i.e. not intended for continuous justified text), based on a glass disc font master. Character selection was {{by means of a}} trigger mounted {{on the front of the}} machine (giving rise to the colloquial naming of the machine as the [...] "duck-shooter" [...] (in the UK at least).When changing font, it was a notable feature of the machine that it required calibration of letter-spacing by the typing of a nonsense character sequence: [...] "Hillimillihirtzheftpflasterentferner". Measuringthe width of this 'word' at a specific font size would indicate if the <b>character</b> <b>width</b> and spacing was set correctly.|$|E
50|$|Arial, {{sometimes}} marketed or {{displayed in}} software as Arial MT, is a sans-serif typeface and set of computer fonts. Fonts from the Arial family are packaged with all versions of Microsoft Windows from Windows 3.1 onwards, some other Microsoft software applications, Apple Mac OS X and many PostScript 3 computer printers. The typeface was designed in 1982 by a 10-person team, led by Robin Nicholas and Patricia Saunders, for Monotype Typography. It {{was created to}} be metrically identical to the popular typeface Helvetica, with all <b>character</b> <b>widths</b> identical, so that a document designed in Helvetica could be displayed and printed correctly without having {{to pay for a}} Helvetica license.|$|R
50|$|Unicode {{would seem}} to offer the {{ultimate}} flexibility in producing text based art with its huge variety of characters. However, finding a suitable fixed-width font {{is likely to be}} difficult if a significant subset of Unicode is desired. (Modern UNIX-style operating systems do provide complete fixed-width Unicode fonts, e.g. for xterm. Windows has the Courier New font which includes characters like ┌╥─╨┐♥☺Ƹ̵̡Ӝ̵̨̄Ʒ) Also, the common practice of rendering Unicode with a mixture of variable width fonts is likely to make predictable display hard if more than a tiny subset of Unicode is used. ≽ʌⱷ҅ᴥⱷʌ≼ is an adequate representation of a cat's face in a font with varying <b>character</b> <b>widths.</b>|$|R
5000|$|The DVI format was {{designed}} to be compact and easily machine-readable. Toward this end, a DVI file is a sequence of commands which form [...] "a machine-like language", in Knuth's words. Each command begins with an eight-bit opcode, followed by zero or more bytes of parameters. For example, an opcode from the group 0x00 through 0x7F (decimal 127), set_char_i, typesets a single character and moves the implicit cursor right by that <b>character's</b> <b>width.</b> In contrast, opcode 0xF7 (decimal 247), pre (the preamble, which must be the first opcode in the DVI file), takes at least fourteen bytes of parameters, plus an optional comment of up to 255 bytes.|$|R
