95|100|Public
2500|$|Most Lisps specify {{an order}} of {{evaluation}} for procedure arguments. [...] Scheme does not. Order of evaluation—including {{the order in which}} the expression in the operator position is evaluated—may be chosen by an implementation on a call-by-call basis, and the only constraint is that [...] "the effect of any <b>concurrent</b> <b>evaluation</b> of the operator and operand expressions is constrained to be consistent with some sequential order of evaluation." [...] (R5RS sec. 4.1.3) ...|$|E
50|$|Call by future (also {{referred}} to as parallel call by name) is a <b>concurrent</b> <b>evaluation</b> strategy where {{the value of a}} future expression is computed concurrently with the flow {{of the rest of the}} program by one or more promises. When the value of the future is needed, the main program blocks until the future has a value (the promise or one of the promises finishes computing, if it has not already completed by then).|$|E
30|$|As an {{additional}} limitation, {{we did not}} perform <b>concurrent</b> <b>evaluation</b> of infections by means of other imaging modalities. For example, MRI could have demonstrated distinct {{differences between the groups}} irrespective of 18 [*]F-FDG PET results. In the future, evolution of PET/MRI scanners may provide a new way to better characterize bone infections.|$|E
40|$|Many {{enterprise}} systems employ both object-oriented middleware (OOM) and {{message-oriented middleware}} (MOM). However, {{support for the}} integration of object and messaging services, in particular for transaction processing across object and messaging components, is very limited. In this paper, we introduce the concept of Dependency-Spheres (D-Spheres), a global transaction context for distributed objects and messages. A D-Sphere integrates standard distributed object transactions and conditional asynchronous messages in one single unit-of-work. It is a new service for transaction processing that enhances two-phase-commit ACID transactions with pre-commit message delivery, <b>concurrent</b> <b>evaluations</b> of transaction-critical messag...|$|R
40|$|Researchers {{typically}} {{evaluate and}} compare protocols on the testbeds by running them {{one at a}} time. This methodology ignores the variation in link qualities and wireless environment across these experiments. These variations can introduce significant noise in the results. Evaluating two protocols concurrently, however, suffers from inter-protocol interactions. These interactions can perturb performance even under very light load, especially timing and timing sensitive protocols. We argue {{that the benefits of}} running protocols concurrently greatly outweigh the disadvantages. Protocols rarely run in isolation in real networks, and so considering such interactions is valuable. Although the wireless environment is still uncontrolled, <b>concurrent</b> <b>evaluations</b> make comparisons fair and more statistically sound. Through experiments on two testbeds, we make the case for evaluating and comparing low data-rate sensor network protocols by running them concurrently. Copyright 2010 ACM...|$|R
40|$|Policy-based {{access control}} aims to {{decouple}} access control rules from the application they constrain by expressing these rules in declarative access control policies. Performance of policy-based access control is of growing importance, but concurrent and distributed policy evaluation has received little research attention and current policy evaluation engines are still single-machine and fully sequential {{to the best}} of our knowledge. We believe that <b>concurrent</b> policy <b>evaluation</b> is necessary to meet the performance and scalability requirements of next-generation internet applications and aid the maturation of policy-based access control. Therefore, this paper presents an initial exploration of <b>concurrent</b> policy <b>evaluation.</b> We illustrate the performance of current policy evaluation engines, model the performance of policy evaluation in terms of the characteristics of a policy, list opportunities for concurrency, describe the need for concurrency control and specifically show how concurrency can be used to improve throughput based on our prototype. status: publishe...|$|R
40|$|This Master’s thesis {{focuses on}} the design the system of {{evaluation}} of suppliers in ČESTAV s. r. o. {{according to the requirements}} of the norm ISO 9001. I start from the theoretical basis and from the analysis of the current state in the company. The practical part includes design of evaluation of suppliers, design of supplier's evaluation form and proposal for <b>concurrent</b> <b>evaluation</b> of suppliers in MS Excel...|$|E
40|$|This {{document}} {{describes the}} TasteCurry system, a prototypical {{implementation of the}} multiparadigm Curry. Curry is a universal programming language aiming at the amalgamation {{of the most important}} declarative programming paradigms, namely functional programming and logic programming. Curry combines in a seamless way features from functional programming (nested expressions, lazy evaluation, higher-order functions), logic programming (logical variables, partial data structures, built-in search), and concurrent programming (<b>concurrent</b> <b>evaluation</b> of constraints with synchronization on logical variables) ...|$|E
40|$|We {{taught the}} anti-smoking {{education}} by JKYB method to 6 th grade children in an elementary school. The life-skill in JKYB {{is composed of}} five elements, Goal Setting, Decision Making, Assertive Communication, Stress Management and Self-esteem. The Self-esteem {{is the most important}} element of all the other skills. We investigated the effectiveness of the anti-smoking education by revealing the relationship between the self-esteem and <b>concurrent</b> <b>evaluation</b> about the classes (which was made by Ueda), and 4 elements score (intention of smoking, refusal of smoking, assertiveness, attitude toward smoking which were made by Kawabata). The result are : 1) Although children who had high scores of the self-esteem had higher value of <b>concurrent</b> <b>evaluation</b> than of those who had low self-esteem scores, there was not a significant difference between them. 2) As the self-esteem gets higher scores, the 4 elements scores become higher. (There were significant differences) 3) Children whose parents are smokers have great desires to smoke in future. It is clear that cooperation with their family is necessary to educate anti-smoking. 4) If we teach anti-smoking in health education in schools, it is necessary to cross curriculum of other subjects, because there are not enough the school hours...|$|E
40|$|Led by UKOLN, {{this project}} {{set out to}} review these two key {{registries}} of open access repositories (OpenDOAR and ROAR) and consider whether there is scope to augment the quality and extent of the data and services they currently offer. In addition to a detailed technical review, {{as part of the}} <b>concurrent</b> business <b>evaluation</b> a wide variety of stakeholders have been consulted...|$|R
40|$|Key {{feature of}} a {{context-aware}} application {{is the ability}} to adapt based on the change of context. Two approaches that are widely used in this regard are the context-action pair mapping where developers match an action to execute for a particular context change and the adaptive learning where a context-aware application refines its action over time based on the preceding action’s outcome. Both these approaches have limitation which makes them unsuitable in situations where a context-aware application has to deal with unknown context changes. In this paper we propose a framework where adaptation is carried out via <b>concurrent</b> multi-action <b>evaluation</b> of a dynamically created action space. This dynamic creation of the action space eliminates the need for relying on the developers to create context-action pairs and the <b>concurrent</b> multi-action <b>evaluation</b> reduces the adaptation time as opposed to the iterative approach used by adaptive learning techniques. Using our reference implementation of the framework we show how it could be used to dynamically determine the threshold price in an e-commerce system which uses the name-your-own-price (NYOP) strategy...|$|R
40|$|Context-aware {{computing}} {{has been}} attracting growing attention in recent years. Generally, {{there are several}} ways for a context-aware system to select a course of action for a particular change of context. One way is for the system developers to encompass all possible context changes in the domain knowledge. Other methods include system inferences and adaptive learning whereby the system executes one action and evaluates the outcome and self-adapts/self-learns based on that. However, in situations where a system encounters unknown contexts, the iterative approach would become unfeasible when the size of the action space increases. Providing efficient solutions to this problem has been the main goal of this research project. Based on the developed abstract model, the designed methodology replaces the single action implementation and evaluation by multiple actions implemented and evaluated concurrently. This parallel evaluation of actions speeds up significantly the evolution time taken to select the best action suited to unknown context compared to the iterative approach. The designed and implemented framework efficiently carries out <b>concurrent</b> multi-action <b>evaluation</b> when an unknown context is encountered and finds the best course of action. Two concrete implementations of the framework were carried out demonstrating the usability and adaptability of the framework across multiple domains. The first implementation was in the domain of database performance tuning. The concrete implementation of the framework demonstrated the ability of <b>concurrent</b> multi-action <b>evaluation</b> technique to performance tune a database when performance is regressed for an unknown reason. The second implementation demonstrated the ability of the framework to correctly determine the threshold price to be used in a name-your-own-price channel when an unknown context is encountered. In conclusion the research introduced a new paradigm of a self-adaptation technique for context-aware application. Among the existing body of work, the <b>concurrent</b> multi-action <b>evaluation</b> is classified under the abstract concept of experiment-based self-adaptation techniques...|$|R
40|$|We {{propose a}} small-step {{operational}} semantics to support reasoning about web applications {{written in the}} multi-tier language HOP 1. The semantics covers both server side and client side computations, {{as well as their}} interactions, and includes creation of web services, distributed client-server communications, <b>concurrent</b> <b>evaluation</b> of service requests at server side, elaboration of HTML documents, DOM operations, evaluation of script nodes in HTML documents and actions from HTML pages at client side. Categories and Subject Descriptors D. 3. 2 [Programmin...|$|E
40|$|Graph {{reduction}} is an implementation technique for the lazy l-calculus. It {{has been used}} to implement many non-strict functional languages, such as lazy ML, Gofer and Miranda. Parallel graph reduction allows for <b>concurrent</b> <b>evaluation.</b> In this paper, we present parallel graph reduction as a Chemical Abstract Machine, and show that the resulting testing semantics is adequate wrt testing equivalence for the lazy l-calculus. We also present a π-calculus implementation of the graph reduction machine, and show that the resulting testing semantics is also adequate...|$|E
40|$|We present DXQ, an {{extension}} of XQuery to support the effective and efficient development of distributed XML applications. A DXQ program can invoke remote DXQ programs both synchronously and asynchronously and can dynamically ship DXQ code to execute at remote servers. We illustrate {{the power of the}} language with two distributed applications: the resolution algorithm of the Domain Name System (DNS) and the Narada overlay-network protocol. Our implementation permits <b>concurrent</b> <b>evaluation</b> of DXQ expressions at each server and can produce results extensionally (as XML values) or intensionally (as DXQ expressions) ...|$|E
30|$|The results {{presented}} in Fig.  19 a show the evaluation time (in logarithmic scale) of the notification policies. We {{can see that}} as more notification policies need to be enforced, the average evaluation time does increase, although roughly in a linear fashion {{with the number of}} polices. We recall that 50 active policies is nonetheless a rather large number (compared to others found in literature [29]), representing up to 50, 000 <b>concurrent</b> policy <b>evaluations,</b> and that even then, all times are below 50  ms.|$|R
40|$|The aim of {{this study}} was to test whether or not <b>concurrent</b> <b>evaluations</b> of brain (electroencephalography [EEG]) and {{cardiorespiratory}} responses to exercise are influenced by environmental conditions. 10 adult male participants performed a standardized incremental exercise test to exhaustion on a cycle ergometer in an environment controlled laboratory on 2 separate occasions, in a randomized order; one in a hot condition (34. 5 °C) and one in a thermoneutral condition (20 °C). EEG, heart rate and expired air were collected throughout. EEG data were decontaminated for artefacts, log-transformed and expressed as aggregated alpha and beta power responses across electrodes reflecting the frontal cortex of the brain. Performance outcomes showed there was no difference in [*]V˙O₂ peak across hot (42. 5 [*]ml/kg/min) and neutral (42. 8 [*]ml/kg/min) conditions, although ventilatory threshold (V(T)) occurred at a lower threshold (68 %) in hot compared to neutral condition (74 %) (p< 0. 05). EEG alpha and beta wave responses both demonstrated significant increases from baseline to V(T) (p< 0. 01). EEG beta-band activity was significantly elevated in the heat compared to the neutral condition. In conclusion, elevated EEG beta-band activity in response to incremental exercise in the heat suggests that beta-band activation and cortical awareness increases as exercise becomes increasingly intense...|$|R
40|$|This is the author’s {{version of}} a work that was submitted/accepted for pub-lication in the {{following}} source: Cathcart, Abby, Greer, Dominique, & Neale, Larry (2014) Learner-focused evaluation cycles: facilitating learning using feedforward, <b>concurrent</b> and feedback <b>evaluation.</b> Assessment & Evalaution in Higher Education, 39 (7), pp. 790 - 802. This file was downloaded from...|$|R
40|$|We present here an {{efficient}} numerical approach for the <b>concurrent</b> <b>evaluation</b> of the small-change deterministic device parameters {{and of the}} relevant Green's functions exploited in the simulation of device small-signal (SS), small-signal large-signal (SSLS conversion matrix), stationary and cyclostationary noise, and variability properties of semiconductor devices through the solution of physics-based models based on a partial-differential equation description of charged carrier transport. The proposed technique guarantees a significant advantage in computation time {{with respect to the}} currently implemented solutions. The accuracy is the same as for the standard technique...|$|E
40|$|Abstract—The {{calculus}} CHF models Concurrent Haskell {{extended by}} concurrent, implicit futures. It is a lambda and process calculus with concurrent threads, monadic <b>concurrent</b> <b>evaluation,</b> {{and includes a}} pure functional lambda-calculus PF which comprises data constructors, case-expressions, letrec-expressions, and Haskell’s seq. Our main result is conservativity of CHF as extension of PF. This allows us to argue that compiler optimizations and transformations from pure Haskell remain valid in Concurrent Haskell {{even if it is}} extended by futures. We also show that conservativity does no longer hold if the extension includes Concurrent Haskell and unsafeInterleaveIO...|$|E
40|$|This paper {{describes}} an incremental scenario-based simulation approach to evaluation of intelligent software for control {{and management of}} hardware systems. A hybrid continuous/discrete event simulation of the hardware dynamically interacts with the intelligent software in operations scenarios. Embedded anomalous conditions and failures in simulated hardware can lead to emergent software behavior and identification of missing or faulty software or hardware requirements. An approach is described for extending simulation-based automated incremental failure modes and effects analysis, to support <b>concurrent</b> <b>evaluation</b> of intelligent software and the hardware controlled by the softwar...|$|E
40|$|Abstract. Asynchronous/Self-Timed {{designs are}} {{beginning}} to attract attention as promising means {{of dealing with the}} complexity of modern VLSI technology. In this paper, we present our views on why asynchronous systems matter. We then present details of our high level synthesis tool SHILPA that can automatically synthesize asynchronous circuits from descriptions in our concurrent programming language, hopCP. We outline many of the novel features of hopCP and also sketch how these constructs are compiled into asynchronous circuits, and then focus on the high level optimizations employed by SHILPA, including <b>concurrent</b> guard <b>evaluation</b> and <b>concurrent</b> process decomposition...|$|R
40|$|We {{present a}} lock-free {{methodology}} for composing highly concurrent linearizable objects together by unifying their linearization points. This {{makes it possible}} to relatively easily introduce atomic lock-free move operations {{to a wide range of}} <b>concurrent</b> objects. Experimental <b>evaluation</b> has shown that the operations originally supported by the data objects keep their performance behavior under our methodology...|$|R
40|$|Several type {{disciplines}} for π-calculi {{have been}} proposed, in which linearity frequently {{plays a key}} role. In this paper, we introduce a type system for the π-calculus that exactly corresponds to the standard sequent calculus proof system for dual intuitionistic linear logic, based on an interpretation of linear propositions as session types. Perhaps surprisingly, the induced type discipline reveals a close connection between intuitionistic linear logic, linear and session types for mobile processes, and forms of <b>concurrent</b> functional <b>evaluation.</b> We also show that our type system ensures session fidelity {{and the absence of}} deadlocks, and a tight operational correspondence between π-calculus reductions and cut elimination steps. ...|$|R
40|$|This paper {{describes}} a high-level {{implementation of the}} concurrent constraint functional logic language Curry. The implementation, directed by the lazy pattern matching strategy of Curry, is obtained by transforming Curry programs into Prolog programs. Contrary to previous transformations of functional logic programs into Prolog, our implementation includes new mechanisms for both eciently performing <b>concurrent</b> <b>evaluation</b> steps and sharing common subterms. The practical results show that our implementation is superior to previously proposed similar implementations of functional logic languages in Prolog and is competitive w. r. t. lower-level implementations of Curry in other target languages. A noteworth...|$|E
40|$|We {{address the}} {{optimization}} {{component of a}} decision support system for air quality management, and describes some benchmark studies assessing its effectiveness. Because of the computationally demanding nature of the objective function {{we are interested in}} parallelizing the quasi-Newton BFGS algorithm selected for initial study. This is achieved by <b>concurrent</b> <b>evaluation</b> of functions in finite difference approximations to the derivative and a method of interval subdivision in simple bound constrained line searching. In a realistic case study, use of the parallel optimization algorithm is shown to have significant performance gains over other methods of solution. Faculty of Engineering and Information TechnologyFull Tex...|$|E
40|$|The tuning of {{parameters}} {{in climate}} models {{is essential to}} provide reliable long-term forecasts of Earth system behaviour. We apply a multi-objective optimization algorithm {{to the problem of}} parameter estimation in climate models. This optimization process involves the iterative evaluation of response surface models (RSMs), followed by the execution of multiple Earth system simulations. These computations require an infrastructure that provides high-performance computing for building and searching the RSMs and high-throughput computing for the <b>concurrent</b> <b>evaluation</b> {{of a large number of}} models. Grid computing technology is therefore essential to make this algorithm practical for members of the GENIE project...|$|E
40|$|Abstract. In {{this paper}} we present {{the theory and}} {{practice}} of co-logic programming (co-LP for brevity), a paradigm that combines both inductive and coinductive logic programming. Co-LP is a natural generalization of logic programming and coinductive logic programming, which in turn generalizes other extensions of logic programming, such as infinite trees, lazy predicates, and concurrent communicating predicates. Co-LP has applications to rational trees, verifying infinitary properties, lazy <b>evaluation,</b> <b>concurrent</b> LP, model checking, bisimilarity proofs, etc. ...|$|R
40|$|Background Patient {{reports and}} {{questionnaire}} data on symptoms mostly rely on retrospective memory. Comparisons of concurrent (through experience sampling) and retrospective reports typically {{have no control}} over actual experiences. Also, individual differences in retrospective symptom reporting after experimental symptom inductions have not been systematically investigated. In the present study, we investigated retrospective memory for two experimentally induced symptoms, namely breathlessness and pain, in high (HSR) and low habitual symptom reporters (LSR). Method Healthy women (N= 48; 24 HSR/ 24 LSR) participated in (a) two trials of a rebreathing paradigm, leading to a gradual increase in PCO 2, ventilation and breathlessness, and (b) two trials of a modified cold pressor task. Dyspnea and pain inductions were administered in two separate sessions and participants were counterbalanced across eight trial orders. Dyspnea and pain ratings were collected at four times: (1) continuously during symptom induction, (2) after each trial, (3) after the experiment, and (4) after 2 weeks. State NA and state anxiety were measured after every trial. Results Dyspnea induction resulted in higher state NA and anxiety than pain induction. Retrospective evaluations were overall higher than <b>concurrent</b> <b>evaluations,</b> but differences between dyspnea and pain emerged. While retrospective dyspnea ratings were equally overestimated by both groups, the recalled pain ratings were higher in HSR than in LSR. Moreover, a further increase in overestimation over time was only found for breathlessness ratings in HSR. Discussion Our results show that even though retrospective evaluations of both breathlessness and pain are distorted, the type of bias clearly differs between the symptoms. The findings suggest the relevance of unpleasantness of the experience for memory processes, such that in less aversive inductions individual differences play a more pronounced role. Moreover, the observed increase of dyspnea overestimation over time is important for diagnostic assessment based on symptom reporting. status: publishe...|$|R
40|$|BACKGROUND: Recent {{changes in}} primary care are {{encapsulated}} in a drive for enhanced quality, efficiency and effectiveness of care. A key element of the quality agenda is innovation and evaluation. This paper presents {{a case study of}} the processes involved in evaluating practice development {{in primary care}}, where commissioned research is concomitant to a service development that also integrated its own evaluation. There was an assumption that an 'outside' evaluation would be complementary to the <b>concurrent</b> 'inside' <b>evaluation.</b> However, there is a paucity of literature that overtly discusses or analyses the specific challenges. AIMS: To surface the tensions involved in combining internal and external evaluation, to allow development of {{a better understanding of the}} roles, relationships, perils and value of this approach to maintaining and enhancing quality in primary care. DESIGN: A case study presentation of reflexive analysis of inside and outside evaluator experiences of the evaluation of a practice development. RESULTS: We argue that despite recent methodological developments in practice, methodological, methodical, interpretive and political tensions persist between practice development and evaluation. The key problems fuelling the dissonance experienced by both practitioners and researchers appears to be around the co-existence of differing understandings of the evaluation scope and process among stakeholders. This has the potential to jeopardise the coherence of the <b>concurrent</b> external <b>evaluation</b> of a practice development initiative. A pathway enabling the explicit integration of the views of researchers, service developers, commissioners and ethics and research governance boards is presented. CONCLUSION: This article exposes often underlying and unrecognised areas of consonance and dissonance between the views of researchers and practice developers in a context of concurrent practical and academic evaluations. In some cases there is potential to progress from dissonance to consonance. In others, the differing worlds and agendas mean that dissonance will remain, but its existence needs to be acknowledged and worked with, rather than ignored...|$|R
40|$|This paper {{addresses}} {{the need for}} more detailed accounts for evaluation in design science research literature. By revisiting a design project regarding the future e-newspaper we give detailed descriptions of its authentic and <b>concurrent</b> <b>evaluation</b> approach by illustrating the what, why and how of all evaluation activities throughout the whole project. The project produced seven different design artifacts that were evaluated. The utility and theoretical outcomes of the evaluation activities clearly influenced design decisions regarding newspaper design, user value and business model design as well as decisions on strategic levels. We emphasize a holistic and concurrent approach t...|$|E
40|$|Supplementary {{data for}} this article are {{available}} at Cancer Research Online ([URL] file associated with this record is under embargo until 12 months after publication, {{in accordance with the}} publisher's self-archiving policy. The full text may be available through the publisher links provided above. To improve treatment outcomes in non-small cell lung cancer (NSCLC), preclinical models that can better predict individual patient response to novel therapies are urgently needed. Using freshly resected tumor tissue, we describe an optimized ex vivo explant culture model that enables <b>concurrent</b> <b>evaluation</b> of NSCLC response to therapy while maintaining the tumor microenvironment. We found that approximately 70...|$|E
40|$|Please tick “√“ 1. Separate sealed {{envelopes}} containing Technical Proposal and Financial Proposals in {{two separate}} sealed envelopes (Superscribed as Technical/Financial Proposal, State applied for: [...] ) is to be enclosed in a common sealed envelope clearly superscribed “Proposal for <b>Concurrent</b> <b>Evaluation</b> of NRHM”, also mentioning the State for which the Agency has applied for. 2. In case the Agency is bidding for a Zonal Agency, this may be sent in separate envelope with the Technical and Financial Bids. Envelope should be superscribed as Zone Applied for: [...] -. This is not applicable for the Supplementary Round of Round I. 3. Each page legibly printed and numbered...|$|E
40|$|Orc is a {{computation}} orchestration language {{which is}} designed to specify computational services, such as distributed communication and data manipulation, in a concise and elegant way. Four concurrency primitives allow programmers to orchestrate site calls to achieve a goal, while managing timeouts, priorities, and failures. To guarantee the correctness of Orc model, effective verification support is desirable. Orc has a highly concurrent semantics which introduces the problem of state-explosion to search-based verification methods like model checking. In this paper, we present a new method, called Compositional Partial Order Reduction (CPOR), which aims to provide greater state-space reduction than classic partial order reduction methods in the context of hierarchical <b>concurrent</b> processes. <b>Evaluation</b> shows that CPOR is more effective in reducing the state space than classic partial order reduction methods. No Full Tex...|$|R
5000|$|In {{programming}}, co-logic programming (co-LP for brevity) [...] "is {{a natural}} generalization of logic programming and coinductive logic programming, {{which in turn}} generalizes other extensions of logic programming, such as infinite trees, lazy predicates, and concurrent communicating predicates. Co-LP has applications to rational trees, verifying infinitary properties, lazy <b>evaluation,</b> <b>concurrent</b> logic programming, model checking, bisimilarity proofs, etc." [...] Experimental implementations of co-LP are available from U.T. Dallas [...] and in Logtalk (for examples see [...] ) and SWI-Prolog.|$|R
40|$|Context-aware systems perform {{adaptive}} {{changes in}} several ways. One way {{is for the}} system developers to encompass all possible context changes in a context-aware application and embed them into the system. However, this may not suit situations where the system encounters unknown contexts. In such cases, system inferences and adaptive learning are used whereby the system executes one action and evaluates the outcome to self-adapts/self-learns based on that. Unfortunately, this iterative approach is time-consuming if high number of actions needs to be evaluated. By contrast, our framework for context-aware systems finds the best action for unknown context through <b>concurrent</b> multi-action <b>evaluation</b> and self-adaptation which reduces significantly the evolution time {{in comparison to the}} iterative approach. In our implementation we show how the context-aware multi-action system can be used for a context-aware evaluation for database performance tuning...|$|R
