9|95|Public
50|$|The first Emacs {{contained}} a help library that included documentation for every <b>command,</b> <b>variable</b> and internal function. Because of this, Emacs proponents described the software as self-documenting {{in that it}} presents the user with information on its normal features and its current state. Each function includes a documentation string that is displayed to the user on request, a practice that subsequently spread to programming languages including Lisp, Java, Perl, and Python. This help system can take users to the actual code for each function, whether from a built-in library or an added third-party library.|$|E
40|$|Abstract. The {{paper is}} to study the use of {{reconfigurable}} machines and the computational environments for the synthesis of high quality reconfigurable automatic control systems, constructed on their basis. A key feature of the constructed system is that during establishment of the <b>command</b> <b>variable</b> the exact value of the error signal and its derivatives is not used. However the data regarding their signs are used. Besides the signal of the <b>command</b> <b>variable</b> can only take values from a binary set { 0, 1 }...|$|E
40|$|Abstract:- The paper {{presents}} the optimal control {{problem of the}} heat transfer in the steady-regime, using boundary commands, whose positions are known. In this paper we limit our discussion {{to the case of}} bounday control of a high-voltage direct-current electrical cable. The necessary conditions for optimality are obtained by a variational approach. The <b>command</b> <b>variable</b> is the temperature of the cooling fluid of the cable but in our software we included the case with the fluid speed as a command. In this paper the cooling-fluid temperature (environment temperature) is the <b>command</b> <b>variable.</b> The optimal command is determined by a gradient technique. A numerical model is developed using the finite element method for state and co-state equations. We developed a CAD product in programming language C for 2 D problems. Some examples illustrate the use of our product in the heat transfer problems. A comparison of our product with similar software in this area is done for analysis problems. Key-Words:- CAD, finite element method; inverse problem; heat transfer; electrical cables. ...|$|E
5000|$|Graphical user {{interface}} or commands: can run from a {{user interface}} or from another initiating program or script using <b>commands</b> and <b>command</b> <b>variables.</b>|$|R
40|$|A {{practical}} {{learning control}} system is described which is applicable to complex robotic and telerobotic systems involving multiple feedback sensors and multiple <b>command</b> <b>variables.</b> In the controller, the learning algorithm {{is used to}} learn to reproduce the nonlinear relationship between the sensor outputs and the system <b>command</b> <b>variables</b> over particular regions of the system state space, rather than learning the actuator commands required to perform a specific task. The learned information is used to predict the command signals required to produce desired changes in the sensor outputs. The desired sensor output changes may result from automatic trajectory planning or may be derived from interactive input from a human operator. The learning controller requires no a priori knowledge {{of the relationships between}} the sensor outputs and the <b>command</b> <b>variables.</b> The algorithm is well suited for real time implementation, requiring only fixed point addition and logical operations. The results of learning experiments using a General Electric P- 5 manipulator interfaced to a VAX- 11 / 730 computer are presented. These experiments involved interactive operator control, via joysticks, of the position and orientation of an object in the field of view of a video camera mounted {{on the end of the}} robot arm...|$|R
40|$|Foundries have to {{work hard}} to focus on energy {{efficient}} production. Usually technical measures are used whereas organizational measures are not considered due to complex process impacts and shift of problems. To find a remedya simulation-based sequence planning is used which considers logistical and energy <b>command</b> <b>variables...</b>|$|R
40|$|Lockheed Martin Michoud Space Systems, under {{contract}} to NASA/MSFC, has developed and implemented a friction stir weld tool that uses {{the magnitude of the}} spindle axial load to control the weld process. This tool was used during the process development phase and the assembly of a full-scale External Tank barrel section. Both position and load transducers are incorporated into the welder. The control algorithm allows either the position or load transducer to provide the <b>command</b> <b>variable</b> in a closed loop system. Initially, the position transducer was used to actively control the weld process and the axial load on the spindle was monitored and collected via data acquisition hardware. As part of the process development, the axial load was implemented as the <b>command</b> <b>variable</b> in the closed loop. The spindle position is monitored and used to set limits on spindle travel. A zero set point algorithm has also been developed for establishing the spindle position {{at the start of the}} weld process. In its current state, the welder operates in a dual mode in which the position control is used to plunge the pin tool to a specified depth at the initiation of the weld. The load control is then used to control the weld process. This control algorithm has been used to assemble a 27. 5 -ft diameter, 2195 -T 8 barrel using hardware designed for NASA's Space Transportation System External Tank...|$|E
40|$|The {{objective}} of the 11 year retrospective study was to elaborate on a model for long-term forecasting of the survival of teeth and to identify the respective main periodontal factors. The analysis is {{based on data from}} a random sample of 108 patients who underwent at least 8 years of special parodontal treatment in the department of Periodontology at Charité Berlin. This treatment mainly consists of instructions and perpetual training towards dental hygiene, scaling, root-smoothing and dental surgery when necessary. The gender relation in the sample was exactly 54 / 54 {{with a mean age of}} 50. 1 years at the beginning of the treatment. At the first dental inspection the mean number of teeth in situ was 24. 69 (minimum= 4, maximum= 32, standard deviation= 4. 9). During the "initial therapy" 28 out of 2667 teeth had to be extracted before starting the main therapy in which 211 out of 2639 teeth could not be preserved, i. e. had to be extracted. 57 % (20 %) of the patients had mean probing depths 4 - 6 mm (> 6 mm). Approximately 50 % of the patients showed a generalized moderate periodontitis and 10 % actually got a generalized heavy periodontitis. Because of the well known poor explanatory power and their often misleading results, the popular binary presentation of the data was solely done to meet traditional requirements. The main goal was to model the multi-causal relationship between periodontal parameters and the <b>command</b> <b>variable</b> "survive/not-survive". The multivariate statistical models "Logistic regression" and "Tree analysis" were used to detect periodontal parameters with multivariate significant highest impact with respect to the <b>command</b> <b>variable.</b> Because of the apparent and well-known difference both statistical models distinguish between single- and multi-rooted teeth. To reduce the unmanageable high variety of parameters for a tooth, in the first step, two scores were calculated that subsume the most important parameters: Score 1 = 0. 289. ST distal + 0. 332. AttV bukkal + 0. 359. AttV mesial + 0. 339. AttV oral Score 2 = 0. 503. ST bukkal + 0. 255. AttV bukkal + 0. 284. AttV mesial + 0. 313. AttV oral. Score 1 relates on single-rooted and Score 2 is appropriate for multi-rooted teeth. Both functions were used as hyper-parameters in both statistical models. In contrast to the traditional results, both scores show the necessity of the usage of individual measures instead of the so called "approximate" values. The ROC-curves for Score 1 and Score 2 with respect to the command-variable provide an AUC of as high as 0. 77 and 0. 79 respectively. The main results of the tree-analysis for single-rooted teeth are: Score 1, vitality, loose-fitting, smoking habits, Gender, upper/lower jaw and age-related bone loss and their interactions are the most important indicators in a multivariate model predicting the <b>command</b> <b>variable</b> "survive/not-survive". For the multi-rooted teeth Score 2, vitality, API, PBI, furcating, smoking habits, attachment-lost mesial, Gender, distal recession and age-related bone loss and their interactions are the most important indicators in a multivariate model predicting the <b>command</b> <b>variable</b> "survive/not-survive". Logistic regression, and moreover the tree analyses, offer scientifically well grounded and clearly represented results towards the probability of a tooth surviving the next 8 – 10 years. The analysis carved out how to identify the teeth with a high probability not to survive in the long term. This information can be of great help when deciding between treatment options...|$|E
40|$|Progress {{has been}} made in {{developing}} manufacturing technologies which enable the fabrication of artificial vascular networks for tissue cultivation. However, those networks are rudimentary designed with respect to their geometry. This restricts long-term biological functionality of vascular cells which depends on geometry-related fluid mechanical stimuli and the avoidance of vessel occlusion. In the present work, a bioinspired geometry optimization for branchings in artificial vascular networks has been conducted. The analysis could be simplified by exploiting self-similarity properties of the system. Design rules in the form of two geometrical parameters, i. e., the branching angle and the radius ratio of the daughter branches, are derived using the wall shear stress as <b>command</b> <b>variable.</b> The numerical values of these parameters are within the range of experimental observations. Those design rules are not only beneficial for tissue engineering applications. Moreover, they can be used as indicators for diagnoses of vascular diseases or for the layout of vascular grafts...|$|E
50|$|Itcl allows namespaces to be {{used for}} {{organizing}} <b>commands</b> and <b>variables.</b>|$|R
5000|$|... {{lets you}} create, access, and destroy {{separate}} contexts for <b>commands</b> and <b>variables.</b>|$|R
40|$|This paper {{deals with}} the {{development}} of an adaptive building envelope, which by means of modern materials and on the basis of inspirations from technologies in fields of studies other than architecture, adjusts to individual needs of the users of a building, auto-reactively. <b>Command</b> <b>variables</b> to be optimized include user comfort, thermal and acoustic suitability, variable thermal transmission values...|$|R
40|$|The paper {{describes}} the design phase of an intelligent controller {{for a new}} morphing mechanism using smart materials made of Shape Memory Alloy (SMA) for the actuators. After a brief presentation of the morphing wing system, the controller purposes are discussed. The morphing system requirements and the behaviour of SMA actuators lead to a fuzzy logic Proportional-Integral- Derivative for the controller architecture. The output error and the change in error are used as controller inputs, while the electrical current is used as <b>command</b> <b>variable</b> (controller output). In the chosen architecture, the inputs and outputs designed membership functions, and the inference rules allow the control of both cooling and heating SMA phases. In this way, the electrical current given by the controller is approximately 0 A for the cooling phase, and have higher values for the heating phase depending by the values of controller inputs. In the fuzzy logic controller input-output mapping, [- 1, 1] interval is chosen as the universe for all inputs signals, while the [0, 2. 5] interval is used for output signal. Numerical simulations impose a number of three membership functions {{for each of the}} two inputs, three membership functions for the output, and five inference rules. The shapes of the inputs membership functions are s-function, 3 ̆c 0 -function, respectively z-function, while the product fuzzy inference and the center average defuzzifier are applied (Sugeno). Peer reviewed: YesNRC publication: Ye...|$|E
40|$|Today, a {{continuously}} increasing {{complexity of}} equipment and processes characterizes the production technologies. This also applies to press hardening, a hot sheet metal forming process, by that car body components with a high crash performance at low weight can be produced. The control of the press hardening process is challenging due to its complexity, {{the large number of}} parameters and their correlations as well as the need for user knowledge. However, it is in terms of an economic and sustainable process essential to correct any process variations within a very short time in order to ensure a consistent part quality and thus avoid waste. In this paper the results of an AiF / EFB-funded project are presented in which a concept for intelligent process control in press hardening was developed. The scientific basis is a sensitivity analysis using FEM, which analyzes relevant process parameters such as sheet thickness, transfer time or strain rate in terms of their influence on key quality parameters of the component. By that, essential process parameters with significant impact on quality-related outcomes, such as the springback, thinning and the hardness profile in cross-section of the component were determined, evaluated and modeled mathematically. The FEM results, causal relationships and mathematical models were then integrated into a knowledge base. This makes use of meta-models and enables to link the input variables (influencing factor) with the output parameters (<b>command</b> <b>variable)</b> under defined preconditions. Using the example of the production of a sill geometry the created concept of a process control was successfully implemented. With an extensive monitoring and control-related coupling of systems (forming press, handling systems, heating furnace, etc.) an exact recording of the process parameters was possible. Based on this, during the press hardening process a comparison of the measured process variables took place with the knowledge base and thus the component quality expected was predicted. De-pending on the technological feasibility a controlled process, which means the adjustment of process parameters for the currently in process component, was implemented. The components produced were then tested for their mechanical and geometrical properties assigned to each process variable combinations and evaluate the results against the command variables. Thus, the project makes a significant contribution to the science-based description of the press hardening process and ist influencing factors, for the collection of expert knowledge and implementation of the findings in a knowledge base that allows an intelligent process control...|$|E
40|$|YCM 0. 2. 0 (2016 - 11 - 17) Release Notes Changes {{made since}} YCM 0. 1 include the following. Build System 	Use the INSTALL_PREFIX {{argument}} for CMakePackageConfigHelpers. This simplifies a lot {{the creation of}} the YCMConfig. cmake file for the binary tree. 	Fixed warnings with CMake 3. 2. 	Added RunCMake unit tests. 	Added YCM_CMAKE_DOWNLOAD_URL variable and use github as default download url. 	Try to download the files up to 3 times in order to avoid common network issues. 	YCMBootstrap: Fix env variables list truncated to first element in Windows (# 100). Modules Generic Modules 	StandardFindModule: Add QUIET argument. 	New module GitInfo. 	IncludeUrl: Several bug fixes and improvement. 	New module ReplaceImportedTargets. 	StandardFindModule: handle the new TARGET and REPLACE_TARGETS arguments, to create automatically the specified imported target and to replace the known targets paths with the relative target name (in pkg-config mode only). If any of the STANDARD_FIND_MODULE_USE_IMPORTED_TARGET or STANDARD_FIND_MODULE_USE_IMPORTED_TARGET_ are specified, and the TARGET argument is given, the _LIBRARIES variable content is replaced with the corresponding imported target. 	StandardFindModule: Ensure that include directories exists. 	StandardFindModule: Fix INTERFACE_COMPILE_{DEFINITIONS,OPTIONS} properties. 	New module GetAllCMakeProperties. 	StandardFindModule Fix QUIET argument. Packaging Helper Modules 	InstallBasicPackageFiles: Use the new INSTALL_PREFIX argument for CMakePackageConfigHelpers. 	New module AddInstallRPATHSupport: Add RPATH support when building executables or shared libraries. 	AddInstallRPATHSupport: Accept multiple conditions for the DEPENDS argument. This makes the DEPENDS argument similar to the CMakeDependentOptions module. 	fix AddInstallRPATHSupport for installation in system path Superbuild Helper Modules 	YCMEPHelper now handles tests for sub-projects. 	YCMEPHelper: Pass PKG_CONFIG_USE_CMAKE_PREFIX_PATH to subprojects. 	YCMEPHelper: Prepare for CMAKE_CACHE_DEFAULT_ARGS. The argument is accepted, but not yet passed to ExternalProject_Add 	YCMEPHelper: Pass PKG_CONFIG_PATH to non CMake subprojects. 	ExternalProject: Fix CMP 0054 warnings. 	YCMEPHelper: Move CMAKE_PREFIX_PATH to command line arguments. This fixes pkg-config not able to detect packages built by YCM. 	YCMEPHelper: Fix. dot files generation for modules containing the - character in the name. 	YCMEPHelper: Do not force CMake cache default arguments that are not set in the main project. 	FindOrBuildPackage: Extract version argument from ARGN. 	YCMEPHelper: variables in commands are no longer replaced. Instead of passing variables that are internal to YCMEPHelper, the user should use,,, and that are automatically replaced by ExternalProject. 	YCMEPHelper: Handle and use CONFIGURE_SOURCE_DIR argument in order to support projects in a subdirectory. 	YCMEPHelper: Propagate CMAKE_SKIP_INSTALL_RPATH flag to all sub-projects. Find Package Modules 	New module FindqpOASES. 	Import FindFreenect new module from YARP Git Repository. 	Import FindFTDI new module from YARP Git Repository. 	Import FindLibusb 1 new module from YARP Git Repository. 	Import FindOpenNI new module from YARP Git Repository. 	Import FindReadline new module from YARP Git Repository. 	Import FindStage new module from YARP Git Repository. 	New module FindLibdc 1394. 	FindFFMPEG: Fix for recent ffmpeg version on debian 	Import FindFuse new module from YARP Git Repository. 	Import FindGLFW 3 new module from YARP Git Repository. 	Import FindLibOVR new module from YARP Git Repository. 	FindODE: Use double precision by default when available. 	FindESDCANAPI: Fixed find library procedure. 	FindIPOPT: Improvements and restored required IPOPT_LINK_FLAGS variable. 	Import FindLibv 4 l 2 new module from iCub Git Repository. 	Import FindLibv 4 lconvert new module from iCub Git Repository. 	Create imported targets in FindGooCanvas, FindGooCanvasMM, FindGtkDatabox, and FindGtkDataboxMM modules. 	FindIPOPT supports IPOPT from new binary releases of the iCub Git Repository. 	FindIPOPT supports IPOPT from the coinor-libipopt-dev debian package. 	FindGLFW 3 improves detection on windows. 	Fixed FindGLUT module on Window 64 bit. 	Fixed stray; character in FindODE. 	New module FindLibedit. 	New module FindNVIDIACg. Build Package Modules 	New module BuildqpOASES. 	BuildGooCanvas: Change <b>command</b> <b>variable</b> style. 	New modules BuildGooCanvasMM BuildGtkDatabox BuildGtkDataboxMM. 	BuildYARP: Build and use GooCanvasMM and GtkDataboxMM as dependencies. 	BuildICUB: Do not build canBus devices. CMake Proposed Modules 	ExternalProject: Init only selected git submodules. 	ExternalProject: Handle CONFIGURE_SOURCE_DIR argument. This argument can be used when the the main CMakeLists. txt file is not in the source directory, but in a subdirectory. CMake Next 	Updated to CMake v 3. 7. 0 + commit ab 4 a 9 a 98266 fb 29008 cecc 9649 a 91 fc 844 c 541 f 5). 	CMakePackageConfigHelpers module imported from CMake 3. 1. 	FindLua module imported from CMake 3. 0. 	FindMatlab module imported from CMake 3. 7. 	FindArmadillo module removed (available in CMake 2. 8. 9). 	FindGLEW module imported with patch applied to improve detection on windows. 	ExternalProject: Handle CONFIGURE_SOURCE_DIR argument in order to support projects in a subdirectory. 	CMakeFindDependencyMacro module imported from CMake 3. 0. 	FindSWIG and UseSWIG modules imported from CMake master. 3 rd Party 	Updated to Eigen Mercurial Repository_ commit 00094 bd 	FindOctave imported from [URL] 	FindQCustomPlot imported from OVITO Git Repository. Variables 	Update YCM_USE_CMAKE_ : variables and relative documentation...|$|E
5000|$|FALSE is a stack-based {{language}} with single-character <b>commands</b> and <b>variables.</b> For example, 3 + 1 {{can be calculated}} by evaluating (λ x → x + 1)(3): 31+! ...|$|R
50|$|The Casio models {{included}} lower-case characters. These {{were only}} {{for use in}} PRINT statements, as lower-case <b>commands</b> and <b>variables</b> were not accepted as with almost all BASIC programming machines.|$|R
50|$|A virtual {{control panel}} (VCP) code is a binary code that {{represents}} a single command entity in the MCCS language. Each <b>command</b> contains <b>variable</b> number of data parameters and command attributes.|$|R
30|$|Table  1 {{describes}} the variables {{used in the}} prediction and update EKF equations along with their dimensions. Equations (2) and (3) are used to estimate the new robot position given the belief vector μ _v^(t- 1) and the covariance matrix that correspond to the robot position Σ _vv^(t- 1) and the current motion control u^(t). F^(t) and G^(t) are Jacobian matrices containing derivatives of the prediction function α {{with respect to the}} motion <b>command</b> <b>variables</b> at time t. Equation (4) estimates the covariance between the robot and feature position Σ _vf given the corresponding covariance from time (t- 1) and the matrix F^(t).|$|R
40|$|A {{transfer}} function design theory for multivariable control synthesis is highlighted. The use of unique {{transfer function}} matrices and two simple, basic relationships - a synthesis equation and a design equation - are presented and illustrated. This multivariable transfer function approach provides the designer with a capability to specify directly desired dynamic relationships between <b>command</b> <b>variables</b> and controlled or response variables. At the same time, insight and influence over response, simplifications, and internal stability is {{afforded by the}} method. A general, comprehensive multivariable synthesis capability is indicated including nonminmum phase and unstable plants. Gas turbine engine examples are used to illustrate the ideas and method...|$|R
40|$|Pseudoperonospora cubensis (downy mildew) is an {{aggressive}} fungal pathogen of cucumber. In 2007, glasshouse experiments with organically grown cucumber (´Airbus`, ´Juliandra`) {{were performed to}} investigate {{the effects of a}} climate strategy “conventional” versus “dehumidified” {{on the development of the}} downy mildew epidemic. In both climate strategies the <b>commanding</b> <b>variable</b> for ventilation is the temperature; in the strategy “conventional” the established set point for ventilation is 22 °C, whereas in the climate strategy “dehumidified” the set point for ventilation varies from 18 °C to 23. 5 °C, depending on the humidity. The results show that the climate “dehumidified” lowers the occurrence of downy mildew significantly...|$|R
50|$|Optional System {{variables}} are not explicitly specified by default {{but can be}} used to modify the default behaviour of certain built-in console <b>commands.</b> These <b>variables</b> also {{do not need to be}} explicitly specified as command line arguments.|$|R
5000|$|... → - Assign to <b>{{variable}}</b> <b>command,</b> {{to assign}} the value before {{it to the}} variable after it. Always used as (value)→(variable).|$|R
40|$|Object-oriented {{modelling}} {{allows for}} efficient construction of multi-disciplinary system models in a physically-oriented way. As a unique feature, the modelling approach allows for automatic generation of regular, static, {{as well as}} inverse simulation models. Inverse models {{form the basis of}} various commonly used nonlinear controller synthesis methods, such as Feedback Linearisation. The resulting multi-variable control laws are easily tuned to meet performance specifications and avoid the need for gain scheduling. In combination with automatic inversion, these synthesis methods are ideally suited for control law rapid-prototyping, allowing experimentation with <b>command</b> <b>variables,</b> control selection and allocation, etc. in very short automated design cycles. After selection of the final architecture, the control laws may be developed further in a detailed design stage. This is demonstrated on the aircraft-on-ground nonlinear control problem for lateral directional control...|$|R
5000|$|Numerical variables, {{including}} [...] - [...] and [...] (theta). These allow real {{numbers or}} complex numbers (implemented as pairs of reals) {{to be stored}} in floating point format. Values may range from 1E-99 to 1E99 with up to ten digits of accuracy. The limit of 27 variables, however, may be expanded {{through the use of}} lists, matrices, and manipulation of integer notation. A list or matrix can be used to contain unique real variables which can be individually referenced. Integers can be concatenated into a single real variable by delineating them as the integer and decimal halves of a real number; each half is then accessed independently via the iPart and fPart <b>commands.</b> <b>Variables</b> with binary values can be stored as a single integer through conversion between base 2 and base 10.|$|R
5000|$|At {{least two}} {{versions}} of Chinese BASIC were modified Applesoft BASIC that accepted Chinese <b>commands</b> and <b>variables.</b> They were built into some Taiwan-made Apple II clones. One of these was shipped with the best-selling Multitech Microprofessor II (known as Acer today). Another version was shipped with MiTAC's Little Intelligent Computer (...) [...]|$|R
40|$|I {{will present}} a sweet syntax {{coloring}} using jEdit, a free, open-source, Java-based, cross-platform text editor. The syntax coloring (demo jpeg at [URL] distinguishes <b>commands,</b> <b>variables,</b> macros, simple and compound quoted strings (and unquoted string literals), and different kinds of comments. This includes macros inside of strings, strings in expressions in macro functions, etc. Mata syntax coloring inlcuded. On the integration side, added bits allow a line, selection, or separately defined section of code (as well as the whole file) to be run in Stata with a keystroke. Semi-colon delimited, and Mata, lines are recognized from context and run correctly. In addition, the code can be run in "do" "run" or "trace" modes, as determined by a mode button in jEdit. Multi-line commands (ie, split with triple-slashes) are also recognized and run as a whole without the need to select all lines. ...|$|R
40|$|The {{application}} {{of an emerging}} Integrated Flight/Propulsion Control design methodology to a STOVL aircraft in transition flight is reported. The methodology steps consist of: (1) design of a centralized feedback controller to provide command tracking and stability and performance robustness considering the fully integrated airframe/propulsion model as one high-order system; (2) partition of the centralized controller into a decentralized, hierarchical form compatible with implementation requirements; and (3) design of command shaping prefilters from pilot control effectors to <b>commanded</b> <b>variables</b> to provide the overall desired response to pilot inputs. Intermediate design results using this methodology are presented, the complete point control design with the propulsion system operating schedule and limit protection logic included is evaluated for sample pilot control inputs, and the response is {{compared with that of}} an 'ideal response model' derived from Level I handling qualities requirements...|$|R
5000|$|This is {{illustrated}} in the following example, from page S5 of the Summary of TUTOR <b>Commands</b> and System <b>Variables</b> (10th ed) by Elaine Avner, 1981: ...|$|R
5000|$|Reserved words: None. Since MUMPS interprets {{source code}} by context, {{there is no}} need for {{reserved}} words. You may use the names of language <b>commands</b> as <b>variables.</b> There has been no contest such as the International Obfuscated C Code Contest for MUMPS, despite the potential of examples such as the following, perfectly legal, MUMPS code: ...|$|R
50|$|Access to the {{computing}} environment (e.g., the program's <b>command</b> line, environment <b>variables,</b> textual explanation of error conditions) remained a problem {{until it was}} addressed by the 2003 standard.|$|R
50|$|The MQM-107 was {{originally}} developed by Beech Aircraft for the United States Army Aviation and Missile <b>Command's</b> 1972 <b>Variable</b> Speed Training Target (VSTT) requirement. It was announced {{as the winner}} in 1975, and the Army took delivery of the original model (the MQM-107A) until 1979. Over the next two decades, several updated variants of the Streaker were introduced with different engines and payloads.|$|R
40|$|This paper aims to {{determine}} and analyze {{a model for}} a biological filter that is part of an intensive recycled aquaculture plant. The biological filter used in this plant is a biofilm filter of trickling type. In this filter only the nitrification processes take place. In order {{to determine}} a model {{that can be used in}} real-time control a global model for the nitrification filter is recommended. Consequently, a modified ASM 3 (Activated Sludge Model No. 3) model is proposed in order to include only the nitrification processes and to consider the nitrite and the nitrate as distinct state variables. In this model the quality variables are the ammonium and the nitrite concentrations, the <b>command</b> <b>variables</b> are the aeration and recycled volume and the disturbance variable is the ammonium concentration from the fish tanks. The simulation results of the model are also presented in the paper. These results are obtained for different functioning conditions of the technological plant. The simulation results show that the model offers a good description of the main state variables: ammonium, nitrite and nitrate...|$|R
50|$|Variable {{expansions}} are substituted textually {{into the}} <b>command,</b> and thus <b>variables</b> which contain nothing simply {{disappear from the}} syntax, and variables which contain spaces turn into multiple tokens. This can lead to syntax errors or bugs.|$|R
5000|$|... : This {{variable}} {{contains a}} semicolon-delimited (do not put spaces in between) list of directories {{in which the}} command interpreter will search for an executable file that matches the given <b>command.</b> Environment <b>variables</b> that represent paths may be nested within the [...] variable, but only at one level of indirection. If this sub-path environment variable itself contains an environment variable representing a path, [...] will not expand properly in the variable substitution. Equivalent to the Unix [...] variable.|$|R
40|$|Multi zone furnaces, {{automation}} {{concepts and}} laboratory technologies {{have been developed}} using the Vertical Gradient Freeze technique for single crystal growth of GaAs with the aim to produce a low dislocation density. The crystallization prozess is performed by an electronically controlled temperature field without moving the furnace or the sample. A <b>command</b> <b>variables</b> generator free programable yields the temperature time programs for the fully automatized growth process. On {{the basis of a}} complex process simulation the crystal growth rate, the As partial pressure as well as the temporal and local temperature gradients could be adjusted with high precision and optimized by systematic growth experiments. The crystals grown are characterized by dislocation densities up 1 to 3 x 10 " 3 cm"-" 2, a large area cellular structure and a low density of microdefects. Si-doped and semi-insulating crystals with reproducible physical properties were grown both in (100) and (111) orientation, respectively. The possibility of affecting the crystal properties by post-growth annealing was shown experimentally. (orig.) SIGLEAvailable from TIB Hannover: F 95 B 346 +a / FIZ - Fachinformationszzentrum Karlsruhe / TIB - Technische InformationsbibliothekBundesministerium fuer Forschung und Technologie (BMFT), Bonn (Germany) DEGerman...|$|R
