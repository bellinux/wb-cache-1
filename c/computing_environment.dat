5618|4422|Public
5|$|When used together, these {{features}} allow for assembling a complex distributed <b>computing</b> <b>environment</b> by reusing the existing hierarchical name system.|$|E
5|$|UM {{maintains}} one of {{the largest}} centralized academic cyber infrastructures in the country with numerous assets. The Center for Computational Science High Performance Computing group has been in continuous operation since 2007. Over that time the core has grown from a zero HPC cyberinfrastructure to a regional high-performance <b>computing</b> <b>environment</b> that currently supports more than 1,200 users, 220 TFlops of computational power, and more than 3 Petabytes of disk storage. The center's latest system acquisition, an IBM IDataPlex system, was ranked at number 389 on the November 2012 Top 500 Supercomputers.|$|E
25|$|In 2013, {{the bank}} started {{building}} a new IT system called NEXEN. NEXEN uses open source technology and includes components such as an API store, data analytics, and a cloud <b>computing</b> <b>environment.</b>|$|E
40|$|Various {{new types}} of {{applications}} can be available in future <b>computing</b> <b>environments</b> such as mobile <b>computing</b> <b>environments</b> and ubiquitous <b>computing</b> <b>environments.</b> The applications may change our daily life dramatically since computers can be embedded in our daily necessaries such as televisions, microwaves, cameras, and air conditioners. In these <b>environments,</b> <b>computing</b> <b>environments</b> can be changed dramatically, and applications may be migrated among computers that have drastically different hardware configurations. Therefore, these applications should be adapted to various <b>computing</b> <b>environments</b> that may have dramatically different characteristics for their efficient executions, and the adaptation requires that the applications can access information about <b>computing</b> <b>environments</b> through a uniform interface. In this paper, we propose an environment server that is important as a basic infrastructure for building adaptive applications for future <b>computing</b> <b>environments.</b> The environment ser [...] ...|$|R
50|$|MapReduce {{is useful}} {{in a wide range}} of applications, {{including}} distributed pattern-based searching, distributed sorting, web link-graph reversal, Singular Value Decomposition, web access log stats, inverted index construction, document clustering, machine learning, and statistical machine translation. Moreover, the MapReduce model has been adapted to several <b>computing</b> <b>environments</b> like multi-core and many-core systems, desktop grids,multi-cluster, volunteer <b>computing</b> <b>environments,</b> dynamic cloud environments, mobile <b>environments,</b> and high-performance <b>computing</b> <b>environments.</b>|$|R
40|$|In cloud <b>computing</b> <b>environments,</b> one of {{the most}} {{important}} barriers to the adoption of software as a service systems is interoperability. Generally, in cloud <b>computing</b> <b>environments</b> at software as a service level, interoperability refers to the ability of software as a service systems on one cloud provider to communicate with software as a service systems on another cloud provider. The current software as a service systems in cloud <b>computing</b> <b>environments</b> have not been built with interoperability as a primary concern. Software as a service systems in cloud <b>computing</b> <b>environments</b> are poorly developed to meet the interoperability challenges. A common tactic for enabling interoperability is the use of an interoperability framework or model. During the past few years, at software as a service level, various interoperability frameworks and models have been developed to provide interoperability between systems. The syntactic interoperability of software as a service systems have already been intensively researched. However, not enough consideration has been given to semantic interoperability issues. Both syntactic and semantic interoperability are necessary prerequisites to achieve interoperability. Achieving semantic interoperability is a challenge within the world of software as a service in cloud <b>computing</b> <b>environments.</b> Therefore, a semantic interoperability framework for software as a service systems in cloud <b>computing</b> <b>environments</b> is needed. In this thesis, we develop a semantic interoperability framework for software as a service systems in cloud <b>computing</b> <b>environments.</b> For this purpose, we illustrate how current technologies, such as service oriented architecture, can represent an adequate foundation for implementing such framework. The capabilities and value of service oriented architecture for semantic interoperability between software as a service systems in cloud <b>computing</b> <b>environments</b> will be studied and demonstrated. iv In order to evaluate the effectiveness of the proposed semantic interoperability framework for software as a service systems in cloud <b>computing</b> <b>environments,</b> extensive experimentation and statistical analysis have been performed. Overall, the effectiveness of semantic interoperability of software as a service systems in cloud <b>computing</b> <b>environments</b> with the proposed framework shows a significant improvement in comparison with the existing models and frameworks...|$|R
25|$|Three-dimensional {{graphics}} {{are currently}} mostly used in computer games, art, and computer-aided design (CAD). A three-dimensional <b>computing</b> <b>environment</b> {{can also be}} useful in other uses, like molecular graphics and aircraft design.|$|E
25|$|Andrew Project - {{distributed}} <b>computing</b> <b>environment</b> {{developed at}} Carnegie Mellon University beginning in 1982. It was an ambitious project for its time {{and resulted in}} an unprecedentedly vast and accessible university computing infrastructure. The goal was to have connected 3M computer workstations.|$|E
25|$|The Total Ship <b>Computing</b> <b>Environment</b> Infrastructure (TSCEI) {{is based}} on General Electric Fanuc Embedded Systems' PPC7A and PPC7D single-board {{computers}} running LynuxWorks' LynxOS RTOS. These are contained in 16 shock, vibration, and electromagnetic protected Electronic Modular Enclosures. Zumwalt carries 16 pre-assembled IBM blade servers. The network allows a seamless integration of all on-board systems, e.g. sensor fusion, easing operation and mission planning.|$|E
40|$|In this paper, {{we present}} a {{management}} system for distributed software development in cloud <b>computing</b> <b>environments,</b> called DDMan. Cloud <b>computing</b> <b>environments</b> provide more flexibility than conventional <b>computing</b> <b>environments.</b> In particular, the {{platform as a service}} (PaaS) in cloud <b>computing</b> <b>environments</b> provides benefits for users in a variety of aspects, such as application design, development testing, software deployment, team collaboration, web service integration, database integration, and scalability. Although the process of distributed software development evolves and changes by a lot in the past decade, there are still some user needs remaining unsatisfied. For managing distributed software development in cloud computing systems, we present the DDMan system, which extends the WebSD model of distributed software development management. In DDMan, the interactions among the roles in the software development are precisely defined. In addition to the conventional web-based interface, the DDMan system also supports the interface for the Amazon cloud environment, which is an approach to a fully automatic service of distributed software development management in cloud <b>computing</b> <b>environments...</b>|$|R
40|$|A {{taxonomy}} {{of the existing}} discovery protocols for the pervasive <b>computing</b> <b>environments</b> for the open research problems for anytime, anywhere computing is presented. Service discovery protocols are designed to minimize administrative overhead and increase usability. By adding a layer of indirection, service discovery protocols simplify pervasive system design. All these protocols support service discovery in ambient <b>computing</b> <b>environments</b> in terms of network topology or location. A general approach to service invocation in pervasive <b>computing</b> <b>environments</b> also establishes a general interface for introducing latest devices and services...|$|R
50|$|The IISS {{projects}} actually produced working prototypes of {{an information}} processing environment that would run in heterogeneous <b>computing</b> <b>environments.</b> Current advancements in such techniques as Java and JDBC are now achieving {{the goals of}} ubiquity and versatility across <b>computing</b> <b>environments</b> which was first demonstrated by IISS.|$|R
25|$|The {{goals of}} the Classmate PC project and the OLPC project have some differences. According to Intel: the Classmate PC aims to provide {{technology}} that fits into the larger, primarily Windows-based <b>computing</b> <b>environment.</b> However, according to the OLPC, the XO breaks from the desktop metaphor to provide a UI (Sugar) that they feel is more suited to {{the educational needs of}} children.|$|E
25|$|Microsoft did {{not change}} all of the Windows code to 32-bit; parts of it {{remained}} 16-bit (albeit not directly using real mode) for reasons of compatibility, performance and development time. Additionally {{it was necessary to}} carry over design decisions from earlier versions of Windows for reasons of backwards compatibility, even if these design decisions no longer matched a more modern <b>computing</b> <b>environment.</b> These factors immediately began to impact the operating system's efficiency and stability.|$|E
25|$|As the 1970s started, much of Engelbart's team {{departed}} ARC {{and went}} their own ways, {{with many of}} them ending up at the Xerox Palo Alto Research Centre (PARC). Among these people were Bill English, who would further improve upon the mouse. Also migrating to PARC was Engelbart's former backer at NASA and ARPA, Robert Taylor. Alan Kay, also in attendance at the demo, {{would go on to}} design an object-oriented <b>computing</b> <b>environment</b> called Smalltalk while he was at PARC.|$|E
5000|$|... the {{integration}} of distributed, heterogeneous <b>computing</b> <b>environments,</b> and ...|$|R
40|$|The {{objectives}} {{of this special}} issue are advanced security technologies and services for future <b>computing</b> <b>environments,</b> including, but not limited to, security primitives, protocols and security applications and services. Recent advances in security technologies and services for future <b>computing</b> <b>environments</b> have created {{a new class of}} the following: (i) Wireless sensor networks and radio-frequency identification security and privacy; (ii) security architectures for distributed network systems, P 2 P systems, cloud and grid systems; and (iii) security in e-commerce, mobile and wireless networks, and finally, security standards and assurance methods. All papers are expected to focus on novel approaches for advanced security technologies and services for future <b>computing</b> <b>environments</b> and to present high-quality results for tackling problems arising from the ever-growing advanced security technologies and services for future <b>computing</b> <b>environments...</b>|$|R
40|$|Abstract. Most of {{the current}} Internet trading frameworks, in {{particular}} their negotiation and payment phases, are intended for customers frequently connected to the Internet during an entire transaction. This requirement cannot be easily met in the high communication cost and/or low bandwidth settings, typically found in mobile <b>computing</b> <b>environments.</b> Based on the software agent paradigm, a new secure agent-based framework for Internet trading in mobile <b>computing</b> <b>environments</b> is proposed in this paper. The framework is composed of two new protocols. One is the agent-based auction-like negotiation protocol, another is the agent-based payment protocol. Both of them are dedicated to solve the trade problems of Internet trading in mobile <b>computing</b> <b>environments</b> and ensured to be safe by cryptographic technologies. The {{combination of the two}} secure protocols constitutes an integrative solution for Internet trading in mobile <b>computing</b> <b>environments...</b>|$|R
25|$|MIPS Computer Systems' R4000 {{microprocessor}} (1991) was {{the first}} MIPS III implementation. It was designed for use in personal, workstation, and server computers. MIPS Computer Systems aggressively promoted the MIPS architecture and R4000, establishing the Advanced <b>Computing</b> <b>Environment</b> (ACE) consortium to advance its Advanced RISC Computing (ARC) standard, which aimed to establish MIPS as the dominant personal computing platform. ARC found little success in personal computers, but the R4000 (and the R4400 derivative) were widely used in workstation and server computers, especially by its largest user, Silicon Graphics. Other uses of the R4000 included high-end embedded systems and supercomputers.|$|E
25|$|The {{modernization}} {{program is designed}} to provide a comprehensive mid-life upgrade to ensure that the class remains effective. Reduced manning, increased mission effectiveness, and a reduced total cost including construction, maintenance, and operation are the goals of the {{modernization program}}. Modernization technologies will be integrated during new construction of DDG-111 and 112, then retrofitted into DDG flight I and II ships during in-service overhaul periods. The first phase will update the hull, mechanical, and electrical systems while the second phase will introduce an open architecture <b>computing</b> <b>environment</b> (OACE). The result will be improved capability in both ballistic missile defense (BMD) and littoral combat. By 2018, all Arleigh Burke-class ships homeported in the Western Pacific will have upgraded ASW systems, including the new AN/SQR-20 multifunction towed array.|$|E
25|$|In late 2005, {{the program}} entered the {{detailed}} design and integration phase, for which Raytheon is the Mission Systems Integrator. Both Northrop Grumman Ship Systems and General Dynamics Bath Iron Works share dual-lead for the hull, mechanical, and electrical detailed design. BAE Systems Inc. has the advanced gun {{system and the}} MK57 VLS. Almost every major defense contractor (including Lockheed Martin, Northrop Grumman Sperry Marine, L-3 Communications) and subcontractors from nearly {{every state in the}} U.S. are involved to some extent in this project, which is the largest single line item in the Navy's budget. During the previous contract, development and testing of 11 Engineering Development Models (EDMs) took place: Advanced Gun System, Autonomic Fire Suppression System, Dual Band Radar , Infrared, Integrated Deckhouse & Apertures, Integrated Power System, Integrated Undersea Warfare, Peripheral Vertical Launch System, Total Ship <b>Computing</b> <b>Environment</b> Infrastructure (TSCEI), Tumblehome Hull Form.|$|E
40|$|Abstract — Resource {{discovery}} {{is an integral}} part of many kinds of <b>computing</b> <b>environments,</b> including emerging heterogeneous <b>environments</b> for pervasive <b>computing.</b> This paper characterises a number of current and future <b>computing</b> <b>environments</b> and summarises their resource discovery requirements. It then analyses, with respect to the requirements of each environment, several established service discovery protocols and some newer protocols that are still in the research domain. In addition, the key features of a new resource discovery protocol that has been developed to operate with heterogeneous <b>computing</b> <b>environments</b> are described. Index Terms — pervasive computing, resource discovery, service discovery I...|$|R
5000|$|Standardized usage across {{multiple}} platforms, rendering heterogeneous <b>computing</b> <b>environments</b> more manageable.|$|R
40|$|As {{information}} technologies evolve, <b>computing</b> <b>environments</b> become more distributed and heterogeneous. More and more software applications written in different programming languages running on different platforms with different operating systems {{are required to}} {{communicate with one another}} over different computer networks. Conflicts resulting from having heterogeneous and distributed <b>computing</b> <b>environments</b> require strategies for software interoperability...|$|R
2500|$|In June 2009, BMC {{received}} a [...] "CIO 100 Award" [...] for [...] "innovative {{use of an}} internal cloud <b>computing</b> <b>environment</b> to achieve maximum return on server and storage investments." ...|$|E
2500|$|BMC {{uses its}} own {{software}} {{in a private}} cloud <b>computing</b> <b>environment</b> for developing applications. BMC also offers consulting, implementation, integration, and educational services related to its software products and sells directly through a sales force and indirectly through channel partners which include [...] "resellers, distributors, and systems integrators." ...|$|E
2500|$|A {{study to}} place the AMDR on a DDG-1000 hull {{was done with the}} [...] {{aperture}} primarily for Ballistic Missile Defense (BMD) purposes. In that the DDG-1000 does not have an Aegis combat system, as does the DDG-51 class ships, but rather the Total Ship <b>Computing</b> <b>Environment</b> Infrastructure (TSCEI), the Radar/Hull Study stated: ...|$|E
40|$|Problem-centric {{scheduling}} for heterogeneous computing systems This project addresses key scheduling {{problems in}} heterogeneous <b>computing</b> <b>environments.</b> Heterogeneous <b>computing</b> systems (HCSs) have received increased attention since the 1990 s, particularly {{over the past}} 10 years with the popularity of grid computing systems. These <b>computing</b> <b>environments</b> consist {{of a variety of}} resources interconnected by a high-speed network. Many parallel and distributed applications can take advantage of this computing platform; however, resource heterogeneity and dynamism impose scheduling restrictions. It is extremely difficult for a single scheduling scheme to efficiently and effectively handle the application scenarios that are required in grid <b>computing</b> <b>environments.</b> What further complicates the issue is that <b>computing</b> <b>environments</b> are controlled by different administrative authorities. Thus, application diversity, and resource heterogeneity and dynamism, point to the need to develop a set of scheduling algorithms to manage these scenarios. The thesis describes a number of key application and system models, an...|$|R
5000|$|Virtual <b>computing</b> <b>environments</b> enable smart {{devices to}} access {{pertinent}} services anywhere and anytime.|$|R
40|$|Cloud {{computing}} is an internet-based technology, {{providing services}} to the virtualized IT environment, and allowing users to add or remove resources of hardware or software at their discretion. Since Cloud computing can construct virtually integrated environments out of multiple local <b>computing</b> <b>environments,</b> various information services can be provided by it. In addition, state organizations also strive to build the cloud <b>computing</b> <b>environments</b> due to the benefits of reduced costs to introduce the system and of reduced time to build and provide the IT services. This study suggests a web-based cloud computing system for the <b>computing</b> <b>environments,</b> to be applied for the Korean National Health and Nutritio...|$|R
2500|$|DDG-113 to DDG-115 will be [...] "restart" [...] ships, {{similar to}} {{previous}} Flight IIA ships, but including modernization {{features such as}} Open Architecture <b>Computing</b> <b>Environment.</b> DDG-116 to DDG-121 will be [...] "Technology Insertion" [...] ships with elements of Flight III. Flight III proper will begin with the third ship procured in 2016.|$|E
2500|$|The Zumwalt-class {{destroyer}} {{is not an}} Aegis system. It uses {{instead the}} class-unique Total Ship <b>Computing</b> <b>Environment</b> Infrastructure (TSCEI) integrated mission system. The peripheral vertical launch system (PVLS) VLS is capable of accommodating all Standard missile types [...] {{it has not been}} publicly stated if the TSCE will be modified to support the Standard missile or the ballistic missile defense mission.|$|E
2500|$|Copland is {{also based}} on the newly defined Common Hardware Reference Platform, or CHRP, which {{standardized}} the Mac hardware {{to the point where}} it could be built by different companies and can run other operating systems (Solaris and AIX were two of many mentioned). This was a common theme at the time; many companies were forming groups to define standardized platforms to offer an alternative to the [...] "Wintel" [...] platform that was rapidly becoming dominant—examples include 88open, Advanced <b>Computing</b> <b>Environment,</b> and the AIM alliance.|$|E
30|$|An {{effective}} energy-efficient {{optimization model}} for resource allocation in cloud <b>computing</b> <b>environments</b> is proposed.|$|R
5000|$|Virtual <b>computing</b> <b>environments</b> {{that enable}} smart devices to access {{pertinent}} services anywhere and anytime.|$|R
30|$|We have {{designed}} and implemented a new system, Clive, for distributed <b>computing</b> <b>environments.</b> Its I/O framework {{can be used}} in UNIX (and other systems) to address the problem stated before, which is further described in the next section. That is, it permits using the UNIX toolbox approach even when latencies get high (which is often the case in Cloud <b>computing</b> <b>environments).</b>|$|R
