133|77|Public
5000|$|... #Subtitle level 2: Fixed-length-element and contiguous-block <b>circular</b> <b>buffer</b> ...|$|E
50|$|The Bip Buffer (bipartite buffer) is {{very similar}} to a <b>circular</b> <b>buffer,</b> except it always returns {{contiguous}} blocks which can be variable length. This offers nearly all the efficiency advantages of a <b>circular</b> <b>buffer</b> while maintaining the ability for the buffer to be used in APIs that only accept contiguous blocks.|$|E
50|$|Inventor of the Bip Buffer <b>Circular</b> <b>buffer</b> data {{structure}} used in Google's Android OS.|$|E
5000|$|... {{communications}} items {{implemented by}} events and queues available as <b>circular</b> <b>buffers,</b> ...|$|R
5000|$|Allows <b>circular</b> <b>buffers</b> to be {{implemented}} without having to test for wrapping ...|$|R
50|$|Fixed-sized {{compressed}} <b>circular</b> <b>buffers</b> use {{an alternative}} indexing strategy based on elementary number theory {{to maintain a}} fixed-sized compressed representation of the entire data sequence.|$|R
50|$|Perhaps {{the most}} common version of the <b>circular</b> <b>buffer</b> uses 8-bit bytes as elements.|$|E
50|$|Circular {{buffering}} {{makes a good}} {{implementation strategy}} for a queue that has fixed maximum size. Should a maximum size be adopted for a queue, then a <b>circular</b> <b>buffer</b> is a completely ideal implementation; all queue operations are constant time. However, expanding a <b>circular</b> <b>buffer</b> requires shifting memory, which is comparatively costly. For arbitrarily expanding queues, a linked list approach may be preferred instead.|$|E
5000|$|A <b>circular</b> <b>buffer</b> can be {{implemented}} using four pointers, or two pointers and two integers: ...|$|E
50|$|Queues {{are common}} in {{computer}} programs, where they are implemented as data structures coupled with access routines, as an abstract data structure or in object-oriented languages as classes. Common implementations are <b>circular</b> <b>buffers</b> and linked lists.|$|R
50|$|Forth also {{provides}} a facility by which a programmer can define new application-specific defining words, specifying both a custom defining behavior and instance behavior. Some examples include <b>circular</b> <b>buffers,</b> named bits on an I/O port, and automatically indexed arrays.|$|R
40|$|Abstract Background There is {{increasing}} interest {{in examining the}} influence of the built environment on physical activity. High-resolution data in a geographic information system {{is increasing}}ly being used to measure salient aspects of the built environment and studies often use circular or road network buffers to measure land use around an individual's home address. However, little research has examined {{the extent to which the}} selection of circular or road network buffers influences the results of analysis. The objective of this study is to examine the influence of land use type (residential, commercial, recreational and park land and institutional land) on 'walking for leisure' and 'walking for errands' using 1 km circular and line-based road network buffers. Data on individual walking patterns is obtained from a survey of 1311 respondents in greater Vancouver and respondent's postal code centroids were used to construct the individual buffers. Logistic regression was used for statistical analysis. Results Using line-based road network buffers, increasing proportion of institutional land significantly reduced the odds of 'walking for leisure 15 minutes or less per day' no significant results were found for <b>circular</b> <b>buffers.</b> A greater proportion of residential land significantly increased the odds of 'walking for errands less than 1 hour per week' for line-based road network buffer while no significant results for <b>circular</b> <b>buffers.</b> An increased proportion of commercial land significantly decreased the odds of 'walking for errands less than 1 hour per week' for both circular and line-based road network buffers. Conclusion The selection of network or <b>circular</b> <b>buffers</b> has a considerable influence on the results of analysis. Land use characteristics generally show greater associations with walking using line-based road network <b>buffers</b> than <b>circular</b> <b>buffers.</b> These results show that researchers need to carefully consider the most appropriate buffer with which to calculate land use characteristics. </p...|$|R
5000|$|... #Caption: A typical {{hardware}} setup {{using two}} shift registers {{to form an}} inter-chip <b>circular</b> <b>buffer</b> ...|$|E
50|$|Ping-pong {{buffering}} can {{be considered}} a very specialized <b>circular</b> <b>buffer</b> with exactly two large fixed-length elements.|$|E
50|$|The useful {{property}} of a <b>circular</b> <b>buffer</b> {{is that it}} does not need to have its elements shuffled around when one is consumed.(If a non-circular buffer were used then it would be necessary to shift all elements when one is consumed.)In other words, the <b>circular</b> <b>buffer</b> is well-suited as a FIFO buffer while a standard, non-circular buffer is well suited as a LIFO buffer.|$|E
30|$|BufferTable is the Varanus storage system. BufferTable is a {{distributed}} {{hash table}} which associates a source id and metric id {{with a family}} of <b>circular</b> <b>buffers.</b> BufferTable is intended to store metrics and status codes/log/event data. As such the buffer that the family maps to varies with {{the format of the}} data.|$|R
50|$|A digital {{delay line}} is a {{discrete}} element in digital filter theory, which allows a signal to be delayed {{by a number of}} samples. If the delay is an integer multiple of samples, digital delay lines are often implemented as <b>circular</b> <b>buffers.</b> This means that integer delays can be computed very efficiently.|$|R
40|$|Background: There is {{increasing}} interest {{in examining the}} influence of the built environment onphysical activity. High-resolution data in a geographic information system {{is increasing}}ly being usedto measure salient aspects of the built environment and studies often use circular or road networkbuffers to measure land use around an individual 2 ̆ 7 s home address. However, little research hasexamined {{the extent to which the}} selection of circular or road network buffers influences theresults of analysis. The objective of this study is to examine the influence of land use type (residential, commercial,recreational and park land and institutional land) on 2 ̆ 7 walking for leisure 2 ̆ 7 and 2 ̆ 7 walking for errands 2 ̆ 7 using 1 km circular and line-based road network buffers. Data on individual walking patterns isobtained from a survey of 1311 respondents in greater Vancouver and respondent 2 ̆ 7 s postal codecentroids were used to construct the individual buffers. Logistic regression was used for statisticalanalysis. Results: Using line-based road network buffers, increasing proportion of institutional landsignificantly reduced the odds of 2 ̆ 7 walking for leisure 15 minutes or less per day 2 ̆ 7 no significant resultswere found for <b>circular</b> <b>buffers.</b> A greater proportion of residential land significantly increased theodds of 2 ̆ 7 walking for errands less than 1 hour per week 2 ̆ 7 for line-based road network buffer whileno significant results for <b>circular</b> <b>buffers.</b> An increased proportion of commercial land significantlydecreased the odds of 2 ̆ 7 walking for errands less than 1 hour per week 2 ̆ 7 for both circular and linebasedroad network buffers. Conclusion: The selection of network or <b>circular</b> <b>buffers</b> has a considerable influence on theresults of analysis. Land use characteristics generally show greater associations with walking usingline-based road network <b>buffers</b> than <b>circular</b> <b>buffers.</b> These results show that researchers need tocarefully consider the most appropriate buffer with which to calculate land use characteristics...|$|R
5000|$|A <b>circular</b> <b>buffer</b> first starts {{empty and}} of some {{predefined}} length.For example, {{this is a}} 7-element buffer: ...|$|E
5000|$|Rotate through carry: the {{carry bit}} and operand are collectively {{treated as a}} <b>circular</b> <b>buffer</b> of bits.|$|E
5000|$|Storing deque {{contents}} in a <b>circular</b> <b>buffer,</b> {{and only}} resizing when the buffer becomes full. This decreases {{the frequency of}} resizings.|$|E
30|$|The barectf_init {{function}} {{is in charge}} of allocating and instantiating the data structures holding the packets (either locally or on external memory). Those can be <b>circular</b> <b>buffers,</b> regular queues or even a single global variable holding one packet. However, some systems might not handle dynamic allocation very well (as it was the case for the Parallella board). Thus, particular care must be taken when instantiating the structures.|$|R
5000|$|Py {{is based}} on the idea of [...] "sliding arrays": arrays are indexed {{relative}} to a start pointer, which is advanced by one word each round. Where modulo indexing is available (hardware, and many digital signal processors), these can be implemented as <b>circular</b> <b>buffers.</b> In software, these are most easily implemented as large arrays. When the end of the array is reached, the working portions are copied back to the beginning and operations continue.|$|R
30|$|BufferTable is indexed by {{a source}} id which {{contains}} the IP address or fully qualified domain {{name of the}} host that the metric pertains to and a metric id which identifies metric (e.g. CPUPercent, MemFree, MariaDBTransactions etc). This facilitates constant time lookup for obtaining all metrics associated with a given host, all metrics associated with a given id and a single metric identified by a source id, metric id pair. The BufferTable does not store single <b>circular</b> <b>buffers,</b> but rather buffer families.|$|R
5000|$|Rotate: the operand {{is treated}} as a <b>circular</b> <b>buffer</b> of bits so its least and most {{significant}} bits are effectively adjacent.|$|E
50|$|In some situations, {{overwriting}} <b>circular</b> <b>buffer</b> can be used, e.g. in multimedia. If {{the buffer}} {{is used as}} the bounded buffer in the producer-consumer problem then it is probably desired for the producer (e.g., an audio generator) to overwrite old data if the consumer (e.g., the sound card) is unable to momentarily keep up. Also, the LZ77 family of lossless data compression algorithms operates {{on the assumption that}} strings seen more recently in a data stream are more likely to occur soon in the stream. Implementations store the most recent data in a <b>circular</b> <b>buffer.</b>|$|E
50|$|A <b>{{circular}}</b> <b>buffer,</b> circular queue, cyclic buffer or {{ring buffer}} is a data structure {{that uses a}} single, fixed-size buffer {{as if it were}} connected end-to-end.This structure lends itself easily to buffering data streams.|$|E
50|$|In {{the palette}} modes, each 4×4 block is coded with a 2, 4, or 8-color palette. To select {{one of the}} colors from the palette, 1, 2, or 3 bits per pixel are used, respectively. The palette can be written to the {{bitstream}} either explicitly or as a reference to an entry in the palette cache. The palette cache {{is a set of}} three <b>circular</b> <b>buffers</b> which store the 256 most recently used palettes, one each for of the 2, 4, and 8-color modes.|$|R
50|$|Digital signal {{processing}} is {{the processing of}} digitized discrete-time sampled signals. Processing is done by general-purpose computers or by digital circuits such as ASICs, field-programmable gate arrays or specialized digital signal processors (DSP chips). Typical arithmetical operations include fixed-point and floating-point, real-valued and complex-valued, multiplication and addition. Other typical operations supported by the hardware are <b>circular</b> <b>buffers</b> and look-up tables. Examples of algorithms are the Fast Fourier transform (FFT), finite impulse response (FIR) filter, Infinite impulse response (IIR) filter, and adaptive filters such as the Wiener and Kalman filters.|$|R
40|$|Multimedia {{applications}} process {{streams of}} values and can often be represented as task graphs. For performance reasons, these task graphs are executed on multiprocessor systems. Inter-task communication is performed via buffers, where {{the order in which}} values are written into a buffer can differ from the order in which they are read. Some existing approaches perform inter-task communication via ﬁrst-in-ﬁrst-out buffers in combination with reordering tasks and require applications with affne index-expressions. In our previous work, we used <b>circular</b> <b>buffers</b> with a non-overlapping read and write window, such that a reordering task is not required. However, these windows can cause deadlock for cyclic task graphs. In this paper, we introduce <b>circular</b> <b>buffers</b> with multiple overlapping windows that do not delay the release of locations and therefore they do not introduce deadlock for cyclic task graphs. We show that buffers with multiple overlapping read and write windows are attractive, because they avoid that a buffer has to be selected from which a value has to be read or into which a value has to be written. This signiﬁcantly simpliﬁes the extraction of a task graph from a sequential application. These buffers are also attractive, because a buffer capacity equal to the array size is sufficient for deadlock-free execution, instead of performing global analysis to compute sufficient buffer capacities. Our case-study presents two applications that require these buffers...|$|R
50|$|Depending on the application, a FIFO {{could be}} {{implemented}} as a hardware shift register, or using different memory structures, typically a <b>circular</b> <b>buffer</b> or {{a kind of}} List. For information on the abstract data structure, see Queue (data structure).|$|E
50|$|Alternatively, the {{routines}} that {{manage the}} buffer could prevent overwriting {{the data and}} return an error or raise an exception.Whether or not data is overwritten {{is up to the}} semantics of the buffer routines or the application using the <b>circular</b> <b>buffer.</b>|$|E
5000|$|... #Caption: A 24-byte {{keyboard}} <b>circular</b> <b>buffer.</b> When the {{write pointer}} {{is about to}} reach the read pointer - because the microprocessor is not responding, the buffer will stop recording keystrokes and - in some computers - a beep will be played.|$|E
40|$|A {{description}} is given of an electronics {{system based on}} the DEC Falcon SBC- 11 / 23 +, which has been designed and built to support a balloon-borne double Compton gamma-ray telescope. The system provides support for commands, data acquisition, data routing and compression, and photomultiplier tube gain control. The software consists {{of a number of}} interrupt-driven routines of differing priorities to handle each system task. This includes two <b>circular</b> <b>buffers</b> for onboard processing and bit encoding before transmission of the information to the ground computer. Acquisition of gamma-ray events at rates above the 200 -Hz telemetry constraint is easily achieved...|$|R
40|$|For years, Linux {{developers}} used printk() {{to debug}} the USB stack, but {{this approach has}} serious limitations. In this paper we dis-cuss “usbmon, ” a recently developed facility to snoop USB traffic in a more efficient way than {{can be done with}} printk(). From far away, usbmon is a very straightfor-ward piece of code. It consists of <b>circular</b> <b>buffers</b> which are filled with records by hooks into the USB stack and a thin glue to the user code which fetches these records. The devil, however, is in details. Also the user mode tools play a role. ...|$|R
40|$|Abstract Background The primary study {{objective}} was to examine whether the presence of food retailers surrounding schools was associated with students’ lunchtime eating behaviours. The secondary {{objective was}} to determine whether measures of the food retail environment around schools captured using road network or <b>circular</b> <b>buffers</b> were more strongly related to eating behaviours while at school. Methods Grade 9 and 10 students (N= 6, 971) who participated in the 2009 / 10 Canadian Health Behaviour in School Aged Children Survey were included in this study. The outcome was determined by students’ self-reports of where they typically ate their lunch during school days. Circular and road network-based buffers were created for a 1 [*]km distance surrounding 158 schools participating in the HBSC. The addresses of fast food restaurants, convenience stores and coffee/donut shops were mapped within the buffers. Multilevel logistic regression was used to determine whether there was a relationship between the presence of food retailers near schools and students regularly eating their lunch at a fast food restaurant, snack-bar or café. The Akaike Information Criteria (AIC) value, a measure of goodness-of-fit, was used to determine the optimal buffer type. Results For the 1 [*]km <b>circular</b> <b>buffers,</b> students with 1 – 2 (OR= 1. 10, 95 % CI: 0. 57 - 2. 11), 3 – 4 (OR= 1. 45, 95 % CI: 0. 75 - 2. 82) and ≥ 5 nearby food retailers (OR= 2. 94, 95 % CI: 1. 71 - 5. 09) were more likely to eat lunch at a food retailer compared to students with no nearby food retailers. The relationships were slightly stronger when assessed via 1 [*]km road network buffers, with a greater likelihood of eating at a food retailer for 1 – 2 (OR= 1. 20, 95 % CI: 0. 74 - 1. 95), 3 – 4 (OR= 3. 19, 95 % CI: 1. 66 - 6. 13) and ≥ 5 nearby food retailers (OR= 3. 54, 95 % CI: 2. 08 - 6. 02). Road network buffers appeared to provide a better measure of the food retail environment, as indicated by a lower AIC value (3332 vs. 3346). Conclusions There was a strong relationship between the presence of food retailers near schools and students’ lunchtime eating behaviours. Results from the goodness of fit analysis suggests that road network buffers provide a more optimal measure of school neighbourhood food environments relative to <b>circular</b> <b>buffers.</b> </p...|$|R
