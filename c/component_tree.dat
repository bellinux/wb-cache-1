62|655|Public
5000|$|... each <b>component</b> <b>tree</b> of [...] {{is either}} {{contained}} in or vertex-disjoint from every tree of , and ...|$|E
5000|$|... 3. Snapp RR, Goveia E, Peet L, Bouffard NA, Badger GJ, Langevin HM. Spatial {{organization}} of fibroblast nuclear chromocenters: <b>component</b> <b>tree</b> analysis. J Anat. 2013 Sep; 223(3):255-61.|$|E
50|$|The <b>component</b> <b>tree</b> is {{the set of}} all {{connected}} components of the thresholds of the image, ordered by inclusion. Efficient (quasi-linear whatever {{the range of the}} weights) algorithms for computing it do exist. Thus this structure offers an easy way for implementing MSER.|$|E
40|$|<b>Component</b> <b>trees</b> are {{important}} data structures for computation of connected attribute filters. Though {{some of the}} available algorithms are suitable for high-dynamic range, and in particular floating point data, none are suitable for computation of <b>component</b> <b>trees</b> for so-called second-generation, and mask-based connectivity. The latter allow generalization of the traditional notion of connected components, to allow considering e. g. a star cluster as a single entity. This paper provides an O(N log N) algorithm for <b>component</b> <b>trees,</b> suitable for standard and mask-based connectivity. At 24 bits per pixel, the new algorithm outperforms the existing {{by a factor of}} 20 to 77 in cpu-time, on 3 megapixel images, depending on the image content. ...|$|R
40|$|In {{this thesis}} we study the {{possibilities}} of decomposing Boolean formulae into connected components. For this reason, we introduce a new concept - <b>component</b> <b>trees.</b> We describe some of their properties and suggest some applications. We designed a class of decision heuristics for SAT solvers based on <b>component</b> <b>trees</b> and experimentally examined their performance on benchmark problems. For this purpose we implemented our own solver, which uses the state-of-theart SAT solving algorithms and techniques...|$|R
5000|$|Static Structure, Dynamic Behavior—page and {{component}} {{structure is}} essentially static, {{eliminating the need}} to construct (and store in session memory) large page and <b>component</b> <b>trees.</b>|$|R
50|$|Box-ironbark {{forest is}} a forest or {{woodland}} ecosystem {{that is largely}} limited to central Victoria in south-eastern Australia. Because its <b>component</b> <b>tree</b> species produce abundant nectar and pollen throughout the year, {{it is important for}} the conservation of many species of birds and other animals.|$|E
5000|$|The concept {{more simply}} can be {{explained}} by thresholding. All the pixels below a given threshold are 'black' and all those above or equal are 'white'. Given a source image, if we generate a sequence of thresholded result images [...] where each image [...] corresponds to an increasing threshold t, we would see first a white image, then 'black' spots corresponding to local intensity minima will appear then grow larger. These 'black' spots will eventually merge, until the whole image is black. The set of all connected components in the sequence is the set of all extremal regions. In that sense, the concept of MSER is linked to the one of <b>component</b> <b>tree</b> of the image. The <b>component</b> <b>tree</b> indeed provide an easy way for implementing MSER.|$|E
50|$|In computing, Facelets is an {{open-source}} Web template {{system under}} the Apache license and the default view handler technology (aka view declaration language) for JavaServer Faces (JSF). The language requires valid input XML documents to work. Facelets supports {{all of the}} JSF UI components and focuses completely on building the JSF <b>component</b> <b>tree,</b> reflecting the view for a JSF application.|$|E
30|$|Among the {{different}} model forms tested (Y[*]=[*]b 0 [*]+[*]b 1 D 2, Y[*]=[*]b 0 [*]+[*]b 1 D 2 [*]+[*]b 2 H and Y[*]=[*]b 0 [*]+[*]b 1 D 2 H, where b 0 and b 1 are regression coefficients, D is the DBH and H is the tree height), the model form Y[*]=[*]b 0 [*]+[*]b 1 D 2 H {{was the best}} for 8 <b>tree</b> <b>components</b> and for the whole tree biomass, and the second best for the remaining <b>tree</b> <b>components,</b> as judged by the goodness of fit statistics described above. Therefore, to allow all <b>tree</b> <b>components</b> and whole <b>tree</b> biomass models {{to have the same}} regressors, and thus achieve additivity, this model form was generalized for all <b>tree</b> <b>components</b> and whole <b>tree</b> biomass models.|$|R
30|$|Eqs. (2, 3, 4, 5, 6, 7) {{were applied}} to {{estimate}} biomass stock of each <b>tree</b> <b>component</b> and whole <b>tree.</b>|$|R
40|$|Abstract. The {{classical}} Dodgson identity can {{be interpreted}} as a quadratic identity of spanning forest polynomials, where the spanning forests used in each polynomial are de-fined by how three marked vertices are divided among the <b>component</b> <b>trees.</b> We prove an analogous result with four marked vertices. 1...|$|R
50|$|The {{framework}} is implemented {{as a component}} library which adds Ajax capability into existing pages, so a developer doesn’t need to write any JavaScript code or to replace existing components with new Ajax widgets. RichFaces enables page-wide Ajax support instead of the traditional component-wide support. Hence, a developer can define the event on the page that invokes an Ajax request and {{the areas of the}} page that should be synchronized with the JSF <b>Component</b> <b>Tree</b> after the Ajax request changes the data on the server according to the events fired on the client.|$|E
50|$|Vericut {{software}} is customizable {{and includes a}} selection of machine tools. Machine models can also be built from scratch, using a CAD system or by defining such in the software. It contains a <b>component</b> <b>tree</b> to manage the kinematics of a machine. Vericut simulates machine tools in their entirety as they would appear in a shop and shows the removal of material at the workpiece level. It also simulates NC machine controls and automatically checks for collisions and over travel of machine tools to reduce {{the probability of a}} machine crash.|$|E
5000|$|Based on a component-driven UI design-model, JavaServer Faces uses XML files called view {{templates}} or Facelets views. The [...] processes requests, loads {{the appropriate}} view template, builds a <b>component</b> <b>tree,</b> processes events, and renders the response (typically in the HTML language) to the client. The state of UI components {{and other objects}} of scope interest is saved {{at the end of}} each request in a process called stateSaving (note: transient true), and restored upon next creation of that view. Either the client or the server side can save objects and states.|$|E
40|$|The {{classical}} Dodgson identity can {{be interpreted}} as a quadratic identity of spanning forest polynomials, where the spanning forests used in each polynomial are defined by how three marked vertices are divided among the <b>component</b> <b>trees.</b> We prove an analogous result with four marked vertices. Comment: 14 pages, rearranged to be cleare...|$|R
40|$|A {{deterministic}} growth {{model for}} uneven-aged monospecific stands of cypress pine is presented. It is implemented as a cohort model and comprises equations to (1) predict stand basal area increment, (2) distribute stand increment among <b>component</b> <b>trees,</b> (3) estimate potential diameter increment {{to check for}} excessive distributed increments, (4) predict mortality, and (5) predict regeneration...|$|R
40|$|Abstract We {{investigate}} the new {{definition of the}} ordered dynamics proposed in [4]. We show that this definition leads to several properties. In particular we give necessary and sufficient conditions which indicate when a transformation preserves {{the dynamics of the}} regional maxima. We also establish a link between the dynamics, minimum spanning <b>trees,</b> and <b>component</b> <b>trees...</b>|$|R
50|$|Trees {{in mixed}} open forest it grows with include {{turpentine}} (Syncarpia glomulifera), spotted gum (Corymbia maculata), red bloodwood (C. gummifera), blackbutt (E. pilularis), Sydney blue gum, red mahogany (E. resinifera), and smooth-barked apple (Angophora costata). Associated understory plants in wetter forests with some rainforest transition include lillypilly (Syzygium smithii) and wattles. In coastal plant communities near sand-dunes, it grows with stunted forms of white stringybark (E. globoidea), silvertop ash (E. sieberi), banksia and such understory plants as burrawang (Macrozamia communis). It is a <b>component</b> <b>tree</b> of wetland forest in Booderee National Park alongside blackbutt, red bloodwood, grey ironbark (Eucalyptus paniculata), scribbly gum (E. sclerophylla), old man banksia (Banksia serrata), coast banksia (B. integrifolia) and snow-in-summer (Melaleuca linariifolia), with understory {{plants such as}} jointed twig-rush (Baumea articulata), tall spike-rush (Eleocharis sphacelata), prickly tea-tree (Leptospermum juniperinum), and zig-zag bog-rush (Schoenus brevifolius).|$|E
40|$|Building the <b>component</b> <b>tree</b> in quasi-linear time Abstract — The level sets of a map are {{the sets}} of points with level above a given threshold. The {{connected}} {{components of the}} level sets, thanks to the inclusion relation, can be organized in a tree structure, that is called the <b>component</b> <b>tree.</b> This tree, under several variations, {{has been used in}} numerous applications. Various algorithms have been proposed in the literature for computing the <b>component</b> <b>tree.</b> The fastest ones (considering the worst-case complexity) have been proved to run in O(n ln(n)). In this paper, we propose a simple to implement quasi-linear algorithm for computing the <b>component</b> <b>tree</b> on symmetric graphs, based on Tarjan’s union-find procedure. We also propose an algorithm that computes the n most significant lobes of a map. Index Terms — <b>Component</b> <b>tree,</b> connected operators, mathematical morphology, classification, disjoint sets, union-find, imag...|$|E
40|$|Abstract — The level sets of a map are {{the sets}} of points with level above a given threshold. The {{connected}} {{components of the}} level sets, thanks to the inclusion relation, can be organized in a tree structure, that is called the <b>component</b> <b>tree.</b> This tree, under several variations, {{has been used in}} numerous applications. Various algorithms have been proposed in the literature for computing the <b>component</b> <b>tree.</b> The fastest ones (considering the worst-case complexity) have been proved to run in O(n ln(n)). In this paper, we propose a simple to implement quasi-linear algorithm for computing the <b>component</b> <b>tree</b> on symmetric graphs, based on Tarjan’s union-find procedure. We also propose an algorithm that computes the n most significant lobes of a map. Index Terms — <b>Component</b> <b>tree,</b> connected operators, mathematical morphology, classification, disjoint sets, union-find, imag...|$|E
40|$|International audienceIn edge-weighted graphs, {{we provide}} a unified {{presentation}} {{of a family of}} popular morphological hierarchies such as <b>component</b> <b>trees,</b> quasi flat zones, binary partition trees, and hierarchical watersheds. For any hierarchy of this family, we show if (and how) it can be obtained from any other element of the family. In this sense, the main contribution of this paper is the study of all constructive links between these hierarchies...|$|R
30|$|Biomass {{estimation}} typically requires {{estimation of}} <b>tree</b> <b>components</b> and total <b>tree</b> biomass (Seifert and Seifert 2014). To ensure the additivity of minor component biomass estimates into major <b>components</b> and whole <b>tree</b> biomass estimates, minor component, major <b>component</b> and whole <b>tree</b> biomass models were fitted {{using the same}} regressors (Parresol 1999; Goicoa et al. 2011). For this, first the best <b>tree</b> <b>component</b> and whole <b>tree</b> biomass regression equations were selected by running various possible linear regressions on combinations {{of the independent variables}} (DBH, tree height) and evaluating them using the following goodness of fit statistics: coefficient of determination (R 2), standard deviation of residuals (Sy.x), mean residual (MR), and graphical analysis of residuals. The mean residual and the standard deviation of residuals were expressed as relative values, hereafter referred to as percent mean residual (MR (%)) and coefficient of variation of residuals (CVr (%)), respectively, which are more revealing. The computation and interpretation of these fit statistics were previously described by Mayer (1941), Gadow & Hui (1999), Ruiz-Peinado et al. (2011), and Goicoa et al. (2011).|$|R
30|$|In 2014, {{additional}} 37 trees (DBH range: 5.5 – 32  cm; height range: 7.3 – 15.74  m) were felled outside sampling plots, 21 {{inside and}} 16 outside the study area. The 93 trees collected in 2012 {{were used to}} fit <b>tree</b> <b>component</b> biomass regression models and determine <b>tree</b> <b>component</b> BEFs, and those collected in 2014 (37 trees) were used to estimate the biases associated with regression equation based and BEF-based <b>tree</b> <b>component</b> biomass estimates.|$|R
40|$|The level sets of a map are {{the sets}} of points with level above a given threshold. The {{connected}} {{components of the}} level sets, thanks to the inclusion relation, can be organized in a tree structure, that is called the <b>component</b> <b>tree.</b> This tree, under several variations, {{has been used in}} numerous applications. Various algorithms have been proposed in the literature for computing the <b>component</b> <b>tree.</b> The fastest ones have been proved to run in 0 (n ln(n)) complexity. In this paper, we propose a simple to implement quasi-linear algorithm for computing the <b>component</b> <b>tree</b> on symmetric graphs, based on Tarjan's union- nd principle...|$|E
40|$|The upper-weighted sets of {{a signal}} are the sets of points with weight above a given threshold. The {{components}} of the upper-weighted sets, thanks to the inclusion relation, can be organized in a tree structure, which is called the <b>component</b> <b>tree.</b> In this work, we present a linear time and space algorithm to compute the <b>component</b> <b>tree</b> of one-dimensional signals. From this algorithm we derive an efficient gray-level image multithresholding method, {{which is based on}} the hypothesis that objects which appear on an image can be represented by salient classes present in the histogram of this image. These classes are modelled as the most significative {{components of the}} histogram's <b>component</b> <b>tree.</b> We show results of the proposed method and compare it with classical methods. Pages: 437 - 44...|$|E
40|$|Many of the {{recently}} popular shape based category recognition methods require stable, connected and labeled edges as input. This paper introduces a novel method {{to find the most}} stable region boundaries in grayscale images for this purpose. In contrast to common edge detection algorithms as Canny, which only analyze local discontinuities in image brightness, our method integrates mid-level information by analyzing regions that support the local gradient magnitudes. We use a <b>component</b> <b>tree</b> where every node contains a single connected region obtained from thresholding the gradient magnitude image. Edges in the tree are defined by an inclusion relationship between nested regions in different levels of the tree. Region boundaries which are similar in shape (i. e. have a low chamfer distance) across several levels of the tree are included in the final result. Since the <b>component</b> <b>tree</b> can be calculated in quasi-linear time and chamfer matching between nodes in the <b>component</b> <b>tree</b> is reduced to analysis of the distance transformation, results are obtained in an efficient manner. The proposed detection algorithm labels all identified edges during calculation, thus avoiding the cumbersome post-processing of connecting and labeling edge responses. We evaluate our method on two reference data sets and demonstrate improved performance for shape prototype based localization of objects in images. 1...|$|E
5000|$|Support {{for several}} graph-theoretical algorithms: such as graph isomorphism, {{subgraph}} isomorphism, minimum spanning <b>tree,</b> connected <b>components,</b> dominator <b>tree,</b> maximum flow, etc.|$|R
5000|$|This is {{particularly}} important in some log structured storage systems that use the log-structured merge-tree or LSM-tree. The LSM-tree is actually a collection of trees but which is treated as a single key-value store. One variation of the LSM-Tree is the Sorted Array Merge Tree or SAMT. [...] In this variation, a SAMT's <b>component</b> <b>trees</b> are called Wanna-B-trees. Each Wanna-B-tree has an associated quotient filter. A query on the SAMT is directed at only select Wanna-B-trees as evidenced by their quotient filters.|$|R
40|$|This paper {{addresses}} {{the problem of}} change detec-tion in multispectral satellite images. We introduce a new information theoretic-based metric between the images associated with a Markov Random Field spatial regularization. The proposed metric is parametrized through copulas and implemented over <b>component</b> <b>trees</b> representation of the images. Such topographic map based metric associated to an Ising model exhibits interesting results for both abrupt and slow changes while being robust to global illumination and contrast changes. Experiments are conducted on SPOT images of the amazonian basin for landcover monitoring...|$|R
40|$|This paper {{introduces}} a novel boundary detection framework finding {{the most stable}} region boundaries in grayscale images. In contrast to common detection algorithms as Canny, which only analyze local discontinuities in image brightness our method also integrates mid-level information by analyzing regions that support the local gradient magnitudes. We build a <b>component</b> <b>tree</b> where every node contains a single connected region obtained from thresholding the input image and edges define the spatial relations between the nodes. Then connected nodes at different levels in the tree are compared by a simplified chamfer matching method. Matching regions have boundaries that stay similar over several image intensities, and thus contribute as stable edges to the final result. Since the <b>component</b> <b>tree</b> can be calculated in linear time and chamfer matching between nodes in the <b>component</b> <b>tree</b> is reduced {{to an analysis of}} the distance transformation, results are obtained in a very efficient manner. Furthermore, the proposed detection algorithm automatically labels all identified boundaries during calculation avoiding the required post-processing of connecting and labeling edge responses for usage in a detection framework. We compare our method against standard Canny and the Berkeley edge detector on the ETHZ shape classes and the Weizmann horses dataset, which both demonstrate better performance in reducing clutter. ...|$|E
40|$|This paper {{introduces}} a tracking method for the well known local MSER (Maximally Stable Extremal Region) detector. The <b>component</b> <b>tree</b> {{is used as}} an efficient data structure, which allows the calculation of MSERs in quasi-linear time. It is demonstrated that the tree is able to manage the required data for tracking. We show that by means of MSER tracking the computational time {{for the detection of}} single MSERs can be improved by a factor of 4 to 10. Using a weighted feature vector for data association improves the tracking stability. Furthermore, the <b>component</b> <b>tree</b> enables backward tracking which further improves the robustness. The novel MSER tracking algorithm is evaluated on a variety of scenes. In addition, we demonstrate three different applications, tracking of license plates, faces and fibers in paper, showing in all three scenarios improved speed and stability. 1...|$|E
40|$|Goal: apply {{connected}} filters from mathematical morphology to astronomical images. Features of processed astronomical images Huge sizes (order of magnitude: 100 MB – 1. 5 GB) Pixels encoded as floating-point values High dynamic ranges ⇒ New tools {{needed to}} write these filters, in particular a <b>component</b> <b>tree</b> algorithm Joint-work between IAP and LRDE, {{in the context}} of th...|$|E
40|$|Tillandsia geminiflora {{is little}} grown in Brazil, but has good {{potential}} for exportation. Tree fern fiber {{was used in}} mixtures for bromeliad cultivation until the prohibition of this practice. The replacement of tree fern by other materials with similar properties has been researched. Thus, and {{the aim of this}} study was to compare the development of T. geminiflora grown in media with different vegetal <b>components</b> (<b>tree</b> fern, coconut husk and pinus bark). Plant development was evaluated for about two years. Pure coconut bark husk gave the best results...|$|R
50|$|The maximal pseudoforests of G are the pseudoforest subgraphs of G {{that are}} not {{contained}} within any larger pseudoforest of G. A maximal pseudoforest of G is always a spanning pseudoforest, but not conversely. If G has no connected <b>components</b> that are <b>trees,</b> then its maximal pseudoforests are 1-forests, but if G does have a <b>tree</b> <b>component,</b> its maximal pseudoforests are not 1-forests. Stated precisely, in any graph G its maximal pseudoforests consist of every <b>tree</b> <b>component</b> of G, together {{with one or more}} disjoint 1-trees covering the remaining vertices of G.|$|R
50|$|Bulimba Memorial Park is {{significant}} as a First World War memorial park with extensive and varied <b>components.</b> The <b>trees</b> are significant for their commemorative function, aesthetic value and practical usage.|$|R
