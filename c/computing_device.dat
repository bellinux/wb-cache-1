761|4401|Public
5|$|Konrad Zuse's Z3 was the world's first working programmable, fully {{automatic}} computer, with binary digital arithmetic logic, but it lacked the conditional branching of a Turing machine. On 12 May 1941, it was successfully presented {{to an audience}} of scientists of the Deutsche Versuchsanstalt für Luftfahrt ("German Laboratory for Aviation") in Berlin. The Z3 stored its program on an external tape, but it was electromechanical rather than electronic. The Colossus of 1943 was the first electronic <b>computing</b> <b>device,</b> {{but it was not a}} general-purpose machine.|$|E
25|$|Church's {{system for}} {{computation}} developed {{into the modern}} λ-calculus, while the Turing machine became a standard model for a general-purpose <b>computing</b> <b>device.</b> It was soon shown that many other proposed models of computation were equivalent in power to those proposed by Church and Turing. These results led to the Church–Turing thesis that any deterministic algorithm that {{can be carried out}} by a human can be carried out by a Turing machine. Church proved additional undecidability results, showing that both Peano arithmetic and first-order logic are undecidable. Later work by Emil Post and Stephen Cole Kleene in the 1940s extended the scope of computability theory and introduced the concept of degrees of unsolvability.|$|E
25|$|Gerbert {{learned of}} Hindu–Arabic digits and applied this {{knowledge}} to the abacus, but probably without the numeral zero. According to the 12th-century historian William of Malmesbury, Gerbert got {{the idea of the}} <b>computing</b> <b>device</b> of the abacus from a Spanish Arab. The abacus that Gerbert reintroduced into Europe had its length divided into 27 parts with 9 number symbols (this would exclude zero, which was represented by an empty column) and 1,000 characters in all, crafted out of animal horn by a shieldmaker of Rheims. According to his pupil Richer, Gerbert could perform speedy calculations with his abacus that were extremely difficult for people in his day to think through in using only Roman numerals. Due to Gerbert's reintroduction, the abacus became widely used in Europe once again during the 11th century.|$|E
50|$|This {{was later}} {{extended}} to create technologies for VToDo, to transfer ToDo details between <b>computing</b> <b>devices,</b> and vBookmark, to transfer URLs between <b>computing</b> <b>devices.</b>|$|R
3000|$|There {{are several}} kinds of {{resampling}} methods, and the basic resampling method is called the single distribution resampling. Furthermore, single distribution resampling is subdivided into two categories called: traditional variation resampling and traditional resampling. Using traditional resampling benefits <b>computing</b> <b>devices</b> that need a single sampling process for every [...] j [...] cycle (for instance, <b>computing</b> <b>devices</b> that only have low memory requirements). On the other hand, the utilisation of traditional variation resampling is beneficial for <b>computing</b> <b>devices</b> that require {{more than a single}} sampling process for every j cycle (for instance, <b>computing</b> <b>devices</b> that have a high memory requirement). Although <b>computing</b> <b>devices</b> that have high memory requirement do not normally have problems with memory consumption, traditional variation resampling is often thought to be more appropriate for usage in this environment because it is faster than traditional resampling [58].|$|R
40|$|Techniques {{have been}} {{developed}} to facilitate (1) the capture and pitch correction of vocal performances on handheld or other portable <b>computing</b> <b>devices</b> and (2) the mixing of such pitch-corrected vocal performances with backing tracks for audible rendering on targets that include such portable <b>computing</b> <b>devices</b> and as well as desktops, workstations, gaming stations, even telephony targets. Implementations of the described techniques employ signal processing techniques and allocations of system functionality that are suitable given the generally limited capabilities of such handheld or portable <b>computing</b> <b>devices</b> and that facilitate efficient encoding and communication of the pitch-corrected vocal performances (or precursors or derivatives thereof) via wireless and/or wired bandwidth-limited networks for rendering on portable <b>computing</b> <b>devices</b> or other targets...|$|R
500|$|The {{cathode-ray}} tube {{amusement device}} is {{the earliest known}} interactive electronic game. The device simulates an artillery shell arcing towards targets on a cathode ray tube (CRT) screen, which {{is controlled by the}} player by adjusting knobs to change the trajectory of a CRT beam spot on the display in order to reach plastic targets overlaid on the screen. Thomas T. Goldsmith, Jr. and Estle Ray Mann constructed the game from analog electronics and filed for a patent in 1947, which was issued the following year. The gaming device was never manufactured or marketed to the public, so it had no effect on the future video game industry. Under most definitions, the device is not considered a video game, as while it had an electronic display it did not run on a <b>computing</b> <b>device.</b> [...] Therefore, despite its relevance to the early history of video games, it is not generally considered a candidate for the title of the first video game.|$|E
500|$|Microsoft imposed {{tight control}} on the {{development}} and production of Windows RT devices: they were designed {{in cooperation with the}} company, and built to strict design and hardware specifications, including requirements to only use [...] "approved" [...] models of certain components. To ensure hardware quality and control the number of devices released upon launch, the three participating ARM chip makers were only allowed to partner with up to two PC manufacturers to develop the first [...] "wave" [...] of Windows RT devices in Microsoft's development program. Qualcomm partnered with Samsung and HP, Nvidia with Asus and Lenovo, and Texas Instruments with Toshiba. Additionally, Microsoft partnered with Nvidia to produce Surface (retroactively renamed [...] "Surface RT") – the first Windows-based <b>computing</b> <b>device</b> to be manufactured and marketed directly by Microsoft. Windows RT was designed to support chips meeting the ARMv7 architecture, a 32-bit processor platform. Shortly after the original release of Windows RT, ARM Holdings disclosed that it was working with Microsoft and other software partners on supporting the new ARMv8-A architecture, which include a new 64-bit variant, in preparation for future devices.|$|E
500|$|Douglas {{used the}} EDSAC to {{simulate}} {{a game of}} noughts and crosses, also called tic-tac-toe, and display {{the state of the}} game on the screen. Like other early video games, after serving Douglas's purpose, the game was discarded. Douglas did not give the game a name beyond [...] "noughts and crosses"; the name OXO first appeared as the name of the simulation file created by computer historian Martin Campbell-Kelly while creating a simulation of the EDSAC several decades later. Around the same time that OXO was completed, Christopher Strachey expanded a draughts program he had originally written in 1951 and ported it to the Ferranti Mark 1, which showed the state of the game on a CRT display. OXO and Strachey's draughts program are the earliest known games to display visuals on an electronic screen, though it is unclear which of the two games was displayed first. As it ran on a <b>computing</b> <b>device</b> and used a graphical display, OXO is considered under some definitions to be a contender for the first video game, though under others it does not due to its lack of moving graphics or graphics which update continuously.|$|E
5000|$|Auranet is the University of Oregon's Wearable Computing groups {{implementation}} of a wearable community. The Auranet is the network of <b>computing</b> <b>devices</b> that exist in a person's social space or [...] "Aura". The Auranet is where people and their personal <b>computing</b> <b>devices</b> have face-to-face encounters.|$|R
5000|$|... #Caption: Computers and <b>computing</b> <b>devices</b> from {{different}} eras ...|$|R
5000|$|TekXPress X-terminals, later sold to Network <b>Computing</b> <b>Devices</b> ...|$|R
2500|$|In some cases, hobby {{development}} is {{in support of}} a [...] "homebrew" [...] <b>computing</b> <b>device,</b> for example, a simple single-board computer powered by a 6502 microprocessor. [...] Or, development may be for an architecture already in widespread use. [...] Operating system development may come from entirely new concepts, or may commence by modeling an existing operating system. [...] In either case, the hobbyist is his/her own developer, or may interact with a small and sometimes unstructured group of individuals who have like interests.|$|E
2500|$|There are [...] "three big {{personal}} computing platforms." [...] Google claims over 2 billion users with Android while Microsoft has claimed over 1.4 billion users for Windows. The third [...] "platform" [...] or strictly two (or three) platforms Apple's iOS and macOS combined, is {{claimed to have}} over 1 billion users. Windows running on personal computers (i.e. those other than e.g. smartphones, such as desktop computers) has been dominant for over 25 years period since the early 1990s. The mainframe computer-era preceded the desktop era. From late 2016 the mobile era took over, with total desktop computers' market share (measured by web usage and including macOS) having reduced to 45% by January 2017. The [...] "end of an era" [...] was declared by StatCounter with Windows no longer the most popular operating system, and desktop computers in general no longer the most popular format. Since 2017, smartphones alone excluding tablets {{have been the most}} common <b>computing</b> <b>device</b> globally.|$|E
2500|$|Since 2011, the MacBook Air and iPad have supplanted the netbook as a <b>computing</b> <b>device</b> {{of choice}} between a {{smartphone}} and a full-fledged laptop. The 11" [...] MacBook Air carried the desirable essential attributes of a netbook, {{but without the}} drawbacks of a slower processor and less capable operating system, albeit at a higher price. At {{the high end of}} the performance spectrum of Apple's compact computing devices, the 11.6" [...] MacBook Air has revolutionized ultra-light portables with a traditional keyboard and display, which made fewer performance sacrifices albeit at considerably higher production cost. At the low end, Apple introduced the iPad—a different form factor than the netbook, but with improved computing capabilities and lower production cost. Both of these led to a decline in netbook sales, and most PC manufacturers have consequently discontinued their netbook lines in response. Capitalizing on the success of the MacBook Air, Intel promoted Ultrabook as a new high-mobility standard, which has been hailed by some analysts as succeeding where netbooks failed.|$|E
40|$|In a {{time where}} mobile <b>computing</b> <b>devices</b> and {{embedded}} systems gain importance, too much time is spent to reinventing user interfaces for each new device. To enhance future extensibility and reusability of systems and their user interfaces we propose a runtime user interface description language, which can cope with constraints found in embedded systems and mobile <b>computing</b> <b>devices.</b> XML {{seems to be a}} suitable tool to do this, when combined with Java. Following the evolution of Java towards XML, it is logical to introduce the concept applied to mobile <b>computing</b> <b>devices</b> and embedded systems...|$|R
40|$|Recent advancements in {{the area}} of {{nanotechnology}} have brought us into a new age of pervasive <b>computing</b> <b>devices.</b> These <b>computing</b> <b>devices</b> grow ever smaller and are being used in ways which were unimaginable before. Recent interest in developing a precise indoor positioning system, as opposed to existing outdoor systems, has given way to much research heading into the area. The use of these small <b>computing</b> <b>devices</b> offers many conveniences for usage in indoor positioning systems. This thesis will deal with using small <b>computing</b> <b>devices</b> Raspberry Pi’s to enable and improve position estimation of mobile devices within closed spaces. The newly patented Orthogonal Perfect DFT Golay coding sequences will be used inside this scenario, and their positioning properties will be tested. After that, testing and comparisons with other coding sequences will be done...|$|R
40|$|Pervasive Computing Environment {{consists}} of various casually accessible, mobile embedded, handheld devices capable for enviornment sensing {{around it and}} reacting intelligently to simplify the User Interface. These devices are scattered everywhere at offices, homes, stores, classrooms etc and mostly they are connencted to ad-hoc networks and Internet works at backbone to provide 24 x 7 round the clock online connectivity. Various Access Control Mechanisms are sometimes unable to provide complete security to these pervasive <b>computing</b> <b>devices</b> as in infrastructure based networks. The addition of Pervasive <b>Computing</b> <b>Devices</b> to Infrastructure based networks makes the Intrusion Detection harder. In this Research Paper, the various challenges and charateristics of Intrusion Detection in Pervasive <b>Computing</b> <b>Devices</b> are discusses along with Mobile-Agent based solution for a network enviornment which consists both Pervasive and Infrastructure based <b>computing</b> <b>devices...</b>|$|R
5000|$|IBM 608, {{the first}} commercially {{available}} transistorized <b>computing</b> <b>device</b> ...|$|E
5000|$|A site is any <b>computing</b> <b>device</b> {{which runs}} the Maekawa's Algorithm ...|$|E
5000|$|... Multi-Function Status Indicator For Content Receipt By A Mobile <b>Computing</b> <b>Device</b> ...|$|E
50|$|Computer-To Recognize {{knowledge}} and skills with personal <b>computing</b> <b>devices.</b>|$|R
5000|$|... #Caption: Network <b>Computing</b> <b>Devices</b> NCD-88k X terminal, {{front view}} ...|$|R
5000|$|... #Subtitle level 3: Comparisons between ZX81 {{and other}} <b>computing</b> <b>devices</b> ...|$|R
5000|$|... System And Method For Providing Advertisement Data To A Mobile <b>Computing</b> <b>Device</b> ...|$|E
50|$|The {{principle}} {{states that}} a universal <b>computing</b> <b>device</b> can simulate every physical process.|$|E
5000|$|Device Agnostic Tools (e.g. {{anywhere}} access {{from nearly}} {{any type of}} <b>computing</b> <b>device)</b> ...|$|E
30|$|Providing {{confidentiality}} guarantee for light-weight <b>computing</b> <b>devices.</b> <b>Computing</b> <b>devices</b> nowadays {{are turning}} {{more and more}} light-weight. Wearable devices like smart watches and smart glasses, IoT devices like smart home hubs or smart plugs, are increasingly popular today. Those light-weight <b>computing</b> <b>devices</b> are usually equipped with limited computational power. However, both the PDE and the secure deletion usually require expensive encryption operations, and thus cannot directly fit the use of light-weight devices. This can be mitigated by either outsourcing part of the expensive computation to the third-party cloud providers (without confidentiality compromise) or reducing the level of security to improve performance.|$|R
25|$|Tompkins, C. B.; Wakelin, J. H.; High-Speed <b>Computing</b> <b>Devices,</b> McGraw-Hill, 1950.|$|R
5000|$|Qt Extended - Application {{platform}} for Embedded Linux-based mobile <b>computing</b> <b>devices</b> ...|$|R
5000|$|A mobile {{database}} can {{be carried}} on or synchronized from a mobile <b>computing</b> <b>device.</b>|$|E
5000|$|Church-Turing-Deutsch principle, {{which states}} that every {{physical}} process can be simulated by a universal <b>computing</b> <b>device</b> ...|$|E
5000|$|On January 7, 2010 Pbxnsip {{launched}} its plug <b>computing</b> <b>device</b> the sipJack running pbxnsip: an IP Communications platform.|$|E
50|$|It is {{not easy}} to use Tironian notes on modern <b>computing</b> <b>devices.</b>|$|R
5000|$|Mobile <b>computing</b> <b>devices</b> {{tend to have}} slower CPUs {{and limited}} battery life.|$|R
5000|$|... 1997 - Acquired <b>Computing</b> <b>Devices</b> International, {{formerly}} {{a division of}} Ceridian Corporation.|$|R
