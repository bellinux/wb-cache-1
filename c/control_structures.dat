2380|9881|Public
5|$|The overall {{structure}} of Perl derives broadly from C. Perl is procedural in nature, with variables, expressions, assignment statements, brace-delimited blocks, <b>control</b> <b>structures,</b> and subroutines.|$|E
5|$|Kilburn {{became a}} {{professor}} of computing engineering in the Department of Electrical Engineering at Manchester in 1960. He was instrumental in forming the School of Computer Science in 1964, becoming the first head of the department, and served as Dean of the Faculty of Science from 1970 to 1972, and pro-vice-chancellor of the university from 1976 to 1979. His final computer project was the MU5, {{which was designed to}} facilitate the running of programs in high-level programming languages. An analysis of code written for the Atlas gave an insight into the frequency of different operands and <b>control</b> <b>structures.</b> The project was assisted by a £630,000 Science Research Council (SRC) grant awarded over five-years. The design heavily influenced the successful ICL 2900 Series.|$|E
5|$|The Red River had {{a history}} of {{seasonal}} flooding, aggravated by the broad ancient lake bed that formed the Red River Valley. The 1997 Red River Flood caused extensive damage in the city. Fargo was upstream from the bulk of the flood waters that season, and Winnipeg had built an extensive system of flood <b>control</b> <b>structures</b> in the 1960s. In 1997 Grand Forks suffered the most damage of any major city in the Red River Valley. During the height of the flooding, a major fire destroyed eleven buildings in the downtown area. The government began developing a new levee system to protect the city, which was completed ten years later. It required the relocation of numerous residents as some neighborhoods were emptied for this construction.|$|E
40|$|This paper {{presents}} a hierarchical <b>control</b> <b>structure</b> for Multi terminal HVDC grids. The hierarchical <b>control</b> <b>structure</b> {{is inspired by}} the three-layer <b>control</b> <b>structure</b> of largescale AC power systems and it is divided into primary, secondary and tertiary <b>control.</b> This <b>structure</b> permits to create an easy interaction between power dispatch and the lower controllers. Moreover, a generalized voltage droop (GVD) characteristic is also proposed which facilitates control issues inside the Multi terminal HVDC grids. In the proposed <b>control</b> <b>structure,</b> the coefficients of the GVD characteristics are set based on the solution of a DC power flow algorithm, executed in the secondary control level. Postprint (published version...|$|R
5000|$|What {{may not be}} {{apparent}} is the <b>control</b> <b>structure</b> implicit in this unit. The [...] command marks {{the entrance to a}} judging block This <b>control</b> <b>structure</b> is one of TUTOR's unique features.|$|R
40|$|There are two {{theories}} on {{the determinants of}} the <b>control</b> <b>structure</b> of the firm. The first theory postulates that the <b>control</b> <b>structure</b> is determined by company-specific characteristics. The second theory emphasises the importance of institutional characteristics in shaping this structure. In this paper, we test the validity of both theories {{in the context of}} a cross-listing, which causes a change to the company's legal environment. We find that the initial <b>control</b> <b>structure,</b> risk and size determine the <b>control</b> <b>structure</b> post cross-listing and that cross-listing on better quality markets facilitates the evolution of control towards more dispersed control. To conclude, company characteristics have a greater impact than country characteristics on the company's decision to cross-list and are also better at explaining the change in the <b>control</b> <b>structure</b> post cross-listing...|$|R
25|$|Most {{programming}} languages with <b>control</b> <b>structures</b> have {{an initial}} keyword {{which indicates the}} type of control structure involved. Languages then divide {{as to whether or}} not <b>control</b> <b>structures</b> have a final keyword.|$|E
25|$|In {{contrast}} to most other major programming languages, Lisp allows implementing <b>control</b> <b>structures</b> using the language. Several <b>control</b> <b>structures</b> are implemented as Lisp macros, {{and can even}} be macro-expanded by the programmer {{who wants to know}} how they work.|$|E
25|$|P1 space: (Or control space) {{which is}} also per-process and is {{typically}} used for supervisor, executive, kernel, user stacks and other per-process <b>control</b> <b>structures</b> managed by the operating system.|$|E
40|$|A {{homogeneous}} charge {{compression ignition}} (HCCI) engine requires closed-loop control of combustion phasing for reliable operation. Variable valve actuation (VVA) {{has previously been}} shown to enable cycle-to-cycle, cylinder-individual control with high precision, but suffers from a narrow operating range. Adding variable exhaust gas recirculation (EGR) to the closed-loop <b>control</b> <b>structure</b> can extend the operating range. A mid-ranging <b>control</b> <b>structure</b> is presented here for combined VVA and EGR actuations in a multi-cylinder engine. The <b>control</b> <b>structure</b> is simple to implement and preserves the fast, cylinderindividual, and precise actuation of the VVA system while extending the operating range. Experimental results verify {{the performance of the}} <b>control</b> <b>structure...</b>|$|R
40|$|Viewgraphs on {{experiment}} and simulation for <b>control</b> <b>structure</b> interaction (CSI) are presented. Topics covered include: <b>control</b> <b>structure</b> interaction; typical control/structure interaction system; CSI problem classification; actuator/sensor models; modeling uncertainty; noise models; real-time computations; and discrete versus continuous...|$|R
40|$|The Python {{programming}} language {{does not have}} a built in switch/case <b>control</b> <b>structure</b> as found in many other high level {{programming language}}s. It is thought by some that this is a deficiency in the language, and the <b>control</b> <b>structure</b> should be added. This paper demonstrates that not only is the <b>control</b> <b>structure</b> not needed, but that the methods available in Python are more expressive than built in case statements in other high level languages...|$|R
25|$|In {{structured}} programming, the ordered {{sequencing of}} successive commands {{is considered one}} of the basic <b>control</b> <b>structures,</b> which is used as a building block for programs alongside iteration, recursion and choice.|$|E
25|$|Manatees {{can also}} be crushed in water <b>control</b> <b>structures</b> (navigation locks, floodgates, etc.), drown in pipes and culverts, and are {{occasionally}} killed by entanglement in fishing gear, primarily crab pot float lines.|$|E
25|$|In 1969, {{a severe}} flood on the Souris River devastated the city. Afterward, the Army Corps of Engineers {{straightened}} {{the path of}} the river through the city and built several flood <b>control</b> <b>structures.</b>|$|E
50|$|The {{language}} allows ordinary recursive data types, such {{as might}} be found in ML, which are required to be finite, and corecursive data types, which are allowed to be potentially infinite. The <b>control</b> <b>structure</b> for operating on recursive data types is primitive recursion or paramorphism, and the <b>control</b> <b>structure</b> for corecursive data types is primitive co-recursion or apomorphism. Neither <b>control</b> <b>structure</b> can operate over the other kind of data, so all paramorphisms terminate and all apomorphisms are productive.|$|R
40|$|There {{has been}} {{significant}} interest in understanding how {{the distribution of}} parental control over international joint ventures (IJV) influences IJV outcomes (e. g., parent conflict, survival, performance). Yet, the accumulation {{of research on the}} relationship between <b>control</b> <b>structure</b> and IJV outcomes has been somewhat inconclusive and even contradictory. We contribute to this research stream by developing an organizational justice-based contingency model relating parental <b>control</b> <b>structure</b> to parent conflict. We suggest that the level of conflict between IJV parents will depend on the consistencies between the <b>control</b> <b>structure</b> and parents’ contribution of proprietary resources, and between <b>control</b> <b>structure</b> and the parents’ abilities to effectively monitor operations. Our analysis of Vietnamese joint ventures provides some support for our model, and suggests that the relationship between parent <b>control</b> <b>structure</b> and IJV outcomes is perhaps more complex than previously thought. Journal of International Business Studies (2005) 36, 156 – 174. doi: 10. 1057 /palgrave. jibs. 8400121...|$|R
5000|$|The Schooner Bayou <b>Control</b> <b>Structure</b> is a flood <b>control</b> <b>structure</b> {{located in}} Vermilion Parish, Louisiana, and {{operated}} by the U.S. Army Corps of Engineers. It {{is part of the}} Mississippi Valley Division, New Orleans District, which encompasses the southern half of the state of Louisiana.|$|R
25|$|In 1976, the Churchill River {{diversion}} {{project was}} set into operation. Flow was diverted {{by a series}} of channels and <b>control</b> <b>structures</b> into the Nelson River. Instead of developing hydroelectric sites along the Churchill River, water was diverted by <b>control</b> <b>structures</b> and an artificial channel into the Nelson, thereby increasing flow and saving cost of development. The effects of this diversion on pre-existing water levels and the indigenous Cree and Métis people continue to be felt to this day. Negotiations between the affected Northern communities and Manitoba Hydro continue, to discuss mitigation measures and compensation for loss of traditional resource areas and sites.|$|E
25|$|A {{high-level}} assembler is {{a program}} that provides language abstractions more often associated with high-level languages, such as advanced <b>control</b> <b>structures</b> (IF/THEN/ELSE, DO CASE, etc.) and high-level abstract data types, including structures/records, unions, classes, and sets.|$|E
25|$|One {{can also}} return {{out of a}} {{subroutine}} executing the looped statements, breaking out of both the nested loop and the subroutine. There are other proposed <b>control</b> <b>structures</b> for multiple breaks, but these are generally implemented as exceptions instead.|$|E
40|$|In a {{multicasting}} application it {{is often}} desirable for a source to get information {{on the status of}} receivers. We call this operation a collect. In large scale groups it is not feasible to have individual messages flowing from each receivers to the source. We present a collect using a hierarchical <b>control</b> <b>structure</b> which progressively aggregates data from subsets of receivers to the source. The hierarchical <b>control</b> <b>structure</b> is based on a <b>control</b> <b>structure</b> that is also used for implementing reliable multicast. In this paper we propose such a collect mechanism, called CAGE. We describe several types of collects (standard, scheduled, asynchronous) depending mainly on when aggregation of data starts. We then show how the collect propagates intermediate results into the <b>control</b> <b>structure...</b>|$|R
5000|$|All early {{presentations of}} the <b>control</b> <b>structure</b> of a TUTOR judging block were confusing. In modern terms, however, a judging block can be {{described}} as an iterative <b>control</b> <b>structure</b> that exits when the student input is judged correct. The bodyof this <b>control</b> <b>structure</b> consists of a series of cases, each introduced by a pattern matching command such as [...] or [...] All output produced by the body of the judging loop in theprevious cycle is erased from the screen prior to the next cycle.|$|R
5000|$|In {{programming}} languages, the short-circuit and <b>control</b> <b>structure.</b>|$|R
25|$|Many of the {{existing}} software measures count structural elements of the application that result from parsing the source code for such individual instructions (Park, 1992), tokens (Halstead, 1977), <b>control</b> <b>structures</b> (McCabe, 1976), and objects (Chidamber & Kemerer, 1994).|$|E
25|$|Some Lisp <b>control</b> <b>structures</b> {{are special}} operators, {{equivalent}} to other languages' syntactic keywords. Expressions using these operators {{have the same}} surface appearance as function calls, but differ in that the arguments are not necessarily evaluated—or, {{in the case of}} an iteration expression, may be evaluated more than once.|$|E
25|$|In {{sequential}} code it {{is possible}} to control the flow of the program using if-then-else statements and various forms of loops. Such flow <b>control</b> <b>structures</b> have only recently been added to GPUs. Conditional writes could be performed using a properly crafted series of arithmetic/bit operations, but looping and conditional branching were not possible.|$|E
5000|$|Spanish Fork River Flow <b>Control</b> <b>Structure</b> (already constructed) ...|$|R
5000|$|... #Subtitle level 2: Organisational, Command and <b>Control</b> <b>structure</b> ...|$|R
50|$|In such {{a simple}} system, the {{ordering}} of the production rules is crucial. Often, the lack of <b>control</b> <b>structure</b> makes production systems difficult to design. It is, of course, possible to add <b>control</b> <b>structure</b> to the production systems model, namely in the inference engine, or in the working memory.|$|R
25|$|Below Devil's Gate Dam, {{most of the}} Arroyo Seco creek, {{with two}} short exceptions, is {{contained}} in a concrete channel that contains stormwater and municipal runoff. This channel and other similar flood <b>control</b> <b>structures</b> throughout the Los Angeles Basin and along {{the foothills of the}} San Gabriel Mountains were built following the devastating Los Angeles Flood of 1938.|$|E
25|$|In 1976, the Churchill River {{diversion}} {{project was}} set into operation. Flow was diverted {{by a series}} of channels and <b>control</b> <b>structures</b> into the Nelson River. The effects of this diversion on pre-existing water levels and the indigenous Cree and Métis people continue to be felt to this day. Negotiations between the affected Northern communities and Manitoba Hydro continue, to discuss mitigation measures and compensation for loss of traditional resource areas and sites.|$|E
25|$|Excessive {{stream bank}} erosion may cause {{flooding}} and property damage. For many years governments have often responded to urban stream erosion problems by modifying the streams through construction of hardened embankments and similar <b>control</b> <b>structures</b> using concrete and masonry materials. Use of these hard materials destroys habitat for {{fish and other}} animals. Such a project may stabilize the immediate area where flood damage occurred, but often it simply shifts the problem to an upstream or downstream segment of the stream. See River engineering.|$|E
40|$|The paper {{describes}} {{a simple and}} uniform mechanism for dynamic data directed control of the activation and suspension of interacting processes. Although this <b>control</b> <b>structure</b> was conceived to meet the design objectives of an assertative language, and is introduced in the paper from this viewpoint, the <b>control</b> <b>structure</b> is particularly appropriate to the operating {{system in which the}} language is embedded. The paper is written in the expectation that principles of this kind of <b>control</b> <b>structure</b> should be applicable to the design of operating systems in other environments. (Received October 1971) 1...|$|R
40|$|Screening {{tools for}} <b>control</b> <b>structure</b> {{selection}} {{in the presence}} of model/plant mismatch are developed {{in the context of the}} Structured Singular Value (μ) theory. The developed screening tools are designed to aid engineers in the elimination of undesirable <b>control</b> <b>structure</b> candidates for which a robustly performing controller does not exist. Through application on a multicomponent distillation column, it is demonstrated that the developed screening tools can be effective in choosing an appropriate <b>control</b> <b>structure</b> while previously existing methods such as the Condition Number Criterion can lead to erroneous results...|$|R
40|$|Stroke is {{a leading}} cause of adult {{disability}} with upper-limb hemiparesis being one of the most frequent consequences. Given that stroke only affects the paretic arm’s <b>control</b> <b>structure</b> (the set of synergies and activation vectors needed to perform a movement), we propose that the <b>control</b> <b>structure</b> of the non-affected arm can serve as a physiological reference to rehabilitate the paretic arm. However, it is unclear how rehabilitation can effectively tune the <b>control</b> <b>structure</b> of a patient. The use of Visual Feedback (VF) is recommended to boost stroke rehabilitation, as it is able to positively modify neural mechanisms and improve motor performance. Thus, in this study we investigate whether VF can effectively modify the <b>control</b> <b>structure</b> of the upper-limb. We asked six neurologically intact subjects to perform a complete upper-limb rehabilitation routine comprised of 12 movements in absence and presence of VF. Our results indicate that VF significantly increases inter-limb similarity both in terms of synergies and activation coefficients. However, the magnitude of improvement depended upon each subject. In general, VF brings the <b>control</b> <b>structure</b> of the nondominant side closer to the <b>control</b> <b>structure</b> of dominant side, suggesting that VF modifies the <b>control</b> <b>structure</b> towards more optimized motor patterns. This is especially interesting because stroke mainly affects the activation coefficients of patients and because {{it has been shown that}} the control of the affected side resembles that of the nondominant side. In conclusion, VF may enhance motor performance by effectively tuning the control-structure. Notably, this finding offers new insights to design improved stroke rehabilitation. Peer ReviewedPostprint (author's final draft...|$|R
