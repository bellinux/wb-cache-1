20|113|Public
500|$|The Trash (or [...] "Wastebasket" [...] in the British version) empties {{when the}} Finder terminates. If MultiFinder is not running, this occurs {{as soon as}} an {{application}} launches. Icons on the desktop in System 6 are not organized into a single folder, as in later operating systems. Instead, the system records whether each file is on the desktop or not. This is inefficient and confusing, as the user cannot browse to the desktop in applications besides the Finder, even within the standard Open and Save As dialog boxes. Furthermore, these dialogs are primitive, mostly unchanged since 1984. The lack of aliases, shortcuts to files, was another limitation of file management on System 6. <b>Custom</b> <b>file</b> and folder icons are also not supported. These problems were all remedied in System 7.|$|E
5000|$|A plug-in {{mechanism}} for developers to implement <b>custom</b> <b>file</b> system operations {{by use of}} callbacks.|$|E
50|$|Although a {{relational}} database provides a common persistence layer in software applications, numerous other persistence layers exist. CRUD functionality {{can be implemented}} with an object database, an XML database, flat text files, <b>custom</b> <b>file</b> formats, tape, or card, for example.|$|E
50|$|The mouse {{pointers}} can {{be changed}} with <b>custom</b> cursor <b>files,</b> or restored to default cursors. Animated cursors can be used, also.|$|R
5000|$|Imanet's core {{products}} {{are in the}} areas of customs brokerage and freight forwarding. Founded in 1989 by Cedomir Bekic, Imanet focuses on developing a highly automated and unified platform tying together customs brokerage, freight forwarding and accounting into one efficient database. They also have developed their own document management system which use linux based servers at client sites to provide FAX-to-SCP on the back end with a [...]NET based web gui on the front end for <b>customs</b> <b>filing,</b> entry automation and text manipulation.|$|R
50|$|VSXu {{implements}} a <b>custom,</b> minimalistic <b>file</b> format with LZMA {{compression and}} can compile visuals with 3d meshes and textures (JPEG or PNG) {{in the same}} file.|$|R
50|$|OpenTaal {{provides}} {{files for}} spelling check {{which are being}} used in software such as OpenOffice.org, Firefox, Thunderbird, Safari, Opera, TinyMCE and more. Some of this software receives custom files from OpenTaal while other software uses the generic spelling checker Hunspell. This is using its own <b>custom</b> <b>file</b> from OpenTaal. Even the Dutch Wiktionary uses this list of correctly spelled words.|$|E
50|$|Urchin {{software}} can be run {{in two different}} data collection modes: log file analyzer or hybrid. As a log file analyzer, Urchin processes web server log files {{in a variety of}} log file formats. <b>Custom</b> <b>file</b> formats can also be defined. As a hybrid, Urchin combines page tags with log file data to eradicate the limitations of each data collection method in isolation. The result is more accurate web visitor data.|$|E
5000|$|ZipGenius {{supports}} OpenOffice.org/StarOffice documents. OpenOffice.org applications {{produce their}} own files in a special format: they are [...]ZIP archives with a <b>custom</b> <b>file</b> extension containing some XML files, which OpenOffice.org programs merge to rebuild the original documents. ZipGenius complies with this feature, and allows users to manage those files {{as if they were}} common ZIP files. In addition, users can optimize them: OpenOffice.org does not use the maximum compression level available for [...]ZIP format, but ZipGenius does. When users optimize an OpenOffice.org document with ZipGenius, the gain is from 5 to 10 KB of size reduction (depending by the content of the OpenOffice.org file) because ZipGenius will recompress the document with the [...] "Brutal" [...] compression level.|$|E
50|$|A {{wallpaper}} or background (also {{known as}} a desktop wallpaper, desktop background, desktop picture or desktop image on computers) is a digital image (photo, drawing etc.) used as a decorative background of a graphical user interface on the screen of a computer, mobile communications device or other electronic device. On a computer it is usually for the desktop, while on a mobile phone {{it is usually the}} background for the 'home' or 'idle' screen. Though most devices come with a default picture, users can usually change it to <b>custom</b> <b>files</b> of their choosing.|$|R
5000|$|MS-CTDOC: Word <b>Custom</b> Toolbar Binary <b>File</b> Format Structure Specification ...|$|R
5000|$|MS-CTXLS: Excel <b>Custom</b> Toolbar Binary <b>File</b> Format Structure Specification ...|$|R
5000|$|At {{least one}} {{significant}} compression software program, bzip2, deliberately discontinued {{the use of}} arithmetic coding in favor of Huffman coding due to the perceived patent situation at the time. Also, encoders and decoders of the JPEG file format, which has options for both Huffman encoding and arithmetic coding, typically only support the Huffman encoding option, which was originally because of patent concerns; {{the result is that}} nearly all JPEG images in use today use Huffman encoding although JPEG's arithmetic coding patents have expired due to the age of the JPEG standard (the design of which was approximately completed by 1990). There are some archivers like PackJPG, that can losslessly convert Huffman encoded files to ones with arithmetic coding (with <b>custom</b> <b>file</b> name [...]pjg), showing up to 25% size saving.|$|E
5000|$|The Trash (or [...] "Wastebasket" [...] in the British version) empties {{when the}} Finder terminates. If MultiFinder is not running, this occurs {{as soon as}} an {{application}} launches. Icons on the desktop in System 6 are not organized into a single folder, as in later operating systems. Instead, the system records whether each file is on the desktop or not. This is inefficient and confusing, as the user cannot browse to the desktop in applications besides the Finder, even within the standard Open and Save As dialog boxes. Furthermore, these dialogs are primitive, mostly unchanged since 1984. The lack of aliases, shortcuts to files, was another limitation of file management on System 6. <b>Custom</b> <b>file</b> and folder icons are also not supported. These problems were all remedied in System 7.|$|E
50|$|Some unique {{features}} are the Catalog, (which is a user created panel of links to files, folders, URLs, shortcuts, and similar entries), Scripting (which allows user to create stored sets of commands, {{similar to a}} macro), Mini Tree (a custom subset of the tree) and UDC (User Defined Commands, to create a limited set of customized commands). Other features includes advanced batch renaming capabilities, <b>custom</b> <b>file</b> copiers (supports file verifications, pause and resume, and course of action on file collisions), highly customizable color-coding for files (aka Color Filters. Allows color-coding of files based on one or more combinations of file types, dates, age, and size), and highly customizable visual filters allowing only certain files and folders to be displayed depending on the filter criteria. Also available is flat file viewing that allows parent folders {{to be seen in}} the same window.|$|E
5000|$|Currently {{does not}} support more than a 2-second pre-gap in the first track under its CD burning utilities. Using a {{combination}} of Roxio's Toast and a <b>custom</b> [...]cue <b>file</b> can provide a way around this.|$|R
5000|$|All {{analysis}} {{results are presented}} in a web report, which contains Excel annotation and enrichment sheets, PowerPoint slides, and <b>custom</b> analysis <b>files</b> (e.g., [...]cys file by Cytoscape, [...]svg by Circos) for further offline analysis or processing.|$|R
50|$|The setup {{files are}} {{delivered}} using a <b>custom</b> peer-to-peer <b>file</b> sharing client. Every player is {{participating in the}} distribution of the setup files for all new players. This decreases the distribution costs dramatically while simultaneously increasing bandwidth.|$|R
40|$|The {{possibility}} to handle <b>custom</b> <b>file</b> formats {{is a substantial}} feature in any modern text mining infrastructure. tm has been designed aware of this aspect from the beginning on, and has modular components which allow extensions. A general explanation of tm’s extension mechanism is described by Feinerer et al. (2008, Sec. 3. 3) ...|$|E
40|$|Partially {{connected}} {{operation is}} the circumstance {{in which the}} communication link between two computers is intermittent, either by choice or because or failure. This paper describes the design and performance of a user level toolkit that is suited to accessing the home directory of a partially connected user in a bandwidth-efficient manner. Compared to <b>custom</b> <b>file</b> systems for partially connected operation, the toolkit is easier to deploy and provides extra degrees of flexibility because it runs at user level and uses the local file system for its cache. The toolkit {{makes it possible for}} unaltered clients to access NFS file systems exported by unaltered servers. The maintenance of consistency between client and server is automatic provided that certain assumptions are upheld, the primary one being that sharing is limited {{in such a way that}} there is a "single locus of update. " That is, for extended periods, updates are applied either to the client's cache or directly to the server, but [...] ...|$|E
30|$|In {{our earlier}} work [6] we present and define recontextualization, an {{emerging}} technology to allow contextual data inside running VMs to be updated during runtime. This work extends on earlier work on recontextualization and contextualization [3] and presents a novel layered based approach to contextualization. In this approach, multiple independent sets of contextual data are merged into a unified structure realized by a <b>custom</b> <b>file</b> system whose data sets can be dynamically added or removed during runtime. This paper presents the requirements, design, {{and evaluation of}} a system that support this multi-layered approach to contextualization, which is the first contextualization solution to natively support recontextualization. It is worth noting that the research presented in this paper uses a scientific methodology based on functional prototyping and system performance analysis. We do not use mathematical modelling. Additionally and for clarity’s sake, the results of this research aims to facilitate and enhance current cloud provider interoperability beyond {{the state of the art}} but we do not claim to solve all problems of VM or IaaS interoperability.|$|E
50|$|Dictionary Definition Language (DDL) is a STAR-based file format, {{which allows}} user {{communities}} {{to define their}} own <b>custom</b> STAR-based <b>file</b> format for the data they need to exchange.DDL plays a similar role for STAR as XSD does for XML.|$|R
50|$|The MTL format, {{although}} still widely used, is outdated {{and does not}} fully support later technologies such as specular maps and parallax maps. However, due to the open and intuitive nature of the format, these can easily be added with a <b>custom</b> MTL <b>file</b> generator.|$|R
50|$|The George Hall Corporation, a {{shipping}} company, owned the Parish Store from 1880 to 1936. Likely due to needs for additional space, in 1928, the U.S. Customs Service moved back into leased {{space in the}} Parish Store. In 1936, the Hall Corporation sold the building to the U.S. government for $65,000. The building was renamed the U.S. Custom House. Over the years, the building was used for customs offices, patrol assembly, radio, record, and <b>customs</b> <b>files</b> rooms, a dormitory for immigration officers, and detention facilities. The U.S. Army, Air Force, and Marines also maintained offices here. Listed in the National Register in 1974, the building was renamed {{in honor of the}} late Robert C. McEwen, a U.S. Congressman, in 1982.|$|R
40|$|Interpolating the {{orientation}} of the maximum horizontal compressive stress with a well-established procedure is fundamental in understanding the present-day stress field. This paper documents the design principles, strategies and architecture of SHINE ([URL] a web-based application for determining the maximum horizontal compressive stress orientation. The interpolation using SHINE can be carried out from a global database or from a <b>custom</b> <b>file</b> uploaded by the user. SHINE satisfies the usability requirements by striving for effectiveness, efficiency and satisfaction as defined by the International Organization for Standardization (ISO) covering ergonomics of human-computer interactions. Our main goal was to build a web-based application with a strong “outside-in” strategy {{in order to make the}} interpolation technique available to a wide range of Earth Science disciplines. SHINE is an easy-to-use web application with a straightforward interface guaranteeing quick visualization of the results, which are downloadable in several formats. SHINE is offered as an easy and convenient web service encouraging global data sharing and scientific research collaboration. Within this paper, we present a possible use of SHINE, determining fault kinematics compatibility with respect to the present-day stress field...|$|E
40|$|Routine {{computer}} {{tasks are}} often difficult for older adult computer users {{to learn and}} remember. People tend to learn new tasks by relating new concepts to existing knowledge. However, even for 'basic' computer tasks there is little, if any, existing knowledge on which older adults can base their learning. This paper investigates a <b>custom</b> <b>file</b> management interface {{that was designed to}} aid discovery and learnability by providing interface objects that are familiar to the user. A study was conducted which examined the differences between older and younger computer users when undertaking routine file management tasks using the standard Windows desktop as compared with the custom interface. Results showed that older adult computer users requested help more than ten times as often as younger users when using a standard windows/mouse configuration, made more mistakes and also required significantly more confirmations than younger users. The custom interface showed improvements over standard Windows/mouse, with fewer confirmations and less help being required. Hence, there is potential for an interface that closely mimics the real world to improve computer accessibility for older adults, aiding self-discovery and learnability...|$|E
40|$|The science {{investigation}} teams (SITs) for the WFIRST coronagraphic instrument have begun studying {{the capabilities of}} the instrument to directly image reflected light off from exoplanets at contrasts down to contrasts of ~ 10 ^- 9 with respect to the stellar flux. Detection of point sources at these high contrasts requires yield estimates and detailed modeling of the image of the planetary system as it propagates through the telescope optics. While the SITs might generate custom astrophysical scenes, the integrated model, propagated through the internal speckle field, is typically done at JPL. In this white paper, we present a standard file format to ensure a single distribution system between those who produce the raw astrophysical scenes, and JPL modelers who incorporate those scenes into their optical modeling. At its core, our <b>custom</b> <b>file</b> format uses FITS files, and incorporates standards on packaging astrophysical scenes. This includes spectral and astrometric information for planetary and stellar point sources, zodiacal light and extragalactic sources that may appear as contaminants. Adhering to such a uniform data distribution format is necessary, as it ensures seamless work flow between the SITs and modelers at JPL for the goals of understanding limits of the WFIRST coronagraphic instrument. Comment: 8 pages, white pape...|$|E
50|$|The single buck event {{utilizes}} {{a two-man}} crosscut saw operated by one individual, and is almost universally {{run as a}} singles event. The saw is typically of the same grade as the crosscut saw used in the two man event, but may be <b>custom</b> <b>filed</b> for one person operation. The competitor is required to make a single cut or cookie through one large log. These logs are typically the largest diameter wood present at the competition. A competitor is allowed a starting cut, usually measured {{to be no more}} than 6-8 inches, or the width of a US One Dollar bill. A teammate is allowed to straddle the log and place a wedge to ease the competitor's progress and prevent binding of the saw.|$|R
30|$|The Random Forest {{was trained}} on sample data {{collected}} with the device using Scikit-learn [6] with Python 3.2. Converting the Forest into a <b>custom,</b> portable <b>file</b> format allows a consumer handheld tablet to predict outcomes with the CPU {{to be the}} only limiting factor in prediction speed.|$|R
40|$|Description Analyzes {{shooting}} {{data with}} respect to group shape,precision, and accuracy. This in-cludes graphical methods,descriptive statistics, and inference tests using standard,but also non-parametric and robust statistical methods. Works with files exported by OnTarget PC and OnTarget TDS or with <b>custom</b> data <b>files</b> in text format with a similar structure...|$|R
40|$|Introduction: Oncology {{patients}} need extensive follow-up and meticulous documentation. The aim of {{this study}} was to introduce a simple, platform independent file based system for documentation of diagnostic and therapeutic procedures in oncology patients and test its function. Material and methods: A file-name based system of the type M 1 M 2 M 3. F 2 was introduced, where M 1 is a unique identifier for the patient, M 2 is the date of the clinical intervention/event, M 3 is an identifier for the author of the medical record and F 2 is the specific software generated file-name extension. Results: This system is in use at 5 institutions, where a total of 11 persons on 14 different workstations inputted 16591 entries (files) for 2370. The merge process was tested on 2 operating systems - when copied together all files sort up as expected by patient, and for each patient in a chronological order, providing a digital cumulative patient record, which contains heterogeneous file formats. Conclusion: The file based approach for storing heterogeneous digital patient related information is an reliable system, which can handle open-source, proprietary, general and <b>custom</b> <b>file</b> formats and seems to be easily scalable. Further development of software for automatic checks of the integrity and searching and indexing of the files is expected to produce a more user-friendly environmen...|$|E
40|$|An {{infrastructure}} for earth science data is emerging {{across the globe}} based on common data models and web services. As we evolve from <b>custom</b> <b>file</b> formats and web sites to standards-based web services and tools, data is becoming easier to distribute, find and retrieve, leaving more time for science. We describe recent advances that {{make it easier for}} ocean model providers to share their data, and for users to search, access, analyze and visualize ocean data using MATLAB® and Python®. These include a technique for modelers to create aggregated, Climate and Forecast (CF) metadata convention datasets from collections of non-standard Network Common Data Form (NetCDF) output files, the capability to remotely access data from CF- 1. 6 -compliant NetCDF files using the Open Geospatial Consortium (OGC) Sensor Observation Service (SOS), a metadata standard for unstructured grid model output (UGRID), and tools that utilize both CF and UGRID standards to allow interoperable data search, browse and access. We use examples from the U. S. Integrated Ocean Observing System (IOOS®) Coastal and Ocean Modeling Testbed, a project in which modelers using both structured and unstructured grid model output needed to share their results, to compare their results with other models, and to compare models with observed data. The same techniques used here for ocean modeling output can be applied to atmospheric and climate model output, remote sensing data, digital terrain and bathymetric data...|$|E
40|$|Current {{smartphones}} have {{a storage}} capacity of several gigabytes. More and {{more information is}} stored on mobile devices. To {{meet the challenge of}} information organization, we turn to desktop search. Users often possess multiple devices, and synchronize (subsets of) information between them. This makes file synchronization more important. This thesis presents Dessy, a desktop search and synchronization framework for mobile devices. Dessy uses desktop search techniques, such as indexing, query and index term stemming, and search relevance ranking. Dessy finds files by their content, metadata, and context information. For example, PDF files may be found by their author, subject, title, or text. EXIF data of JPEG files may be used in finding them. User–defined tags can be added to files to organize and retrieve them later. Retrieved files are ranked according to their relevance to the search query. The Dessy prototype uses the BM 25 ranking function, used widely in information retrieval. Dessy provides an interface for locating files for both users and applications. Dessy is closely integrated with the Syxaw file synchronizer, which provides efficient file and metadata synchronization, optimizing network usage. Dessy supports synchronization of search results, individual files, and directory trees. It allows finding and synchronizing files that reside on remote computers, or the Internet. Dessy is designed {{to solve the problem of}} efficient mobile desktop search and synchronization, also supporting remote and Internet search. Remote searches may be carried out offline using a downloaded index, or while connected to the remote machine on a weak network. To secure user data, transmissions between the Dessy client and server are encrypted using symmetric encryption. Symmetric encryption keys are exchanged with RSA key exchange. Dessy emphasizes extensibility. Also the cryptography can be extended. Users may tag their files with context tags and control <b>custom</b> <b>file</b> metadata. Adding new indexed file types, metadata fields, ranking methods, and index types is easy. Finding files is done with virtual directories, which are views into the user's files, browseable by regular file managers. On mobile devices, the Dessy GUI provides easy access to the search and synchronization system. This thesis includes results of Dessy synchronization and search experiments, including power usage measurements. Finally, Dessy has been designed with mobility and device constraints in mind. It requires only MIDP 2. 0 Mobile Java with FileConnection support, and Java 1. 5 on desktop machines...|$|E
50|$|This {{version of}} Karoshi Client is more {{integrated}} with the server distribution than the previous client releases, {{with most of the}} <b>custom</b> configuration <b>files</b> pulled down from a primary domain controller on boot up. A server patch that added in the correct files for the client was released on 23 July 2012.|$|R
30|$|Target {{cells were}} enriched using {{magnetic}} microbeads and an autoMACS® Pro Separator (Miltenyi Biotec). Flow cytometric analysis for purity was performed {{before and after}} magnetic cell sorting. Total RNA was hybridized on HGU 133 Plus 2.0 expression microarrays (Affymetrix, USA). CEL files signal intensity values were condensed using RMA and a <b>custom</b> CDF <b>file</b> (EntrezGene-based).|$|R
40|$|Description Analyzes {{shooting}} {{data with}} respect to group shape, precision, and accuracy. This includes graphical methods, descriptive statistics, and inference tests using standard, but also non-parametric and robust statistical methods. Implements distributions for radial error in bivariate normal variables. Works with files exported by OnTarget PC/TDS or Taran, {{as well as with}} <b>custom</b> data <b>files</b> in text format...|$|R
