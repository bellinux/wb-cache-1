4|4|Public
50|$|The first payload {{is always}} the Common Header (HDR). This {{identifies}} the version of the MIKEY protocol, the method used (data type), whether a response is required and it identifies the <b>cryptographic</b> <b>session</b> that will be established via the exchange.|$|E
40|$|Abstract—Test access {{mechanisms}} are critical components in digital systems. They affect not only production and operational economics, but also system security. We propose a security enhancement for system-on-chip (SoC) test access {{that addresses the}} threat posed by untrustworthy cores. The scheme maintains the economy of shared wiring (bus or daisy-chain) while achieving most of the security benefits of star-topology test access wiring. Using the proposed scheme, the tester is able to establish distinct <b>cryptographic</b> <b>session</b> keys with each of the cores, significantly reducing the exposure in cases where {{one or more of the}} cores contains malicious or otherwise untrustworthy logic. The proposed scheme is out of the functional path and does not affect functional timing or power consumption. I...|$|E
40|$|We {{present an}} {{application}} of partial evaluation to performance models expressed in the PEPA stochastic process algebra [1]. We partially evaluate the state-space of a PEPA model in order to remove uses of the cooperation and hiding operators and compile an arbitrary sub-model into a single sequential component. This transformation is applied to PEPA models which {{are not in the}} correct form for the application of the fluid-flow analysis for PEPA [2]. The result of the transformation is a PEPA model which is amenable to fluid-flow analysis but which is strongly equivalent [1] to the input PEPA model and so, by {{an application of}} Hillston’s theorem, performance results computed from one model are valid for the other. We apply the method to a Markovian model of a key distribution centre used to facilitate secure distribution of <b>cryptographic</b> <b>session</b> keys between remote principals communicating over an insecure network...|$|E
50|$|Like all <b>cryptographic</b> keys, <b>session</b> keys must {{be chosen}} {{so that they}} cannot be {{predicted}} by an attacker, usually requiring them to be chosen randomly. Failure to choose session keys (or any key) properly is a major (and too common in actual practice) design flaw in any crypto system.|$|R
40|$|Wireless sensor {{networks}} {{consist of}} many inexpensive wireless nodes, each having sensing capability with some computational and communication power. Asymmetric cryptographic algorithms are {{not suitable for}} providing security on wireless sensor networks due to limited computation, power, and storage resources available on sensor nodes. Therefore, the energy-efficient security protocol proposed in this paper uses symmetric cryptographic algorithms to support security. To mitigate the drawbacks of symmetric <b>cryptographic</b> algorithms, the <b>session</b> key is changed dynamically, in addition to employing code-hopping technique in non-blocking OVSF codes...|$|R
40|$|We {{present the}} design and {{implementation}} of a compiler that, given high-level multiparty session de-scriptions, generates custom <b>cryptographic</b> protocols. Our <b>sessions</b> specify pre-arranged patterns of mes-sage exchanges and data accesses between distributed participants. They provide each participant with strong security guarantees for all their messages. Our compiler generates code for sending and receiv-ing these messages, with cryptographic operations and checks, in order to enforce these guarantees against any adversary that may control both the network and some session participants. We verify that the generated code is secure by relying on a recent type system for cryptography. Mos...|$|R
40|$|SSH {{provides}} secure login, file transfer, X 11, and TCP/IP connections over an untrusted network. It uses <b>cryptographic</b> authentication, automatic <b>session</b> encryption, {{and integrity}} protection for transferred data. RSA {{is used for}} key exchange and authentication, and symmetric algorithms (e. g., IDEA or threekey triple-DES) for encrypting transferred data. SSH is intended {{as a replacement for}} the existing rsh, rlogin, rcp, rdist, and telnet protocols. SSH is currently (March 1996) being used at thousands of sites in at least 50 countries. Its users include top universities, research laboratories, many major corporations, and numerous smaller companies and individuals. The SSH protocol can also be used as a generic transport layer encryption mechanism, providing both host authentication and user authentication, together with privacy and integrity protection. 1 Introduction The Internet has become the most economical means for communication between two remote sites. Its uses include comm [...] ...|$|R

