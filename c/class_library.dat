846|838|Public
5|$|Jython compiles into Java byte code, {{which can}} then be {{executed}} by every Java virtual machine implementation. This also {{enables the use of}} Java <b>class</b> <b>library</b> functions from the Python program.|$|E
25|$|Sun {{released}} the source {{code of the}} <b>Class</b> <b>library</b> under GPL on May 8, 2007, except some limited parts that were licensed by Sun from third parties {{who did not want}} their code to be released under a free software and open-source license. Some of the encumbered parts turned out to be fairly key parts of the platform such as font rendering and 2D rasterising, but these were released as open-source later by Sun (see OpenJDK <b>Class</b> <b>library).</b>|$|E
25|$|In {{addition}} to language changes, significant {{changes have been}} made to the Java <b>class</b> <b>library</b> over the years, which has grown from a few hundred classes in JDK 1.0 to over three thousand in J2SE 5.0. Entire new APIs, such as Swing and Java 2D, have evolved, and many of the original JDK 1.0 classes and methods have been deprecated.|$|E
5000|$|... 2004 - Günter Obiltschnig began POCO by {{developing}} the <b>class</b> <b>libraries</b> because of being dissatisfied {{by what was}} available in C++ <b>class</b> <b>libraries</b> for network centric programming.|$|R
5000|$|Ja.NET SE, an {{open source}} project {{providing}} a Java 5 JDK (<b>class</b> <b>libraries,</b> tools, etc.) {{that run on}} the [...]NET Framework CLR. Ja.NET SE {{is based on the}} Apache Harmony <b>Class</b> <b>Libraries.</b>|$|R
40|$|The use of {{object-oriented}} programming, and C++ in particular, {{to build}} reusable <b>class</b> <b>libraries</b> {{has proven to}} be a very successful programming technique. However, the exible composition of <b>class</b> <b>libraries</b> to create application programs has received little focus. In this paper we present a tool, that automatically maps a C++ class hierarchy to an equivalent hierarchy in an interpreted language. Using an interpreted language oers the programmer more exibility when composing applications from existing <b>class</b> <b>libraries.</b> ...|$|R
25|$|C Deck, the Shelter Deck, was {{the highest}} deck to run {{uninterrupted}} from stem to stern. It included both well decks; the aft one served {{as part of the}} Third Class promenade. Crew cabins were housed below the forecastle and Third Class public rooms were housed below the Poop Deck. In between were the majority of First Class cabins and the Second <b>Class</b> <b>library.</b>|$|E
25|$|Various {{wrappers}} {{were developed}} by Microsoft that took {{over some of the}} more low level functions of the Windows API, and allowed applications to interact with the API in a more abstract manner. Microsoft Foundation <b>Class</b> <b>Library</b> (MFC) wrapped Windows API functionality in C++ classes, and thus allows a more object-oriented way to interact with the API. The Active Template Library (ATL) is a template oriented wrapper for COM. The Windows Template Library (WTL) was developed as an extension to ATL, and intended as a smaller alternative to MFC.|$|E
25|$|C Deck, the Shelter Deck, was the {{uppermost}} deck to run uninterrupted from the ships' bow to stern. It included the two well decks, {{both of which}} served as the Third Class promenade spaces. Each well deck also contained large cranes for loading cargo into the interior holds. Crew cabins were located under the forecastle and Third Class public rooms were situated under the Poop Deck. The superstructure of C Deck between the bow and stern contained mostly First Class accommodation, but the Second <b>Class</b> <b>Library</b> was also placed further aft, directly below the Second Class Smoking Room. This was the first deck to feature portholes.|$|E
40|$|Abstract. Java is a {{computer}} programming language that is class-based, object-oriented, java is, as of 2013, {{one of the most}} popular programming languages in use. The Java Development Kit (JDK) is an implementation of java language, which consists of a Java Virtual Machine and all of the java <b>class</b> <b>libraries.</b> There are thousands of classes in the java <b>class</b> <b>libraries,</b> and there are many kinds of relationships between classes. In this paper, we use complex network theory to study the topology of the java <b>class</b> <b>libraries,</b> according to analyzing to the networks feature characters, important classes and interfaces in java <b>class</b> <b>libraries</b> are found, we hope to find the relationship between the characters of complex networks and software reliability...|$|R
40|$|The use of {{object-oriented}} programming, and C++ in particular, {{to build}} reusable <b>class</b> <b>libraries</b> {{has proven to}} be a very successful programming technique. However, the flexible composition of <b>class</b> <b>libraries</b> to create application programs has received little focus. In this paper we present a tool, that automatically maps a C++ class hierarchy to an equivalent hierarchy in an interpreted language. Using an interpreted language offers the programmer more flexibility when composing applications from existing <b>class</b> <b>libraries.</b> 1 Introduction For quite some time object-oriented design and programming have received great attention for the development of large scale applications. One of the most important features is the ability to reuse software, once it has been implemented in well structured <b>class</b> <b>libraries.</b> C++ [Elis, 1990] has established itself as one of the major programming languages in this field. Today, a wide range of <b>class</b> <b>libraries</b> is available for C++. Most of them come from a r [...] ...|$|R
50|$|With the Hungry Programmers he {{launched}} {{one of the}} early efforts in the 1990s to create an open source Java Virtual Machine called Japhar. Japhar's main contribution was the open source implementation of the <b>class</b> <b>libraries,</b> these <b>class</b> <b>libraries</b> would eventually become part of GNU Classpath.|$|R
25|$|The Windows API (Win32) {{is focused}} {{mainly on the}} {{programming}} language C in that its exposed functions and data structures are described in that language in recent versions of its documentation. However, the API may be used by any programming language compiler or assembler {{able to handle the}} (well-defined) low-level data structures along with the prescribed calling conventions for calls and callbacks. Similarly, the internal implementation of the API's function has been developed in several languages, historically. Despite the fact that C is not an object-oriented programming language, the Windows API and Windows have both historically been described as object-oriented. There have also been many wrapper classes and extensions (from Microsoft and others) for object-oriented languages that make this object-oriented structure more explicit (Microsoft Foundation <b>Class</b> <b>Library</b> (MFC), Visual Component Library (VCL), GDI+, etc.). For instance, Windows 8 provides the Windows API and the WinRT API, which is implemented in C++ and is object-oriented by design.|$|E
25|$|Since 1967, Extensions for Scientific Computation (XSC) {{have been}} {{developed}} in the University of Karlsruhe for various programming languages, such as C++, Fortran and Pascal. The first platform was a Zuse Z 23, for which a new interval data type with appropriate elementary operators was made available. There followed in 1976, Pascal-SC, a Pascal variant on a Zilog Z80 that it made possible to create fast, complicated routines for automated result verification. Then came the Fortran 77-based ACRITH-XSC for the System/370 architecture (FORTRAN-SC), which was later delivered by IBM. Starting from 1991 one could produce code for C compilers with Pascal-XSC; a year later the C++ <b>class</b> <b>library</b> supported C-XSC on many different computer systems. In 1997, all XSC variants were made available under the GNU General Public License. At the beginning of 2000 C-XSC 2.0 was released {{under the leadership of}} the working group for scientific computation at the Bergische University of Wuppertal to correspond to the improved C++ standard.|$|E
25|$|However, most First Class {{rooms were}} left intact, {{save for the}} Salon Riviera and Salon Fontainebleau. The former was {{transformed}} into the Club International (dubbed Club-I by Norway aficionados), where every element of the original décor was removed. The square columns were made round with vertical aluminium fluting, the walls were repainted in a cream with baby-blue in the ceiling and wall niches, and all the original artwork and furniture was removed. In the corner niches oversized, crystal encrusted Neptune statues were placed, and similar crystal garlanded busts sat on brackets on the forward bulkhead. Lounge seating, sofas and rattan chairs were placed amongst potted ferns, giving the room an overall Miami art-deco feel. Only the railings and bronze, star-shaped light fixtures were original to the room. The latter space was gutted and remade into Checkers Cabaret; a small show lounge with abstract chrome palm trees around the columns, red lacquered wall panels, and a black-and-white checker board dance floor, again evoking a 1920s jazz club. The First <b>Class</b> <b>Library</b> remained untouched, and still used for the same purpose, while the Salon Debussy {{was turned into a}} shop, though its bronze décor and distinctive ceiling remained intact. To either side of these rooms ran the original First Class promenade decks, which were now turned into main circulation halls along the ship's principal public deck; the starboard dubbed Fifth Avenue and the port as Champs-Élysées, complete with columnar advertising posts similar to those found in Paris.|$|E
50|$|Java {{implementations}} include compilers, runtimes, <b>class</b> <b>libraries,</b> etc.|$|R
2500|$|Unix-specific <b>class</b> <b>libraries</b> (POSIX, Filesystem in Userspace (FUSE), curses) ...|$|R
2500|$|Platform-specific <b>class</b> <b>libraries</b> (bindings for: Mac, iOS, Android, MeeGo) ...|$|R
2500|$|...NET Framework {{includes}} {{a set of}} standard class libraries. The <b>class</b> <b>library</b> is organized in a hierarchy of namespaces. Most of the built-in application programming interfaces (APIs) are part of either System.* or Microsoft.* namespaces. These class libraries implement many common functions, such as file reading and writing, graphic rendering, database interaction, and XML document manipulation. The class libraries are available for all CLI compliant languages. The <b>class</b> <b>library</b> {{is divided into two}} parts (with no clear boundary): Base <b>Class</b> <b>Library</b> (BCL) and Framework <b>Class</b> <b>Library</b> (FCL).|$|E
2500|$|Promenade deck - 1st class salon, 1st class smoking room, 1st <b>class</b> <b>library,</b> {{tourist class}} grand salon, tourist class cafeteria, tourist <b>class</b> <b>library,</b> tourist class smoking room ...|$|E
2500|$|The <b>class</b> <b>library</b> {{provides}} a comprehensive set of facilities for application development. They are primarily written in C#, {{but due to}} the Common Language Specification {{they can be used}} by any [...]NET language. The <b>class</b> <b>library</b> is structured into namespaces, and deployed in shared libraries known as assemblies. Speaking of the [...]NET framework is primarily referring to this <b>class</b> <b>library.</b>|$|E
5000|$|Unix-specific <b>class</b> <b>libraries</b> (POSIX, Filesystem in Userspace (FUSE), curses) ...|$|R
5000|$|... #Subtitle level 2: Comparison {{of support}} for {{compiled}} <b>class</b> <b>libraries</b> ...|$|R
40|$|Abstract—The large {{collection}} of Java <b>class</b> <b>libraries</b> is a main factor {{of the success}} of Java. However, these libraries assume that a garbage-collected heap is used. Safety-critical Java uses scope-based memory areas instead of a garbage-collected heap. Therefore, the Java <b>class</b> <b>libraries</b> are problematic to use in safety-critical Java. We have identified common programming patterns in the Java <b>class</b> <b>libraries</b> that make them unsuitable for safety-critical Java. We propose ways to improve the libraries to avoid the impact of the identified problematic patterns. We illustrate these changes by implementing a total of five scope-safe classes from commonly used libraries...|$|R
2500|$|...NET Framework (pronounced dot net) is a {{software}} framework developed by Microsoft that runs primarily on Microsoft Windows. It includes a large <b>class</b> <b>library</b> named Framework <b>Class</b> <b>Library</b> (FCL) and provides language interoperability (each language can use code written in other languages) across several programming languages. Programs written for [...]NET Framework execute in {{a software}} environment (in {{contrast to a}} hardware environment) named Common Language Runtime (CLR), an application virtual machine that provides services such as security, memory management, and exception handling. (As such, computer code written using [...]NET Framework is called [...] "managed code".) FCL and CLR together constitute [...]NET Framework.|$|E
2500|$|The base <b>class</b> <b>library</b> has a class called [...] {{from which}} all other {{exception}} classes are derived. An -object contains all the information about a specific exception and also the inner exceptions that were caused.|$|E
2500|$|Object Browser: The Object Browser is a {{namespace}} and <b>class</b> <b>library</b> browser for Microsoft [...]NET. It {{can be used}} {{to browse}} the namespaces (which are arranged hierarchically) in managed assemblies. The hierarchy may or may not reflect the organization in the file system.|$|E
50|$|Identify {{reusable}} components {{from existing}} code using <b>classes</b> and <b>class</b> <b>libraries.</b>|$|R
5000|$|<b>Class</b> <b>libraries</b> {{to create}} agents using {{heritage}} and redefinition of behaviors ...|$|R
5000|$|... #Caption: Interaction of <b>class</b> <b>libraries</b> and widgetsets in Lazarus and Free Pascal ...|$|R
2500|$|BCL {{includes}} a small {{subset of the}} entire <b>class</b> <b>library</b> and is the core set of classes that serve as the basic API of CLR. For [...]NET Framework most classes considered being part of BCL reside in mscorlib.dll, System.dll and System.Core.dll. BCL classes are available in [...]NET Framework {{as well as its}} alternative implementations including [...]NET Compact Framework, Microsoft Silverlight, [...]NET Core and Mono.|$|E
2500|$|FCL is a superset of BCL and {{refers to}} the entire <b>class</b> <b>library</b> that ships with [...]NET Framework. It {{includes}} an expanded set of libraries, including the Windows Forms, ASP.NET, and Windows Presentation Foundation (WPF) but also extensions to the base class libraries ADO.NET, Language Integrated Query (LINQ), Windows Communication Foundation (WCF), and Workflow Foundation (WF). FCL is much larger in scope than standard libraries for languages like C++, and comparable in scope to standard libraries of Java.|$|E
2500|$|Sun's {{goal was}} to replace the parts that remain {{proprietary}} and closed-source with alternative implementations and make the <b>class</b> <b>library</b> completely free and open source. In the meantime, a third-party project called IcedTea created a completely free and highly usable JDK by replacing encumbered code with either stubs or code from GNU Classpath. However OpenJDK has since become buildable without the encumbered parts (from OpenJDK 6 b10) and has become the default runtime environment for most Linux distributions.|$|E
2500|$|Cross {{platform}} <b>class</b> <b>libraries</b> {{for both}} Mono and [...]NET (Gtk#, MonoCecil, Mono.CSharp, Text.Templating) ...|$|R
5000|$|POCO C++ Libraries - A set of {{open source}} <b>class</b> <b>libraries</b> {{including}} Poco.Net.HTTPServer.html ...|$|R
2500|$|For C#, at [...] (A fork of QuickGraph {{with better}} {{compatibility}} with projects using Portable <b>Class</b> <b>Libraries.)</b> ...|$|R
