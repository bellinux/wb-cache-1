27|7|Public
2500|$|The command {{communications}} system (CCS) provided for digital data transmission from ground stations to the LVDC. This communications link {{was used to}} update guidance information or command certain other functions through the LVDC. Command data originated in the Mission Control Center, Houston, and was sent to remote stations for transmission to the launch vehicle. [...] Command messages were transmitted from the ground at 2101.8MHz. The received message was passed to the <b>command</b> <b>decoder</b> (location 18), where it was checked for authenticity before being passed to the LVDC. Verification of message receipt was accomplished through the IU PCM telemetry system. The CCS system used five antennas: ...|$|E
50|$|The {{radio-frequency}} {{signal that}} {{is transmitted from}} the ground is received by the command receiver and is amplified and demodulated. Amplification is necessary because the signal is very weak after traveling the long distance. Next in the command system is the <b>command</b> <b>decoder.</b> This device examines the subcarrier signal and detects the command message that it is carrying. The output for the decoder is normally non-return-to-zero data. The <b>command</b> <b>decoder</b> also provides clock information to the command logic and this tells the command logic when a bit is valid on the serial data line. The command bit stream that {{is sent to the}} command processor has a unique feature for spacecraft. Among the different types of bits sent, the first are spacecraft address bits. These carry a specific identification code for a particular spacecraft and prevent the intended command from being performed by another spacecraft. This is necessary because there are many satellites using the same frequency and modulation type.|$|E
5000|$|Don Witcraft {{wrote the}} TSS-8 scheduler, <b>command</b> <b>decoder</b> and UUO (Unimplemented User Operations) handler. John Everett wrote the disk handler, file system, TTY (teletypewriter) handler and 680-I service routine for TSS-8.Roger Pyle and John Everett wrote the PDP-8 Disk Monitor System, and John Everett adapted PAL-III to make PAL-D for DMS. Bob Bowering, author of MACRO for the PDP-6 and PDP-10, wrote an {{expanded}} version, PAL-X, for TSS-8.|$|E
40|$|The {{command and}} {{data-handling}} subsystem of the Atmosphere Explorer satellite provides the necessary controls for the instrumentation and telemetry, and also controls the satellite attitude and trajectory. The subsystem executes all command information within the spacecraft, either {{in real time}} (as received over the S-band command transmission link) or remote from the command site (as required by the orbit operations schedule). Power consumption in the spacecraft is optimized by suitable application and removal of power to various instruments; additional functions include control of magnetic torquers and of the orbit-adjust propulsion subsystem. Telemetry data from instruments and the spacecraft equipment are formatted into a single serial bit stream. Attention is given to command types, <b>command</b> formats, <b>decoder</b> operation, and <b>command</b> processing functions...|$|R
5000|$|H0m gauge {{is used to}} {{represent}} metre-gauge trains in H0 scale. It runs on [...] TT scale tracks. Modern H0m trains run on realistic-looking two-rail track, which is powered by direct current (varying the voltage applied to the rails to change the speed, and polarity to change direction), or by Digital Command Control (sending <b>commands</b> to a <b>decoder</b> in each locomotive). It is a popular scale in Europe, particularly for trains of Swiss outline.|$|R
2500|$|Most modern HO trains run on two-rail track {{powered by}} direct current (varying the voltage {{applied to the}} rails to change the speed, and {{polarity}} to change direction), or by Digital Command Control (DCC) (sending digital <b>commands</b> to a <b>decoder</b> in each locomotive to set the speed, change direction and activate sounds and lights while power comes from the track which is always energised). Some trains, most notably by Märklin of Germany, run on alternating current, supplied by a [...] "third rail" [...] consisting of small studs on each tie (sleeper) down {{the centre of the}} track.|$|R
5000|$|The command {{communications}} system (CCS) provided for digital data transmission from ground stations to the LVDC. This communications link {{was used to}} update guidance information or command certain other functions through the LVDC. Command data originated in the Mission Control Center, Houston, and was sent to remote stations for transmission to the launch vehicle. Command messages were transmitted from the ground at 2101.8 MHz. The received message was passed to the <b>command</b> <b>decoder</b> (location 18), where it was checked for authenticity before being passed to the LVDC. Verification of message receipt was accomplished through the IU PCM telemetry system. The CCS system used five antennas: ...|$|E
50|$|The {{microprocessor}} receives inputs {{from the}} <b>command</b> <b>decoder,</b> operates on these inputs {{in accordance with}} a program that is stored in ROM or RAM, and then outputs the results to the interface circuitry. Because {{there is such a}} wide variety of command types and messages, most command systems are implemented using programmable micro-processors. The type of interface circuitry needed is based on the command sent by the processor. These commands include relay, pulse, level, and data commands. Relay commands activate the coils of electromagnetic relays in the central power switching unit. Pulse commands are short pulses of voltage or current that is sent by the command logic to the appropriate subsystem. A level command is exactly like a logic pulse command except that a logic level is delivered instead of a logic pulse. Data commands transfer data words to the destination subsystem.|$|E
50|$|The Boeing-Eastman Kodak {{proposal}} was announced by NASA on 20 December 1963. The main bus of the Lunar Orbiter had the general {{shape of a}} truncated cone, 1.65 m tall and 1.5 m in diameter at the base. The spacecraft was composed of three decks supported by trusses and an arch. The equipment deck {{at the base of}} the craft held the battery, transponder, flight programmer, inertial reference unit (IRU), Canopus star tracker, <b>command</b> <b>decoder,</b> multiplex encoder, traveling wave tube amplifier (TWTA), and the photographic system. Four solar panels were mounted to extend out from this deck with a total span across of 3.72 m. Also extending out from the base of the spacecraft were a high gain antenna on a 1.32 m boom and a low-gain antenna on a 2.08 m boom. Above the equipment deck, the middle deck held the velocity control engine, propellant, oxidizer and pressurization tanks, Sun sensors, and micro-meteoroid detectors. The third deck consisted of a heat shield to protect the spacecraft from the firing of the velocity control engine. The nozzle of the engine protruded through the center of the shield. Mounted on the perimeter of the top deck were four attitude control thrusters.|$|E
40|$|This paper {{describes}} a command encoding scheme which was conceived {{to provide the}} necessary error protection for digital commands from a ground-based terminal to a manned spacecraft. The selected approach is compatible with a time-division multiplexing scheme which combines the command channel with two digital voice channels prior to transmission over the RF link. The command encoding scheme is also fully compatible with a channel encoding strategy which {{is applied to the}} multiplexed bit sequence (commands plus voice) to provide increased link efficiency. Implementation aspects of the <b>command</b> encoder and <b>decoder</b> are discussed and the system end-to-end performance improvement provided by the command encoding scheme is calculated...|$|R
40|$|International Telemetering Conference Proceedings / October 13 - 15, 1981 / Bahia Hotel, San Diego, CaliforniaFlight Termination Sub-Systems for range safety {{purposes}} {{are a part}} of all spacecraft launch vehicles. The <b>Command</b> Receiver and <b>Decoder</b> {{portion of}} this sub-system receives the rf up-link signal and initiates the flight termination action. For launch vehicles for unmanned spacecraft, the range safety up-link command signal is composed of selected IRIG audio tones, in a specified sequence, frequency modulated on an rf carrier. For the Space Shuttle launches, a more sophisticated high-alphabet modulation technique is used. This provides for a better probability against an undesired output caused by interfering signals. The Shuttle system uses a complex command modulation format composed of various audio tones frequency modulated on the standard UHF carrier. The characters in the command word are made up of two simultaneously transmitted tones selected from seven possible frequencies. These seven tones, taken two at a time, provide an alphabet of twenty-one different characters from which a command word is formed. The transmitted sequence of characters is selectable from mission to mission. Approximately 1012 possible code combinations exist for any one mission. For the Space Shuttle launches, the range safety Command Receiver-Decoders will be used on the Solid Rocket Boosters and the External Tank portions of the complex launch vehicle. The receiver section of these units is a single superheterodyne design fixed tuned to the proper rf center frequency at the time of manufacture. The decoder section utilizes a microprocessor to effect the decoding function. The decoder is “programmed” prior to flight to recognize only the code of the mission. In addition, the microprocessor is used to accomplish the audio tone demodulation using a Fast Fourier Transform (FFT) algorithm. Solid state output switches provide the decoder output voltages to the flight termination destruct mechanism...|$|R
40|$|Tez (Yüksek Lisans) [...] İstanbul Teknik Üniversitesi, Fen Bilimleri Enstitüsü, 2016 Thesis (M. Sc.) [...] İstanbul Technical University, Instıtute of Science and Technology, 2016 Gelişen CMOS teknolojisi ile kameralar giderek daha fazla günlük hayatımızın içinde yer almaya başladılar. CMOS kameralar ticari olarak hazır, kolay temin edilebilir, kullanımı kolay, ucuz ve kaliteli görüntü üretebilir hale geldiler. Bu sensörlerden daha iyi yararlanma isteği görüntü işlemenin önemini giderek arttırıyor. Giriş görüntüsünü istenilen hale getirmeye veya görüntünün içerisinden istenilen bilgileri çıkarma işlemine görüntü işleme denir. Kontrol sisteminin hızlı cevap verme gereksinimi veya işlenmiş görüntünün asıl işle beraber olma isteği gerçek zamanlı görüntü işleme ihtiyacı yaratmaktadır. Canlılar sinir ağı sayesinde gelen verileri paralel olarak işleyebilmektedir. Sinir hücreleri düşük frekansta çalışmasına rağmen paralel işleme yeteneği sayesinde yüksek işlem kabiliyetine sahiptir ve çok hızlı karar verirler. Canlıların sinir ağından esinlenilen Hücresel Yapay Sinir Ağları (HYSA) görüntü işleme fonksiyonu için oldukça uygundur ve gerçekleştirdiği görevin basit parametreler ile değiştirilebilmesi HYSA'yı bu alanda oldukça etkili kılmaktadır. HYSA yoğun işlem gücü gerektirmesi, donanımın paralel işlem kabiliyeti nedeni ile donanım çözümlerini yazılıma göre daha uygun kılmaktadır. HYSA'nın ilk olarak analog gerçeklemeleri yapılmıştır ama bunların eksiklikleri araştırmacıları sayısal donanım çözümlerine yöneltmiştir. Prototiplemeye imkan vermesi, tasarım kolaylığı ve tekrar programlanabilirliği ile FPGA'ler günümüzde sıklıkla sayısal donanım tasarımı için kullanılmaktadır. Bu çalışmada, ayrık zamanlı HYSA emülatörü olarak yeni bir Hücresel Yapay Sinir Ağı (HYSA) işlemcisi mimarisi sunulmuştur. Bu mimariye Hücresel Yapay Sinir Ağı Emülatör İşlemcisi (HYSA-Eİ) ismi verilmiştir. Uygulamaya yönelik bir işlemci ve bunun özel kodlanması hem hız ihtiyacını karşılama hem de esneklik sağlaması açısından oldukça kullanışlı bir çözüm sunmaktadır. HYSA bir işlemcinin aritmetik fonksiyonu olarak tasarlanmıştır. Bu fonksiyonu çağırabilen basit bir işlemci tasarlanmış ve gerçeklenmiştir. Komut n kere 3 x 3 'lük şablonlu HYSA fonksiyonunu girişe uygular. Komutun çıkışı farklı hafıza bölümlerinde bir sonraki komutta kullanılmak üzere kayıt edilmektedir. Giriş ve başlangıç koşulu kayıtlı DDR 2 bölümlerinden seçilebilir. Bu mimari işlemci çekirdeğini çevre ünitesi kontrolörleri ile birleştirmiştir.   Ayrıca, HYSA-Eİ Spartan 6 XC 6 SLX 45 FPGA üzerinde gerçeklenmiştir. İki adet örnek program ile test edilmiş, örnek program ve test çıktıları verilmiştir. Sistemin düşük lojik kaynak tüketmektedir. Belirli bir iterasyon sayısında HYSA çekirdeği 1600 x 900 videoyu 15 fps'ye kadar işleyebilmektedir. Performansı iterasyon sayısının artması ile azalmaktadır. Sistem 16, 6 iterasyon/s işlem hızında çalışmaktadır. We see cameras more more in {{our daily}} life thanks to the {{developments}} in CMOS technology. CMOS cameras are become ready to use, easy to buy and cheap with good picture quality. Desire to benefit more from these sensors is increasing importance of image processing. Image processing phenomena used for changing image into a desired form or extracting information from it.  Rapid response and online processing demands increase the real time image processing need. In order to match the computational power of real time image processing, very fast or parallel data processing units are required.   Living beings process data parallel with their Neural Networks. Even though neurons working at low frequencies they can process large amount of data with short period of a time thanks their parallel data processing capabilities. Since it was invented in 1993, Cellular Neural Network (CNN) has become very approved in visual processing. The connections {{in the eye and}} neighbourhood approach in CNN builds the biological background for the use of CNN. Bioinspired data processing method Cellular Neural Networks are suitable for image processing application and their function can change with few parameters. This make CNN more powerful at image processing domain. Apart from their use in sensory data processing or information processing element, it can also use in solving partial differential equations or information generation.   In the content of study, first of all cellular neural network has been researched. CNN's are two dimensional, space invariant non-linear processing arrays. The architecture of CNN consists of rectangular cell arrays with mxn dimensions. The minimal unit of the CNN is called "cell". These cells consist of dynamic part, sum block and activation function. The main advantage of CNN is that; many image processing algorithms can be implemented on the same architecture. Function of CNN determined by template which consist of two matrices and one constant.  The templates are essential element for CNN to process the information correctly. A large collection of templates is available for 2 D linear and non-linear signal processing operations.   CNN has been implemented as hardware (analog or digital) or software (computer or DSP). Parallel computation capability of hardware gives superior computation power against software. CNN's first implemented as analog arrays. These implementations are very fast and has low power consumption. However, there are certain drawbacks of analog design such as low resolution, limited cell number, high sensitivity to heat and noise, complex and expensive design. These drawbacks redirect researcher to digital design. Field Programmable Gate Arrays are programmable silicon chips which functionality determined by hardware design language (HDL). FPGA's are been used successfully at digital hardware design, because of prototyping capabilities, easy to design and reprogrammability. In this work, we propose a new Cellular Neural Network (CNN) processing core architecture for digital emulation of discrete time CNN. This architecture is called Cellular Neural Network Emulator Processor (CNN-EP). Application specific processor and its unique coding gives practical solution for speed requirements and flexibility. CNN is design and implemented as a function of arithmetic logic unit. The proposed system is capable of executing a CNN instruction. Also a simple processor which can run CNN function is designed and implemented. System stores captured input image from camera in external memory to be processed.  After processing inputs, it writes results to external memory. Also evolution of the state variables in each iteration is monitored with DVI controller in the system. The instruction operates n times 3 x 3 template operation on the input. Designed architecture is capable of using different initial conditions, input and iteration count. Result of the instructions can be stored at different memory segments to be used by next instructions. Input and initial images can be selected from the stored DDR 2 segments. In this way set of templates which can be applied in a particular order might process an information that is cannot processed with a single template operation. Data transfer mechanism between DDR memory and CNN Core is design to have maximum throughput. CNN Emulator Processors internal controller allowed multiple templates to be performed on the same or different images stored on the external memory. Hence CNN-EP execute OUT=CNN(U,X 0,Temp,n) instruction where U input image, X 0 initial image, OUT result image and Temp template addresses, n is iteration count. Several templates are stored at ROM in FPGA hence CNN Emulator Processor performs several instructions. CNN-EP has also an instruction memory to perform sequential CNN instruction.   CNN-EP architecture consist of CNN processor unit, CNN control unit and instruction decoder. FPGA also contains two ROM's inside, for store instruction and store different templates. CNN processor unit calculates CNN outputs. Instruction decoders decodes instructions arbitrarily and executes them. CNN controller control CNN arithmetic unit and responsible data synchronization between block RAMs, ROM and DDR 2 memory. The architecture has been combined the core unit with peripheral control units. These peripheral control units are DDR 2 memory controller, camera controller and DVI monitor controller. Camera controller transfers images camera to DDR 2 memory by instruction <b>decoder</b> <b>command.</b> DDR 2 memory controller uses specified ports to transfers data between FPGA and DDR 2 memory by commands from CNN controller. DVI controller takes output image and drive LCD monitor with HD+ (1600 x 900) resolution @ 60 Hz refresh rate. Furthermore, FPGA implementation also is given. CNN-EP implemented at Atlyss board which contains Spartan 6 XC 6 SLX 45 FPGA and 128 Mbyte DDR 2 SDRAM. VmodCAM has been used as camera. First of all, CNN processing core is implemented and tested with ISIM simulator. Test result which compares FPGA output with MATLAB output is given. Then this core imported into real time system. System has been tested with two different sample program and test results is given. System is designed to consume minimal logic resource. CNN Processor can process upto 1600 x 900 video @ 15 fps with certain iteration count. Debug and timing analysis of system done by chipscope software and platform cable from Xilinx. One CNN iteration including reading and writing image took 5 clock cycle. 108 MHz clock frequency used for processing unit. System performance decreases with iteration count. System exactly work at 16, 6 iteration/s speed.   Comparison with other CNN emulator architecture is given and its contribution explained. When the existing CNN emulators are considered, RTCNNP and CASTLE architectures doesn't use external memory so they lacking capability of taking different initial conditions and input on run time. Also iteration count cannot change without reconfiguration and limited by FPGA resources. Implemented system proven to be efficient at manner of system resource and data transfers rates. The experimental results, which generated by different instructions have shown the capabilities of the system. Finally, hardware performance of system has been given. Yüksek LisansM. Sc...|$|R
40|$|The {{design and}} testing of {{laboratory}} hardware (a <b>command</b> <b>decoder</b> unit) used in evaluating space shuttle instrumentation, data processing, and ground check-out operations is described. The hardware was a modification of another similar instrumentation system. A data bus coupler was designed and tested to interface the equipment to a central bus controller (computer). A serial digital data transfer mechanism was also designed. Redundant power supplies and overhead modules were provided to minimize {{the probability of a}} single component failure causing a catastrophic failure. The <b>command</b> <b>decoder</b> unit is packaged in a modular configuration to allow maximum user flexibility in configuring a system. Test procedures and special test equipment for use in testing the hardware are described. Results indicate that the unit will allow NASA to evaluate future software systems for use in space shuttles. The units were delivered to NASA and appear to be adequately performing their intended function. Engineering sketches and photographs of the <b>command</b> <b>decoder</b> unit are included...|$|E
40|$|Improved phase-shift-keyed {{detector}} {{contains an}} active filter circuit which uses an operational amplifier and resistor-capacitor network. The detector {{is used in}} the Saturn space vehicle and Apollo telescope mount command systems to translate an analog signal from the command receiver into digital information for the <b>command</b> <b>decoder...</b>|$|E
40|$|Tests {{to verify}} the as-designed {{performance}} of all circuits within the thematic mapper electronics module unit are described. Specifically, the tests involved {{the evaluation of the}} scan line corrector driver, shutter drivers function, cal lamp controller function, post amplifier function, <b>command</b> <b>decoder</b> verification unit, and the temperature and actuator controllers function...|$|E
40|$|Abstract — Command Processing Logic is command {{execution}} in spacecraft. The commands and the clock extracted from incoming signal {{are sent to}} the command processing logic. The commands are transmitted with redundancy and with encoding. Each command is transmitted four times. To detect error in commands encoding is used. The command processing logic should take care of redundancy and also should extract the correct command bit from the incoming bit stream. Ones correct command is detected the command processing logic produce an authentic pulse. With the rising edge of the authentic pulse, the commands are stored in an auxiliary register. The command processing logic also contains the logic to produce pulse commands. Command Decoding Logic the <b>command</b> <b>decoder</b> extracts the command information, the message bits and stores it in auxiliary resister which can be read using CPU. The <b>command</b> <b>decoder</b> then checks for the command bits and produce the pulse commands...|$|E
40|$|The Galileo uplink Frame Erasure {{probability}} and Undetected Frame Error probability are derived. The performance meets desired specification {{under normal}} operations. The Galileo command system will work well {{even in an}} emergency condition, where the bit error rate into the <b>command</b> <b>decoder</b> is 1. 00 X 0. 001 (although Galileo's command threshold error rate is 1. 00 X 0. 00001) ...|$|E
40|$|The Spartan {{attitude}} control system (ACS) control electronics assembly cold plate has a standard connector interface {{to the rest of}} the Spartan payload and ground equipment. The connectors carry gyro signals, optical sensor signals, the experiment interface, the gas <b>command</b> <b>decoder</b> interface, and a pneumatics interface. Different flights can employ different optical sensor complements; the ACS engineer must accordingly connect the sensor error signals to the proper pins and connectors on the ACS electronics...|$|E
40|$|For this {{document}} {{it is assumed}} that binary readout architecture will be used in the upgraded Inner Detector. In such a case the architecture of the new design is following the architecture of the ABCD 3 TA ASIC. The chip must provide all functions required for processing of signals from the 128 strips of a silicon strip detector in the ATLAS experiment, employing the binary readout architecture. The simplified block diagram of the chip is shown in Figure 1. The main functional blocks are: the front-end, input register, pipeline, derandomizing buffer, <b>command</b> <b>decoder,</b> readout logic, threshold&calibration control and the power management block, which is new compared to the ABCD 3 TA design...|$|E
40|$|The Shuttle wideband-PCM {{recorder}} accomplishes recording {{on up to}} 14 data tracks with analog or {{digital data}} inputs. FM multiplexed analog frequencies of up to 2 MHz and digital rates of 1 Mb/s are accommodated at a tape speed of 120 in/s. Recording time in analog mode varies between 4 min for 2 MHz data to 80 min for 100 kHz data. The total digital data storage is 3. 44 x 10 to the 9 th bits with recording times from 1 hour for 1 Mb/s to 19 hours for 50 Kb/s data in the serial track switching mode. A versatile <b>command</b> <b>decoder</b> and control interface are used for eight primary modes of operation...|$|E
30|$|The {{signal is}} over-sampled by 625 samples {{due to the}} default clock of 50 MHz on the FPGA, which can be lowered if power {{consumption}} is a concern. A lookup table is {{used to determine the}} symbol. A counter hi_cnt[*]is started on a high signal. Whenever a falling edge is detected, a counter lo_cnt[*]is started and the hi_cnt[*]is stopped. A rising edge indicates the end of a symbol. Furthermore, the type of symbol: TRcal, RTcal, data- 0, data- 1, invalid, and delim[*]is determined from the length of the symbol, and the high count is determined through a lookup table. The low count is only needed to determine the mode of operation. The <b>command</b> <b>decoder</b> is a state machine that is sensitive to symbols from the PIE decoder and outputs commands from the reader.|$|E
40|$|The correct {{processing}} of the Digital Command System (DCS), {{which provides a}} limited real-time means of controlling specific flight program functions, was verified. The ability of the flight program to correctly read and process DCS commands was verified. Tests made by the flight program after reading {{the contents of the}} <b>command</b> <b>decoder</b> register to establish the validity of the received data were verified through the following: DCS mode command verification, DCS data command verification, DCS data validation, and DCS error message. The operation of the following DCS commands accepted and processed by the flight program was tested: time base update, navigation update, generalized switch selector, memory dump, terminate, execute generalized maneuver, return to nominal timeline, ECS water control valve logic inhibit, execute maneuver, execute alternate sequence, targeting load, ladder magnitude limit, S-IVB/IU de-orbit, compressed data dump, and remove inhibit on the extraction maneuver...|$|E
40|$|In a small {{satellite}} {{environment where}} the total {{power budget for}} telemetry command, ranging and all satellite control functions is not to exceed 2 Watts rather focused measures {{must be taken to}} consolidate these functions. Since 1975 AMSAT has been developing the concept of the Integrated Housekeeping Unit (IHU) for this purpose. The IHU combines the traditional telemetry encoder and <b>command</b> <b>decoder</b> with a multi-tasking microcomputer so that this single module is capable of handling all spacecraft functions simultaneously. The nature of the orbit planned for the series of spacecraft for which this unit was developed results in a high radiation environment tor the IHU. Special attention was paid to this in the design. A high-level language has been developed for the IHU. Called IPS, it operates on up to eight simultaneous tasks, including telemetry and command processing, and navigational functions concerned with orbital insertion and station keeping. The development of this concept is described in this paper...|$|E
40|$|ALSEP on the 1. {{structure}} of Real-The Commands uplinked to an unar surface is examined. Assuming rand m errors {{and a bit}} error rate of the probability that- 12 an ALSEP will accept a command in emor is 7 x 10. The probability that an ALSEP will accept a good command is. 99998. The probability of one ALSEP accepting a command intended for another ALSEP is {{on the order of}} A threshold circuit inhibits power to the digital subsection of the ALSEP <b>command</b> <b>decoder</b> {{in the absence of an}} uplink signal, so that the possibility of noise being accepted as a command is very remote. Furthermore, the command as received by the ALSEP is telemetered to the ground, permitting almost instantaneous recognition of receipt of an erroneous command. Some command anomalies were noted with the Early Apollo Scientific Experiments Package (EASEP), both in prelaunch checkout and after emplacement on the lunar surface during the Apollo 11 mission. This led to some command tests being conducted at MSC on a later-mission ALSEP. The results of these tests are summarized in an appendix...|$|E
40|$|FE-I 4 {{is the new}} ATLAS pixel chip {{developed}} for use in upgraded luminosity environments, {{in the framework of}} the Insertable B-Layer (IBL) project but also for the outer pixel layers of Super-LHC. It is designed in a 130 nm CMOS process and is based on an array of 80 by 336 pixels, each 50 × 250 μm 2 for an overall size of about 19 × 20 mm 2. Each pixel consists of analog and synthesized digital sections. The analog pixel section is designed for low power consumption and compatibility to several sensor candidates. The digital architecture is based on a 4 pixel unit called region, which allows for a power-efficient, low recording inefficiency design, and provides a solution to record hits timewalk-free. A mixture of techniques is used for yield enhancement. The chip periphery contains a control block, a <b>command</b> <b>decoder</b> and global memory, powering blocks, a data reformatting unit, an asynchronous storage FIFO, an 8 b 10 b coder and a clock multiplier unit, which allows data transmission up to 160 Mb/s for the IBL...|$|E
40|$|In this paper, a novel {{portable}} hard-disk encryption/decryption {{system with}} a MEMS coded lock is presented, which can authenticate the user and provide the key for the AES encryption/decryption module. The portable hard-disk encryption/decryption system is composed of the authentication module, the USB portable hard-disk interface card, the ATA protocol <b>command</b> <b>decoder</b> module, the data encryption/decryption module, the cipher key management module, the MEMS coded lock controlling circuit module, the MEMS coded lock and the hard disk. The ATA protocol circuit, the MEMS control circuit and AES encryption/decryption circuit are designed and realized by FPGA(Field Programmable Gate Array). The MEMS coded lock with two couplers and two groups of counter-meshing-gears (CMGs) are fabricated by a LIGA-like process and precision engineering method. The whole prototype was fabricated and tested. The test {{results show that the}} user’s password could be correctly discriminated by the MEMS coded lock, and the AES encryption module could get the key from the MEMS coded lock. Moreover, the data in the hard-disk could be encrypted or decrypted, and the read-write speed of the dataflow could reach 17 MB/s in Ultra DMA mode...|$|E
40|$|We {{present the}} {{development}} of a 512 -channel module for high count rate digital X-ray imaging systems with silicon strip detectors. This module has been characterized for noise and matching performance having in mind possible future applications like dual energy mammography and angiography. To obtain good detection efficiency at the relevant energies (10 - 50 keV) the module works edge-on with strips oriented parallel to the incoming X-ray beam. We have used silicon microstrip detectors cut at 60 and 20 μm from the active area. The readout ASIC consists of 64 analog front-end channels, 2 x 64 counters, an input-output block, a <b>command</b> <b>decoder,</b> digital to analog converters and a calibration circuit. Each analog channel contains a charge sensitive amplifier, a shaper with peaking time of 160 ns, two independent discriminators and two independent 20 -bit counters. The 512 -Channel module presented in this paper is a good candidate to build imaging systems based on dual energy techniques, using silicon strip detectors in edge-on mode, as a further development of the already reported angiographic and mammographic prototypes. The much reduced inactive region of the present detectors allows for increased efficiency at the low energy end of the diagnostic range, while the increased strip length allows to use the system with good efficiency up to at least 50 keV...|$|E
40|$|International Telemetering Conference Proceedings / September 28 - 30, 1976 / Hyatt House Hotel, Los Angeles, CaliforniaA wideband-PCM {{recorder}} {{has been}} developed {{for use in the}} avionics instrumentation subsystem of the Space Shuttle Orbiter. In direct contrast with the single function Apollo and Skylab recorders, this recorder is designed to meet a variety of present and future applications. The Shuttle recorder uses the tape transport and motor drive design from the NASA-Goddard Space Flight Center (NASA-GSFC) Standard Tape Recorder. This design was directed by the NASA-GSFC with funding provided by the Low Cost Systems Office at NASA Headquarters. Recording is accomplished on up to 14 data tracks with analog or digital data inputs. FM multiplexed analog frequencies of up to 2 MHz and digital rates of 1 Mb/s are accommodated at a tape speed of 120 inches/second. Recording time in the analog mode varies between 4 minutes for 2 MHz data to 80 minutes for 100 KHz data. The total digital data storage is 3. 44 x 10 ⁹ bits with recording times from 1 hour for 1 Mb/s data to 19 hours for 50 Kb/s data in the serial track switching mode. A versatile <b>command</b> <b>decoder</b> and control interface are used for eight primary modes of operation. The recorder responds to over 7, 000 commands which are combinations of the eight modes, four tape speeds, four delay times, four run periods and track selection. The commands are formatted as 16 bit words by onboard computers or simple, single switch panel commands initiated by the astronauts. The Shuttle recorder uses a hermetically sealed transport unit, occupies approximately 2, 000 cubic inches and weighs 41 pounds. Operation through launch and re-entry vibration environments is accomplished by use of isolators which mount the transport unit to the electronics unit. Tape life is in excess of 20, 000 passes without maintenance...|$|E
40|$|A new ATLAS pixel chip FE-I 4 {{has been}} {{developed}} for use in upgraded LHC luminosity environments, including the near-term Insertable B-Layer upgrade. FE-I 4 is designed in a 130 nm CMOS technology, presenting advantages in terms of radiation tolerance and digital logic density compared to the 0. 25 μm CMOS technology used for the current ATLAS pixel IC, FE-I 3. FE-I 4 architecture {{is based on an}} array of 80 × 336 pixels, each 50 × 250 μm 2, consisting of analog and digital sections. The analog pixel section is designed for low power consumption and compatibility to several sensor candidates. It is based on a two-stage architecture with a pre-amp AC-coupled to a second stage of amplification. It features leakage current compensation circuitry, local 4 -bit pre-amp feedback tuning and a discriminator locally adjusted through 5 configuration bits. The digital architecture is based on a 4 -pixel unit called Pixel Digital Region (PDR) allowing for local storage of hits in 5 -deep data buffers at pixel level {{for the duration of the}} first level trigger latency (L 1 T). This local storage helps overcoming the limitations of the current ATLAS pixel chip FE-I 3 at high hit rates. The PDR-based digital architecture allows for a power-efficient, low recording inefficiency design and reduces the problem of time-walk. The chip periphery consists of a <b>command</b> <b>decoder</b> unit which handles the programming of DACs and registers as well as the decoding of L 1 T requests, a control block which organizes data output from the pixel array and provides data formatting, various powering blocks, an 8 b 10 b coder and a clock multiplier unit which enables data transmission at 160 Mb/s through pseudo-LVDS transmitters. Increased power consumption in the inner layers of ATLAS translates into more material for cooling and power routing, which degrades the tracking and the b-tagging quality. The FE-I 4 collaboration hence places severe constraints on the power consumption of all blocks...|$|E
40|$|In this {{assignment}} you {{are required to}} implement a system for handling data {{similar to that used}} in game programming. In such an environment the primary entities are small rectangles and the problem we are interested is how to manage a large collection of them. In the following we trace the development of a variant of the quadtree data structure that {{has been found to be}} useful for such problems. Your task is to implement this data structure in such a way that a number of operations can be handled efficiently. An example JAVA applet for the data structure can be found on the home page of the class. This assignment is divided into four parts. C, C++, or PASCAL are the permitted program-ming languages. JAVA is not permitted. Also, you are not allowed to make use of any built in data structures from any library such as, but not limited to, STL in C++. For the first two parts, you must read the attached description of the problem and data structure. A detailed explanation of the assignment including the specification of the operations which you are to implement is found at the end of the description. After you have done this, you are to turn in a proposed im-plementation of the data structure using C++ classes, C structs, or PASCAL record definitions. One week later you must turn in a C++, C, or PASCAL program for the <b>command</b> <b>decoder</b> (i. e., scanner for the commands corresponding to the operations which are to be performed on the data structure). For the third part, you are to write a C++, C, or PASCAL program to implement the data structure and operations (1) -(9). For the fourth part, you are to implement operations (10) -(15). Operations (16) -(18) are optional and you will get extra credit if you turn them in with part four. If you are a graduate student, part four is not optional...|$|E
40|$|In this {{assignment}} you {{are required to}} implement an information management system for handling data {{similar to that used}} in VLSI (very large scale integration) applications. In such an environment the primary entities are small rectangles and the problem in which we are interested is how to manage a large collection of them. In the following we trace the development of a variant of the quadtree data structure that {{has been found to be}} useful for such a problem. Your task is to implement this data structure in such a way that a number of operations can be efficiently handled. An example JAVA applet for the data structure can be found on the home page of the class. This assignment is divided into four parts. PASCAL is the preferred programming language although you may use C or C++. For the first two parts, you must read the attached description of the problem and data structure. A detailed explanation of the assignment including the specification of the operations which you are to implement is found at the end of the description. After you have done this, you are to turn in a proposed implementation of the data structure using PASCAL’s (or C or C++) record (structure) definition facility. One week later you must turn in a PASCAL (or C or C++) program for the <b>command</b> <b>decoder</b> (i. e., scanner for the commands corresponding to the operations which are to be performed on the data structure). For the third part, you are to write a PASCAL (or C or C++) program to implement the data structure and operations (1) -(8). For the fourth part, you are to implement operations (9) -(13). Operations (14) -(16) are optional and you will get extra credit if you turn them in with part four. 1 Copyright c 2003 by Hanan Samet. No part of this document may be reproduced, stored in a retrieval system, or transmitted, in any form or by any means, electronic, mechanical, photocopying, recording, or otherwise, without th...|$|E
40|$|A new {{deep space}} {{transponder}} {{is being developed}} by the Jet Propulsion Laboratory for NASA. The Spacecraft Transponding Modem (STM) implements the standard transponder functions and the channel service functions that have previously resided in spacecraft Command/Data Subsystems. The STM uses custom ASICs, MMICs, and MCMs to reduce the active device parts count to 70, mass to I kg, and volume to 524 cc. The first STMs will be flown on missions launching in the 2003 time frame. The STM tracks an X-band uplink signal and provides both X-band and Ka-band downlinks, either coherent or non-coherent with the uplink. A NASA standard Command Detector Unit is integrated into the STM, along with a codeblock processor and a hardware <b>command</b> <b>decoder.</b> The decoded command codeblocks are output to the spacecraft command/data subsystem. Virtual Channel 0 (VC- 0) (hardware) commands are processed and output as critical controller (CRC) commands. Downlink telemetry is received from the spacecraft data subsystem as telemetry frames. The STM provides the following downlink coding options: the standard CCSDS (7 - 1 / 2) convolutional coding, ReedSolomon coding with interleave depths one and five, (15 - 1 / 6) convolutional coding, and Turbo coding with rates 1 / 3 and 1 / 6. The downlink symbol rates can be linearly ramped to match the G/T curve of the receiving station, providing up to a 1 dB increase in data return. Data rates range from 5 bits per second (bps) to 24 Mbps, with three modulation modes provided: modulated subcarrier (3 different frequencies provided), biphase-L modulated direct on carrier, and Offset QPSK. Also, the capability to generate one of four non-harmonically related telemetry beacon tones is provided, {{to allow for a}} simple spacecraft status monitoring scheme for cruise phases of missions. Three ranging modes are provided: standard turn around ranging, regenerative pseudo-noise (PN) ranging, and Differential One-way Ranging (DOR) tones. The regenerative ranging provides the capability of increasing the ground received ranging SNR by up to 30 dB. Two different avionics interfaces to the command/data subsystem's data bus are provided: a MIL STD 1553 B bus or an industry standard PCI interface. Digital interfaces provide the capability to control antenna selection (e. g., switching between high gain and low gain antennas) and antenna pointing (for future steered Ka-band antennas) ...|$|E

