10000|10000|Public
5|$|Additional <b>constraints</b> (here, on 3×3 Sudokus) lead to {{a smaller}} minimum number of clues.|$|E
5|$|Counting {{symmetry}} partitions valid Band1 permutations into {{classes that}} place the same completion <b>constraints</b> on lower bands; {{all members of}} a band counting symmetry equivalence class must have {{the same number of}} grid completions since the completion <b>constraints</b> are equivalent. Counting symmetry <b>constraints</b> are identified by the Band1 column triplets (a column value set, no implied element order). Using band counting symmetry, a minimal generating set of 44 equivalence classes was established.|$|E
5|$|Critics {{argue that}} {{theories}} of <b>constraints</b> {{focus on how}} children learn nouns, but ignore other aspects of their word learning. Although <b>constraints</b> are useful in explaining how children limit possible meanings when learning novel words, the same <b>constraints</b> would eventually need to be overridden {{because they are not}} utilized in adult language. For instance, adult speakers often use several terms, each term meaning something slightly different, when referring to one entity, such as a family pet. This practice would violate the mutual exclusivity constraint.|$|E
40|$|This paper {{exploits}} {{the point}} of view of <b>constraint</b> programming as computation in a logical system, namely <b>constraint</b> logic. We define the basic ingredients of <b>constraint</b> logic, such as <b>constraint</b> models and generalised polynomials. We show that <b>constraint</b> logic is an institution, and we internalise the study of <b>constraint</b> logic to the framework of category-based equational logic. By showing that <b>constraint</b> logic is a special case of category-based equational logic, we integrate the <b>constraint</b> logic programming paradigm into equational logic programming. Results include a Herbrand theorem for <b>constraint</b> logic programming characterising Herbrand models as initial models in <b>constraint</b> logic...|$|R
40|$|This {{research}} exploits {{the view}} of <b>constraint</b> programming as computation in a logical system, namely <b>constraint</b> logic. The basic ingredients of <b>constraint</b> logic are: <b>constraint</b> models for the semantics (they form a comma-category over a fixed model of “built-ins”), generalized polynomials in the rôle of basic syntactic ingredient, and a <b>constraint</b> satisfaction relation between semantics and syntax. Category-based <b>constraint</b> logic means {{the development of the}} logic is abstract categorical rather than concrete set theoretical. We show that (category-based) <b>constraint</b> logic is an institution, and we internalize the study of <b>constraint</b> logic to the abstract framework of category-based equational logic, thus opening the door for considering <b>constraint</b> logic programming over non-standard structures (such as CPO’s, topologies, graphs, categories, etc.). By embedding category-based <b>constraint</b> logic into category-based equational logic, we integrate the <b>constraint</b> logic programming paradigm into (category-based) equational logic programming. Results include completeness of <b>constraint</b> logic deduction, a novel Herbrand theorem for <b>constraint</b> logic programming characterizing Herbrand models as initial models in <b>constraint</b> logic, and logical foundations for modular combination of <b>constraint</b> solvers based on amalgamated sums of Herbrand models in the <b>constraint</b> logic institution...|$|R
50|$|Since {{there are}} 9 rows, 9 columns, 9 boxes and 9 numbers, there are 9×9=81 row-column <b>constraint</b> sets, 9×9=81 row-number <b>constraint</b> sets, 9×9=81 column-number <b>constraint</b> sets, and 9×9=81 box-number <b>constraint</b> sets: 81+81+81+81=324 <b>constraint</b> sets in all.|$|R
5|$|For each quasi-equilibrium's pricespopt, all {{consumers}} can choose optimal baskets (maximally preferred and meeting their budget <b>constraints).</b>|$|E
5|$|Legal <b>constraints</b> to filling scuba {{cylinders}} {{will vary}} by jurisdiction.|$|E
5|$|Resolution, {{a method}} for {{combining}} pairs of <b>constraints</b> to make additional valid <b>constraints,</b> also leads to a polynomial time solution. The 2-satisfiability problems provide one of two major subclasses of the conjunctive normal form formulas that can be solved in polynomial time; the other of the two subclasses is Horn-satisfiability.|$|E
3000|$|... {{while the}} average delay <b>constraint</b> and QoS <b>constraint</b> for {{streaming}} traffic and, the maximum transmission power <b>constraint</b> and interference threshold <b>constraint</b> are satisfied.|$|R
50|$|Garner {{provides}} a thorough discussion of {{various forms of}} <b>constraint</b> (internal <b>constraint,</b> external <b>constraint,</b> total <b>constraint)</b> with application to pattern recognition and psychology.|$|R
30|$|An empty <b>constraint</b> set reduces {{to itself}} (RED _ 0). Rule (CONJ) {{specifies}} that <b>constraint</b> set simplification works, unlike <b>constraint</b> set satisfiability, by performing {{a union of}} the result of simplifying each <b>constraint</b> in the <b>constraint</b> set, separately.|$|R
5|$|The {{choice between}} scuba and surface {{supplied}} diving equipment {{is based on}} both legal and logistical <b>constraints.</b> Where the diver requires mobility and a large range of movement, scuba is usually the choice if safety and legal <b>constraints</b> allow. Higher risk work, particularly commercial diving, may be restricted to surface supplied equipment by legislation and codes of practice.|$|E
5|$|Theories of word-learning <b>constraints</b> {{argue for}} biases or default {{assumptions}} that guide the infant through the word learning process. <b>Constraints</b> are {{outside of the}} infant's control and are believed to help the infant limit their hypotheses {{about the meaning of}} words that they encounter daily. <b>Constraints</b> can be considered domain-specific (unique to language).|$|E
25|$|Kinematic <b>constraints</b> are <b>constraints</b> on the {{movement}} of components of a mechanical system. Kinematic <b>constraints</b> can be considered to have two basic forms, (i) <b>constraints</b> that arise from hinges, sliders and cam joints that define {{the construction of the}} system, called holonomic <b>constraints,</b> and (ii) <b>constraints</b> imposed on the velocity of the system such as the knife-edge constraint of ice-skates on a flat plane, or rolling without slipping of a disc or sphere in contact with a plane, which are called non-holonomic <b>constraints.</b> The following are some common examples.|$|E
40|$|Abstract. This paper mainly {{deals with}} the work of Gilles Pesant on the stretch <b>constraint</b> and its {{reformulation}} as a regular language membership <b>constraint.</b> Some definitions and examples should introduce and explain the notion of a stretch, the stretch <b>constraint</b> and the regular <b>constraint.</b> The consistency algorithm for the regular <b>constraint</b> is explained and illustrated with an additional example. Some comparative remarks on the stretch <b>constraint</b> and the regular <b>constraint</b> are included as well. ...|$|R
40|$|In {{this paper}} we {{consider}} the bilevel programming problem (BLPP) which is a sequence of two optimization problems where the <b>constraint</b> region of the upper level problem is determined implicitly by the solution set to the lower level prob-lem. We extend well-known <b>constraint</b> qualifications for nonlinear programming problems such as the Abadie <b>constraint</b> qualification, the Kuhn-Tucker <b>constraint</b> qualification, the Zangwill <b>constraint</b> qualification, the Arrow-Hurwicz-Uzawa con-straint qualification and the weak reverse convex <b>constraint</b> qualification to BLPPs and derive a Karash-Kuhn-Tucker (KKT) type necessary optimality condition un-der these <b>constraint</b> qualifications without assuming the lower level problem sat-isfying the Mangasarian Fromovitz <b>constraint</b> qualification. Relationships among various <b>constraint</b> qualifications are also given. Key words: necessary optimality conditions, <b>constraint</b> qualifications, nonsmooth analysis, value function, bilevel programming problems...|$|R
40|$|One of the {{limitation}} of the <b>constraint</b> network formalism lies in its inability of explicitly expressing a criteria to optimize. The introduction of several ad-hoc optimization mechanisms in <b>constraint</b> (logic) programming languages shows how important this restriction is. Several formalisms of varied generality have been proposed to remove this restriction: fuzzy <b>constraint</b> networks, partial <b>constraint</b> satisfaction, semi-ring <b>constraint</b> networks, valued <b>constraint</b> networks [...] ...|$|R
25|$|Each {{perspective}} {{must take}} into account the requirements of the other perspectives and the restraint those perspectives impose. The <b>constraints</b> of each perspective are additive. For example, the <b>constraints</b> of higher rows affect the rows below. The <b>constraints</b> of lower rows can, but do not necessarily affect the higher rows. Understanding the requirements and <b>constraints</b> necessitates communication of knowledge and understanding from perspective to perspective. The Framework points the vertical direction for that communication between perspectives.|$|E
25|$|Rigidity is {{the term}} coined in Astro to {{indicate}} the relaxation of <b>constraints.</b> Higher the rigidity tighter is the <b>constraints.</b>|$|E
25|$|Geometric {{programming}} {{is a technique}} whereby objective and inequality <b>constraints</b> expressed as posynomials and equality <b>constraints</b> as monomials can {{be transformed into a}} convex program.|$|E
30|$|Objective {{function}} (23) {{minimizes the}} α-reliable minimax regret. <b>Constraint</b> (24) represents the available number of facilities to be located. <b>Constraint</b> (25), demonstrated single allocation. If a facility is not located at node j, the demand of node i cannot be satisfied under scenario k (<b>Constraint</b> 26). <b>Constraint</b> (27) defined the regret attributed to scenario k. The least possible probability of selecting scenario must be α (<b>Constraint</b> 28). <b>Constraint</b> (29) identified the maximum regrets. <b>Constraint</b> (30) is decision variable.|$|R
30|$|Main ideas: The {{resultant}} forces/moments of the collinear <b>constraint</b> {{forces or}} coaxial <b>constraint</b> moments are dealt with first. Then, the <b>constraint</b> forces/moments {{can be obtained}} by distributing the resultant forces/moments according to the stiffness proportion of the supporting limbs with collinear <b>constraint</b> forces or coaxial <b>constraint</b> moments [57].|$|R
40|$|Our {{objectives}} were {{to examine the}} model fitness of leisure volunteering <b>constraint</b> and then to discuss the impact of socioeconomic status on leisure volunteering <b>constraint.</b> Intrapersonal, <b>constraint,</b> and structural <b>constraint</b> were used as the 3 dimensions to measure leisure volunteering <b>constraint.</b> A causal model was tested {{and the impact of}} socioeconomic status on leisure volunteering <b>constraint</b> was theoretically constructed. Participants were 285 volunteers who belonged to community volunteering organizations. Results indicate that socioeconomic status has a negative impact on leisure volunteering <b>constraint...</b>|$|R
25|$|The {{considered}} two-stage {{problem is}} linear because the objective functions and the <b>constraints</b> are linear. Conceptually {{this is not}} essential and one can consider more general two-stage stochastic programs. For example, if the first-stage problem is integer, one could add integrality <b>constraints</b> to the first-stage problem so that the feasible set is discrete. Non-linear objectives and <b>constraints</b> could also be incorporated if needed.|$|E
25|$|In all cases, {{the soils}} are rather acidic type with {{adjustable}} humidity, which imposes certain <b>constraints</b> {{for the development}} of plant species. These development <b>constraints</b> are represented on the adjoining humidity/acidity chart.|$|E
25|$|These V-speeds {{are defined}} by regulations. They are {{typically}} defined with <b>constraints</b> such as weight, configuration, or phases of flight, some of these <b>constraints</b> have been omitted to simplify the description.|$|E
40|$|<b>Constraint</b> solving in dynamic environments {{requires}} an immediate {{adaptation of the}} solutions if the <b>constraint</b> problems are changing. After any change the solutions have to be immediately adapted. Therefore, {{a wide range of}} incremental <b>constraint</b> solving algorithms for dynamic <b>constraint</b> satisfaction problems (DCSPs) are available. Some of these algorithms are based on Fruhwirth's <b>Constraint</b> Handling Rules (CHRs) which are rules to implement <b>constraint</b> solvers. Thus, adaptive <b>constraint</b> solving in dynamic environments is generally supported. In this paper, some projection algorithms are presented to eliminate local variables, which are introduced during <b>constraint</b> processing with CHRs. An early projection within each rule application eliminates irrelevant variable bindings while keeping the processed <b>constraint</b> stores quite small. Consequently, the modifications that are required for an adaptation after <b>constraint</b> additions or deletions are reduced. This may result in an [...] ...|$|R
30|$|Equations (1) and (2) {{are subject}} to three constraints: pumping <b>constraint,</b> {{drawdown}} <b>constraint</b> and water demand <b>constraint.</b>|$|R
40|$|A {{frictionless}} satellite <b>constraint</b> {{system is}} provided. The <b>constraint</b> system includes {{at least one}} clamp bar configured to restrain a satellite within the <b>constraint</b> system in an axial direction. The <b>constraint</b> system also includes a plurality of pins configured to restrain the satellite within the <b>constraint</b> system in a lateral direction...|$|R
25|$|The <b>constraints</b> {{in their}} {{primitive}} form are rather singular, {{this was the}} reason for integrating them over test functions to obtain smeared <b>constraints.</b> However, {{it would appear that the}} equation for the master constraint, given above, is even more singular involving the product of two primitive <b>constraints</b> (although integrated over space). Squaring the constraint is dangerous as it could lead to worsened ultraviolent behaviour of the corresponding operator and hence the master constraint programme must be approached with due care.|$|E
25|$|A 2017 {{study found}} that the Committee's {{decision}} making was mostly unaffected by extra-legal factors such as nationality, activity/experience, conflict avoidance, and time <b>constraints.</b> The same {{study found that}} the Committee's decision making was affected much more by time <b>constraints</b> than that of conventional courts.|$|E
25|$|After an inelastic collision, special {{states of}} sliding and resting can occur and, for example, the Open Dynamics Engine uses <b>constraints</b> to {{simulate}} them. <b>Constraints</b> avoid inertia and thus instability. Implementation of rest {{by means of}} a scene graph avoids drift.|$|E
3000|$|... {{where the}} first <b>constraint</b> is the {{feedback}} capacity <b>constraint,</b> the second <b>constraint</b> ensures that each subcarrier is assigned to one user exclusively, and the third <b>constraint</b> is for total transmit power, denoted by γ [...]...|$|R
40|$|The {{ordering}} <b>constraint</b> along epipolar {{lines is}} a powerful <b>constraint</b> that has been exploited by some recent stereomatching algorithms. We formulate a generalized ordering <b>constraint,</b> not restricted to epipolar lines. We prove several properties of the generalized ordering <b>constraint</b> and of the "forbidden zone", the set of matches that would violate the <b>constraint.</b> We consider both the orthographic and the perspective projection case, the latter for a simplified but standard stereo geometry. The disparity gradient limit found in the human stereo system {{may be related to}} a form of the ordering <b>constraint.</b> To illustrate our analysis we outline a simple algorithm that exploits the generalized ordering <b>constraint</b> for matching contours of wireframe objects. We also show that the use of the generalized ordering <b>constraint</b> implies several other stereo matching constraints: a 0 the ordering <b>constraint</b> along epipolar lines, b) figural continuity, c) Binford's cross-product <b>constraint,</b> d) Mayhew and Frisby's figural continuity <b>constraint.</b> We finally discuss ways of extending the algorithm to arbitrary 3 -D objects...|$|R
40|$|Experience using <b>constraint</b> {{programming}} to solve real-life problems {{has shown that}} nding an ecient {{solution to the problem}} often requires experimentation with dierent <b>constraint</b> solvers or even building a problem-speci c <b>constraint</b> solver. HAL is a new <b>constraint</b> logic programming language expressly designed to facilitate this process. It provides semi-optional type, mode and determinism declarations. These allow natural <b>constraint</b> speci cation by means of type overloading, better compile-time error checking and generation of more ecient run-time code. Importantly, it provides type classes which can be used to specify solver interfaces, allowing the <b>constraint</b> programmer to support modelling of a <b>constraint</b> problem independent of a particular solver, leading to easy and play" experimentation with dierent solvers. Other interesting features include mutable global variables for implementing a <b>constraint</b> store, and dynamic scheduling and <b>Constraint</b> Handling Rules (CHRs) for combining, extending and writing new <b>constraint</b> solvers...|$|R
