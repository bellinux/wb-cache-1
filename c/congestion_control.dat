5581|376|Public
25|$|Floyd {{is also a}} {{co-author}} on {{the standard}} for TCP Selective acknowledgement (SACK), Explicit Congestion Notification (ECN), the Datagram <b>Congestion</b> <b>Control</b> Protocol (DCCP) and TCP Friendly Rate Control (TFRC).|$|E
25|$|She {{received}} the IEEE Internet Award in 2005 and the ACM SIGCOMM Award in 2007 for her contributions to <b>congestion</b> <b>control.</b> She {{has been involved}} in the Internet Advisory Board, {{and is one of the}} top-ten most cited researchers in computer science.|$|E
25|$|Historically, TLS {{has been}} used {{primarily}} with reliable transport protocols such as the Transmission Control Protocol (TCP). However, {{it has also been}} implemented with datagram-oriented transport protocols, such as the User Datagram Protocol (UDP) and the Datagram <b>Congestion</b> <b>Control</b> Protocol (DCCP), usage of which has been standardized independently using the term Datagram Transport Layer Security (DTLS).|$|E
40|$|Abstract—This paper {{presents}} simple analytical {{models of}} hybrid TCP <b>congestion</b> <b>controls,</b> which switch loss-based mode and delay-based mode adaptively, and tries their performance tuning. We firstly present ideal behavior models of {{three kinds of}} TCP <b>congestion</b> <b>controls</b> (loss-based, delay-based and hybrid). We then give abstracted models of the actual hybrid TCP s and consider their performance tuning. Finally, experiments validate analytical expectations and effectiveness of the hybrid TCP. I...|$|R
30|$|From {{the real}} experiment, {{we found that}} the <b>congestion</b> <b>controls</b> of {{wireless}} TCP did not function as proposed. However, even though wireless TCP shows poor throughput, a strong loss recovery algorithm can increase the performance of wireless TCP.|$|R
5000|$|... {{bandwidth}} utilization - provides {{features to}} manage <b>congestion</b> and <b>control</b> arbitration ...|$|R
25|$|The {{transport}} layer establishes basic data channels that applications use for task-specific data exchange. The layer establishes process-to-process connectivity, meaning it provides end-to-end {{services that are}} independent {{of the structure of}} user data and the logistics of exchanging information for any particular specific purpose. Its responsibility includes end-to-end message transfer independent of the underlying network, along with error control, segmentation, flow control, <b>congestion</b> <b>control,</b> and application addressing (port numbers). End-to-end message transmission or connecting applications at the {{transport layer}} can be categorized as either connection-oriented, implemented in TCP, or connectionless, implemented in UDP.|$|E
25|$|Several ongoing {{projects}} aim to solve Algiers deficit and transportation problems. A tram connecting {{the downtown area}} to Dergana is expected to open {{by the end of}} 2010. Subway lines connecting Tafourah-Large Harrach Post office-El were expected in 2008, in addition to three Regional Express Network (RER) lines: Algiers-Aga-Thenia, Algiers-Aga-Elafroun, Algiers-Aga-Zeralda. Three new cable cars, reconstruction of roads and restoration of the city station—which will accommodate the High-speed rail line connecting Annaba, Algiers and Oran—are also ongoing. <b>Congestion</b> <b>control</b> measures including new roundabouts and motorways are also being added to the city.|$|E
2500|$|The {{city has}} an {{extensive}} street grid. [...] Arterial streets (referred to as surface streets by locals, {{in contrast with}} freeways which are usually grade-separated roadways) connect freeways with smaller neighborhood streets, and are often used to bypass congested freeway routes. [...] Consequently, most of the surface arterial streets in Los Angeles have various forms of <b>congestion</b> <b>control.</b>|$|E
40|$|In {{this paper}} we {{investigate}} stream adaptation policies for video streaming servers which use smooth TCP-friendly <b>congestion</b> <b>controls</b> {{to compute the}} sending bitrate. We seek an optimal adaptation policy which maximizes the per-ceived quality at the client side and tries to avoid an empty prefetch buffer at the client side. In order to do so, we first develop an optimization framework for our problem and then suggest an algorithm to solve it. 1...|$|R
40|$|We {{consider}} increase-decrease <b>congestion</b> <b>controls,</b> a formulation that accommodates many known <b>congestion</b> <b>controls.</b> There {{have been}} many works that aim to obtain relation between the loss-event rate and time-average window for some known particular instances of increase-decrease controls. In contrast, in this note, we study the inverse problem where one is given a target response function x→ f(x) and the design problem is to construct an increase-decrease control such that, ideally, =f(), or at least ≤ f(). One common method for solving this is to design a control that satisfies the requirements in a reference system, {{and then try to}} evaluate the behaviour in a general system. In this note, we consider that the reference is for deterministic constant inter-loss times. Our finding is as follows. We identify conditions under which if `≥ f(`) in the reference system (i. e. the control overshoots), then for any independent identically distributed (i. i. d.) random inter-loss times, we have ≥ 1 / 1 +εf(1 / 1 +ε), for some small ε≥ 0 specified in this note. In other words, moving from the reference system to the more general case of i. i. d. losses will not eliminate any overshoot. We apply our results to a stochastic fluid version of HighSpeed TCP floyd- 02 -a. We show that for this idealized HighSpeed TCP our result applies with ε not larger than 0. 0012. This implies that for idealized HighSpeed TCP is almost lower bounded by f() under the hypotheses above. Our general analysis result rises the issue whether it is a good practice to design <b>congestion</b> <b>controls</b> by taking deterministic constant inter-loss times as a reference system, given that we demonstrate that this reference system is, in some sense explained in the paper, in fact a best case, rather than a worst case, as would be more desirable...|$|R
40|$|Abstract. The {{article focuses}} on the {{research}} of a reliable data transmission extension protocol [...] UDT based on UDP, the related implementation method and transmission control method of multimedia data real-time and reliable transmission, the improvement to algorithm of its related methods in specific applications; {{as well as the}} improvement to AIMD (Additive Increase and Multiplicative Decrease) <b>congestion</b> <b>controlling</b> algorithm, proposing DAIMD <b>congestion</b> <b>controlling</b> algorithm; the sending rate increment is changed from the constant quantity to the variable quantity which continuously reduces with the continuous increase of the sending rates, so it not only makes a more rational use of limited network bandwidth, also reduces the larger oscillation in the network data transmission; the improvement of validation mechanisms, propose validation mechanisms based on the combination of time and data packets numbers, and improve the efficiency of data transmission. When the multimedia data network transmits, the transmitter and receiver need to identify a network transmission protocol. According to the above analysis, UDP is a simple transmission level protocol, non-connection-oriented, and itself does not provide data retransmission and confirmation, therefore adopting UDP as the network transmission protocol can improve the data transmissio...|$|R
2500|$|Internet traffic {{can also}} exhibit some {{seemingly}} emergent properties. In the <b>congestion</b> <b>control</b> mechanism, TCP flows can become globally synchronized at bottlenecks, simultaneously increasing and then decreasing throughput in coordination. Congestion, {{widely regarded as}} a nuisance, is possibly an emergent property of the spreading of bottlenecks across a network in high traffic flows which {{can be considered as}} a phase transition [...]|$|E
5000|$|No <b>congestion</b> <b>control</b> - UDP {{itself does}} not avoid congestion. <b>Congestion</b> <b>control</b> {{measures}} must be implemented at the application level.|$|E
50|$|In {{computer}} networking, delay-gradient <b>congestion</b> <b>control</b> {{refers to}} a class of <b>congestion</b> <b>control</b> algorithms, which react to the differences in round-trip delay time (RTT), as opposed to classical <b>congestion</b> <b>control</b> methods, which react to packet loss or an RTT threshold being exceeded. Such algorithms include CAIA Delay-Gradient (CDG) and TIMELY.|$|E
40|$|Congestion Notification (CN) {{provides}} a means for a bridge to notify a source of congestion allowing the source to reduce the flow rate. � CN is targeted at networks with low bandwidth delay products: e. g. data center and backplane networks � Benefits: avoid frame loss; reduce latency; improve performance � Amendment to IEEE Std 802. 1 QPAR scope* � Specify protocols, procedures and managed objects for Congestion management of � long-lived data flows � In network domains of limited bandwidth delay product � Bridges signal congestion to end stations � VLAN tag priority value segregates <b>congestion</b> <b>controlled</b> traffic � Allows simultaneous support of <b>congestion</b> <b>controlled</b> and non-controlled domains PAR scope, purpose and need are summarized on these slides. For full text see backup slidesPAR purpose � Data center network and backplane fabrics that � with applications that depend on �Lower latency �Lower probability of packet loss � Allowing these applications to share the network with traditional LAN applicationsPAR Need � Opportunity for Ethernet as a consolidated Layer 2 solution in high-speed, short-range networks to support � Traffic that uses specialized layer 2 networks today: �data centers, �backplane fabrics, �single and multi-chassis interconnects, �computing clusters, �storage networks. � Network consolidation to provide operational and equipment cost benefitsMarket Requirement...|$|R
40|$|Abstract — This paper {{presents}} a novel mechanism for dynamically adapting {{the quality of}} <b>congestion</b> <b>controlled</b> Voice Over IP (VoIP) applications on the internet in real time. The system uses our proposed variable bit rate speech codec called Speex, which can dynamically adjust the encoding bit rate (and hence the speech quality) based on both the feedback information about the network congestion and the instantaneous speech properties. Our extensive NS 2 simulation results prove that the proposed system indeed provides highest quality speech while maximising the bandwidth utilisation and reducing the network congestion. I...|$|R
5000|$|... #Subtitle level 2: An {{efficient}} {{approach to}} <b>control</b> <b>congestion</b> ...|$|R
5000|$|Congestion Control: Infiniband defines <b>congestion</b> <b>control</b> {{based on}} FECN/BECN marking, RoCEv2 defines a <b>congestion</b> <b>control</b> {{protocol}} that uses ECN for marking as implemented in standard switches and CNP frames for acknowledgments.|$|E
50|$|Several <b>congestion</b> <b>control</b> {{mechanisms}} {{have been}} defined for Multipath TCP. Their main difference with classical TCP <b>congestion</b> <b>control</b> schemes {{is that they}} need to react to congestion on the different paths without being unfair with single path TCP sources that could compete with them on one of the paths. Four Multipath TCP <b>congestion</b> <b>control</b> schemes are currently supported by the Multipath TCP implementation in the Linux kernel.|$|E
5000|$|<b>Congestion</b> <b>control</b> {{then becomes}} a {{distributed}} optimisation algorithm. Many current <b>congestion</b> <b>control</b> algorithms can be modelled in this framework, with [...] being either the loss probability or the queueing delay at link [...]|$|E
5000|$|Bimodal Mechanism - Bimodal <b>Congestion</b> Avoidance and <b>Control</b> mechanism.|$|R
5000|$|Delayed {{acknowledge}} due to flow <b>control,</b> <b>congestion</b> avoidance {{and processing}} delay ...|$|R
40|$|This paper {{presents}} an extensive experimental analysis of two TCP-friendly <b>congestion</b> <b>controls</b> recently {{proposed in the}} literature, placing a special emphasis on the wireless setting. This work is motivated {{in part by the}} consideration that, to our knowledge, the majority of the results in this area are validated by simulation analysis rather than by experimentation. Testing these algorithms in real environments can help to verify their actual effectiveness for possible employment over the Internet. To reach our goal, we have implemented one representative algorithm among the so-called window-based TCP-friendly <b>congestion</b> <b>controls,</b> namely, the general additive increase multiplicative decrease (GAIMD) strategy, and used the publicly available code for the most popular control of the rate-based family, i. e., the TCP-friendly rate control (TFRC). We have then evaluated their TCP-fairness and smoothness in a test-bed featuring Cisco WAN equipment, as well as in an IEEE 802. 11 g wireless local area network (WLAN). Based on our results, we first propose and justify the tuning of TFRC to avoid a weird behavior that in the wireless environment this control occasionally exhibited. We next show that the GAIMD strategy reveals non-negligible scalability and smoothness problems that limit its performance, mainly in the radio setting. We empirically demonstrate that its increase/decrease rules, based on a TCP-Reno analytical model, do not guarantee an adequate performance when GAIMD competes with TCP-Sack, a de facto standard for current TCP implementations...|$|R
5000|$|BIC TCP (Binary Increase <b>Congestion</b> <b>control)</b> {{is one of}} the <b>congestion</b> <b>control</b> {{algorithms}} {{that can}} be used for Transmission Control Protocol (TCP). BIC is optimized for high speed networks with high latency: so-called [...] "long fat networks".|$|E
50|$|Binary Increase <b>Congestion</b> <b>control</b> is an {{implementation}} of TCP with an optimized <b>congestion</b> <b>control</b> algorithm for high speed networks with high latency (called LFN, long fat networks, in RFC 1072). BIC {{is used by}} default in Linux kernels 2.6.8 through 2.6.18.|$|E
5000|$|... #Subtitle level 2: Reliability and <b>congestion</b> <b>control</b> {{solutions}} ...|$|E
5000|$|TCP <b>congestion</b> {{avoidance}} <b>controls</b> {{the data}} rate. So called [...] "slow start" [...] {{occurs in the}} beginning of a file transfer, and after packet drops caused by router congestion or bit errors in for example wireless links.|$|R
40|$|Congestion plays a {{vital role}} in {{degrading}} the performance of wireless sensor network. Thus an issue of detecting and <b>controlling</b> <b>congestion</b> becomes essential to improve the performance of the network. There are various sources for congestion like packet collision, buffer overflow, concurrent transmission etc. This paper focuses on congestion due to concurrent transmission. We have proposed an efficient protocol to detect and <b>control</b> <b>congestion</b> in a MAC. The level of congestion is measured using a metric called Depth of Congestion (DC). Based on the measured value the node effectively adapts its transmission data rate to <b>control</b> <b>congestion.</b> This technique is implemented successfully in NS- 2 simulator. Finally, simulation results have demonstrated the effectiveness of our proposed protocol...|$|R
40|$|Two {{resource}} assignment algorithms are studied and evaluated for best-effort {{services in the}} downlink of WCDMA. The basic idea is to periodically update users' bitrate in response to traffic and channel variations. Both schemes are based on power fairness, which means users are allowed {{to have the same}} power consumption. However, one scheme provides minimum guaranteed bitrate to all the users, whereas the second algorithm does not give any guarantee. The guaranteed and non-guaranteed schemes provide a throughput gain in the order of 15 - 20 % and 5560 % with respect to the reference scenarios. The continuous execution of the schemes also unifies admission and <b>congestion</b> <b>controls</b> into one principal algorithm...|$|R
5000|$|... #Subtitle level 3: Classification of <b>congestion</b> <b>control</b> {{algorithms}} ...|$|E
50|$|In {{computer}} networking, the Datagram <b>Congestion</b> <b>Control</b> Protocol (DCCP) is a message-oriented {{transport layer}} protocol. DCCP implements reliable connection setup, teardown, Explicit Congestion Notification (ECN), <b>congestion</b> <b>control,</b> and feature negotiation. The IETF published DCCP as RFC 4340, a proposed standard, in March 2006. RFC 4336 provides an introduction.|$|E
50|$|UDT3 (2006) {{extended}} {{the usage of}} the protocol to the commodity Internet. <b>Congestion</b> <b>control</b> was tuned to support relatively low bandwidth as well. UDT3 also significantly reduced the use of system resources (CPU and memory). Additionally, UDT3 allows users to easily define and install their own <b>congestion</b> <b>control</b> algorithms.|$|E
5000|$|Traffic-reducing {{policies}} {{such as the}} [...] "pedestrianisation" [...] of city centres, traffic calming, parking <b>control,</b> <b>congestion</b> charging.|$|R
40|$|Abstract—The {{traditional}} {{route selection}} algorithm of the Ad Hoc network are mainly {{based on the}} shortest path and do {{not take into account}} any other routing factors. As a result, it increases the number of the unreliable route. It also forms a lot of “hot spot”, which affect the performance of the network. Thus this paper proposes a performance value adaptive routing for mobile ad hoc network (PVAR), which is mainly based on the performance value of the route. The PVAR uses a cross-layer design method that involves the medium access control layer and the network layer, and introduces a new route selection algorithm. Simulation results show that the PVAR can perform much better than the DSR in route reliability improving, <b>congestion</b> <b>controlling</b> and load balancing...|$|R
50|$|Researchers {{have clearly}} {{pointed out that}} special care is needed to explore how network coding can co-exist with {{existing}} routing, media access, <b>congestion,</b> flow <b>control</b> algorithms and TCP protocol. If not, network coding may not offer much advantages and can increase computation complexity and memory requirements.|$|R
