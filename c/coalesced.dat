3387|7580|Public
5|$|By 1845, {{the seven}} islands <b>coalesced</b> {{into a single}} landmass by the Hornby Vellard project via large scale land reclamation. On 16 April 1853, India's first {{passenger}} railway line was established, connecting Bombay to the neighbouring town of Thana (now Thane). During the American Civil War (1861–1865), the city became the world's chief cotton-trading market, resulting in a boom in the economy that subsequently enhanced the city's stature.|$|E
5|$|In {{the first}} centuries after Alexander's death, {{probably}} in Alexandria, {{a quantity of}} the legendary material <b>coalesced</b> into a text known as the Alexander Romance, later falsely ascribed to Callisthenes and therefore known as Pseudo-Callisthenes. This text underwent numerous expansions and revisions throughout Antiquity and the Middle Ages, containing many dubious stories, and was translated into numerous languages.|$|E
5|$|Predynastic Egypt {{originally}} {{consisted of}} small, independent villages. Because many deities in later times were {{strongly tied to}} particular towns and regions, many scholars {{have suggested that the}} pantheon formed as disparate communities <b>coalesced</b> into larger states, spreading and intermingling the worship of the old local deities. But others have argued that the most important predynastic gods were, like other elements of Egyptian culture, present all across the country despite the political divisions within it.|$|E
50|$|The <b>coalescing</b> done in IRC is conservative, because {{aggressive}} <b>coalescing</b> may introduce spills {{into the}} graph. However, additional <b>coalescing</b> heuristics such as George <b>coalescing</b> may <b>coalesce</b> more vertices while still ensuring that no additional spills are added. Work-lists {{are used in}} the algorithm to ensure that each iteration of IRC requires sub-quadratic time.|$|R
40|$|Existence {{of random}} {{dynamical}} systems {{for a class}} of <b>coalescing</b> stochastic flows on R is proved. A new state space for <b>coalescing</b> flows is built. As particular cases <b>coalescing</b> flows of solutions to stochastic differential equations independent before meeting time and <b>coalescing</b> Harris flows are considered...|$|R
50|$|The <b>Coalesce</b> / Boysetsfire Split EP was {{released}} in 2000. It featured six tracks: two covers of Boysetsfire by <b>Coalesce,</b> two <b>Coalesce</b> covers by Boysetsfire, and an original song from each band.|$|R
5|$|The {{impacting}} object {{probably had}} a mass {{comparable to that of}} Mars, and the impact probably occurred {{near the end of the}} period of giant impacts. The collision kicked into orbit some of the impactor's mantle, which then <b>coalesced</b> into the Moon. The impact was probably the last in the series of mergers that formed the Earth.|$|E
5|$|Calabozos lies in an {{area between}} thick and thin {{continental}} crust, and its eruptions are probably fed {{from a pool of}} andesitic and rhyolitic magma that sits just under its caldera. The caldera is underlain by a layer of volcaniclastic sedimentary rock from the Mesozoic era <b>coalesced</b> with intrusive and volcanic rocks of Tertiary age, over a layer of Precambrian-Triassic sedimentary and metamorphic rock formed from later plutons (magma intrusions). Under its northeast edge, Calabozos is cut by a north-south trending segment of sedimentary rock that includes gypsiferous and carbonates.|$|E
5|$|Parizeau's stance created {{opposition}} in the sovereignty movement, which <b>coalesced</b> around Bloc Québécois leader Lucien Bouchard. A popular and charismatic figure, Bouchard had come close to death from necrotizing fasciitis and lost his left leg. His recovery, and subsequent public appearances on crutches, provided a rallying point for sovereigntists and the public at large. Bouchard thought a proposal lacking a partnership would doom the project among soft nationalists (such as himself) who worried about the economic consequences of separation.|$|E
40|$|Memory {{transfers}} {{are becoming}} more important to optimize, for both performance and power consumption. With this goal in mind, new register allocation schemes are developed, which revisit not only the spilling problem but also the <b>coalescing</b> problem. Indeed, a more aggressive strategy to avoid load/store instructions may increase the constraints to suppress (<b>coalesce)</b> move instructions. This paper {{is devoted to the}} complexity of the <b>coalescing</b> phase, in particular in the light of recent developments on the SSA form. We distinguish several optimizations that occur in <b>coalescing</b> heuristics: a) aggressive <b>coalescing</b> removes as many moves as possible, regardless of the colorability of the resulting interference graph; b) conservative <b>coalescing</b> removes as many moves as possible while keeping the colorability of the graph; c) incremental conservative <b>coalescing</b> removes one particular move while keeping the colorability of the graph; d) optimistic <b>coalescing</b> <b>coalesces</b> moves aggressively, then gives up about as few moves as possible so that the graph becomes colorable again. We almost completely classify the NP-completeness of these problems, discussing also on the structure of the interference graph: arbitrary, chordal, or k-colorable in a greedy fashion. We believe that such a study is a necessary step for designing new <b>coalescing</b> strategies. ...|$|R
40|$|International audienceRegister {{allocation}} {{is often}} a two-phase approach: spilling of registers to memory, followed by <b>coalescing</b> of registers. Extreme liverange splitting (i. e. live-range splitting after each statement) enables optimal solutions based on ILP, for both spilling and <b>coalescing.</b> However, while the solutions are easily found for spilling, for <b>coalescing</b> they are more elusive. This difficulty stems from the huge size of interference graphs resulting from live-range splitting. This paper focuses on <b>coalescing</b> {{in the context of}} extreme liverange splitting. It presents some theoretical properties that give rise to an algorithm for reducing interference graphs. This reduction consists mainly in finding and removing useless splitting points. It is followed by a graph decomposition based on clique separators. The reduction and decomposition are general enough, so that any <b>coalescing</b> algorithm can be applied afterwards. Our strategy for reducing and decomposing interference graphs preserves the optimality of <b>coalescing.</b> When used together with an optimal <b>coalescing</b> algorithm (e. g. ILP), optimal solutions are much more easily found. The strategy has been tested on a standard benchmark, the optimal <b>coalescing</b> challenge. For this benchmark, the cutting-plane algorithm for optimal <b>coalescing</b> (the only optimal algorithm for <b>coalescing)</b> runs 300 times faster when combined with our strategy. Moreover, we provide all the optimal solutions of the optimal <b>coalescing</b> challenge, including the three instances that were previously unsolved...|$|R
40|$|Due to the {{increasing}} latencies of memory accesses and recent developments on the SSA form, it has become important to revisit the spilling (load/store insertion) and register <b>coalescing</b> (removal of move instructions) problems {{in order to develop}} more aggressive register allocation strategies. This report is devoted to the complexity of register <b>coalescing.</b> We distinguish several optimizations that occur in most <b>coalescing</b> heuristics: a) aggressive <b>coalescing</b> removes as many moves as possible, regardless of the colorability of the resulting interference graph; b) conservative <b>coalescing</b> removes as many moves as possible while keeping the colorability of the graph; c) incremental conservative <b>coalescing</b> removes one particular move while keeping the colorability of the graph; d) optimistic <b>coalescing</b> <b>coalesces</b> all moves (when possible), aggressively, and gives up about as few moves as possible (de-coalescing) so that the graph becomes colorable. We (almost) completely classify the NPcompleteness of these problems, discussing also on the structure of the interferenc...|$|R
5|$|Severe Tropical Cyclone Ilona caused {{moderate}} damage across the Pilbara region of Western Australia in mid-December1988. The system originated from a monsoon trough that <b>coalesced</b> into a tropical {{low over the}} Timor Sea on 12December. The system initially moved southwest, before moving on a more westerly course. Steady intensification occurred and Ilona reached its peak strength on 17December as a low-end severe tropical cyclone. A southward turn directed the cyclone toward Western Australia, and it made landfall near Mardie Station. The system subsequently degraded over land and dissipated on 19December.|$|E
5|$|Subsequent {{measurements}} of Vega at 193μm showed a lower than expected flux for the hypothesized particles, {{suggesting that they}} must instead be {{on the order of}} 100μm or less. To maintain this amount of dust in orbit around Vega, a continual source of replenishment would be required. A proposed mechanism for maintaining the dust was a disk of <b>coalesced</b> bodies that {{were in the process of}} collapsing to form a planet. Models fitted to the dust distribution around Vega indicate that it is a 120AU-radius circular disk viewed from nearly pole-on. In addition, there is a hole in the center of the disk with a radius of no less than 80AU.|$|E
5|$|The first {{subatomic}} particles to be formed included protons, neutrons, and electrons. Though simple atomic nuclei formed {{within the first}} three minutes after the Big Bang, thousands of years passed before the first electrically neutral atoms formed. The majority of atoms produced by the Big Bang were hydrogen, along with helium and traces of lithium. Giant clouds of these primordial elements later <b>coalesced</b> through gravity to form stars and galaxies, and the heavier elements were synthesized either within stars or during supernovae.|$|E
40|$|Abstract. Register {{allocation}} {{is often}} a two-phase approach: spilling of registers to memory, followed by <b>coalescing</b> of registers. Extreme liverange splitting (i. e. live-range splitting after each statement) enables optimal solutions based on ILP, for both spilling and <b>coalescing.</b> However, while the solutions are easily found for spilling, for <b>coalescing</b> they are more elusive. This difficulty stems from the huge size of interference graphs resulting from live-range splitting. This paper focuses on optimal <b>coalescing</b> {{in the context of}} extreme liverange splitting. It presents some theoretical properties that give rise to an algorithm for reducing interference graphs, while preserving optimality. This reduction consists mainly in finding and removing useless splitting points. It is followed by a graph decomposition based on clique separators. Any <b>coalescing</b> technique can be applied after these 2 optimizations. Our 2 optimizations have been tested on a standard benchmark, the optimal <b>coalescing</b> challenge. For this benchmark, the cutting-plane algorithm for optimal <b>coalescing</b> (the only optimal algorithm for <b>coalescing)</b> runs 300 times faster when combined with our 2 optimizations. Moreover, we provide all the solutions of the optimal <b>coalescing</b> challenge, including the 3 instances that were previously unsolved. ...|$|R
40|$|<b>Coalescing</b> is a unary {{operator}} applicable to temporal databases; it {{is similar to}} duplicate elimination in conventional databases. Tuples in a temporal relation that agree on the explicit attribute values and that have adjacent or overlapping time periods are candidates for <b>coalescing.</b> Uncoalesced relations can arise in many ways, e. g., via a projection or union operator, or by not enforcing <b>coalescing</b> on update or insertion. In this paper we show how semantically superfluous <b>coalescing</b> can be eliminated. We then turn to efficiently performing <b>coalescing.</b> We provide a variety of iterative and non-iterative approaches, via SQL and embedded SQL, that require no changes to the DBMS, demonstrating that <b>coalescing</b> can be formulated in SQL- 89. Detailed performance studies show that all such approaches are quite expensive. We propose a spectrum of <b>coalescing</b> algorithms within a DBMS, based on nested-loop, explicit partitioning, explicit sorting, temporal sorting, and combined explicit/tempora [...] ...|$|R
50|$|Cold <b>coalescing</b> {{filters are}} <b>coalescing</b> filters {{operated}} at around 35 F, {{allowing them to}} be more effective at removing moisture.|$|R
5|$|After Alvarado's brutal {{suppression}} of western Honduras, indigenous resistance against the Spanish had <b>coalesced</b> around the Lenca warleader Lempira, who was reputed to have led {{an army of}} thirty thousand native warriors. Lempira had been quietly building a powerful alliance in southern Higueras, in the mountains south of Gracias a Dios. Its political centre was at the town of the Lenca ruler Entepica, and its greatest stronghold was Lempira's hilltop fortress at Peñol de Cerquín. Lempira also attracted support from the native inhabitants Comayagua valley, and the San Pedro mountains. Even former enemies of Lempira, such as the Cares, swore allegiance to him after he overcame them in battle; though a mixture of force and diplomacy, Lempira's alliance extended as far as San Miguel, in eastern El Salvador, and encompassed some 200 towns. Resistance continued from 1537 into 1538, until Lempira and his forces were defeated in battle by the Spanish, led by Alonso de Cáceres.|$|E
5|$|Ancient Egypt was {{a civilization}} of ancient Northeastern Africa, {{concentrated}} along the lower {{reaches of the}} Nile River in the place that is now the country Egypt. It is one of six historic civilizations to arise independently. Egyptian civilization followed prehistoric Egypt and <b>coalesced</b> around 3150BC (according to conventional Egyptian chronology) with the political unification of Upper and Lower Egypt under Menes (often identified with Narmer). The history of ancient Egypt occurred {{as a series of}} stable kingdoms, separated by periods of relative instability known as Intermediate Periods: the Old Kingdom of the Early Bronze Age, the Middle Kingdom of the Middle Bronze Age and the New Kingdom of the Late Bronze Age.|$|E
5|$|At the {{beginning}} of the 20thcentury, the teachings of Tenrikyo's foundress Oyasama became popular throughout Japan. In the following decades, the most devoted followers <b>coalesced</b> around Oyasama's residence in rural Nara, which she had perceived as the birthplace of the world, or Jiba. The six villages surrounding the Jiba slowly became filled with Tenrikyo ministers, mystics, and evangelists, and the area was urbanized. A popular international school (now Tenri University) and Tenri Central Library, built by followers, were also attracting a variety of people to the area. It was around this time that Tenrikyo's Second Shinbashira (community leader) Shōzen Nakayama conceived of creating a grand construction project as a testament to the loyalty of Oyasama's followers.|$|E
50|$|In {{computer}} science, <b>coalescing</b> is {{the act of}} merging two adjacent free {{blocks of}} memory. When an application frees memory, gaps can fall in the memory segment that the application uses. Among other techniques, <b>coalescing</b> is used to reduce external fragmentation, but is not totally effective. <b>Coalescing</b> can be done as soon as blocks are freed, {{or it can be}} deferred until some time later (known as deferred <b>coalescing),</b> or it might not be done at all.|$|R
40|$|In Fermilab's Main Ring bunch <b>coalescing</b> is used {{to produce}} intense proton and {{antiproton}} bunches for the Tevatron. For the bunch <b>coalescing,</b> 11 proton or antiproton bunches are rotated first in the fundamental rf harmonic of 53 MHz to reduce the momentum spread, then are rotated {{for a quarter of}} a period in a lower harmonic (h= 53 or 2. 5 MHz) and recaptured in a single 53 MHz bucket[1]. The 2. 5 voltage available for <b>coalescing</b> is 22 KV. Recently 3 new 2. 5 MHz <b>coalescing</b> cavities were installed[2] and the available 2. 5 voltage was tripled. The <b>coalescing</b> improvements from this upgrade will be described...|$|R
40|$|Abstract. We {{present a}} duality {{relation}} between two systems of <b>coalescing</b> random walks and an analogous duality relation between two systems of <b>coalescing</b> Brownian motions. Our results extends previous {{work in the}} literature and we apply it {{to the study of}} a system of <b>coalescing</b> Brownian motions with Poisson immigration. 1...|$|R
5|$|During Congressional Reconstruction, U.S. General John Schofield {{administered}} Virginia as Military District One. After 1866, {{according to}} the Radical Reconstruction Acts, a rebelling state which had vacated its delegation in the U.S. Congress was required to incorporate the 14th Amendment into its state constitution before it was allowed to participate again. By the time Schofield called a new state constitutional convention for 1868, three distinct parties had <b>coalesced</b> in Virginia. Radical Republicans, including most ex-slave freedmen, organized to advocate full political and social equality for blacks, but they wanted to exclude ex-Confederates from political participation either in government or at the ballot box. Moderate Unionists including many pre-war Whigs, sought political equality for blacks, but believed that ex-Confederates had {{to be included in}} the political community because of their majority in the white population. Conservatives wanted to ensure white control of the state without Radical influence on issues such as public education.|$|E
5|$|Greatly {{concerned}} about the growing partisanship within {{the government and the}} detrimental impact political parties could have on the fragile unity holding the nation together, Washington struggled throughout his eight-year presidency to hold rival factions together. He was, and remains, the only U.S. president never to be affiliated with a political party. In spite of his efforts, debates over Hamilton's economic policy, the French Revolution, and the Jay Treaty deepened ideological divisions. Those that supported Hamilton formed the Federalist Party, while his opponents <b>coalesced</b> around Secretary of State Thomas Jefferson and formed the Democratic-Republican Party. While criticized for furthering the partisanship he sought to avoid by identifying himself with Hamilton, Washington is nonetheless considered by scholars and political historians {{as one of the greatest}} presidents in American history, usually ranking in the top three with Abraham Lincoln and Franklin Delano Roosevelt.|$|E
5|$|Hunter gatherers {{settled the}} {{territory}} in the stone and iron ages, followed later by Bantu peoples. The population <b>coalesced</b> first into clans and then into kingdoms. The Kingdom of Rwanda dominated from the mid-18th century, with the Tutsi kings conquering others militarily, centralising power and later enacting anti-Hutu policies. Germany colonised Rwanda in 1884 as part of German East Africa, followed by Belgium, which invaded in 1916 during the First World War. Both European nations ruled through the kings and perpetuated a pro-Tutsi policy. The Hutu population revolted in 1959. They massacred numerous Tutsi and ultimately established an independent, Hutu-dominated state in 1962. The Tutsi-led Rwandan Patriotic Front launched a civil war in 1990. Social tensions erupted in the 1994 genocide, in which Hutu extremists killed an estimated 500,000 to 1.3 million Tutsi and moderate Hutu. The RPF ended the genocide with a military victory.|$|E
40|$|National audienceRegister {{allocation}} {{is often}} a two-phase approach: spilling of registers tomemory, followed by <b>coalescing</b> of registers. Extreme live-range splitting (-range splitting after each statement) enables optimal solutions based onILP, for both spilling and <b>coalescing.</b> However, while the solutions are easily found for spilling, for <b>coalescing</b> they are more elusive. This difficulty stemsfrom the huge size of interference graphs resulting from live-range splitting. This report focuses on optimal <b>coalescing</b> {{in the context of}} extreme live-rangesplitting. We present some theoretical properties that give rise to analgorithm for reducing interference graphs, while preserving optimality. Thisreduction consists mainly in finding and removing useless splitting points. Itis followed by a graph decomposition based on clique separators. The last optimizationconsists in two preprocessing rules. Any <b>coalescing</b> technique can be appliedafter these optimizations. Our optimizations have been tested on a standard benchmark, the optimal coalescingchallenge. For this benchmark, the cutting-plane algorithm for optimalcoalescing (the only optimal algorithm for <b>coalescing)</b> runs 300 times fasterwhen combined with our optimizations. Moreover, we provide all the solutions of theoptimal <b>coalescing</b> challenge, including the 3 instances that were previously unsolved...|$|R
40|$|Transactional Memory (TM) gives {{software}} developers {{the opportunity to}} write concurrent programs more easily compared to any previous programming paradigms and gives a performance comparable to lock-based synchronizations. Current Software TM (STM) implementations have performance overheads that can be reduced by introducing new abstractions in Transactional Memory programming model. In this thesis we present four new techniques for improving the performance of Software TM: (i) Abstract Nested Transactions (ANT), (ii) TagTM, (iii) profile-guided transaction <b>coalescing,</b> and (iv) dynamic transaction <b>coalescing.</b> ANT improves performance of transactional applications without breaking the semantics of the transactional paradigm, TagTM speeds up accesses to transactional meta-data, profile-guided transaction <b>coalescing</b> lowers transactional overheads at compile time, and dynamic transaction <b>coalescing</b> lowers transactional overheads at runtime. Our analysis shows that Abstract Nested Transactions, TagTM, profile-guided transaction <b>coalescing,</b> and dynamic transaction <b>coalescing</b> improve {{the performance of the}} original programs that use Software Transactional Memory. Postprint (published version...|$|R
40|$|Three-dimensional {{simulations}} of the off-axis collisions of two drops are presented. The full Navier-Stokes equations are solved by a front-tracking {{finite difference method}} that allows a fully deformable fluid interface and the inclusion of surface tension. Depending on whether the interface between the drops is ruptured or not, the drops either bounce or <b>coalesce.</b> For drops that <b>coalesce,</b> the impact parameter, which measures how far the drops are off the symmetry line, determines the eventual outcome of the collision. For small impact parameters the drops <b>coalesce</b> permanently, but for larger impact parameters a grazing collision, where the drops <b>coalesce</b> and then stretch apart again, is observed. The numerically found boundary between <b>coalescing</b> and grazing collisions is compared with experimental observations...|$|R
5|$|Hurricane Danny in August2015 was {{the first}} major {{hurricane}} to develop between the Lesser Antilles and Western Africa since Hurricane Julia in 2010. The hurricane originated from a well-defined tropical wave that emerged over the Atlantic Ocean on August14. Traveling west, the system gradually <b>coalesced</b> into a tropical depression by August18. After becoming a tropical storm later that day, dry air slowed further development. On August20–21, dry air became removed from the system, and Danny rapidly intensified into a Category3 on the Saffir–Simpson hurricane wind scale. Its peak was short-lived as wind shear soon increased and prompted significant weakening. Degrading to a tropical storm by August23, Danny approached the Lesser Antilles. It degenerated into a tropical wave as it traversed the archipelago on August24 and was last noted over Hispaniola the following day.|$|E
5|$|In Iberia, the Christian states, {{which had}} been {{confined}} to the north-western part of the peninsula, began to push back against the Islamic states in the south, a period known as the Reconquista. By about 1150, the Christian north had <b>coalesced</b> into the five major kingdoms of León, Castile, Aragon, Navarre, and Portugal. Southern Iberia remained under control of Islamic states, initially under the Caliphate of Córdoba, which broke up in 1031 into a shifting number of petty states known as taifas, who fought with the Christians until the Almohad Caliphate re-established centralised rule over Southern Iberia in the 1170s. Christian forces advanced again in the early 13th century, culminating in the capture of Seville in 1248.|$|E
5|$|In effect, the Spanish Constitution of 1812 {{adopted by}} the Cortes de Cadiz served {{as the basis for}} {{independence}} in New Spain and Central America, since in both regions it was a coalition of conservative and liberal royalist leaders who led the establishment of new states. The restoration of the Spanish Constitution and representative government was enthusiastically welcomed in New Spain and Central America. Elections were held, local governments formed and deputies sent to the Cortes. Among liberals, however, there was fear that the new regime would not last; and conservatives and the Church worried that the new liberal government would expand its reforms and anti-clerical legislation. This climate of instability created the conditions for the two sides to forge an alliance. This alliance <b>coalesced</b> towards the end of 1820 behind Agustín de Iturbide, a colonel in the royal army, who at the time was assigned to destroy the guerrilla forces led by Vicente Guerrero.|$|E
5000|$|The U.K. {{division}} of Earache Records {{was impressed by}} <b>Coalesce's</b> demo and invited them to record an EP for Earache's 7" [...] series imprint, New Chapter. The EP, titled 002, was recorded in one day and released in 1995. 002 {{marked the beginning of}} <b>Coalesce's</b> relationship with Red House Studios and producer Ed Rose, who would record all of <b>Coalesce's</b> following material.|$|R
40|$|Partitioned Global Address Space (PGAS) {{programming}} languages, such as Unified Parallel C (UPC), {{offer an}} attractive high-productivity programming model for programming large-scale parallel machines. PGAS languages partition the application’s address space into private, shared-local and shared-remote memory. When {{running in a}} distributed-memory environment, accessing shared-remote memory leads to implicit communication. For fine-grained accesses, which are frequently found in UPC programs, this communication overhead can significantly impact program performance. One solution for {{reducing the number of}} fine-grained accesses is to <b>coalesce</b> several accesses into a single access. This paper presents an analysis to identify opportunities for <b>coalescing</b> and an algorithm that allows the compiler to automatically <b>coalesce</b> accesses to shared-remote memory in UPC. It also describes how opportunities for <b>coalescing</b> can be created by the compiler through loop unrolling. Results obtained from <b>coalescing</b> accesses in manually-unrolled parallel loops are presented to demonstrate the benefit of combining parallel loop unrolling and communication <b>coalescing.</b> Peer ReviewedPostprint (published version...|$|R
40|$|Abstract The {{interference}} graph for {{a procedure}} in Static Single Assignment (SSA) Form is chordal. Since the k-colorability {{problem can be}} solved in polynomial-time for chordal graphs, this result has generated interest in SSA-based heuristics for spilling and <b>coalescing.</b> Since copies can be folded during SSA construction, instances of the <b>coalescing</b> problem under SSA have fewer affinities than traditional methods. This paper presents Optimistic Chordal Coloring (OCC), a <b>coalescing</b> heuristic for chordal graphs. OCC was evaluated on interference graphs from embedded/multimedia benchmarks: in all cases, OCC found the optimal solution, and ran, on average, 2. 30 × faster than Iterated Register <b>Coalescing...</b>|$|R
