3|23|Public
40|$|Abstract — Information {{security}} {{had become}} a significant concern {{and the most important}} issue of modern computing. The key factor of cryptography is to take a message and transform it to make it non understandable. A large number of ciphering algorithms are proposed with different categories. Two essential classes for the encryption algorithms are the stream and monoalphabetic ciphers. The advantages and disadvantages of the two classes are opposite each others. This work tries to combines the two encryption classes in single cipher. The Affine cipher used for that purpose {{as a member of the}} monoalphabetic <b>cipher</b> <b>class</b> and then it transform into a new version of the Affine cipher but as a stream <b>cipher</b> <b>class.</b> The proposed cipher is called as Internal Affine Stream Cipher. The new cipher is tested and comparing to the original affine cipher. The tests result show that the internal affine stream cipher has good security quality when it compare to the original affine cipher with more feature that it being a stream cipher category...|$|E
40|$|Data {{protection}} {{problem is}} relevant in now days living. This paper takes {{a review of}} the existing methods and programs in digital data cryptography. Also it explains AES (advanced encryption standard) method, the most trustful one and overviews software tool, that was coded and used in experiments analysing this algorithm. The new AES class, that was created in this project, is compared using few parameters with the older one, created by Microsoft. Despite the only purpose, to create a better program, the older implemented AES <b>cipher</b> <b>class</b> and it’s methods beats the new one...|$|E
40|$|Abstract- Information sharing is an vital {{utility in}} cloud storage. In this paper, we show secure, proficient, and {{adaptable}} strategy to impart information to other individuals in cloud storage framework. We portray new open key cryptosystems which create fixed size (single key) ciphertexts such that proficient assignments of decryption rights for any set of ciphertexts are conceivable. The novelty {{is that one}} can aggregate any arrangement of secret keys and make them as reduced as a solitary (single) key, however including the force of {{every last one of}} keys being amassed. As such, the secret key holder can discharge a constant size aggregate key for adaptable decisions of ciphertext set in cloud storage; with our proposed scheme it describes novel adaptive public-key cryptosystems. This reduced total key can be advantageously sent to security channels (e. g email) with exceptionally constrained secure storage space. With our proposed scheme it depicts novel versatile open key cryptosystems. At our previous framework every client can transfer and offer single record with unique index class records with consistent size total key it will turn into a testing issue to lessen the check of <b>cipher</b> <b>class</b> indexes files for mass documents towards enhance the space for more figure class lists. So as to address the above issue we presented a novel versatile ke...|$|E
5|$|The {{replacement}} {{remains the}} same throughout the message, so the <b>cipher</b> is <b>classed</b> {{as a type of}} monoalphabetic substitution, as opposed to polyalphabetic substitution.|$|R
40|$|This paper {{presents}} a large collection of new weak-key {{classes for the}} IDEA <b>cipher.</b> The <b>classes</b> {{presented in this paper}} contain 2 - 2 weak keys (as compared with 2 differential weak keys presented by Daemen at CRYPTO' 93 and 2 differential-linear weak-keys presented by Hawkes at EUROCRYPT' 98). The novelty of our approach is in the use of boomerang distinguishers for the weak-key class membership test. We als...|$|R
40|$|Vaudenay [1] {{proposed}} {{a new way}} of protecting block <b>ciphers</b> against <b>classes</b> of attacks, which was based on the notion of decorrelation. He also suggested two block cipher families COCONUT and PEANUT. Wagner [2] suggested a new differential-style attack called boomerang attack and cryptanalysed COCONUT' 98. In this paper we will suggest a new block cipher called DONUT which is made by two pairwise perfect decorrelation modules. DONUT is secure against boomerang attack...|$|R
40|$|Transposition <b>ciphers</b> are a <b>class</b> of {{historical}} encryption algorithms based on rearranging units of plaintext {{according to some}} fixed permutation which acts as the secret key. Transpositions form a building block of modern ciphers, and applications of metaheuristic optimisation techniques to classical ciphers hav...|$|R
5000|$|There {{are a large}} {{class of}} {{equivalent}} keys in the Multi2 block <b>cipher.</b> The largest <b>class</b> (so far found) {{stems from the fact}} that the Pi3 round function in the key schedule is not bijective. For example, with the following 40-byte input key to the key schedule: ...|$|R
40|$|This paper {{introduces}} {{a new class}} of the controlled primitives that are oriented to the use {{in the form of the}} data-dependent operations while designing fast hardwaresuitable <b>ciphers.</b> The proposed <b>class</b> represents a generalization of the known data-dependent permutations. New primitives are used to design switchable controlled operations and ciphers with simple key scheduling...|$|R
40|$|This paper {{presents}} a hardware-optimized {{variant of the}} well-known Gaussian elimination over GF(2) and its highly efficient implementation. The proposed hardware architecture, we call SMITH 1, can solve any regular and (uniquely solvable) overdetermined linear system of equations (LSE) and {{is not limited to}} matrices of a certain structure. Besides solving LSEs, the architecture at hand can also accomplish the related problem of matrix inversion extremely fast. Its average running time for n×n binary matrices with uniformly distributed entries equals 2 n (clock cycles) as opposed to about 1 4 n 3 in software. The average running time remains very close to 2 n for random matrices with densities much greater or lower than 0. 5. The architecture has a worst-case time complexity of O(n 2) and also a space complexity of O(n 2). With these characteristics the architecture is particularly suited to efficiently solve medium-sized LSEs as they for example appear in the cryptanalysis of certain stream <b>cipher</b> <b>classes.</b> Moreover, we propose a hardware-optimized algorithm for matrix-by-matrix multiplication over GF(2) which runs in linear time and quadratic space on a similar architecture. This opens up the possibility of building a more complex architecture for efficiently solving larger LSEs by means of Strassen’s algorithm. This architecture could significantly improve the time complexity of algebraic attacks on various ciphers. As proof-of-concept we realized SMITH on a contemporary low-cost FPGA. The implementation for a 50 × 50 LSE can be clocked with a frequency of up to 300 MHz and computes the solution in 0. 33 µs on average. ...|$|R
40|$|Algebraic {{and fast}} {{algebraic}} attacks are power tools to analyze stream <b>ciphers.</b> A <b>class</b> of symmetric Boolean functions with maximum algebraic immunity were found vulnerable to fast algebraic attacks at EUROCRYPT' 06. Recently, {{the notion of}} AAR (algebraic attack resistant) functions was introduced as a unified measure of protection against both classical algebraic and fast algebraic attacks. In this correspondence, we first give a decomposition of symmetric Boolean functions, then we show that almost all symmetric Boolean functions, including these functions with good algebraic immunity, behave badly against fast algebraic attacks, and we also prove that no symmetric Boolean functions are AAR functions. Besides, we improve the relations between algebraic degree and algebraic immunity of symmetric Boolean functions. Comment: 13 pages, submitted to IEEE Transactions on Information Theor...|$|R
40|$|The LILI-II {{keystream}} generator is a LFSR based synchronous {{stream cipher}} with a 128 bit key. LILI-II {{is a specific}} cipher from the LILI family of keystream generators, and was designed with larger internal components than previous <b>ciphers</b> in this <b>class,</b> {{in order to provide}} increased security. The design offers large period and linear complexity, is immune to currently known styles of attack, and is simple to implement in hardware or software. The cipher achieves a security level of 128 bits...|$|R
40|$|In {{this paper}} we {{investigate}} {{a new way}} for protecting block <b>ciphers</b> against <b>classes</b> of attacks (including differential and linear cryptanalysis) {{which is based on}} the notion of decorrelation distance which is fairly connected to Carter-Wegman's universal hash functions paradigm. This defines a simple and friendly combinatorial measurement which enables to quantify the security. We show that we can mix provable protections and heuristic protections. We finally propose two new block cipher families we call COCONUT and PEANUT, which implement these ideas and achieve quite reasonable performances for real-life applications. Before the second world war, security of encryption used {{to be based on the}} secrecy of the algorithm. Mass telecommunication and computer science networking however pushed the development of public algorithms with secret keys. The most important research result on encryption was found for the application to the telegraph by Shannon in the Bell Laboratories in 1949 [30 [...] ...|$|R
40|$|Abstract. This paper {{presents}} a large collection of new weak-key {{classes for the}} IDEA <b>cipher</b> 1. The <b>classes</b> {{presented in this paper}} contain 2 53 − 2 64 weak keys (as compared with 2 51 differential weak keys presented by Daemen at CRYPTO’ 93 and 2 63 differential-linear weak-keys presented by Hawkes at EUROCRYPT’ 98). The novelty of our approach is in the use of boomerang distinguishers for the weak-key class membership test. We also show large weak-key classes for reduced-round versions of IDEA. Key words: IDEA cipher, weak keys, boomerang attack, NESSIE. ...|$|R
40|$|Abstract. We {{study the}} {{security}} of key-alternating Feistel <b>ciphers,</b> a <b>class</b> of key-alternating <b>ciphers</b> with a Feistel structure. Alternatively, this {{may be viewed as}} the study of Feistel ciphers where the pseudoran-dom round functions are of the form Fi(x ⊕ ki), where ki is the (secret) round key and Fi is a public random function that the adversary is al-lowed to query in a black-box way. Interestingly, our results {{can be seen as a}} generalization of traditional results à la Luby-Rackoff in the sense that we can derive results for this model by simply letting the number of queries of the adversary to the public random functions Fi be zero in our general bounds. We make an extensive use of the coupling technique. In particular (and as a result of independent interest), we improve the anal-ysis of the coupling probability for balanced Feistel schemes previously carried out by Hoang and Rogaway (CRYPTO 2010) ...|$|R
40|$|Abstract — Simple {{substitution}} <b>ciphers</b> are a <b>class</b> of puzzles {{often found}} in newspapers, in which each plaintext letter is mapped to a fixed ciphertext letter and spaces are preserved. In this paper, we describe a system for automatically solving them, even when the ciphertext is too short for statistical analysis, and when the puzzle contains non-dictionary words. Our approach is a based around a dictionary attack; we describe several important performance optimizations, as well as effective techniques for dealing with non-dictionary words. We present quantitative performance results for several variations of our approach {{as well as two}} other implementations. I...|$|R
40|$|Cloud {{storage is}} an {{online data storage}} and it is located as centrally. Cloud data ownerprovidethe {{facility}} for users to online store their data and access from any location. Though it has reliable for the user to achieve a secure and dependent cloud storage service. Ina key aggregate crypto-systemkey is generated fordifferent attributes of data in different <b>cipher</b> text <b>classes</b> and its associated keys. It derived aggregate key {{on the basis of}} attribute and identitywhich, depending on the different classes according to cloud data owner. By using this technique aunique cryptographic key achieves. It is optimallysecure for cloud data and privacy preserving key generating process. The cloud data ownerdecidesthe access levelof the data, such as public, private and hierarchyaccess level in order toenhance the data access capability in a data sharing cloud mechanism. Blowfish is thebest data security algorithm. It is higher security and faster execution as compared toother cryptographic algorithms. The blowfish algorithmis a secure for storing data in the cloud. It is an effective derivation of secret key generation and key management...|$|R
40|$|A {{class of}} {{symmetric}} iterative block ciphers called SIBCiphers is defined. Each {{round of a}} <b>cipher</b> in this <b>class</b> is represented by an injective system of Boolean functions each depending on {{a small number of}} arguments being some inputs to the round. Round key in it includes some of these functions and (or) their actual arguments. The ciphertext bitstring is obtained by permuting the bits on the outputs of the last round. Contemporary symmetric block ciphers with additive round keys belong to this class. Two other subclasses of SIBCiphers are described. They are called by names Lucifer and Feistel and constructed according to the known cryptographic schemes originally suggested by H. Feistel and implemented in ciphers LUCIFER and DES respectively. Some synthesis problems for SIBCiphers are discussed...|$|R
40|$|Abstract. In {{this paper}} we {{investigate}} nonlinear equivalence of stream ciphers over a finite field, {{exemplified by the}} pure LFSR-based filter generator over F 2. We define a nonlinear equivalence class consisting of filter generators of length n that generate a binary keystream of period dividing 2 n − 1, and investigate certain cryptographic properties of the <b>ciphers</b> in this <b>class.</b> We show {{that a number of}} important cryptographic properties, such as algebraic immunity and nonlinearity, are not invariant among elements of the same equivalence class. It follows that analysis of cipher-components in isolation presents some limitations, as it most often involves investigating cryptographic properties that vary among equivalent ciphers. Thus in order to assess the resistance of a cipher against a certain type of attack, one should in theory determine the weakest equivalent cipher and not only a particular instance. This is however likely to be a very difficult task, when we consider the size of the equivalence <b>class</b> for <b>ciphers</b> used in practice; therefore assessing the exact cryptographic properties of a cipher appears to be notoriously difficult...|$|R
40|$|Encryption {{is being}} used more than ever before. It is used to prevent {{eavesdropping}} on our communications over cell phone calls and Internet, securing network connections, making e-commerce and e-banking possible and generally hiding information from unwanted eyes. The performance of encryption functions is therefore important as slow working implementation increases costs. At server side faster implementation can reduce the required capacity and on client side it can lower the power usage. Block <b>ciphers</b> are a <b>class</b> of encryption functions that are typically used to encrypt large bulk data, and thus make them a subject of many studies when endeavoring greater performance. The x 86 - 64 architecture is the most dominant processor architecture in server and desktop computers; it has numerous different instruction set extensions, which make the architecture a target of constant new research on fast software implementations. The examined block ciphers – Blowfish, AES, Camellia, Serpent and Twofish – are widely used in various applications and their different designs make them interesting objects of investigation. Several optimization techniques to speed up implementations have been reported i...|$|R
40|$|International audienceIn this paper, we {{describe}} {{work in progress}} on novel related-key distinguishers applicable to key-alternating block <b>ciphers,</b> a wide <b>class</b> of symmetric-key primitives. This class includes the AES finalists Rijndael and Serpent {{as well as many}} other block ciphers having SPN structure, including many Feistel networks. Unlike the known differential related-key techniques, our distinguishers are essentially of linear nature and make use of how exactly that linear hulls of key-alternating ciphers are structured when encrypting under different keys. By partitioning the linear trails contained in these hulls into a " signal " part (known enumerated trails) and a " noise " part (the unknown remainder of the hull), we develop statistical models for differences and sums of linear hull correlations when evaluated under different keys. We then observe that for concrete key-alternating ciphers, the differences or sums of correlations tend to differ from the ideal behaviour, admitting a structural distinguisher. Unlike the key-difference invariant bias technique from ASIACRYPT 2013, our models allow for an intersection of the key difference with active bits of trails contained in the linear hull under consideration. This opens up possibilities for more powerful and generally applicable distinguish-ers...|$|R
40|$|Abstract. We {{propose a}} tool 1 for {{automatic}} search for differential trails in ARX ciphers. By introducing {{the concept of}} a partial difference distribution table (pDDT) we extend Matsui’s algorithm, originally proposed for DES-like <b>ciphers,</b> to the <b>class</b> of ARX <b>ciphers.</b> To {{the best of our knowledge}} this is the first application of Matsui’s algorithm to ciphers that do not have S-boxes. The tool is applied to the block ciphers TEA, XTEA, SPECK and RAIDEN. For RAIDEN we find an iterative characteristic on all 32 rounds that can be used to break the full cipher using standard differential cryptanalysis. This is the first cryptanalysis of the cipher in a non-related key setting. Differential trails on 9, 10 and 13 rounds are found for SPECK 32, SPECK 48 and SPECK 64 respectively. The 13 round trail covers half of the total number of rounds. These are the first public results on the security analysis of SPECK. For TEA multiple full (i. e. not truncated) differential trails are reported for the first time, while for XTEA we confirm the previous best known trail reported by Hong et al [...] We also show closed formulas for computing the exact additive differential probabilities of the left and right shift operations...|$|R
40|$|We {{propose a}} tool for {{automatic}} search for differential trails in ARX ciphers. By introducing {{the concept of a}} partial difference distribution table (pDDT) we extend Matsui's algorithm, originally proposed for DES-like <b>ciphers,</b> to the <b>class</b> of ARX <b>ciphers.</b> To {{the best of our knowledge}} this is the first application of Matsui's algorithm to ciphers that do not have S-boxes. The tool is applied to the block ciphers TEA, XTEA, SPECK and RAIDEN. For RAIDEN we find an iterative characteristic on all 32 rounds that can be used to break the full cipher using standard differential cryptanalysis. This is the first cryptanalysis of the cipher in a non-related key setting. Differential trails on 9, 10 and 13 rounds are found for SPECK 32, SPECK 48 and SPECK 64 respectively. The 13 round trail covers half of the total number of rounds. These are the first public results on the security analysis of SPECK. For TEA multiple full (i. e. not truncated) differential trails are reported for the first time, while for XTEA we confirm the previous best known trail reported by Hong et al. We also show closed formulas for computing the exact additive differential probabilities of the left and right shift operations. The source code of the tool is publicly available as part of a larger toolkit for the analysis of ARX at the following address: [URL]...|$|R
40|$|The Data Encryption Standard (DES) is a {{block cipher}} {{standard}} {{published by the}} National Institute of Standards and Technology (NIST) in 1977. Block <b>ciphers</b> are a <b>class</b> of symmetric-key encryption algorithms that transform a fixed-length block of plaintext (unencrypted text) into a block of ciphertext (encrypted text) of the same length. This transformation takes place under the action of a user-provided secret key. Decryption is performed by applying the reverse transformation using the same secret key. DES, relies heavily on the ideas of Claude Shannon and the concepts of diffusion and confusion. The aim of diffusion is to spread the influence of {{all parts of the}} inputs to a block cipher (the plaintext and the key) to all parts of the output (ciphertext). The aim of confusion is to make the relationship between the plaintext, ciphertext and key complicated. The exploration of structural properties of a block cipher is important since it can give insights about the security the cipher. For most types of block ciphers it is common to investigate the structural properties of small scale variants of the cipher to provide a fully understandable framework for the analysis of the full cipher and its security. We study the design and the security of a simplified version of DES that has many features of DES...|$|R
40|$|Abstract Encryption {{is being}} used more than ever before. It is used to prevent {{eavesdropping}} on our communications over cell phone calls and Internet, securing network connections, making e-commerce and e-banking possible and generally hiding information from unwanted eyes. The performance of encryption functions is therefore important as slow working implementation increases costs. At server side faster implementation can reduce the required capacity and on client side it can lower the power usage. Block <b>ciphers</b> are a <b>class</b> of encryption functions that are typically used to encrypt large bulk data, and thus make them a subject of many studies when endeavoring greater performance. The x 86 - 64 architecture is the most dominant processor architecture in server and desktop computers; it has numerous different instruction set extensions, which make the architecture a target of constant new research on fast software implementations. The examined block ciphers — Blowfish, AES, Camellia, Serpent and Twofish — are widely used in various applications and their different designs make them interesting objects of investigation. Several optimization techniques to speed up implementations {{have been reported in}} previous research; {{such as the use of}} table look-ups, bit-slicing, byte-slicing and the utilization of “out-of-order” scheduling capabilities. We examine these different techniques and utilize them to construct new implementations of the selected block ciphers. Focus with these new implementations is in modes of operation which allow multiple blocks to be processed in parallel; such as the counter mode. The performance measurements of new implementations were carried out by using the System for Unified Performance Evaluation Related to Cryptographic Operations and Primitives (SUPERCOP) framework on four different processors: AMD K 8, AMD K 10, Intel Core 2 and Intel Sandy-Bridge. The parallel processing permitted by particular modes of operation can improve performance of a block cipher even with traditional table look-up optimization. Bit-slicing, byte-slicing and word-slicing can be used to parallelize block cipher processing in vector registers. These ‘sliced’ techniques can improve the throughput of block cipher implementations significantly compared to table look-up based approaches. Our byte-sliced AES-NI/AVX implementation of Camellia reaches the speed of 5. 32 cycles per byte on Intel Sandy-Bridge processor, being 2. 65 times faster than our two-way table look-up implementation and 3. 96 times faster than the implementation found in the OpenSSL library...|$|R

