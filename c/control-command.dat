47|3|Public
50|$|<b>Control-command,</b> mechatronics, fluid power, robotics, medical {{diagnosis}} and dependability.|$|E
50|$|The {{need for}} a system like ETCS stems from more and longer running trains {{resulting}} from economic integration of the European Union (EU) and the liberalisation of national railway markets. At {{the beginning of the}} 1990s were some national high speed train projects supported by EU without interoperability of trains. This catalysed the Directive 1996/48 about the interoperability of high-speed trains, followed by Directive 2001/16 extending the concept of interoperability to the conventional rail system. ETCS specifications have become part of, or are referred to, the Technical Specifications for Interoperability (TSI) for (railway) <b>control-command</b> systems. So it is a piece of European legislation managed by the European Union Agency for Railways (ERA). It is a legal requirement that all new, upgraded or renewed tracks and rolling stock in the European railway system should adopt ETCS, possibly keeping legacy systems for backward compatibility. Many networks outside the EU have also adopted ETCS, generally for high-speed rail projects.|$|E
30|$|As explain above, the {{interchangeability}} aims {{to harmonise}} interfaces for <b>control-command,</b> energy saving and access sub-assemblies for metro and light rail rolling stock.|$|E
50|$|UPnP Remote User Interface (RUI) client/server - which sends/receives <b>control-commands</b> {{between the}} UPnP-client and UPnP-server over network, (like record, schedule, play, pause, stop, etc.).|$|R
40|$|For {{advanced}} {{clinical and}} biometrics applications, various implantable neural sensors are fabricated by CMOS-LSI technologies [1, 2]. However the CMOS device {{has a large}} flicker noise and deviation of threshold voltage, CMOS Operational-amplifier (Opamp) hardly amplifies a weak neural signal. Thus the system has to implement a low-noise amplifier which can reduce these noises. Moreover, the implantable systems need a reception of system <b>control-commands</b> and a transmission of sensor data using a wireless communication. In this paper, we propose the architecture of a neural sensing system, which includes low-noise amplifier and wireless transceiver implemented with a conventional CMOS technology. This study is related to RF analo...|$|R
40|$|Recent major oil-spills were tracked using {{observations}} {{with sufficient}} altitudes {{over the sea}} surface, to detect oil slick locations. For oil-spill responders, we propose a captive Unmanned Aerial System, UAS acting like a periscope over a ship or supply vessel. The system is composed of an umbilical deployed from ship deck, and there are few studies that have examined elasticity within cable dynamic during take-off or landing (TOL) and normal flight phases. Therefore, the safest approach for the <b>control-commands</b> {{of the system is}} through umbilical dynamic modelling. We give a time-dependant finite-element formulation, using improved elastic non-linear cable elements. Two kinds of boundary condition, natural or essential, are discussed for roll-in or roll-out of the umbilical. A numerical convergence and a validation with an exact solution are provided, using two examples for the flight parameters. Finally, sensitivity of the model potentially extends its capacity for the system equilibrium prediction, under wind primary influence. Comment: 12 page...|$|R
40|$|International audienceThis paper {{presents}} a safe design method for <b>control-command</b> embedded systems. It investigates {{the problem of}} building <b>control-command</b> systems out of Commercial off the shelf (COTS) components. The design method proposed uses in synergy the formal verification (FV) and the Discrete Controller Synthesis (DCS) techniques. COTS are formally specified using temporal logic and/or executable observers. New functions are built by assembling COTS together. As the COTS assembly operation is seldom error-free, behavioral incompatibilities may persist between COTS. For these reasons, COTS assemblies need to be formally verified and if errors are found, an automatic correction is attempted using DCS. The <b>control-command</b> code generated by DCS needs hardware specific post-processing: a structural decomposition, followed by a controllability assessment, followed by a dedicated formal verification step, ensuring that no spurious behavior is added by DCS. The resulting system is ready for hardware (e. g. FPGA) implementation...|$|E
40|$|Hybrid {{systems are}} a widely used model to {{represent}} and reason about <b>control-command</b> systems. Most {{of the work}} in this domain is devoted to compute reachable sets of hybrid automata or equivalent models. However, in an industrial context, <b>control-command</b> systems are often implemented in Simulink and their validity is checked using numerical simulation. In this article, we present a tool named HySon that performs set-based simulation of hybrid systems with uncertain parameters, expressed in Simulink. Our tool handles advanced features such as non-linear operations, zero-crossing events or discrete sampling. It is based on well-known, efficient numerical algorithms that were adapted to handle set-based domains. We demonstrate the performance of our method on various examples. 1...|$|E
40|$|ASTRÉE is an {{abstract}} interpretation-based static program analyzer aiming at proving automatically {{the absence of}} run time errors in programs written in the C programming language. It has been applied with success to large embedded <b>control-command</b> safety critical realtime software generated automatically from synchronous specifications, producing a correctness proof for complex software without any false alarm {{in a few hours}} of computation...|$|E
40|$|Subsystem {{facilities}} flexible {{data acquisition}} by combining {{hardware and software}} processing. Device controls complex signal acquisition sequence and assists in precise phase locking to received signal. Key features include software system and code-generator initialization routines, executive routine, utility subroutines, control sequence routines for each receiver acquisition state, <b>control-command</b> decoding routine, and look-up tables for code-generator configuration versus code-set number. Steps {{can be added to}} extend input signal dynamic range...|$|E
30|$|Interoperability is {{the ability}} of a {{transport}} network to operate safely different trains on interoperable infrastructures, communicating the necessary <b>control-command</b> data with the trackside (without major change in functionality or performance). This ability supposes that all regulations, technical and operational conditions are met in compliance with the requirements applicable for a given grade of automation of the line. Interoperability also means that the sidetrack is able to work with trains, which are equipped at a smaller automation level.|$|E
40|$|International audienceThe Laser Megajoule {{project is}} a major {{component}} of the French simulation program to study nuclear fusion by inertial confinement. The future Laser Megajoule facility requires <b>control-command</b> systems that will operate in a harsh radiative environment. Commercial off-the-shelf optical fiber data links are envisaged as a radiation tolerant solution for this application. In this paper, we present our preliminary study of their vulnerability. For this, we firstly have used an original method consisting of ultraviolet (5 eV) exposures of the fibers to identify the different germanosilicate optical fibers containing phosphorus, which leads them unacceptable for both steady state -rays and successive pulsed X-ray irradiations. We have demonstrated the validity of the -UV comparison by spectroscopic measurements. After this first selection, we have tested under pulsed X-rays (dose rate > 10 MGy/s dose 0 5 < kGy) the resistance of the P-free optical fibers at 1310 nm for the shortest times after an ionization pulse (10 - 9 to 10 - 1 s). Based on these results, we discuss the validity of the optical fiber data links for the <b>control-command</b> applications in LMJ facility...|$|E
40|$|Abstract: This article {{investigates the}} {{alignment}} between technical and institutional coordination mechanisms {{in the context}} of the European railways reform for the <b>Control-Command</b> and Signaling sub-system. The deployment of the new signaling system (ERTMS) across heterogeneous institutional and technical environments raises diverse issues. These are empirically analyzed by taking the case of the ERTMS corridor D (Valencia-Budapest) with a special concern for cross-border sections and the role a specif-ically designed micro-institution plays in ruling this priority project. [ [...] . ] 1 I am very grateful to Région Ile-de-France for funding my Ph. D. 1...|$|E
40|$|International audienceNumerical {{methods are}} {{necessary}} to understand the behav- iors of complex hybrid systems used to design <b>control-command</b> systems. Especially, numerical integration methods are heavily used in simulation to compute approximations of the solution of differential equations, in- cluding non-linear and stiff solutions. Nevertheless, these methods only produce approximate results and {{they should not be}} used in formal ver- ification methods as is. We propose a systematic way to make explicit Runge-Kutta integration method safe with respect to the mathemati- cal solution. As side effect, we can hence compare different integration schemes in order to pick the right one in different situations...|$|E
40|$|International audienceHybrid {{systems are}} a widely used model to {{represent}} and reason about <b>control-command</b> systems. In an industrial context, these are often implemented in Simulink and their validity is checked by performing many numerical simulations {{in order to}} test their behavior with various possible inputs. In this article, we present a tool named HySon which performs set-based simulation of hybrid systems with uncertain parameters, expressed in Simulink. Our tool handles advanced features such as non-linear operations, zero-crossing events or discrete sampling. It is based on well-known efficient numerical algorithms that were adapted to handle set-based domains. We demonstrate the performance of our method on various examples...|$|E
40|$|International audienceThis paper investigates an {{industrial}} design issue related to code reusability: building <b>control-command</b> systems out of Commercial {{off the shelf}} (COTS) components. The design method proposed uses in synergy the formal verification (FV) and the discrete controller synthesis (DCS) techniques. COTS are formally specified using temporal logic and/or executable observers, and coded according to their formal specification. New functions are built by assembling COTS together. The COTS assembly operation is not error free: the resulting assembly may not achieve the desired function it is supposed to. For these reasons, COTS assemblies need to be formally verified and if errors are found, they must be corrected using DCS. The resulting system is ready for hardware (e. g. FPGA) implementation...|$|E
40|$|Abstract: Hybrid automata {{are often}} cited as the best model to {{describe}} and analyze controlcommand systems. However, no formal link exists between this high-level description and the low-level implementation of the control law (in C for example). In this article, we propose a framework that computes from a synchronous program an equivalent hybrid automata. To do this, we use an intermediate model, namely sampled hybrid automata (or S-HA in short), that are a restriction of hybrid automata in which each location has a specific sampling rate. We show that these S-HA can be translated into equivalent hybrid automata, and show that we can automatically construct, from a <b>control-command</b> program, a S-HA. We also show that both models are equivalent w. r. t. the continuous trajectories...|$|E
30|$|On {{international}} trains, onboard {{equipment for}} the various national control command systems must be installed. This {{is becoming more and}} more expensive due to the increasing sophistication and expense of equipment. A train crossing several European countries must switch to the <b>control-command</b> systems in the country it crosses. So, in order to remove these obstacles through the European rail network, the European Commission encouraged the development of a signalling and management system common to all member states: the ERTMS system (European Rail Traffic Management System). This will, therefore, reduce the validation and certification costs of ERTMS component implementation in different member states. The objective of this research work is to facilitate the interoperability through the mutual recognition of the ERTMS components between the member states by proposing test scenarios enabling cover checking.|$|E
40|$|International audienceThe Anaxagore Project {{provides}} a component-based design ow for reconfigurable socio-technical systems. Each component integrates a control {{program and a}} supervision interface {{and it has been}} validated by empirical testing. The {{purpose of this paper is}} the use of formal methods for the verification of the whole component <b>control-command</b> chain. Different component features (the control program, the supervision interface, the physical device) and the human tasks are modeled using timed automata. These timed automata are then checked by model checking (UPPAAL) with a set of safety and usability properties written in CTL. Our approach is presented through an industrial case study: the supervised control of a 2 -way motorized valve. The results show that the use of formal techniques enables to successfully detect control program and supervision interface design errors...|$|E
40|$|International audienceModel-based {{design is}} a widely used {{methodology}} {{for the development of}} embedded critical software, such as a discrete controller for a continuous plant. In this setting, numerical simulation of both the plant and the controller plays a crucial role, since it is used to validate the design choices {{in the early stages of}} development. However, classical numerical simulation has inherent limitations: it is of limited precision and cannot deal with the intrinsic non-determinism present in complex systems. In this article, we present a tool named HySon that overcomes these drawbacks. It takes as input a Simulink model of a <b>control-command</b> system with non-deterministic uncertainties and automatically computes flow-pipes that contain all possible trajectories of the system. We show on some examples how HySon can be used to improve the quality of model-based design...|$|E
40|$|International audienceWe {{propose a}} method for {{automatically}} generating abstract transformers for static analysis by abstract interpretation. The method focuses on linear constraints on programs operating on rational, real or floating-point variables and containing linear assignments and tests. In addition to loop-free code, the same method also applies for obtaining least fixed points as functions of the precondition, which permits the analysis of loops and recursive functions. Our algorithms are based on new quantifier elimination and symbolic manipulation techniques. Given the specification of an abstract domain, and a program block, our method automatically outputs an implementation of the corresponding abstract transformer. It is thus a form of program transformation. The motivation of our work is data-flow synchronous programming languages, used for building <b>control-command</b> embedded systems, but it also applies to imperative and functional programming...|$|E
40|$|Abstract—Model-based {{design is}} a widely used {{methodology}} {{for the development of}} embedded critical software, such as a discrete controller for a continuous plant. In this setting, numerical simulation of both the plant and the controller plays a crucial role, since it is used to validate the design choices {{in the early stages of}} development. However, classical numerical simulation has inherent limitations: it is of limited precision and cannot deal with the intrinsic non-determinism present in complex systems. In this article, we present a tool named HySon that overcomes these drawbacks. It takes as input a Simulink model of a <b>control-command</b> system with non-deterministic uncertainties and automatically computes flow-pipes that contain all possible trajectories of the system. We show on some examples how HySon can be used to improve the quality of model-based design. I...|$|E
40|$|Modern <b>control-command</b> systems {{often include}} {{controllers}} that perform nonlinear computations {{to control a}} physical system, which can typically be described by an hybrid automaton containing highdimensional systems of nonlinear differential equations. To prove safety of such systems, one must compute all the reachable sets from a given initial position, which might be uncertain (its value is not precisely known). On linear hybrid systems, efficient and precise techniques exist, but they fail to handle nonlinear flows or jump conditions. In this article, we present a new tool name HySon which computes the flowpipes of both linear and nonlinear hybrid systems using guaranteed generalization of classical efficient numerical simulation methods, including with variable integration step-size. In particular, we present an algorithm for detecting discrete events based on guaranteed interpolation polynomials {{that turns out to}} be both precise and efficient. Illustrations of the techniques developed in this article are given on representative examples. ...|$|E
40|$|ASTRÉE was {{the first}} static {{analyzer}} able to prove automatically the total absence of runtime errors of actual industrial programs of hundreds of thousand lines. What makes ASTRÉE such an innovative tool is its scalability, while retaining the required precision, when {{it is used to}} analyze a specific class of programs: that of reactive <b>control-command</b> software. In this paper, we discuss the important choice of algorithms and data-structures we made to achieve this goal. However, what really made this task possible was the ability interpretation framework. We discuss the way the precision of the semantics was tuned in ASTRÉE in order to scale up, the differences with some more academic approaches and some of the dead-ends we explored. In particular, we show a development process which was not specific to the particular usage ASTRÉE was built for, hoping that it might prove helpful in building other scalable static analyzers...|$|E
40|$|Abstract. We {{propose a}} method for {{automatically}} generating abstract transformers for static analysis by abstract interpretation. The method focuses on linear constraints on programs operating on rational, real or floating-point variables and containing linear assignments and tests. Given the specification of an abstract domain, and a program block, our method automatically outputs an implementation of the corresponding abstract transformer. It is thus a form of program transformation. In addition to loop-free code, the same method also applies for obtaining least fixed points as functions of the precondition, which permits the analysis of loops and recursive functions. The motivation of our work is data-flow synchronous programming languages, used for building <b>control-command</b> embedded systems, but it also applies to imperative and functional programming. Our algorithms are based on new quantifier elimination and symbolic manipulation techniques over linear arithmetic formulas. We also give less general results for nonlinear constraints and nonlinear program constructs. 1...|$|E
40|$|Abstract. In this article, {{we study}} the {{interactions}} between a controlcommand program and its physical environment via sensors and actuators. We are interested in finding invariants on the continuous trajectories of the physical values that the program is supposed to control. The invariants {{we are looking for}} are periodic sequences of intervals that are abstractions of the values read by the program. To compute them, we first build octrees that abstract the impact of the program on its environment. Then, we compute a period of the abstract periodic sequence and we finally define the values of this sequence as the fixpoint of a monotone map. We present a prototype analyzer that computes such invariants for C programs using a simple specification language for describing the continuous environment. It shows good results on classical benchmarks for hybrid systems verification. 1 Introduction. The behavior of an embedded, <b>control-command</b> program depends on both...|$|E
40|$|Abstract. Modern <b>control-command</b> systems {{often include}} {{controllers}} that perform nonlinear computations {{to control a}} physical system, which can typically be described by an hybrid automaton containing highdimensional systems of nonlinear differential equations. To prove safety of such systems, one must compute all the reachable sets from a given initial position, which might be uncertain (its value is not precisely known). On linear hybrid systems, efficient and precise techniques exist, but they fail to handle nonlinear flows or jump conditions. In this article, we present a new tool name HySon which computes the flowpipes of both linear and nonlinear hybrid systems using guaranteed generalization of classical efficient numerical simulation methods, including with variable integration step-size. In particular, we present an algorithm for detecting discrete events based on guaranteed interpolation polynomials {{that turns out to}} be both precise and efficient. Illustrations of the techniques developed in this article are given on representative examples. ...|$|E
40|$|Synchronous {{reactive}} languages allow a {{high level}} deterministic description of reactive systems such as <b>control-command</b> systems. Their well defined mathematical semantics {{makes it possible to}} check formal properties on the control of a system. In previous work, we developed an object-oriented execution model for synchronous reactive modules. This model is implemented as a set of tools and a C++ class library, and allows us to use object-oriented methodologies and tools for the design of complex applications with both transformational and reactive parts. Among these design tools, the Ptolemy system stands as an object-oriented framework that supports various execution models, or "domains". We are currently working on a translator from the output format of the Lustre and Esterel compilers to the Ptolemy language. Since no existing domain matches the reactive synchronous execution model, we also plan to develop a SEC (Synchronous Execution and Communication) domain. Such a domain will provi [...] ...|$|E
40|$|We {{propose a}} method for {{automatically}} generating abstract transformers for static analysis by abstract interpretation. The method focuses on linear constraints on programs operating on rational, real or floating-point variables and containing linear assignments and tests. Given the specification of an abstract domain, and a program block, our method automatically outputs an implementation of the corresponding abstract transformer. It is thus a form of program transformation. In addition to loop-free code, the same method also applies for obtaining least fixed points as functions of the precondition, which permits the analysis of loops and recursive functions. The motivation of our work is data-flow synchronous programming languages, used for building <b>control-command</b> embedded systems, but it also applies to imperative and functional programming. Our algorithms are based on quantifier elimination and symbolic manipulation techniques over linear arithmetic formulas. We also give less general results for nonlinear constraints and nonlinear program constructs. Comment: final version submitted to LMC...|$|E
40|$|Abstract In {{spite of}} the {{progress}} in software engineering practice over the recent years, the synthesis and implementation of real-time applications remains a challenging task. In this article, we look at methods and tools for fast delivery of applications {{in the context of}} factory automation; more specifically in the field of industrial robotics and for numerical controller of machine-tools. We introduce a scheduling language together with a general framework in which both kinds of applications can be expressed. Its purpose it to generate a real-time controller tuned for the application described. We show how this tool is used for the specification, the simulation and the implementation of the <b>control-command</b> systems. Our language extends the statecharts introduced by D. Harel for the purpose of flexible manufacturing and robot control. It inherits from the statecharts most of their features, such as the visual formalism, the semantics and its modularity. But, contrary to the orig [...] ...|$|E
40|$|Abstract ASTRÉE was {{the first}} static {{analyzer}} able to prove automatically the total absence of runtime errors of actual industrial programs of hundreds of thousand lines. What makes ASTRÉE such an innovative tool is its scalability, while retaining the required precision, when {{it is used to}} analyze a specific class of programs: that of reactive <b>control-command</b> software. In this paper, we discuss the important choice of algorithms and data-structures we made to achieve this goal. However, what really made this task possible was the ability interpretation framework. We discuss the way the precision of the semantics was tuned in ASTRÉE in order to scale up, the differences with some more academic approaches and some of the dead-ends we explored. In particular, we show a development process which was not specific to the particular usage ASTRÉE was built for, hoping that it might prove helpful in building other scalable static analyzers. This work was supported by the INRIA project-team ABSTRACTION common to the CNRS and th...|$|E
40|$|GdR MACS Young PhD Researchers - Open Invited Track of Extended AbstractInternational audienceIndustrial Control Systems (ICS) {{have become}} a new target of attackers since the {{beginning}} of the century. Computer worm Stuxnet proved the vulnerability of these systems to cyber-attacks. <b>Control-command</b> architecture is built to ensure the safety and the reliability of the system and the environment, however, several attacks or studies have underlined the lack of protection of components in an ICS. They equally proved the incomplete solutions proposed by the Information technology (IT). This paper presents an innovative approach for intrusion detection system in ICS based on the notions of states and distance between sets of states. Distance assessment over time between common and forbidden states of the system provides the prediction and discrimination of deviations. A proposed algorithm analyses orders sent to actuators continuously and enables to stop dangerous orders for the system. This study is supported by simulations inspired by classical ICS...|$|E
40|$|Abstract. ASTR'EE is an {{abstract}} interpretation-based static program analyzer aiming at proving automatically {{the absence of}} run time errors in programs written in the C programming language. It has been applied with success to large embedded <b>control-command</b> safety critical realtime software generated automatically from synchronous specifications, producing a correctness proof for complex software without any false alarm {{in a few hours}} of computation. 1 Introduction Software development, testing, use, and evolution is nowadays a major concernin many machine-driven human activities. Despite progress in the science of computing and the engineering of software aiming at developing larger and morecomplex systems, incorrect software is not so uncommon and sometimes quite problematic. Hence, the design of sound and efficient formal program verifiers,which has been a long-standing problem, is a grand challenge for the forthcoming decades. All automatic proof methods involve some form of approximation of programexecution, as formalized by abstract interpretation. They are sound but incomplete whence subject to false alarms, that is desired properties that cannot beproved to hold, hence must be signaled as potential problems, even though they do hold at runtime...|$|E
40|$|International audienceNenuFAR {{is both a}} giant {{extension}} of the LOFAR and a large standalone instrument in the low-frequency range (10 - 85 MHz). It was designed in Nançay with national and international collaboration. Antenna radiators were modeled on the LWA antenna design whereas preamplifiers were designed in France. Antennas will be distributed in 96 mini-arrays of 19 dual-polarized elements, densely covering a disk of 400 m in diameter. A few mini-arrays are expected to lie at distances of 2 - 3 km. A silent <b>control-command</b> system was designed, and the computer dialog with LOFAR defined. Receivers will include the LOFAR backend, a local beamformer and a local correlator. NenuFAR is in construction in Nançay and it was recently granted by the SKA office the official label of SKA pathfinder. Its exploitation will expand the scope of LOFAR scientific studies as well as permit new studies, preparing for SKA science. The NenuFAR concept has many points in common with GURT (the Giant Ukrainian Radio Telescope), with which it shares some technical studies, an its exploitation will benefit from a coordination with UTR- 2. We describe the instrument, technical developments and science case...|$|E
40|$|Objectives of Automation {{courses are}} {{knowledge}} and know-how transfer to students. It {{is important for}} learner to control locally or remotely real systems composed of many sensors and actuators. The use of these devices poses several problems. Firstly, {{it is difficult to}} adapt them to the student’s level (from beginner to expert). Secondly, these systems are generally designed with industrial components. An error on the <b>control-command</b> design can involve safety problems and breakdowns. Technologies today allow remote use of plant. That makes it possible to improve the availability of the work practice rooms but ask pedagogy and safety questions. In this paper, we propose an original solution to solve these 2 problems. In order to guarantee the safety of the operators and the equipment, an approach using a validation filter is proposed. It is based on the logical constraints which should in no case to be violated. In order to adapt the difficulty level, it is proposed to modify the level of automation. For that, the functional dimension of the automation system is modified to adapt the student’s level of autonomy. In order to validate the approach, we applied it to an original project with 10 year old children on a packaging system. ...|$|E
40|$|The is an {{extended}} paper {{version of the}} invited talk Numerical Domains for Software Verification By Abstract Interpretation of Patrick Cousot at the first international workshop on Numerical Abstractions for Software Verification (NSV' 08), Princeton, July 8 th, 2008. International audienceAstrée was the first static analyzer able to prove automatically the total absence of runtime errors of actual industrial programs of hundreds of thousand lines. What makes Astrée such an innovative tool is its scalability, while retaining the required precision, when {{it is used to}} analyze a specific class of programs: that of reactive <b>control-command</b> software. In this paper, we discuss the important choice of algorithms and data-structures we made to achieve this goal. However, what really made this task possible was the ability to also take semantic decisions, without compromising soundness, thanks to the abstract interpretation framework. We discuss the way the precision of the semantics was tuned in Astrée in order to scale up, the differences with some more academic approaches and some of the dead-ends we explored. In particular, we show a development process which was not specific to the particular usage Astrée was built for, hoping that it might prove helpful in building other scalable static analyzers...|$|E
