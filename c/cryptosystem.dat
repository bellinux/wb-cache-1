3554|2179|Public
5|$|Cryptography – MIT professors Ron Rivest, Adi Shamir and Leonard Adleman {{developed}} one of {{the first}} practical public-key cryptosystems and started a company RSA (<b>cryptosystem).</b>|$|E
25|$|Before {{we discuss}} how Wiener's attack works, we will first briefly explain how RSA works. For more details see the main entry on the RSA <b>cryptosystem.</b>|$|E
25|$|Coppersmith's attack {{describes}} {{a class of}} cryptographic attacks on the public-key <b>cryptosystem</b> RSA based on the Coppersmith method. Particular applications of the Coppersmith method for attacking RSA include cases when the public exponent e is small or when partial knowledge of the secret key is available.|$|E
40|$|SUMMARY This paper {{shows that}} many of {{elliptic}} curve <b>cryptosystems</b> over quartic extension fields of odd characteristics are reduced to genus two hyperelliptic curve <b>cryptosystems</b> over quadratic extension fields. Moreover, it shows {{that almost all of}} the genus two hyperelliptic curve <b>cryptosystems</b> over quadratic extension fields of odd characteristics come under Weil descent at-tack. This means {{that many of}} elliptic curve <b>cryptosystems</b> over quartic extension fields of odd characteristics can be attacked by Weil descent uniformly. key words: elliptic curve <b>cryptosystems,</b> hyperelliptic curve <b>cryptosystems,</b> Cab curves, Weil descent attack, Scholten form 1...|$|R
25|$|Some {{widely known}} <b>cryptosystems</b> include RSA encryption, Schnorr signature, El-Gamal encryption, PGP, etc. More complex <b>cryptosystems</b> include {{electronic}} cash systems, signcryption systems, etc. Some more 'theoretical' <b>cryptosystems</b> include interactive proof systems, (like zero-knowledge proofs), systems for secret sharing, etc.|$|R
40|$|AbstractAlthough many quantum {{security}} tools {{have been}} proposed, {{many of them}} are quantum secret key distribution protocols. However, we naturally wish to construct quantum <b>cryptosystems</b> different from the conventional <b>cryptosystems.</b> In this paper, first, we show simple methods with prior entanglement in order to split a party’s message among some parties securely. Moreover, as an application, we also show that by using our splitting methods, we can construct not only quantum secret key distribution protocols but also quantum <b>cryptosystems.</b> Some of our quantum <b>cryptosystems</b> are different from the conventional <b>cryptosystems</b> because they are executed interactively...|$|R
25|$|One or more {{cryptographic}} primitives {{are often}} used to develop a more complex algorithm, called a cryptographic system, or <b>cryptosystem.</b> Cryptosystems (e.g., El-Gamal encryption) are designed to provide particular functionality (e.g., public key encryption) while guaranteeing certain security properties (e.g., chosen-plaintext attack (CPA) security in the random oracle model). Cryptosystems use {{the properties of the}} underlying cryptographic primitives to support the system's security properties. Of course, as the distinction between primitives and cryptosystems is somewhat arbitrary, a sophisticated <b>cryptosystem</b> can be derived from a combination of several more primitive cryptosystems. In many cases, the cryptosystem's structure involves back and forth communication among two or more parties in space (e.g., between the sender of a secure message and its receiver) or across time (e.g., cryptographically protected backup data). Such cryptosystems are sometimes called cryptographic protocols.|$|E
25|$|For a long time, prime {{numbers were}} thought to have {{extremely}} limited application outside of pure mathematics. This changed in the 1970s when the concepts of public-key cryptography were invented, in which prime numbers {{formed the basis of}} the first algorithms such as the RSA <b>cryptosystem</b> algorithm.|$|E
25|$|The Solovay–Strassen primality test, {{developed}} by Robert M. Solovay and Volker Strassen, is a probabilistic test {{to determine if}} a number is composite or probably prime. It has been largely superseded by the Baillie-PSW primality test and the Miller–Rabin primality test, but has great historical importance in showing the practical feasibility of the RSA <b>cryptosystem.</b> The Solovay–Strassen test is essentially a Euler-Jacobi pseudoprime test.|$|E
40|$|Abstract. Elliptic curve <b>cryptosystems,</b> {{proposed}} by Koblitz([8]) and Miller([11]), {{can be constructed}} over a smaller definition field than the ElGamal cryptosystems([5]) or the RSA cryptosystems([16]). This is why elliptic curve <b>cryptosystems</b> have begun to attract notice. There are mainly two types in elliptic curve <b>cryptosystems,</b> elliptic curves E over IF 2 r and E over IFp. Some current systems based on ElGamal or RSA may often use modulo arithmetic over IFp. Therefore it is convenient to construct fast elliptic curve <b>cryptosystems</b> over IFp. In this paper, we investigate how to implement elliptic curve <b>cryptosystems</b> on E/IFp. ...|$|R
40|$|We shortly {{review the}} Polly Cracker family of <b>cryptosystems.</b> Apparently all the <b>cryptosystems</b> {{of this family}} have not {{resisted}} even the simplest attacks, through more or less clever linear algebra, as predicted in barkee. See polly for an update. We review and extend these attacks, and show that the binomial ideals, and especially the lattice ideals, as skecthed in gb-issac, might provide secure <b>cryptosystems,</b> also in comparison with other lattice <b>cryptosystems</b> recently proposed...|$|R
40|$|Elliptic curve <b>cryptosystems,</b> {{proposed}} by Koblitz ([11]) and Miller ([15]), {{can be constructed}} over a smaller field of definition than the ElGamal <b>cryptosystems</b> ([5]) or the RSA <b>cryptosystems</b> ([19]). This is why elliptic curve <b>cryptosystems</b> have begun to attract notice. In this paper, we investigate efficient elliptic curve exponentiation. We propose a new coordinate system and a new mixed coordinates strategy, which significantly improves {{on the number of}} basic operations needed for elliptic curve exponentiation...|$|R
25|$|The JN-25 superencrypted code, and its {{cryptanalysis}} by the US, {{is one of}} {{the most}} debated portions of Pearl Harbor lore. JN-25 is the U.S. Navy's last of several names for the <b>cryptosystem</b> of the Imperial Japanese Navy, sometimes referred to as Naval Code D. Other names used for it include five-numeral, 5Num, five-digit, five-figure, AN (JN-25 Able), and AN-1 (JN-25 Baker), and so on.|$|E
25|$|Until recently, most {{security}} {{properties of}} most cryptosystems were demonstrated using empirical techniques or using ad hoc reasoning. Recently, {{there has been}} considerable effort to develop formal techniques for establishing the security of cryptosystems; this has been generally called provable security. The general idea of provable security is to give arguments about the computational difficulty needed to compromise some security aspect of the <b>cryptosystem</b> (i.e., to any adversary).|$|E
25|$|In group theory, {{a branch}} of mathematics, the baby-step giant-step is a meet-in-the-middle {{algorithm}} for computing the discrete logarithm. The discrete log problem is of fundamental importance {{to the area of}} public key cryptography. Many of the most commonly used cryptography systems are {{based on the assumption that}} the discrete log is extremely difficult to compute; the more difficult it is, the more security it provides a data transfer. One way to increase the difficulty of the discrete log problem is to base the <b>cryptosystem</b> on a larger group.|$|E
40|$|This paper {{shows that}} many of {{elliptic}} curve <b>cryptosystems</b> over quartic extension fields of odd characteristics are reduced to genus two hyperelliptic curve <b>cryptosystems</b> over quadratic extension fields. Moreover, it shows {{that almost all of}} the genus two hyperelliptic curve <b>cryptosystems</b> over quadratic extension fields of odd characteristics come under Weil descent attack. This means {{that many of}} elliptic curve <b>cryptosystems</b> over quartic extension fields of odd characteristics can be attacked by Weil descent uniformly. ...|$|R
40|$|At present, {{electronic}} payment activities constructed on the Internet mainly employ the certificate-based public key <b>cryptosystems</b> to solve related security issues. But {{it is based}} on the condition that the certificate authority (CA) must be honest and needs to manage the key directory. Furthermore, it needs to spend extra time to verify the signature signed in the digital certificate by the CA. For the considerations of efficiency, a secure {{electronic payment}} system proposed in this paper is developed by using elliptic curve <b>cryptosystems</b> (ECC) instead of modular exponentiation schemes, because ECC possess fewer bits achieving the same security level as other public key <b>cryptosystems.</b> In this paper we have designed a session key exchange scheme and a blind signature scheme for the e-cash based payment systems using the self-certified public key <b>cryptosystems</b> based on ECC. In summary, the proposed efficient self-certified public key <b>cryptosystems</b> make the on-line electronic payment system securely workable. KEY WORDS electronic payment systems, elliptic curve <b>cryptosystems,</b> self-certified public key <b>cryptosystems,</b> blind signature...|$|R
40|$|Abstract. We {{investigate}} the discrete logarithm problem over jacobians of hyperelliptic curves suitable for public-key <b>cryptosystems.</b> We {{focus on the}} case when the definition field has small characteristic 2, 3, 5 and 7, then we present hyperelliptic <b>cryptosystems</b> that resist against all known attacks. We further implement our designed hyperelliptic <b>cryptosystems</b> over finite fields F 2 n in software on Alpha and Pentium-II computers. Our results indicate that if we choose curves carefully, hyperelliptic <b>cryptosystems</b> do have practical performance...|$|R
25|$|Much of the {{theoretical}} work in cryptography concerns cryptographic primitives—algorithms with basic cryptographic properties—and their relationship to other cryptographic problems. More complicated cryptographic tools are then built from these basic primitives. These primitives provide fundamental properties, which are used to develop more complex tools called cryptosystems or cryptographic protocols, which guarantee one or more high-level security properties. Note however, that the distinction between cryptographic primitives and cryptosystems, is quite arbitrary; for example, the RSA algorithm is sometimes considered a <b>cryptosystem,</b> and sometimes a primitive. Typical examples of cryptographic primitives include pseudorandom functions, one-way functions, etc.|$|E
25|$|Several other attacks {{including}} faked-state attacks, phase remapping attacks, and time-shift {{attacks are}} now known. The time-shift attack {{has even been}} demonstrated on a commercial quantum <b>cryptosystem.</b> This is the first demonstration of quantum hacking against a non-homemade quantum key distribution system. Later on, the phase-remapping attack was also demonstrated on a specially configured, research oriented open QKD system (made and provided by the Swiss company Id Quantique under their Quantum Hacking program). It {{is one of the}} first ‘intercept-and-resend’ attacks on top of a widely used QKD implementation in commercial QKD systems. This work has been widely reported in media.|$|E
25|$|However, other {{cryptographic}} algorithms do {{not appear}} to be broken by those algorithms. Some public-key algorithms are based on problems other than the integer factorization and discrete logarithm problems to which Shor's algorithm applies, like the McEliece <b>cryptosystem</b> based on a problem in coding theory. Lattice-based cryptosystems are also not known to be broken by quantum computers, and finding a polynomial time algorithm for solving the dihedral hidden subgroup problem, which would break many lattice based cryptosystems, is a well-studied open problem. It has been proven that applying Grover's algorithm to break a symmetric (secret key) algorithm by brute force requires time equal to roughly 2n/2 invocations of the underlying cryptographic algorithm, compared with roughly 2n in the classical case, meaning that symmetric key lengths are effectively halved: AES-256 would have the same security against an attack using Grover's algorithm that AES-128 has against classical brute-force search (see Key size). Quantum cryptography could potentially fulfill some of the functions of public key cryptography.|$|E
40|$|Elliptic curve <b>cryptosystems</b> can be {{constructed}} over a smaller definition field than the ElGamal <b>cryptosystems</b> or the RSA <b>cryptosystems.</b> This is why elliptic curve <b>cryptosystems</b> have begun to attract notice. This paper explores an efficient fixed-point-scalar-multiplication algorithm for {{the case of a}} definition field F_p (p> 3) and adjusts coordinates to the algorithm proposed by Lim and Lee. Our adjusted algorithm can give better performance than the previous algorithm in some sizes of the pre-computed tables...|$|R
40|$|In {{this article}} we offer {{guidelines}} for the determination of key sizes for symmetric <b>cryptosystems,</b> RSA, and discrete logarithm based <b>cryptosystems</b> both over finite fields and over groups of elliptic curves over prime fields. Our recommendations {{are based on a}} set of explicitly formulated hypotheses, combined with existing data points about the <b>cryptosystems...</b>|$|R
40|$|The <b>cryptosystems</b> {{based on}} the Integer Factorization Problem (IFP), the Discrete Logarithm Problem (DLP) and the Elliptic Curve Discrete Logarithm Problem (ECDLP) are {{essentially}} the only three types of practical public-key <b>cryptosystems</b> in use. The security of these <b>cryptosystems</b> relies heavily on these three infeasible problems, as no polynomial-time algorithms exist for them so far. However, polynomial-time quantum algorithms for IFP, DLP and ECDLP do exist, provided that a practical quantum computer exists. Quantum Attacks on Public-Key <b>Cryptosystems</b> presemts almost all?known quantum compu...|$|R
500|$|... {{proposed}} using multidimensional reversible cellular automata as an encryption system. In Kari's proposal, {{the cellular}} automaton rule {{would be the}} encryption key. Encryption would be performed by running the rule forward one step, and decryption would be performed by running it backward one step. Kari suggests that a system such as this {{may be used as}} a public-key <b>cryptosystem.</b> In principle, an attacker could not algorithmically determine the decryption key (the reverse rule) from a given encryption key (forward rule) because of the undecidability of testing reversibility, so the forward rule could be made public without compromising the security of the system. However, Kari did not specify which types of reversible cellular automaton should be used for such a system, or show how a <b>cryptosystem</b> using this approach would be able to generate encryption/decryption key pairs.|$|E
2500|$|Victor Shoup, {{who with}} Ronald Cramer {{developed}} the Cramer–Shoup <b>cryptosystem</b> ...|$|E
2500|$|The Diffie–Hellman and RSA algorithms, in {{addition}} to being the first publicly known examples of high quality public-key algorithms, have been among the most widely used. Others include the Cramer–Shoup <b>cryptosystem,</b> ElGamal encryption, and various elliptic curve techniques. See [...]|$|E
40|$|Abstract. In {{this article}} we offer {{guidelines}} for the determination of key sizes for symmetric <b>cryptosystems,</b> RSA, and discrete logarithm based <b>cryptosystems</b> both over finite fields and over groups of elliptic curves over prime fields. Our recommendations {{are based on a}} set of explicitly formulated parameter settings, combined with existing data points about the <b>cryptosystems.</b> ...|$|R
40|$|Implementation of Elliptic Curve <b>Cryptosystems.</b> A short {{introduction}} to Elliptic Curve <b>Cryptosystems</b> with discussions regarding: * How to choose domain parameters to obtain good security * How to optimize scalar multiplication for software implementations * How to choose routines suitable for smart card implementations * How to use/not use OOP when implementing Elliptic Curve <b>cryptosystems</b> Source code in C++...|$|R
40|$|For {{the most}} {{compelling}} applications of threshold <b>cryptosystems,</b> security against chosen ciphertext attack {{seems to be a}} requirement. However, there appear to be no practical threshold <b>cryptosystems</b> in the literature that are provably chosen-ciphertext secure, even in the idealized random hash function model. The contribution {{of this paper is to}} present two very practical threshold <b>cryptosystems,</b> and to prove that they are secure against chosen ciphertext attack in the random hash function model. 1 Introduction In this paper, we consider the problem of designing threshold <b>cryptosystems</b> that are secure against chosen ciphertext attack. Our goal is to design a practical scheme, and provide strong evidence that it cannot be broken. Even though {{the most compelling}} applications of threshold <b>cryptosystems</b> seem to require chosen-ciphertext security, there appear to be no practical threshold <b>cryptosystems</b> in the literature that are provably secure against such an attack. Our main cont [...] ...|$|R
2500|$|One {{theme in}} {{research}} literature {{is to identify}} what the [...] "hard" [...] instances of the knapsack problem look like, or viewed another way, to identify what properties of instances in practice might make them more amenable than their worst-case NP-complete behaviour suggests. The goal in finding these [...] "hard" [...] instances is for their use in public key cryptography systems, such as the Merkle-Hellman knapsack <b>cryptosystem.</b>|$|E
2500|$|In the RSA <b>cryptosystem,</b> Bob might {{tend to use}} a small {{value of}} d, rather than a large random number to improve the RSA {{decryption}} performance. However, Wiener’s attack shows that choosing a small value for d will result in an insecure system in which an attacker can recover all secret information, i.e., break the RSA system. This break is based on Wiener’s Theorem, which holds for small values of d. Wiener has proved that the attacker may efficiently find d when [...]|$|E
2500|$|While pure {{cryptanalysis}} uses {{weaknesses in}} the algorithms themselves, other attacks on cryptosystems are based on actual use of the algorithms in real devices, and are called side-channel attacks. If a cryptanalyst has access to, for example, {{the amount of time}} the device took to encrypt a number of plaintexts or report an error in a password or PIN character, he may be able to use a timing attack to break a cipher that is otherwise resistant to analysis. An attacker might also study the pattern and length of messages to derive valuable information; this is known as traffic analysis and can be quite useful to an alert adversary. Poor administration of a <b>cryptosystem,</b> such as permitting too short keys, will make any system vulnerable, regardless of other virtues. And, of course, social engineering, and other attacks against the personnel who work with cryptosystems or the messages they handle (e.g., bribery, extortion, blackmail, espionage, torture, ...) may be the most productive attacks of all.|$|E
40|$|Imai and Matsumoto {{introduced}} alternative algebraic {{methods for}} constructing public key <b>cryptosystems.</b> An obvious advantage of theses public key <b>cryptosystems</b> {{is that the}} private side computations can be made very ecient with a simple hardware. Almost all of these proposals and variants of them were broken. However, scheme " in [3] is still unbroken. In this paper we show some statistical weaknesses of this scheme. We also represent a cryptanalytic attack that enables the cryptanalyst to decrypt, with high probability, a given ciphertext by performing a very limited number of encryption operations using the public encryption function. Keywords: Public-key <b>cryptosystems,</b> cryptanalysis, Imai and Matsumoto asymmetric <b>cryptosystems</b> 1 Introduction Public key <b>cryptosystems</b> based on integer factorization and discrete log problem, such as RSA and ElGamal [7], need to perform {{a large amount of}} arithmetic operations, so they are not very ecient compared to symmetric key <b>cryptosystems</b> such [...] ...|$|R
40|$|Pairing based <b>cryptosystems</b> can {{accomplish}} novel security {{applications such as}} ID-based <b>cryptosystems,</b> which have not been constructed efficiently without the pairing. The processing speed of the pairing based <b>cryptosystems</b> is relatively slow compared with the other conventional public key <b>cryptosystems.</b> However, several efficient algorithms for computing the pairing have been proposed, namely Duursma-Lee algorithm and its variant T pairing. In this paper, we present an efficient implementation of the pairing over some mobile phones. The processing speed of our implementation in ARM 9 processors on BREW achieves under 100 milliseconds using the supersingular curve over F 3 97. It has become efficient enough to implement security applications, such as ID-based <b>cryptosystems</b> and broadcast encryption, using the pairing on BREW mobilephones...|$|R
40|$|Elliptic curve <b>cryptosystems,</b> {{proposed}} by Koblitz ([12]) and Miller ([16]), {{can be constructed}} over a smaller field of definition than the ElGamal <b>cryptosystems</b> ([6]) or the RSA <b>cryptosystems</b> ([20]). This is why elliptic curve <b>cryptosystems</b> have begun to attract notice. In this paper, we investigate efficient elliptic curve exponentiation. We propose a new coordinate system and a new mixed coordinates strategy, which significantly improves {{on the number of}} basic operations needed for elliptic curve exponentiation. key words: elliptic curve exponentiation, coordinate system 1 Introduction Koblitz ([12]) and Miller ([16]) proposed a method by which public key <b>cryptosystems</b> can be constructed on the group of points of an elliptic curve over a finite field instead of a finite field. If elliptic curve <b>cryptosystems</b> satisfy both MOVconditions ([15, 10]) and FR-conditions ([4]), and avoid p-divisible elliptic curves over IF p r ([23, 21, 25]), then the only known attacks are the Pollard a [...] ...|$|R
