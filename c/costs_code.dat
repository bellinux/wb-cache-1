1|454|Public
40|$|Sparse matrix {{computations}} are {{ubiquitous in}} computational science. However, {{the development of}} high-performance software for sparse matrix computations is a tedious and error-prone task, for two reasons. First, there is no standard way of storing sparse matrices, since a variety of formats are used to avoid storing zeros, and {{the best choice for}} the format is dependent on the problem and the architecture. Second, for most algorithms, {{it takes a lot of}} code reorganization to produce an efficient sparse program that is tuned to a particular format. We view the problem of supporting effective development of high-performance sparse matrix codes as one of generic programming. Generic programming is a discipline of designing and implementing software components which can be used when there is a set of related data structures supporting a common semantics described by an API or protocol, and a set of common algorithms that can be formulated in terms of this API. When designing a generic programming system one must address the following fundamental questions: [...] How do we represent efficient algorithms independently of any particular data-representation scheme? [...] How do we provide an interface to a diverse set of data-structures? [...] How do we "knit" together the representation of the algorithms and the representation for the data to obtain an efficient implementation? This dissertation presents a relational algebraic model for automatically generating efficient sparse codes starting with dense matrix codes and specification of sparse matrix formats. Our techniques are based on viewing arrays as relations and the execution of DOALL loop nests and loops with reductions as evaluation of queries over these relations. Storage formats are specified to the compiler through search and enumeration access methods and their <b>costs.</b> <b>Code</b> restructuring is then formulated as the search for the most efficient plan for the query. The main step in this process is the identification of simultaneous enumeration of data structures (relational joins) and the determination of the best implementations of this enumeration. This software architecture not only provides for a clean design of the compiler, but it also exposes additional opportunities for code optimization and has led us to more general transformation algorithms than previously reported in the literature. We present experimental data that demonstrates that the code generated by our compiler achieves performance competitive with that of hand-written codes for important computational kernels...|$|E
50|$|A Standard <b>Cost</b> <b>Coding</b> System is {{a system}} of cost {{classification}} {{that can be used}} for benchmarking cost and quantities data. In the Norwegian oil and gas industry, NORSOK Z-014 developed as part of the NORSOK standards. ISO is also developing a Standard <b>Cost</b> <b>coding</b> System as an extension of NORSOK Z-014 under ISO 19008.|$|R
5000|$|In a true job cost {{accounting}} system, a Budget {{is set up}} {{in advance of the}} job. As actual costs are accrued, they are compared to budgeted costs, to determine variances for each phase of each job. <b>Cost</b> <b>Codes</b> are used for each phase, allowing [...] "mini-budgets" [...] to be generated and tracked. In the construction industry, the Construction Specifications Institute (CSI) has established an industry standard <b>Cost</b> <b>Coding</b> system.job <b>costing</b> system consists of various cost driver that drives job cost, moreover it ...|$|R
50|$|If {{needed for}} {{specialty}} <b>cost</b> <b>coding,</b> negotiate with product/service providers {{on time and}} cost of repairs {{for the purpose of}} making an offer of settlement to the insured.|$|R
40|$|Approved {{for public}} release; {{distribution}} is unlimitedThe concept that the innovator {{is a unique}} and essential element {{in the process of}} technology transfer is advanced. Distinction is drawn between the innovator, the inventor, and the linker categories of individuals. An instrument is developed to identify both the innovator and the linker. The instrument is administered to a set of individuals and the ability of the instrument to differentiate is validated through the results of a series of interviews with a sample of the respondents. Extensive analysis is performed on the results of both the questionnaire and the personal interviews. Conclusions are drawn, and recommendations for additional investigation are provided. Department of Administrative Sciences under <b>Cost</b> <b>Code</b> 57146 [URL] of Administrative Sciences under <b>Cost</b> <b>Code</b> 5714...|$|R
40|$|Intended for {{publication}} in military Medicine Intended for presentation before____________________________________ ____________________Location _ ______________ _ Date 2. Budget Project No. 3 M 161102 BS 15 <b>Cost</b> <b>Code</b> 8460082101041 3. Attached contains no classified material. It meets accepted standards for scientific accuracy and propriety. It contains no potentially sensitive or controversial items. ALEN CYMEM, Ph. D. ...|$|R
40|$|An {{attempt is}} made to list and provide all {{available}} information about solar radiation measuring equipment which are being manufactured and {{are available on the}} market. The list is in tabular form and includes sensor type, response time, cost data and comments for each model. A <b>cost</b> <b>code</b> is included which shows ranges only...|$|R
5000|$|See a {{local street}} map, scheme <b>costs,</b> the <b>code</b> of conduct, and {{information}} in other languages.|$|R
40|$|Fibonacci {{trees and}} {{exhaustive}} generalized Fibonacci trees {{have been introduced}} and studied {{in connection with a}} particular unequal <b>costs</b> <b>coding</b> application by Horibe [6], Chang [2], and the author [1], The k ^ exhaustive generalized Fibonacci tree, S(k), by definition has S(k-c(i)) as its I th leftmost subtree descending from the root, i = 1, 2, [...] ., r, where the c(i) are relatively prim...|$|R
5000|$|In some {{embedded}} systems, where {{memory is}} a significant <b>cost,</b> better <b>code</b> density can significantly reduce costs.|$|R
40|$|In the {{construction}} industry, many operations and processes are labor intensive. Efficient management of labor or human resources can be key in a successful construction project. REALabor {{is a real}} time labor cost and productivity tool designed for the daily interactive tracking of performance on the job site. REALabor is an electronic daily timesheet that displays all employees and all <b>cost</b> <b>codes</b> for a project on one sheet...|$|R
40|$|Here I propose C and C++ {{interfaces}} {{and experimental}} implementation for twofolds arithmetic. I introduce twofolds in my previous article entitled "Twofold fast arithmetic" for tracking floating-point inaccuracy. Testing shows, plain C enables high-performance computing with twofolds. C++ interface enables coding {{as easily as}} ordinary floating-point numbers. My goal is convincing you to try twofolds; I think assuring accuracy of math computations is worth its <b>cost.</b> <b>Code</b> and use examples available at my web site, references inside...|$|R
30|$|In this paper, {{we focus}} {{the issues of}} network coding only on the routing layer. So we study the <b>cost</b> of network <b>coding</b> on the {{transmission}} level and ignore the <b>cost</b> on the <b>coding</b> level, such as additional coding header or additional computation for network coding.|$|R
40|$|The {{focus of}} this {{directed}} project was to transform and train individuals on a new means of electronic job cost capturing on a construction site. Items included were implementing automated time card capturing using handheld devices, restructuring of the <b>cost</b> <b>coding</b> system to isolate the key data to be captured, and formatting the appropriate cost analysis programs to report key data timely to superintendents, project managers and the executive team. Included in this Directed Project is information {{on the benefits of}} overhauling a company’s method of capturing costs, along with a training program for implementation...|$|R
40|$|We analyze a {{model with}} two {{software}} firms, quality improving coding expenditures and potential competition. The firms can publish {{parts of their}} software as open source. Publishing software implies positive spillovers and thus reduces the firms' <b>coding</b> <b>costs.</b> On the other hand there exist two negative effects. First, lower <b>coding</b> <b>costs</b> induce higher <b>coding</b> expenditures which decreases the firms' profits if their programs are substitutes. Second, open source encourages entry and increases the expenditures required to deter entry. The firms' optimal open source decisions balance these opposite effects. Open Source, Spillovers, Potential Entry...|$|R
40|$|Existing minimum <b>cost</b> network <b>coding</b> {{algorithms}} {{are basically}} optimized {{by a single}} indicator. This paper proposed a novel network coding method for minimum comprehensive cost, by the integration of multiple cost indicators. In the process of solving the problems by genetic method, the proposed algorithm realized the global optimal by the application of comprehensive cost indicator. Simulation results and analysis show that the proposed algorithm can significantly reduce the <b>cost</b> of network <b>coding,</b> while the computational complexity slightly increased...|$|R
40|$|Building energy codes require new and {{existing}} buildings undergoing major renovations to meet {{minimum energy efficiency}} requirements. Welldesigned, implemented, and enforced codes can help eliminate inefficient construction practices and technologies {{with little or no}} increase in total project <b>costs.</b> <b>Codes</b> typically specify requirements for “thermal resistance ” in the building shell and windows, minimum air leakage, and minimum heating and cooling equipment efficiencies. These simple measures can reduce energy use by 30 % or more, resulting in cost savings for businesses and consumers. Building energy codes also reduce peak energy demand, air pollution, and greenhouse gas emissions. Recognizing these benefits, a majority of states hav...|$|R
5000|$|A Schedule of Values (SOV) is a {{detailed}} schedule apportioning the original contract sum and all change orders, among all <b>cost</b> <b>code</b> divisions or {{portions of the}} work. The Schedule of Values shall {{be based on the}} approved budget or the approved Fixed Price, or GMP, Cost-Plus Contract type as applicable. See the executed contract agreement for additional language regarding the Schedule of Values. Each Project/Job shall have a separate Schedule of Values. If multiple Projects/Jobs are included in one contract, then the Contractor/Vendor must create a separate Schedule of Values which clearly segregates costs among each Job for billing, reporting and audit purposes." ...|$|R
50|$|After each prediction, {{the model}} is updated by {{adjusting}} the weights to minimize <b>coding</b> <b>cost.</b>|$|R
40|$|Abstract: Scala a {{programming}} language combines the feature of object oriented and functional {{programming language}}. It provides greater flexibility to programmers {{by allowing them to}} grow the language through libraries. Scala implements the concept of class, and sees everything in terms of object. In terms functional programming, it brings in algebraic data types, pattern matching, functions and closures. Optimization is an important concept in compiler design to reduce the <b>cost,</b> <b>code</b> size, reduction of design complexity, thereby internal execution time and increasing the performance of the compiler. Benchmark programs have been used to show the improvement in these language features and to compare the efficiency of scala program and their java equivalents...|$|R
50|$|This {{demonstrates}} how encoding clocking or synchronization in a <b>code</b> <b>costs</b> channel capacity, and illustrates the trade-off.|$|R
40|$|We {{address the}} design and {{optimization}} of an energy-efficient lifting-based 2 D transform for wireless sensor networks with ir-regular spatial sampling. The 2 D transform is designed to allow for unidirectional computation found in existing path-wise transforms, thereby eliminating costly backward transmissions often required by existing 2 D transforms, while simultaneously achieving greater data decorrelation than those path-wise transforms. We also propose a framework for optimizing the 2 D transform via an extension of standard dynamic programming (DP) algorithms, where a selection is made among alternative coding schemes (e. g., different number of levels in the wavelet decomposition). A recursive DP formulation is provided and an algorithm is given that finds the minimum <b>cost</b> <b>coding</b> scheme assignment for our proposed 2 D transform...|$|R
5000|$|Any member can post an Event with date, location, <b>cost,</b> dress <b>code,</b> {{and other}} information. Location can be {{concealed}} and only revealed individually by the Event owner to participants. Users, on an Event's page, can {{indicate that they}} [...] "will attend" [...] or [...] "might attend".|$|R
40|$|A new {{boundary}} condition is presented for simulating the flow over passively porous surfaces. The model {{builds on the}} prior work of R. H. Bush to {{eliminate the need for}} constructing grid within an underlying plenum, thereby simplifying the numerical modeling of passively porous flow control systems and reducing computation <b>cost.</b> <b>Code</b> experts for two structured-grid flow solvers, TLNS 3 D and CFL 3 D, and one unstructured solver, USM 3 Dns, collaborated with an experimental porosity expert to develop the model and implement it into their respective codes. Results presented for the three codes on a slender forebody with circumferential porosity and a wing with leading-edge porosity demonstrate a good agreement with experimental data and a remarkable ability to predict the aggregate aerodynamic effects of surface porosity with a simple {{boundary condition}}...|$|R
40|$|Optimization and meta-models are key {{elements}} of modern engineering techniques. The Multidisciplinary Design Optimization (MDO) allows solving strongly coupled physical problems aiming at the global system optimization. For these multidisciplinary optimizations, meta-models can be required as surrogates for complex and high computational <b>cost</b> <b>codes.</b> Meta-modeling is also used for catching general trends and underlying relationships between parameters within a database. The application of these mathematical techniques to the pre-design of rotorcraft is well relevant. Indeed rotorcraft pre-sizing is a multidisciplinary issue involving flight dynamics, aerodynamics, power generation, structures, [...] . Moreover the rotorcraft databases requires meta-modeling techniques to be useful. This paper presents several techniques studied by ONERA in the C. R. E. A. T. I. O. N. project. The practical case considered here deals with the helicopter main rotor optimization...|$|R
30|$|Microchips’ {{data storage}} {{capacity}} was found more successful; however, {{according to their}} resistance to heat and their <b>costs,</b> the square <b>code,</b> was more advantageous.|$|R
40|$|A multi-component {{communication}} {{analysis of}} the CORBA specification is conducted and an analytic model describing communication costs is proposed. The analysis indicates: a) potential expensive communication when integrating parallel and distributed computing into a CORBA middleware framework, and b) a relationship between communication <b>costs</b> and <b>code</b> layout in CORBA's Interface Definition Language (IDL) ...|$|R
50|$|Although pair programmers may {{complete}} a task {{faster than a}} solo programmer, {{the total number of}} man-hours increases. A manager would have to balance faster completion of the work and reduced testing and debugging time against the higher <b>cost</b> of <b>coding.</b> The relative weight of these factors can vary by project and task.|$|R
50|$|Free {{software}} works along {{lines that}} approximate perfect competition as well. Anyone {{is free to}} enter and leave the market at no <b>cost.</b> All <b>code</b> is freely accessible and modifiable, and individuals are free to behave independently. Free software may be bought or sold at whatever price that the market may allow.|$|R
3000|$|..., the {{solution}} provided by (9) {{corresponds to the}} choice of progressively assigning the less efficient coding mode (higher values of the <b>coding</b> <b>cost</b> k [...]...|$|R
30|$|In {{the next}} section, the {{capacity}} of the stuck sub-channel (4) and the erasure sub-channel (5) is used to derive the memory <b>cost</b> of source <b>codes.</b>|$|R
40|$|It was {{demonstrated}} in transport networks that network (diversity) coding can provide sufficient redundancy to ensure instantaneous single link failure recovery, while nearoptimal bandwidth efficiency can be reached. However, in the resulting multi-path routing problem the end-to-end delays were not considered. On the other hand, {{even in a}} European-scale network the delay difference of the paths has severe effect on the Quality-of-Service of application scenarios, such as video streaming. Thus, {{in this paper we}} thoroughly investigate survivable routing in Software Defined Networks (SDNs) with several additional delay bounds to the bandwidth cost minimization problem. We build on the fact that, if the user data is split into at most two parts, then the minimum <b>cost</b> <b>coding</b> solution has a well-defined acyclic structure of subsequent paths and disjoint path-pairs between the communication end-points. Complexity analysis and integer linear programs are provided to solve these delay aware survivable routing problems in SDNs...|$|R
3000|$|... is constant, {{and hence}} this <b>cost</b> {{function}} favors <b>codes</b> that have their sidelobes flattened {{out over the}} delay, Doppler and spatial frequency dimensions. Increasing the value of [...]...|$|R
25|$|Fixed {{instruction}} {{width of}} 32bits to ease decoding and pipelining, at the <b>cost</b> of decreased <b>code</b> density. Later, the Thumb instruction set added 16-bit instructions and increased code density.|$|R
40|$|In a {{sequence}} of generalized Fibonacci trees, the kth tree has the (k Γ c(i)) th tree as its ith subtree for a nondecreasing sequence of positive integers c(i), i = 1; :::; r. For particular initializations, each tree in the generalized Fibonacci sequence solves a minimax coding problem related to Varn coding. Specifically, each symbol from a uniformly distributed source is to be encoded by a string of code symbols associated with the path through the tree from the root to the leaf associated with the source symbol, the ith <b>code</b> symbol <b>costs</b> c(i), and {{the goal is to}} minimize maximum codeword cost. 1. INTRODUCTION AND BACKGROUND Fibonacci trees and exhaustive generalized Fibonacci trees have been introduced and studied in connection with a particular unequal <b>costs</b> <b>coding</b> application by Horibe [6], Chang [2], and the author [1]. The kth exhaustive generalized Fibonacci tree, S(k), has S(k Γ c(i)) as its ith leftmost subtree, i = 1; 2; :::; r, where the c(i) are relatively [...] ...|$|R
5000|$|Fixed {{instruction}} {{width of}} 32 bits to ease decoding and pipelining, at the <b>cost</b> of decreased <b>code</b> density. Later, the Thumb instruction set added 16-bit instructions and increased code density.|$|R
