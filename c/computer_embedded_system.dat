3|10000|Public
40|$|Abstract: Embedded {{control systems}} are {{becoming}} ubiquitous in control applications. They combine {{the properties of}} <b>computer</b> <b>embedded</b> <b>system</b> with newly designed complex controllers where flexible, safe and reconfigurable operations are required. Some common and general features are always required in any control system, independently of the hardware implementing platform. The new concept of the control kernel of an application is introduced, making easier the design of general purpose applications...|$|E
40|$|Today, {{the number}} of {{embedded}} system was applied {{in the field of}} automation and control has far exceeded a variety of general-purpose <b>computer.</b> <b>Embedded</b> <b>system</b> is gradually penetrated into all fields of human society, and ubiquitous embedded applications constitute the "ubiquitous" computing era. Embedded operating system is the core of the em-bedded system, and it directly affects the performance of the whole system. Our Liaoning Provincial Key Laboratory of Embedded Technology has successfully developed five kinds of device-level embedded operating systems by more than ten years’ efforts, and these systems are Webit 5. 0, Worix, μKernel, iDCX 128 and μc/os-II 128. This paper mainly analyses and compares the implementation mechanism and performance of these five kinds of device-level embedded operating systems in detail...|$|E
40|$|Sets of test {{procedures}} are employed to verify an error free output of a development or a production process. A degree of coverage {{is associated with}} each test, and the set of tests aims at achieving an aggregated coverage of {{the properties of the}} system under test. The performance of a set of tests may, therefore, be considered as an application of an input sequence to the system under test, with the aim of obtaining a particular coverage of verification of the system's properties [6, 7]. A special case is that of a verified <b>computer</b> <b>embedded</b> <b>system,</b> in which a change procedure has been performed in a set of its software elements. The order of input sequences in the tests following a defined change in a system significantly dominates the average speed of detection of the existence of an error. This paper presents a method, based on a model of the system under test, which allows defining the order of tests after a change is performed in one of the system's software elements. The method [...] ...|$|E
5|$|Since 2004, the New York City BSD Users Group {{database}} provides dmesg {{information from}} a collection of computers (laptops, workstations, single-board <b>computers,</b> <b>embedded</b> <b>systems,</b> virtual machines, etc.) running FreeBSD.|$|R
50|$|The New York City *BSD User Group runs {{a service}} named dmesgd, which {{provides}} user-submitted dmesg information for different computer hardware (laptops, workstations, single-board <b>computers,</b> <b>embedded</b> <b>systems,</b> virtual machines, etc.) capable of running TrueOS.|$|R
5|$|The goal of {{computer}} forensics is {{to explain the}} current state of a digital artifact; such as a computer system, storage medium or electronic document. The discipline usually covers <b>computers,</b> <b>embedded</b> <b>systems</b> (digital devices with rudimentary computing power and onboard memory) and static memory (such as USB pen drives).|$|R
5000|$|Linux {{is often}} used in various single- or {{multi-purpose}} <b>computer</b> appliances and <b>embedded</b> <b>systems.</b>|$|R
5000|$|Comparison of <b>embedded</b> <b>computer</b> <b>systems</b> {{on board}} the Mars rovers ...|$|R
50|$|While {{the program}} {{includes}} a spell checker, {{it does not}} check for spelling as the user types. It is a very light-weight and fast word processor, making it ideal for older <b>computers</b> and <b>embedded</b> <b>systems.</b>|$|R
5000|$|... #Article: Comparison of <b>embedded</b> <b>computer</b> <b>systems</b> {{on board}} the Mars rovers ...|$|R
40|$|The {{next wave}} of {{information}} systems will feature data sources residing on handheld devices, laptops <b>computers,</b> <b>embedded</b> <b>systems,</b> sensors {{and other types of}} small-sized devices. The mobility advantage of these devices causes a new set of problems not seen in common networks. Lost of connectivity, low bandwidth and limited power sources are some of the new challenges presented to developers working in this area. We are in the process to create a Registration Server for NetTraveler: a database middleware system to integrate these mobile devices as reliable data sources in a computer network. This paper describes this Registration Server and how it works...|$|R
5000|$|A small 32-bit <b>{{computer}}</b> for an <b>embedded</b> <b>system</b> {{might be}} [...] "RV32EC." [...] A large 64-bit computer might be [...] "RV64G." ...|$|R
50|$|The term is not {{synonymous with}} IBM PC compatibility, as this implies a {{multitude}} of other <b>computer</b> hardware; <b>embedded</b> <b>systems,</b> as well as general-purpose computers, used x86 chips before the PC-compatible market started, some of them before the IBM PC (1981) itself.|$|R
50|$|The typical {{personal}} computer tests itself at start-up (called POST) because it's {{a very complex}} piece of machinery. Since it includes a computer, a computerized self-test was an obvious, inexpensive feature. Most modern <b>computers,</b> including <b>embedded</b> <b>systems,</b> have self-tests of their computer, memory and software.|$|R
40|$|Ada {{has been}} {{designed}} explicitly for <b>embedded</b> <b>computer</b> <b>systems</b> programming. As {{a significant number of}} <b>embedded</b> <b>computer</b> <b>systems</b> are distributed, the presence in Ada of constructs for concurrent programming has raised considerable expectation about the possibility of programming distributed systems in Ada. In fact, many attempts in this direction have been made, but they have been obstacled by difficulties raised by the language definition...|$|R
40|$|Like {{existing}} commodity <b>computer</b> <b>systems,</b> <b>embedded</b> <b>systems</b> {{are no more}} small, static, stable nor safe. They {{have huge}} amount of source codes, interact with the internet, download and install applications from external, which incur the increase of bugs and security holes. To solve these problems, we propose to leverage virtualization techniques on <b>embedded</b> <b>systems.</b> We ported a machine emulator supporting various architectures to run on a microkernel that runs on several architectures. In this paper, we discuss benefits of using virtualization techniques on <b>embedded</b> <b>system,</b> introduce the implementation and the evaluation of a machine emulator running on a microkernel, and discuss some issues using our <b>system</b> on <b>embedded</b> <b>systems.</b> 1...|$|R
50|$|Windows Embedded Compact (Windows CE) is a {{variation}} of Microsoft's Windows operating system for minimalistic <b>computers</b> and <b>embedded</b> <b>systems.</b> Windows CE is a distinctly different kernel, rather than a trimmed-down version of desktop Windows. It is supported on Intel x86 and compatibles, MIPS, ARM, and Hitachi SuperH processors.|$|R
50|$|Although {{the term}} often {{refers to the}} devices in {{personal}} <b>computers,</b> servers and <b>embedded</b> <b>systems,</b> RTCs are present in almost any electronic device which needs to keep accurate time.|$|R
40|$|Hardware/Software Interface {{plays an}} {{important}} role in co-design of the <b>embedded</b> <b>computer</b> <b>system.</b> It links the software part and the hardware part of the system. The design process supports software interface implementation and hardware interface synthesis. This report shows how the hardware and software interfaces can be implemented by using bus extended technology in <b>embedded</b> <b>computer</b> <b>system,</b> which includes the primitive interface, the synchronous interface and the data communication protocol between the hardware and the software...|$|R
50|$|These numbers may {{surprise}} many, {{because the market}} is perceived as desktop computers. x86 designs dominate desktop and notebook computer sales, but such computers are {{only a tiny fraction}} of the computers now sold. Most people in industrialised countries own more <b>computers</b> in <b>embedded</b> <b>systems</b> in their car and house, than on their desks.|$|R
40|$|I am broadly {{interested}} in networking, wireless communications, <b>computer</b> and <b>embedded</b> <b>systems,</b> and multimedia communications. I {{have had a}} great time bringing my systems experience and analytical skills together to solve problems, work with some very bright people, and lead and inspire research and development teams while working {{in a variety of settings}} including industrial R&D and academia...|$|R
50|$|Some very {{low-cost}} home <b>computers</b> or <b>embedded</b> <b>systems</b> {{dispense with}} a UART {{and use the}} CPU to sample the state of an input port or directly manipulate an output port for data transmission. While very CPU-intensive (since the CPU timing is critical), the UART chip can thus be omitted, saving money and space. The technique is known as bit-banging.|$|R
50|$|Sometimes, the {{contents}} of a relatively slow ROM chip are copied to read/write memory to allow for shorter access times. The ROM chip is then disabled while the initialized memory locations are switched in on the same block of addresses (often write-protected). This process, sometimes called shadowing, is fairly common in both <b>computers</b> and <b>embedded</b> <b>systems.</b>|$|R
50|$|This format {{was created}} for <b>embedded</b> <b>computer</b> <b>systems</b> by a {{consortium}} including Motorola and Ampro. EBX <b>systems</b> typically were <b>embedded</b> PowerPC or PowerQUICC based.|$|R
50|$|TRL {{researchers}} {{are responsible for}} numerous breakthroughs in sciences and engineering. The researchers have presented multiple papers at international conferences, and published numerous papers in international journals. They have {{also contributed to the}} products and services of IBM, and patent filings. TRL conducts research in microdevices, system software, security and privacy, analytics and optimization, human <b>computer</b> interaction, <b>embedded</b> <b>systems,</b> and services sciences.|$|R
40|$|Database query {{languages}} on relations (for example SQL) make {{it possible}} to join two relations. This operation is very common in desktop/server database systems but unfortunately query processing <b>systems</b> in networked <b>embedded</b> <b>computer</b> <b>systems</b> currently do not support this operation; specifically, the query processing systems TAG, TinyDB, Cougar do not support this. We show how a prioritized medium access control (MAC) protocol can be used to efficiently execute the database operation join for networked <b>embedded</b> <b>computer</b> <b>systems</b> where all computer nodes are in a single broadcast domain...|$|R
5000|$|Th. Dana-Picard (2007): Motivating {{constraints}} of a pedagogy <b>embedded</b> <b>Computer</b> Algebra <b>System,</b> International Journal of Science and Mathematics Education 5 (2), 217-235; ...|$|R
50|$|The {{language}} and design methodology {{were created by}} Rainer Dömer and Daniel Gajski at the Centre for <b>Embedded</b> <b>Computer</b> <b>Systems</b> at University of California, Irvine in 2001.|$|R
50|$|Software-defined radio (SDR) is a radio {{communication}} system where components that have been typically implemented in hardware (e.g. mixers, filters, amplifiers, modulators/demodulators, detectors, etc.) are instead implemented by means of software on a personal <b>computer</b> or <b>embedded</b> <b>system.</b> While the concept of SDR is not new, the rapidly evolving capabilities of digital electronics render practical many processes {{which used to be}} only theoretically possible.|$|R
50|$|In {{the context}} of this article, a system can refer to {{anything}} where data is transferred from one element to another over bus (viz. System on a Chip (SoC), a <b>computer</b> <b>system,</b> an <b>embedded</b> <b>system</b> on board, etc.).|$|R
40|$|Abstract:- An <b>embedded</b> <b>computer</b> <b>system</b> is {{proposed}} for ubiquitous communication systems in this paper. The theme includes subjects on systems of ubiquitous communication and <b>embedded</b> <b>computer</b> {{to the next}} generation. Fundamental concept and design of the ubiquitous communication system is first described, which is thought of cellular phone services supported by enhanced reliable data and high quality pictures. Configuration and characteristics of an <b>embedded</b> <b>computer</b> <b>system</b> (or the ubiquitous computer) is secondly described to support the services, which is also thought of enhancement of presently applied ubiquitous tag system. A prototype model is designed and fabricated to evaluate basic capabilities for a future communication and computer services. Key-Words:- Ubiquitous communication, <b>embedded</b> <b>computer,</b> high quality pictures...|$|R
50|$|Technologic {{systems is}} an American company {{producing}} single board <b>computers</b> for <b>embedded</b> <b>systems.</b> They come with either x86 or ARM9 processors. The company {{states that the}} major advantage of its boards is very short boot time (less than one second). Some boards also have sleeping modes with very low power consumption (200 μA). These <b>embedded</b> <b>computers</b> run the Linux 2.6 kernel with a full Debian Linux distribution. Eclipse is available for some boards for developing embedded applications in C, C++ or Java.|$|R
5000|$|Application {{software}} is rarely available off-the-shelf. It usually {{has to be}} adapted to the specific application. Therefore, camera manufacturers offer programming tools designed for their cameras. If a camera uses the standard protocol DCAM (IIDC), {{it can also be}} used with third party software. A lot of industrial <b>computers</b> and <b>embedded</b> <b>systems</b> are compatible to the DCAM (IIDC) protocol (please cf. Structure / Interface and Exchanging data with computers).|$|R
40|$|Abstract. With {{the rapid}} {{development}} of <b>computer</b> technology, <b>embedded</b> <b>system</b> {{is more and}} more widely used. The <b>embedded</b> hardware <b>system</b> was designed by taking Samsung ARM 7 TDMI CPU as the core. And a small uClinux <b>system</b> was <b>embedded</b> into this hardware system. Various kinds of applications in uClinux system can be developed. This thesis introduced one of those applications, which is embedded web server and its protocol-HTTP. In this thesis, the <b>embedded</b> <b>system</b> based on ARM had been developed. Our <b>embedded</b> <b>system</b> has the characters of low cost and high efficiency. It is at large applicated on business forwardly...|$|R
40|$|Abstract—Embedded {{systems are}} {{computer}} systems used as components in other systems. It {{is a very}} broad field encompassing {{a large number of}} very different requirements, and the <b>computer</b> architecture of <b>embedded</b> <b>systems</b> reflects this variation by a large degree of specialization to application areas. Index Terms — <b>Embedded</b> <b>Systems,</b> <b>Computer</b> Architecture I...|$|R
25|$|Dillo is a minimalistic {{web browser}} {{particularly}} intended for older or slower <b>computers</b> and <b>embedded</b> <b>systems.</b> It supports only plain HTML/XHTML (with CSS rendering) and images over HTTP; scripting is ignored entirely. Current versions of Dillo can run on Linux, BSD, OS X, IRIX and Cygwin. Due to its small size, {{it is the}} browser of choice in several space-conscious Linux distributions. Released under the GNU General Public License, Dillo is free software.|$|R
