209|2413|Public
25|$|The {{notion of}} {{completion}} {{is closely related}} to McCarthy's circumscription semantics for default reasoning, and to the <b>closed</b> <b>world</b> <b>assumption.</b>|$|E
25|$|A logic {{program with}} strong {{negation}} can include the <b>closed</b> <b>world</b> <b>assumption</b> rules {{for some of}} its predicates and leave the other predicates {{in the realm of}} the open world assumption.|$|E
500|$|Another {{point of}} {{conflict}} concerning Nulls is that they violate the <b>closed</b> <b>world</b> <b>assumption</b> model of relational databases by introducing an open world assumption into it. [...] The <b>closed</b> <b>world</b> <b>assumption,</b> {{as it pertains to}} databases, states that [...] "Everything stated by the database, either explicitly or implicitly, is true; everything else is false." [...] This view assumes that the knowledge of the world stored within a database is complete. [...] Nulls, however, operate under the open world assumption, in which some items stored in the database are considered unknown, making the database's stored knowledge of the world incomplete.|$|E
5000|$|Conjunctive Graph: This {{refers to}} the 'top-level' Graph. It is the {{aggregation}} of all the contexts within it and is also the appropriate, absolute boundary for <b>closed</b> <b>world</b> <b>assumptions</b> / models. This distinction is the low-hanging fruit of RDF along {{the path to the}} semantic web and most of its value is in (corporate/enterprise) real-world problems: ...|$|R
40|$|Our {{purpose is}} to define a {{semantics}} that extends Well Founded Semantics for programs with classical negation, and which avoids the absence of models caused by contradictions brought about by <b>closed</b> <b>world</b> <b>assumptions.</b> This extension relies on allowing to take back such <b>closed</b> <b>world</b> <b>assumptions,</b> through making their truth value become undefined, and thus permiting noncontradictory models to appear. We take back such assumptions in a minimal way for all alternative ways of removing contradictions, by means of simple transformations of the original program. The transformed programs have contradiction free Well Founded Models. Moreover, we identify a unique model that defines the semantics of the original program, which is included in all the alternative contradiction free models. This unique model coincides with the Well Founded Model when the latter is noncontradictory. The notions of minimality and contradiction removal employed are useful for dealing with Belief Revision. These techniq [...] ...|$|R
50|$|A Conjunctive Graph is {{the most}} {{relevant}} collection of graphs that {{are considered to be}} the boundary for <b>closed</b> <b>world</b> <b>assumptions.</b> This boundary is equivalent to that of the store instance (which is itself uniquely identified and distinct from other instances of Store that signify other Conjunctive Graphs). It is equivalent to all the named graphs within it and associated with a _default_ graph which is automatically assigned a BNode for an identifier - if one isn't given.|$|R
2500|$|According to , the <b>closed</b> <b>world</b> <b>assumption</b> for a {{predicate}} [...] can {{be expressed}} by the rule ...|$|E
50|$|The {{completion}} semantics {{is closely}} related both to circumscription and to the <b>closed</b> <b>world</b> <b>assumption.</b>|$|E
5000|$|According to and Lifschitz, 1991, the <b>closed</b> <b>world</b> <b>assumption</b> for a {{predicate}} [...] can {{be expressed}} by the rule ...|$|E
40|$|Abstract. 3 APL is {{a widely}} known multi-agent {{programming}} language. However, when {{to be used in}} certain domains and environments, 3 APL has some limitations related to its simplistic update operator that only allows for updates to the extensional part of the belief base and its lack of a language with both default and strong negation to enable the representation and reasoning about knowledge with the open and <b>closed</b> <b>world</b> <b>assumptions.</b> In this paper, we propose to address these issues by modifying the belief base of 3 APL to be represented by Dynamic Logic Programming, an extension of Answer-Set Programming that allows for the representation of knowledge that changes with time. ...|$|R
40|$|Well Founded Semantics for logic {{programs}} extended with eXplicit negation (WFSX) {{is characterized}} by that, in any model, whenever :a (the explicit negation of a) holds, then ¸a (the negation by default of a) also holds. When explicit negation is used contradiction may be present (e. g. a and :a both hold for some a) and thus no semantics {{is given to the}} program. We introduce here the notion of removing some contradictions, through identifying the set of models obtained by revising <b>closed</b> <b>world</b> <b>assumptions.</b> One such unique model is singled out as the contradiction free semantics (CRSX). When contradiction does not arise, the contradiction removal semantics coincides with WFSX...|$|R
40|$|<b>Closed</b> <b>world</b> <b>assumptions</b> ” (CWAs) are an {{important}} class of implicit completions for logic databases. We present a new general definition of CWA; it is parameterized, so that known and new versions of CWAs can be derived as special cases. Our CWA, in turn, instantiates the more basic notion of “database completion ” and satisfies natural properties. It can even be characterized by the property of determining maximal completions without generating too much new information. We study syntactic as well as semantic definitions and prove them to be equivalent. By discussing several instances of CWAs we demonstrate the applicability of our framework to database specification. ...|$|R
50|$|The {{notion of}} {{completion}} {{is closely related}} to McCarthy's circumscription semantics for default reasoning, and to the <b>closed</b> <b>world</b> <b>assumption.</b>|$|E
50|$|A logic {{program with}} strong {{negation}} can include the <b>closed</b> <b>world</b> <b>assumption</b> rules {{for some of}} its predicates and leave the other predicates {{in the realm of}} the open world assumption.|$|E
5000|$|Another {{point of}} {{conflict}} concerning Nulls is that they violate the <b>closed</b> <b>world</b> <b>assumption</b> model of relational databases by introducing an open world assumption into it. [...] The <b>closed</b> <b>world</b> <b>assumption,</b> {{as it pertains to}} databases, states that [...] "Everything stated by the database, either explicitly or implicitly, is true; everything else is false." [...] This view assumes that the knowledge of the world stored within a database is complete. Nulls, however, operate under the open world assumption, in which some items stored in the database are considered unknown, making the database's stored knowledge of the world incomplete.|$|E
40|$|We {{present a}} sound and complete, {{tractable}} inference method for reasoning with localized <b>closed</b> <b>world</b> <b>assumptions</b> (LCWA's) {{which can be}} used in applications where a reasoning or planning agent can not assume complete information about planning or reasoning states. This Open <b>World</b> <b>Assumption</b> is generally necessary in most realistic robotics applications. The inference procedure subsumes that described in Etzioni et al [9], and others. In addition, it provides a great deal more expressivity, permitting limited use of negation and disjunction in the representation of LCWA's, while still retaining tractability. The approach is based on the use of circumscription and quanti er elimination techniques and inference is viewed as querying a deductive database. Both the preprocessing of the database using circumscription and quantifier elimination, and the inference method itself, have polynomial time and space complexity...|$|R
40|$|We {{describe}} {{the design and}} implementation of a system for logic-based multimedia retrieval. As highlevel logic for retrieval of hypermedia documents, we have developed a probabilistic object-oriented logic (POOL) which supports aggregated objects, different kinds of propositions (terms, classifications and attributes) and even rules as being contained in objects. Based on a probabilistic four-valued logic, POOL uses an implicit open <b>world</b> <b>assumption,</b> allows for <b>closed</b> <b>world</b> <b>assumptions</b> {{and is able to}} deal with inconsistent knowledge. POOL programs and queries are translated into probabilistic Datalog programs which can be interpreted by the HySpirit inference engine. For storing the multimedia data, we have developed a new basic IR engine which yields physical data abstraction. The overall architecture and the flexibility of each layer supports logic-based methods for multimedia information retrieval...|$|R
40|$|In this paper, {{we propose}} a new nonmonotonic logic called general default logic. On the one hand, it generalizes Reiter's default logic by adding to it rule-like {{operators}} used in logic programming. On the other hand, it extends logic programming by allowing arbitrary propositional formulas. We show {{that with this}} new logic, one can formalize naturally rule constraints, generalized <b>closed</b> <b>world</b> <b>assumptions,</b> and conditional defaults. We show that under a notion of strong equivalence, sentences of this new logic {{can be converted to}} a normal form. We also investigate the computational complexity of various reasoning tasks in the logic, and relate it to some other nonmonotonic formalisms such as Lin and Shoham's logic of GK and Moore's autoepistemic logic...|$|R
50|$|Conditional Tables algebra, {{mainly of}} {{theoretical}} interest, supports projection, selection, union, join, and renaming. Under <b>closed</b> <b>world</b> <b>assumption,</b> {{it can also}} handle the operator of difference, thus it can support all relational operators.|$|E
50|$|A {{relational}} database consists of sets of tuples {{with the same}} attributes. SQL is a query and management language for {{relational database}}s. Prolog is a logical programming language. Both use the <b>closed</b> <b>world</b> <b>assumption.</b>|$|E
5000|$|A common default {{assumption}} is that what is not known to be true {{is believed to be}} false. This is known as the <b>Closed</b> <b>World</b> <b>Assumption,</b> and is formalized in default logic using a default like the following one for every fact [...]|$|E
40|$|HySpirit is a {{retrieval}} {{engine for}} hypermedia retrieval integrating concepts from information retrieval (IR) and deductive databases. The logical view on IR models retrieval as uncertain inference, {{for which we}} use probabilistic reasoning. Since the expressiveness of classical IR models is not sufficient for hypermedia retrieval, HySpirit {{is based on a}} probabilistic version of Datalog. In hypermedia retrieval, different nodes may contain contradictory information; thus, we introduce probabilistic four-valued Datalog. In order to support fact queries as well as contentbased retrieval, HySpirit is based on an open <b>world</b> <b>assumption,</b> but allows for predicate-specific <b>closed</b> <b>world</b> <b>assumptions.</b> For performing efficient retrieval on large databases, our system provides access to external data. We demonstrate the application of HySpirit by giving examples for retrieval on images, structured documents and large databases. 1 Introduction Due to the advances in hardware, processing of multimed [...] ...|$|R
40|$|Until now the {{mainstream}} software development community {{has not had}} to deal with the challenges of concurrent or parallel programming. Concurrent programming has been confined to specialized domains with <b>closed</b> <b>world</b> <b>assumptions</b> e. g. operating system kernels. Parallel programming has been successfully performed in very specific domain e. g. scientific computing using highly skilled developers often on special parallel systems (e. g. supercomputers). Even more specialized are FPGA-based systems which provide parallel hardware implementations of problems which can outperform supercomputers. However, the highly specialized skills one needs to produce these systems makes them inaccessible to {{the mainstream}} developer or user of computationally intensive systems. All this is about to change as we approach an era where single core performance has leveled off and processor vendors hav...|$|R
40|$|Although a {{tremendous}} {{effort has been}} made to perform a reliable analysis of images and videos in the past fifty years, the reality is that one cannot rely 100 % on the analysis results. The only exception is applications in controlled environments as dealt in machine vision, where <b>closed</b> <b>world</b> <b>assumptions</b> apply. However, in general, one has to deal with an open world, which means that content of images may significantly change, and it seems impossible to predict all possible changes. For example, in the context of surveillance videos, the light conditions may suddenly fluctuate in parts of images only, video compression or transmission artifacts may occur, a wind may cause a stationary camera to tremble, and so on. The problem is that video analysis has to be performed in order to detect content changes, but such analysis may b...|$|R
50|$|In {{the case}} you have KB := { P(a), Q(a), Q(b) }, you have KB ⊭ P(b) and KB ⊭ ¬P(b), so with the <b>closed</b> <b>world</b> <b>assumption</b> you would get KB' = { P(a), ¬P(b), Q(a), Q(b) } where you have KB' ⊨ ¬P(b).|$|E
5000|$|There are {{at least}} two {{situations}} where the <b>closed</b> <b>world</b> <b>assumption</b> is used. The first is where it is assumed that a knowledge base contains all relevant facts. This is common in corporate databases. That is, the information it contains is assumed to be complete ...|$|E
5000|$|In some cases, you {{can make}} a {{consistent}} knowledge base complete with the <b>closed</b> <b>world</b> <b>assumption</b> - that is, adding all not-entailed literals as negations to the knowledge base. In the above example though, this would not work because it would make the knowledge base inconsistent: ...|$|E
40|$|The {{scenario}} semantics {{of extended}} logic programs builds upon simple primitive notions {{and has been}} shown to encompass many important logic program semantics. Here we introduce into the scenario semantics paradigm a general flexible notion of optative acceptance of acceptable hypotheses, and proceed to illustrate its application to fault diagnosis, taxonomic reasoning, and declarative logic program debugging. Whereas the contradiction removal semantics approach has been shown applicable {{to a wide range of}} non-monotonic reasoning problems including the above, it is based either on minimally or on sceptically taking back the most primitive (<b>closed</b> <b>world)</b> <b>assumptions</b> contributing to contradiction. In contrast, we show here how to achieve the same effect, and solve the same range of problems, by means of a contradiction avoiding rule of optative acceptance of hypotheses, easily defined in the present more general approach. Our counterpart to minimality in contradiction removal consists (qu [...] ...|$|R
40|$|AbstractThis paper {{presents}} a novel logic programming based language for nested relational and complex value models called Relationlog. It {{stands in the}} same relationship to the nested relational and complex value models as Datalog stands to the relational model. The main novelty of the language is the introduction of powerful mechanisms, namely, partial and complete set terms, for representing and manipulating both partial and complete information on nested sets, tuples and relations. They generalize the set grouping and set enumeration mechanisms of LDL and allow the user to directly encode the open and <b>closed</b> <b>world</b> <b>assumptions</b> on nested sets, tuples, and relations. They allow direct inference and access to deeply embedded values in a complex value relation as if the relation is normalized, which greatly increases the ease of use of the language. As a result, the extended relational algebra operations can be represented in Relationlog directly, and more importantly, recursively in a way similar to Datalog. Like Datalog, Relationlog has a well-defined Herbrand model-theoretic semantics, which captures the intended semantics of nested sets, tuples and relations, and also a well-defined proof-theoretic semantics which coincides with its model-theoretic semantics...|$|R
40|$|This paper {{describes}} {{efforts to}} develop and field an adaptive health planner and parallel agents that securely connect distributed users and data sets in a collaborative approach able to anticipate health ToDo items and to remind and alert about these items over the web. The planner and agents, reasoning temporally and non-monotonically, are able to handle changing health conditions, unknown health facts, user wellness and lifestyle preferences, and updates about each user's situations. Usage of and extensions to argumentation, qualitative decision making, situational calculus, and temporal algebras are described. Defeasible assertions, default arguments, support sign dictionaries, <b>closed</b> <b>world</b> <b>assumptions,</b> and anytime algorithms are used to derive feasible health plans that are later updated as more information unfolds. A set of robust, open standards-based client server approaches (e. g., CORBA, ODBC, Java, and ANSI HL 7 Common Object Model) are used to encapsulate and plug all these components into the web, and to handle the distributed agent and object communications. Extensions to these emerging standards are at times made due to engineering and domain considerations, however, {{the goal is to}} maximize reuse of published guidelines and integration of R 2 Do 2 by any patient record system that also adheres to the standards. From this perspective, R 2 Do 2 is an experiment in an open standards framework for middleware in the healthcare field. This research also tries to reflect lessons learned about the extensions needed in these standards if healthcare middleware frameworks are to transparently support users over the web. 2 1...|$|R
50|$|Minker {{is one of}} {{the founders}} of the area of {{deductive}} databases and disjunctive logic programming. He has made important contributions to semantic query optimization and to cooperative and informative answers for deductive databases. He has also developed a theoretical basis for disjunctive databases and disjunctive logic programs, developing the Generalized <b>Closed</b> <b>World</b> <b>Assumption</b> (GCWA).|$|E
50|$|From a store perspective, closed world {{assumptions}} {{also provide}} {{the benefit of}} better query response times due to the explicit closed world boundaries. Closed world boundaries can be made transparent by federated queries that assume each ConjunctiveGraph is a section of a larger, unbounded universe. So a <b>closed</b> <b>world</b> <b>assumption</b> does not preclude you from an open-world assumption.|$|E
5000|$|This {{is because}} Prolog {{does not know}} {{anything}} about Plato, and hence defaults to any property about Plato being false (the so-called <b>closed</b> <b>world</b> <b>assumption).</b> Finally?- mortal(X) (Is anything mortal) would result in [...] "Yes" [...] (and in some implementations: [...] "Yes": X=socrates)Prolog {{can be used for}} vastly more complicated inference tasks. See the corresponding article for further examples.|$|E
40|$|Abstract. We discuss ALCK, a nonmontonic {{logic that}} augments ALC with the epistemic {{operator}} K, {{and argue that}} a similar extension to OWL would be desirable. We show, however, that at its current state the OWL syntax is too inflexible to capture even this syntactically simpleminded extension. Finally, we introduce our implementation of ALCK as an extension to the tableau-based OWL-DL reasoner Pellet. 1 Nonmonotonic logics, open and <b>closed</b> <b>worlds</b> Nonmonotonic logics were proven generally successful in capturing, among other things, several forms of common sense and database reasoning. A bold divide between the field of nonmonotonic formalisms and first-order reasoning (where description logics and OWL lie) rests in the <b>closed</b> v. open <b>world</b> <b>assumption.</b> In database systems, {{it is reasonable to}} assume that the data at hand is complete. Since no information outside the database is relevant, we say that our <b>world</b> is <b>closed.</b> Formally, if Σ �| = ϕ (where Σ is the knowledge in our database and ϕ is some formula), we assume ¬ϕ is the case. This constitutes the closed-worl...|$|R
40|$|Abstract. The open <b>world</b> <b>assumption</b> makes OWL principally {{suitable}} to handle incomplete knowledge in Semantic Web scenarios, however, some scenarios desire <b>closed</b> <b>world</b> reasoning. Autoepistemic description logics allow to realise <b>closed</b> <b>world</b> reasoning in open world settings through epistemic operators. An extension of OWL by epistemic operators therefore allows for non-monotonic features known from <b>closed</b> <b>world</b> systems, such as default rules, integrity constraints or epistemic querying. These features can be beneficially applied in Semantic Web scenarios, where OWL lacks expressiveness. ...|$|R
40|$|Representation {{systems have}} been widely used to capture {{different}} forms of incomplete data in various settings. However, existing representation systems are not expressive enough to handle the more complex scenarios of missing data that can occur in practice: these could vary from missing attribute values, missing a known number of tuples, or even missing an unknown number of tuples. In this work, we propose a new representation system called m-tables, that can represent many different types of missing data. We show that m-tables form a closed, complete and strong representation system under both set and bag semantics and are strictly more expressive than conditional tables under both the <b>closed</b> and open <b>world</b> <b>assumptions.</b> We further study the complexity of computing certain and possible answers in m-tables. Finally, we discuss how to "interpret" m-tables through a novel labeling scheme that marks a type of generalized tuples as certain or possible...|$|R
