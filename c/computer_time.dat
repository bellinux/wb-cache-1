1771|2056|Public
5|$|Alan Kotok {{was born}} in 1941 in Philadelphia, Pennsylvania, and was raised as an only child in Vineland, New Jersey. During his childhood, he played with tools in his father's {{hardware}} store and learned model railroading. He was a precocious child, skipping two grades at high school, and he matriculated at Massachusetts Institute of Technology (MIT) aged 16. Although his interest in computers began at Vineland High School, his first practical experience of computing came at MIT; there he developed a habit of working late at night when more <b>computer</b> <b>time</b> was available.|$|E
5|$|Beginning in {{the summer}} of 1962 and {{continuing}} over the next few years, members of the PDP-1 programming community at MIT, including Russell and the other Hingham Institute members, began to spread out to other schools and employers such as Stanford University and DEC, and as they did they spread the game to other universities and institutions with a PDP-1 computer. As a result, Spacewar was perhaps the first video game to be available outside a single research institute. Over the next decade, programmers at these other institutions began coding their own variants, including features such as allowing more ships and players at once, replacing the hyperspace feature with a cloaking device, space mines, and even a first-person perspective version played on two screens that simulates each pilot's view out of the cockpit. Some of these Spacewar installations also replicated Kotok and Saunders' gamepad. According to a second-hand account heard by Russell while working at DEC, Spacewar was reportedly used as a smoke test by DEC technicians on new PDP-1 systems before shipping {{because it was the only}} available program that exercised every aspect of the hardware. Although the game was widespread for the era, it was still very limited in its direct reach: the PDP-1 was priced at US$120,000 and only 55 were ever sold, most without a monitor and many of the remainder to secure military locations or research labs with no free <b>computer</b> <b>time,</b> which prevented the original Spacewar from reaching beyond a narrow, academic audience. Though some later DEC models, such as the PDP-6, came with Spacewar pre-loaded, the audience for the game remained very limited; the PDP-6, for example, sold only 23 units.|$|E
5|$|Many {{of these}} are mirror-image duplicates of others, and others die before having {{to make all the}} choices in their ruleset, leaving 411 {{distinct}} species (412 if the infinite straight-line worm is included). 336 of these species eventually die. 73 patterns exhibit infinite behaviour, that is, they settle into a repeating pattern that does not return to the origin. A further two are strongly believed to be infinite and one remains unsolved. Eleven of the rules exhibit complicated behaviour. They do not die even after many billions of iterations, nor do they adopt an obviously infinite pattern. Their ultimate fate was unknown until 2003 when Benjamin Chaffin developed new methods of solving them. After many hours of <b>computer</b> <b>time,</b> nine of the eleven rules were solved, leaving the worms with rules {1,0,4,2,0,2,0} and {1,0,4,2,0,1,5}. The first of these was solved by Tomas Rokicki, who determined that it halts after 57 trillion timesteps, leaving only {1,0,4,2,0,1,5} unsolved. According to Rokicki, the worm is still active after 5.21019 timesteps. He used an algorithm based on Bill Gosper's Hashlife to simulate the worms at extraordinary speeds. This behaviour is considerably more complex than the related rectangular grid worm, which has a longest path of only 16 segments.|$|E
50|$|The {{game was}} also awarded by Editors' Choice Award on server <b>Computer</b> <b>Times.</b>|$|R
50|$|Shankar's {{virus is}} {{also able to}} effect a <b>computer's</b> <b>time,</b> being able to speed up or reverse time to restore itself (in a way similar to the system restore function) or create a copy of itself to remain {{inactive}} until a future time if it should be removed via an antivirus program. It is noted though that these actions visibly weaken its functions as Microsoft Word may stop malfunctioning after the virus manipulates the <b>computer's</b> <b>time.</b>|$|R
50|$|Mohsan {{subdivided}} {{the company}} into <b>Time</b> <b>Computers</b> and <b>Time</b> <b>Computer</b> Systems, {{in order to}} segregate manufacturing and retailing. The company went into administration on 27 July 2005. In March 2006, the brand was rebranded as Time UK.|$|R
25|$|Google Chrome is {{the basis}} of Google's Chrome OS {{operating}} system that ships on specific hardware from Google's manufacturing partners. The user interface has a minimalist design resembling the Google Chrome browser. Chrome OS is aimed at users who spend most of their <b>computer</b> <b>time</b> on the Web; the only applications on the devices are a browser incorporating a media player and a file manager.|$|E
25|$|In {{the decade}} {{preceding}} Unix, computers had grown enormously in {{power to the}} point where computer operators were looking for new ways to get people to use their spare time on their machines. One of the major developments during this era was time-sharing, whereby a number of users would get small slices of <b>computer</b> <b>time,</b> at a rate at which it appeared they were each connected to their own, slower, machine.|$|E
25|$|Microsoft's {{software}} development {{was done on}} a DEC PDP-10 mainframe computer system. Paul Allen had developed a program that could completely simulate a new microprocessor system. This allowed them to write and debug software before the new computer hardware was complete. They were charged by the hour and {{by the amount of}} resources used (storage, printing, etc.) The 6800 BASIC was complete before the Altair 680 was finished. This was the $40,000 of <b>computer</b> <b>time</b> mentioned in the letter.|$|E
40|$|Most {{publications}} discussing missile interception systems {{assume a}} zero <b>computer</b> response <b>time.</b> This thesis studies {{the impact of}} <b>computer</b> response <b>time</b> on single-missile single-target and multiple- missile multiple-target systems. Simulation results for the final miss distance as the <b>computer</b> response <b>time</b> increases are presented. A simple online cooperative adjustment model for multiple-missile multiple-target system is created {{for the purpose of}} studying the computer delay effect...|$|R
40|$|Methods {{of attacking}} chaotic {{encryption}} algorithms have been developed. These {{methods have been}} applied to all the published chaotic encryption systems and all these systems are broken in very short <b>computer</b> <b>times.</b> Counter measures have also been developed {{in order to make}} chaotic encryption secure. Several examples and results are given...|$|R
5000|$|Backup {{power for}} {{personal}} <b>computer</b> real <b>time</b> clocks and BIOS configuration data ...|$|R
25|$|The polar hydrogens {{are usually}} {{retained}} in the model, because proper treatment of hydrogen bonds requires a reasonably accurate description of the directionality and the electrostatic interactions between the donor and acceptor groups. A hydroxyl group, for example, can be both a hydrogen bond donor, and a hydrogen bond acceptor, {{and it would be}} impossible to treat this with one OH pseudo-atom. About half the atoms in a protein or nucleic acid are non-polar hydrogens, so the use of united atoms can provide a substantial savings in <b>computer</b> <b>time.</b>|$|E
25|$|If {{the bond}} angles, bond lengths and torsion angles of the {{components}} are not modified at any stage of complex generation, it is known as rigid body docking. A subject of speculation {{is whether or not}} rigid-body docking is sufficiently good for most docking. When substantial conformational change occurs within the components at the time of complex formation, rigid-body docking is inadequate. However, scoring all possible conformational changes is prohibitively expensive in <b>computer</b> <b>time.</b> Docking procedures which permit conformational change, or flexible docking procedures, must intelligently select small subset of possible conformational changes for consideration.|$|E
25|$|Liverpool was {{the first}} among UK {{universities}} to develop their desktop computer power management solution, which has been widely adopted by other institutions. The university has subsequently piloted other advanced software approaches further increasing savings. The university has also {{been at the forefront}} of using the Condor HTC computing platform in a power saving environment. This software, which makes use of unused <b>computer</b> <b>time</b> for computationally intensive tasks usually results in computers being left turned on. The university has demonstrated an effective solution for this problem using a mixture of Wake-on-LAN and commercial power management software.|$|E
25|$|Multitasking {{refers to}} the running of {{multiple}} independent computer programs on the same computer; giving the appearance that it is performing the tasks at the same <b>time.</b> Since most <b>computers</b> can do at most one or two things at one time, this is generally done via time-sharing, which means that each program uses {{a share of the}} <b>computer's</b> <b>time</b> to execute.|$|R
50|$|This in turn {{caused the}} CDUs to issue {{interrupts}} to the guidance computerâ€”12,800 interrupts per second, which consumed about 15% of the <b>computer's</b> available compute <b>time.</b> As {{the rest of}} the landing tasks were consuming about 85% of the <b>computer's</b> <b>time,</b> the <b>computer</b> ran out of time to process all of its queued jobs in a single cycle. As scheduled jobs in the computer failed to complete in time, the programs competed for core set memory and vector accumulator registers; eventually, one and then the other were exhausted, and the LM's guidance computer began sounding program alarms and resetting.|$|R
5000|$|... #Caption: The {{inside of}} this <b>computer</b> over <b>time</b> has {{accumulated}} {{a lot of}} dust and has become dirty.|$|R
25|$|The {{abstract}} {{properties of}} covering {{have been studied}} by mathematicians for over a century. However, direct application of these results has not generally been possible. Closed-form mathematical solutions, especially for probability distributions, often cannot be readily evaluated. That is, they involve inordinately large amounts of <b>computer</b> <b>time</b> for parameters characteristic of DNA sequencing. Stevens' configuration is one such example. Results obtained {{from the perspective of}} pure mathematics also do not account for factors that are actually important in sequencing, for instance detectable overlap in sequencing fragments, double-stranding, edge-effects, and target multiplicity. Consequently, development of sequencing theory has proceeded more according to the philosophy of applied mathematics. In particular, it has been problem-focused and makes expedient use of approximations, simulations, etc.|$|E
500|$|At 13, he {{enrolled}} in the Lakeside School, a private preparatory school. [...] When {{he was in the}} eighth grade, the Mothers' Club at the school used proceeds from Lakeside School's rummage sale to buy a Teletype Model 33 ASR terminal and a block of <b>computer</b> <b>time</b> on a General Electric (GE) computer for the school's students. [...] Gates took an interest in programming the GE system in BASIC, and was excused from math classes to pursue his interest. He wrote his first computer program on this machine: an implementation of tic-tac-toe that allowed users to play games against the computer. Gates was fascinated by the machine and how it would always execute software code perfectly. When he reflected back on that moment, he said, [...] "There was just something neat about the machine." [...] After the Mothers Club donation was exhausted, he and other students sought time on systems including DEC PDP minicomputers. One of these systems was a PDP-10 belonging to Computer Center Corporation (CCC), which banned four Lakeside students Gates, Paul Allen, Ric Weiland, and Kent Evans for the summer after it caught them exploiting bugs in the operating system to obtain free <b>computer</b> <b>time.</b>|$|E
500|$|At {{the end of}} the ban, {{the four}} {{students}} offered to find bugs in CCC's software in exchange for extra <b>computer</b> <b>time.</b> Rather than use the system via Teletype. Subsequently, Gates went to CCC's offices and studied source code for various programs that ran on the system, including programs in Fortran, Lisp, and machine language. The arrangement with CCC continued until 1970, when the company went out of business. The following year, Information Sciences, Inc. hired the four Lakeside students to write a payroll program in COBOL, providing them <b>computer</b> <b>time</b> and royalties. After his administrators became aware of his programming abilities, Gates wrote the school's computer program to schedule students in classes. He modified the code so that he was placed in classes with [...] "a disproportionate number of interesting girls." [...] He later stated that [...] "it was hard to tear myself away from a machine at which I could so unambiguously demonstrate success." [...] At age 17, Gates formed a venture with Allen, called Traf-O-Data, to make traffic counters based on the Intel 8008 processor. [...] In early 1973, Bill Gates served as a congressional page in the U.S. House of Representatives.|$|E
500|$|Two {{additional}} developments around 1980 {{once again}} accelerated {{the ability to}} compute [...] First, the discovery of new iterative algorithms for computing , which were much faster than the infinite series; and second, the invention of fast multiplication algorithms that could multiply large numbers very rapidly. Such algorithms are particularly important in modern [...] computations, {{because most of the}} <b>computer's</b> <b>time</b> is devoted to multiplication. They include the Karatsuba algorithm, Toomâ€“Cook multiplication, and Fourier transform-based methods.|$|R
5000|$|From 1965 to 1997 {{he worked}} for many magazines. On 27 April 1968, he photographed the Queen and her family on her {{birthday}} for the Illustrated London News front page. [...] Other magazines he shot for during this time include Avenue, The Dancing Times, London Life, Harpers Bazaar, Harpers & Queen, Vogue, Direct Response, Apple <b>Computers,</b> <b>Time</b> Out, Radio Times, Lion News, Daily Express, The Viewer, Envoy, Accountancy, RIBA Journal, Intercity Magazine, and Dobellâ€™s Record Sleeves.|$|R
30|$|The newly {{presented}} benchmarking methodology {{performance measure}} H (defined {{as the number}} of 1 U boxes needed to accomplish the desired execution time using a given Big Data benchmark), would considerably reorder the TOP 500 list. If the TOP 500 ranking was based on the performance measure H, DataFlow machines would outperform ControlFlow machines. This statement is backed up with the presented performance results. The results show that when using DataFlow computers, instead od ControlFlow <b>computers,</b> <b>time,</b> energy, and/or space can be saved.|$|R
500|$|Intractability and the {{combinatorial}} explosion. In 1972 Richard Karp (building on Stephen Cook's 1971 theorem) showed {{there are}} many problems that can probably only be solved in exponential time (in {{the size of the}} inputs). Finding optimal solutions to these problems requires unimaginable amounts of <b>computer</b> <b>time</b> except when the problems are trivial. This almost certainly meant that many of the [...] "toy" [...] solutions used by AI would probably never scale up into useful systems.|$|E
500|$|The {{development}} of {{computers in the}} mid-20th century again revolutionized the hunt for digits of [...] American mathematicians John Wrench and Levi Smith reached 1,120 digits in 1949 using a desk calculator. Using an inverse tangent (arctan) infinite series, {{a team led by}} George Reitwiesner and John von Neumann that same year achieved 2,037 digits with a calculation that took 70 hours of <b>computer</b> <b>time</b> on the ENIAC computer. The record, always relying on an arctan series, was broken repeatedly (7,480 digits in 1957; 10,000 digits in 1958; 100,000 digits in 1961) until 1 million digits were reached in 1973.|$|E
500|$|On {{or around}} February 18, she passed WikiLeaks a {{diplomatic}} cable, dated January 13, 2010, from the U.S. Embassy in ReykjavÃ­k, Iceland. They published it within hours, which suggested to Manning {{that they had}} received the other material, too. She found the Baghdad helicopter attack ("Collateral murder") video in a Judge Advocate's directory and passed it to WikiLeaks on or around February 21. In late March, she sent them a video of the May 2009 Granai airstrike in Afghanistan; this was the video later removed and apparently destroyed by Daniel Domscheit-Berg {{when he left the}} organization. we need super <b>computer</b> <b>time</b> http://ljsf.org/" [...] Between March 28 and April 9, she downloaded the 250,000 diplomatic cables and on April 10, uploaded them to a WikiLeaks dropbox.|$|E
40|$|In this paper, we {{investigate}} variants of the well-known Golub and Welsch algorithm for computing nodes and weights of Gaussian quadrature rules for symmetric weights w in intervals (âˆ’a, a) (not necessarily bounded). The {{purpose is to}} reduce the complexity of the Jacobi eigenvalue problem stemming from Wilfâ€™s theorem and show the effectiveness of Matlab implementations of our variants for reducing the <b>computer</b> <b>times</b> compared to some other methods. Numerical examples on three test problems show the benefits of these variants...|$|R
5000|$|In 1983 Coleman {{prepared}} the text {{for a series}} of home doctor programmes for <b>computers.</b> (The <b>Times</b> 29.3.1983, British Medical Journal 8.9.84, British Medical Journal 27.10.84) ...|$|R
40|$|The flow about a body {{traveling}} at hypersonic speed is energetic {{enough to cause}} the atmospheric gases to react chemically and reach states in thermal nonequilibrium. In this paper, a new procedure based on Gauss-Seidel line relaxation is shown to solve the equations of hypersonic flow fields containing finite reaction rate chemistry and thermal nonequilibrium. The method requires a few hundred time steps and small <b>computer</b> <b>times</b> for axisymmetric flows about simple body shapes. The extension to more complex two-dimensional body geometries appears straightforward...|$|R
500|$|On July 22, 1975 MITS {{signed a}} {{contract}} for the Altair BASIC with Bill Gates and Paul Allen. They received $3000 at signing and a royalty for each copy of BASIC sold; $30 for the 4K version, $35 for the 8K version and $60 for the expanded version. The contract had a cap of $180,000. MITS received an exclusive worldwide license to the program for 10 years. They also had exclusive rights to sub-license the program to other companies and agreed to use its [...] "best efforts" [...] to license, promote and commercialize the program. MITS would supply the <b>computer</b> <b>time</b> necessary for development; a PDP-10 owned by the Albuquerque school district. Paul Allen left his job at Honeywell and became the Vice President and Director of Software at MITS with a salary of $30,000 per year. Bill Gates was still a student at Harvard and just a contractor with MITS. The October 1975 company newsletter gives his title as [...] "Software Specialist".|$|E
500|$|The first {{successful}} numerical prediction was performed using the ENIAC digital computer in 1950 {{by a team}} composed of American meteorologists Jule Charney, Philip Thompson, Larry Gates, and Norwegian meteorologist Ragnar FjÃ¸rtoft, applied mathematician John von Neumann, and computer programmer Klara Dan von Neumann. [...] They used a simplified form of atmospheric dynamics based on solving the barotropic vorticity equation over a single layer of the atmosphere, by computing the geopotential height of the atmosphere's [...] pressure surface. [...] This simplification greatly reduced demands on <b>computer</b> <b>time</b> and memory, so the computations could be performed on the relatively primitive computers of the day. [...] When news of the first weather forecast by ENIAC was received by Richardson in 1950, he remarked that the results were an [...] "enormous scientific advance." [...] The first calculations for a 24â€‘hour forecast took ENIAC nearly 24hours to produce, but Charney's group noted that {{most of that time}} was spent in [...] "manual operations", and expressed hope that forecasts of the weather before it occurs would soon be realized.|$|E
2500|$|In 2008, Homebrew member Lee Felsenstein {{recalled}} similar {{doubts about}} Gates's $40,000 number: [...] "Well, {{we all knew}} [...] the evaluation of <b>computer</b> <b>time</b> was the ultimate in funny money. You never pay that much for the <b>computer</b> <b>time</b> and I think that research will show that they were using someone else's computer time; someone else was paying for that. It could have been Honeywell where Paul Allen was working. So we all knew {{this to be a}} spurious argument." ...|$|E
40|$|The real {{benefit of}} {{structural}} optimization techniques {{is in the}} application of these techniques to large structures such as full vehicles or full aircraft. For these structures, however, the sequential <b>computer's</b> <b>time</b> and memory requirements prohibit the solutions. With the rapid development of parallel computers, parallel processing of large scale structural optimization problems is achievable. In this paper we discuss the parallel processing of structural optimization problems with parallel structural analysis. Two different types of interface between the optimization and analysis routines are developed and tested...|$|R
50|$|Fourth, analysts must {{test their}} initial {{conditional}} probabilities {{to ensure that}} there are no mathematical errors. This is usually done by running simulations in a <b>computer</b> several <b>times.</b>|$|R
40|$|A {{review of}} the methods {{available}} for identification of the computational sequence in modular process simulators (partitioning and tearing) {{is followed by the}} presentation of a new very efficient and close-to-optimal routine for tearing. The problem of partitioning can be solved in <b>computer</b> <b>times</b> that are linear functions of the number of unit modules (vertices in the graph). The algorithm of Johns has been found to execute faster than the later and far better known algorithm of Tarjan. These methods are almost identical in idea but use different techniques in the book-keeping...|$|R
