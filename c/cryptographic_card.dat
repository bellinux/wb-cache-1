1|28|Public
40|$|Abstract: This paper {{presents}} {{the design and}} implementation of a <b>cryptographic</b> <b>card</b> embedded smart card reader. The <b>cryptographic</b> <b>card</b> introduces a digital integrated encryption/decryption circuitry called LAM {{which is based on}} Peripheral Component Interconnect (PCI) Architecture for the use on a Personal Computer (PC) communication card. The implementation of the above hardware PC cryptography card has been designed using a Field Programmable Gate Array (FPGA) chip in combination with the digital part of the PCI Bus. The main objective {{of this paper is to}} provide the reader with a deep insight of the design of a digital cryptographic circuit, which was designed for a FPGA chip with the use of Very (High-Speed Integrated Circuit) Hardware Description Language (VHDL) for a PCI card. A demonstration of the digital integrated encryption/decryption circuitry will be presented...|$|E
5000|$|Disk {{encryption}} (using <b>cryptographic</b> accelerator <b>card</b> if present) ...|$|R
50|$|<b>Cryptographic</b> smart <b>cards</b> {{are often}} used for single sign-on. Most {{advanced}} smart <b>cards</b> include specialized <b>cryptographic</b> hardware that uses algorithms such as RSA and Digital Signature Algorithm (DSA). Today's <b>cryptographic</b> smart <b>cards</b> generate key pairs on board, to avoid the risk from having more than one copy of the key (since by design there usually isn't a way to extract private keys from a smart card). Such smart cards are mainly used for digital signatures and secure identification.|$|R
50|$|As of July 2008, {{more than}} one million Barclays {{customers}} are using Gemalto’s <b>cryptographic</b> smart <b>card</b> reader, called PINsentry by Barclays for strong authentication for online banking.|$|R
50|$|The {{most common}} way to access <b>cryptographic</b> smart <b>card</b> {{functions}} {{on a computer}} {{is to use a}} vendor-provided PKCS#11 library. On Microsoft Windows the Cryptographic Service Provider (CSP) API is also supported.|$|R
5000|$|Hardware acceleration: Whether {{dedicated}} <b>cryptographic</b> accelerator expansion <b>cards</b> can {{be taken}} advantage of.|$|R
50|$|The KOV-21 is a <b>cryptographic</b> PC <b>card</b> module {{developed}} {{under the}} auspices of the U.S. National Security Agency and manufactured by Sypris Electronics LLC. It is intended to be the cryptographic engine for next generation key management devices, such as the AN/PYQ-10 key loader, as part of the U.S. Government’s Cryptographic Modernization Initiative. Sypris was awarded a contract for production of KOV-21 units in November, 2007.|$|R
40|$|One {{frequently}} cited {{reason for the}} lack of wide deployment of cryptographic protocols is the (perceived) poor performance of the algorithms they employ and their impact {{on the rest of the}} system. Although high-performance dedicated <b>cryptographic</b> accelerator <b>cards</b> have been commercially available for some time, market penetration remains low. We take a different approach, seeking to exploit existing system resources, such as Graphics Processing Units (GPUs) to accelerate cryptographic processing...|$|R
25|$|Many Mini PCI {{devices were}} {{developed}} such as Wi-Fi, Fast Ethernet, Bluetooth, modems (often Winmodems), sound <b>cards,</b> <b>cryptographic</b> accelerators, SCSI, IDE–ATA, SATA controllers and combination cards. Mini PCI cards {{can be used}} with regular PCI-equipped hardware, using Mini PCI-to-PCI converters. Mini PCI has been superseded by the much narrower PCI Express Mini Card.|$|R
5000|$|A {{number of}} {{otherwise}} secure schemes can be defeated under chosen-ciphertext attack. For example, the El Gamal cryptosystem is semantically secure under chosen-plaintext attack, but this semantic security can be trivially defeated under a chosen-ciphertext attack. Early versions of RSA padding {{used in the}} SSL protocol were vulnerable to a sophisticated adaptive chosen-ciphertext attack which revealed SSL session keys. Chosen-ciphertext attacks have implications for some self-synchronizing stream ciphers as well. Designers of tamper-resistant <b>cryptographic</b> smart <b>cards</b> must be particularly cognizant of these attacks, as these devices may be completely {{under the control of}} an adversary, who can issue a large number of chosen-ciphertexts in an attempt to recover the hidden secret key.|$|R
50|$|CNG also {{supports}} elliptic curve cryptography which, because it uses shorter keys {{for the same}} expected level of security, is more efficient than RSA. The CNG API integrates with the smart card subsystem by including a Base Smart <b>Card</b> <b>Cryptographic</b> Service Provider (Base CSP) module which encapsulates the smart card API. Smart card manufacturers {{just have to make}} their devices compatible with this, rather than provide a from-scratch solution.|$|R
40|$|Abstract—This paper {{presents}} a smart-card applet that {{is able to}} verify X. 509 certificates {{and to use the}} public key contained in the certificate for verifying digital signatures that have been created using the corresponding private key, e. g. for the purpose of authenticating the certificate owner against the card. The approach has been implemented as an operating prototype on Java cards. S Keywords—Public key <b>cryptographic</b> applications, smart <b>cards.</b> I...|$|R
40|$|This paper {{analyzes}} a {{key recovery}} method for RSA signature generation or decryption implementations using the Chinese Remainder Theorem (CRT) speed up. The CRT-based RSA implementation {{is common in}} both low computing power devices and high speed <b>cryptographic</b> acceleration <b>cards.</b> This recovery method is designed to work {{in conjunction with a}} side-channel attack where the CRT exponents are discovered from a message decryption or signature generation operation, the public exponent is assumed small and the public modulus is unknown. Since many RSA implementations use the small, low hamming weight public exponent 65537 this {{turns out to be a}} realistic method. An algorithm for recovering the private key, modulus and prime factorization candidates is presented with a proof of correctness. Runtime estimates and sample source code is given. ...|$|R
40|$|Today, most authenticating {{applications}} using passwords {{are being}} compromised {{and the risk}} is becoming higher because it's becoming easier to download tools that will crack them. Passwords are no longer sufficient, as threats against them increase in large quantity. With the growing use of internet to access information resources, government and private agencies are now moving to replace password-based user authentication with stronger, Two-factor authentication systems that strengthen information security. Two-factor authentication requires that two parts of data be accessible, each being from a different category. It is a secure identification {{process in which the}} user provides two means of recognition, one of which is normally a physical token, such as a card, and the other of which is typically something memorized, such as a password or PIN number. In general <b>Cryptographic</b> Smart <b>Cards</b> provide a secure, portable platform for this type of Two-factor authentication systems. However, these smart <b>card</b> <b>cryptographic</b> systems are vulnerable to traditional mathematical attacks such as Differential and Linear Cryptanalysis attacks. These attacks explore weaknesses in cryptographic algorithms that are represented as mathematical objects. Other form of cryptographic attacks like Differential Power Analysis (DPA) attacks, fault attacks, replay attacks, side channel attacks, etc also exists. Hence to overcome these attacks, a new generic framework “Smart Crypto-Stegano Card” is proposed in this paper to enhance Two-Factor Authentication that gives users a better way to provide enhanced security for different smart card applications...|$|R
40|$|International audienceThe {{recently}} introduced legislation on data retention to aid prosecuting cyber-related crime in Europe also affects the achievable security of systems for anonymous communication on the Internet. We have analyzed the newly arising {{risks associated with}} the process of accessing and storage of the retained data and propose a secure logging system, which utilizes <b>cryptographic</b> smart <b>cards,</b> trusted timestamping servers and distributed storage. These key components will allow for controlled access to the stored log data, enforce a limited data retention period, ensure integrity of the logged data, and enable reasonably convenient response to any legitimated request of the retained data. A practical implementation of the proposed scheme was performed for the AN. ON anonymity service, but the scheme can be used for other services affected by data retention legislation...|$|R
40|$|One {{frequently}} cited {{reason for the}} lack of wide deployment of cryptographic protocols is the (perceived) poor performance of the algorithms they employ and their impact {{on the rest of the}} system. Although high-performance dedicated <b>cryptographic</b> accelerator <b>cards</b> have been commercially available for some time, market penetration remains low. We take a different approach, seeking to exploit existing system resources, such as Graphics Processing Units (GPUs) to accelerate cryptographic processing. We exploit the ability for GPUs to simultaneously process large quantities of pixels to offload cryptographic processing from the main processor. We demonstrate the use of GPUs for stream ciphers, which can achieve 75 % the performance of a fast CPU. We also investigate the use of GPUs for block ciphers, discuss operations that make certain ciphers unsuitable for use with a GPU, and compare the performance of an OpenGL-based implementation of AES with implementations utilizing general CPUs. In addition to offloading system resources, the ability to perform encryption and decryption within the GPU has potential applications in image processing by limiting exposure of the plaintext to within the GPU...|$|R
40|$|Smart card {{technologies}} {{have had a}} huge impact on the development of cryp-tographic techniques for commercial applications. The first <b>cryptographic</b> smart <b>card</b> was introduced in 1979. It implemented the Telepass 1 one-way function using 200 bytes! Next came smart cards with secret-key and public-key capa-bilities, respectively in 1985 and 1988. Implementing an RSA computation on a smart card was (and still is) a very challenging task. Numerous tips and tricks were used {{in the design of the}} resulting smart-card chip P 83 C 852 from Philips using the CORSAIR crypto-coprocessor [1, 12]. Among them was a new algo-rithm for the modular multiplication of two integers, the Quisquater’s multi-plication algorithm [10, 11]. This algorithm is also present in the subsequent crypto-coprocessors, namely the FAME crypto-coprocessor [4] and its various extensions. 1 Quisquater’s Algorithm The classical schoolboy method evaluates the quotient q = ⌊U/N ⌋ of the integer division of U by N in a digit-by-digit fashion; the remainder of the division is r = U − qN. Let β = 2 k for some integer k ≥ 1. If N = ∑n− 1 i= 0 Ni β i an...|$|R
40|$|This paper shows a {{solution}} of how to use OpenCard {{in combination with the}} Java Cryptography Architecture (JCA) for digital signing. The presented solution enables Java applications to create digital signatures directly on cryptographic smart cards; to access the signing mechanism of the smart card, this solution integrates OpenCard into the JCA. Compared to other approaches that integrate smart cards in Java, the presented approach does not require detailed knowledge of smart card internals. Rather it is enough for the developer of a Java application to know about the JCA, which is not a big constraint, since most of the currently available Java applications that use digital signing in software are based on the JCA. Hence, an existing application that can sign data by the means of a pure software implementation of the signature algorithm can be improved easily to create the signatures directly on a smart card. This makes the transition to smart card technology for the purpose of digital signatures easy and inexpensive. Companies can extend their Java applications that already sign in software easily, for instance email clients, to exploit the very high security level of smart cards. Digital signature laws require such a high security level for the signature creation device, which can be achieved best by modern <b>cryptographic</b> smart <b>cards.</b> ...|$|R
40|$|Abstract. The {{forthcoming}} ISO/IEC 24727 {{series of}} standards defines application programming interfaces for smart cards {{and is expected}} to provide a major contribution to the global interoperability of smart cards and card-applications. However it assumes in part 2 [8] that certain information concerning the capabilities of the <b>card</b> and its (<b>cryptographic)</b> applicationsisstoredon the <b>card</b> itself. As already issued smart cards do not provide the required structures, the significance of ISO/IEC 24727 for billions (see [5]) of “legacy cards ” seems to be questionable. In order to overcome this problem, the present paper introduces an alternative approach, which does not require any specific information on the card but provides the information which is necessary to map generic requests to card-specific APDUs to the middleware in form of XML-based CardInfo-files. ...|$|R
50|$|Members of the Military and {{employees}} of the Department of Defense receive identity documents based on their status. A Geneva Conventions Identification Card (called a Common Access Card or CAC) is issued to Active Duty and Selected Reserve service members, DOD employees, and some contractors. Adult dependents of service members, retired service members, {{and members of the}} Inactive ready reserve receive a different kind of military ID that does not contain the smart <b>card</b> <b>cryptographic</b> chip that the Common Access Card has. A DOD identification card number usually matches the holder's Social Security Number. But, on June 1, 2011, the DOD began phasing out use of the SSN to protect service members' identities.http://www.defense.gov/news/newsarticle.aspx?id=63409 It was replaced with a 10-digit DOD ID Number and a 12-digit Benefits ID Number.|$|R
40|$|Public Key Infrastructure (PKI) {{systems have}} gained {{popularity}} {{over the last}} few years because of their scalability, security and ease of maintainence. They are slowly turning into a necessity from being a luxury particularly in smart card industry. Smart cards fit seamlessly into Public Key Infrastructures. They are very natural key storage units. Today's extensive use of smart cards in variety of applications in conjuntion with the advent of advanced <b>cryptographic</b> smart <b>cards</b> that can do complex cryptographic calculations on board demand robust operating systems with PKIs built into them. Although some operating systems with these features exist, few implement open standards. In addition, many PKIs designed by other parties, very often outside India, do not address the native problems in appropriate ways. Since we understand the kind of applications that are going to be deployed in India and limitations of existing resources better, we felt the need of an efficient PKI system developed in-house. In this report, we present the design and implementation details of PKI in SCOSTA - a Smart Card Operating system that is already widely used by some Government agencies in India. We look at what different components or modules should constitute a PKI architecture and how we approached and implemented each of them. We shall also present details about how we tested our system to make it robust enough...|$|R
40|$|Schweitzer Engineering Laboratories (SEL) {{will conduct}} the Hallmark Project {{to address the}} need {{to reduce the risk}} of energy {{disruptions}} because of cyber incidents on control systems. The goals is to develop solutions that can be both applied to existing control systems and designed into new control systems to add the security measures needed to mitigate energy network vulnerabilities. The scope of the Hallmark Project contains four primary elements: 1. Technology transfer of the Secure Supervisory Control and Data Acquisition (SCADA) Communications Protocol (SSCP) from Pacific Northwest National Laboratories (PNNL) to Schweitzer Engineering Laboratories (SEL). The project shall use this technology to develop a Federal Information Processing Standard (FIPS) 140 - 2 compliant original equipment manufacturer (OEM) module to be called a <b>Cryptographic</b> Daughter <b>Card</b> (CDC) with the ability to directly connect to any PC enabling that computer to securely communicate across serial to field devices. Validate the OEM capabilities with another vendor. 2. Development of a Link Authenticator Module (LAM) using the FIPS 140 - 2 validated Secure SCADA Communications Protocol (SSCP) CDC module with a central management software kit. 3. Validation of the CDC and Link Authenticator modules via laboratory and field tests. 4. Creation of documents that record the impact of the Link Authenticator to the operators of control systems and on the control system itself. The information in the documents can assist others with technology deployment and maintenance...|$|R
40|$|In {{the next}} years, smart cards {{are going to}} become the main {{personal}} identification document in many nations. In particular, both Europe and United States are Currently working to this aim. Therefore, {{tens of millions of}} smart cards. based oil hardware devices provided by many different manufacturers. will be distributed all over the world, and used in particular to accomplish the security tasks of electronic authentication and electronic signature. In this context, the so called Common Criteria define the security requirements for digital signature devices. Unfortunately, these criteria do not address any interoperability issue between smart cards of different manufacturers, which usually implement digital signature process in still correct but Slightly different ways. To face the interoperability problem. we realized a complete testing environment whose core is the Crypto Probing System (c) Nestor Lab, an abstract interface to a generic <b>cryptographic</b> smart <b>card,</b> embedding a standard model of the correct card behavior. which can be used to test the digital signature process behavior, also in the presence of alternate or disturbed command sequences, in conjunction with automatic verification techniques such as model checking. The framework allows to verify abstract behavior models against real smart cards, so {{it can be used to}} automatically verify the Common Criteria as well as the extended interoperability criteria above and many other low-level constraints. In particular, in this paper we show how we can verify that the card, in the presence of a sequence of (partially) modified commands, rejects them Without any side effect, remaining usable, or accepts them, generating a correct final result...|$|R
40|$|Abstract Despite AES is surpass in {{security}} than DES, {{it is still}} rare to be implemented in smart cards, due to the reason of deficient in AES coprocessors. Here a chip operation system (COS) called NexCard, which derived from Microsoft’s Windows COS, is used as the AES implement platform. After a suitable COS architecture design for AES and methodology of efficient memory usage, the simulation result shows that direct embedding AES Encryption may attain 0. 56 ms at system clock 15 MHz on the INFINEON SLE 66 CX 322 P chip without existence of coprocessor. Corresponding to the development needs in smart <b>card</b> <b>cryptographic</b> algorithms implementations, and different level of the security design specifications, a concept to conjoint numbers of algorithms into single smart card called cipher system on demand (CSOD) method is accomplished in this study concurrent. This is a method utilizing the multi-application capability of NexCard v 2. 0 to execute same AES algorithm as an on card applet. Although the performance of CSOD {{is not as good}} as AES embedded method; CSOD can provide same result in the situation of adaptability and extendibility is concerned over performanc...|$|R
40|$|Abstract: Secure {{buildings}} are currently protected from unauthorized access {{by a variety}} of devices. Even though there are many kinds of devices to guarantee the system safety such as PIN pads, keys both conventional and electronic, identity <b>cards,</b> <b>cryptographic</b> and dual control procedures, the people voice can also be used. The ability to verify the identity of a speaker by analyzing speech, or speaker verification, is an attractive and relatively unobtrusive means of providing security for admission into an important or secured place. An individual’s voice cannot be stolen, lost, forgotten, guessed, or impersonated with accuracy. Due to these advantages, this paper describes design and prototyping a voice-based door access control system for building security. In the proposed system, the access may be authorized simply by means of an enrolled user speaking into a microphone attached to the system. The proposed system then will decide whether to accept or reject the user’s identity claim or possibly to report insufficient confidence and request additional input before making the decision. Furthermore, intelligent system approach is used to develop authorized person models based on theirs voice. Particularly Adaptive-Network-based Fuzzy Inference Systems is used in the proposed system to identify the authorized and unauthorized people. Experimental result confirms the effectiveness of the proposed intelligent voice-based door access control system based on the false acceptance rate and false rejection rate...|$|R
40|$|This project {{discusses}} some of {{the shortcomings}} and limitations of secure execution with {{the current state of}} the Trusted Computing Group (TCG) specifications. Though we feel that the various industry initiatives taken by the TCG and CPU manufacturers for hardware based platform security are a step in the right direction, the problem of secure isolated code execution and TCB minimization still remains unsolved. This project proposes and implements an alternative architecture for secure code execution. Rather than proposing recommendations for hardware changes or building isolated execution environments inside a Trusted Platform Module (TPM), we use a platform that provides related, yet different services for secure / trusted code execution; couple its functionality and bind it to a TPM using cryptographic primitives. For the purpose of this study we used multi-application programmable SmartCards but similar work can also be implemented on other platforms as long as they meet some pre-requisites described in his report. Though newer hardware platforms such as IntelTXT (Trusted Execution Technology; formerly known as LaGrande) or AMD-V add support for native virtualization and secure interfacing with the TPM, the solution implemented in this project assumes a highly un-trusted environment and works on general purpose commodity hardware. Implementing a solution like this allows application developers to focus exclusively on the functionality and security of just their own code. Hence enabling them to execute their applications in isolation from numerous shortcomings and vulnerabilities that exist both in the form of hardware and software attacks. Furthermore we provide an interface to extend the existing functionality of the TPM by implementing special purpose code modules inside a smart card which can be used for all the functionalities missing in the TPM (for example replace-able cryptographic algorithms) yet required by high assurance and security sensitive applications. Furthermore by making small application closures running inside the secure execution environment of smart cards, we can minimize the TCB that a user needs to trust. We first discuss the challenges we face in the coupling process and the platform differences between the TPM and a Smart Card. We also discuss what solutions are possible and impossible in this scenario. Then we describe our implementation of a secure TPM / Smart <b>Card</b> <b>cryptographic</b> binding that gives us assurances of strong authentication with confidentiality and integrity services for the applications built with the coupled architecture. We move forward to describe our implementations of {{some of the}} enhanced TPM / Smart Card coupled services that were not possible with either a TPM or Smart Card alone and we discuss how these enhanced services add value to the current applications. With these enhanced TPM services we implement some applications that change the way conventional TPM or Smart Card applications are perceived. Finally we shed some light on potential future applications and future work...|$|R

