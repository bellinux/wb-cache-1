66|649|Public
25|$|In 1921, {{after years}} of planning, Stopes and her husband Humphrey Verdon Roe opened the Mothers' Clinic in Holloway, North London. The clinic, run by {{midwives}} and supported by visiting doctors, offered mothers birth control advice and taught them {{the use of a}} cervical cap. Later in the same year, Stopes founded the Society for Constructive Birth Control and Racial Progress, a support organization for the clinic. Her clinic made contraception acceptable during the 1920s by framing it in scientific terms and gained an international reputation. The Malthusian League opened up a second clinic shortly afterward, but admitted that Stopes clinic had been the first in the British Empire, although the League emphasised that theirs was the first scientific clinic where birth <b>control</b> <b>instruction</b> was given under medical supervision (the medical officer was Norman Haire). These two clinics 'opened up a new period {{in the history of the}} movement aimed at the emancipation of women from their slavery to the reproductive function'. Although the clinic helped few patients in 1921 'the year was one of the most important in the whole history of birth control simply because of their very existence'.|$|E
2500|$|At , the [...] "terrain ahead!" [...] warning again sounded on {{the flight}} deck. The crew {{continued}} the descent. According to MAK's report, at [...] (Decision Height) there was no [...] "landing" [...] or [...] "go-around" [...] call by the captain. If this happens, the first officer is supposed to overrule the captain, {{take control of the}} airplane, and initiate a go-around. Poland suggests that at this point the captain said [...] "Go around", and 8 seconds later the first officer confirmed by saying [...] "go around". (only the second of these two statements is recorded in the official transcripts by MAK; the first one may have been obscured by a simultaneous report by TAWS). Despite these calls, neither pilot initiated a go-around, and the descent continued. [...] One second after the 100 m altitude was reached, the TAWS alert [...] "PULL UP" [...] activated and continued to sound {{for the remainder of the}} flight. [...] "PULL UP" [...] only activates when the TAWS computer believes a collision with terrain is imminent. Therefore, when [...] "PULL UP" [...] sounds, the crew is supposed to begin an immediate, maximum performance emergency climb (full power and angle of attack to the maximum permissible without stalling) and continue climbing until the warning stops. However, the crew continued the descent. In a typical situation with an airport in the TAWS database, the [...] "PULL UP" [...] warning might not have sounded at this point. There is a method of setting up the TAWS to prevent false warnings when flying into airports not in the database, known as [...] "terrain inhibit" [...] mode; however, the crew did not utilize it. Even if they had, an excessive rate of descent and excessive airspeed can cause the TAWS to issue a [...] "SINK RATE" [...] warning followed by a [...] "PULL UP" [...] warning. This point (10:40:40 local time, approximately 20 seconds before the collision with terrain) is also notable because this was the moment when the aircraft had crossed the minimum allowed approach slope for this airport (2°10'). Prior to this moment, the radar controller had no reason to think that the landing attempt was not proceeding normally. The behavior of the controller was later the subject of some criticism by the Polish media. The controller remained silent for about 12 seconds after the aircraft passed the 100 m mark, and, even at that point, he did not order a go-around, but, rather issued an instruction to transit from a descent to a horizontal flight. (The decision to go around was apparently reached in the cabin of the aircraft within a few seconds of that instruction.) In addition, according to some interpretations of the radio exchange between the ground and the aircraft, the crew was instructed by the ground control to descend to [...] and either to wait for clearance to land or request one explicitly, or to inform the ground control regarding their decision whether to land or to go around. (According to MAK's report, it meant that the crew was supposed to inform the ground control of their decision to land before passing the decision altitude, and that the ground control was supposed to allow the landing as long as the runway and the airspace were clear.) None of this ever happened, with the aircraft continuing the descent through the 120 m mark while the ground control remained silent. It is unknown whether the crew really understood the ground <b>control</b> <b>instruction</b> (literally, [...] "landing additionally, 120, 3 m"), which was issued in Russian and used a relatively recent expression that was only codified in 2006.|$|E
50|$|The 360/85 uses {{microcode}} to <b>control</b> <b>instruction</b> execution, {{unlike the}} completely-hardwired 360/75 and 360/91; the high-end models of System/370 are also microcoded.|$|E
5000|$|Virtualize all {{input-output}} and processor <b>control</b> <b>instructions</b> ...|$|R
5000|$|The <b>control</b> <b>instructions</b> {{available}} {{in the bottom of}} the editor area are: ...|$|R
50|$|The computer's machine {{language}} consisted of 34 instructions, including arithmetical, logical and <b>control</b> <b>instructions.</b>|$|R
5000|$|The IBM System/360 Model 85 used {{microcode}} to <b>control</b> <b>instruction</b> execution, {{unlike the}} completely-hardwired 360/75 and 360/91; the high-end models of System/370 were also microcoded. Some describe the 360/85 {{as a bridge}} to the 370/165.|$|E
50|$|An {{application}} called Check Processing Control System (CPCS) is {{run on a}} main frame. It {{receives the}} data from the document processor and can store information from the cheques, including the bank number, branch number, account number and the amount the check was written for, as well as internal transaction codes. The 3890 can also operate in an offline mode using an SCI (Stacker <b>Control</b> <b>Instruction)</b> program.|$|E
50|$|In computing, a cache <b>control</b> <b>instruction</b> is a hint {{embedded}} in the instruction stream of a processor intended to improve the performance of hardware caches, using foreknowledge of the memory access pattern supplied by the programmer or compiler. They may reduce cache pollution, reduce bandwidth requirement, bypass latencies, by providing better control over the working set. Most cache control instructions do not affect the semantics of a program, although some can.|$|E
40|$|Control theory focuses {{exclusively}} on manual control mechanisms, where the <b>control</b> <b>instructions</b> over the organizational employees are executed {{by a person}} (e. g. project manager). With the advancement of computer systems, contemporary organizations have commenced handing over employee control aspects to computer systems. In this research, we introduce “system controls”, where a computer system is executing <b>control</b> <b>instructions</b> over the employees. Moreover, we discuss the characteristics, limitations and issues in system controls when added as a perspective of control theory...|$|R
40|$|One of {{the most}} {{stringent}} issues in obtaining optimal performance from today’s computers is the decay in CPU performance that results from mispredicted branch instructions. As a result, a number of techniques have been proposed that attempt to forecast the decision of <b>control</b> <b>instructions.</b> These techniques however, while effective, do not achieve perfect accuracy. This paper suggests the use of new prediction instructions, which, together with a loop retiming technique, provide 100 % accuracy in most instances for single <b>control</b> <b>instructions</b> found in loop structures...|$|R
5000|$|Larrabee {{included}} explicit cache <b>control</b> <b>instructions</b> {{to reduce}} cache thrashing during streaming operations which only read/write data once. Explicit prefetching into L2 or L1 cache is also supported.|$|R
50|$|The BPU {{was capable}} of {{dispatching}} multiple instructions to the fixed and floating point instructions queues while it was executing a program flow <b>control</b> <b>instruction</b> (up to four simultaneously and out of order). Speculative branches were also supported by using a prediction bit in the branch instructions, with the results discarded before being saved if the branch was not taken. The alternate instruction would be buffered and discarded if the branch was taken. Consequently, subroutine calls and interrupts are dealt with without incurring branch penalties.|$|E
50|$|After {{fitting out}} and {{conducting}} her initial sea trials in Puget Sound, Bering Strait departed Seattle, Washington, on 10 August 1944. She reached Naval Air Station Alameda at Alameda, California, on 13 August 1944. From 17 August 1944 to 13 September 1944, she conducted her shakedown, covering {{areas such as}} ship control, communications, general drills, engineering and damage <b>control</b> <b>instruction,</b> gunnery training, and antiaircraft and antisubmarine work. Proceeding to Los Angeles, California, upon completion of that training, Bering Strait underwent two weeks of repairs and alterations at Terminal Island Naval Drydocks at Terminal Island, California.|$|E
50|$|An {{indirect}} branch (also {{known as}} a computed jump, indirect jump and register-indirect jump) {{is a type of}} program <b>control</b> <b>instruction</b> present in some machine language instruction sets. Rather than specifying the address of the next instruction to execute, as in a direct branch, the argument specifies where the address is located. Thus an example could be to 'jump indirect on the r1 register', which would mean that the next instruction to be executed would be at the address whose value is in register r1. The address to be jumped to is not known until the instruction is executed. Indirect branches can also depend on the value of a memory location.|$|E
30|$|The data {{exchanged}} {{between the}} substation {{level and the}} other substation or remote control center are primarily <b>control</b> <b>instructions</b> and original data files. The data exchanged between the substation level and bay level are <b>control</b> <b>instructions,</b> device status information and constant values. Manufacturing message specification (MMS) protocol {{is used in the}} aforementioned transmission services. These data may be tampered or forged to disturb normal operations of substations, and the status data may be stolen by attackers for future attacks. Therefore, it is necessary to ensure their confidentiality, integrity and authenticity.|$|R
40|$|Extracting {{frequently}} executed (hot) {{portions of}} the application and executing their corresponding data flow graph (DFG) on the hardware accelerator brings about more speedup and energy saving for embedded systems comprising a base processor integrated with a tightly coupled accelerator. Extending DFGs to support <b>control</b> <b>instructions</b> and using <b>Control</b> DFGs (CDFGs) instead of DFGs results in more coverage of application code portion are being accelerated hence, more speedup and energy saving. In this paper, motivations for extending DFGs to CDFGs and handling <b>control</b> <b>instructions</b> are introduced. In addition, basic requirements for an accelerator with conditional execution support are proposed. Then, two algorithms are presented for temporal partitioning of CDFGs considering the target accelerator architectural constraints. To demonstrate effectiveness of the proposed ideas, they are applied to the accelerator of a reconfigurable processor called AMBER. Experimental results approve the remarkable effectiveness of covering <b>control</b> <b>instructions</b> and using CDFGs versus DFGs in the aspects of performance and energy reduction...|$|R
25|$|The <b>control</b> <b>instructions</b> {{consist of}} {{conditional}} and unconditional branches, and jumps. The conditional and unconditional branch instructions use the branch instruction format, while the jump instructions use the memory instruction format.|$|R
5000|$|Insect and rodent <b>control</b> <b>instruction</b> included: general {{discussion}} of diseases transmitted to man, insect vectors, methods of extermination, and demonstration {{of use of}} all types of equipment. Training aids included: Films: TF 1-3343 [...] "Malaria Discipline"; and TF 8-1288 [...] " [...] Louse-borne diseases". Blackboard, Repellents (612, Indalone, Dimethyphthalate, Combination 6-2-2, Bednet in place, head nets, mosquito protective gloves, plastic screen, 16x18 mesh screen, aerosol bomb, methyl bromide, fumigation bag, fly spray, fly trap, sodium arsenite, DDT dust plus talc, DDT dust plus pyrophyllite, DDT 5% kerosene spray, paris green undiluted, paris green 5% with flour, fuel oil, borax, paradichlchlorobenzene rotary duster, knapsack sprayer, hand sprayer, delousing duster, motor driven duster, motor-driven sprayer, mosquito larva, pupa and adult specimens, fly egg, larva, pupa and adult specimens, flea larva, pupa and adult specimens, Phlebotomus adult specimens, louse egg, nymph and adult specimens, bedbug egg, nymph and adult specimens, cockroach egg, nymph and adult specimens, rat poisons (barium carbonate, zinc phosphide, calcium cyanide, cyanide discoids), rat traps, bait box.|$|E
50|$|The Lx {{architecture}} {{is closer to}} the original VLIW architecture defined by the Trace processor series from Multiflow than to the EPIC architectures exemplified by the IA-64. Precisely, the Lx is a symmetric clustered architecture, where clusters communicate through explicit send and receive instructions. Each cluster executes up to 4 instructions per cycle with a maximum of one <b>control</b> <b>instruction</b> (goto, jump, call, return), one memory instruction (load, store, pre-fetch), and two multiply instructions per cycle. All arithmetic instructions operate on integer values with operands belonging either to the general register file (64 x 32-bit) or to the branch register file (8 x 1-bit). General register $r0 always reads as zero, while general register $r63 is the link register. In order to eliminate some conditional branches, the Lx architecture also provides partial predication support in the form of conditional selection instructions. There is no division instruction, but a divide step instruction is provided. All instructions are fully pipelined. The RAW latencies are single-cycle except for the load, multiply, compare to branch RAW latencies. The WAR latencies are zero cycles and the WAW latencies are single cycle.|$|E
50|$|In 1921, {{after years}} of planning, Stopes and her husband Humphrey Verdon Roe opened the Mothers' Clinic in Holloway, North London. The clinic, run by {{midwives}} and supported by visiting doctors, offered mothers birth control advice and taught them {{the use of a}} cervical cap. Later in the same year, Stopes founded the Society for Constructive Birth Control and Racial Progress, a support organization for the clinic. Her clinic made contraception acceptable during the 1920s by framing it in scientific terms and gained an international reputation. The Malthusian League opened up a second clinic shortly afterward, but admitted that Stopes clinic had been the first in the British Empire, although the League emphasised that theirs was the first scientific clinic where birth <b>control</b> <b>instruction</b> was given under medical supervision (the medical officer was Norman Haire). These two clinics 'opened up a new period {{in the history of the}} movement aimed at the emancipation of women from their slavery to the reproductive function'. Although the clinic helped few patients in 1921 'the year was one of the most important in the whole history of birth control simply because of their very existence'.|$|E
50|$|Other SSE2 {{extensions}} {{include a}} set of cache <b>control</b> <b>instructions</b> intended primarily to minimize cache pollution when processing infinite streams of information, and a sophisticated complement of numeric format conversion instructions.|$|R
50|$|The <b>control</b> <b>instructions</b> {{consist of}} {{conditional}} and unconditional branches, and jumps. The conditional and unconditional branch instructions use the branch instruction format, while the jump instructions use the memory instruction format.|$|R
5000|$|Note 1: [...] "N" [...] (immediate) flag has {{no effect}} on jump (flow <b>control)</b> <b>instructions,</b> as the {{processor}} can not jump into a specified value, but only to a memory address.|$|R
50|$|In {{the naval}} {{officers}} program on land, the teaching included {{a large number}} of educational and training subjects: navigation plus trigonometry, weapons teaching, naval warfare, shipbuilding, machinery, torpedo and naval mine teaching, fortification, organizational teaching, laws of war and maritime law, commissariat teaching, physics, mathematics and mechanics as well as English and French, as well as machine work, gymnastic and weapons carrying, firearms drill, sport and shooting practice; in the coastal artillery programme: arms, coastal fortification, mine and torpedo teaching, fortification and topography, organizational teaching, regulations for the navy and the laws of war, navigation, mechanical engineering, shipbuilding, naval warfare, ground warfare and commissariat teaching, as well as gymnastics and weapon carrying, firearms drill and sport; the school aboard included the subject of navigation, seamanship, likewise extensive theoretical ships control, regulations, laws of war, weapons teaching and boat knowledge and practice subjects as practical navigation, astronomical observations, artillery drill, shooting exercises with artillery, torpedo teaching, naval mine teaching, electrical engineering, signaling, security training, equipment management, officer duties, practical ship <b>control,</b> <b>instruction</b> exercises, craft handling, firearms drill, shooting practice with handguns, hydrographic surveys, field fortifications, health and first aid teaching, gymnastics and weapons training along with sport, and at the side of this practical service on board.|$|E
5000|$|The first {{president}} was Charles Robert Drysdale, who was succeeded by his free union partner Alice Vickery. The league initially restricted itself primarily to an [...] "educative role" [...] which emphasised {{the importance of}} Malthus' economic arguments rather than practical information about birth control. The league had an increasingly socially and economically conservative tone as the 19th century wore on. Thus some earlier agreement between Malthusians and social reformers was replaced by mutual distrust. The league believed that the sole cause of poverty was an excess of births, and therefore opposed socialism, considered strikes and reforms of labour laws to be [...] "useless." [...] League members were primarily middle class and did not make many serious efforts {{to communicate with the}} working class aside from some debates with socialists during the 1880s. Although the league doctrine as a whole was hostile to socialism, some members were indeed socialists who were sympathetic to arguments in favour of birth control. The league also maintained some overlap with the women's rights movement which was concerned with birth control. The League began plans for a birth control clinic in 1917 but these stalleduntil they received funds from the philanthropist Sir John Sumner and finally the clinic opened on 9 November 1921 at 153a East Street, Walworth with Norman Haire as their honorary medical officer, three afternoons a week. Marie Stopes and her husband had opened their clinic nine months earlier. Stopes’ clinic was the first in the British Empire (but not the first in the world) and the League always emphasised that theirs was the first English clinic where birth <b>control</b> <b>instruction</b> was given under medical supervision.|$|E
5000|$|At 180 m, the [...] "terrain ahead!" [...] warning again sounded on {{the flight}} deck. The crew {{continued}} the descent. According to MAK's report, at 100 m (Decision Height) there was no [...] "landing" [...] or [...] "go-around" [...] call by the captain. If this happens, the first officer is supposed to overrule the captain, {{take control of the}} airplane, and initiate a go-around. Poland suggests that at this point the captain said [...] "Go around", and 8 seconds later the first officer confirmed by saying [...] "go around". (only the second of these two statements is recorded in the official transcripts by MAK; the first one may have been obscured by a simultaneous report by TAWS). Despite these calls, neither pilot initiated a go-around, and the descent continued. One second after the 100 m altitude was reached, the TAWS alert [...] "PULL UP" [...] activated and continued to sound {{for the remainder of the}} flight. [...] "PULL UP" [...] only activates when the TAWS computer believes a collision with terrain is imminent. Therefore, when [...] "PULL UP" [...] sounds, the crew is supposed to begin an immediate, maximum performance emergency climb (full power and angle of attack to the maximum permissible without stalling) and continue climbing until the warning stops. However, the crew continued the descent. In a typical situation with an airport in the TAWS database, the [...] "PULL UP" [...] warning might not have sounded at this point. There is a method of setting up the TAWS to prevent false warnings when flying into airports not in the database, known as [...] "terrain inhibit" [...] mode; however, the crew did not utilize it. Even if they had, an excessive rate of descent and excessive airspeed can cause the TAWS to issue a [...] "SINK RATE" [...] warning followed by a [...] "PULL UP" [...] warning. This point (10:40:40 local time, approximately 20 seconds before the collision with terrain) is also notable because this was the moment when the aircraft had crossed the minimum allowed approach slope for this airport (2°10'). Prior to this moment, the radar controller had no reason to think that the landing attempt was not proceeding normally. The behavior of the controller was later the subject of some criticism by the Polish media. The controller remained silent for about 12 seconds after the aircraft passed the 100 m mark, and, even at that point, he did not order a go-around, but, rather issued an instruction to transit from a descent to a horizontal flight. (The decision to go around was apparently reached in the cabin of the aircraft within a few seconds of that instruction.) In addition, according to some interpretations of the radio exchange between the ground and the aircraft, the crew was instructed by the ground control to descend to 120 m and either to wait for clearance to land or request one explicitly, or to inform the ground control regarding their decision whether to land or to go around. (According to MAK's report, it meant that the crew was supposed to inform the ground control of their decision to land before passing the decision altitude, and that the ground control was supposed to allow the landing as long as the runway and the airspace were clear.) None of this ever happened, with the aircraft continuing the descent through the 120 m mark while the ground control remained silent. It is unknown whether the crew really understood the ground <b>control</b> <b>instruction</b> (literally, [...] "landing additionally, 120, 3 m"), which was issued in Russian and used a relatively recent expression that was only codified in 2006.|$|E
40|$|Part 2 : WorkshopInternational audienceBoth dynamic binary {{translation}} {{systems and}} optimization systems store the translated or optimized code {{in the software}} maintained code cache for reuse. The performance of the code cache is crucial. Translated code is usually organized as code blocks in the code cache and each code block transfer control {{to the next one}} through a <b>control</b> transfer <b>instruction.</b> As the target address of a <b>control</b> transfer <b>instruction</b> {{is in the form of}} its source program counter, the conventional code cache system has to check the address mapping table for the translated target address to find the required target code block, which will cause considerable performance degradation. <b>Control</b> transfer <b>instructions</b> can be divided into two categories as direct <b>control</b> transfer <b>instructions</b> and indirect <b>control</b> transfer <b>instructions.</b> For indirect <b>control</b> transfer <b>instructions,</b> the target address is hold in the register or memory element whose content can be changed during the execution of the program. It is difficult to chain the indirect <b>control</b> transfer <b>instructions</b> with a fixed translated target address through pure software approaches. A novel indirect control transfer chaining approach is proposed in this paper. The principle of the technique is to insert custom chaining instructions into the translated code block while translating the indirect <b>control</b> transfer <b>instructions</b> and execute those chaining instructions to implement dynamical chaining. Some special hardware and software assists are proposed in this paper. Evaluation of the proposed approach is conducted on a code cache simulator. Experiment results show that our hardware assisted indirect <b>control</b> transfer <b>instruction</b> chaining approach can improve the performance of the code cache system dramatically...|$|R
50|$|Other than code-restructuring {{mentioned}} above, {{the solution}} to cache pollution is ensure that only high-reuse data are stored in cache. This {{can be achieved by}} using special cache <b>control</b> <b>instructions,</b> operating system support or hardware support.|$|R
25|$|At {{the level}} of machine {{language}} or assembly language, <b>control</b> flow <b>instructions</b> usually work by altering the program counter. For some central processing units (CPUs), the only <b>control</b> flow <b>instructions</b> available are conditional or unconditional branch instructions, also termed jumps.|$|R
40|$|The {{detection}} device includes, {{but is not}} limited to a device that is configured to determine a control error corresponding to the difference between a first <b>control</b> <b>instruction</b> and a control surface position, a second device that is configured to calculate the difference between this control error and a second <b>control</b> <b>instruction</b> {{in such a way as}} to form a comparison signal, and a third device that is configured to detect a jamming of the control surface if this comparison signal is greater than a threshold value...|$|E
40|$|Factory {{automation}} (FA) {{system software}} is {{a bridge to}} realize information exchange between processing equipment of semiconductor equipment and factory host. It receives the <b>control</b> <b>instruction</b> sent by a host, and sends the <b>control</b> <b>instruction</b> to the manufacturing equipment after internal analysis and processing. At the same time, FA receives the real time data and the various process parameters sent by equipment, processes the data, and sends the data to the host. In this paper, analysis {{of the process of}} semiconductor processing equipment, according to the actual needs of the semiconductor processing equipment, research on FA Software based on the SEMI standard...|$|E
40|$|Abstract: It is {{difficult}} for a traditional control system to support human’s operation flexibly by using a best instruction only. In this paper, we propose a control system to cooperate with human based on fuzzy instruction. The fuzzy instruction is <b>control</b> <b>instruction</b> defined by a fuzzy set and is composed of the satisfaction rating with the <b>control</b> <b>instruction</b> candidate. An impedance controller is designed via auto-driving method of four-wheeled vehicle using predictive fuzzy controller. The cooperative control system is constructed and evaluated by experiments that run on narrow/wide road using driving simulator. Experimental results demonstrate {{the effectiveness of the}} cooperative auto-driving control system based on fuzzy instruction for the cooperation of the computer with human...|$|E
30|$|Although {{most of the}} <b>{{instructions}}</b> {{are either}} <b>control</b> <b>instructions</b> or instructions that operate on single data (ADD, SUB,...), the processor operates {{most of the time}} on vector data. Hence, the processor is optimized for operations on vectors of complex data or specialized operations associated with many supported tasks. The assembly program becomes relatively long for control or single data instructions compared to what it fulfills.|$|R
50|$|Government {{organizations}} {{help their}} residents deal with wet-season floods though floodplain mapping {{and information on}} erosion control. Mapping is conducted to help determine areas {{that may be more}} prone to flooding. Erosion <b>control</b> <b>instructions</b> are provided through outreach over the telephone or the internet.|$|R
40|$|Abstract. In an {{embedded}} system including a base processor integrated with a tightly coupled accelerator, extracting frequently executed {{portions of the}} code (hot portion) and executing their corresponding data flow graph (DFG) on the accelerator brings about more speedup. In this paper, we intend to present our motivations for handling <b>control</b> <b>instructions</b> in DFGs and extending them to Control DFGs (CDFGs). In addition, basic requirements for an accelerator with conditional execution support are proposed. Moreover, some algorithms are presented for temporal partitioning of CDFGs considering the target accelerator architectural specifications. To show {{the effectiveness of the}} proposed ideas, we applied them to the accelerator of an extensible processor called AMBER. Experimental results represent the effectiveness of covering <b>control</b> <b>instructions</b> and using CDFGs versus DFGs. ...|$|R
