43|96|Public
5|$|At the 22nd {{hurricane}} {{committee in}} 2000 {{it was decided}} that tropical cyclones that moved from the Atlantic to the Eastern Pacific basin and vice versa would no longer be renamed. Ahead of the 2000–01 season it was decided to start using male names, as well as female names for tropical cyclones developing in the South-West Indian Ocean. RSMC La Reunion subsequently proposed to the fifteenth session of the RA I Tropical Cyclone Committee for the South-West Indian Ocean during September 2001, that the basin adopt a single <b>circular</b> <b>list</b> of names. Along with the RA V Tropical Cyclone Committee, RSMC La Reunion also proposed to the session that a tropical cyclone have only one name during its lifetime. However, both of these proposals were rejected in favour of continuing an annual list of names and to rename systems when they moved across 90°E into the South-West Indian Ocean. During the 2002 Atlantic hurricane season the naming of subtropical cyclones restarted, with names assigned to systems from the main list of names drawn up for that year.|$|E
25|$|With a <b>circular</b> <b>list,</b> a pointer to {{the last}} node gives easy access also to the first node, by {{following}} one link. Thus, in applications that require access to {{both ends of the}} list (e.g., in the implementation of a queue), a circular structure allows one to handle the structure by a single pointer, instead of two.|$|E
25|$|Shape {{analysis}} of linked list data structures {{is a technique}} for verifying the correctness of an algorithm using those structures. If a node in the list incorrectly points to an earlier node in the same list, the structure will form a cycle that can be detected by these algorithms. In Common Lisp, the S-expression printer, under control of the *print-circle* variable, detects <b>circular</b> <b>list</b> structure and prints it compactly.|$|E
25|$|While doubly linked and <b>circular</b> <b>lists</b> have {{advantages}} over singly linked linear lists, linear lists offer some advantages {{that make them}} preferable in some situations.|$|R
40|$|We {{propose a}} modal logic {{tailored}} to describe graph transformations and discuss {{some of its}} properties. We focus on a particular class of graphs called termgraphs. They are first-order terms augmented with sharing and cycles. Termgraphs allow one to describe classical data-structures (possibly with pointers) such as doubly-linked <b>lists,</b> <b>circular</b> <b>lists</b> etc. We show how the proposed logic can faithfully describe (i) termgraphs as well as (ii) {{the application of a}} termgraph rewrite rule (i. e. matching and replacement) and (iii) the computation of normal forms with respect to a given rewrite system. We also show how the proposed logic, which is more expressive than propositional dynamic logic, can be used to specify shapes of classical data-structures (e. g. binary trees, <b>circular</b> <b>lists</b> etc.) ...|$|R
25|$|The {{alternatives}} {{listed above}} may be arbitrarily combined {{in almost every}} way, so one may have <b>circular</b> doubly linked <b>lists</b> without sentinels, <b>circular</b> singly linked <b>lists</b> with sentinels, etc.|$|R
2500|$|The {{advantages}} of the fancy variants are often limited {{to the complexity of}} the algorithms, not in their efficiency. [...] A <b>circular</b> <b>list,</b> in particular, can usually be emulated by a linear list together with two variables that point to the first and last nodes, at no extra cost.|$|E
2500|$|The {{simplest}} representation for {{an empty}} <b>circular</b> <b>list</b> (when {{such a thing}} makes sense) is a null pointer, indicating that the list has no nodes. [...] Without this choice, many algorithms have to test for this special case, and handle it separately. [...] By contrast, the use of null to denote an empty linear list is more natural and often creates fewer special cases.|$|E
2500|$|A <b>{{circular}}</b> <b>list</b> can {{be split}} into two circular lists, in constant time, by giving the addresses of the last node of each piece. The operation consists in swapping {{the contents of the}} link fields of those two nodes. [...] Applying the same operation to any two nodes in two distinct lists joins the two list into one. This property greatly simplifies some algorithms and data structures, such as the quad-edge and face-edge.|$|E
40|$|Officers (CFO) Council, {{has updated}} {{existing}} OMB guidance relating to agency and government-wide financial reporting. OMB Circular No. A- 136, Financial Reporting Requirements (Circular No. A- 136) establishes a central reference point and supersedes OMB memoranda, bulletin and <b>circular</b> <b>listed</b> in Section I. 2 of this Circular. The current update includes the following: Guidance on new reporting submission of the Budget, Performance, and Financia...|$|R
40|$|International audienceThe aim of {{this talk}} is to present a {{framework}} for data-structure rewriting, including cyclic data-structures with pointers such as <b>circular</b> <b>lists,</b> doubly-linked lists, etc. Our framework follows the categorical approach of the DPO (double pushout) method, but with non-classical assumptions on rules and matchings. It allows local pointer redirection, for redirecting some specific pointers, and global pointer redirection, for redirecting all pointers with some specific target to another target...|$|R
25|$|We {{will use}} a {{representation}} of the graph in which each vertex maintains a <b>circular</b> linked <b>list</b> of adjacent vertices, in clockwise planar order.|$|R
2500|$|However, if the <b>circular</b> <b>list</b> is used {{merely to}} {{simulate}} a linear list, one may avoid {{some of this}} complexity by adding a single sentinel node to every list, between the last and the first data nodes. [...] With this convention, an empty list consists of the sentinel node alone, pointing to itself via the next-node link. [...] The list handle should then be a pointer to the last data node, before the sentinel, if the list is not empty; or to the sentinel itself, if the list is empty.|$|E
50|$|Rerooting {{the tree}} {{can be done}} in {{constant}} time O(1) by splitting the <b>circular</b> <b>list</b> succ at the new root.|$|E
50|$|The huge {{jump from}} one end to the other is not {{considered}} as a head movement as cylinders are treated as a <b>circular</b> <b>list.</b>|$|E
5000|$|The Court <b>Circular</b> also <b>lists</b> Prince William, Duke of Cambridge {{above his}} uncles, Prince Andrew, Duke of York and Prince Edward, Earl of Wessex.|$|R
40|$|This {{reference}} <b>circular</b> <b>lists</b> {{sources of}} braille books available for loan, purchase, rental, or free (give-away) distribution. Divided into four sections, it includes general sources of braille books, sources of specialized braille materials, the major braille presses, {{and resources for}} further information about braille books and magazines. Addresses, prices, and other information in the circular have been taken from catalogs and other literature submitted by producers and distributors {{in response to a}} survey conducted by the Reference Section, National Library Service for the Blind an...|$|R
40|$|The Office ofManagement and Budget (OMB), {{with the}} Chief Financial Officers Council (CFOC), has updated {{existing}} OMB guidance for agency and government-wide financial reporting. OMB Circular No. A- 136, Financial Reporting Requirements (Circular No. A- 136), establishes a central reference point and supersedes the OMB memoranda, bulletin and <b>circular</b> <b>listed</b> in Section I. 2 ofthis Circular. Additionally, {{in coordination with}} the CFOC, OMB {{is working on a}} financial reporting model project and exploring related potential changes that may affect this guidance in the future. This update includes...|$|R
5000|$|...*Seek 4 (C-SCAN): 0 − 100 = 0 head {{movement}} as cylinders {{are treated as}} a <b>circular</b> <b>list</b> (C-SCAN always {{goes back to the}} first track) ...|$|E
50|$|The {{advantages}} of the fancy variants are often limited {{to the complexity of}} the algorithms, not in their efficiency. A <b>circular</b> <b>list,</b> in particular, can usually be emulated by a linear list together with two variables that point to the first and last nodes, at no extra cost.|$|E
5000|$|Clock-Pro keeps a <b>circular</b> <b>list</b> of {{information}} about recently referenced pages, including all M pages in memory {{as well as the}} most recent M pages that have been paged out. This extra information on paged-out pages, like the similar information maintained by ARC, helps it work better than LRU on large loops and one-time scans.|$|E
40|$|Many {{parallel}} algorithms for graph problems {{start with}} finding a spanning tree and rooting the tree to define some structural relationship on the vertices {{which can be}} used by following problem specific computations. The generic procedure is to find an unrooted spanning tree and then root the spanning tree using the Euler tour technique. With a randomized work-time optimal unrooted spanning tree algorithm and work-time optimal list ranking, finding rooted spanning trees can be done work-time optimally on EREW PRAM w. h. p. Yet the Euler tour technique assumes as “given ” a <b>circular</b> adjacency <b>list,</b> it is not without implications though to construct the <b>circular</b> adjacency <b>list</b> for the spanning tree found on the fly by a spanning tree algorithm. In fact our experiments show that this “hidden ” step of constructing a <b>circular</b> adjacency <b>list</b> could take as much time as both spanning tree and list ranking combined. In this paper we present new efficient algorithms that find rooted spanning trees without using the Euler tour technique and incur little or no overhead over the underlying spanning tree algorithms. We also present two new approaches that construct Euler tours efficiently when the <b>circular</b> adjacency <b>list</b> is not given. One is a deterministic PRAM algorithm and the other is a randomized algorithm in the SMP model. The randomized algorithm takes a novel approach to the problems of constructing Eule...|$|R
50|$|Duguilang (Дугуйлан, Duguilan, in Mongolian script:Duγuyilang) is a {{term for}} Mongolian secret {{societies}} from the late 19th and early 20th centuries. These duguilangs typically articulated popular discontent with higher authorities, especially with banner princes. The name {{is derived from the}} <b>circular</b> (Дугуй, circle) <b>lists</b> in which the members signed petitions to authorities. The <b>circular</b> <b>lists</b> were meant to conceal who the ringleaders were. Duguilangs did not always limit themselves to petitions and lawsuits, but in a number of cases resorted to more violent means; in one resolution against the sale of banner land (which was considered common property) to Chinese firms, the reasons for forming a duguilang are given asBecause all we people have no water to drink, no land to live on, but cannot bear this, we have formed the duguilang society and will not follow the princes' orders.|$|R
5000|$|This {{function}} inserts a node [...] "newNode" [...] into a <b>circular</b> linked <b>list</b> after a given node [...] "node". If [...] "node" [...] is null, {{it assumes}} that the list is empty.|$|R
50|$|With a <b>circular</b> <b>list,</b> a pointer to {{the last}} node gives easy access also to the first node, by {{following}} one link. Thus, in applications that require access to {{both ends of the}} list (e.g., in the implementation of a queue), a circular structure allows one to handle the structure by a single pointer, instead of two.|$|E
50|$|The {{simplest}} representation for {{an empty}} <b>circular</b> <b>list</b> (when {{such a thing}} makes sense) is a null pointer, indicating that the list has no nodes. Without this choice, many algorithms have to test for this special case, and handle it separately. By contrast, the use of null to denote an empty linear list is more natural and often creates fewer special cases.|$|E
5000|$|Shape {{analysis}} of linked list data structures {{is a technique}} for verifying the correctness of an algorithm using those structures. If a node in the list incorrectly points to an earlier node in the same list, the structure will form a cycle that can be detected by these algorithms. In Common Lisp, the S-expression printer, under control of the [...] variable, detects <b>circular</b> <b>list</b> structure and prints it compactly.|$|E
40|$|CFOC), {{has updated}} {{existing}} OMB guidance for agency and government-wide financial reporting. OMB Circular No. A- 136, Financial Reporting Requirements (Circular No. A- 136), establishes a central reference point and supersedes the OMB memoranda, bulletin and <b>circular</b> <b>listed</b> in Section I. 2 of this Circular. Additionally, {{in coordination with}} the CFOC, OMB {{is working on a}} financial reporting model project. Within this project, OMB and the CFOC are exploring potential changes that may affect this guidance in the future. This update includes: • Guidance for preparing a consolidated Performance and Accountability Report or an Agency Financial Report and Annual Performance Report (Section II) ...|$|R
2500|$|This {{function}} inserts a node [...] "newNode" [...] into a <b>circular</b> linked <b>list</b> after a given node [...] "node". [...] If [...] "node" [...] is null, {{it assumes}} that the list is empty.|$|R
50|$|A set {{consists}} of <b>circular</b> linked <b>lists</b> where one record type, the set owner or parent, appears once in each circle, {{and a second}} record type, the subordinate or child, may appear multiple times in each circle. In this way a hierarchy may be established between any two record types, e.g., type A {{is the owner of}} B. At the same time another set may be defined where B is the owner of A. Thus all the sets comprise a general directed graph (ownership defines a direction), or network construct. Access to records is either sequential (usually in each record type) or by navigation in the <b>circular</b> linked <b>lists.</b>|$|R
50|$|A <b>{{circular}}</b> <b>list</b> can {{be split}} into two circular lists, in constant time, by giving the addresses of the last node of each piece. The operation consists in swapping {{the contents of the}} link fields of those two nodes. Applying the same operation to any two nodes in two distinct lists joins the two list into one. This property greatly simplifies some algorithms and data structures, such as the quad-edge and face-edge.|$|E
50|$|If {{the tree}} has a root, we can split the <b>circular</b> <b>list</b> succ at that root. In that case, we can speak of advance and retreat edges: given {{a pair of}} nodes u,v, the first {{occurrence}} of either (u,v) or (v,u) in the ETR is called the advance edge, and the second occurrence is called the retreat edge. This appeals to the intuition {{that the first time}} such an edge is traversed the distance to the root is increased, while the second time the distance decreases.|$|E
50|$|However, if the <b>circular</b> <b>list</b> is used {{merely to}} {{simulate}} a linear list, one may avoid {{some of this}} complexity by adding a single sentinel node to every list, between the last and the first data nodes. With this convention, an empty list consists of the sentinel node alone, pointing to itself via the next-node link. The list handle should then be a pointer to the last data node, before the sentinel, if the list is not empty; or to the sentinel itself, if the list is empty.|$|E
40|$|Summary. This <b>circular</b> <b>lists</b> areas, establishments, firms, individuals, and {{organizations}} in Germany that are off limits in the USEUCOM area of responsibility. Summary of Change. This revision removes the Black Sounds Club {{from the list}} of off-list establishments (app A). Applicability. This circular applies to members of the U. S. Forces who have status under the NATO Status of Forces Agreement and their command-sponsored Family members and to contractors in the USEUCOM area of responsibility. Records Management. Records created as a result of processes prescribed by this circular must be identified, maintained, and disposed of according to AR 25 - 400 - 2. Record titles and descriptions are o...|$|R
5000|$|Suppose that [...] "L" [...] is a {{variable}} {{pointing to the}} last node of a <b>circular</b> linked <b>list</b> (or null if the list is empty). To append [...] "newNode" [...] {{to the end of}} the list, one may do ...|$|R
5|$|The three <b>circulars</b> <b>list</b> {{various types}} of cost or expense item (such as travel expense, {{maintenance}} expense, payroll salaries, lobbying costs, purchase of materials, payment of utility bills, etc.), and establishes whether each is either allowable or unallowable. Allowable costs are those the federal government determines permissible for federal assistance. Unallowable costs are those the government prohibits incurring for federal assistance. Certain cost items are considered universally unallowable, such as cost related to illegal activities and lobbying costs, but others may be considered unallowable for a type of recipient while being allowable for another type of recipient. As a general rule, any assistance used inappropriately, such as incurring unallowable costs, requires reimbursement to the federal government.|$|R
