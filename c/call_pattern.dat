44|2445|Public
50|$|Advantages, As with a {{heterodyne}} detector, an FD detector {{works in}} real time {{with or without a}} heterodyne function. Bat calls can be heard in their entirety over their whole range rather than over a limited frequency range. Retuning with an FD detector is not required although this is done with a dual type with heterodyne. By analysing the recording later, the entire call frequency range and the <b>call</b> <b>pattern</b> can be measured.|$|E
50|$|This product {{provides}} centralized monitoring capabilities {{for multiple}} Tuxedo domains. TSAM Plus agents are deployed on the machines in a Tuxedo domain. These agents collect metric {{data from the}} running Tuxedo processes based on a configured policy, and send the data back to the TSAM Plus Manager where it is used historically or in real time. TSAM Plus provides configuration information, call path, <b>call</b> <b>pattern,</b> service execution, transaction, and more monitoring metrics. TSAM Plus also monitors Tuxedo ART CICS and Batch applications. An additional component of TSAM Plus is a plug-in for Oracle Enterprise Manager Cloud Control that provides full operation, configuration, administration, and management of a Tuxedo application.|$|E
5000|$|The {{following}} day, McNulty arrives late at {{the unit}} office and finds ASA Pearlman and Daniels receiving a briefing on Freamon and Prez's {{analysis of the}} burners. They have identified a communication network with 15 distinct phone users by analyzing the <b>call</b> <b>pattern.</b> None of the phones identified list any user information because they are all prepaid [...] "burner" [...] phones purchased anonymously with cash. They have identified a coordinator {{at the top of}} the pyramid, who acts as a nexus for communications. The detectives have also found that the phones are pre-programmed with the numbers before being put into use. Freamon asks Greggs to have the Western DEU squad collect phones for them.|$|E
40|$|We give an {{algebraic}} formalization of SLD-trees {{and their}} abstractions (ob servables). We can state and prove {{in the framework}} several useful theorems (AND-compositionality, correctness and full abstraction of the denotation, equivalent top-down and bottom-up constructions) about semantic properties of various observables. Observables are represented by Galois co-insertions {{and can be used}} to model abstract interpretation. The constructions and the theorems are inherited by all the observables which can be formalized in the framework. The power of the framework is shown by reconstructing some known examples (answer constraints, <b>call</b> <b>patterns,</b> correct <b>call</b> <b>patterns</b> and ground dependencies <b>call</b> <b>patterns).</b> ...|$|R
50|$|At peak times service {{frequencies}} may {{be increased}} and <b>calling</b> <b>patterns</b> varied.|$|R
40|$|We {{introduce}} a flexible model of telecommunications network competition with non-uniform <b>calling</b> <b>patterns,</b> {{which account for}} the fact that customers tend to make most calls to a small set of contacts. Equilibrium call prices are distorted away from marginal cost, and competitive intensity is affected by the concentration of <b>calling</b> <b>patterns.</b> Contrary to previous predictions, jointly profit-maximizing access charges are set above termination cost in order to dampen competition, and the resulting on-net prices are below off-net prices, if <b>calling</b> <b>patterns</b> are sufficiently concentrated. We discuss implications for regulating access charges as well as on- and off-net price discrimination. Network competition; non-uniform calling patterns; termination charge...|$|R
40|$|A {{research}} report {{submitted to the}} Faculty of Science, University of the Witwatersrand, Johannesburg, in fulfilment of the requirements for the degree of Master of Science in Mathematical statistics. Johannesburg, February 2014. In this study we examine the question of which statistical mod- els work well in predicting customer defection in the retail mobile telecommunication industry. For {{each of the two}} data sets that were used (mobile <b>call</b> <b>pattern</b> and billing, and time taken to churn data), four statistical models were tted and compared namely; arti cial neural networks, decision trees, logistic regression and support vector machines. The arti cial neural network model proved to be supe- rior than the other three models when tted on both data sets. This model gave the best area under the receiver operating characteristic curve (0. 93 for <b>call</b> <b>pattern</b> data and 0. 88 for billing and time taken to churn data), highest lift at 10 per cent of the population (7. 01 for <b>call</b> <b>pattern</b> data and 2. 12 for billing and time taken to churn data) and lowest misclassi cation rate (0. 04 for <b>call</b> <b>pattern</b> data and 0. 19 for billing and time taken to churn data). The logistic regression model under performed the other models when tted to <b>call</b> <b>pattern</b> data and came out as third when tted to billing and time taken to churn data whereby they outperformed the decision tree model. Support vector machine came out as the second best model for billing and time taken to churn data and third when tted to <b>call</b> <b>pattern</b> data. Decision tree model performed well when tted to <b>call</b> <b>pattern</b> data and worst when tted to billing and time taken to churn data The study showed that in the retail mobile telecommunication industry, companies can increase revenue streams and competitive advantage by using data mining techniques to predict customers that are likely to churn. The next step for the business is to embark on retention programs to use these methods to reduce churners...|$|E
40|$|In this paper, {{we propose}} an {{extension}} to personal communication service (PCS) location management protocol which uses dynamically overlapped registration areas. Overlapping of registration areas helps {{in reducing the}} number of location updates for a fixed mobility pattern. Further, dynamically changing the registration area is used to adapt to changes in aggregate mobility and <b>call</b> <b>pattern.</b> This reduces and balances the signaling and database access load on the mobile services stations (MSS). The scheme is based on monitoring the aggregate mobility and <b>call</b> <b>pattern</b> of the users during each reconfiguration period and adapting to mobility and <b>call</b> <b>pattern</b> by either expanding or shrinking registration areas {{at the end of each}} reconfiguration period. A MSS expands its associated registration area by including boundary communication cells from neighboring registration areas in its own registration area. However, expanding a registration area increases the cost of call delivery (loc [...] ...|$|E
40|$|One way {{to prevent}} control {{hijacking}} attack is to compare a network application’s run-time system calls with a pre-defined normal system call behavior model, and raise an alert upon detecting a mismatch. This paper describes a system called PAID, which can automatically derive an accurate system <b>call</b> <b>pattern</b> from the source code of an application, {{and use it to}} detect any anomalous behavior at run time with minimal overhead. Because each application’s system <b>call</b> <b>pattern</b> is directly derived from its source code, PAID never raises false positive alarms. Moreover, its false negative rate is very close to zero because PAID uses the sequence of return addresses on the user/kernel stack to uniquely identify each system call instance. Experiments on a fully operational PAID prototype show that PAID can indeed stop all known control hijacking attacks. The run-time latency and throughput penalty of PAID are under 13. 02 % and 11. 52 %, respectively, when it is tested against a set of production-mode network applications. ...|$|E
50|$|During peak times, service {{frequency}} is increased and <b>calling</b> <b>patterns</b> vary, with some stations omitted on certain services.|$|R
40|$|The basic {{principle}} of motivic pattern extraction consists of detecting repeated motives, i. e. identifying several short extracts or subsequences as instances, or occurrences, of a same series of description <b>called</b> <b>pattern.</b> The approach is focused here on monodic sequences: music is {{considered as a}} series of notes without superpositions. Patterns are formalised as chains of states – <b>called</b> <b>pattern</b> chains. As patterns can accept multiple alternative continuations, patterns chains can be extended by multiple branches. Hence, patterns are aggregated into one single tree, <b>called</b> <b>pattern</b> tree, and each pattern chain is as a branch of the tree. Similarly, each pattern occurrence can accept multiple alternative continuations. Hence, the set of all pattern occurrences that are initiated by one note forms a tree, <b>called</b> <b>pattern</b> occurrence tree. 1. 2. Musical dimensions Patterns are detected along multiple musical dimensions, are indicated below. See (Lartillot and Toiviainen, in press), for a detailed explanation of the dimensions. Figure 1. Descriptions of a monody. Repeated sequences of values, forming patterns, are enclosed in boxes...|$|R
50|$|During peak times, service {{frequencies}} may {{be increased}} and <b>calling</b> <b>patterns</b> varied. Service frequencies are generally reduced on Sundays.|$|R
40|$|Runtime {{reconfiguration}} is {{a method}} used for changing the structure and the <b>call</b> <b>pattern</b> such that the software can adapt itself to the client’s computing environment. The current practice of verifying software models {{with respect to the}} reconfiguration requirements is rather subjective: based on the stakeholders’ needs, architects define a set of reconfiguration scenarios and manually trace the models. This chapter presents a novel process and a tool for automating the verification of the UML class and sequence diagrams with respect to runtime reconfiguration requirements. In this process, the models are simulated, which generates the execution tree. In the execution tree, each path from root to a leaf node is an execution sequence. The branching in this tree is caused by the reconfiguration of the structure and the <b>call</b> <b>pattern.</b> The runtime reconfiguration requirements are expressed with a visual state-based language which is verified against the execution tree. If the verification fails, feedback about the possible location of the problem is presented to the designers. The process has been tested with case studies and experiments conducted on the UML class and sequence diagrams of a software system from Philips Healthcare MR...|$|E
30|$|The normal <b>call</b> <b>pattern</b> of a {{cell tower}} k is {{dependent}} on the day (i) of the week (δ^k_i) and the hour (j) of the day η ^k_j,i, and λ^k_ 0 represents the average rate of cell tower (k) in one week. We can formulate the rate function of the Poisson distribution λ^k(t) as the product of the initial rate λ ^k_ 0, the daily effect δ^k_i, and the hourly effects η ^k_j, i. The detailed derivations can be found in Appendix A. 1.|$|E
40|$|AbstractIn {{this paper}} we propose an {{operational}} and a denotational semantics for Prolog. We deal with the control rules of Prolog and the cut operator. Our denotational semantics provides a goal-independent semantics. This means that the behaviour of a goal in a program {{is defined as the}} evaluation of the goal in the denotation (semantics) of the program. We show how our denotational semantics can be specialised into a computed answer semantics and into a <b>call</b> <b>pattern</b> semantics. Our work provides a basis for a precise abstract interpretation of Prolog programs...|$|E
50|$|During peak times service {{frequencies}} may {{be increased}} and <b>calling</b> <b>patterns</b> varied. All services are operated by Abellio Greater Anglia.|$|R
5000|$|Greville, T. N. E. (1943). Frequency of {{distributions}} of ESP scores for certain <b>call</b> <b>patterns.</b> Journal of Parapsychology, 7, 272-276.|$|R
5000|$|Using {{relational}} mathematics, it {{is possible}} to find out if someone changes their telephone number by analyzing and comparing <b>calling</b> <b>patterns.</b>|$|R
40|$|This paper {{presents}} various {{design patterns}} built {{on top of}} the Java concurrency primitives (wait and notify). It analyzes them with an approach drawn from the state machines based verification techniques, but with little mathematical burden, compares well-known patterns (such as channels, synchronous communications or JavaBeans) and finally proposes a general pattern based on synchronous method calls that can be used safely in concurrent applications in the place of most other concurrency primitives. This synchronous <b>call</b> <b>pattern</b> can be modeled directly, in a way that hides all implementation details...|$|E
40|$|We present Oracle-Based Partial Evaluation (OBPE), a novel {{approach}} to on-line Partial Evaluation (PE) which decides the control strategy to use for each <b>call</b> <b>pattern</b> by using an oracle function which compares the results of specializing such <b>call</b> <b>pattern</b> w. r. t. a set of strategies. Our proposal is motivated by Poly-Controlled Partial Evaluation (PCPE), which allows using different control strategies for different call patterns. Given a set CS of control strategies, the best PCPE specialized programs outperform the specialized programs obtained by traditional PE {{for any of the}} control strategies in CS, especially when resource-aware specialization is performed. Unfortunately, computing all PCPE specialized programs and then choosing a posteriori the best one is too costly in practice. In contrast, in OBPE a single specialized program is computed. We have developed an empirical oracle whose parameters are approximated from a set of training data, by using constraint logic programming. Our experimental results show that the additional cost of OBPE when compared with traditional PE is a constant factor and that, at least in our experiments, OBPE obtains significantly better specializations. We argue that our proposal is relevant in practice and introduces clear improvements over standard PE. Our work is developed in the context of logic programs, though the ideas are in principle of interest to the PE of any programming language...|$|E
40|$|In this paper, {{we provide}} an updated {{diagnosis}} for Pseudopaludicola giarettai {{based on the}} morphometric and acoustic variation observed with the assessment of new populations, plus an expansion of its distribution range. Our results support that all acoustic variation observed might be attributed to intraspecific variation. The variation in body size and dorsal stripe patterns observed for Pseudopaludicola giarettai reinforces that the distinctive whistling advertisement <b>call</b> <b>pattern</b> is the most reliable evidence line to diagnose it from its congeners, whereas morphological (robust body, glandular dorsum) and morphometric (body size) features vary considerably within and among populations so that they should no longer be employed as diagnostic features of Pseudopaludicola giarettai...|$|E
40|$|Abstract — In this paper, a novel load {{balancing}} technique is proposed to handle biased <b>call</b> request <b>patterns</b> efficiently. The knowledge of <b>call</b> request <b>patterns</b> is used from trace-based analysis; <b>call</b> <b>patterns</b> {{are affected by}} {{various factors such as}} geographical context, user mobility, network usage patterns and temporal bias. A call routing system is modelled as a network of queues and a provisioning algorithm is developed. The proposed model employs a combination of predictive and reactive provisioning methods. The idea of Capacity Distribution is introduced- a heuristic for heterogeneous capacity allocation among adjacent cell pairs. The proposed model retains simplicity while being able to effectively learn from the variations in <b>call</b> <b>patterns.</b> The performance of the model is evaluated using extensive simulation techniques. Index Terms — Resource provisioning, {{load balancing}}...|$|R
50|$|On Saturdays {{the station}} is served by one train in each direction, with the same <b>calling</b> <b>patterns.</b> There is no Sunday service.|$|R
40|$|AbstractThis paper {{presents}} a formal {{framework for the}} bottom-up abstract interpretation of logic programs which {{can be applied to}} approximate answer substitutions, partial answer substitutions and <b>call</b> <b>patterns</b> for a given program and arbitrary initial goal. The framework is based on a Tp-like semantics defined over a Herbrand universe with variables which has previously been shown to determine the answer substitutions for arbitrary initial goals. The first part of the paper reconstructs this semantics to provide a more adequate initial goals. The first part of the paper reconstructs this semantics to provide a more adequate basis for abstract interpretation. A notion of abstract substitution is introduced and shown to determine an abstract semantic function which for a given program can be applied to approximate the answer substitutions for an arbitrary initial goal. The second part of the paper extends the bottom-up approach to provide approximations of both partial answer substitutions and <b>call</b> <b>patterns.</b> This is achieved by applying Magic Sets and other existing techniques to transform a program {{in such a way that}} the answer substitutions of the transformed program correspond to the partial answer substitutions and <b>call</b> <b>patterns</b> of the original program. This facilitates the analysis of concurrent logic programs (ignoring synchronization) and provides a collecting semantics which characterizes both success and <b>call</b> <b>patterns...</b>|$|R
40|$|The Robot Operating System (ROS) is {{a popular}} {{software}} framework to develop and execute software for robot systems. ROS supports component-based development and provides a communication layer for easy integration. It supports three interaction patterns that are essential for control systems: the publish-subscribe pattern, the remote procedure <b>call</b> <b>pattern</b> and the goal-feedback-result pattern. In this paper we apply Petri nets to develop a structured design method for ROS systems, such that the weak termination property is guaranteed. The method is based on stepwise refinement using three interaction patterns and components modeled as state machines. The method is illustrated with {{a case study of}} robot ROSE...|$|E
40|$|Delta Prolog is a {{concurrent}} {{logic programming}} language, which extends Prolog with AND-parallelism. Communication and synchronization between parallel processes is established by using special control structures: vent goals. To relieve the programmer f om inserting these structures at the correct program points, we propose {{a method for}} automatically generating them, departing from a Prolog program together with the top-level <b>call</b> <b>pattern</b> and indications of which goal-expressions should be executed in parallel. This method {{is based on the}} technique of abstract interpretation. The gathered abstract information allows to decide at which program points an event goal has to be generated and how it is composed. However, it turns out that only a limited class of programs can be transformed automatically. Problems impeding eneral automatic transformation are discussed...|$|E
40|$|We {{extend the}} Jinni mobile agent {{architecture}} with a multicast network transport layer, an agent-to-agent delegation mechanism and a reflection based Prolog-to-Java interface. To {{ensure that our}} agent infrastructure runs efficiently, independently of router-level multicast support, we describe a blackboard based algorithm for locating a randomly roaming agent. As part of the agent-to-agent delegation mechanism, we describe an alternative to code-fetching mechanism for stronger mobility of mobile agents with less network overhead. In the context of direct and reflection based extension mechanisms for Jinni, we describe the design and {{the implementation of a}} reflection based Prolog-to-Java interface. The presence of subtyping and method overloading makes finding the most specific method corresponding to a Prolog <b>call</b> <b>pattern</b> fairly difficult. We describe a run-time algorithm which provides accurate handling of overloaded methods beyond Java's reflection package's limitations...|$|E
50|$|Enfield Town-Liverpool Street: - The {{off peak}} service ran every ten minutes from Liverpool Street with two {{different}} <b>calling</b> <b>patterns</b> for every other train. One of these called all stations to Enfield Town with a connection at Seven Sisters for the Palace Gates branch. The other service was fast to Stoke Newington and then called all stations. In {{the opposite direction}} departures from Enfield were not as even due to the <b>calling</b> <b>patterns.</b> In the peak hours additional trains run with some not calling at the smaller stations.|$|R
5000|$|Diwakar, S. & Balakrishnan, R. (2007). The {{assemblage}} of acoustically communicating crickets of a tropical evergreen forest in Southern India: call diversity and diel <b>calling</b> <b>patterns.</b> Bioacoustics 16, 113-135.|$|R
50|$|The Department of State, with CIA assistance, prepares {{an annual}} volume <b>called</b> <b>Patterns</b> in Terrorism. FBI {{reporting}} is more irregular, but does do problem descriptions {{as well as}} specific reports.|$|R
40|$|There {{have been}} {{interesting}} {{recent developments in}} methods for solving optimization problems without making use of derivative (sensitivity) information. While calculus based methods that employ derivative information can be extremely efficient and very effec- tive, they are not applicable to all MDO problems, for instance, when the function to be optimized is nondifferentiable, when sensitivity information is not available or is not reliable, or when the function val- ues are inaccurate. In these settings, {{we have found that}} the multidirectional search method, a derirate- free method we have developed for solving nonlinear optimization problems, can be used effectively. Our analysis of the multidirectional search algorithm has led us to discover that its algebraic structure and resulting convergence theory can be related to an en- tire class of derivative-free methods, which we now <b>call</b> <b>pattern</b> search methods, that have been in use for decades...|$|E
40|$|Location {{prediction}} using {{mobile phone}} traces has attracted increasing attention. Owing to the irregular user mobility patterns, it still remains challenging to predict user location. Our empirical study {{in this paper}} shows that the call patterns are strongly correlated with co-locate patterns (i. e., visiting the same cell tower at the same period), and the call patterns mainly affect user short-time mobility. On top of these findings, we propose NextMe - - a novel scheme to enhance the location prediction accuracy by leveraging the social interplay revealed in the cellular calls. To identify when the social interplay will affect user mobility, we introduce the concepts of the Critical <b>Call</b> <b>Pattern</b> (CCP), and the Critical Call (CC). We validate NextMe with the MIT Reality Mining dataset, involving 350, 000 -hour activity logs of 106 persons, and 112, 508 cellular calls. Experimental {{results show that the}} social interplay significantly improves the accuracy. © 2012 Authors...|$|E
40|$|Calling {{blue and}} fin whales have been tracked using {{relative}} travel times and amplitudes from both direct and multipath arrivals to a seafloor array of seismometers. Calls of three fin whales {{swimming in the}} same general direction, but several kilometers apart, are believed to represent communication between the whales because of signature differences in call character, an alternating <b>call</b> <b>pattern,</b> and coordination of call and respiration times. Whale call tracks, call patterns, call character, and swimming speeds were examined during periods with and without the presence of noise. Noise sources included airguns, when the whales were subject to sound levels of up to 143 dB P-P (peak-to-peak) re: 1 µPa over the 10 to 60 -Hz band, and transits of merchant ships, when the whales received continuous levels up to 106 dB rms re: 1 µPa over the 10 to 60 -Hz band (115 dB P-P). Whale responses associated with these noises remain arguable...|$|E
50|$|During peak times service {{frequency}} is increased and <b>calling</b> <b>patterns</b> may be varied. In addition, {{there is one}} early morning service between Colchester and Liverpool Street operated by Abellio Greater Anglia.|$|R
40|$|The {{telecommunications}} {{industry is a}} fragmented market, characterized by a tremen-dous amount of customer heterogeneity. This paper shows how such customer heterogeneity dramatically affects nonlinear pricing strategies: (i) First, if there are unbalanced <b>calling</b> <b>patterns</b> between different customer types, networks make larger proÞts on the least at-tractive customers. In addition, {{the nature of the}} <b>calling</b> <b>pattern</b> substantially affects how networks discriminate implicitly between different customer types. (ii) Secondly, different customer types often perceive the substitutability of competing networks differently. The proÞt neutrality of the access charge, highlighted in the literature, is then shown to break down...|$|R
50|$|Capacity Management - judges {{whether the}} system is being over or under utilized. It {{examines}} trunk usage and <b>call</b> <b>patterns</b> that show where extra capacity is required or where cost savings can be achieved.|$|R
