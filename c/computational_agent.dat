99|430|Public
2500|$|An ant is {{a simple}} <b>computational</b> <b>agent</b> in the ant colony {{optimization}} algorithm. It iteratively constructs a solution for the problem at hand. The intermediate solutions {{are referred to as}} solution states. At each iteration of the algorithm, each ant moves from a state [...] to state , corresponding to a more complete intermediate solution. Thus, each ant [...] computes a set [...] of feasible expansions to its current state in each iteration, and moves to one of these in probability. For ant , the probability [...] of moving from state [...] to state [...] depends on the combination of two values, viz., the attractiveness [...] of the move, as computed by some heuristic indicating the a priori desirability of that move and the trail level [...] of the move, indicating how proficient {{it has been in the}} past to make that particular move.|$|E
5000|$|The {{fundamental}} primitive of {{the ambient}} calculus is the ambient. An ambient is informally {{defined as a}} bounded place in which computation can occur. The notion of boundaries is considered key to representing mobility, since a boundary defines a contained <b>computational</b> <b>agent</b> that can be moved in its entirety. Examples of ambients include: ...|$|E
50|$|In {{the early}} 1990s, whilst still a {{graduate}} student, he met Joshua M. Epstein {{who was to}} become a key collaborator. This led to Axtell joining Epstein at the Brookings Institution in 1992. The pair developed a keen interest in mathematical modeling influenced by the work of Thomas Schelling, with their primary research interest the modeling of complex social, economic, and biological systems using <b>computational</b> <b>agent</b> based models.|$|E
40|$|Abstract. This {{paper is}} devoted to {{exploring}} the relationships between <b>computational</b> <b>agents,</b> {{as they can be}} found in multi-agent systems (MAS) or Distributed Artificial Intelligence (DAI), and the different techniques regrouped under the generic appellation “multi-agent based simulation ” (MABS). Its main purpose is to show that MABS, despite its name, is in fact rarely based on <b>computational</b> <b>agents.</b> We base our demonstration on an innovative presentation of the methodological process used in the development of current MABS systems. This presentation relies on the definition of the different roles involved in the design process, and we are able to show that the notion of “agent”, although shared at a conceptual level by the different participants, does not imply a systematic use of <b>computational</b> <b>agents</b> in the systems deployed. We then conclude by discussing what the use of <b>computational</b> <b>agents,</b> based on the most interesting research trends in DAI or MAS, might provide MABS with...|$|R
40|$|Abstract. <b>Computational</b> <b>agents</b> {{which make}} use of {{behaviour}} change models {{have the potential to}} help motivate people to change problematic behaviour. The importance of emotion simulation in behaviour change agents is discussed, along with an overview of a behaviour change model (the Transtheoretical Model [1]) that <b>computational</b> <b>agents</b> can {{make use of}}. Experiments that will investigate these areas further (within a nutritional domain) are then described. ...|$|R
5000|$|... {{consistent}} cross-task API, allowing <b>computational</b> <b>agents</b> {{to interact}} with the same sw that that human users interact with ...|$|R
50|$|The {{predictive}} manufacturing system (PMS) is {{a manufacturing}} paradigm wherein {{the system is}} programmed with certain amount and type of intelligence that allows assets to estimate their own condition, detect {{the presence of a}} fault or an anomaly, infer future fault events and even diagnose potential root cause of the problem. The goal of predictive manufacturing system (PMS) is to enable machine and systems with “self-aware” capabilities. The core technology of PMS in order to deliver “self-aware” capabilities is the smart <b>computational</b> <b>agent</b> that will contain advanced analytics to conduct predictive modeling functionalities.|$|E
5000|$|An ant is {{a simple}} <b>computational</b> <b>agent</b> in the ant colony {{optimization}} algorithm. It iteratively constructs a solution for the problem at hand. The intermediate solutions {{are referred to as}} solution states. At each iteration of the algorithm, each ant moves from a state [...] to state , corresponding to a more complete intermediate solution. Thus, each ant [...] computes a set [...] of feasible expansions to its current state in each iteration, and moves to one of these in probability. For ant , the probability [...] of moving from state [...] to state [...] depends on the combination of two values, viz., the attractiveness [...] of the move, as computed by some heuristic indicating the a priori desirability of that move and the trail level [...] of the move, indicating how proficient {{it has been in the}} past to make that particular move.|$|E
5000|$|Machine-generated data is {{information}} automatically {{generated by a}} computer process, application, or other mechanism without the active intervention of a human. While the term dates back over fifty years, there is some current indecision as to {{the scope of the}} term. Monash Research's Curt Monash defines it as [...] "data that was produced entirely by machines OR data that is more about observing humans than recording their choices." [...] Meanwhile, Daniel Abadi, CS Professor at Yale, proposes a narrower definition, [...] "Machine-generated data is data that is generated {{as a result of a}} decision of an independent <b>computational</b> <b>agent</b> or a measurement of an event that is not caused by a human action." [...] Regardless of definition differences, both exclude data manually entered by a person. Machine-generated data crosses all industry sectors. Often and increasingly, humans are unaware their actions are generating the data.|$|E
40|$|In {{this paper}} we present an {{architecture}} for decision making of software agents {{that allows the}} agent to be-have autonomously. Our target area is <b>computational</b> <b>agents</b> — encapsulating various neural networks, genetic algorithms, and similar methods — {{that are expected to}} solve problems of different nature within an environment of a hybrid computational multi-agent system. The ar-chitecture is based on the vertically-layered and belief-desire-intention architectures. Several experiments with <b>computational</b> <b>agents</b> were conducted to demonstrate the benefits of the architecture. ...|$|R
40|$|We {{propose a}} {{decision}} making process meant to mimic human behavior. This pprocess is implemented with <b>computational</b> <b>agents.</b> We use this computational testbed to run simulations of two coordination games, the minimum-effort coordination game and {{the battle of the}} sexes game. We find that the <b>computational</b> <b>agents</b> exhibit behavior similar to human subjects from previous experimental work. We then use the computational testbed to develop experimental hypothses, which are then confirmed in the laboratory using human subjects. In particular, we show that higher cost may actually lead to higher average payoffs in the minimum-effort coordination game...|$|R
40|$|Abstract. Traditional {{programming}} languages do {{not support}} the description of certain behaviours which usually involve <b>computational</b> <b>agents.</b> In this work, it is presented an alternative way to evaluate the qualitative knowledge of virtual entities, such as <b>computational</b> <b>agents,</b> living in virtual worlds and that are able to represent legal organizations or personalities. In this sense, it is possible to determine the attitudes revealed by the interaction, in community, of such virtual entities, pursuing social or human goals. The agent’s knowledge bodies are described in terms of an extension to a logic programming language, allowing the representation of imperfect knowledge. ...|$|R
40|$|We {{propose a}} new {{paradigm}} for solving problems in a computational society where a <b>computational</b> <b>agent</b> is able to use information about the direct and indirect computational experiences of other agents. We call this framework the history computing (HC) framework {{and use it to}} generalize existing computational frameworks that might be used in a <b>computational</b> <b>agent</b> society, like relativized or oracle computing and knowledge compilation (KC). We present a classification of problems using this framework and give some examples showing that direct compilation of computational experiences of other agents can be significantly enhanced by adding meta-information about these experiences. Finally we discuss some relationships with relativized computing and KC, showing that the HC-framework is able to refine both. ...|$|E
40|$|The {{subtleties}} {{of how the}} Mitogen Activated Protein Kinase works (MAPK) biochemical signalling pathway works, its emergent oscillatory behaviour and sensitivity is explained though an analysis of a <b>computational</b> <b>agent</b> based model {{that takes into account}} the distribution of the MAPK cascade components into multiple compartment...|$|E
40|$|Abstract. In {{this paper}} a <b>computational</b> <b>agent</b> model is {{presented}} that describes and mimics processing in persons with a Post-Traumatic Stress Disorder (PTSD). The model {{is based on}} insights from the neurological literature on how specific phenomena that are typical for PTSD patients can occur, such as re-experiencing the strong feeling related to the original traumatic event, dissociation (not feeling the own body), and flashbacks {{in the form of}} images. A number of simulations is presented that show how the agent model displays these phenomena of reexperiencing, dissociation and flashback episodes, triggered by a neutral stimulus. The obtained cognitive/affective agent model {{can be used as a}} basis for the design of human-like virtual agents in simulation-based training or in gaming or virtual stories. Keywords: Post-Traumatic Stress Disorder (PTSD), <b>computational</b> <b>agent</b> mode...|$|E
40|$|Abstract:- To {{utilize the}} {{flexible}} problem solving capability of human designers, {{we aim at}} extending our previous approach for cooperative problem solving among <b>computational</b> <b>agents</b> toward a human-machine cooperative design system {{within the framework of}} Multi-Agent Systems (MAS). We extend our method to allow the interactive modification of evaluation measures in cooperative design through the communication among the agents by re-scaling relative weights of the measures. To prevent the ramification of the modification by human designers, we also propose a method for supporting consensus building between human and <b>computational</b> <b>agents</b> based on Analytic Hierarchy Process. The implementation of the proposed method has been conducted and its effectiveness is evaluated through the cooperative design of a micro satellite in MAS...|$|R
40|$|Abstract. In {{this paper}} we present an {{ontology}} suitable for describing <b>computational</b> <b>agents</b> and <b>computational</b> multi-agent systems. The ontology {{is expressed in}} the description logic formalism and allows us to describe agents capabilities and to reason about them. The ontology describes agents from the communicational point of view. Further, the capabilities resulting from the built-in concept nodes architecture are described. Our target area is <b>computational</b> <b>agents</b> — encapsulating various neural networks, genetic algorithms, and similar methods — {{that are expected to}} solve problems of different nature within an environment of a hybrid computational multi-agent system. The agents ontology allows us to combine individual agents into schemes that can be either verified automatically, or even generated automatically...|$|R
40|$|This article {{presents}} a general agent-based simulation approach that captures agents’ decision-making processes and dynamic relationships that determine urban shape. The article shows how to simulate urban growth patterns and land-use change dynamics using economic assumptions and by modeling {{the interactions of}} <b>computational</b> <b>agents...</b>|$|R
40|$|There {{have been}} {{numerous}} attempts to provide a standardized definition of a <b>computational</b> <b>agent,</b> but little consensus has emerged. We propose a simple test for agenthood {{that can be applied}} to a putative <b>computational</b> <b>agent.</b> Roughly, this test seeks to capture the intuition that an agent is an entity that can function as part of a multiagent system. The test depends on the observed behavior of the supposed agent, and not on the internals of it. We apply the test to some well-known kinds of systems (supposed) agents, and discuss the results. We present a formulation of the test and some variants with a semantics based on sociability. Our treatment of agenthood can thus serve as a basis for a methodology for evaluating putative agents and agent toolkits...|$|E
40|$|We {{present an}} {{experimental}} {{framework for the}} study of a computational agent's acquisition of ontological categories through interaction with a human agent. This interaction takes the form of joint attention in a shared visual environment. Through a game of guessing words, the <b>computational</b> <b>agent</b> adapts its categorization system - a CALM-based neural architecture with a set of Gabor filters - and develops a shared lexicon with the human agent. This paper report initial experimental results...|$|E
40|$|Contents 1 Introduction 2 2 Collective Intelligence 6 2. 1 Collective Memory................................. 8 2. 2 <b>Computational</b> <b>Agent</b> Society........................... 8 2. 3 Extracting Information {{from the}} Chromosomes................. 11 3 Non [...] coding Segments 13 3. 1 Genetic Algorithms................................. 13 3. 2 Genetic Programming............................... 14 4 Preliminary Experiments 16 4. 1 Clique Detection.................................. 16 4. 2 Repair and Duplication.............................. 18 4. 2. 1 Simple Repair................................ 19 4. 2. 2 Repair with Duplication.......................... 20 4. 2. 3 Experimental Results......... ...|$|E
40|$|Abstract – As {{artificial}} intelligence approaches the human level, {{the task of}} designing cognitive tests and challenges for robots becomes critical for clarifying and reproducing elements of the “magic ” of human cognition. In solving this task, the store of knowledge of experimental psychology cannot be ignored. At the same time, methods and test paradigms used for evaluation of humans and/or brain models need to be adjusted {{before they can be}} used for evaluation of <b>computational</b> <b>agents.</b> The present work introduces new test paradigms and metrics that are adequate to assess higher cognitive features in expected <b>computational</b> <b>agents,</b> {{while at the same time}} allowing for comparison with humans. Index Terms – Cognitive evaluation, psychometrics, intelligent agents, cognitive systems, human-level intelligence...|$|R
40|$|This paper {{presents}} an on-going research aimed at designer {{support in the}} conceptual stages of architectural design. It is argued that collaboration {{plays an important role}} at every stage of the design process. Extending Schön's seminal theory of 'design as a conversation', the support of the conceptual architectural design process is proposed as a dialogue between the designer and the <b>computational</b> <b>agents</b> wherein the agents adopt the role of design team members. The dialogue is theoretically aimed at triggering the experiential memory of the designer and associating significant experiences from different domains of the design problem to stimulate creative thinking. The paper {{presents an}} outline of the proposed model for a design-conversation system implementing <b>computational</b> <b>agents</b> in a blackboard architecture environment...|$|R
40|$|We {{address the}} problem of {{building}} <b>computational</b> <b>agents</b> that are capable of play. Existing research has examined the forms, characteristics, and processes involved in various kinds of play at a high level. However, this research does not provide a unified framework at a level of detail sufficient for building <b>computational</b> <b>agents</b> that can play. As a step toward addressing this gap we synthesize diverse research on pretend play to recognize important components of pretend play agents. We also develop a formal model of one key component of pretend play, pretend object play, and present a computational implementation of this model. Our work provides initial criteria for the content and processes necessary for pretend play agents. Author Keywords play, games, creativity, artificial intelligenc...|$|R
40|$|In this paper, {{based on}} {{literature}} from Cognitive and Affective Neuroscience, a <b>computational</b> <b>agent</b> model is introduced incorporating {{the role of}} emotional awareness states in the dynamics of action generation. More specifically, it covers both automatic, unconscious (bottom-up) and more cognitive and conscious (top-down) emotion generation processes, and their mutual interaction. The model was formalised in a dynamical system format. In different scenarios the model shows simulation results that {{are in line with}} patterns reported in literature...|$|E
40|$|This paper {{presents}} {{a novel approach}} to procedural generation of urban maps for First Person Shooter (FPS) games. A multi-agent evolutionary system is employed to place streets, buildings and other items inside the Unity 3 D game engine, resulting in playable video game levels. A <b>computational</b> <b>agent</b> is trained using machine learning techniques to capture {{the intent of the}} game designer as part of the multi-agent system, and to enable a semi-automated aesthetic selection for the underlying genetic algorithm...|$|E
40|$|Abstract. A <b>computational</b> <b>agent</b> {{model for}} {{monitoring}} and control of a virtual human agent’s resources and exhaustion is presented. It models a physically grounded intelligent decision making process within the agent model for physical effort to be spent. Simulation results are discussed, and a formal analysis is presented on conditions under which the agent model functions properly, for example, such {{that it can be}} used to avoid running out of resources. Finally, the model is related to a model for monitoring or simulating a person’s heart rate. ...|$|E
40|$|The {{notion of}} <b>computational</b> <b>agents</b> {{has become very}} fashionable lately [23, 31]. Building such agents {{seems to be a}} good way of congenially {{providing}} services to users in networked computer systems. Typical applications are information retrieval over the internet, automation of common user activities, smart user interfaces...|$|R
40|$|Computational lexicons {{can play}} a key role in the Semantic Web: aiming at making word content machine-understandable, they intend to provide an {{explicit}} representation of word meaning, so that it can be directly accessed and used by <b>computational</b> <b>agents,</b> such as large-coverage parsers, modules for intelligent Information Retrieval...|$|R
40|$|This paper applies two {{experimental}} economics methods (i. e., agent-based {{modeling and}} laboratory experiment) {{to a market}} test suite {{that is based on}} a fictional European wholesale electricity market. Quantitative results of generators' strategic behavior in this market context are separated between generators played by human subjects (i. e., master students) in a laboratory experiment and generators represented by <b>computational</b> <b>agents</b> in an agent-based model. The behavior is measured through offers that students or agents make when participating in the electricity trading auction and the market outcomes under both methods are discussed in order to illustrate the difference between the behavior of human and <b>computational</b> <b>agents.</b> The paper also identifies the improvements that would need to be made to the market test suite to allow for a more conclusive comparison in future experiments...|$|R
40|$|Making a <b>computational</b> <b>agent</b> 'social' has {{implications}} for how it perceives itself and {{the environment in which}} it is situated, including the ability to recognise the behaviours of others. We point to recent work on social planning, i. e. planning in settings where the social context is relevant in the assessment of the beliefs and capabilities of others, and in making appropriate choices of what to do next. Comment: Presented at " 2 nd Workshop on Cognitive Architectures for Social Human-Robot Interaction 2016 (arXiv: 1602. 01868) ...|$|E
40|$|In {{this paper}} a <b>computational</b> <b>agent</b> model is {{presented}} that models dreaming based on internal simulation. Building blocks for this internal simulation are memory {{elements in the}} form of sensory representations and their associated emotions. In the model, under influence of associated feeling levels and mutual competition, some sensory representation states pop up in different dream episodes. The activation levels of both the feeling and the sensory representation states are regulated by control states. The model was evaluated by a number of simulation experiments for different scenarios...|$|E
40|$|We {{examine the}} {{process through which}} {{computational}} thinking develops in a perspectival fashion as two middle school students collaborate {{with each other in}} order to develop computational models of two graphs of motion. We present an interaction analysis of the students' discourse and computational modeling, and analyze how they came to a joint understanding of the goal of the modeling activity. We show that this process involves bringing about coherence between multiple perspectives: the object in motion, the <b>computational</b> <b>agent,</b> the other student, and graphs of motion...|$|E
40|$|We {{describe}} {{the use of}} decision-theory to optimize the value of computation under uncertain and varying resource limitations. The research is motivated by the pursuit of formal models of rational decision making for <b>computational</b> <b>agents,</b> centering on the explicit consideration of preferences and resource availability. We focus here {{on the importance of}} identifying the multiattribute structure of partial results generated by approximation methods for making control decisions. Work on simple algorithms and on the control of decision-theoretic inference itself is described. 1 Computation Under Uncertainty We are investigating the decision-theoretic control of problem solving under varying constraints in resources required for reasoning, such as time and memory. This work is motivated by the pursuit of formal models of rational decision making under resource constraints and our goal of extending foundational work on normative rationality to <b>computational</b> <b>agents.</b> We describe here a portion [...] ...|$|R
40|$|Abstract: In {{this paper}} a multi agent {{platform}} targeted towards {{the area of}} computational intelligence modeling is presented. We show the design of various <b>computational</b> <b>agents</b> and multi agent systems, {{as well as the}} infrastructure capabilities. The focus of the system is the interchangeability of computational components, their autonomous behavior, and emergence of new models. It is demonstrated that such a system is able to assist in building artificial intelligence models based on data in a distributed environment. Key–Words: Multi-agent systems, Adaptive <b>Agents,</b> <b>Computational</b> Intelligence. ...|$|R
40|$|To design {{protocols}} among <b>computational</b> <b>agents,</b> we {{have adopted}} Searle and Vanderveken model of speech acts because {{this model is}} a rich theory which can give important properties of protocols that we can formalize properly. To achieve this, {{we are working on}} an adequate formalism (the situation calculus) for representing this model in the context of multiagent systems...|$|R
