6|25|Public
5000|$|EiffelStudio {{includes}} {{a combination of}} tools integrated under a single user interface: compiler, interpreter, debugger, browser, metrics tool, profiler, diagram and <b>code</b> <b>inspector</b> tool. The user interface rests {{on a number of}} specific UI paradigms, in particular [...] "pick-and-drop" [...] for effective browsing.|$|E
5000|$|Test {{execution}} {{for single}} programs is possible {{from within the}} editors. Newer versions of ABAP Unit (>= SAP_BASIS 7.02) offer an integration with coverage metrics and a report to schedule automatic test execution with mail notification. ABAP Unit offers no feature to define test suites programmatically. Mass runs for entire packages can be executed with the <b>Code</b> <b>Inspector</b> integration only.|$|E
5000|$|In 1994, Coleman {{appeared}} in {{an episode of}} Married... with Children, playing a building <b>code</b> <b>inspector</b> whom Al Bundy called to report an illegal driveway. When Kelly recognizes him, he denies any connection to Arnold Jackson, but utters his catchphrase to Al, [...] "What'chu talkin' about, Bundy?". Also, in 1996, Coleman and Bain reprised their roles for the series finale of The Fresh Prince of Bel-Air entitled [...] "I, Done Part 2". In their scene, they reference Willis by name before meeting Will Smith's character, leading to Coleman uttering a variation of his catchphrase, [...] "What'chu talkin' about, Will?".|$|E
5000|$|City of Etowah <b>Code</b> Enforcement/Building <b>Inspector</b> - Chris Ingram ...|$|R
50|$|As of 2016, {{the borough}} {{government}} includes Mayor Ina Jean Marton, council president Ron Massung, council vice president Joe Nagy, council president pro tempore David Pasternak, and councilmen Ed Babyak, Charles Davis, Kenneth Robb, and C. Richard Bryce. Other officials include borough secretary Nancy Greenland, finance secretary Michelle Gessner, <b>code</b> enforcement/building <b>inspector</b> Jennifer O'Brien, police chief Lou Bender, district magistrate Tom Miller, and emergency management coordinator J. Mark Jones.|$|R
40|$|Most web {{applications}} have critical bugs (faults) {{affecting their}} security, {{which makes them}} vulnerable to attacks by hackers and organized crime. To prevent these security problems from occurring it is of utmost importance to understand the typical software faults. This paper contributes to this body of knowledge by presenting a field study {{on two of the}} most widely spread and critical web application vulnerabilities: SQL Injection and XSS. It analyzes the source code of security patches of widely used web applications written in weak and strong typed languages. Results show that only a small subset of software fault types, affecting a restricted collection of statements, is related to security. To understand how these vulnerabilities are really exploited by hackers, this paper also presents an analysis of the source code of the scripts used to attack them. The outcomes of this study can be used to train software developers and <b>code</b> <b>inspectors</b> in the detection of such faults and are also the foundation for the research of realistic vulnerability and attack injectors {{that can be used to}} assess security mechanisms, such as intrusion detection systems, vulnerability scanners, and static code analyzers. PEst-OE/EGE/UI 4056 / 201...|$|R
50|$|Pressure {{vessel design}} {{involves}} Barlow's formula, {{used to calculate}} the required wall thickness. However, the design of a complex pressure containment system involves much more than the application of this formula. For almost all pressure vessels, the ASME code stipulates the requirements for design and testing. Prior to delivery, the pressure vessel is hydrostatically tested at 130% of its rated pressure under the supervision of an ASME <b>code</b> <b>inspector.</b> It is filled with water, and a small pump raises the pressure to the necessary test value, at which it is held for a specified time (30 minutes according to the ASME code). The inspector checks for leaks as well as evidence of flaws or inadequacies in the welding.|$|E
40|$|Abstract. To be a {{debugger}} {{is a good}} thing! Since {{the very}} beginning of the programming activity, debuggers are the most important and widely used tools after editors and compilers; we completely recognize their importance for software development and testing. Debuggers work at machine level, after the compilation of the source program; they deal with assembly, or binary-code, and are mainly data structure inspectors. Alma is a program animator based on its abstract representation. The main idea is to show the algorithm being implemented by the program, independently from the language used to implement it. To say that ALMA is a debugger, with no value added, is not true! ALMA is a source <b>code</b> <b>inspector</b> but it deals with programming concepts instead of machine code. This makes possible to understand the source program at a conceptual level, and not only to fix run time errors. In this paper we compare our visualizer/animator system, ALMA, with one of the most well-known and used debuggers, the graphical version of GDB, the DDD program. The aim of the paper is twofold: the immediate objective is to prove that ALMA provides new features that are not usually offered by debuggers; the main contribution is to recall the concepts of debugger and animator, and clarify the role of both tools in the field of program understanding, or program comprehension...|$|E
40|$|The {{inner vessel}} heads {{including}} bypass and beam tubes {{had just been}} welded into place and dye penetrant checked. The vacuum heads were not on at this time but the vacuum shell was on covering the piping penetrating into the inner vessel. Signal boxes with all feed through boards, the instrumentation box, and high voltage boxes were all installed with their pump outs capped. All 1 / 4 -inch instrumentation lines were terminated at their respective shutoff valves. All vacuum piping used for pumping down the inner vessel was isolated using o-ring sealed blind flanges. PV 215 A (VAT Series 12), the 4 -inch VRC gate valve isolating the cyropump, and the rupture disk {{had to be removed}} and replaced with blind flanges before pressurizing due to their pressure limitations. Stresses in plates used as blind flanges were checked using Code calcualtions. Before the CC test, vacuum style blanks and clamps were hydrostatically pressure tested to 150 % of the maximum test pressure, 60 psig. The <b>Code</b> <b>inspector</b> and Research Division Safety had all given their approval to the test pressure and procedure prior to filling the vessel with argon. The test was a major success. Based on the lack of any distinguishable pressure drop indicated on the pressure gages, the vessel appeared to be structurally sound throughout the duration of the test (approx. 3 hrs.). A major leak in the instrumentation tubing was discovered at half of the maximum test pressure and was quickly isolated by crimping and capping with a compression fitting. There were some slight deviations in the actual procedure used. The 44 psig relief valve located just outside the cleanroom had to be capped until the pressure in the vessel indicated 38 psi. This was to allow higher supply pressures and hence, higher flows through the pressurizing line. Also, in order to get pressure readings at the cryostat without exposing any personnel to the potentially dangerous stored energy near the maximum test pressure, a camera was installed {{at the top of the}} vessel to view the indicator mounted there. The monitor was viewed at the ante room adjacent to the cleanroom. The holding pressure of 32 psig (4 / 5 of the maximum test pressure) was only maintained for about 20 minutes instead of the half hour recommendation in the procedure. We felt that this was sufficient time to Snoop test and perform the pressure drop test. After the test was completed, the inspector for CBI Na-Con and the Research Divison Safety Officer signed all of required documentation...|$|E
40|$|Nowadays web {{applications}} have critical logical holes (bug) affecting its security, Thus {{it makes}} application as vulnerable {{and easy to}} attack by hackers and organized crime. In order to prevent these security problems from occurrence of its maximum importance to understand the typical software faults. This paper contributes the knowledge of widely spread two critical web applications by presenting a field study on most of vulnerabilities like SQL Injection and XSS. By analyzing the security patches of source code which are widely used in web applications written in weak and strong typed languages. In {{order to understand the}} way in which these vulnerabilities are really exploited by hackers, and also provides an analysis of the source code of the scripts used to attack them. With the outcomes of this result and its study can be used to train <b>code</b> <b>inspectors</b> and software developers in the detection of such software faults, and also with that outcomes research for realistic vulnerability and attackers can be used to assess security mechanisms, like vulnerability scanners, intrusion detection systems, and static code analyzers. By using various number of software testing techniques tools various level of vulnerability are identified and recovery mechanisms were suggested...|$|R
40|$|Software {{inspections}} {{are effective}} ways to detect defects early in the development process. In this paper, we analyze the impact of certain defect types {{on the effectiveness of}} code inspection. We conducted an experiment in an academic environment with 88 subjects to empirically investigate the effect of two maintainability defects, i. e., indentation and naming conventions, on the number of functional defects found, the effectiveness of functional defect detections, and the number of false positives reported during individual code inspections. Results show that in cases where both naming conventions and indentation defects exist, the participants found minimum number of defects and reported the highest number of false positives, as compared to the cases where either indentation or naming defects exist. Among maintainability defects, indentation seems to significantly impact the number of functional defects found by the inspector, while the presence of naming conventions defects seems to have no significant impact on the number of functional defects detected. The presence of maintainability defects significantly impacts the number of false positives reported. On the effectiveness of individual <b>code</b> <b>inspectors</b> we observed no significant impact originated from the presence of indentation or naming convention defects. © 2010 ACM...|$|R
50|$|In The Netherlands, {{there are}} {{municipal}} SEO´s (Special enforcement officers). These assist {{the police on}} certain pieces of the law. They could be working in cities as municipal <b>code</b> <b>inspectors,</b> parking enforcement, public transport or in environmental departments. These officers have police powers like detaining people, issue fines and use force when arresting a person. Most municipalities issue handcuffs to the officers, in some cities also police batons {{are a part of}} the officers equipment. In a few cities officers are allowed to carry and use pepperspray. Only a few cities have SEO´s with additional schooling carrying a firearm, these officers a mostly employed in dense areas like forests. A SEO (or BOA in Dutch) has the status of civil servant and is not a uniformed civilian unlike security guards. Until 2014 every municipality could use a uniform of their choice, some where exact police uniforms with peaked caps and blue trousers with black striping. From 2015 the justice ministry created a uniform specially for municipal enforcement. This consists of a polo shirt, worker trousers, baseball cap and soft-shell jackets and were inspired by the Spanish municipal police uniforms with checkers bands on shirts and hats.|$|R
50|$|The {{authorities}} enforced labor <b>code</b> provisions through <b>inspectors</b> {{from the}} Ministry of Labor and State Reforms, which conducted surprise inspections and complaint-based inspections; however, resource limitations restricted {{the frequency and}} effectiveness of oversight by the Labor Inspection Service, which operated only in the formal sector.|$|R
40|$|Two {{computer}} programs are described: (1) the INCC (IAEA or International Neutron Coincidence Counting) program and (2) the DEMING curve-fitting program. The INCC program is an IAEA {{version of the}} Los Alamos NCC (Neutron Coincidence Counting) code. The DEMING program is an upgrade of earlier Windows{reg_sign} and DOS codes with the same name. The versions described are INCC 3. 00 and DEMING 1. 11. The INCC and DEMING <b>codes</b> provide <b>inspectors</b> with the software support needed to perform calibration and verification measurements {{with all of the}} neutron coincidence counting systems used in IAEA inspections for the nondestructive assay of plutonium and uranium...|$|R
40|$|International audienceEnvironmental {{regulation}} aims {{to ensure}} that industrial activities cause the least possible damage. In France, this includes checks of regulatory compliance by environmental inspectors. In cases of non-or partial compliance, the Environmental <b>Code</b> gives <b>inspectors</b> the power to impose sanctions: fines and/or imprisonment. In theory, {{the relationship between the}} "inspector" and the "inspected" refers to a person with powers {{similar to those of the}} police who can punish all kinds of non-compliance, and another person considered to be an "offender". In reality, the objective of environmental inspectors is not to apply sanctions, but to promote economic development, by finding solutions that enable compliance with environment protection and safety regulations...|$|R
50|$|The {{inspected}} areas include structural integrity, safety features, {{electrical and}} electronic systems, powertrain, suspension, fuel system, emissions, steering, comfort system (heat/air), security system, exhaust, interior, wheels and rims, and apparent state of general maintenance. Hidden damage from crashes, flood, or rough use are checked. Important for newer vehicles is an {{inspection of the}} onboard computer system, including recently cleared computer <b>codes.</b> The <b>inspector</b> also investigates for vehicle identification alteration, lack of recent license plates, salvage title, and odometer fraud. Commercial vehicle inspections also evaluate the condition of items relevant to commercial use, such as conspicuity materials, markings and placards, insurance, service limits, coupling devices, etc.|$|R
5000|$|Elizabeth Abbott {{wrote that}} the [...] "near {{paralysis}} of the René Préval government" [...] {{in responding to the}} earthquake can be traced to deeply rooted Duvalierism in Haiti. Abbott also notes that [...] "the corruption that permeated the Haitian state" [...] under Jean-Claude Duvalier [...] "extended to the construction industry, which ignored building <b>codes</b> and bribed <b>inspectors</b> who overlooked flawed structures that would later crumble in the earthquake." ...|$|R
50|$|North Braddock has a borough form of government. The borough {{has nine}} elected council members and a mayor who all serve four year terms. The borough manager conducts daily borough {{business}} and operates the budget passed by council. Ordinances and building codes are {{enforced by the}} appointed <b>code</b> official/building <b>inspector.</b> The borough solicitor provides legal consultation for borough legal issues. An engineering firm is contracted to provide consultation for borough infrastructure issues. The elected tax collector serves a four-year term and has part-time office hours for borough tax issues. North Braddock {{is a member of}} the Turtle Creek Valley Council of Governments. The Municipal Building has the mayor's office, manager's office, police station, council chambers, tax office, code enforcement office, street department garage, and fire station #2.|$|R
40|$|Abstract: We want {{to create}} a working tool for {{mathematics}} teachers and a corresponding learning tool for students, namely a graphical simulator of mathematical algorithms (GraSMa). To achieve it we try two different strategies. We started by annotate manually the original algorithm with inspector functions. Now we are testing a new approach that aims to automatically annotate the original <b>code</b> with <b>inspector</b> functions. To achieve this we are developing a language translator module that enables to comment automatically any code written in Octave language. The run of the annotated code gated by one of these two ways, records in a XML (eXtensible Markup Language) file everything that happened during the execution. Subsequently, the XML file is parsed by a Java application that graphically represents the mathematic objects and their behaviour during execution. The final application will be accessed on-line through a website (WebGraSMa) which is currently under development. In this paper we report and discuss about the procedures followed and present some intermediate results. ...|$|R
50|$|Cheswold has a council-manager {{system of}} {{government}} with a six-person Town Council, which consists of a Mayor and Vice Mayor among the council members. Elections for the council are held every year, with three council seats up for election for two-year terms. After elections, the Town Council selects a Mayor, who then selects a Vice Mayor and Secretary/Treasurer. The Town Council holds meetings once a month. As of 2017, the Mayor is Robert W. Sine, the Vice Mayor is Larence Kirby, and the Secretary/Treasurer is Theon (Sam) Callender, while the remaining members of Town Council are Judith Johnson, Matthew Asigner, and a vacant seat. The town government also consists of a Planning Commission, Town Administrator, Town Clerk, Building <b>Inspector,</b> <b>Code</b> Enforcement Officer, and Maintenance Technician.|$|R
40|$|In {{this paper}} we give a new run [...] time {{technique}} for finding an optimal parallel execution schedule for a partially parallel loop, i. e., a loop whose parallelization requires synchronization {{to ensure that}} the iterations are executed in the correct order. Given the original loop, the compiler generates <b>inspector</b> <b>code</b> that performs run [...] time preprocessing of the loop's access pattern, and scheduler code that schedules (and executes) the loop iterations. The inspector is fully parallel, uses no synchronization, and can be applied to any loop. In addition, it can implement at run [...] time the two most effective transformations for increasing the amount of parallelism in a loop: array privatization and reduction parallelization (element [...] wise). We also describe a new scheme for constructing an optimal parallel execution schedule for the iterations of the loop. ...|$|R
50|$|The IPC is {{the most}} widely used {{plumbing}} code in the United States and is also used {{as the basis for the}} plumbing code of several other countries. Wide adoptions are important as they help reduce manufacturer and end-user costs by allowing the use of materials across a wide user base, thus allowing economies of scale in production of materials used in construction. Uniformity in the codes adopted across many areas also allows a broader sharing of best building practices and techniques, and improves transferability of experts such as architects, engineers, <b>code</b> officials, building <b>inspectors,</b> and other building professionals among those different areas. More adoptions also invites broader participation in the formulation the codes, which lends to the incorporation of the latest and best building techniques that enhance the safety of citizens in the areas using the codes.|$|R
40|$|Current parallelizing compilers do a {{reasonable}} job of extracting parallelism from programs with regular, well behaved, statically analyzable access patterns. However, they cannot extract a significant {{fraction of the}} available parallelism if the program has a complex and/or statically insufficiently defined access pattern, e. g., simulation programs with irregular domains and/or dynamically changing interactions. Since such programs represent a large fraction of all applications, techniques are needed for extracting their inherent parallelism at run [...] time. In this paper we give a new run [...] time technique for finding an optimal parallel execution schedule for a partially parallel loop, i. e., a loop whose parallelization requires synchronization {{to ensure that the}} iterations are executed in the correct order. Given the original loop, the compiler generates <b>inspector</b> <b>code</b> that performs run [...] time preprocessing of the loop's access pattern, and scheduler code that schedules (and executes) th [...] ...|$|R
40|$|When the inter-iteration {{dependency}} {{pattern of}} the iterations of a loop cannot be determined statically, compile time parallelization of the loop is not possible. In these cases, runtime parallelization [8] is the only alternative. The idea is to transform the loop into two <b>code</b> fragments: the <b>inspector</b> and the executor. When the program is run, the inspector examines the iteration dependencies and constructs a parallel schedule. The executor subsequently uses that schedule {{to carry out the}} actual computation in parallel. In this paper, we show how to reduce the overhead of running the inspector through its parallel execution. We describe two related approaches. The first, which emphasizes inspector efficiency, achieves nearly linear speedup relative to a sequential execution of the inspector, but produces a schedule that may be less efficient for the executor. The second technique, which emphasizes executor efficiency, does not in general achieve linear speedup of the inspector, but i [...] ...|$|R
40|$|The {{presented}} dissertation {{is concerned}} with the ethic features {{of the quality of the}} social services inspectors professional behaviour in the residental facilities. This dissertation is divided into two main parts. The first part comprises theoretical bases related to given problems with the analysis of the relevant professional literature. The other part comprises with the actual research, the aim of which was finding ethical contexts of the inspection performance, inspector's education in the ethics, ethic <b>code</b> of the <b>inspectors,</b> the inspector profession and the value preferences of the inspectors. The main target is to analyze the ethical connections during the ispection performance in chosen residential facilities of the social services. In the research the quantitative and qualitative methods, the questionnaire survey and structural interviews were used. Based on the synthesis of the acquired knowledge the dissertation presents a view of the ethics application in professional activities of the inspectors. Key words: social services, quailty standards, quality inspections, values, ethics, the ethic code, career of the inspector, residential social services...|$|R
40|$|Abstract––Presently {{the world}} has {{enormous}} advancement {{in science and technology}} the topic considered here is just a drop out of an ocean of knowledge. Higher product quality, better reliability, better availability of plants, optimization of cost and efficient working of boilers is the chief concern now a days. Generally the production can be increased by the efficient use of boilers and hence {{there is a lot of}} scope to minimize the boiler operation cost. A boiler maintenance improvement program must include two aspects: (1) action to bring the boiler to peak efficiency and (2) action to maintain the efficiency at the maximum level. Good maintenance and efficiency start with having a working knowledge of the components associated with the boiler, keeping records, etc., and end with cleaning heat transfer surfaces, adjusting the air-to-fuel ratio, etc. A well-planned maintenance program avoids unnecessary down time or costly repairs. It also promotes safety and aids boiler <b>code</b> and local <b>inspectors.</b> An inspection schedule listing the procedures should be established. Thus in this paper an attempt is made to develop an efficient maintenance scheme by which boilers can be used with peak efficiency...|$|R
40|$|ABSTRACT: The paper {{presents}} {{results from}} a number of investigations into the problem of the using an integrated client/server framework for an automated code-checking system. The changing nature and the complexity of building codes leads to delays in the design and the construction processes. The designer must assess which codes are applicable to a given project. Inspectors must go through a similar process and there can be inconsistencies in interpretation of a given section of the <b>code</b> between different <b>inspectors.</b> After that, he must check the codes for potential ambiguities in the code provisions. The process of design checking and approval can prolong the construction and delay the operation of a facility. Automating this process can alleviate the inconsistencies and delays with manual checking. Most previous studies on the process of checking of building codes have focused on the processing of design codes for conformance checking. The present article proposes to add additional criteria to a building model. On that basis are summarized representations of code provisions. The structure and attributes of a product model and building code model needed to provide design information are examined by a code-checking program. This program can read the design data and reorganize the information in a form that can be analyzed and compared to the model of the building code...|$|R
25|$|Beginning in 1949, the District of Columbia {{began making}} housing {{inspections}} in Marshall Heights, looking for <b>code</b> violations. <b>Inspectors</b> found that 9 out of 10 homes failed {{at least one}} health, housing, or building safety regulation, and they concluded that 8 out of every 10 homes in the neighborhood should be razed or renovated down to the framing studs. In May 1950, city inspectors estimated that 150 of the neighborhood's 500 homes were so unsafe {{that they should be}} razed. Yet, by the end of 1952, the city had condemned just 65 homes. A second inspection wave began in 1957. But by year's end, only 39 homes had been condemned and razed. A total of 348 homes had been cited for housing and building violations by the end of 1958, but city inspectors revealed that just 78 had been repaired and brought up to code. When questioned by the media as to why more homes had not been condemned, the city said condemnations would simply make extremely poor residents homeless, driving them into other slums and worsening the overcrowding there. The inspection program was to have ended in 1959, but the city kept it going because so few Marshall Heights residents had the money to make repairs or improvements to their homes. (Of the 348 homes found to be in violation, 81 homes had seen no repair.) With condemnation not an option, the city decided to keep inspecting homes and putting pressure on residents. By 1960, this third wave of inspections found that 302 of 347 inspected homes were in violation of either housing or building codes. Another six homes were condemned after 1957, bringing the total to just 45, so in 1961 city officials sought to condemn another 25 homes. By now, inspections had cited a total of 661 housing units (apartments and homes), even though the housing stock was relatively new (the average age of a home in Marshall Heights that year was 17 years). Inspections were so frequent, and residents so fearful of them, that some homeowners were refusing to admit city inspectors.|$|R
40|$|The aim of {{this thesis}} is to examine in detail the Inspectorate in the 1860 ’s and in {{particular}} the effect of the 1862 Revised Code on the inspectors' work. The background to the Revised Code is outlined, with emphasis on the early development of the Inspectorate {{and the extent to which}} the I 846 Pupil-Teacher Minutes changed the nature of the inspectors' task. After a chapter on the Report of the Newcastle Commission, the evolution of the Revised Code and the debate which led to its alteration are examined and placed in the context of contemporary social attitudes. This includes a section on inspectors' opinions of the Revised Code and, in the following chapter, the effect of the new Code on the inspection of schools. Throughout, attention is given to the influence of the religious bodies on elementary education and its inspection. The careers of the inspectors, which are given fully in an appendix, are analysed and, using their own writings as evidence, the inspectors' attitudes to their work are summarised. This examination of the writings of the H. M. I. s is then broadened to cover their opinions on the educational issues of the 1860 s. The extent to which these writings were subjected to censorship by the Privy Council Office is discussed in the context of the developing relationship between the government and its officials and the emphasis by the Office on the subordinate nature of the Inspectorate. After studying the effects of the Revised <b>Code</b> on the <b>inspectors,</b> teachers and school managers, this discussion is then extended into a fuller exploration of the relationship between the Education Office and its Inspectorate in the 1860 s. The thesis includes a brief survey of other school inspectors and ends with an account of the part that the H. M. I. s played in the genesis of the 1870 Education Act...|$|R
40|$|India is {{experiencing}} fast income growth and urbanization, and {{this leads to}} unprecedented increases in demand for building energy services and resulting energy consumption. In response to rapid growth in building energy use, the Government of India issued the Energy Conservation Building Code (ECBC) in 2007, {{which is consistent with}} and based on the 2001 Energy Conservation Act. ECBC implementation has been voluntary since its enactment and a few states have started to make progress towards mandatory implementation. Rajasthan is the first state in India to adopt ECBC as a mandatory code. The State adopted ECBC with minor additions on March 28, 2011 through a stakeholder process; it became mandatory in Rajasthan on September 28, 2011. Tamil Nadu, Gujarat, and Andhra Pradesh have started to draft an implementation roadmap and build capacity for its implementation. The Bureau of Energy Efficiency (BEE) plans to encourage more states to adopt ECBC in the near future, including Haryana, Uttar Pradesh, Karnataka, Maharashtra, West Bengal, and Delhi. Since its inception, India has applied the code on a voluntary basis, but the Government of India is developing a strategy to mandate compliance. Implementing ECBC requires coordination between the Ministry of Power and the Ministry of Urban Development at the national level as well as interdepartmental coordination at the state level. One challenge is that the Urban Local Bodies (ULBs), the enforcement entities of building by-laws, lack capacity to implement ECBC effectively. For example, ULBs in some states might find the building permitting procedures to be too complex; in other cases, lack of awareness and technical knowledge on ECBC slows down the amendment of local building by-laws as well as ECBC implementation. The intent of this white paper is to share with Indian decision-makers code enforcement approaches: through <b>code</b> officials, third-party <b>inspectors,</b> or a hybrid approach. Given the limited capacity and human resources available in the state and local governments, involving third-party inspectors could rapidly expand the capacity for plan reviews and broad implementation. However, the procedures of involving third-parties need to be carefully designed in order to guarantee a fair process. For example, there should be multiple checks and certification requirements for third-party inspectors, and the government should have the final approval when third-party inspectors are used in a project. This paper discusses different approaches of involving third-parties in ECBC enforcement; the Indian states may choose the approaches that work best in their given circumstances...|$|R

