48|109|Public
25|$|DNS {{responses}} traditionally do {{not have}} a <b>cryptographic</b> <b>signature,</b> leading to many attack possibilities; the Domain Name System Security Extensions (DNSSEC) modify DNS to add support for cryptographically signed responses. DNSCurve has been proposed as an alternative to DNSSEC. Other extensions, such as TSIG, add support for cryptographic authentication between trusted peers and are commonly used to authorize zone transfer or dynamic update operations.|$|E
2500|$|In May 2008, MIT {{students}} Zack Anderson, Russell J. Ryan, Alessandro Chiesa, and Samuel G. McVeety {{presented a}} final paper in Professor Ron Rivest's 6.857: Computer and Network Security class demonstrating {{weaknesses in the}} MBTA's automated fare collection system. The report identified four problems: the value is stored on the card {{and not in a}} secure database, the data on the card can be easily read and overwritten, there is no <b>cryptographic</b> <b>signature</b> algorithm to prevent forgeries, and there is no centralized card verification system. Anderson, Ryan, and Chiesa submitted a presentation entitled [...] "Anatomy of a Subway Hack: Breaking Crypto RFID's and Magstripes of Ticketing Systems" [...] to the DEF CON hacker convention which claimed to review and demonstrate how to reverse engineer the data on the magstripe card, several attacks to break the MIFARE-based Charlie Card, and brute force attacks using FPGAs.|$|E
5000|$|... ({{signature}}): Contains {{the weak}} <b>cryptographic</b> <b>signature</b> of the archive. This type of signature is deprecated.|$|E
5000|$|In {{cryptographic}} terminology, {{cryptographic hash}} functions and <b>cryptographic</b> <b>signatures</b> {{are used to}} add a tamper-evident layer of protection to document, {{often referred to as}} an electronic signature.|$|R
5000|$|<b>Cryptographic</b> <b>signatures</b> : Every changeset {{is stored}} with a hash to prevent {{accidental}} corruption. Using an external file signing program (such as GnuPG or another PGP client), these hashes can also optionally be signed, preventing unauthorized modification if the archive is compromised.|$|R
30|$|In {{contrast}} to the relative time indicated in the TTL field in DNS records, the <b>cryptographic</b> <b>signatures</b> contain an absolute expiration date and the date the signature was generated. The signatures also contain the tag of the cryptographic material (algorithm, hash, key) {{that was used to}} produce the signature.|$|R
50|$|Probabilistic Signature Scheme (PSS) is a <b>cryptographic</b> <b>signature</b> scheme {{designed}} by Mihir Bellare and Phillip Rogaway.|$|E
50|$|Under Estonian law, since 15 December 2000 the <b>cryptographic</b> <b>signature</b> {{is legally}} {{equivalent}} to a manual signature.|$|E
50|$|The card's chip stores a key pair, {{allowing}} {{users to}} cryptographically sign digital documents based on principles of {{public key cryptography}} using DigiDoc. Under Estonian law, since 15 December 2000 the <b>cryptographic</b> <b>signature</b> is legally equivalent to a manual signature.|$|E
40|$|International audienceA {{blockchain}} infrastructure, {{combined with}} <b>cryptographic</b> <b>signatures,</b> can improve availability and accountability for {{the deployment of}} IoT updates. However, cars with limited or intermittent Internet access may have difficulties in downloading full updates fromthe blockchain. Therefore, we allow cars that successfully downloaded updates to share them with other cars {{by means of a}} Peer-to-Peer (P 2 P) mechanism...|$|R
5000|$|Monotone tracks {{revisions}} to files, groups sets of revisions into changesets, and tracks history across renames. The {{focus of the}} project is on integrity over performance. [...] Monotone is designed for distributed operation, and makes heavy use of cryptographic primitives to track file revisions (via the SHA-1 secure hash) and to authenticate user actions (via RSA <b>cryptographic</b> <b>signatures).</b>|$|R
40|$|Abstract — We {{present a}} novel {{distributed}} implementation of Multiple Hypothesis Tracking (MHT). Our implementation {{is based on}} Merkle-Tree (hash-tree) distributed content storing approach. The proposed architecture makes use of recent advances in <b>cryptographic</b> <b>signatures</b> to enable fast operations on local trees and also allow sharing of hypotheses between local and remote nodes. Finally, the proposed architecture also allows for natural handling of out-of-sequence-measurements. 1...|$|R
50|$|The TPM is {{also able}} to produce a <b>cryptographic</b> <b>{{signature}}</b> based on its hidden key. This signature may be verified by the user or by any third party, and so can therefore be used to provide remote attestation that the computer is in a secure state.|$|E
50|$|A {{software}} taggant is a <b>cryptographic</b> <b>signature</b> {{added to}} software that enables positive origin identification {{and integrity of}} programs. Software taggants are using standard PKI techniques (see Public key infrastructure) and were introduced by the Industry Connections Security Group of IEEE {{in an attempt to}} control proliferation of malware obfuscated via executable compression.|$|E
50|$|Information-Based Indicia is a 2-dimensional PDF417 or {{data matrix}} barcode {{combined}} with human-readable information. The barcode data contains such information as amount of postage, origin zip code, destination, mail class, weight, confirmation/tracking numbers, and a <b>cryptographic</b> <b>signature.</b> The human-readable information shows {{at a minimum}} the information required by the USPS Domestic Mail Manual (DMM).|$|E
40|$|The {{quality of}} {{peer-to-peer}} content distribution can suffer when malicious participants intentionally corrupt content. Some systems using simple block-by-block downloading can verify blocks with traditional <b>cryptographic</b> <b>signatures</b> and hashes, but these techniques {{do not apply}} well to more elegant systems that use rateless erasure codes for efficient multicast transfers. This paper presents a practical scheme, based on homomorphic hashing, that enables a downloader to perform on-the-fly verification of erasure-encoded blocks...|$|R
5000|$|Worldwide, {{legislation}} {{concerning the}} effect {{and validity of}} electronic signatures, including, but not limited to, <b>cryptographic</b> digital <b>signatures,</b> includes: ...|$|R
40|$|Abstract — The {{quality of}} {{peer-to-peer}} content distribution can suffer when malicious participants intentionally corrupt content. Some systems using simple block-by-block downloading can verify blocks with traditional <b>cryptographic</b> <b>signatures</b> and hashes, but these techniques {{do not apply}} well to more elegant systems that use rateless erasure codes for efficient multicast transfers. This paper presents a practical scheme, based on homomorphic hashing, that enables a downloader to perform on-the-fly verification of erasure-encoded blocks. I...|$|R
5000|$|Cryptographers {{think of}} the field as {{originating}} {{in the work of}} Dr David Chaum who invented the blinded signature. This special form of a <b>cryptographic</b> <b>signature</b> permitted a virtual coin to be signed without the signer seeing the actual coin, and permitted a form of digital token money that offered untraceability. This form is sometimes known as Digital currency.|$|E
50|$|MPQs used in Blizzards games {{generally}} {{contain a}} games data files, including graphics, sounds, and level data. The formats capabilities include compression, encryption, file segmentation, extensible file metadata, <b>cryptographic</b> <b>signature</b> {{and the ability}} to store multiple versions of the same file for internationalization and platform-specific differences. MPQ archives can use a variety of compression algorithms which may also be combined.|$|E
50|$|DNS {{responses}} traditionally do {{not have}} a <b>cryptographic</b> <b>signature,</b> leading to many attack possibilities; the Domain Name System Security Extensions (DNSSEC) modify DNS to add support for cryptographically signed responses. DNSCurve has been proposed as an alternative to DNSSEC. Other extensions, such as TSIG, add support for cryptographic authentication between trusted peers and are commonly used to authorize zone transfer or dynamic update operations.|$|E
40|$|The {{quality of}} {{peer-to-peer}} content distribution can {{suffer from the}} malicious behavior of participants that corrupt or mislabel content. While systems using simple block-by-block downloading can verify blocks using traditional <b>cryptographic</b> <b>signatures,</b> these same techniques {{do not apply to}} more elegant systems that use rateless erasure codes for efficient multi-source, multicast download. This paper presents a practical scheme, based on homomorphic hashing, that enables a downloader to perform on-the-fly verification of erasure-encoded blocks. ...|$|R
30|$|A {{principal}} {{operating a}} delegation system {{may not be}} certain about the entirety of its delegation state g as a portion of {{it may have been}} perturbed by an attacker. The perturbation in the delegation state may come about from an attacker concealing the existence of selected delegation statements and/or injecting new delegation statements. Like a Dolev-Yao attacker [25], we assume that the attacker can only intercept, copy and paste signed statements, and cannot forge <b>cryptographic</b> <b>signatures.</b>|$|R
30|$|Because OSN {{accounts}} can {{be seized}} or infiltrated, SecurePost provides tools {{to verify that}} content is genuine and unmodified. SecurePost allows groups to attach <b>cryptographic</b> <b>signatures</b> to every post in order to verify the authenticity and integrity of messages. A companion browser extension allows anyone, even readers {{not part of the}} group, to verify posts directly on the social network web page. Using the extension, readers can know if a signed post came from a trusted member of the group and if its text has been modified, even if the OSN account has been compromised.|$|R
50|$|By default, {{the system}} denies certain {{combinations}} of rights; for instance, a program {{would not be}} granted both the right to access the camera and to access the internet. Anybody can write and distribute programs that request allowable right combinations. Programs that require normally unapproved right combinations need a <b>cryptographic</b> <b>signature</b> by some authority. The laptop's user can use the built-in security panel to grant additional rights to any application.|$|E
50|$|More recently, {{an effort}} to replace CPAN.pm with {{something}} cleaner and more modern {{has resulted in the}} CPANPLUS (or CPAN++) set of modules. CPANPLUS separates the back-end work of downloading, compiling, and installing modules from the interactive shell used to issue commands. It also supports several advanced features, such as <b>cryptographic</b> <b>signature</b> checking and test result reporting. Finally, CPANPLUS can uninstall a distribution. CPANPLUS was added to the Perl core in version 5.10.0.|$|E
5000|$|In cryptography, a key {{signature}} {{is the result}} of a third-party applying a <b>cryptographic</b> <b>signature</b> to a representation of a cryptographic key. This is usually done as a form of assurance or verification: If [...] "Alice" [...] has signed [...] "Bob's" [...] key, it can serve as an assurance to another party, say [...] "Eve", that the key actually belongs to Bob, and that Alice has personally checked and attested to this.|$|E
30|$|Notice {{that since}} the <b>cryptographic</b> <b>signatures</b> should be {{impossible}} to forge for efficient adversaries, only the entity {{in possession of a}} cryptographic signing key, or a very strong adversary with huge computational power, should be able to craft valid signatures. Thus, a forged signature is an indication of a very strong adversary, such as a government, or an indication that the zone, which provided the spoofed record with a valid signature, may be malicious or subverted. In what follows, we consider how to analyse attacks or detect breaches, performed by strong adversaries, a posteriori.|$|R
30|$|To {{maintain}} reputation {{we provide}} a method of verifying post authenticity {{with the use of}} <b>cryptographic</b> <b>signatures.</b> Members of the public can verify that a post came from a group using a companion browser. Posts that are modified are no longer verified, and accounts that are seized or hacked are unable to post verifiable posts. If a group is ever compromised administrators can reset membership and invalidate past posts to signal to readers {{that there is a problem}} and they should re-evaluate the truthfulness of current posts. In this manner groups can build reputation, and signal if that reputation might be compromised.|$|R
30|$|Blockchain, {{regarded}} as a powerful weapon to settle privacy and reliability concerns {{in the era of}} IoT [54, 55], can be employed to automate and record the communications between MGMCs in a cyber-secure manner. In principle, blockchain is a type of secure chronological database technology that maintains a continuously growing list of data records (i.e., blocks) secured by <b>cryptographic</b> <b>signatures</b> [56]. The database {{in the form of a}} blockchain is guaranteed to be verifiable, auditable, and immutable. In fact, blockchain technologies have already proven their merits in trustless peer-to-peer financial services that rely on Bitcoin [57] or other cryptocurrencies created with similar mechanisms.|$|R
50|$|Kernel modules can {{optionally}} have a <b>cryptographic</b> <b>signature</b> ELF section {{which is}} verified on load {{depending on the}} Verified Boot policy settings. The kernel can enforce that modules are cryptographically signed {{by a set of}} trusted certificates; the list of trusted certificates is held outside of the OS in the ILOM on some SPARC based platforms. Userspace initiated kernel module loading is only possible from the Trusted Path when the system is running with the Immutable Global Zone feature enabled.|$|E
5000|$|Passive Authentication (PA). In 2006 Lukas Grunwald {{demonstrated}} {{that it is}} trivial to copy passport data from a passport chip into a standard ISO/IEC 14443 smartcard using a standard contactless card interface and a simple file transfer tool. Grunwald used a passport that did not use Active Authentication (anti-cloning) and did not change the data held on the copied chip, thus keeping its <b>cryptographic</b> <b>signature</b> valid. In 2008 Jeroen van Beek {{demonstrated that}} not all passport inspection systems check the <b>cryptographic</b> <b>signature</b> of a passport chip. For his demonstration Van Beek altered chip information and signed it using his own document signing key of a non-existing country. This can only be detected by checking the country signing keys {{that are used to}} sign the document signing keys. To check country signing keys the ICAO PKD can be used. Only 5 out of 60+ countries are using this central database. Van Beek did not update the original passport chip: instead an ePassport emulator was used. Also in 2008, The Hacker's Choice implemented all attacks and published code to verify the results. The release included a video clip that demonstrated problems by using a forged Elvis Presley passport that is recognized as a valid US passport.|$|E
50|$|Linux {{distributions}} {{rely heavily}} on package management systems for distributing software. In this scheme, a package is an archive file containing a manifest file. The primary purpose is to enumerate the files which {{are included in the}} distribution, either for processing by various packaging tools or for human consumption. Manifests may contain additional information; for example, in JAR (a package format for delivering software written in Java programming language), they can specify a version number and an entry point for execution. The manifest may optionally contain a cryptographic hash or checksum of each file. By creating a <b>cryptographic</b> <b>signature</b> for such a manifest file, the entire contents of the distribution package can be validated for authenticity and integrity, as altering any of the files will invalidate the checksums in the manifest file.|$|E
40|$|Despite {{cryptographic}} {{breakthroughs in}} the area of digital cash and the rapid advance of information technology, physical cash remains the dominant currency: it is easy to use and its exchanges are largely independent of computing devices. However, physical cash is vulnerable to rising threats - such as large scale, government-mandated forgeries - that digital cash may protect against more effectively. We study mechanisms to combine physical cash with digital cash to remove their respective shortcomings and obtain their combined advantages. We discuss initial mechanisms, ranging from <b>cryptographic</b> <b>signatures</b> embedded in 2 -D barcodes, to physical one-way functions coupled with online verification systems, and examine their cost and benefit trade-offs...|$|R
40|$|Due to {{broadcast}} transmission and unattended nature, and hostile environments {{a variety of}} denial of service (DoS) attacks are possible in both Wireless Sensor Networks (WSNs) and ad-hoc networks. We have developed a formal framework which can automatically verify different wireless routing protocols against DoS attacks exhaustively. In this paper we apply our formal framework against a secure ad-hoc routing protocol ARAN, which employs public <b>cryptographic</b> <b>signatures</b> as a defense against attacks. Our framework confirmed that ARAN is still vulnerable to different DoS attacks such as black hole, INA and wormhole. The framework also traces back the reason(s) as to why and how the attacks were successful...|$|R
50|$|The {{success of}} digital {{signatures}} {{as a replacement}} for paper based signatures has lagged behind expectations. On the other hand, many unexpected uses of digital signatures were discovered by recent cryptographic research. A related insight that can be learned from digital signatures is that the cryptographic mechanism need not be confused with overall process that turns a digital signature into something that has {{more or less the same}} properties as a paper based signature. Electronic signatures such as paper signatures sent by fax may have legal meaning, while secure <b>cryptographic</b> <b>signatures</b> may serve completely different purposes. We need to distinguish the algorithm from the process.|$|R
