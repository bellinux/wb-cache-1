141|792|Public
5|$|Allographs: The 'hand' allographs (left), {{plus some}} of the fifty pairs of allographic 'hand' {{ligatures}} to which Barthel had assigned distinct <b>character</b> <b>codes.</b>|$|E
25|$|In URIs (including URLs), <b>character</b> <b>codes</b> {{are written}} as {{hexadecimal}} pairs prefixed with %: http://www.example.com/name%20with%20spaces where %20 is the space (blank) character, ASCII code point 20 in hex, 32 in decimal.|$|E
25|$|Most {{programming}} languages {{that have}} a string datatype will have some string functions although {{there may be other}} low-level ways within each language to handle strings directly. In object-oriented languages, string functions are often implemented as properties and methods of string objects. In functional and list-based languages a string is represented as a list (of <b>character</b> <b>codes),</b> therefore all list-manipulation procedures could be considered string functions. However such languages may implement a subset of explicit string-specific functions as well.|$|E
50|$|<b>Character</b> (8-bit <b>character</b> <b>code).</b>|$|R
50|$|This chained {{dead key}} {{behavior}} is toggled by the dead key flag, {{which is the}} fourth argument of the DEADTRANS function (after the base <b>character</b> <b>code,</b> the diacritic code, and the composed <b>character</b> <b>code).</b> If this flag is set to its default value zero, the composed character is inserted; if it is set to one, the composed <b>character</b> <b>code</b> is handled as another diacritic code like those due to dead key presses, and occurs typically as a second argument in other deadlist entries.|$|R
5000|$|ISO/IEC 2022 Information technology: <b>Character</b> <b>code</b> {{structure}} and extension techniques ...|$|R
25|$|Optical {{character}} recognition (OCR) {{is preferable to}} rekeying for converting existing text that is already written down but not in machine-readable format (for example, a Linotype-composed book from the 1940s). In other words, to convert the text from an image to editable text (that is, a string of <b>character</b> <b>codes),</b> a person could re-type it, or a computer could look at the image and deduce what each character is. OCR technology has already reached an impressive state (for example, Google Book Search) and promises more for the future.|$|E
25|$|A {{keyboard}} is {{the device}} {{most commonly used}} for writing via computer. Each key {{is associated with a}} standard code which the keyboard sends to the computer when it is pressed. By using a combination of alphabetic keys with modifier keys such as Ctrl, Alt, Shift and AltGr, various <b>character</b> <b>codes</b> are generated and sent to the CPU. The operating system intercepts and converts those signals to the appropriate characters based on the keyboard layout and input method, and then delivers those converted codes and characters to the running application software, which in turn looks up the appropriate glyph in the currently used font file, and requests the operating system to draw these on the screen.|$|E
25|$|Within text strings, {{characters}} are shown using <b>character</b> <b>codes</b> (integers) that map to glyphs {{in the current}} font using an encoding. There {{are a number of}} predefined encodings, including WinAnsi, MacRoman, and a large number of encodings for East Asian languages, and a font can have its own built-in encoding. (Although the WinAnsi and MacRoman encodings are derived from the historical properties of the Windows and Macintosh operating systems, fonts using these encodings work equally well on any platform.) PDF can specify a predefined encoding to use, the font's built-in encoding or provide a lookup table of differences to a predefined or built-in encoding (not recommended with TrueType fonts). The encoding mechanisms in PDF were designed for Type 1 fonts, and the rules for applying them to TrueType fonts are complex.|$|E
40|$|A {{critical}} {{study of}} the morphological data sets used for the most recent analyses of metazoan cladistics exposes a rather cavalier attitude towards <b>character</b> <b>coding.</b> Binary absence/presence coding is ubiquitous, but without any explicit justification. This uncompromising application of Boolean logic in <b>character</b> <b>coding</b> is remarkable since several recent investigations have nominated absence/presence coding as the most problematic coding method available for standard cladistic analysis. Moreover, the prevalence of unspecified “absence” character states in the published data sets introduces a discrepancy between the theoretical foundations of phylogenetic parsimony and current practices in metazoan cladistics. Because phylogenetic parsimony assumes transformation of character states, its effective operation breaks down when not all character states are carefully delimited. Examples of resulting meaningless character state transformations are discussed in two categories: 1) when unspecified “absence” states are plesiomorphic; and 2) when unspecified “absence” states are apomorphic (character reversals). To facilitate future progress in metazoan cladistics, the mandatory link between comparative morphology and <b>character</b> <b>coding</b> needs to be reestablished through a more explicit study of morphological variation prior to <b>character</b> <b>coding,</b> and through a more explicitly experimental approach to <b>character</b> <b>coding...</b>|$|R
5000|$|First position: One {{alphabetic}} <b>character</b> <b>code</b> for Care Component (A to U); ...|$|R
5000|$|... Note: These {{characters}} {{vary depending}} on the local <b>character</b> <b>code</b> page setting.|$|R
2500|$|For quoting mensural {{notation}} {{symbols in}} inline text, {{a number of}} characters {{have been included in}} the character encoding standard Unicode, in the [...] "musical symbols" [...] block. They are located at <b>character</b> <b>codes</b> U+1D1B6 through U+1D1CE.|$|E
2500|$|Strings: A {{sequence}} of characters surrounded by quotes {{is equivalent to}} a list of (numeric) <b>character</b> <b>codes,</b> generally in the local character encoding, or Unicode if the system supports Unicode. For example, [...] "to be, or not to be".|$|E
2500|$|From the {{perspective}} of the transmitter, the sound amounts to little more than somebody whistling into the microphone. However, the software rapidly shifts the phase of the audio signal between two states (hence the name [...] "phase-shift keying"), forming the <b>character</b> <b>codes.</b> These phase shifts serve the same function as the two tones used in traditional RTTY and similar systems.|$|E
5000|$|ECMA-35 - <b>Character</b> <b>Code</b> Structure and Extension Techniques, also {{approved}} as ISO/IEC 2022 ...|$|R
5000|$|JIS X 0202 “Information {{technology}} - <b>Character</b> <b>code</b> {{structure and}} extension techniques” (ISO/IEC 2022) ...|$|R
5000|$|FCHR - fills {{an area of}} {{the text}} screen with a given <b>character</b> <b>code</b> ...|$|R
2500|$|... nix (Unix and related) shells, AT {{assembly}} language and likewise the C programming language, {{which was designed}} for Unix (and the syntactic descendants of C – including C++, C#, D, Java, JavaScript, Python and Windows PowerShell) use the prefix 0x for numeric constants represented in hex: 0x5A3. Character and string constants may express <b>character</b> <b>codes</b> in hexadecimal with the prefix \x followed by two hex digits: '\x1B' represents the Esc control character; [...] "\x1B ...|$|E
2500|$|Speech {{recognition}} converts speech into machine-readable text (that is, {{a string}} of <b>character</b> <b>codes).</b> This technology has also reached an advanced state and is implemented in various software products. For certain uses (e.g., transcription of medical or legal dictation; journalism; writing essays or novels) speech recognition is starting to replace the keyboard. [...] However, the lack of privacy when issuing voice commands and dictation makes this kind of input unsuitable for many environments.|$|E
2500|$|Like EIA-608 bits are {{transmitted}} {{in the order}} of LSB to MSB with odd parity coding of 7-bit <b>character</b> <b>codes.</b> [...] However unlike EIA-608, the digital DVB version is transmitted the same way. [...] For single bit error recovery during transmission, the packet address (page row and magazine numbers) and header bytes [...] (page number, subtitle flag, etc.) use hamming code 8/4 with extended packets (header extensions) using hamming 24/18, which basically doubles the bits used.|$|E
5000|$|Some {{character}} sets provide a separate newline <b>character</b> <b>code.</b> EBCDIC, for example, provides an NL <b>character</b> <b>code</b> {{in addition to}} the CR and LF codes. Unicode, in addition to providing the ASCII CR and LF control codes, also provides a [...] "next line" [...] (NEL) control code, as well as control codes for [...] "line separator" [...] and [...] "paragraph separator" [...] markers.|$|R
50|$|Alphanumeric {{characters}} are variable length and can use any <b>character</b> <b>code</b> of 8 bits or less.|$|R
5000|$|Internet jidai no moji <b>code</b> (インターネット時代の文字コード) (<b>Character</b> <b>Code</b> in the Internet era) (author & editor) (2002/01) ...|$|R
2500|$|Some domain names {{may be used}} {{to achieve}} {{spoofing}} effects. For example, [...] and paypa1.com are different names, yet users may be unable to distinguish them in a graphical user interface depending on the user's chosen typeface. In many fonts the letter l and the numeral 1 look very similar or even identical. This problem is acute in systems that support internationalized domain names, since many <b>character</b> <b>codes</b> in ISO 10646 may appear identical on typical computer screens. This vulnerability is occasionally exploited in phishing.|$|E
2500|$|The Varicode {{is a kind}} of Fibonacci code {{where the}} {{boundaries}} between <b>character</b> <b>codes</b> are marked by two or more consecutive zeros. Like all Fibonacci codes, since no character code contains more than one consecutive zero, the software can easily identify the spaces between characters, regardless of the length of the character. The idle sequence, sent when an operator is not typing, is a continuous sequence of phase-shifts, which do not print on the screen. Martinez arranged the character alphabet so that, as in Morse code, the more frequently occurring characters have the shortest encodings, while rarer characters use longer encodings. [...] He named this encoding scheme [...] "varicode".|$|E
5000|$|ISO/IEC 2375 -- Procedure for {{registration}} of escape sequences and coded character sets, which governs registrations for ISO/IEC 646 (7-bit <b>character</b> <b>codes)</b> and ISO/IEC 2022 (extended <b>character</b> <b>codes)</b> ...|$|E
5000|$|Acorn {{operating}} {{systems for the}} Atom, BBC Micro, Archimedes and later RISC OS machines use the vertical bar character | {{in place of the}} caret. e.g. |M (pronounced [...] "control M") is the carriage return character, ASCII 13. || is the vertical bar <b>character</b> <b>code</b> 124, |? is character 127 as above and |! adds 128 to the code of the following character, so |!|? is <b>character</b> <b>code</b> 128+127 = 255.|$|R
50|$|A six-bit <b>character</b> <b>code</b> is a <b>character</b> {{encoding}} {{designed for}} use on computers with word lengths a multiple of 6. Six bits can only encode 64 distinct <b>characters,</b> so these <b>codes</b> generally include only the upper-case letters, the numerals, some punctuation characters, and sometimes control <b>characters.</b> Such <b>codes</b> with additional parity bit were a natural way of storing data on 7-track magnetic tape.|$|R
5000|$|SHY <b>characters</b> in <b>coded</b> <b>characters</b> sets, roughly in chronological order: ...|$|R
50|$|The PDP-8 was {{designed}} {{in part to}} handle contemporary telecommunications and text. Six-bit <b>character</b> <b>codes</b> were in widespread use at the time, and the PDP-8's twelve-bit words could efficiently store two such characters. In addition, a six-bit teleprinter code called the teletypesetting or TTS code was in widespread use by the news wire services, and an early application for the PDP-8 was typesetting using this code. Later 7-bit ASCII and 8-bit UTF-8 <b>character</b> <b>codes</b> were developed in part {{as a response to}} the limitations of five- and six-bit <b>character</b> <b>codes.</b>|$|E
5000|$|Since CP 037 {{contains}} {{all of the}} standard Latin-1 characters, {{it is possible to}} translate the <b>character</b> <b>codes</b> from the CP 037 charset to ISO 8859-1 <b>character</b> <b>codes,</b> so that translation back to the CP 037 charset is an exact value-preserving round-trip conversion. Likewise, half of the control <b>character</b> <b>codes</b> can be translated into their exact ASCII equivalents. If the remaining EBCDIC-only control characters are translated (arbitrarily) into the remaining unused ASCII codes points (hex 80 to 9F) as well, the resulting translation covers all of the 256 character code points. Such a translation table is shown below: ...|$|E
5000|$|... #Subtitle level 3: IBM 80-column {{punched card}} format and <b>character</b> <b>codes</b> ...|$|E
5000|$|A {{vertical}} tab (VT) also exists and has ASCII decimal <b>character</b> <b>code</b> 11 ( [...] or [...] ), escape character [...]|$|R
50|$|From {{early in}} its development, ASCII was {{intended}} to be just one of several national variants of an international <b>character</b> <b>code</b> standard.|$|R
50|$|IBM Input/output devices {{utilizing}} the Bisync link protocol use the SYN <b>character</b> <b>code</b> {{to signal the}} beginning of each data frame transmitted.|$|R
