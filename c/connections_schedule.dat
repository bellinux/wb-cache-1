1|122|Public
40|$|The article {{discusses}} {{the issue of}} the development of the International Airport in Wroclaw in 2005 - 2008. The research scope includes both the regular <b>connections</b> <b>schedule</b> and the tourist charter flights. General development of the whole passenger transport in Poland has been shortly analyzed as well. A considerable part of the article is devoted to the issue of slowly growing domestic flights market. The second section of the article is focused around the issues of development perspectives and the nearest future of Wroclaw’s airport investment. Data concerning nationalities of foreign air passengers travelling to Wroclaw has been presented. The summary of the article discusses positive evaluation of dynamic development and further perspectives of Wroclaw’s Airport...|$|E
5000|$|Mission:The Signal Company {{establishes}} all <b>connections</b> <b>scheduled</b> for {{the needs}} of the 1st Mechanized Infantry Brigade under the Signal Plan [...] "BRAN".|$|R
40|$|This paper {{presents}} {{an investigation into}} the origin and breakdown of server-induced latency with the goal of understanding how latency-optimization techniques can be made more effective. Using two servers with different architectures, we analyze the latency behavior under various loads and find that a phenomenon we call service inversion is responsible for much of the latency increase under load. We trace the roots of this problem to negative interactions between the server application and the locking and blocking mechanisms in the kernel. Using a modified server that avoids these problems, we demonstrate a qualitatively different change in the latency profiles, generating more than an order of magnitude reduction in latency. We also find that locking and blocking in the operating system artificially increases the burstiness of the load presented to the application. By eliminating such delays, not only do we observe a much smoother level of activity at the server, but we also eliminate most of the motivation for <b>connection</b> <b>scheduling.</b> In effect, we show that <b>connection</b> <b>scheduling</b> opportunities at the application level appear to be largely artifact of the server implementation, rather than a broadly-applicable technique. Our measurements on the modified server show much lower service inversion, suggesting that when the coarse-grained blocking is removed, the existing scheduling inside the networking stack adequately performs fine-grained <b>connection</b> <b>scheduling.</b> ...|$|R
50|$|The company’s {{primary product}} is AirCare, which pays air {{travelers}} when common mishaps occur, including flight delays, missed <b>connections</b> (when <b>scheduled</b> <b>connection</b> times are 52 minutes or longer), and lost or delayed baggage (unless on an itinerary with connection times of 51 minutes or less).|$|R
50|$|Palm Tran Connection is {{operated}} by private transport companies and oversight is provided through Palm Tran. They travel to every destination in Palm Beach County - from Jupiter to Boca Raton and from Palm Beach to South Bay. Palm Tran <b>Connection</b> <b>schedules</b> all trips, prepares vehicle manifests, handles customer concerns & commendations, determines eligibility, and monitors {{the performance of}} the Transportation Providers.|$|R
40|$|We analyze a {{distributed}} system where n nodes called boxes store a large set of videos and collaborate to serve simultaneously n videos or less. We explore under which conditions {{such a system}} can be scalable while serving any sequence of demands. We model this problem {{through a combination of}} two algorithms: a video allocation algorithm and a <b>connection</b> <b>scheduling</b> algorithm. The latter plays against an adversary that incrementally proposes video requests...|$|R
40|$|A Web server {{running a}} popular Web site might {{simultaneously}} service hundreds or {{even thousands of}} requests. Many traditional Web servers let the operating system decide the connection scheduling—that is, {{the order in which}} requests are serviced—and, in fact, most simply do so on a first-come, first-served basis. In many cases, however, it can be extremely useful, if not downright necessary, to have application-level control over <b>scheduling</b> policies. Application-level <b>connection</b> <b>scheduling</b> lets server administrators specify the scheduling rules they want to impose, rather than relying on programmers to do it. Two obvious cases where this might be useful are: • When different users have different priorities. To determine request priority for different user groups, you can use business rules to determine processing order. This lets you provide differentiated quality of service levels to different clients. • When Web server traffic is bursty. For example, the average peak-hour traffic is typically several times the average daily traffic. Rather than overprovision the server, you can turn to differentiated QoS as a more judicious approach to resource use under high-load conditions. Application-level <b>connection</b> <b>scheduling</b> also offers another benefit that is rathe...|$|R
25|$|Gloucestershire Airport is {{approximately}} 25 {{miles away and}} provides General Aviation <b>connections</b> and <b>scheduled</b> services with Citywing to Jersey, the Isle of Man and Belfast.|$|R
50|$|Establishment and {{maintenance}} of all <b>scheduled</b> <b>connections.</b>|$|R
30|$|In {{this method}} RTPS <b>connections</b> are <b>scheduled</b> using {{proposed}} algorithm {{as described in}} method 1. nRTPS connections shall be allocated bandwidth based on Weighted Round Robin (WRR) instead of proposed algorithm.|$|R
40|$|Abstract. The core {{technology}} of load balancing {{is the task}} scheduling. Different tasks have different resource occupation rate on the server node and influence the current server load also different. This paper presents a dynamic load balancing algorithm and we design some experimental environment. We do some simulation experiments based on some reasonable assumptions and actual state of network, to evaluate our dynamic load balancing algorithm. The experimental data shows that compared with the least weighted <b>connection</b> <b>scheduling</b> algorithm, the algorithm of this paper can make full use of machine resources. The system data retrieval efficiency is also improved...|$|R
50|$|In November 2015, {{travel agency}} We Travel {{announced}} that they will open up a new direct flight connection between Tampere and Zadar, Croatia. The new seasonal <b>connection</b> is <b>scheduled</b> to open in May 2016.|$|R
50|$|At Tarigaun, {{all-weather}} Dang Airport has <b>scheduled</b> <b>connections</b> {{to other}} cities in Nepal.|$|R
5000|$|... #Caption: Labeling of the workpiece, <b>connection</b> to work <b>schedule</b> program fetch per barcode ...|$|R
30|$|The {{paper of}} Lu et al. [13] {{is the most}} {{important}} work upon which we have based our investigation. In this paper, the authors presented the design and implementation of an adaptive Web server architecture to provide relative and absolute connection delay guarantees for different service classes. Their first contribution is an adaptive architecture based on feedback control loops that enforce desired connection delays via dynamic <b>connection</b> <b>scheduling</b> and process reallocation. The second contribution is the use of control theoretic techniques (PI controllers based on the Root Locus method) to model and design the feedback loops with desired dynamic performance. Their adaptive architecture was implemented by modifying an Apache server.|$|R
50|$|Monte Isola can {{be reached}} through a network of ferry <b>connection</b> with regular <b>schedules.</b>|$|R
50|$|Worcester's nearest major {{airport is}} Birmingham Airport which is {{accessible}} by road and rail.Gloucestershire Airport is approximately 25 {{miles away and}} provides General Aviation <b>connections</b> and <b>scheduled</b> services with Citywing to Jersey, the Isle of Man and Belfast.|$|R
50|$|Regional {{bus line}} R10 {{provides}} <b>scheduled</b> <b>connections</b> to Saarbrücken city center including Saarbrücken main station.|$|R
50|$|Rovinj/Rovigno {{is served}} by the Kanfanar railway station (10 miles), which connects the region to Rijeka/Fiume. However, {{travelling}} by bus is preferred to travelling by train due to the limited <b>connections</b> and <b>schedules.</b> The main bus station {{is located at the}} south-east end of Carrera Street.|$|R
40|$|Current Internet {{transport}} protocols make end-to-end {{measurements and}} maintain per-connection state {{to regulate the}} use of shared network resources. When two or more such connections share a common endpoint, {{there is an opportunity}} to correlate the end-to-end measurements made by these protocols to better diagnose and control the use of shared resources. We develop packet probing techniques to determine whether a pair of connections experience shared congestion. Correct, ecient diagnoses could enable new techniques for aggregate congestion control, QoS admission control, <b>connection</b> <b>scheduling</b> and mirror site selection. Our extensive simulation results demonstrate that the conditional (Bayesian) probing approach we employ provides superior accuracy, converges faster, and tolerates a wider range of network conditions than recently proposed memoryless (Markovian) probing approaches for addressing this opportunity. Keywords: End-to-end measurement; Packet-pair probing; Shared losses; TCP/I [...] ...|$|R
50|$|Sheridan {{is served}} by Sheridan County Airport, located {{southwest}} of town. Bighorn Airways offers airplane and helicopter air charter service, {{as well as an}} aircraft repair and installation center. Key Lime Air flying as the Denver Air <b>Connection</b> operates <b>scheduled</b> passenger service with Fairchild Dornier 328JET regional jets nonstop to Denver, Colorado.|$|R
40|$|While all [...] optical {{networks}} offer {{large bandwidth}} for transferring data, the control mechanisms to dynamically establish all [...] optical paths incur large overhead. In this paper, we consider adapting all [...] optical multiplexed networks in multiprocessor or multicomputer environment by using compiled communication {{as an alternative}} to dynamic network control. Compiled communication eliminates the runtime overhead by managing network resources statically. Thus, it can employ complex off [...] line algorithms to improve resource utilization. We studied several off [...] line <b>connection</b> <b>scheduling</b> algorithms for minimizing the multiplexing degree required to satisfy communication requests. The performance of compiled communication is evaluated and compared with that of dynamically controlled communication for static communications in a number of application programs. Our results show that compiled communication out [...] performs dynamic communication to a large degree. Since most of the communication patter [...] ...|$|R
5000|$|At {{the time}} of ATA's {{grounding}} of Chicago Express on March 28, 2005, Chicago Express/ATA <b>Connection</b> had operated <b>scheduled</b> service to 17 destinations throughout the Midwest: ...|$|R
50|$|The route {{connecting}} Macau's Outer Harbour Ferry Terminal and Tuen Mun Ferry Pier {{operated by}} Hong Kong North West Express Ltd. was launched on 15 April 2011. Four <b>connections</b> are <b>scheduled</b> daily and each ferry can accommodate up to 278 passengers. The Maritime Administration of Macau has granted a 10-year ferry operation licence to North West Express.|$|R
40|$|One of {{the most}} {{important}} problems in the efficient use of parallel systems is to distribute the workload evenly among the servers. An instance of this problem is the problem of independent allocations where the tasks can be executed independently. This paper presents an overview on some results obtained by several authors for the independent allocation problem using an approach of Azar, Broder, Karlin, and Upfal. The algorithms presented here apply to several problems, including Load-Balancing in distributed computing, choosing Internet <b>connections,</b> <b>scheduling</b> requests on Video on Demand Servers, and Hashing. The allocation problem is known to be NP-Complete. Our focus in this paper is on randomized algorithm obtaining feasible solutions very fast; all algorithms presented have sub-logarithmic running time. Most algorithms show a tradeoff between time used for communication and quality of solution. Additionally we present lower bounds for the allocation problem. The lower bounds show [...] ...|$|R
40|$|We {{investigate}} {{the origins of}} server-induced latency {{to understand how to}} improve latency optimization techniques. Using the Flash Web server [4], we analyze latency behavior under various loads. Despite latency profiles that suggest standard queuing delays, we find that most latency actually originates from negative interactions between the application and the locking and blocking mechanisms in the kernel. Modifying the server and kernel to avoid these problems yields both qualitative and quantitative changes in the latency profiles – latency drops by more than an order of magnitude, and the effective service discipline also improves. We find our modifications also mitigate service burstiness in the application, reducing the event queue lengths dramatically and eliminating any benefit from application-level <b>connection</b> <b>scheduling.</b> We identify one remaining source of unfairness, related to competition in the networking stack. We show that adjusting the TCP congestion window size addresses this problem, reducing latency by an additional factor of three...|$|R
40|$|Most well-managed {{web servers}} perform well {{most of the}} time. Occasionally, however, every popular web server {{experiences}} transient overload. An overloaded web server typically displays signs of its affliction within a few seconds. Work enters the web server at a greater rate than the web server can complete it, causing the number of connections at the server to build up. This implies large delays for clients accessing the server. This paper provides a systematic performance study of exactly {{what happens when a}} web server is run under transient overload, both {{from the perspective of the}} server and from the perspective of the client. Second, this paper proposes and evaluates a particular kernel-level solution for improving the performance of web servers under overload. The solution is based on SRPT <b>connection</b> <b>scheduling.</b> We show that SRPT-based scheduling improves overload performance across a variety of client and server-oriented metrics. Keywords: Web servers, overload, transient behavior, connection-scheduling, HTTP requests, priority, M/G/ 1, shortest processing remaining time, starvation...|$|R
40|$|In {{queueing}} theory, it {{has been}} {{known for a long time}} that the scheduling policy used in a system greatly impacts user-perceived performance. For example, {{it has been}} proven in the 1960 ’s that size-based scheduling policies that give priority to short jobs are optimal with respect to mean response time. Yet, virtually no systems today implement these policies. One reason is that real systems are significantly more complex than a theoretical M/M/ 1 or M/G/ 1 queue and it is not obvious how to implement some of these policies in practice. Another reason is that there is a fear that the big jobs will ”starve”, or be treated unfairly as compared to Processor-Sharing (PS). In this article we show, using two important real world applications, that size-based scheduling can be used in practice to greatly improve mean response times in real systems, without causing unfairness or starvation. The two applications we consider are <b>connection</b> <b>scheduling</b> in web servers and packet scheduling in network routers. 1...|$|R
40|$|The {{goal of this}} {{research}} is to develop a good technique for creating robust railway timetables. A good timetable in this case, must provide a good service for the passengers. In order to obtain a good service, a waiting cost function is constructed and minimised. This cost function weighs the different types of waiting and late arrivals by using some value of time measurement. The technique is developed for {{a small part of the}} Belgian Railway Network. A first step assures that all the important <b>connections</b> are <b>scheduled</b> well as far as possible. A well <b>scheduled</b> <b>connection</b> ensures that changeover passengers do not have to wait too long before leaving on the connecting train. The disadvantage of well <b>scheduled</b> <b>connections</b> is that any late arrival of a train may cause a missed connection. For this reason, ideal buffer times are calculated for the connections. Where necessary, these buffers will safeguard the connection if the arriving train is a little late. These buffer times are based on the distribution of the delays of the arriving train and on the weighing of the different types of waiting. Different types of waiting, by different types of passengers are weighed to determine the ideal buffer time. With a larger buffer for instance, passengers staying in a certain train will have to wait longer and passengers changing over will have a smaller chance of missing their connection. In a third step, a new timetable is built by linear programming. This timetable has well <b>scheduled</b> <b>connections</b> and includes, where possible, the ideal buffer times. The objective function of the linear program is a waiting cost function. Waiting of trains in a station and deviations from the ideal buffer times are important factors in this cost function. The result is a timetable with well <b>scheduled</b> <b>connections</b> and a waiting cost that is 40 percent lower than with the current timetable. This technique is also very promising for developing better timetables for very large railway networks since the LP model can be efficiently solved in an acceptable computational effort. status: publishe...|$|R
50|$|Villafranca Air Base was a {{military}} airport during the First World War. It became open to civil traffic in the early 1910s with daily <b>scheduled</b> <b>connections</b> to Rome and charter flights to destinations in northern Europe.|$|R
25|$|Regularly {{scheduled}} charters provide direct {{service to}} Andros Town from Miami and Fort Lauderdale, Florida, mostly offered by Gulfstream International Airlines. Continental <b>Connection</b> offers seasonal <b>scheduled</b> flights from Fort Lauderdale, operated by Gulfstream for Continental under contract.|$|R
40|$|This paper {{presents}} the design, implementation, {{and evaluation of}} an adaptive architecture to provide relative delay guarantees for different service classes on web servers under H 7 TP 1. 1. The first contribution {{of this paper is}} the architecture based on a feedback control loop that enforces desired relative delays among classes via dynamic <b>connection</b> <b>scheduling</b> arid process reallocation. The second contribution is our use of feedback control theory to design the feedback loop with proven performance guarantees. In contrast with ad hoc approaches that often rely on laborious tuning and design iterations, our control theory ap-proach enables us to systematically design an adaptive web server with established analytical methods. The design methodology includes using system identifica-tion to establish a dynamic model, and using the Root Locus method to design a feedback controller to satisfy pe$orniunce specifcutions of a web server. The adup-tive architecture has been implemented by niodlfiing an Apache web server. Experimental results demonstrate that our adaptive server achieves robust relative delay guarantees even when workload varies significantly. Properties of our adaptive web server include guaran-teed stability, arid satisfuctory efficiency and accuracy in achieving the desired relative delay differentiation. 1...|$|R
40|$|Current Internet {{transport}} protocols make end-to-end {{measurements and}} maintain per-connection state {{to regulate the}} use of shared network resources. When a number of such connections share a common endpoint, that endpoint {{has the opportunity to}} correlate these end-to-end measurements to better diagnose and control the use of shared resources. A valuable characterization of such shared resources is the "loss topology". From the perspective of a server with concurrent connections to multiple clients, the loss topology is a logical tree rooted at the server in which edges represent lossy paths between a pair of internal network nodes. We develop an end-to-end unicast packet probing technique and an associated analytical framework to: (1) infer loss topologies, (2) identify loss rates of links in an existing loss topology, and (3) augment a topology to incorporate the arrival of a new connection. Correct, efficient inference of loss topology information enables new techniques for aggregate congestion control, QoS admission control, <b>connection</b> <b>scheduling</b> and mirror site selection. Our extensive simulation results demonstrate that our approach is robust in terms of its accuracy and convergence over a wide range of network conditions. National Science Foundation (CCR- 9706685, ANIR- 9986397...|$|R
40|$|Abstract. The Aircraft {{scheduling}} problem is researched in this paper, the equilibrium model of aircraft {{scheduling problem}} is proposed and a sorting algorithm is constructed. By introducing {{the concept of}} flight <b>connections,</b> aircraft <b>scheduling</b> problem is transformed into the distribution of flight connections, the mathematical model {{of the problem is}} established, to solve the model, a sorting algorithm is constructed. We use the airline's flight data to test the algorithm. The simulation results show that the model and the algorithm are feasible...|$|R
50|$|The {{building}} {{was built in}} three buildings that were joined to become {{one and a half}} buildings on 30 May 2007. In order not to lock in structural differentials this <b>connection</b> was <b>scheduled</b> in the early morning when the steel in the two towers cooled to the same temperature. The CCTV {{building was}} part of a media park intended to form a landscape of public entertainment, outdoor filming areas, and production studios {{as an extension of the}} central green axis of the CBD.|$|R
40|$|Abstract—This paper {{presents}} a new resource allocation algorithm in downlink Mobile WiMAX Release 2 networks. Our study considers {{three types of}} service including a real-time Polling Service (rtPS), a non-real-time Polling Service (nrtPS) and a Best Effort (BE) service. Each service type has its own QoS requirements (eg. radio bandwidth, packet loss ratio, latency delay, etc.) each type of them is stored in a global buffer {{in order to reduce}} time processing. Our proposed scheme includes three steps which are: radio resource reservation, arriving <b>connections</b> <b>scheduling</b> and adaptive resource allocation. A fourth step is introduced when a threshold for rtPS-class is defined based on the overall system capacity. Our scheduler gives the priority to rtPS service to ensure an adequate resource allocation without discriminating against nrtPS and BE services performances. The behaviour of our adaptive resource allocation algorithm is compared to other well-known methods such as MAX-CINR [1] and MPF [2]. Numerical results prove that our proposed scheme due to its adaptive and scheduling approach deals better with total system capacity, rtPS packet loss ratio and nrtPS and BE packet satisfaction ratio than MAX-CINR and MPF methods. Moreover, thresholding approach deals better with rtPS QoS requirements without disadvantaging other services performances...|$|R
