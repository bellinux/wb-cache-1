44|191|Public
50|$|With an {{embedded}} {{switch and}} full-duplex, it has dual link routes and <b>communication</b> <b>fault</b> tolerance, enabling fast recovery capabilities.|$|E
30|$|Communication {{interrupt}} condition. As mentioned, {{the design}} of this control system does not rely too much on communication system. If there is a <b>communication</b> <b>fault</b> between the main station and the coordination control layer, the access control layer will transfer the control strategy function to the coordination control layer, which leads to two-layer control. When there is a <b>communication</b> <b>fault</b> between the coordination control layer and some device layer DG, the device layer can still make DG control strategies {{on the basis of}} the measured values and the quantity of state.|$|E
40|$|Sets {{ultimate}} {{upper bound}} on channel capacity. Bound is achievable given unlimited computational power. Closing the gap. 50 years in the making. Iterative soft decoding was the turning point. Last decade, tradeoff between error probability and decoding complexity. Quantum? Acceptable delays for quantum <b>communication.</b> <b>Fault</b> tolerance requires fast decoding (ns-µs). Don’t know capacity of simple channels...|$|E
40|$|We {{present the}} {{extension}} of a distributed adaptive fault-detection algorithm applied in networked systems. In previous work, we developed an approach to probabilistic detection of <b>communication</b> <b>faults</b> based on measured probe response delays and packet drops. The algorithm is here extended to detect network latency shifts and adapt to long-term changes of the expected probe response delay. Initial performance tests indicate that detected latency shifts and <b>communication</b> <b>faults</b> successfully can be localised to links and nodes. Further, the amount of network traffic produced by the algorithm scales linearly with the network size...|$|R
40|$|An {{overview}} {{is given}} {{on the evolution}} and finite state machine implementation of a deterministic approach {{to the problem of}} management of <b>communication</b> <b>faults</b> and aircraft loss inside a formation in autonomous flight. Theoretical development and simulation results validating the fault management methodology are discussed...|$|R
30|$|Other common problems, such as <b>communication</b> <b>faults,</b> {{could also}} have easily been {{detected}} and corrected with our method. For instance, one could have seen that one DSP was hanging in a task, waiting for a message to arrive, while its correspondent crashed or was itself hanging on a different task.|$|R
30|$|Weigang Wu et al. [18] {{proposed}} a permission-based message efficient mutual exclusion (MUTEX) algorithm for mobile ad hoc networks (MANETs). The {{proposed a}}lgorithm tolerated link or host failures, using timeout-based mechanisms {{and was able}} to handle dozes and disconnections [18] of mobile hosts. Permission based MUTEX algorithm was efficient, reliable and independent of any logical topology. The MUTEX based algorithm fails when there is a <b>communication</b> <b>fault.</b>|$|E
40|$|We {{propose a}} {{framework}} for high-performance responsive (fault-tolerant, real-time) processing in network-based distributed systems. The framework exploits the ubiquitous nature of consensus (for support of synchronization, reliable <b>communication,</b> <b>fault</b> diagnosis and load balancing {{in order to enhance}} system responsiveness), and uses weak consistency and shared objects for performance improvement and ease of programming. (orig.) SIGLEAvailable from TIB Hannover: RR 2036 (51) / FIZ - Fachinformationszzentrum Karlsruhe / TIB - Technische InformationsbibliothekDEGerman...|$|E
40|$|The Dataflow Simulation System (DFSS) at USL {{was used}} as the medium on which a {{functional}} simulaton of sIFT was produced. DFSS is written in PL/I and is supported by MULTICS. Within the simulation, all the interprocessor <b>communication,</b> <b>fault</b> simulation, system state data, and monitoring were implemented in dataflow and supported directly by DFSS. The actual processor level computation was carried out by the SIFT code in PASCAL. The interface between DFSS in PL/I and the SIFT code in PASCAL was supported under a mechanism in DFSS called a Node Realization Module (NRM) ...|$|E
30|$|Fault {{resiliency}} {{that is a}} {{major issue}} as machines expand in size and complexity. On Exascale systems with huge amount of processes, non-local communication must be prepared for a potential failure {{of one of the}} communication sides; runtimes must features failure handing mechanisms for recovering from node and <b>communication</b> <b>faults.</b>|$|R
40|$|Abstract — Industrial {{process control}} IP {{networks}} support communications between process control applications and devices. <b>Communication</b> <b>faults</b> in any stage of these control networks can cause delays or even shutdown {{of the entire}} manufacturing process. The current process of detecting and diagnosing <b>communication</b> <b>faults</b> is mostly manual, cumbersome, and inefficient. Detecting early symptoms of potential problems is very important but automated solutions do not yet exist. Our research goal is to automate the process of detecting and diagnosing the <b>communication</b> <b>faults</b> {{as well as to}} prevent problems by detecting early symptoms of potential problems. To achieve our goal, we have first investigated real-world fault cases and summarized control network failures. We have also defined network metrics and their alarm conditions to detect early symptoms for communication failures between process control servers and devices. In particular, we leverage data mining techniques to train the system to learn the rules of network faults in control networks and our testing results show that these rules are very effective. In our earlier work, we presented a design of a process control network monitoring and fault diagnosis system. In this paper, we focus on how the fault detection part of this system can be improved using data mining techniques. Index Terms—Process control network, network management, fault detection, fault diagnosis, machine learning, data mining. I...|$|R
40|$|The aim of {{this work}} {{is to examine the}} <b>communication</b> <b>faults</b> {{managers}} make in an organization, how these faults influence the personality of employees and their job performance. We present some aspects of the research results. Based on the result and identified mistakes we propose recommendations to improve communication between manager and employees...|$|R
40|$|Intelligent mobile {{agents are}} today {{accepted}} as powerful tools for data mining in a distributed environment. The use of data mining algorithms further beefs up the intelligence in software agents. Knowledge discovery and data mining algorithms {{are applied to}} discover hidden patterns and relations in complex datasets using intelligent agents. The distributed computing provides remote <b>communication,</b> <b>fault</b> tolerance, high availability and remote information access. The uses of intelligent mobile agents using data mining algorithms make distributing computing more popular and acceptable. This paper is {{about the use of}} conventional data mining algorithms through intelligent mobile agents in distributed systems...|$|E
40|$|Accurate {{information}} {{is most important}} in Wireless Sensor Networks (WSNs). Incorrect (faulty data) information makes wrong decision; it decreases the reliability in <b>communication.</b> <b>Fault</b> tolerance {{is one of the}} issues in WSNs. Proposed fault-tolerant data aggregation scheme for identifying the faulty data sent by the sensors to the cluster head, where the aggregation is performed. Identified faulty data eliminated before aggregation. It improves the data aggregation accuracy. Consequently, the transmission overhead is reduced. The proposed scheme provides better performance in discovering faulty data and nodes. The incorrect data detected and eliminated in wireless sensor networks. General terms Wireless sensor networks, Rough set theory...|$|E
40|$|An optimal {{power flow}} based control scheme is {{proposed}} {{in order to}} minimize the losses in multi-terminal HVDC systems for large offshore wind power plants. The scheme optimizes system power flows while delivering the generated wind power to the terrestrial AC grid (or grids). The proposed scheme is compared to droop control schemes in two case studies in order to illustrate the power loss reduction achieved. Dynamic simulations have been provided in order to show the dynamic behavior of both the controller and the robust operation for wind speed changes and when a <b>communication</b> <b>fault</b> occurs. Postprint (published version...|$|E
40|$|Cyber-Physical Systems (CPS) {{integrate}} discretetime computing and continuous-time physical-world entities, {{which are}} often wirelessly interlinked. The use of wireless safety critical CPS (control, healthcare etc.) requires safety guarantees despite <b>communication</b> <b>faults.</b> This paper focuses on one important set of such safety rules: Proper-Temporal-Embedding (PTE). Our solution introduces hybrid automata to formally describe and analyze CPS design patterns. We propose a novel lease based design pattern, along with closed-form configuration constraints, to guarantee PTE safety rules under arbitrary wireless <b>communication</b> <b>faults.</b> We propose a formal methodology to transform the design pattern hybrid automata into specific wireless CPS designs. This methodology can effectively isolate physical world parameters from affecting the PTE safety of the resultant specific designs. We conduct a case study on laser tracheotomy wireless CPS {{to show that the}} resulting system is safe and can withstand communication disruptions. Department of ComputingRefereed conference pape...|$|R
5000|$|DOCTOR (IntegrateD SOftware Fault InjeCTiOn EnviRonment) allows {{injection}} {{of memory and}} register faults, as well as network <b>communication</b> <b>faults.</b> It uses a combination of time-out, trap and code modification. Time-out triggers inject transient memory faults and traps inject transient emulated hardware failures, such as register corruption. Code modification is used to inject permanent faults.|$|R
40|$|A novel {{fault-tolerant}} communication topology {{management method}} for the leader–follower {{unmanned aerial vehicle}} (UAV) formation is proposed to minimize the formation communication cost while keeping the formation shape, even {{in the case of}} <b>communication</b> <b>faults</b> during the formation flight. This method is based on Edmonds’ algorithm for the minimum cost arborescence problem in graph theory. When a formation shape is given before the formation flight, this method can get the optimal initial communication topology with the minimum formation communication cost for keeping the formation shape. When some <b>communication</b> <b>faults</b> occur during the formation flight, which will cause the formation shape cannot be kept, this method can reconfigure the communication topology in time to guarantee the safety of all UAVs and recover the formation shape, and then it can reoptimize the communication topology by UAV position reconfiguration in the formation shape to minimize the formation communication cost for continuously keeping the formation shape. The effectiveness of this method is demonstrated through several simulation experiments...|$|R
40|$|We {{describe}} {{a framework for}} high-performance responsive (faulttolerant, real-time) processing in network-based distributed systems built from off-the-shelf components. The framework exploits the ubiquitous nature of consensus for support of synchronization, reliable <b>communication,</b> <b>fault</b> diagnosis and load balancing {{in order to enhance}} system responsiveness. Our environment provides the shared objects paradigm to the programmer of parallel responsive applications. Ease of programming is achieved by encapsulation of consensus protocols as well as communication and synchronization operations within a special class library’s implementation. Weak consistency protocols are employed to improve system’s performance. In addition to a description of our programming framework, this paper includes a presentation of two applications running in ou...|$|E
40|$|The paper {{introduces}} the Cama (C ontext-Aware M obile Agents) framework intended for developing large-scale mobile applications using the agent paradigm. Cama provides a powerful set of abstractions, a supporting middleware and an adaptation layer allowing developers {{to address the}} main characteristics of the mobile applications: openness, asynchronous and anonymous <b>communication,</b> <b>fault</b> tolerance, device mobility. It ensures recursive system structuring using location, scope, agent and role abstractions. Cama supports system fault tolerance through exception handling and structured agent coordination. The applicability of the framework is demonstrated using an ambient lecture scenario – {{the first part of}} an ongoing work on a series of ambient campus applications...|$|E
40|$|Abstract. Software-implemented fault {{injection}} {{is a powerful}} strategy to test fault-tolerant protocols in distributed environments. In this paper, we present ComFIRM, a <b>communication</b> <b>fault</b> injection tool we developed which minimizes the probe effect on the tested protocols. ComFIRM explores the possibility to insert code directly inside the Linux kernel in {{the lowest level of}} the protocol stack through the load of modules. The tool injects faults directly into the message exchange subsystem, allowing the definition of test scenarios from a wide fault model that can affect messages being sent and/or received. Additionally, the tool is demonstrated in an experiment which applies the fault injector to evaluate the behavior of a group membership service under communication faults. ...|$|E
40|$|We have {{described}} a detector of distributed cycles of garbage. Our cycle detector presents some interesting properties for large-scale systems: asynchrony between participating spaces, optional participation, tolerance to <b>communication</b> <b>faults</b> and space crashes, low resource requirements, {{and ease of}} implementation (no modifications to local objects, only a few to the local garbage collector). Moreover, this algorithm has already been implemented in a distributed system, and the implementation details {{can be found in}} le Fessan...|$|R
40|$|Cyber-Physical Systems (CPS) {{integrate}} discrete-Time computing and continuous-Time physical-world entities, {{which are}} often wirelessly interlinked. The use of wireless safety-critical CPS requires safety guarantees despite <b>communication</b> <b>faults.</b> This paper focuses on one important set of such safety rules: Proper-Temporal-Embedding (PTE), where distributed CPS entities must enter/leave risky states according to properly nested temporal pattern and certain duration spacing. Our solution introduces hybrid automata to formally describe and analyze CPS design patterns. We propose a novel leasing based design pattern, along with closed-form configuration constraints, to guarantee PTE safety rules under arbitrary wireless <b>communication</b> <b>faults.</b> We propose a formal procedure to transform the design pattern hybrid automata into specific wireless CPS designs. This procedure can effectively isolate physical world parameters from affecting the PTE safety of the resultant specific designs. We conduct two wireless CPS case studies, one on medicine {{and the other on}} control, to show that the resulted system is safe against communication failures. We also compare our approach with a polling based approach. Both approaches support PTE under arbitrary communication failures. The polling approach performs better under severely adverse wireless medium conditions; while ours performs better under benign or moderately adverse wireless medium conditions. Department of Computin...|$|R
40|$|Group {{communication}} {{is a powerful}} and easy-to-use abstraction for distributed applications. The Totem protocol is a popular and efficient implementation of group communication primitives. To use Totem in soft real-time environments, the distribution of message latencies is an important performance measure - particularly when fault tolerance is required. We conducted an experimental study of these distributions using {{a number of different}} <b>fault</b> scenarios (<b>communication</b> <b>faults,</b> performance faults, crash faults) and additional load scenarios. Using these experiments, we give empirical distributions for message latencies in the Totem protocol. The relative effects of various fault scenarios are discussed, highlighting the importance of scheduling delays for any practical, real-time group communication system. (orig.) SIGLEAvailable from TIB Hannover: RR 2036 (93) / FIZ - Fachinformationszzentrum Karlsruhe / TIB - Technische InformationsbibliothekDEGerman...|$|R
40|$|Network {{management}} for optical networking facing many problems {{as the system}} capacity and complexity increasing day by day that arises by using the transparent optical network components in communication system. In this article we are proposing a novel scheme of all optical networking management system. Semiconductor optical amplifier (SOA) is used after the channel to equalize the signal power which will help us to reduce crosstalk and reduce the probability {{of the failure of}} the network. Network failure occurs in the network by increasing the signal power by external source therefore amplified signal travel longer distance then the required distance. To overcome from this problem SOA is used to equalizing the power and to reduce the networks failures. General Terms Optical <b>communication,</b> <b>fault</b> management in optical networks...|$|E
40|$|Fault {{modeling}} is {{an important}} step towards both understanding and validating the implemented system. The focus of the paper is to present a unified system fault modelling framework, including input related faults model based on system theory. The complex embedded system (CES) is modelled using sequence of communicating FSM (SCFSM) and the system faults are represented by two components of system fault vector- system behaviour fault vector and system <b>communication</b> <b>fault</b> vector. These two system fault vector components are related and are components of the “change parameter vector Θ”, a general system level fault model based on Dynamic system theory. Input related faults are defined and their contribution is discussed. Faults propagation in mixed hardware software communication architecture is discussed, with the help of protocol example...|$|E
40|$|The paper {{presents}} protocols for {{a design}} concerned with interplatoon and intraplatoon communications in an Automated Highway System (AHS) framework. The protocols model vehicle maneuvers {{in the form}} of communications, coordination and regulation environmental processes. An automatic verification tool, COSPAN, was used to verify the logical correctness of the discrete event system model as well as safety and liveness properties. The overall design is hybrid incorporating both discrete and continuous dynamics. The vehicles use a LAN for interplatoon communications and a WAN for intraplatoon communications. Consequently each vehicle is equipped with two RF radio modems. The automated vehicle operating on an AHS can develop various communication faults. The paper provides two examples illustrating a model-based failure diagnosis method which can be used for <b>communication</b> <b>fault</b> diagnosis...|$|E
40|$|Abstract | This paper {{presents}} a model-based approach to diagnose performance and <b>communication</b> <b>faults</b> in local area networks (LANs). The diagnostic {{is based on}} the idea that if the system has an approximate model of the network, and knows how IP packages travels in the network, it can reason about the causes of alarms. A set of subsystems was developed, to gather the network information, to construct the model, to criticize the model, and to interact with the network in order to gather status information. Some results of experiments are reported...|$|R
40|$|Abstract—In {{this paper}} we discuss a general {{approach}} and architecture for design of distributed cyber-physical systems in order to make them resilient to <b>communication</b> <b>faults.</b> In this approach, each node exploits physical connections between nodes to estimate some of the state parameters of the remote nodes in order to detect the faults and also to maintain stability of system after fault occurrence. Finally, based on this architecture and approach, a fault-resilient decentralized voltage control algorithm is presented and evaluated. Keywords-Distributed cyber-physical systems; Power network; Unreliable communication; Fault Resilient...|$|R
40|$|In this paper, the {{methodology}} for automated design of checker for communication protocol testing is presented. Based {{on the level}} of checking, different design strategies can be performed- in the paper the lowest level is pre-sented. The definition of dedicated language for the de-scription of possible <b>communication</b> <b>faults</b> is presented. The core generator is used to produce VHDL code describing the behaviour of the checker. 1. Instructions Fault-tolerance is an important system metric for many operating environments, from automotive to space explo-ration. The conventional technique for improving system reliability is through component replication, which usually comes at significant cost: increased design time, testing...|$|R
40|$|Process group {{abstraction}} makes {{development of}} complex distributed applications much easier. To implement the process group abstraction in object oriented distributed systems, an object oriented framework called the Cortex framework is proposed. This framework provides the {{different levels of}} semantics that are needed for group communication, group membership, naming, reliable <b>communication,</b> <b>fault</b> tolerance and object replication, for our fault model. An application developer can use this framework to develop distributed applications in general and fault-tolerant distributed applications in particular. This makes the application development cycle shorter. The different levels of semantics (synchronization guarantees) provided by the Cortex framework allows the application developer to optimize cost, performance and fault-tolerance. The system integrates group membership abstraction with name service. New algorithms for causal unicast, causal multicast and total ordering of messages usi [...] ...|$|E
40|$|Abstract. The proloferation of RFID tags enhances {{everyday}} activities, such as {{by letting}} us reference the price, origin and circulation route of speci c goods. On the other hand, this lecel of traceability {{gives rise to}} new privacy issues and the topic of developing cryptographic protocols for RFID- tags is garnering much attention. A large amount of {{research has been conducted}} in this area. In this paper, we reconsider the security model of RFID- authentication with a man-in-the-middle adversary and <b>communication</b> <b>fault.</b> We de ne model and security proofs via a game-based approach makes our security models compatible with formal security analysis tools. We show that an RFID authentication protocol is robust against the above attacks, and then provide game-based (handwritten) proofs and their veri cation by using CryptoVerif...|$|E
40|$|RMI is a {{well-known}} middleware that smoothly integrates into Java. RMI uses classical RPC-based client-server interaction, precisely remote method calls. Although RMI has several extension points (i. e., for replacing transport protocols and call semantics), {{this is not enough}} for many applications as it can not cope with non-RPC-based <b>communication,</b> <b>fault</b> tolerance, scalability, and quality-of-service in general. We present FORMI, an RMI extension for supporting the very flexible fragmented-object model. This model allows to build distributed objects with arbitrary internal communication protocols and interaction patterns (e. g., internal peer-to-peer communication) and with a truly distributed internal structure (e. g., replicated servers, smart proxies, hierarchical servers). Both, internal communication and structure, remains hidden behind the RMI-object interface and is thus transparent to clients. We demonstrate our approach by an Internet radio example...|$|E
40|$|Abstract — In {{the dynamic}} average {{consensus}} problem, agents in {{a communication network}} use information from their imme-diate neighbors to track {{the average of the}} group’s time-varying inputs. Estimators based on the internal model principle solve this decentralized averaging problem with zero steady-state tracking error while providing robustness to network topology changes, agent failures, and <b>communication</b> <b>faults.</b> We develop a systematic process for designing these estimators. By formulat-ing estimator synthesis as a robust control problem, we decouple the design process from specific networks. This formulation allows us to use an existing robust pole placement method to design estimators that meet performance specifications for a set of networks. I...|$|R
40|$|Abstract: The Networked Control Systems (NCS) {{are complex}} systems which {{integrate}} {{information provided by}} several domians such as automatic control, computer science, communication network. The work {{presented in this paper}} concerns fault detection, isolation and compensation of communication network. The proposed method is based on the classical approach of Fault Detection and Isolation and Fault Tolerant Control (FDI/FTC) currently used in diagnosis. The modelling of the network to be supervised is based on both couloured petri nets and network calculus theory often used to represent and analyse the network behaviour. The goal is to implement inside network devices algorithms enabling to detect, isolate and compensate <b>communication</b> <b>faults</b> in an autonomous way...|$|R
40|$|Abstract. This paper {{presents}} a conceptual and computational frame-work {{for supporting the}} development of knowledge management sys-tems based on ontology design and implementation. This framework is devoted to support enterprises involved {{in the design and}} manufacturing of complex mechanical products: in particular we focus our attention on a network of Italian Small/Medium Enterprises (SMEs) that collaborates in the production of supermotard bike named Terra Modena 198. Starting from some theoretical considerations about the role of ontologies in engi-neering design this paper reflects on difficulties arising when knowledge is distributed and misunderstanding and <b>communication</b> <b>faults</b> among partners could easily lead to errors in the final product. ...|$|R
