13|41|Public
5000|$|Clockworks: Replace clock {{operating}} {{mechanisms and}} hands: Provide new master <b>clock</b> <b>controller,</b> new timepieces with new hands (hands shall match historic originals from photographs and with {{review and approval}} from architect), replace clock dials and exterior wood trim (ensure weather tight installation.) ...|$|E
30|$|When {{the switch}} is running at the sleep mode, <b>Clock</b> <b>Controller</b> {{does not provide}} {{frequence}} - core_clk for the inside blocks, which are the green blocks shown in Figure  10. Therefore, these blocks will not operate and sleep to save the consumed energy.|$|E
30|$|In our method, we {{can reduce}} the {{operating}} frequence to 0  MHz because we always maintain the performance of Power Manager and <b>Clock</b> <b>Controller.</b> The clock of these blocks is Gtx_clk. This is effective in saving consumed energy of the Openflow Switch.|$|E
50|$|Although the DRAM is asynchronous, {{the signals}} are {{typically}} {{generated by a}} <b>clocked</b> memory <b>controller,</b> which limits their timing to multiples of the <b>controller's</b> <b>clock</b> cycle.|$|R
5000|$|... timers, {{low-power}} timers, watchdog timers, 5 V-tolerant GPIOs, real-time <b>clock,</b> DMA <b>controller,</b> CRC engine.|$|R
40|$|To test timing-related faults between {{synchronous}} clocks, an at-speed test {{clock and}} an automatic {{test pattern generation}} scheme are needed. However, previous work on designing on-chip at-speed test <b>clock</b> <b>controllers</b> for multi-clock has quadratic increasing area overhead along with linearly increasing clocks. This paper presents a clock-chain based test clock control scheme using an internal phase-locked-loop (PLL) as the at-speed test clock generator, which supports at-speed testing for inter-clock domain and intra-clock domain logic. Experimental results demonstrate that the proposed design has low area overhead when {{increasing the number of}} clocks...|$|R
30|$|The rest of {{this paper}} is {{organized}} into following main parts: Section II – Design of Power Manager Block for the OpenFlow Switch. Section III – Design of <b>Clock</b> <b>Controller</b> Block for the Openflow Switch. Section IV – Description of Experimental Results. Section V - Description of Evaluation Testbed System. Finally, section VI - Conclusions.|$|E
30|$|We also {{design a}} new module - <b>Clock</b> <b>Controller</b> (CC) {{to control the}} {{frequence}} of switches. Based on the control signals of the PM block, at WORKING mode and IDLE mode, CC maintains the operating frequence at 125  MHz; whereas the frequence is reduced to 0  MHz at SLEEP mode {{in order to save}} the consumed energy of Openflow Switch.|$|E
40|$|Abstract: In this paper, {{we propose}} an {{asynchronous}} wrapper with new handshake circuits {{for the data}} communication in GALS systems. The handshake circuits include two data-ports and a local <b>clock</b> <b>controller.</b> we present two approaches {{for the implementation of}} dataports; one with pure standard cells and the other with Muller-C elements. The detailed design methodology is given and the circuits are validated with VHDL and circuits simulation in standard CMOS technology. 1...|$|E
50|$|M6117 is {{a highly}} integrated, low voltage, single-chip {{implementation}} of the Intel 386SX compatible microprocessor plus ALi M1217 chipset. The M6117 provides a static 386SX core, DRAM controller, ISA bus logic, real time <b>clock,</b> keyboard <b>controller,</b> and power management unit.|$|R
50|$|CompactRIO {{real-time}} controllers {{include a}} microprocessor for implementing control algorithms, and support {{a wide range}} of <b>clock</b> frequencies. <b>Controllers</b> are only compatible with National Instruments C Series I/O Modules. I/O modules are hot swappable (can be connected/disconnected while the unit is powered up).|$|R
50|$|The EZ80L92 is {{the primary}} {{processor}} in the ST Robotics robot <b>controller,</b> <b>clocked</b> at 50MHz. It has 128Kb of external RAM and 128Kb of external flash memory.|$|R
40|$|In this paper, {{we propose}} a VLSI {{implementation}} method for one-dimensional discrete wavelet transform (1 D-DWT) {{based on the}} GALS systems approach. An asynchronous wrapper, which includes two data communication ports and a local <b>clock</b> <b>controller,</b> is designed for the asynchronous data communication between the locally synchronous filtering modules in the wavelet filter bank. The detailed design methodology for the GALS architecture of 1 D DWT is given and the circuits are validated with VHDL and circuits simulation in standard CMOS technology. 1...|$|E
40|$|This paper {{discusses}} charge blooming and starlight saturation - two potential {{technical problems}} - when using an Electron Multiplying Charge Coupled Device (EMCCD) type detector in a high-contrast instrument for imaging exoplanets. These problems especially affect an interferometric type coronagraph - coronagraphs {{that do not}} use a mask to physically block starlight in the science channel of the instrument. These problems are presented using images taken with a commercial Princeton Instrument EMCCD camera in the Goddard Space Flight Center's (GSFC), Interferometric Coronagraph facility. In addition, this paper discusses techniques to overcome such problems. This paper also discusses the development and architecture of a Field Programmable Gate Array and Digital-to-Analog Converter based shaped <b>clock</b> <b>controller</b> for a photon-counting EMCCD camera. The discussion contained here will inform high-contrast imaging groups in their work with EMCCD detectors...|$|E
40|$|SOLVE (Specification {{using an}} Object-based, LOTOS-defined, Visual language) is {{designed}} to allow formal requirements capture, particularly for interactive systems. The SOLVE language is object-based, and formally defined using LOTOS (Language Of Temporal Ordering Specification). SOLVE is also a set of software tools that allow direct visual animation of systems specified in this language. Communicating objects control onscreen icons that can be manipulated directly by the user. Animation is supported by translating a SOLVE specification automatically into a LOTOS specification, and then simulating this using standard LOTOS tools. A VCR (Video Cassette Recorder) <b>clock</b> <b>controller</b> is used to illustrate the SOLVE approach. A further application is embodied in the XDILL tool that supports requirements specification and animation of digital logic circuits. The architecture of the SOLVE toolset is described...|$|E
5000|$|Those devices {{categorized}} as Realtek’s computer peripheral IC products consist {{of the traditional}} AC'97 audio codecs, the High Definition Audio codecs, card reader <b>controllers,</b> <b>clock</b> generators and IEEE 1394 ICs.|$|R
40|$|AbstractWe have {{previously}} proposed a clock distribution and data synchronization scheme {{to address a}} problem of jitter accumulated in Large Scale SFQ circuits such as Reconfigurable Data Paths processor (RDP). The RDP is divided into several stages clocked separately by an external jitter free system clock and FIFO buffers and <b>clock</b> <b>controllers</b> between the stages are used to synchronize data. In this paper we present architecture and experimental results of an RDP prototype that employed Operand Routing Network (ORN) and clock control and data synchronization scheme designed for ISTECSRL 10 kA/cm 2 advanced process. The circuit consisted of the ORN with 3 data inputs and maximum connection length equal to 1, three 8 -bit input and six 10 -bit output dual FIFO buffers, a 3 -bit controller, a ladder type high frequency clock signal generator and six 8 -bit output shift registers. Total it employed 6536 Josephson junctions and required a bias current of 0. 74 A. The prototype was successfully tested at the frequencies up to 48 GHz...|$|R
50|$|The 80186 {{series was}} {{generally}} intended for embedded systems, as microcontrollers with external memory. Therefore, {{to reduce the}} number of integrated circuits required, it included features such as <b>clock</b> generator, interrupt <b>controller,</b> timers, wait state generator, DMA channels, and external chip select lines.|$|R
40|$|For today's multi-million {{transistor}} designs, existing {{design verification}} techniques cannot guarantee that first silicon is designed error free. Therefore, techniques {{are necessary to}} efficiently debug first-silicon. In this article we show how scan-based debug {{can be used in}} a multiple clock domain system-on-a-chip. Both the necessary hardware measures, referred to as design for debug (DfD), and the required (debugger) software are considered. Special attention is paid to <b>clock</b> <b>controller</b> requirements. Keywords [...] - Debug, Test, Validation. I. Introduction Modern process technologies and design tools allow the realization of very large and complex systems on a single die. Because of the increased system complexity, improvements in integrated circuit (IC) verification techniques are necessary. For today's multimillion transistor designs, existing design verification techniques such as simulation, formal verification, static timing analysis, and emulation cannot guarantee that first s [...] ...|$|E
40|$|We {{apply the}} {{stability}} analysis for hybrid legged locomotion systems, introduced in our companion paper in this issue, {{to a new}} simple clock-driven SLIP model inspired by the robot RHex. We adopt in stance phase the three-degrees-of-freedom (3 DoF) spring loaded inverted pendulum (SLIP) model introduced in our companion paper to capture RHex’s pitching dynamics in the sagittal plane. The coordinating influence of RHex’s open-loop <b>clock</b> <b>controller</b> is subsumed into a leg placement strategy derived from a bipedal abstraction of RHex. The “symmetric ” factorization analysis introduced in our companion paper yields {{a necessary condition for}} gait stability expressed in closed form, which can be imposed directly on the clock parameter space. This represents the first reported analytical insight into how a dynamical runner might be stabilized by a completely feedforward rhythmic limb coordination pattern. Correspondenc...|$|E
40|$|Global {{physical}} time notion plays {{a fundamental}} role in many distributed applications. Much {{research has been}} made in the development of algorithms for time synchronization of drifting distributed clocks, as well as dissemination of global physical time reference. The aim of this work is to find a high-precision lightweight fault-tolerant solution with short convergence time for the SpaceWireinterconnected FPGAs of the DLR Hand-Arm system under using two different time distribution strategies: global clock dissemination and local (loop) synchronization. SpaceWire allows for (at least) two methods for physical time synchronization. The tightness of achievable synchronization is strongly dependent on the communication jitter and oscillator instabilities, as well as other user-defined constraints. In this thesis, a detailed quantitative analysis of the system’s architecture, oscillators, and corresponding achievable precision has been made. Furthermore, other user constraints, such as utilization of communication channels, have been taken into account. The resulting formulas have been applied to calculate practical values for the DLR Hand-Arm system. Also, the choice of the solution has been made according to the taxonomy of clock synchronization methods which was also developed within the scope of this thesis. The extended classification and the results of quantitative analysis can potentially be integrated into the domain model of the Virtual Path of the Hand-Arm System and may be used in the future for automatic generation of synchronization modules for diverse hardware elements, such as FPGAs or CPLDs, depending on user-defined optimality constraints. A constructive approach, starting with pinpointing the underlying system’s properties and the non-functional characteristics of the algorithm, to modular construction of the algorithm and the necessary functional properties has been used. The resulting solution can guarantee high-precision synchrony with some nonzero probability which can be made considerably high, depending on the resulting resource demands. Modules of the algorithm, including the <b>clock</b> <b>controller</b> and communication jitter compensation have been simulated under extreme values of system parameters. Stability and precision have been also demonstrated by means of numerous simulations. Furthermore, the global convergence of the algorithm has been briefly discussed...|$|E
50|$|Beginning with ultra-low-power Broadwells and {{continuing}} with mobile Skylake processors, Intel incorporated the <b>clock,</b> PCI <b>controller,</b> and southbridge IO controllers into the CPU package, eliminating the PCH {{for a system}} on a chip (SOC) design. Rather than DMI, these SOCs directly expose PCIe lanes, as well as SATA, USB, and HDA lines from integrated controllers, and SPI/I²C/UART/GPIO lines for sensors. Like PCH-compatible CPUs, they continue to expose DisplayPort, RAM, and SMBus lines. However, a fully integrated voltage regulator will be absent until Cannonlake.|$|R
50|$|In atomic <b>clocks</b> the <b>controller</b> is an {{evacuated}} {{microwave cavity}} {{attached to a}} microwave oscillator controlled by a microprocessor. A thin gas of cesium atoms is released into the cavity where {{they are exposed to}} microwaves. A laser measures how many atoms have absorbed the microwaves, and an electronic feedback control system called a phase-locked loop tunes the microwave oscillator until it is at the frequency that causes the atoms to vibrate and absorb the microwaves. Then the microwave signal is divided by digital counters to become the clock signal.|$|R
25|$|RTC {{and other}} add-on modules are {{attached}} as slaves to the processing and communication section for various input/output functions. On a modern meter most {{if not all}} of this will be implemented inside the microprocessor, such as the real-time <b>clock</b> (RTC), LCD <b>controller,</b> temperature sensor, memory and analog to digital converters.|$|R
40|$|Abstract Superconducting digital {{technology}} based on Rapid Single Flux Quantum (RSFQ) logic offers a 50 times faster clock rate and 100 times less on chip power consumption than today's mainstream semiconductor electronics. This technology is attractive for many applications {{and in particular}} for Digital Signal Processing (DSP). The applications of the RSFQ DSPs are numerous and include multi-user detection in spread spectrum system, channel equalization for Multi-in, Multi-out (MIMO) systems, and blind detection and signal tracking for signal intelligence. At Chalmers we are developing a hybrid DSP with target performance of 30 giga operations per second. It consists of an RSFQ Multiply Accumulate unit (MAC), RSFQ fast cache memory, and an external semiconductor memory. The development of the complex high speed cryogenic digital system requires interface, packaging and testing solutions. The main difficulties are due to the 4 K operational temperature, the high magnetic field sensitivity of the RSFQ circuits, the multi-channel high bandwidth interface required in the hybrid architecture, and the high speed RSFQ digital core. The key steps towards addressing each of these problems {{are the subject of}} this thesis. The main emphasis is put on the experimental testing and interfacing of superconductor electronics. A large part of the work is connected to the experimental verification of DSP components and their incremental improvement towards functionality. The RSFQ circuits tested were fabricated using the four-metal layer VLSI processes available from NGST (8 kA/cm^ 2 Josephson junction critical current) and HYPRES (both 1 kA/cm^ 2 and HYPRES 4. 5 kA/cm^ 2. The main results of the work are demonstrations of the RSFQ cache memory with more than 2, 000 Josephson junctions, 33. 5 GHz operation of the digital <b>clock</b> <b>controller,</b> and 20. 48 GHz operation of the autocorrelator. In addition, various experiments have been done for investigation of parasitic effects in RSFQ circuits such as flux trapping and influence of the high current bias lines. At the final stage of the work, a unique high bandwidth 4 K cryocooler based experimental setup has been developed. The system, developed in close cooperation with Hypres Inc. USA, has 40 high speed I/Os with bandwidth of 2 Gbps, 64 DC bias channels, 4 high frequency clock lines, and 4 auxiliary control lines. It supports exchangeable test units for 10 mm x 10 mm and 20 mm x 20 mm Multi Chip Module (MCM) carriers. The availability of such a system is critical to demonstration of the hybrid DSP prototype and future commercialization...|$|E
5000|$|The {{resolution}} of the dual-slope integrating ADC is determined primarily by {{the length of the}} run-down period and by the time measurement resolution (i.e., the frequency of the <b>controller's</b> <b>clock).</b> The required resolution (in number of bits) dictates the minimum length of the run-down period for a full-scale input (...) : ...|$|R
50|$|Double {{data rate}} (DDR) memory {{controllers}} {{are used to}} drive DDR SDRAM, where data is transferred on both rising and falling edges of the system's memory <b>clock.</b> DDR memory <b>controllers</b> are significantly more complicated when compared to single data rate controllers, but they allow for twice the data to be transferred without increasing the memory cell's clock rate or bus width.|$|R
50|$|The 80188 {{series was}} {{generally}} intended for embedded systems, as microcontrollers with external memory. Therefore, {{to reduce the}} number of chips required, it included features such as <b>clock</b> generator, interrupt <b>controller,</b> timers, wait state generator, DMA channels, and external chip select lines.While the N80188 was compatible with the 8087 numerics co-processor, the 80C188 was not. It didn't have the ESC control codes integrated.|$|R
50|$|Instead {{of being}} used to {{eliminate}} the run-down phase completely, the residue ADC {{can also be used}} to make the run-down phase more accurate than would otherwise be possible. With a traditional run-down phase, the run-down time measurement period ends with the integrator output crossing through zero volts. There is a certain amount of error involved in detecting the zero crossing using a comparator (one of the short-comings of the basic dual-slope design as explained above). By using the residue ADC to rapidly sample the integrator output (synchronized with the converter <b>controller's</b> <b>clock,</b> for example), a voltage reading can be taken both immediately before and immediately after the zero crossing (as measured with a comparator). As the slope of the integrator voltage is constant during the run-down phase, the two voltage measurements can be used as inputs to an interpolation function that more accurately determines the time of the zero-crossing (i.e., with a much higher resolution than the <b>controller's</b> <b>clock</b> alone would allow).|$|R
50|$|If a {{resolution}} of 16 bits is required with a <b>controller</b> <b>clock</b> of 10 MHz, the measurement time will be 13.1 milliseconds (or a sampling rate of just 76 samples per second). However, the sampling time can be improved by sacrificing resolution. If the resolution requirement is reduced to 10 bits, the measurement time is also reduced to only 0.2 milliseconds (almost 4900 samples per second).|$|R
50|$|Yet {{another option}} is a clockless or {{asynchronous}} CPU. Unlike conventional processors, clockless processors have no central clock to coordinate the progress of data through the pipeline. Instead, stages of the CPU are coordinated using logic devices called pipe line controls or FIFO sequencers. Basically, the pipeline <b>controller</b> <b>clocks</b> {{the next stage of}} logic when the existing stage is complete. Thus, a central clock is unneeded.|$|R
50|$|In general, as {{mentioned}} earlier, it {{is a point}} to point connection from a master (e.g. PLC, Microcontroller) to a slave (e.g. rotary encoders). The master controls the clock sequence and the slave transmits the current data/value through a shift register. When invoked by the master, the data is clocked out from the shift register. The master and slave are synchronized by the common <b>clock</b> of the <b>controller.</b>|$|R
5000|$|PowerPC 460SX and 460GTx {{are based}} on the 464-H90 core. They are {{targeted}} towards very high-end storage and networking applications, respectively. They run at 0.8 to 1.2 GHz, have 512 KB of L2 cache that doubles as SRAM storage, a 400 MHz <b>clock</b> DDR2 memory <b>controller,</b> four Gigabit Ethernet controllers, PCIe controllers and a variety of application-specific accelerators and controller facilities. They are manufactured on a 90 nm process.|$|R
30|$|Lastly, the {{mentioned}} mux-control-FSM {{is designed}} to operate at the faster SATA <b>controller</b> <b>clock</b> frequency of 150 MHz, such that 16 -bits of output can be produced at the maximum bandwidth of 300 MB/s. Note that the 224 -bits to 16 -bits ratio, means that an accelerator running at even 1 / 14 th of the SATA frequency is capable of providing enough data to sustain a throughput of 300 MB/s by this FSM.|$|R
40|$|Abstract — This paper {{develops}} a Takagi-Sugeno fuzzy approach for modeling a DC-DC voltage-mode controlled buck converter as a nonlin-ear, nonsmooth system to capture all the essential fast-scale nonlinearities that occur at <b>controller</b> <b>clock</b> frequency. A tractable mathematical stabil-ity analysis, employing nonsmooth Lyapunov functions, is proposed for identifying converter fast-scale instabilities and {{the onset of}} bifurcation phenomena. The search for the Lyapunov functions is formulated as a Linear Matrix Inequalities (LMI) feasibility problem which may be solved using interior point methods. I...|$|R
5000|$|Unlike a {{conventional}} processor, a clockless processor (asynchronous CPU) has no central clock {{to coordinate the}} progress of data through the pipeline.Instead, stages of the CPU are coordinated using logic devices called [...] "pipeline controls" [...] or [...] "FIFO sequencers." [...] Basically, the pipeline <b>controller</b> <b>clocks</b> {{the next stage of}} logic when the existing stage is complete. In this way, a central clock is unnecessary. It may actually be even easier to implement high performance devices in asynchronous, as opposed to clocked, logic: ...|$|R
