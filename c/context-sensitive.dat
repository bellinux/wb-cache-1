3486|0|Public
5|$|Dominowska, E., Roy, D., & Patel, R. (2002). An {{adaptive}} <b>context-sensitive</b> communication aid. Proceedings of the CSUN International Conference on Technology and Persons with Disabilities, Northridge, CA.|$|E
5|$|The <b>context-sensitive</b> button {{mechanic}} {{allows one}} button {{to serve a}} variety of functions, such as talking, opening doors, and pushing, pulling, and throwing objects. The on-screen display shows what action, if any, the button will trigger, determined by the situation. For example, if Link is holding a rock, the <b>context-sensitive</b> button will cause Link to throw the rock if he is moving or targeting an object or enemy, or place the rock on the ground if he is standing still.|$|E
5|$|In July 2009, Revolution {{announced}} that a remastered edition of Beneath a Steel Sky would be released on iOS later that year. The remastered edition features new animated movies by Gibbons, a <b>context-sensitive</b> help system and improved audio quality. The game was released on the App Store on October 7, 2009. The animated movies in the iOS remastered version {{make use of the}} original stills and use a sliding paper-like style to animate them.|$|E
5|$|On December 9, 2010, Revolution Software {{announced}} {{the release of}} Broken Sword: The Smoking Mirror - Remastered on iOS devices, and was released on December 16, 2010. The new features include an exclusive interactive digital comic from Dave Gibbons, fully animated facial expressions, enhanced graphics, high quality music, a <b>context-sensitive</b> hint system, diary, and a Dropbox integration which facilitates a unique cross-platform save-game feature, enabling players to enjoy the same adventure simultaneously on multiple devices. It also featured full Game Center integration – including in-game achievements. The Mac and PC versions followed in early 2011.|$|E
5|$|During {{conversations with}} characters, Mass Effect 2 employs a radial command menu, called Dialogue Wheel, where the player's {{dialogue}} options depend on wheel direction. The {{left side of}} the wheel is normally reserved for options that will continue the conversation in depth, while options on the right side tend to move the conversation towards completion. Responses at the top are generally more polite and selfless, while those at the bottom are more aggressive and hostile. The game also introduces a <b>context-sensitive</b> interrupt system, allowing players to interrupt the conversation with direct actions at certain times. Dialogue choices impact how others react to Shepard, the rewards for completing missions, possible discounts from merchants, romances and, most importantly, the Commander's morality.|$|E
5|$|Ocarina of Times {{gameplay}} introduced {{features such}} as a target-lock system and <b>context-sensitive</b> buttons that have since become common in 3D adventure games. In Japan, more than 820,000 copies were sold in 1998, making it the tenth best-selling game of that year. During its lifetime, 1.14 million copies of Ocarina of Time were sold in Japan, and over 7.6 million copies were sold worldwide. The game won the Grand Prize in the Interactive Art division at the Japan Media Arts Festival, and won six honors at the 2nd Annual Interactive Achievement Awards. , it is the highest-rated game on review-aggregating site Metacritic, with a score of 99/100; in 2008 and 2010, Guinness World Records listed Ocarina of Time as the highest-rated game ever reviewed. It {{is considered by many}} critics and gamers to be the greatest video game of all time.|$|E
5|$|The Legend of Zelda: Twilight Princess is an action-adventure game {{focused on}} combat, exploration, and puzzle-solving. It uses the basic control scheme {{introduced}} in , including <b>context-sensitive</b> action buttons and L-targeting (Z-targeting on the Wii), {{a system that}} allows the player to keep Link's view focused on an enemy or important object while moving and attacking. Link can walk, run, and attack, and will automatically jump when running off of or reaching for a ledge. Link uses a sword and shield in combat, complemented with secondary weapons and items, including a bow and arrows, a boomerang, and bombs. While L-targeting, projectile-based weapons can be fired at a target {{without the need for}} manual aiming.|$|E
5|$|The {{planetary}} {{exploration of}} the original Mass Effect was completely revamped. Instead of having large barren landscapes, the designers opted to build distinct and interesting places. The goal was to encourage players to keep exploring the galaxy by changing their expectations about what they could find. Originally, developers experimented {{with the idea of}} having a vehicle that could be used to navigate the planetary terrain in a more flexible way than in the original title. However, the vehicle was ultimately removed from the final build of the game. The <b>context-sensitive</b> interrupt system, which was originally meant to be a feature in the original Mass Effect, was introduced in Mass Effect 2 to help blend the dialogue better with the rest of the action.|$|E
5|$|The player plays as Nero {{throughout}} most of the game. He is equipped with the Red Queen sword, Blue Rose revolver, and the powers of his Devil Bringer. The Red Queen features an Exceed Gauge that can be charged up, allowing for subsequent attacks that are more powerful than regular slashes, until the gauge empties. Nero also has the powers of his Devil Bringer, and can use it to pull himself towards enemies or vice versa. The Devil Bringer may also be used for <b>context-sensitive</b> throw attacks, leading to high damage and various effects depending on the enemy. Nero's Devil Bringer also gains new abilities {{during the course of the}} game, such as being able to detect secret missions or caches of Red Orbs. Nero eventually gains the ability to use Devil Trigger after getting the katana known as Yamato, which increases his Devil Bringer's power, thus changing his Devil Bringer attacks into more powerful versions with different animations.|$|E
5|$|The game {{progresses}} linearly {{from one}} story event to the next, usually {{presented as a}} cutscene, though there are numerous side quests available that provide benefits to the characters. Players may also choose {{the order in which}} they tackle some areas. Most of the gameplay occurs on interconnected field maps where battles take place. Combat in Kingdom Hearts occurs in real time and involves pressing buttons to initiate attacks by the on-screen character. An action menu, similar to those found in Final Fantasy games, found at the bottom left of the screen provides other combat options such as using magic and items, although players can also assign selected magic spells that can be instantly used whilst holding the shoulder button. As players progress through the game, they can receive certain Disney characters as summons, such as Dumbo and Tinker Bell, each with their own unique abilities. There is also a <b>context-sensitive</b> option {{at the bottom of the}} menu, usually used for interacting with the environment or performing special attacks. This menu is manipulated by using the right analog stick or digital pad, while movement is controlled by the left analog stick, allowing the player to navigate the menu while avoiding or approaching enemies.|$|E
5|$|The {{player can}} {{navigate}} {{and interact with}} the game's environment, mainly carriages on the Orient Express, through use of a <b>context-sensitive</b> cursor. The cursor changes when it is placed over an item with which the player can interact, {{and can be used}} to talk to other characters, listen to other characters' conversations, look around the environment, and move. The player can walk to a location with a single click, and run to a location with a double-click. Double-clicking {{on the edge of the}} screen instantly takes the player to the next screen. There is a map of the train in the game's interface at the top of the screen, and once each carriage has been unlocked, the player can click on any part of the map and instantly be transported to that location, saving the player from having to travel through the train screen by screen. Another accessible feature is an objectives menu interface which states the general tasks the player should be attempting to complete. This menu is designed to guide players in the right direction without giving any explicit hints.|$|E
5|$|When {{considering}} the project, Cecil {{played the game}} again and noticed many issues, including that backgrounds were pixilated, the movies and audio were of poor quality, and he also felt some dialogue was out of place. He thought all these elements could be addressed and improved in a remastered edition, {{in which they could}} add a diary, hint system, and new artwork from Dave Gibbons, which they could offer as an interactive digital comic. On December 9, 2010, Revolution Software announced the release of Broken Sword: The Smoking Mirror – Remastered on Apple iOS devices, and was finally released on December 16, 2010. The new features include an exclusive interactive digital comic from Dave Gibbons, fully animated facial expressions, enhanced graphics, high quality music, a <b>context-sensitive</b> hint system, diary, and a Dropbox integration which facilitates a unique cross-platform save-game feature, enabling players to enjoy the same adventure simultaneously on multiple devices. It also featured full Game Center integration – including in-game achievements. The Mac and PC versions followed in early 2011.|$|E
25|$|WinHelp also {{supports}} a feature known as <b>context-sensitive</b> help. <b>Context-sensitive</b> help is assistance that {{is appropriate to}} where the user is in the software application, {{and what they are}} trying to do.|$|E
25|$|This {{interface}} {{represents a}} window of a container or contained object. It allows callers to obtain {{the handle of the}} window, and to toggle the <b>context-sensitive</b> help function. When the <b>context-sensitive</b> help function is turned on, typically the mouse-pointer changes to an arrow with a question mark to indicate that clicking a user interface element will result in opening a help window.|$|E
25|$|Google's mail servers {{automatically}} scan emails {{for multiple}} purposes, including to add <b>context-sensitive</b> advertisements next to emails, and to filter spam and malware.|$|E
25|$|Another {{extension}} is {{to allow}} additional terminal symbols to appear at the left-hand side of rules, constraining their application. This produces the formalism of <b>context-sensitive</b> grammars.|$|E
25|$|The WIMP {{interface}} {{is based}} around a stacking window manager and incorporates three mouse buttons (named Select, Menu and Adjust), <b>context-sensitive</b> menus, window order control (i.e. send to back) and dynamic window focus (a window can have input focus at any {{position on the}} stack). The icon bar (Dock) holds icons which represent mounted disc drives, RAM discs, running applications, system utilities and docked: Files, Directories or inactive Applications. These icons have <b>context-sensitive</b> menus and support drag-and-drop behaviour. They represent the running application as a whole, irrespective of whether it has open windows.|$|E
25|$|Some {{questions}} that are undecidable for wider classes of grammars become decidable for context-free grammars; e.g. the emptiness problem (whether the grammar generates any terminal strings at all), is undecidable for <b>context-sensitive</b> grammars, but decidable for context-free grammars.|$|E
25|$|LSTM {{became popular}} in natural {{language}} processing. Unlike previous models based on HMMs and similar concepts, LSTM {{can learn to}} recognise <b>context-sensitive</b> languages. LSTM improved machine translation, language modeling and multilingual language processing. LSTM combined with CNNs improved automatic image captioning.|$|E
25|$|For {{computer}} programming languages, the reference grammar is often ambiguous, due to {{issues such as}} the dangling else problem. If present, these ambiguities are generally resolved by adding precedence rules or other <b>context-sensitive</b> parsing rules, so the overall phrase grammar is unambiguous.|$|E
25|$|A stack {{automaton}} {{is called}} nonerasing if it never pops from the stack. The class of languages accepted by nondeterministic, nonerasing stack automata is NSPACE(n2), {{which is a}} superset of the <b>context-sensitive</b> languages. The class of languages accepted by deterministic, nonerasing stack automata is DSPACE(n⋅log(n)).|$|E
25|$|An L-system is {{context-free}} if each {{production rule}} refers only {{to an individual}} symbol and not to its neighbours. Context-free L-systems are thus specified by a context-free grammar. If a rule depends not only on a single symbol but also on its neighbours, it is termed a <b>context-sensitive</b> L-system.|$|E
25|$|Standardized {{anatomical}} and zoological {{terms of}} location have been developed, usually based on Latin and Greek words, to enable all biological and medical scientists to precisely delineate and communicate information about animal bodies and their component organs, {{even though the}} meaning {{of some of the}} terms often is <b>context-sensitive.</b>|$|E
25|$|His game Super Mario 64 {{has made}} a lasting {{impression}} {{on the field of}} 3D game design, particularly notable for its use of a dynamic camera system and the implementation of its analog control. s gameplay system introduced features such as a target lock system and <b>context-sensitive</b> buttons that have since become common elements in 3D adventure games.|$|E
25|$|This is {{resolved}} {{in various ways}} in different languages. Sometimes the grammar is modified {{so that it is}} unambiguous, such as by requiring an endif statement or making else mandatory. In other cases the grammar is left ambiguous, but the ambiguity {{is resolved}} by making the overall phrase grammar <b>context-sensitive,</b> such as by associating an else with the nearest if. In this latter case the grammar is unambiguous, but the context-free grammar is ambiguous.|$|E
25|$|Graphic {{adventure}}s are adventure {{games that}} use graphics {{to convey the}} environment to the player. Games under the graphic adventure banner may {{have a variety of}} input types, from text parsers to touch screen interfaces. Graphic adventure games will vary in how they present the avatar. Some games will utilize a first-person or third-person perspective where the camera follows the player's movements, whereas many adventure games use drawn or pre-rendered backgrounds, or a <b>context-sensitive</b> camera that is positioned to show off each location to the best effect.|$|E
25|$|Chronicles of the Sword is a third-person, mouse-based point-and-click graphic {{adventure}} game, featuring sprite based {{characters in}} 3D pre-rendered environments with switching viewpoints (described as similar to Alone in the Dark). The game's user interface uses a <b>context-sensitive</b> cursor for movement and actions, and a classic adventure conversation {{system based on}} choosing dialogue options. It also includes a few action game elements {{in the form of}} simple combat sequences that are interactive only on the Regular difficulty level and are automated (shown as cutscenes) on the Easy setting.|$|E
25|$|The Chomsky hierarchy, {{sometimes}} referred to as the Chomsky-Schützenberger hierarchy, is a containment hierarchy of classes of formal grammars. The hierarchy imposes a logical structure across different language classes and provides a basis for understanding the relationship between grammars (devices that enumerate the valid sentences within languages). In order of increasing expressive power it includes regular (or Type-3) grammars, context-free (or Type-2) grammars, <b>context-sensitive</b> (or Type-1) grammars, and recursively enumerable (or Type-0) grammars. Each class is a strict subset of the class above it, i.e., each successive class can generate a broader set of formal languages (infinite sets of strings composed from finite sets of symbols, or alphabets) than the one below. In addition to being important in linguistics, the Chomsky hierarchy is also relevant in theoretical computer science, especially in programming language theory, compiler construction, and automata theory.|$|E
25|$|Another {{autonomous}} {{philosophy of}} biology {{is represented by}} Guenther Witzany and his theory of biocommunication: Living nature is structured and organized by language and communication within and among cells, tissues, organs and organisms. This means that besides human language and communication every living entity is competent to use signs with which it can differentiate between self and non-self. The communicative competence serves for coordination of group behavior (tissues, organs, organisms). Biocommunication research is applied to all organismic kingdoms based on empirical data. Additionally the biocommunication method investigates nucleotide sequences as natural code which is structured according combinatorial, <b>context-sensitive</b> and content-specific rules. Natural genome editing from a biocommunicative perspective consequently is investigated as competent agent-driven generation and integration of meaningful nucleotide sequences into pre-existing genomic content arrangements of host organisms. Such natural genome editing agents can (re)combine and (re)regulate host genome content according to context-dependent (i.e. adaptational) purposes. Such active agent-driven processes contradict passive error replication (mutation) narratives to explain emergence of genetic diversity.|$|E
25|$|Point-and-click {{adventure}} {{games are}} those where the player typically controls their character through a point-and-click interface {{using a computer}} mouse or similar pointing device, though additional control schemes may also be available. The player clicks to move their character around, interact with non-player characters, often initiating conversation trees with them, examine objects in the game's settings or with their character's item inventory. Many point-and-click games would include a list of on-screen verbs to describe specific actions {{in the manner of}} a text adventure, but newer games have used more <b>context-sensitive</b> user interface elements to reduce or eliminate this approach. Often, these games come down to collecting items for the character's inventory, and figuring where is the right time to use that item; the player would need to use clues from the visual elements of the game, descriptions of the various items, and dialogue from other characters to figure this out. Later games developed by Sierra Online including the King's Quest games, and nearly all of the LucasArts adventure games, are point-and-click based games.|$|E
500|$|Controversial {{features}} included those some considered useless or too advanced {{for data}} processing users. Such features included boolean expressions, formulas and table [...] (indices). Another point of controversy was whether to make keywords <b>context-sensitive</b> {{and the effect}} that would have on readability. Although <b>context-sensitive</b> keywords were rejected, the approach was later used in PL/I and partially in COBOL from 2002. Little consideration was given to interactivity, interaction with operating systems (few existed at that time) and functions (thought of as purely mathematical and of no use in data processing).|$|E
500|$|The {{gameplay}} was highlighted for its unconventional <b>context-sensitive</b> systems. IGN credited Rare {{for reducing}} the number of items to collect and simplifying the moves with <b>context-sensitive</b> pads, stating that they [...] "help keep the action shifting, refreshing, and always exciting." [...] In contrast, Edge remarked that the <b>context-sensitive</b> moments [...] "threaten to make the title little more than a procession of barely connected and puerile minigames." [...] Game Revolution criticised the game's simplistic action, short length and linear nature. Similarly, GameSpot noted that the game's linearity [...] "cuts its length considerably". The game's camera system was criticised by several reviewers. Geraint Evans of N64 Magazine felt that it does not allow players to properly judge their position within their surroundings, while GameSpot remarked that it can get caught on objects or refuse to obey commands. The multiplayer was described as inventive and was praised for its numerous options. GameSpot, however, remarked that the multiplayer modes add some longevity to the game, but most [...] "fail to stand the test of time." ...|$|E
500|$|The Legend of Zelda: Ocarina of Time is {{a fantasy}} action-adventure game with {{role-playing}} and puzzle elements {{set in a}} large open-world environment. The player controls series protagonist Link from a third-person perspective, in a three-dimensional world. Link primarily fights with a sword and shield, but he can also use other weapons such as projectiles, bombs, and magic spells. The control scheme introduced techniques such as <b>context-sensitive</b> actions and a targeting system called [...] "Z-targeting". In combat, Z-targeting allows the player to have Link focus and latch onto an enemy or other objects. When using this technique, the camera follows the target and Link constantly faces it. Projectile attacks are automatically directed at the target and do not require manual aiming. <b>Context-sensitive</b> actions allow multiple tasks to be assigned to one button, simplifying the control scheme. The on-screen display shows {{what will happen when}} the button is pushed and changes depending on what the character is doing. For example, the same button that causes Link to push a box if he is standing next to it will have him climb on the box if the analog stick is pushed toward it.|$|E
500|$|Rare {{announced}} plans to release a Nintendo DS version of the game at Comic-Con 2007. It was later revealed to be titled [...] and was subsequently released in September 2008. Key changes include a control scheme which makes use of the stylus, {{as well as the}} presence of additional <b>context-sensitive</b> information on the second screen. On October 30, 2007, a party game spin-off, [...] was released for the Xbox 360. Developed by Krome Studios, the game features the TV show piñata characters competing in races and close to 50 party mini-games.|$|E
500|$|Another {{aspect of}} Resident Evil 4, {{new to the}} series, is the {{inclusion}} of <b>context-sensitive</b> controls. Based on the situation, players can interact with the environment: kicking down a ladder, jumping out of a window, dodging an attack or executing a [...] "finishing move" [...] on weakened enemies. There are also quick time events, in which the player must press buttons indicated on-screen to execute actions such as dodging a falling boulder or wrestling an enemy to stay alive. These are often incorporated into the game's many boss fights, where the player must avoid instant kill attacks.|$|E
500|$|The <b>context-sensitive</b> attacks {{received}} {{praise and}} criticism. Antista said, [...] " [...] fans will {{be thankful for}} is the triumphant return of the contextual attacks", but added that the control limitations were the [...] "only real problem", as {{the sensitivity of the}} cursor button can result in a failed combo, [...] "And the jump button sends you forward in the direction you're facing automatically." [...] Buchanan noted that the contextual attacks [...] "can prove frustratingly tricky as you have a brief amount of time to input the commands, but the controls on most handsets are quite small".|$|E
