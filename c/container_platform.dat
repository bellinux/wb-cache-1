14|41|Public
50|$|OpenShift Origin is the {{upstream}} {{community project}} used in OpenShift Online, OpenShift Dedicated, and OpenShift <b>Container</b> <b>Platform.</b> Built around {{a core of}} Docker container packaging and Kubernetes container cluster management, Origin is augmented by application lifecycle management functionality and DevOps tooling. Origin provides an open source application <b>container</b> <b>platform.</b> All source code for the Origin project is available under the Apache License (Version 2.0) on GitHub.|$|E
50|$|Apprenda is an American {{computer}} software company {{that provides a}} shared services <b>container</b> <b>platform</b> to help companies create, update, and manage private and public cloud-based applications.|$|E
5000|$|In April 2017, Microsoft {{acquired}} <b>container</b> <b>platform</b> Deis from Engine Yard [...] and Engine Yard {{announced it}} was being acquired by Crossover, a provider of cloud-based Ruby teams.|$|E
50|$|ERS Railways (formerly European Rail Shuttle B.V.) is a fully {{independent}} railway company, 100% owned by Freightliner Group Ltd., with five offices in four countries across Europe. With a modern fleet of locomotives and over 400 leased <b>container</b> <b>platforms,</b> low-bed {{as well as}} double pocket wagons, {{they are able to}} transport container, tank and trailer units. ERS Railways has so far been granted railway licenses in the Netherlands, Belgium, Germany and Austria.|$|R
50|$|Apcera is an American cloud {{infrastructure}} company {{that provides a}} <b>container</b> management <b>platform</b> to deploy, orchestrate and govern containers and applications across on-premise and cloud-based infrastructure.|$|R
50|$|Minio server can be {{installed}} on physical or virtual machines or launched as Docker containers and deployed on <b>container</b> orchestration <b>platforms</b> like Kubernetes, Mesosphere, and Docker Swarm.|$|R
50|$|OpenShift <b>Container</b> <b>Platform</b> (formerly {{known as}} OpenShift Enterprise) is Red Hat's {{on-premises}} private platform {{as a service}} product, built around a core of application containers powered by Docker, with orchestration and management provided by Kubernetes, on a foundation of Red Hat Enterprise Linux.|$|E
5000|$|Airport [...] "Irkutsk" [...] {{has only}} one runway with armobetonnym coating having a {{vertical}} drop of more than 30 m. The total capacity of the two passenger terminals is 1450 passengers / hour. Cargo terminal is equipped with diesel forklifts, hoists, <b>container</b> <b>platform,</b> electronic and mechanical scales (for weighing cargo up to 30 tons). The airport complex also includes the airport hotel [...] "Air Harbour", a service of aviation service (board food workshop) repair facility and medical services. There is a VIP lounge in the international terminal building.|$|E
40|$|International audienceModern {{vehicles}} {{are equipped with}} several interconnectedsensors on board for monitoring and diagnosispurposes; their availability is a main driver for the developmentof novel applications in the smart vehicle domain. Inthis paper, we propose a Docker-based <b>container</b> <b>platform</b> asa virtualization solution to implement customized smart carapplications. Through a proof-of-concept prototype—developedon a Raspberry Pi 3 board—we show that a container-basedvirtualization approach is not only viable but also effective andflexible to manage several parallel processes running on board. More specifically, the platform can take priority-based decisionsby handling multiple inputs, e. g., data from the CANbus basedon the OBD II codes, video from the on-board webcam, andso on. Results are promising {{for the development of}} in-vehiclevirtualization techniques in future vehicles...|$|E
50|$|Mikado Station has {{a single}} side {{platform}} connected to a station building constructed out of two modified freight <b>containers.</b> The <b>platform</b> is short, and can handle trains with a maximum length of eight cars.|$|R
50|$|Rancher Labs {{includes}} a Kubernetes distribution in its Rancher <b>container</b> management <b>platform.</b> It {{is also being}} used by Red Hat for its OpenShift product, CoreOS for its Tectonic product, and IBM for its IBM Cloud private product.|$|R
40|$|Innovative {{materials}} and structures are analyzed in this paper. To calculate {{the strength of}} the collision of flat wagons for the transport of large containers, there is no clear methodology for determining effort interaction between the <b>container</b> and the <b>platform.</b> At high longitudinal acceleration of the container, it is set in motion, and the consideration of this problem in a static setting impossible. The relevance of this work is to develop a methodology that is based on the equations of motion and considers dynamic interaction between <b>container</b> and <b>platform...</b>|$|R
40|$|The aim is {{to ground}} and develop the basic principles, methods and {{mathematical}} models of making decisions at functioning of the computer-aided container movement control in the river port. The methods and mathematical models for optimum ship loading and container arrangement in the port stockhouse, determination of the <b>container</b> <b>platform</b> capacity and conducting dynamical model "stockhouse", developing operational moving-in and removal planes of container by an automobile transport and freight treatment of the ships have been developed. The problem complex for PC "Computer-aided container movement control in port" has been developed. The investigation results have been introduced in the Perm and Tyumen portsAvailable from VNTIC / VNTIC - Scientific & Technical Information Centre of RussiaSIGLERURussian Federatio...|$|E
40|$|Abstract. Our {{research}} targets collaborative environments with {{focus on}} mobility and teams. Teams comprise {{a number of}} people working on multiple projects and activities simultaneously. As mobile and wireless technology advances people are no longer bound to their offices. Team members are able to collaborate while on the move. Sharing context information thus becomes a vital part of collaborative environments. However, challenges such as heterogeneous devices, connectivity, and bandwidth arise due to the dynamic nature of distributed, mobile teams. We present a methodology for context modeling and employ a framework that reduces costs such as computing information and usage of network resources by transferring context at relevant levels of detail. At the same time, robustness of the system is improved by dealing with uncertain context information. Our framework is implemented on an OSGi <b>container</b> <b>platform</b> using Web services for communication means. ...|$|E
40|$|With this master thesis {{we examine}} how {{to design a}} {{planning}} initiative that can strengthen the visibility of, actualize and activate existing resources {{in the neighborhood of}} Nordvest, Copenhagen, on temporary basis. This thesis is theoretically based on Empowerment, Gentrification and temporary use of urban space as a strategic planning tool, and is a part of an interdisciplinary study, grounded in the academic field of Performance Design and Urban Planning. Our methodical approach is strongly inspired by participatory action research that intends to analyze existing problems and thereby identifying elements for change. Based on 35 meetings with various entrants in the urban planning field, and case studies of clusters for social and cultural entrepreneurs in Copenhagen, we have designed a project proposal, that suggests a mobile <b>container</b> <b>platform,</b> as a way to activate empty building sites on a short time basis by renting out cheap container spaces to social- and cultural entrepreneurs. The project design focuses on mobilizing local dwellers, public institutions and organizations, and hereby understates different kinds of collaboration between the local society and the entrepreneurs. We define this collaboration as a “social partnership”. We especially use Empowerment theories to underpin this collaborative platform, and hereby see possibilities to strengthen horizontal and vertical empowerment within the local society...|$|E
50|$|Rancher Labs is a {{software}} company working on operating-system-level virtualization tools, more {{commonly known as}} Linux Containers. Founded in 2014, Rancher Labs introduced two main tools: Rancher, a <b>container</b> management <b>platform</b> for Docker <b>container</b> systems, and RancherOS, a Linux operating system distribution simplified to host containers.|$|R
40|$|This {{supporting}} document describes the assembly procedure for the Shot Loading Platform. The Shot Loading Platform {{is used by}} multiple equipment removal projects to load shielding shot in the annular spaces of the equipment storage <b>containers.</b> The <b>platform</b> height is adjustable to accommodate different sizes of storage containers and transport assemblies...|$|R
50|$|Avi {{software}} runs on bare metal servers, virtual machines, and containers in data centers, private, and public clouds. The Avi Controller automates provisioning, configuration, and scaling of services through integration with VMware vCenter, OpenStack, SDN controllers, public clouds such as Amazon AWS and Google Cloud Platform, Red Hat OpenShift and Ansible, and <b>container</b> orchestration <b>platforms</b> such as Kubernetes, Docker, and Mesos.|$|R
40|$|Breaches {{in online}} {{contracts}} (Service Level Agreements, SLAs) are usually compensated by gift vouchers at present, however as the online contracts emerge towards smart contracts, the breaches could potentially lead to court injunctions over blockchains. This research proposes Probability based Factor Model (PFM) {{that can be}} implemented over the blockchain to automatically identify breaches that can cause substantial damage and have high probability for recurrence. PFM can also issue court injunctions for the breaches. The underlying concept in PFM is built upon the notion of factor analysis and stochastic modeling from the discipline of Data Science. High performance computing (HPC) cluster at University of Luxembourg (HPC @ Uni. lu) and docker (a software <b>container</b> <b>platform)</b> were used to emulate contractual environment of three service providers: Redis, MongoDB, and Memcached Servers. The results showed that court injunction(s) was issued only for Redis and MongoDB Servers. Technically, this difference {{could be attributed to}} the fact that Memcached is simply used for caching and therefore, it is less prone to breach of contract. Whereas, Redis and MongoDB as databases and message brokers are performing more complex operations {{and are more likely to}} cause a breach. This research will benefit enterprises that view breach of contract as a limiting factor for implementation of smart contract in cyber physical system or internet of things...|$|E
40|$|An aircraft-based, {{multi-channel}} aerosol sampler {{for studies}} of the upper troposphere and lowermost stratosphere from the CARIBIC (Civil Aircraft for Regular Investigation of the Atmo-sphere Based on an Instrument <b>Container)</b> <b>platform</b> was designed and calibrated. The sampler operates with an impaction technique at a flow rate of 10. 4 lpm and consists of sixteen sampling channels. Samples are collected in a time sequence. Each channel contains two sample types that are used for quantitative measurement of concen-trations, using particle-induced X-ray emission (PIXE), and single particle analysis with electron microscopy. The minimum detec-tion limits for PIXE analysis after 1. 5 h sampling are, for example, 2. 0, 0. 14, and 0. 02 ng/m 3 STP (standard temperature and pressure) for sulfur, potassium, and nickel. Calibration included penetration studies of a cyclone arrangement used to define the upper size limit in the sampling to 2. 0 µm diameter and the collection efficiency of the impactor. Both components of the sampling system showed pen-etration and collection efficiency close to 100 %, respectively, in the particle size range of interest. The impactor cut-off {{was found to be}} dependent on the ratio of the impactor upstream-to-downstream pressure for ratios well below the critical pressure drop (i. e., the pressure where the jet reaches sonic velocity) being 0. 15 µm and 0. 08 µm for ratios 0. 41 and 0. 2...|$|E
40|$|Context. Cassandra is a NoSQL Database which handles {{large amount}} of data {{simultaneously}} and provides high availability for the data present. Compaction in Cassandra {{is a process of}} removing stale data and making data more available to the user. This thesis focusses on analyzing the impact of Cassandra compaction on Cassandra’s performance when running inside a Docker container. Objectives. In this thesis, we investigate the impact of Cassandra compaction on the database performance when it is used within a Docker based <b>container</b> <b>platform.</b> We further fine tune Cassandra’s compaction settings to arrive at a sub-optimal scenario which maximizes its performance while operating within a Docker. Methods. Literature review is performed to enlist different compaction related metrics and compaction related parameters which have an effect on Cassandra’s performance. Further, Experiments are conducted using different sets of mixed workload to estimate the impact of compaction over database performance when used within a Docker. Once these experiments are conducted, we modify compaction settings while operating under a write heavy workload and access database performance in each of these scenarios to identify a sub-optimal value of parameter for maximum database performance. Finally, we use these sub-optimal parameters to perform an experiment and access the database performance. Results. The Cassandra and Operating System related parameters and metrics which affect the Cassandra compaction are listed and their effect on Cassandra’s performance has been tested using some experiments. Based on these experiments, few sub-optimum values are proposed for the listed metrics. Conclusions. It can be concluded that, for better performance of Dockerized Cassandra, the proposed values for each of the parameters in the results (i. e. 5120 for Memtable_heap_size_in_mb, 24 for concurrent_compactors, 16 for compaction_throughput_mb_per_sec, 6 for Memtable_flush_writers and 0. 14 for Memtable_cleaup _threshold) can be chosen separately but not the union of those proposed values (confirmed from the experiment performed). Also the metrics and parameters affecting Cassandra performance are listed in this thesis. ...|$|E
50|$|In 2015 the {{terminal}} operator opened a polymer packing plant {{to support its}} customer Borouge with their growth strategy. The packing plant has an annual capacity of 700 Metric Tons and includes <b>container</b> tilting <b>platform,</b> FFS bagging equipment to fully automate bagging and palletizing services. The container terminal also has 2.5 million square foot of storage space for petrochemicals, polymer and other commodities.|$|R
50|$|If {{the force}} can be {{concentrated}} {{to a single}} point (small scale sensing, ropes, tensile loads, point loads), a single cell can be used. For long beams, two cells at the end are used. Vertical cylinders can be measured at three points, rectangular objects usually require four sensors. More sensors are used for large <b>containers</b> or <b>platforms,</b> or very high loads.|$|R
5000|$|JSC [...] "Abakanvagonmash" [...] (ОАО «Абаканвагонмаш») (Abakan, Khakassia Republic) — {{the largest}} machine-building {{enterprise}} of Russia {{that specializes in}} the production of universal (special) <b>containers</b> and fitting <b>platforms</b> of 40 or 60 ft.|$|R
40|$|The Internet of Things (IoT) are small, sensing, {{network enabled}} {{computing}} devices which can extend smart behaviour into resource constrained domains. This thesis focus on evaluating {{the viability of}} Linux containers in relation to IoT devices. Three research questions are posed to investigate various aspects of this. (1) Can any guidelines and best practices be derived from creating a Linux container based security enhanced IoT platform? (2) Can the LiCShield project be extended to build dynamic, default deny seccomp configurations? (3) Are Linux containers viable on IoT platforms in regards to operational performance impact? To answer these questions, a literature review was conducted, research gaps identified and a research methodology selected. A Linux-based <b>container</b> <b>platform</b> was then created in which applications could be run. Experimentation {{was conducted on the}} platform and operational measurements collected. A number of interesting results was produced during the project. In relation to the first research question, it was discovered that the LXC templating code created could probably benefit other Linux container projects as well as the LXC project itself. Secondly, it was found that a robust, layered containerized security architecture could be created by utilizing basic container configurations and by drawing from best practices from LXC and docker. In relation to the second research question, a proof of concept system was created to profile and build dynamic, default deny seccomp configurations. Analysis of the system shows that the developed method is viable. In relation to the final research question; Container overhead with regards to CPU, memory, network I/O and storage was measured. In this project, there were no CPU overhead and only a slight performance decrease of 0. 1 % on memory operations. With regards to network I/O, a speed decrease of 0. 2 % was observed when a container received data and utilized NAT. On the other hand, while the container was sending data, a speed increase of 1. 4 % was observed while the container was operating in bridge mode and an increase of 0. 9 % was observed while utilizing NAT. Regarding storage overhead, a total of 508 KB base overhead was added to each container on creation. Due to these findings, the overhead containers introduce are considered negligible and thus deemed viable on IoT devices...|$|E
40|$|This thesis {{focuses on}} the {{influence}} of volcanism on the compositions of the aerosols in the upper troposphere (UT) and lowermost stratosphere (LMS), and their direct and indirect impact on climate. Aerosol data were obtained by aircraft-borne sampling, using the CARIBIC (Civil Aircraft for the Regular Investigation of the Atmosphere Based on an Instrument <b>Container)</b> <b>platform,</b> and laboratory-based ion beam analysis of aerosol samples at the Lund Ion Beam Analysis Facility (LIBAF). Aerosol composition data were compared to particle size distributions obtained from onboard optical particle counter (OPC) measurements, demonstrating good agreement between the two analysis systems. The impact on climate was investigated using satellite observations of aerosol and optical properties of cirrus clouds. These were provided by the CALIOP and MODIS instruments onboard the NASA satellites CALIPSO, Terra and Aqua. The aerosol load in the LMS has varied considerably since 2000, mainly due to volcanic injections of particles and particleforming gases. Tropical volcanoes affect the LMS for up to two years after eruption, through transport within the Brewer- Dobson circulation. In contrast, extra-tropical volcanoes inject aerosols directly into the LMS, which subside to the UT within months. The eruption of Kasatochi in August 2008 increased the aerosol load in the northern hemisphere LMS by a factor of ~ 10. Apart from sulfate and ash, both fresh and aged volcanic aerosols contain surprisingly large amounts of carbonaceous aerosols, and the value of the oxygen:carbon ratio (O/C) of ~ 2 indicates an organic origin. Entrainment of the organic aerosol present in the tropospheric background within volcanic jets and plumes was suggested to be the cause. Using CALIOP data, it was shown that the stratospheric aerosol at altitudes below 15 km constitutes {{a significant part of the}} volcanic forcing. During the period from 2008 to the middle of 2012, volcanic forcing in the LMS constituted 30 % of that in the rest of the stratosphere. In addition, volcanism was found to have a significant influence on aerosol concentrations in the UT of the northern hemisphere. Comparison with cirrus reflectance (CR) data obtained using the MODIS instrument revealed a strong anti-correlation between the CR and particulate sulfur mass concentration, suggesting that the volcanic aerosol affected midlatitude cirrus clouds. In 2011, the CR was 8 % lower than in 2001. Since cirrus clouds warm the Earth, this decrease is associated with regional cooling. The results of these studies show that previous estimates of the impact of volcanism on climate have been underestimated. The investigations of the direct and indirect radiative effects of volcanism on the UT and LMS presented here provide new information on the effect of volcanism on the Earth’s climate. This will allow more realistic estimates of the impact of volcanism on climate variability, and improve climate models providing more realistic projections of future global temperatures...|$|E
50|$|First train {{containing}} 82 <b>containers</b> and 41 <b>platforms</b> {{came from}} China to Baku, Azerbaijan on July 28. It is planned {{to launch a}} first carriage using this way through Georgia to Istanbul in September 2015.|$|R
40|$|IPMOT is the {{integrated}} propulsion motor designed {{for an individual}} self-driven <b>container</b> rail <b>platform</b> wagon developed in the "integrated standard transport unit" research and development project, supported by the European Commission. The paper presents {{the study of the}} motor and the converter temperatures, at rated and overload working conditions. The problem is afforded using both the simulation (FEM and lumped parameters models) and the experimental approaches. For this purpose a dedicated experimental set up has been designed and realised...|$|R
50|$|A {{vending machine}} {{was placed in}} a {{converted}} shipping <b>container</b> on the <b>platform</b> as a replacement for the ticket counter in the entrance building. In this Deutsche Bahn Servicepavillon tickets were sold along with drinks, snacks and magazines. At the beginning of 2008, it was closed without notice, but shortly afterwards it was re-opened by another operator. In 2009, Taunus Real acquired the entrance building and renovated it. The services operated from the kiosk have been moved back into the building and it is intended that the <b>container</b> on the <b>platform</b> will be removed. The area of the entrance building that was formerly operated as a pub and the upper storey are still unused.|$|R
50|$|JADE is a {{middleware}} which {{facilitates the}} development of multi-agent systems under the standard FIPA for which purpose it creates multiple containers for agents, each of them can run on one or more systems. Is understood that a set of <b>containers</b> constitutes a <b>platform.</b>|$|R
50|$|Flatracks. Three {{types of}} flatrack have been {{procured}} {{as part of}} the system, the M1077/M1077A1, the M3/M3A1 and the M1 ISO Compatible Flatrack. The M1077 and M1077A1 General Purpose A-frame flatracks are sideless flatracks used to transport pallets of ammunition and other classes of supplies. On the ISO-compatible Palletized Flatrack (IPF) Type M1 there are two end walls, one incorporating the A-frame. Both walls can fold down inwardly for stacking when empty. The M3/M3A1 <b>Container</b> Roll-in/Out <b>Platform</b> (CROP) is, a flatrack that fits inside a 20 ft ISO container.|$|R
40|$|Apparatus for {{transferring}} and manipulating {{a plurality}} of containers in a sequence is disclosed including a mechanical manipulator arm having a gripping device which automatically picks up a container at a fixed pickup position P and transfers it to a processing station. At a processing station X, the container is loaded with silicon wafers and thereafter returned by the arm to the fixed position P at the pickup and return station Y. A plurality of the containers may be processed in sequence from the fixed pickup position by providing a movable carriage upon which <b>container</b> pedestal <b>platforms</b> are supported, {{at least one of}} which is an elevator platform. The platforms include abutments for properly positioning the containers for accurate pickup by the manipulator arm...|$|R
40|$|New {{trends in}} the market, adapted to service {{oriented}} consumption models, haveunfolded new opportunities in how we monitor network performance. This thesis,introduces a new containerized, decentralized and concurrent scheduler for activenetwork performance monitoring called Controlled Priority Scheduling (CPS). Thescheduler is implemented to suit the <b>container</b> monitoring <b>platform,</b> ConMon. Thescheduler is implemented to run inside distributed containers, where the purpose isto deploy the scheduling container on the same host as the running application. Performing the monitoring in such way gives {{a better understanding of}} the networkperformance an application can utilize, compared to the capacity the network canoffer. The CPS scheduler showed an improved monitoring time granularity whencompared too other distributed and decentralized schedulers. In addition, CPSmanages to perform a consistent, near-cyclic monitoring pattern, over a dynamicallyadaptable monitoring cluster, without causing any monitoring conflicts...|$|R
40|$|The {{security}} features of current middleware platforms, like Enterprise Java Beans and CORBA, are either simple and limited or complex {{and difficult to}} use. In both cases are the provided features static and {{do not support the}} flexibility needed {{in a wide range of}} applications. This paper introduces an approach to flexible security mechanisms in the context of a reflective middleware architecture. The reflective middleware OOPP is a component and capsule (<b>container)</b> based <b>platform</b> providing its reflective features through a set of distinct meta-models. Flexible security mechanisms are provided using a specialized programming language called Obol. In OOPP the flexible security mechanisms based on Obol is a subset of reflective features of the middleware platform. Obol and its machinery is a subset of one distinct aspect or meta-model of the middleware platform. 1...|$|R
5000|$|Helicopter hanging fire-{{extinguishing}} <b>container</b> and multi-container <b>platforms</b> {{that were}} used for extinguishing forest fires in Chernobyl area (1986), {{in the mountains and}} gorges of Crimea, the Carpathian mountains, the Southern Urals (1992-2003), in swamp forests of the Moscow region (2001), for forest fire extinguishing in Russia (2010), for extinguishing disastrous forest fire on the Mount Carmel plateau, Haifa (Israel). The Russian government equipped some emergency units of Ministry of Civil Defense and Emergency Response with fire-extinguishing containers for forest fire fighting; ...|$|R
40|$|AbstractProgramming {{courses are}} {{significant}} part of IT experts’ education process. To being able to provide adequate teaching quality in such courses, lecturers should be exempted from routine tasks like source code compilation, testing and grading. Current computers are equipped with enough computational power to automate these routine tasks. This paper discusses the analysis and realization of such a system for user submitted automatic source code evaluation. The main system requirement was the safe runtime environment (sandbox) for executing potentially dangerous programs. <b>Container</b> based <b>platform</b> Docker was selected after research of ready to use sandbox technologies. This platform simplifies access to isolation mechanism which are implemented in the current Linux kernel and provides API for system integration. The implemented system around Docker platform is named APAC (Automatic Programming Assignment Checker). In the paper APAC's architecture and implementation are described and discussed...|$|R
