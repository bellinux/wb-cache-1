10000|10000|Public
5|$|The rise of {{consumer}} GPUs {{has led to}} support for <b>compute</b> kernels, either in graphics APIs (referred to as <b>compute</b> shaders), in dedicated APIs (such as OpenCL), or in other language extensions.|$|E
5|$|As well as four-function arithmetic, the Executive had {{the ability}} to <b>compute</b> squares, reciprocals, and {{multiply}} or divide by a fixed constant. The Executive could carry out sums to two, four or six decimal places, or use a floating decimal point.|$|E
5|$|Choose a {{canonical}} {{labeling of}} the digits by assigning values for B1 (see grid), and <b>compute</b> {{the rest of}} the Band1 permutations relative B1.|$|E
40|$|Abstract: The {{development}} of computer industry is {{promoted by the}} progress of distributed <b>computing,</b> parallel <b>computing</b> and grid <b>computing,</b> so the cloud <b>computing</b> movement rises. This study describes the types of cloud <b>computing</b> services, {{the similarities and differences}} of cloud <b>computing</b> and grid <b>computing,</b> meanwhile discusses the better aspect of cloud <b>computing</b> than grid <b>computing,</b> and refers the common problems faced to the both <b>computing,</b> and some security issues. Key words: Cloud <b>computing,</b> grid <b>computing,</b> service...|$|R
40|$|The {{development}} of computer industry is {{promoted by the}} progress of distributed <b>computing,</b> parallel <b>computing</b> and grid <b>computing,</b> so the cloud <b>computing</b> movement rises. This study describes the types of cloud <b>computing</b> services, {{the similarities and differences}} of cloud <b>computing</b> and grid <b>computing,</b> meanwhile discusses the better aspect of cloud <b>computing</b> than grid <b>computing,</b> and refers the common problems faced to the both <b>computing,</b> and some security issues...|$|R
2500|$|... {{scientific}} <b>computing,</b> including cluster <b>computing</b> and grid <b>computing</b> {{and various}} volunteer <b>computing</b> projects (see {{the list of}} distributed <b>computing</b> projects), ...|$|R
5|$|Excel {{models are}} {{available}} that <b>compute</b> constant elasticity, and use non-constant elasticity to estimate prices that optimize revenue or profit for one product or several products.|$|E
5|$|Given the {{importance}} of snowmelt to agriculture, hydrological runoff models that include snow in their predictions address the phases of accumulating snowpack, melting processes, and distribution of the meltwater through stream networks and into the groundwater. Key to describing the melting processes are solar heat flux, ambient temperature, wind, and precipitation. Initial snowmelt models used a degree-day approach that emphasized the temperature difference between {{the air and the}} snowpack to <b>compute</b> snow water equivalent, SWE. More recent models use an energy balance approach that take into account the following factors to <b>compute</b> Qm, the energy available for melt. This requires measurement of an array of snowpack and environmental factors to <b>compute</b> six heat flow mechanisms that contribute to Qm.|$|E
5|$|In mathematics, {{particularly}} {{algebraic topology}} and homology theory, the Mayer–Vietoris sequence is an algebraic tool to help <b>compute</b> algebraic invariants of topological spaces, known as their homology and cohomology groups. The result {{is due to}} two Austrian mathematicians, Walther Mayer and Leopold Vietoris. The method consists of splitting a space into subspaces, for which the homology or cohomology groups may be easier to <b>compute.</b> The sequence relates the (co)homology groups of the space to the (co)homology groups of the subspaces. It is a natural long exact sequence, whose entries are the (co)homology groups of the whole space, the direct sum of the (co)homology groups of the subspaces, and the (co)homology groups of {{the intersection of the}} subspaces.|$|E
50|$|Generally, {{the task}} {{could be any}} task that is {{performed}} by individual client and used in the various distributed <b>computing</b> environment such as social <b>computing,</b> volunteer <b>computing,</b> and edge <b>computing,</b> grid <b>computing,</b> or utility <b>computing.</b> Collaborative task in social <b>computing</b> is one example.|$|R
40|$|Grid <b>computing</b> enlarge with <b>computing</b> {{platform}} {{which is}} collection of heterogeneous <b>computing</b> resources {{connected by a}} network across dynamic and geographically dispersed organization to form a distributed high performance <b>computing</b> infrastructure. Grid <b>computing</b> solves the complex <b>computing</b> problems amongst multiple machines. Grid <b>computing</b> solves the large scale computational demands in a high performance <b>computing</b> environment. In this paper we study about Grid Computing,its needs,services, and security issues in Grid <b>Computing</b> and solutions for security issues in Grid <b>Computing...</b>|$|R
50|$|Parallel <b>computing</b> {{focuses on}} {{improving}} {{the performance of}} the computers/algorithms through the use of several <b>computing</b> elements (such as processing elements). The <b>computing</b> speed is improved by using several <b>computing</b> elements. Parallel <b>computing</b> is an extension of conventional sequential <b>computing.</b> However, in lateral <b>computing,</b> the problem is solved using unconventional information processing whether using a sequential or parallel <b>computing.</b>|$|R
5|$|In {{order to}} <b>compute</b> the curve-shortening flow efficiently, both a {{continuous}} curve and the continuous {{evolution of the}} curve {{need to be replaced}} by a discrete approximation.|$|E
5|$|Since that time, the {{proliferation}} of modern high-speed desktop computers {{has made it possible}} for amateurs, with the right hardware, to <b>compute</b> trillions of digits of e.|$|E
5|$|Studies by Wehner in the Sahara desert ant (Cataglyphis bicolor) {{demonstrate}} effective path integration {{to determine}} directional heading (by polarized light or sun position) and to <b>compute</b> distance (by monitoring leg movement or optical flow).|$|E
50|$|Lateral <b>computing</b> is a {{fuzzy set}} of all <b>computing</b> {{techniques}} which use unconventional <b>computing</b> approach. Hence Lateral <b>computing</b> includes those techniques which use semi-conventional or hybrid <b>computing.</b> The degree of membership for lateral <b>computing</b> techniques {{is greater than}} 0 in the fuzzy set of unconventional <b>computing</b> techniques.|$|R
5000|$|WG 3: Cloud <b>Computing</b> (CC) standards: define cloud <b>computing</b> {{vocabulary}} and reference architecture, including general concepts {{and characteristics of}} Cloud <b>Computing,</b> types of Cloud <b>Computing,</b> components of Cloud <b>Computing,</b> and Cloud <b>Computing</b> roles and actors. The standards also: ...|$|R
40|$|Through the 1990 s to 2012 the {{internet}} {{changed the world}} of <b>computing</b> drastically. It started its journey with parallel <b>computing</b> after it advanced to distributed <b>computing</b> and further to grid <b>computing.</b> And in present scenario it creates a new world which is pronounced as a Cloud <b>Computing</b> [1]. These all three terms have different meanings. Cloud <b>computing</b> is based on backward <b>computing</b> schemes like cluster <b>computing,</b> distributed <b>computing,</b> grid <b>computing</b> and utility <b>computing.</b> The basic concept of cloud <b>computing</b> is virtualization. It provides virtual hardware and software resources to various requesting programs. This paper gives a detailed description about cluster <b>computing,</b> grid <b>computing</b> and cloud <b>computing</b> and gives an insight of some implementations of the same. We try to list the inspirations for the advent of all these technologies. We also account for some present scenario faults of grid <b>computing</b> and also discuss new cloud <b>computing</b> projects which are being managed by the Government of India for learning. The paper also reviews the existing work and covers (analytically), to some extent, some innovative ideas that can be implemented. Comment: 6 page...|$|R
5|$|The (truncated) series {{can be used}} to <b>compute</b> {{function}} values numerically, (often by recasting the polynomial {{into the}} Chebyshev form and evaluating it with the Clenshaw algorithm).|$|E
5|$|The first {{formulation}} of a quantum theory describing radiation and matter interaction {{is attributed to}} British scientist Paul Dirac, who (during the 1920s) was able to <b>compute</b> the coefficient of spontaneous emission of an atom.|$|E
5|$|The {{homology}} groups H'i(S'n), with i > n, are all trivial. It therefore {{came as a}} {{great surprise}} historically that the corresponding homotopy groups are not trivial in general. This {{is the case that}} is of real importance: the higher homotopy groups πi(S'n), for i > n, are surprisingly complex and difficult to <b>compute,</b> and the effort to <b>compute</b> them has generated a significant amount of new mathematics.|$|E
50|$|Ubiquitous <b>computing</b> {{touches on}} a wide range of {{research}} topics, including distributed <b>computing,</b> mobile <b>computing,</b> location <b>computing,</b> mobile networking, context-aware <b>computing,</b> sensor networks, human-computer interaction, and artificial intelligence.|$|R
50|$|Edge <b>computing</b> pushes applications, {{data and}} <b>computing</b> power (services) away from {{centralized}} {{points to the}} logical extremes of a network. Edge <b>computing</b> replicates fragments of information across distributed networks of web servers, which may spread over a vast area. As a technological paradigm, edge <b>computing</b> is {{also referred to as}} mesh <b>computing,</b> peer-to-peer <b>computing,</b> autonomic (self-healing) <b>computing,</b> grid <b>computing,</b> and by other names implying non-centralized, nodeless availability.|$|R
40|$|Abstract. Cloud <b>computing</b> {{data centers}} {{can be called}} cloud <b>computing</b> centers. It has put forward newer and higher demands for data centers with the {{development}} of cloud <b>computing</b> technologies. This paper will discuss what are cloud <b>computing</b> data centers, cloud <b>computing</b> data center construction, cloud <b>computing</b> data center architecture, cloud <b>computing</b> data center management and maintenance, and the relationship between cloud <b>computing</b> data centers and clouds...|$|R
5|$|The {{majority}} {{problem is}} the problem of constructing a cellular automaton that, when run on any finite set of cells, can <b>compute</b> the value held by a majority of its cells.|$|E
5|$|This {{model was}} used to <b>compute</b> a set of tables. The method {{comprises}} choosing a depth and time exposure, and calculation the nitrogen partial pressure {{in each of the}} tissue compartments {{at the end of that}} exposure.|$|E
5|$|Titan {{runs the}} Cray Linux Environment, a full version of Linux on the login nodes that users {{directly}} access, but a smaller, more efficient version on the <b>compute</b> nodes.|$|E
40|$|Abstract. This paper {{analyzed}} {{functions of}} the network information system based on trusted <b>computing</b> and trusted <b>computing</b> platform based on cloud <b>computing.</b> Raised the propose to expand the application of trusted <b>computing</b> technology to network information system, {{to meet the needs}} of cloud <b>computing</b> of trusted <b>computing,</b> trusted cloud <b>computing,</b> implement the trusted cloud <b>computing.</b> In our design, will take the Trusted <b>Computing</b> Platform (TCP) as the basis of cloud <b>computing</b> system, provide some important security functions to ensure the communication and data security. Finally put forward the implement methods...|$|R
50|$|Many-task <b>computing</b> (MTC) in {{computational}} science is {{an approach to}} parallel <b>computing</b> that aims {{to bridge the gap}} between two <b>computing</b> paradigms, high-throughput <b>computing</b> (HTC) and high-performance <b>computing</b> (HPC).|$|R
40|$|The paper {{considers}} the conceptual approach for {{organization of the}} vertical hierarchical links between the scalable distributed <b>computing</b> paradigms: Cloud <b>Computing,</b> Fog <b>Computing</b> and Dew <b>Computing.</b> In this paper, the Dew <b>Computing</b> is described and recognized as a new structural layer in the existing distributed <b>computing</b> hierarchy. In the existing <b>computing</b> hierarchy, the Dew <b>computing</b> is positioned as the ground level for the Cloud and Fog <b>computing</b> paradigms. Vertical, complementary, hierarchical division from Cloud to Dew <b>Computing</b> satisfies the needs of high- and low-end <b>computing</b> demands in everyday life and work. These new <b>computing</b> paradigms lower the cost and improve the performance, particularly for concepts and applications such as the Internet of Things (IoT) and the Internet of Everything (IoE). In addition, the Dew <b>computing</b> paradigm will require new programming models that will efficiently reduce the complexity and improve the productivity and usability of scalable distributed <b>computing,</b> following the principles of High-Productivity <b>computing...</b>|$|R
5|$|At the time, {{the general}} method to <b>compute</b> the inverse square root was to {{calculate}} an approximation for , then revise that approximation via another method until it came within an acceptable error {{range of the}} actual result. Common software methods in the early 1990s drew approximations from a lookup table. The key of the fast inverse square root was to directly <b>compute</b> an approximation by utilizing the structure of floating-point numbers, proving faster than table lookups. The algorithm was approximately four times faster than computing the square root with another method and calculating the reciprocal via floating point division. The algorithm was designed with the IEEE 754-1985 32-bit floating point specification in mind, but investigation from Chris Lomont showed {{that it could be}} implemented in other floating point specifications.|$|E
5|$|For certain exponents {{there are}} special ways to <b>compute</b> x'y {{much faster than}} through generic exponentiation. These cases include small {{positive}} and negative integers (prefer x*x over x2; prefer 1/x over x−1) and roots (prefer sqrt(x) over x0.5, prefer cbrt(x) over x1/3).|$|E
25|$|In April 1983 <b>Compute!</b> {{published}} Scriptor, a {{word processor}} written by staff writer Charles Brannon in BASIC and assembly language, as a type-in program for the Atari 8-bit family. In January 1984 version 1.0 of his new word processor SpeedScript appeared in Compute!'s Gazette for the Commodore 64 and VIC-20. 1.1 appeared in Compute!'s Second Book of Commodore 64, 2.0 on Gazette Disk in May 1984, and 3.0 in <b>Compute!</b> in March and April 1985. Corrections that updated 3.0 to 3.1 appeared in May 1985, and the full version appeared in a book published by <b>Compute!,</b> SpeedScript: The Word Processor for the Commodore 64 and VIC-20. A 3.2 update appeared in the December 1985 <b>Compute!</b> and January 1986 <b>Compute!</b> Disk and again later in the May 1987 Compute!'s Gazette issue with three additional utilities.|$|E
40|$|Mobile {{devices such}} as smart mobile phones, {{personal}} digital assistants (PDAs) and other handheld <b>computing</b> devices have become very popular. The early findings {{about the use of}} mobile devices and mobile systems show that the mobile <b>computing</b> environment differs from the traditional desktop environment in significant ways. Several areas of <b>computing,</b> related to mobile devices, have surfaced over the last decade. These areas are said to be distinctively different from one another, yet they appear to overlap. Such areas are mobile <b>computing,</b> nomadic <b>computing,</b> ubiquitous <b>computing,</b> wearable <b>computing</b> and pervasive <b>computing.</b> This paper describes each of these areas of <b>computing</b> and identifies the design issues. The paper furthermore attempts to identify where systems developers should look for guidance for the development of mobile systems. Keywords Mobile <b>computing,</b> nomadic <b>computing,</b> pervasive <b>computing,</b> ubiquitous <b>computing...</b>|$|R
5000|$|Applications of {{parallel}} and distributed <b>computing,</b> including web applications, peer-to-peer <b>computing,</b> grid <b>computing,</b> scientific applications, and mobile <b>computing.</b>|$|R
50|$|QCRI {{is one of}} {{the three}} {{national}} research institutes under Qatar Foundation and specializes in applied <b>computing</b> research. Its research fall into two main categories: core <b>computing</b> and multidisciplinary <b>computing.</b> Within core <b>computing,</b> QCRI specializes in internet <b>computing</b> (with an emphasis on cloud <b>computing</b> and social networking), data analysis, and advanced computer hardware design. Within multidisciplinary <b>computing,</b> QCRI is focused on Arabic language technologies, high performance <b>computing,</b> and bioinformatics.|$|R
