23|73|Public
50|$|The US Navy {{used the}} <b>cryptographic</b> <b>code</b> A-1. The US Navy {{cryptanalysis}} group, OP-20-G, was also started after World War I (in 1922).|$|E
50|$|Another {{long-term}} interesting objective {{would be}} moving the whole <b>cryptographic</b> <b>code</b> {{of the implementation}} to the interface of the user of the browser. This way, the users {{would be capable of}} accessing Twister through any client platform that they use, choosing any third server and still maintaining the security of their private passwords at all times.|$|E
5000|$|Kobeissi {{himself had}} been vocal in the past about other {{services}} using encryption. In a Forbes online article investigating the security of encrypted storage service MEGA, Kobeissi, who voiced concern along with other security researchers, noted: [...] "It's a nice website, {{but when it comes}} to cryptography they seem to have no experience". This made Cryptocat's own vulnerabilities a more high-profile discussion among security researchers. Nevertheless, MEGA eventually adopted Kobeissi's critique and implemented the suggested changes to their <b>cryptographic</b> <b>code</b> delivery methods.|$|E
5000|$|ZZM88 - Cryptography vehicle. Program {{begun in}} July 1984 and entered service in August 1992. Used to provide <b>cryptographic</b> <b>codes</b> for other vehicles.|$|R
40|$|The {{transmission}} of information over the lines inevitably comes up with its protection against eavesdropping, which is a prerequisite. The main method of protecting information from unauthorized access is a <b>cryptographic</b> <b>coding</b> method, {{but it does not}} guarantee full protection of information against interception. Therefore, the relevant issue is the study of information security from technical means, that allow intercepting signals directly in their transmission lines...|$|R
40|$|Abstract — A {{conjugate}} code pair {{is defined}} as a pair of linear codes such that one contains the dual of the other. The conjugate code pair represents the essential structure of the corresponding Calderbank-Shor-Steane (CSS) quantum code. It is argued that conjugate code pairs are applicable to quantum cryptography in order to motivate studies on conjugate code pairs. Index Terms — conjugate <b>codes,</b> quotient <b>codes,</b> <b>cryptographic</b> <b>codes.</b> I...|$|R
50|$|Another way {{in which}} code can be non-isochronous is that modern CPUs have a memory cache: {{accessing}} infrequently used information incurs a large timing penalty, revealing some information about the frequency of use of memory blocks. <b>Cryptographic</b> <b>code</b> designed to resist cache attacks attempts to use memory in only a predictable fashion (such as accessing only the input, outputs and program data, and doing so according to a fixed pattern). For example, data-dependent look-up tables must be avoided because the cache could reveal which part of the look-up table was accessed.|$|E
50|$|An API which fits one {{application}} {{well may}} not work well {{in a different context}} resulting in a proliferation of cryptographic libraries designed for particular applications. Nettle is an attempt to avoid this problem by doing one thing (the low-level cryptography) and providing a simple and general interface to it. In particular, Nettle doesn't do algorithm selection, memory allocation or any I/O. Thus Nettle is intended to provide a core cryptography library upon which numerous application and context specific interfaces can be built. The code, test cases, benchmarks, documentation, etc. of these interfaces can then be shared without having to replicate Nettle's <b>cryptographic</b> <b>code.</b>|$|E
5000|$|The Enigmatic Book of the Netherworld is {{a two-part}} ancient Egyptian funerary text {{inscribed on the}} second shrine of the sarcophagus.The term [...] "enigmatic" [...] here refers {{to the fact that}} it is written in <b>cryptographic</b> <b>code,</b> a New Kingdom {{practice}} also known from the tombs of Ramesses IX and Ramesses V. Its content is therefore not readily available to Egyptology; Coleman (2004) interprets it in terms of the creation and rebirth of the sun. The text is broken into three sections that incorporate other funerary texts, such as the Book of the Dead and the Amduat. The text is notable for containing the first known depiction of the ouroboros symbol, in the form of two serpents (interpreted as manifestations of the deity Mehen) encircling the head and feet of a god, taken to represent the unified Ra-Osiris.|$|E
50|$|Cryptography or <b>cryptographic</b> <b>coding</b> is the {{practice}} and study of techniques for secure communication {{in the presence of}} third parties (called adversaries). More generally, it is about constructing and analyzing protocols that block adversaries; various aspects in information security such as data confidentiality, data integrity, authentication, and non-repudiation are central to modern cryptography. Modern cryptography exists at the intersection of the disciplines of mathematics, computer science, and electrical engineering. Applications of cryptography include ATM cards, computer passwords, and electronic commerce.|$|R
50|$|Daniel J. Bernstein, {{supported}} by the EFF, also sued over the export restrictions, arguing that preventing publication of <b>cryptographic</b> source <b>code</b> is an unconstitutional restriction on freedom of speech. He won, effectively overturning the export law. See Bernstein v. United States for details.|$|R
2500|$|J. R. R. Tolkien {{began to}} {{construct}} his first Elvin tongue c. 1910–1911 {{while he was}} at the King Edward's School, Birmingham and which he later named Quenya (c. 1915). At that time, Tolkien was already familiar with Latin, Greek, Italian, Spanish, and several ancient Germanic languages, Gothic, Old Norse and Old English. He had invented several <b>cryptographic</b> <b>codes</b> (one called Animalic), and two or three constructed languages (one called Naffarin). He then discovered Finnish, which he described many years later as [...] "like discovering a complete wine-cellar filled with bottles of an amazing wine of a kind and flavour never tasted before. It quite intoxicated me." [...] He had started his study of the Finnish language {{to be able to read}} the Kalevala epic.|$|R
5000|$|In [...] "Allegations of PFC Eugene Dinkin", the Mary Farrell Foundation {{summarizes}} and archives documents {{related to}} Private First Class Eugene B. Dinkin, a <b>cryptographic</b> <b>code</b> operator stationed in Metz, France, who went AWOL in early November 1963, entered Switzerland using a false ID, and visited the United Nations' press office and declared that officials in the U.S. government were planning to assassinate President Kennedy, adding that [...] "something" [...] might happen to the Commander in Chief in Texas. Dinkin was arrested nine days before Kennedy was killed, placed in psychiatric care (deemed a mad man?), and released shortly thereafter. His allegations eventually {{made their way to}} the Warren Commission, but, according to the Ferrell Foundation account, the Commission [...] "took no interest in the matter, and indeed omitted any mention of Dinkin from its purportedly encyclopedic 26 volumes of evidence." ...|$|E
5000|$|A <b>cryptographic</b> <b>code</b> called [...] "Mercury" [...] {{was created}} by the National Security Agency and is {{allegedly}} so complex that its creators believe no computer on Earth can decipher it. Originally it was created during the Reagan Administration as a test to keep the United States' highest priority secrets under wraps. One day, the NSA receives a message from a nine-year-old autistic savant with prodigious math abilities named Simon Lynch (Miko Hughes), who calls a telephone number written in the code which was secretly published in a puzzle magazine by two of the creators, Dean Crandell (Robert Stanton) and Leo Pedranski (Bodhi Elfman), to see if anyone could break it. Crandell and Pedranski's division chief, Lt. Colonel Nicholas Kudrow (Alec Baldwin) sees the boy's ability to decipher the code as a grave liability. He dispatches assassin Peter Burrell (Lindsey Lee Ginter) to murder the boy and his parents, Martin (John Carroll Lynch) and Jenny (Kelley Hazen).|$|E
5000|$|As {{tensions}} between the colonies and Britain escalated, Reverend Bidwell took {{the side of the}} patriots. He also often centered his sermons around freedom, penning them in a <b>cryptographic</b> <b>code</b> to disguise the language to potential readers. In 1776, Adonijah Bidwell bore his [...] "full proportion toward... the War" [...] for Independence at age 62. He sold beef to the troops, gave up his salary for four years so they could be paid, and loaned the town an additional ₤60 to pay the soldiers. The debt was never repaid. Despite his fervent patriotism, Adonijah Bidwell hung several portraits of the king in his house. Messengers and soldiers under the king's command would have often stopped by frontier outposts, therefore, pictures were needed to suggest loyalty to the king. Following the American victory, Adonijah died June 2, 1784 at age 68, leaving the farm and 1/3 of his possessions to his eldest son, Adonijah the Younger, as well as 1/3 of his worldly possessions to both Barnabas and widow Ruth.|$|E
500|$|J. R. R. Tolkien {{began to}} {{construct}} his first Elven tongue c. 1910–1911 {{while he was}} at the King Edward's School, Birmingham. He later called it Qenya (c. 1915), and later changed the spelling to Quenya. He was then already familiar with Latin, Greek, Spanish, and several ancient Germanic languages, such as Gothic, Old Norse, and Old English. He had invented several <b>cryptographic</b> <b>codes,</b> and two or three constructed languages. Tolkien took an interest in the Finnish mythology of the Kalevala, then became acquainted with the Finnish language, which he found to provide an aesthetically pleasing inspiration for his High-elven language. Many years later, he wrote: [...] "It was like discovering a complete wine-cellar filled with bottles of an amazing wine of a kind and flavour never tasted before. It quite intoxicated me." [...] Regarding the inspiration for Quenya he wrote that: ...|$|R
40|$|With {{the cloud}} {{becoming}} an ever cheaper, reliable {{and more efficient}} option, companies will be looking to abandon their costly infrastructure and move to an offsite storage system. The only remaining concern is data security. While many people {{have focused on the}} external threats, our research has focused on creating a database that cannot be tampered with. While the service provider hosting the cloud may be trustworthy {{it is impossible to know}} if every employee who has access to the database is. By converting the original database into an Integrity Coded Database (ICDB) all data have corresponding <b>cryptographic</b> <b>codes</b> generated by the user. Anyone other than the user, who alters the database will unable to generate this code. This allows for an automatic check if the data has been tampered with. This research will focus on the most efficient way to implement this in terms of size and speed...|$|R
3000|$|... <b>code.</b> <b>Cryptographic</b> key (K) is {{revocable}} {{and is used}} as {{a session}} key for symmetric cryptography. When the session is over, the current session key is destroyed.|$|R
5000|$|The mass arrests, {{destruction}} of its organization {{and execution of}} some 40-50 leaders following the coup has been said to have [...] "destroyed" [...] the Tudeh. Between 1953 and 1957, Iranian security forces using [...] "brute force, together with {{the breaking of the}} <b>cryptographic</b> <b>code</b> - probably with CIA know-how - … tracked down 4,121 party members." [...] This constituted the whole Tudeh underground and [...] "more than half the party membership". Tudeh infiltration of the military by the TPMO totaled 477 members in the armed forces, [...] "22 colonels, 69 majors, 100 captains, 193 lieutenants, 19 noncommissioned officers, and 63 military cadets." [...] Ervand Abrahamian notes that none of these were in the [...] "crucial tank divisions around Tehran" [...] that could have been used for a coup d'état and which the Shah had screened carefully. [...] "Ironically, a Tudeh colonel had been in charge of the Shah's personal security - {{as well as that of}} Vice President Richard Nixon when he visited Iran. The Tudeh had the opportunity to assassinate the Shah and the U.S. vice president but not to launch a coup." [...] Maziar Behrooz is more optimistic about the party's chances of stopping the coup, saying that while [...] "most of the Tudeh officers were in non-combat posts," [...] they [...] "were in a position to access and distribute weapons. In their memoirs, TPMO high- and middle-ranking members have confirmed their ability to distribute weapons and even to assassinate key Iranian leaders of the coup. Hence, with a disciplined party membership, backed by military officers with access to weapons, the Tudeh had a strong hand." ...|$|E
40|$|Abstract. Identifying {{that a given}} binary program {{implements}} a spe-cific {{cryptographic algorithm}} and finding out {{more information about the}} <b>cryptographic</b> <b>code</b> is an important problem. Proprietary programs and especially malicious software (so called malware) often use cryptography and we {{want to learn more about}} the context, e. g., which algorithms and keys are used by the program. This helps an analyst to quickly under-stand what a given binary program does and eases analysis. In this paper, we present several methods to identify cryptographic prim-itives (e. g., entire algorithms or only keys) within a given binary program in an automated way. We perform fine-grained dynamic binary analysis and use the collected information as input for several heuristics that characterize specific, unique aspects of <b>cryptographic</b> <b>code.</b> Our evalua-tion shows that these methods improve the state-of-the-art approaches in this area and that we can successfully extract cryptographic keys from a given malware binary...|$|E
30|$|Concluding the taxonomy, the {{cryptographic}} attacks try to {{find the}} weaknesses in system analysing the information transmitted. Several cryptographic attacks exist but their objectives are the same: to acquire the cryptographic key, to identify weakness in the algorithms or in the node software. CWSN nodes do not have enough resources to implement a powerful <b>cryptographic</b> <b>code</b> and they are vulnerable to these attacks.|$|E
40|$|It {{has been}} said that “cryptography is about concealing information, and coding theory is about {{revealing}} it. ” Despite these apparently conflicting goals, the two fields have common origins and many interesting relationships. In this thesis, we establish new connections between cryptography and coding theory in two ways: first, by applying cryptographic tools to solve classical problems from the theory of error correction; and second, by studying special kinds of codes that are motivated by cryptographic applications. In {{the first part of this}} thesis, we consider a model of error correction in which the source of errors is adversarial, but limited to feasible computation. In this model, we construct appealingly simple, general, and efficient <b>cryptographic</b> <b>coding</b> schemes which can recover from much larger error rates than schemes for classical models of adversarial noise. In the second part, we study collusion-secure fingerprinting codes, which are of fundamental importance in cryptographic applications like data watermarking and traito...|$|R
40|$|Traditional {{cryptography}} assumes an eavesdropper {{receives an}} error-free {{copy of the}} transmitted ciphertext. Wyner’s wiretap channel model recognizes that at the physical layer both the intended receiver and the passive eavesdropper inevitably receive an error-prone version of the transmitted message which must be corrected prior to decryption. This paper considers the implications of using both channel and <b>cryptographic</b> <b>codes</b> under the wiretap channel model {{in a way that}} enhances the informationtheoretic security for the friendly parties by keeping the information transfer to the eavesdropper small. We consider a secret-key cryptographic system with a linear feedback shift register (LFSR) -based keystream generator and observe the mutual information between an LFSR-generated sequence and the received noise-corrupted ciphertext sequence under a known-plaintext scenario. The effectiveness of a noniterative fast correlation attack, which reduces the search time in a brute-force attack, is shown to be correlated with this mutual information. For an iterative fast correlation attack on this cryptographic system, it is shown that an EXIT chart and mutual information are very good predictors of decoding success and failure by a passive eavesdropper. I...|$|R
40|$|Recently, cloud {{database}} storage {{has become}} an inexpensive and convenient option to store information; however, this relatively new area of service can be vulnerable to security breaches [1]. Storing data in a foreign location requires the owner to relinquish control of their information. This opens the possibility for internal, malicious attacks that can involve the manipulation, omission, or addition of data [2]. Our research tests a potential solution for retaining data as {{it was intended to}} be stored in these cloud databases: by converting the original databases to Integrity Coded Databases (ICDB) [3]. ICDBs utilize Integrity <b>Codes</b> (IC) : <b>cryptographic</b> <b>codes</b> created for the data by a private key that only the data owner has access to. When the database is queried, an integrity code is returned along with the queried information. The owner is able to verify that the information is correct and fresh [3]. Consequently, ICDBs also incur performance and memory penalties. In our research, we explore, test, and benchmark ICDBs to determine {{the costs and benefits of}} maintaining an ICDB versus a standard database. Objective...|$|R
40|$|This book covers {{everything}} you need to know to write professional-level <b>cryptographic</b> <b>code.</b> This expanded, improved second edition includes about 100 pages of new material as well as numerous improvements to the original text. The chapter about random number generation has been completely rewritten, and the latest cryptographic techniques are covered in detail. Furthermore, this book covers the recent improvements in primality testing...|$|E
40|$|Abstract This paper {{discusses}} {{the problem of}} how to make use of a secret with-out publishing the source. The point of the departure is the so-called Zimmermann Telegram which, at least to some extent, motivated the U. S. A. to join the Allies in the war against Imperial Germany. The paper analyzes how Admiral Hall, Director of British Naval Intelligence, managed to convince the US Government that he can read the Telegram, written in <b>cryptographic</b> <b>code,</b> without letting everybody, including the Germans, know that his department can decipher the German code. A game theoretic model is presented which supports the historical analysis...|$|E
40|$|Testing {{cryptographic}} implementations {{for side}} channel leakage {{is a difficult}} and im-portant problem. The techniques used to uncover side channel leakage are more involved than the usual methodologies of software testing, for example sometimes involving phys-ical measurements of hardware. As such, {{it is difficult to}} work this sort of analysis into the usual software testing process. To this end we have developed the side channel pro-filer. This is an extensible framework for capturing dynamic execution of <b>cryptographic</b> <b>code</b> and applying side channel analysis regardless of underlying architecture. This tool can be used to selectively emulate different hardware components, or apply other side channel leakage criteria. We also demonstrate how the tool can be used to analyze an implementation of näıve square and multiply modular exponentiation. ...|$|E
50|$|Poly1305 is a <b>cryptographic</b> message {{authentication}} <b>code</b> (MAC) created by Daniel J. Bernstein. It {{can be used}} to verify the data integrity and the authenticity of a message. It has been standardized in RFC 7539.|$|R
50|$|The Data Authentication Algorithm (DAA) is {{a former}} U.S. {{government}} standard for producing <b>cryptographic</b> message authentication <b>codes.</b> DAA is defined in FIPS PUB 113, which was withdrawn on September 1, 2008. The algorithm is not considered secure by today's standards.|$|R
40|$|The {{security}} of much critical infrastructure depends {{in part on}} <b>cryptographic</b> software <b>coded</b> in C, and yet vulnerabilities continue to be discovered in such software. We describe recent progress on checking the {{security of}} C <b>code</b> implementing <b>cryptographic</b> software. In particular, we describe projects that combine verification-condition generation and symbolic execution techniques for C, with methods for stating and verifying security properties of abstract models of cryptographic protocols. We illustrate these techniques on C code for a simple two-message protocol...|$|R
40|$|Let D be {{a public}} on-line {{database}} that is maintained by a party who is possibly not completely trustworthy. We study cryptographic techniques preventing the party (1) from undetectably modifying the content of D, and (2) from giving contradictory answers to the same query q, after a relatively short cryptographic digest d of D is made public. Previous work by Buldas, Laud and Lipmaa gives efficient solution for queries that require the answer Yes or No. The goal {{of this paper is}} to widen the scope of their techniques and cover much more complex types of queries. We present efficient methods for the queries that return a list of consecutive records as the reply. We show that the amount of additional <b>cryptographic</b> <b>code</b> that must be included into the answer can still remain quite small...|$|E
40|$|Formal {{verification}} of cryptographic software implementations poses significant challenges for off-the-shelf tools. This {{is due to}} the domain-specific characteristics of the code, involving aggressive optimisations and non-functional security requirements, namely the critical aspect of countermeasures against side-channel attacks. In this paper we extend previous results supporting the practicality of self-composition proofs of non-interference and generalisations thereof. We tackle the formal {{verification of}} high-level security policies adopted in the implementation of the recently proposed NaCl cryptographic library. We formalize these policies and propose a formal verification approach based on self-composition, extending the range of security policies that could previously be handled using this technique. We demonstrate our results by addressing compliance with the NaCl security policies in real-world <b>cryptographic</b> <b>code,</b> highlighting the potential for automation of our techniques. Fundação para a Ciência e a Tecnologia (FCT...|$|E
40|$|The {{success of}} the {{cryptographic}} technique during World War II in decoding enemy ciphers holds an enduring impact on archaeologists working on decoding ancient scripts. The con-viction to break open any code, in theory, employing scientific methods, mathematical formulae and computers, {{gives rise to a}} cryptographic imagination. This epistemological articulation apprehends the ancient script as a military cryptogram that could be cracked through scientific intervention. I examine cryptographic imagination within the decipherment of the Indus Script—the unknown script of the third millennium BCE Indus civilisation in South Asia. I specifically examine the decipherment attempts of the Finnish and the Russian teams during 1960 s and 70 s. By analysing the Finnish and Russian decipherment attempts, I argue that cryptographic imagination involves an epistemological shift of conceptualising unknown archaeological script from an epigraphic representation to a <b>cryptographic</b> <b>code...</b>|$|E
40|$|Current {{state of}} technology: Draft {{standard}} CEN prENV 12253 for dedicated transponder technology in preparation. Intended use is electronic free collection and other RTTT applications. Can {{not be used}} due to the requested high communication range and the requested high resistance against fraud. Reason for / Goals of Project: Design, development, fabrication, test and verification of a dedicated wireless short range data link to be used in combination with the digital tachography system EFS 2000. Approach: Starting with the knowledge of military projects, totally new development of the complete system including OSI layers 1, 2 and 7. Adjustments of an existing microwave modem. Design, development and implementation of algorithms for <b>cryptographic</b> <b>coding</b> and electronic signature. Fabrication and test of prototype. Small field trial. Results: Demonstrator with full functionality and performance according to specification. Exploitation / Further Actions: Demonstration of functionality possible. Development towards zero-series requested for big field trial. Additional modifications to improve performance and functionality are defined. The field trial must be followed by development for final series. Can be used as intended for the digital tachograph system EFS 2000. (orig.) SIGLEAvailable from TIB Hannover: F 98 B 329 +a / FIZ - Fachinformationszzentrum Karlsruhe / TIB - Technische InformationsbibliothekBundesministerium fuer Bildung, Wissenschaft, Forschung und Technologie, Bonn (Germany) DEGerman...|$|R
40|$|It {{has been}} said that "cryptography is about concealing information, and coding theory is about {{revealing}} it. " Despite these apparently conflicting goals, the two fields have common origins and many interesting relationships. In this thesis, we establish new connections between cryptography and coding theory in two ways: first, by applying cryptographic tools to solve classical problems from the theory of error correction; and second, by studying special kinds of codes that are motivated by cryptographic applications. In {{the first part of this}} thesis, we consider a model of error correction in which the source of errors is adversarial, but limited to feasible computation. In this model, we construct appealingly simple, general, and efficient <b>cryptographic</b> <b>coding</b> schemes which can recover from much larger error rates than schemes for classical models of adversarial noise. In the second part, we study collusion-secure fingerprinting codes, which are of fundamental importance in cryptographic applications like data watermarking and traitor tracing. We demonstrate tight lower bounds on the lengths of such codes by devising and analyzing a general collusive attack that works for any code. by Christopher Jason Peikert. Thesis (Ph. D.) [...] Massachusetts Institute of Technology, Dept. of Electrical Engineering and Computer Science, 2006. Includes bibliographical references (leaves 67 - 71) ...|$|R
40|$|The {{number of}} steps any {{classical}} computer requires {{in order to find}} the prime factors of an $l$-digit integer $N$ increases exponentially with $l$, at least using algorithms known at present. Factoring large integers is therefore conjectured to be intractable classically, an observation underlying the security of widely used <b>cryptographic</b> <b>codes.</b> Quantum computers, however, could factor integers in only polynomial time, using Shor's quantum factoring algorithm. Although important for the study of quantum computers, experimental demonstration of this algorithm has proved elusive. Here we report an implementation of the simplest instance of Shor's algorithm: factorization of ${N= 15 }$ (whose prime factors are 3 and 5). We use seven spin- 1 / 2 nuclei in a molecule as quantum bits, which can be manipulated with room temperature liquid state nuclear magnetic resonance techniques. This method of using nuclei to store quantum information is in principle scalable to many quantum bit systems, but such scalability is not implied by the present work. The significance of our work lies in the demonstration of experimental and theoretical techniques for precise control and modelling of complex quantum computers. In particular, we present a simple, parameter-free but predictive model of decoherence effects in our system. Comment: accepted versio...|$|R
