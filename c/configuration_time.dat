152|851|Public
25|$|Starting {{with the}} Mono 2.7 preview, {{it is no}} longer {{necessary}} to pick one engine over the other at <b>configuration</b> <b>time.</b> The code generation engine can be selected at startup by using the --llvm or --nollvm command line arguments, and it defaults to the fast Mono code generation engine.|$|E
5000|$|F to {{make the}} kernel open the binary at <b>configuration</b> <b>time</b> instead of lazily at startup time, {{so that it is}} {{available}} inside other mount namespaces and chroots as well.|$|E
5000|$|Configuration-driven design: Many {{technical}} {{decisions about}} the application behavior can be delayed until <b>configuration</b> <b>time</b> of the application. For instance, if an application does not properly handle an exception, instead of adding another exception handler to the code, an administrator can configure an additional exception handling policy.|$|E
30|$|Several {{effective}} but suboptimal simplifications {{can also}} be made. One is that the CPU frequency of all applications running {{at a particular time}} can be set to the same value. By doing so, we reduce the search space to only the cross product of the application <b>configurations,</b> <b>times</b> the number of CPU frequencies, with an increase in power consumption that is bounded by Jensen's inequality to the difference between two adjacent frequency steps.|$|R
40|$|A {{numerical}} {{method for}} solving the isenthalpic {{form of the}} governing equations for compressible inviscid flows is developed. The method {{is based on the}} concept of flux vector splitting in its implicit form and is tested on several demanding <b>configurations.</b> <b>Time</b> marching to steady state is accelerated by the implementation of the multigrid procedure which very effectively increases the rate of convergence. Steady-state results are obtained for various test cases. Only short computational times are required due to the relative efficiency of the basic method...|$|R
50|$|In many {{nonlinear}} field theories like {{general relativity}} or Yang-Mills theories, the basic field equations are highly nonlinear and exact solutions are only known for ‘sufficiently symmetric’ distributions of matter (e.g. rotationally or axially symmetric <b>configurations).</b> <b>Time</b> translation symmetry is guaranteed only in spacetimes where the metric is static: that is, {{where there is}} a coordinate system in which the metric coefficients contain no time variable. Many general relativity systems are not static in any frame of reference so no conserved energy can be defined.|$|R
5000|$|Starting {{with the}} Mono 2.7 preview, {{it is no}} longer {{necessary}} to pick one engine over the other at <b>configuration</b> <b>time.</b> The code generation engine can be selected at startup by using the [...] or [...] command line arguments, and it defaults to the fast Mono code generation engine.|$|E
5000|$|On most UNIX-like {{operating}} systems a Time Protocol server {{is built into}} the inetd (or xinetd) daemon. The service is usually not enabled by default. It may be enabled by adding the following lines to the file /etc/inetd.conf and reloading the <b>configuration.</b> <b>time</b> stream tcp nowait root internal time dgram udp wait root internal ...|$|E
50|$|In RT-11, device {{drivers were}} loadable, except {{that prior to}} V4.0 the device driver for the system device (boot device) was built into the kernel at <b>configuration</b> <b>time.</b> Because RT-11 was {{commonly}} used for device control and data acquisition, it was common for developers to write or enhance device drivers. DEC encouraged such driver development by making their hardware subsystems (from bus structure to code) open, documenting the internals of the operating system, encouraging third-party hardware and software vendors, and by fostering {{the development of the}} Digital Equipment Computer Users Society.|$|E
2500|$|Similarly, one can {{divide the}} sum over all {{partition}} function configurations into slices, where each slice is the one-dimensional <b>configuration</b> at <b>time</b> 1. This defines the transfer matrix: ...|$|R
5000|$|The {{reversed}} time {{dynamics of}} a second-order automaton may be described by another second-order automaton {{with the same}} neighborhood, in which the function [...] mapping neighborhoods to permutations gives the inverse permutation to [...] That is, on each possible neighborhood , [...] and [...] should be inverse permutations. With this reverse rule, the automaton described by function [...] correctly computes the <b>configuration</b> at <b>time</b> [...] from the <b>configurations</b> at <b>time</b> [...] and [...] Because every second-order automaton can be reversed in this way, it follows {{that they are all}} reversible cellular automata, regardless of which function [...] is chosen to determine the automaton rule.|$|R
50|$|The first {{bill that}} was scrutinised by the Committee was the Housing and Planning Act 2016, which had its second reading on 2 November 2015. Between October 2015 and December 2016, the {{committee}} met 15 times. Seven times in the England only <b>configuration,</b> seven <b>times</b> in the England and Wales configuration and once in the England, Wales and Northern Ireland <b>configuration.</b> The total <b>time</b> accumulated by sittings of the committee is one hour and twenty three minutes.|$|R
50|$|The term template, {{when used}} {{in the context of}} word {{processing}} software, refers to a sample document that has already some details in place; those can be adapted (that is added/completed, removed or changed, differently from a fill-in-the-blank approach as in a form) either by hand or through an automated iterative process, such as with a software assistant. Oncethe template is completed, the user can edit, save and manage the result asan ordinary word processing document. Word processing templates enable the ability to bypassthe initial setup and <b>configuration</b> <b>time</b> necessary to create standardizeddocuments such as a resume. They also enable the automatic configuration of the user interface of the word processing software, with features such as autocompletion,toolbars, thesaurus, and spelling options.|$|E
50|$|Configuration {{of these}} {{reconfigurable}} systems can happen at deployment time, between execution phases or during execution. In a typical reconfigurable system, a bit stream {{is used to}} program the device at deployment time. Fine grained systems by their own nature require greater <b>configuration</b> <b>time</b> than more coarse-grained architectures due to more elements needing to be addressed and programmed. Therefore, more coarse-grained architectures gain from potential lower energy requirements, as less information is transferred and utilised. Intuitively, the slower the rate of reconfiguration the smaller the energy consumption as the associated energy cost of reconfiguration are amortised {{over a longer period}} of time. Partial re-configuration aims to allow part of the device to be reprogrammed while another part is still performing active computation. Partial re-configuration allows smaller reconfigurable bit streams thus not wasting energy on transmitting redundant information in the bit stream. Compression of the bit stream is possible but careful analysis is to be carried out to ensure that the energy saved by using smaller bit streams is not outweighed by the computation needed to decompress the data.|$|E
3000|$|In {{order to}} {{validate}} the accuracy of our model and assess the performance of our solution, we performed the following experiments. We evaluated the <b>configuration</b> <b>time</b> [...]...|$|E
30|$|The method {{we propose}} {{in this paper}} is much simpler in that it {{eliminates}} the necessity of considering new models and the complexity of implementing them. Moreover, our approach requires a one <b>time</b> <b>configuration</b> and unlimited <b>times</b> of repetitive usage, {{which is much more}} advantageous than approaches which have to alter their design for different algorithms.|$|R
25|$|If MH {{is indeed}} metastable, {{then it would}} {{theoretically}} make a very effective explosive in the right <b>configuration,</b> 38 <b>times</b> more powerful than RDX, and ideal for replacing the shaped charges used in a conventional warhead.|$|R
50|$|This temple {{remains largely}} in its {{original}} <b>configuration</b> since the <b>time</b> it was founded.|$|R
40|$|Abstract. This paper {{discusses}} {{the influence of}} setup message processing time and optical switch <b>configuration</b> <b>time</b> {{on the performance of}} IP over optical burst switched mesh networks using one-way resource reservation protocols. It is shown that the network performance is almost independent of the optical switch <b>configuration</b> <b>time</b> for values smaller than 0. 1 ms. It is shown that setup message processing time does not {{have a significant impact on}} the network performance and it is shown that the five resource reservation protocols under study have a similar performance in both ring and mesh networks. ...|$|E
40|$|Molecular electronics-based {{devices are}} assumed to include at least 10 10 gate-equivalents/cm 2 and defect densities as high as 10 %; novel test {{strategies}} are necessary to efficiently test and diagnose these nanoscale devices. <b>Configuration</b> <b>time,</b> test time and defect map size are among the major challenges for these new devices. In this paper, we propose a new approach that simultaneously configures and tests nano devices. A new built-in self-test (BIST) scheme for testing and defect tolerance of nanoscale devices is proposed. The proposed procedure is based on testing reconfigurable nanoblocks {{at the time of}} implementing a function of a desired application on that block. This simultaneous configuration and test (SCT) procedure considerably reduces the test and <b>configuration</b> <b>time.</b> It also eliminates the need for storing the location of the defects in the defect map on/off-chip. The presented probabilistic analyses results show the effectiveness of this process in terms of test and <b>configuration</b> <b>time</b> for architectures with rich interconnect resources. I...|$|E
30|$|Both Fig.  9 a and b present {{very similar}} patterns: When the error {{probability}} is low (e.g., 0.05 − 0.20), a minimal number of script executions occur and the <b>configuration</b> <b>time</b> remains {{very close to}} the <b>configuration</b> <b>time</b> witnessed to the error-free (i.e., p= 0) case. However, when p increases one can observe that both the mean and the standard deviation values rapidly increase. This is attributed to the fact that achieving error-free execution becomes exponentially more difficult, since the execution of a deployment script requires the successful execution of all the scripts it depends on and, hence, much more script executions and time is needed in order to achieve this. Moreover, the two plots also showcase that an increase in p has a greater impact on more complex deployment graphs: Indeed, Hadoop presents a faster increase both {{in terms of the number}} of Script Executions and the respective <b>configuration</b> <b>time</b> it requires to be deployed, since it presents more dependencies (Fig.  6) than Wordpress (Fig.  3) and, hence, is more susceptible to script re-executions when errors appear more frequently.|$|E
5000|$|Peripheral device {{configuration}} {{was fixed}} during boot <b>time.</b> <b>Configuration</b> {{changes were made}} using the [...] command.|$|R
30|$|Thus, in this work, we {{investigated}} {{a chain of}} N identical two-level long distanced atoms prepared ‘via a single-photon Fock state’. The functional dependence of the atomic state amplitudes on a space <b>configuration</b> and <b>time</b> is derived in the Weiskopf-Wiegner approximation.|$|R
50|$|For {{deformation}} analysis, {{the reference}} configuration {{is identified as}} undeformed configuration, and the current configuration as deformed <b>configuration.</b> Additionally, <b>time</b> is not considered when analyzing deformation, thus the sequence of configurations between the undeformed and deformed configurations are of no interest.|$|R
40|$|We {{present a}} tool for {{benchmarking}} the HLT application of the LHCb experiment. This tool measures the time between state changes of the components and allows the user to automatize this process. It is {{a useful tool for}} evaluating future upgrades of the HLT farm and for optimizing its <b>configuration</b> <b>time...</b>|$|E
40|$|Abstract—Dynamic parital {{reconfigurable}} FPGAs {{offer new}} design {{space with a}} variety of benefits: reduce the <b>configuration</b> <b>time</b> and save memory as the partial reconfiguration files (bitstreams) are smaller than full ones. This paper introduces a simple reconfigurable system and focuses on the advantages of the newest dynamic partial reconfiguration design flow...|$|E
40|$|International audienceOverlays are {{reconfigurable}} architectures synthesizedon commercial of {{the shelf}} (COTS) FPGAs. Overlaysbrings some advantages such as portability, resource abstraction,fast <b>configuration</b> <b>time,</b> and can exhibit featuresindependent from the host FPGA. This work presents thedesign of a fine-grained overlay, and the implementationof novel features easing the management of such architecturesin a datacenter infrastructure...|$|E
40|$|With {{passing over}} the 1 M LUT barrier, FPGA {{technology}} is heading into new challenges and opportunities. While the present ASIC-like design methodology and tools will struggle to scale with such huge devices, providing partial run-time reconfiguration will be become obligatory {{for dealing with}} long <b>configuration</b> <b>times</b> and the increasing vulnerability to single event upsets. Within the COSRECOS project, we address these issues by developing methods and tools that allow to compose systems rapidly by plugging together fully physically implemented components. Moreover, by allowing a hot-swapping of such components, the tremendous advantages of partial run-time reconfiguration can be utilized. This talk will give an overview of recent trends, our present research activities, and will discuss open issues...|$|R
40|$|Modern {{manufacturing}} systems {{require a}} transformation from mass production towards mass customization. This {{results in a}} trend towards more agile production lines. This demands reduction of <b>configuration</b> <b>times</b> when building the production line as well as faster reconfiguration when adding new hardware and product variants to the manufacturing line. This paper introduces {{the concept of a}} device adapter that allows the device to be seamlessly plugged into the agile production systems. The device adapter wraps the device functionality and offers it as a service, hiding away the low-level process capability (skill) implementation and allowing to formally represent the production steps. Preliminary tests have been performed on an industrial demonstrator that simulates real manufacturing process...|$|R
50|$|It {{makes use}} of cdebconf (a reimplementation of debconf in C) to perform <b>configuration</b> at install <b>time.</b>|$|R
3000|$|... (2) Runtime. Every time {{a service}} {{receives}} a packet, a callback function is executed {{to process the}} data. Titan provides the service with the state information it has set up during the <b>configuration</b> <b>time.</b> Services are executed in the sequence they receive a packet, and each service runs to completion before the next service can start.|$|E
30|$|The {{minimum time}} scale of {{consecutive}} configuration {{changes of the}} approach described in Section 2.1. 1 is 640 ms. It is a relatively long time period for a modern communication system, and thus technical report (TR) 36.828 discusses three additional approaches that would enable shorter reconfiguration timescales. A shorter <b>configuration</b> <b>time</b> can provide better adaptivity for traffic variations.|$|E
3000|$|One {{option that}} highly impacts AURA’s {{behavior}} for error identification is the timeout period used for detecting errors. As described previously, the default value equals 1 min. However, when comparing this interval {{with the actual}} <b>configuration</b> <b>time</b> for both applications depicted in Fig.  7, one can notice that 60 s is a sizeable portion of the entire <b>configuration</b> <b>time.</b> Hence, it can produce slow reactions to errors. To this end, and after experimenting with different values, we concluded that a good approximation of the best timeout interval equals 25 %×real deployment time/ no. scripts/module. Intuitively, the fractional part represents the “mean deployment time per script”, as if the deployment time was uniformly distributed to all scripts of the module with the most scripts. The percentage indicates the portion of this “mean deployment time” that AURA should wait before checking for errors. In our case, 25 [...]...|$|E
5000|$|The Great Western Society {{is working}} on a replica of a 4-6-0 Saint class locomotive. Some of these ran as Atlantic 4-4-2s for {{comparative}} purposes and it was planned that the replica would also run in an Atlantic wheel <b>configuration</b> from <b>time</b> to time.|$|R
40|$|PCBs {{continue}} {{to become more}} complex each year with higher ball count BGA devices, larger memories and larger FPGAs. IEEE Std. 1149. 1 {{has been instrumental in}} meeting the challenge of testing complex digital assemblies and maintaining high fault coverage. The complexity, however, has also caused test times using IEEE 1149. 1 to increase since it is a serial protocol. Modern PCBs can now take three to six minutes to test and configure. These long test times have a direct influence on the test cost of a product. This paper describes an enhancement to IEEE 1149. 1, called Concurrent JTAG that can be designed into an IC, PCB or System to reduce test and <b>configuration</b> <b>times.</b> Case studies are provided with test time reduction results...|$|R
40|$|The {{configuration}} phase {{for a new}} {{machine design}} is expensive and time consuming for special purpose machine manufacturers. This papers presents a modelling approach that can aid such companies reduce the <b>configuration</b> phase <b>time</b> and its respective costs. The approach is demonstrated with an industrial case study...|$|R
