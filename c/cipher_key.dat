110|392|Public
5|$|The {{capture of}} the code books proved to provide a {{significant}} advantage for the Royal Navy. The Admiralty had recently created a deciphering department known as Room 40 to process intercepted German wireless signals. With the code books and <b>cipher</b> <b>key,</b> the British were able to track the movements of most German warships; this information could {{be passed on to}} the Admiral John Jellicoe, the commander of the Grand Fleet. This allowed the British to ambush parts of or the entire German fleet on several occasions, most successfully at the Battles of Dogger Bank in January 1915 and Jutland in May 1916.|$|E
2500|$|Marks was conscripted in January 1942, {{and trained}} as a cryptographer; {{apparently}} he demonstrated the ability to complete one week's work in [...] decipherment exercise in a few hours. Unlike {{the rest of his}} intake, who were sent to the main British codebreaking centre at Bletchley Park, Marks was regarded as a misfit and he was assigned the newly formed Special Operations Executive in Baker Street, which was set up to train agents to operate behind enemy lines in occupied Europe and to assist local resistance groups. SOE has been described as [...] "a mixture of brilliant brains and bungling amateurs". [...] Marks wrote that he had an inauspicious arrival at SOE when it took him all day to decipher a code he had been expected to finish in 20 minutes, because, not atypically, SOE had forgotten to supply the <b>cipher</b> <b>key.</b>|$|E
2500|$|Amongst {{the papers}} {{captured}} on the Abbas was the <b>cipher</b> <b>key</b> Gordon used to code his messages {{in and out}} of Khartoum, which meant he could no longer read the messages he received, leading him to write in his diary: [...] "I think cipher-messages are in some countries, like this, a mistake". During this period, Gordon was lionized by the British press, which portrayed him as a latter-day Christian [...] "knight", a [...] "crusader" [...] and a [...] "saint", a man of pure good, heroically battling the Mahdi, who was depicted as a man of pure evil. The Pall Mall Gazette in a front page leader wrote that Gordon stood [...] "out in clear relief against the Eastern sky. Alone in a black continent, dauntless and unfaltering, he discharges his great trust, holding the capital of the Sudan against the beleaguering hordes". The defenses Gordon had built with lines of earthwork, mines, and barbed wire presented the Ansar with much difficulty and their attempts to storm Khartoum failed, but the Ansar made good use of their Krupp artillery to gradually batter down the defenses. To counter Gordon's armored streamers, the Mahdi built a series of forts along the Nile equipped with Krupp guns that over time proceeded to make it almost impossible for Gordon's navy to operate.|$|E
50|$|In contrast, the {{security}} of ciphers is generally dependent on protecting the <b>cipher</b> <b>keys.</b> <b>Cipher</b> <b>keys</b> can be stolen and people can betray them, but they are much easier to change and distribute.|$|R
50|$|The Hasty Pudding <b>cipher's</b> <b>key</b> setup {{was rated}} as {{relatively}} slow; 120000 cycles on a Pentium.|$|R
50|$|Note {{that this}} {{transaction}} always {{occurs in the}} clear, since the <b>ciphering</b> <b>key</b> is not established until after the transaction is started.|$|R
5000|$|<b>Cipher</b> <b>key</b> agreement: {{the mobile}} {{station and the}} network agree on a <b>cipher</b> <b>key</b> that they may use.|$|E
50|$|The <b>cipher</b> <b>key</b> length (keySize) can be {{selected}} for ciphers that support variable key lengths.|$|E
5000|$|... 2006 - [...] "This is the <b>cipher</b> <b>key</b> for {{all that}} follows: |||||| || |!" [...] (P. Scott Hamilton) ...|$|E
5000|$|Section IIc: Its {{areas of}} concern were development, {{production}} and distribution of cipher material, <b>cipher</b> systems, <b>cipher</b> <b>keys</b> and all necessary operational aids.|$|R
5000|$|The fictional 2000 U.S. war film U-571 has no {{relation}} to this U-boat, but is very loosely based on the British capture of [...] and her Enigma and <b>cipher</b> <b>keys.</b>|$|R
5000|$|Both the MS and {{the network}} also compute a 64-bit <b>{{ciphering}}</b> <b>key,</b> Kc, from RAND and Ki using the A8 algorithm. Kc = A8(RAND,Ki). Both parties save this value for later use when ciphering is enabled.|$|R
5000|$|Using the Pigpen <b>cipher</b> <b>key</b> above, {{the message}} [...] "X MARKS THE SPOT" [...] is {{rendered}} in ciphertext as: ...|$|E
5000|$|KeyExpansions—round {{keys are}} derived from the <b>cipher</b> <b>key</b> using Rijndael's key schedule. AES {{requires}} a separate 128-bit round key block for each round plus one more.|$|E
5000|$|Zygalski sheets: invented about October 1938 by Henryk Zygalski {{and called}} [...] "perforated sheets" [...] by the Poles, they made {{possible}} {{the recovery of the}} Enigma's entire <b>cipher</b> <b>key.</b>|$|E
40|$|Abstract—Key {{management}} {{represents a}} major {{and the most}} sensitive part of cryptographic systems. It includes key generation, key distribution, key storage, and key deletion. It is also considered {{the hardest part of}} cryptography. Designing secure cryptographic algorithms is hard, and keeping the keys secret is much harder. Cryptanalysts usually attack both symmetric and public key cryptosystems through their key management. We introduce a protocol to exchange <b>cipher</b> <b>keys</b> over insecure communication channel. This protocol is based on public key cryptosystem, especially elliptic curve cryptosystem. Meanwhile, it tests the <b>cipher</b> <b>keys</b> and selects only the good keys and rejects the weak one. Keywords—Key management and key distribution. I...|$|R
5000|$|The running <b>key</b> <b>cipher,</b> {{where the}} <b>key</b> is made very long {{by using a}} passage from a book or similar text.|$|R
40|$|Hermes 8 [6, 7] {{is one of}} {{the stream}} ciphers {{submitted}} to the ECRYPT Stream Cipher Project (eSTREAM [3]). In this paper we present an analysis of the Hermes 8 stream ciphers. In particular, we show an attack on the latest version of the cipher (Hermes 8 F), which requires very few known keystream bytes and recovers the <b>cipher</b> secret <b>key</b> in less than a second on a normal PC. Furthermore, we make some remarks on the <b>cipher's</b> <b>key</b> schedule and discuss some properties of ciphers with similar algebraic structure to Hermes 8...|$|R
50|$|In {{cryptography}} key feedback mode (KFB) is a mode {{of operation}} for cryptographic block ciphers. It uses the block cipher output block to form the block <b>cipher</b> <b>key</b> of the next round, thereby creating a keystream generator {{that can be used}} as a synchronous stream cipher.|$|E
50|$|A {{string of}} Gnommish symbols {{appears at the}} bottom of each page of Artemis Fowl. It {{comprises}} a substitution cipher which can be deciphered using sections of the book's text displayed in Gnommish, together with their English translations. A complete Gnommish <b>cipher</b> <b>key</b> can be found in The Artemis Fowl Files.|$|E
50|$|This table {{contains}} PID {{numbers of}} elementary streams {{associated with the}} program and it has information about the type of these elementary streams (video, audio, etc.).In addition it may also contain an ECM (entitlement control messages) stream for any other stream that is encrypted. These messages provide the information used in the <b>cipher</b> <b>key</b> selection stage.|$|E
50|$|Among {{the data}} present on ISIM are an IP Multimedia Private Identity (IMPI), the home {{operator}} domain name, {{one or more}} IP Multimedia Public Identity (IMPU) and a long-term secret used to authenticate and calculate <b>cipher</b> <b>keys.</b> The first IMPU stored in the ISIM is used in emergency registration requests.|$|R
40|$|Abstract—A secure image {{encryption}} scheme {{based on}} 2 D skew tent map is proposed for the encryption of color images. The proposed encryption scheme is composed of one permutation process and one substitution process. The 3 D color plain-image matrix is converted to 2 D image matrix first, then 2 D skew tent map is utilized to generate chaotic sequences, which are used for both permutation process and substitution process. The chaotic sequence for permutation process is dependent on plain-image and <b>cipher</b> <b>keys,</b> resulting in good key sensitivity and plaintext sensitivity. The substitution process is first initiated with the initial vectors generated by the <b>cipher</b> <b>keys</b> and 2 D skew tent map, then the gray values of row and column pixels of 2 D image matrix are mixed with the pseudorandom number sequences via bitxoring operation...|$|R
50|$|The weaker <b>ciphers</b> and <b>key</b> {{exchange}} modes are disabled by default.|$|R
50|$|The matrix {{used for}} {{encryption}} is the <b>cipher</b> <b>key,</b> {{and it should}} be chosen randomly from the set of invertible n &times; n matrices (modulo 26). The cipher can, of course, be adapted to an alphabet with any number of letters; all arithmetic just needs to be done modulo the number of letters instead of modulo 26.|$|E
5000|$|In cryptography, the {{so-called}} product ciphers are {{a certain kind}} of cipher, where the (de-)ciphering of data is done in [...] "rounds". The general setup of each round is the same, except for some hard-coded parameters and a part of the <b>cipher</b> <b>key,</b> called a subkey. A key schedule is an algorithm that, given the key, calculates the subkeys for these rounds.|$|E
50|$|HMAC, encryption, and {{decryption}} {{functions are}} provided by the OpenSSL EVP interface and allows the user to select an arbitrary <b>cipher,</b> <b>key</b> size, and message digest for HMAC. BlowFish is the default cipher and SHA1 is the default message digest. The OpenSSL EVP interface handles padding to an even multiple of block size using PKCS#5 padding. CBC-mode cipher usage is encouraged but not required.|$|E
40|$|Quantum Key Distribution (QKD) is a technology, {{based on}} the quantum laws of physics, rather than the assumed {{computation}} complexity of mathematical problems, to generate and distribute provably secure <b>cipher</b> <b>keys</b> over unsecured channels. It does this using single photon technology and can detect potential eavesdropping via the quantum bit error rates of the quantum channe...|$|R
50|$|The {{original}} DES <b>cipher's</b> <b>key</b> size of 56 bits {{was generally}} sufficient when that algorithm was designed, but {{the availability of}} increasing computational power made brute-force attacks feasible. Triple DES provides a relatively simple method of increasing the key size of DES to protect against such attacks, without the need to design a completely new block cipher algorithm.|$|R
50|$|In cryptography, the key-recovery {{advantage}} (KR advantage) of {{a particular}} algorithm {{is a measure of}} how effective an algorithm can mount a key-recovery attack. Consequently, the maximum key-recovery advantage attainable by any algorithm with a fixed amount of computational resources is a measure of {{how difficult it is to}} recover a <b>cipher's</b> <b>key.</b> It is defined as the probability that the adversary algorithm can guess a <b>cipher's</b> randomly selected <b>key,</b> given a fixed amount of computational resources. An extremely low KR advantage is essential for an encryption scheme's security.|$|R
5000|$|Mix (with, for example, xor) {{hardware}} generated {{random numbers}} with {{the output of}} a good quality stream cipher, {{as close to the}} point of use as possible. The stream <b>cipher</b> <b>key</b> or seed should be changeable in a way that can be audited and derived from a trustworthy source, e.g. dice throws. The Fortuna random number generator is an example of an algorithm which uses this mechanism.|$|E
5000|$|The cipher disk {{can be used}} in one of two ways. The code can be a {{consistent}} monoalphabetic substitution for the entire cipher or the disks can be moved periodically throughout the cipher making it polyalphabetic. For a monoalphabetic use, the sender and the person receiving the messages would agree on a <b>cipher</b> <b>key</b> setting (e.g., the [...] "G" [...] in the regular alphabet would be positioned next to the [...] "Q" [...] in the cipher alphabet). The entire message is then encoded according to this key.|$|E
50|$|After the {{conclusion}} of World War II, Feinstein continued {{to work at the}} SIS throughout the Cold War, trying to decode encrypted messages sent by the Soviet KGB and Main Intelligence Directorate (GRU). She made a significant breakthrough {{in the early stages of}} the Venona project, which allowed American cryptographers to recognize when an individual <b>cipher</b> <b>key</b> was reused, but resigned from the SIS in 1947. After resigning from government cryptanalysis, she began working in the faculty of George Mason University, where she served as a professor of mathematics.|$|E
40|$|A key {{derivation}} {{function is}} used to generate one or more cryptographic keys from a private (secret) input value. This paper proposes a new method for constructing a generic stream <b>cipher</b> based <b>key</b> derivation function. We show that our proposed {{key derivation function}} based on stream ciphers is secure if the underlying stream cipher is secure. We simulate instances of this stream <b>cipher</b> based <b>key</b> derivation function using three eStream finalist: Trivium, Sosemanuk and Rabbit. The simulation results show these stream <b>cipher</b> based <b>key</b> derivation functions offer efficiency advantages over the more commonly used key derivation functions based on block ciphers and hash functions...|$|R
40|$|Part 3 : Network Security/ CryptographyInternational audienceA key {{derivation}} {{function is}} used to generate one or more cryptographic keys from a private (secret) input value. This paper proposes a new method for constructing a generic stream <b>cipher</b> based <b>key</b> derivation function. We show that our proposed {{key derivation function}} based on stream ciphers is secure if the underlying stream cipher is secure. We simulate instances of this stream <b>cipher</b> based <b>key</b> derivation function using three eStream finalist: Trivium, Sosemanuk and Rabbit. The simulation results show these stream <b>cipher</b> based <b>key</b> derivation functions offer efficiency advantages over the more commonly used key derivation functions based on block ciphers and hash functions...|$|R
50|$|When {{used with}} {{asymmetric}} <b>ciphers</b> for <b>key</b> transfer, pseudorandom key generators are nearly {{always used to}} generate the symmetric <b>cipher</b> session <b>keys.</b> However, lack of randomness in those generators or in their initialization vectors is disastrous and has led to cryptanalytic breaks in the past. Therefore, {{it is essential that}} an implementation uses a source of high entropy for its initialization.|$|R
