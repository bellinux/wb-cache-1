450|679|Public
25|$|Most flash drives ship {{preformatted}} {{with the}} FAT32, or exFAT file systems. The ubiquity of the FAT32 file system allows {{the drive to}} be accessed on virtually any host device with USB support. Also, standard FAT maintenance utilities (e.g., ScanDisk) {{can be used to}} repair or retrieve <b>corrupted</b> <b>data.</b> However, because a flash drive appears as a USB-connected hard drive to the host system, the drive can be reformatted to any file system supported by the host operating system.|$|E
25|$|This view of {{software}} quality on a linear continuum {{has to be}} supplemented by the identification of discrete Critical Programming Errors. These vulnerabilities may not fail a test case, {{but they are the}} result of bad practices that under specific circumstances can lead to catastrophic outages, performance degradations, security breaches, <b>corrupted</b> <b>data,</b> and myriad other problems (Nygard, 2007) that make a given system de facto unsuitable for use regardless of its rating based on aggregated measurements. A well-known example of vulnerability is the Common Weakness Enumeration, a repository of vulnerabilities in the source code that make applications exposed to security breaches.|$|E
25|$|Cost Management: As in {{any other}} fields of engineering, an {{application}} with good structural software quality costs less to maintain and is easier to understand and change in response to pressing business needs. Industry data demonstrate that poor application structural quality in core business applications (such as enterprise resource planning (ERP), customer relationship management (CRM) or large transaction processing systems in financial services) results in cost and schedule overruns and creates waste {{in the form of}} rework (up to 45% of development time in some organizations). Moreover, poor structural quality is strongly correlated with high-impact business disruptions due to <b>corrupted</b> <b>data,</b> application outages, security breaches, and performance problems.|$|E
5000|$|Loss of integrity: How much <b>data</b> {{could be}} <b>corrupted</b> and how damaged is it? Minimal {{slightly}} <b>corrupt</b> <b>data</b> (1), minimal seriously <b>corrupt</b> <b>data</b> (3), extensive slightly <b>corrupt</b> <b>data</b> (5), extensive seriously <b>corrupt</b> <b>data</b> (7), all <b>data</b> totally <b>corrupt</b> (9) ...|$|R
5000|$|... {{eavesdropping}} or Byzantine (i.e. passively listening on or actively <b>corrupting</b> <b>data</b> in the channel), ...|$|R
5000|$|<b>Corrupt</b> <b>data</b> {{that was}} written by old {{versions}} of the software and not cleaned properly ...|$|R
500|$|The {{gameplay}} of I Love Bees tasked players {{around the}} world to work together to solve problems, with little or no direction or guidance. For example, the game presented players with 210 pairs of global positioning system coordinates and time codes, with no indications to what the locations referred to. Players eventually figured out the coordinates referred to pay phones and the times to when the phones would ring; one player in Florida stayed by a phone while Hurricane Frances was minutes away in order to recite answers to prerecorded questions. Other phone calls were made by live persons known as [...] "operators"; these calls allowed players to interact with the characters of the games in spontaneous and occasionally humorous ways. Other players treated the <b>corrupted</b> <b>data</b> on ilovebees.com as encrypted files to decipher, or used image files found on the web server to solve puzzles. After players completed certain tasks, they were rewarded with new installments to an audio drama which revealed the reasons for the ilovebees.com malfunction.|$|E
500|$|The {{series is}} typical of action {{role-playing}} games, in which players attack enemies in real time. The game's action pauses whenever the menu is opened to select magic to cast, items to use, or skills to perform. The player directly controls Kite and the other characters are controlled by artificial intelligence. The player may either provide the computer-controlled characters with guidelines ("attack", [...] "first aid", [...] "magic", etc.) or issue direct commands. Most hostile creatures are contained within magic portals and combat will not begin until the player character approaches the portal and releases the monsters inside. Kite possesses a unique ability called [...] "Data Drain" [...] which allows him to transform these enemies into rare items. Many boss monsters are known as [...] "Data Bugs"—enemies with <b>corrupted</b> <b>data</b> which gives them infinite health. Data Drain is used to repair the damaged monsters' data and render them vulnerable but its use increases Kite's level of infection, randomly causing harmful side effects. The infection can be cured by defeating enemies without Data Drain.|$|E
2500|$|Native {{handling}} of standard RAID levels and additional ZFS RAID layouts ("RAIDZ"). The RAIDZ levels stripe data across only the disks required, for efficiency (many RAID systems stripe indiscriminately across all devices), and checksumming allows rebuilding of inconsistent or <b>corrupted</b> <b>data</b> to be minimised to those blocks with defects; ...|$|E
5000|$|The {{application}} {{must not}} <b>corrupt</b> <b>data</b> if it crashes, or restarts from the saved state.|$|R
5000|$|Previous {{operation}} of the disk harmed the medium in some manner (e.g. scratched it), <b>corrupting</b> <b>data</b> in the location that is now discovered as problematic.|$|R
5000|$|Errors in {{compressed}} data may be detected and skipped. Further, if [...] "full-flush" [...] points are {{written to the}} compressed stream, then <b>corrupt</b> <b>data</b> can be skipped, and the decompression will resynchronize at the next flush point - although no error recovery of the <b>corrupt</b> <b>data</b> is provided. Full-flush points are useful for large data streams on unreliable channels, where some data loss is unimportant, such as in some multimedia applications. However, creating many flush points can affect the speed as well as amount (ratio) of compression.|$|R
2500|$|Cosmic rays have {{sufficient}} energy {{to alter the}} states of circuit components in electronic integrated circuits, causing transient errors to occur (such as <b>corrupted</b> <b>data</b> in electronic memory devices or incorrect performance of CPUs) {{often referred to as}} [...] "soft errors." [...] This has been a problem in electronics at extremely high-altitude, such as in satellites, but with transistors becoming smaller and smaller, this is becoming an increasing concern in ground-level electronics as well. Studies by IBM in the 1990s suggest that computers typically experience about one cosmic-ray-induced error per 256 megabytes of RAM per month. To alleviate this problem, the Intel Corporation has proposed a cosmic ray detector that could be integrated into future high-density microprocessors, allowing the processor to repeat the last command following a cosmic-ray event.|$|E
50|$|Some taps {{can also}} {{reproduce}} low-level network errors, such as short frames, bad CRC or <b>corrupted</b> <b>data.</b>|$|E
50|$|In June 2016, the Air Force IG, and its {{database}} contractor Lockheed Martin, {{came under}} criticism when 100,000 official records {{dating back to}} 2004 were lost due to <b>corrupted</b> <b>data.</b>|$|E
5000|$|This {{problem will}} not occur {{as long as}} you {{progress}} to the qualifying session after completing a practice session before quitting the game. PlayStation 3 users may experience <b>corrupt</b> <b>data</b> problems at other areas in the game ...|$|R
5000|$|Trackers are {{the primary}} reason for a damaged BitTorrent [...] "swarm". (Other reasons are mostly related to damaged or hacked clients {{uploading}} <b>corrupt</b> <b>data.)</b> The reliability of trackers has been improved through two main innovations in the BitTorrent protocol.|$|R
50|$|Robustness: {{how well}} a program anticipates {{problems}} due to errors (not bugs). This includes situations such as incorrect, inappropriate or <b>corrupt</b> <b>data,</b> unavailability of needed resources such as memory, operating system services and network connections, user error, and unexpected power outages.|$|R
50|$|The {{tools and}} drives {{that do not}} fully support {{revision}} 1.5 of UDF will ignore the sparing table, which would lead them to read the outdated worn-out sectors, leading to retrieval of <b>corrupted</b> <b>data.</b>|$|E
50|$|LaserLock is a CD-ROM copy {{restriction}} technique. It {{works by}} including a hidden directory on the CD which contains <b>corrupted</b> <b>data.</b> When the disk is copied, the read device encounters errors {{due to the}} hidden directory.|$|E
50|$|Anytime {{a server}} loses power, for example, {{it has to}} reboot, recover data and repair <b>corrupted</b> <b>data.</b> The {{time it takes to}} recover, known as the mean time to recover (MTR), could be minutes, hours or days.|$|E
50|$|The Biba Model or Biba Integrity Model {{developed}} by Kenneth J. Biba in 1975, is a formal state transition system of {{computer security policy}} that describes a set of access control rules designed to ensure data integrity. Data and subjects are grouped into ordered levels of integrity. The model is designed so that subjects may not <b>corrupt</b> <b>data</b> in a level ranked higher than the subject, or be <b>corrupted</b> by <b>data</b> from a lower level than the subject.|$|R
25|$|Bugs in {{one part}} of the kernel have strong side effects; since every {{function}} in the kernel has all the privileges, a bug in one function can <b>corrupt</b> <b>data</b> structure of another, totally unrelated part of the kernel, or of any running program.|$|R
50|$|The {{system must}} be able to handle {{hardware}} or software problems without <b>corrupting</b> <b>data.</b> Multiple users must be protected from attempting to change the same piece of data at the same time, for example two operators cannot sell the same seat on an airplane.|$|R
50|$|There {{are various}} {{complaints}} pointing that certain brands of 512 MB memory cards can cause conflicts and <b>corrupted</b> <b>data</b> {{in both the}} phone and the memory card, so {{it is best to}} avoid that memory card size.|$|E
50|$|Variational Bayesian {{learning}} {{is based on}} probabilities. There is a chance that an approximation is performed with mistakes, damaging further data representations. Another downside pertains to complicated or <b>corrupted</b> <b>data</b> samples, {{making it difficult to}} infer a representational pattern.|$|E
50|$|Data {{recovery}} hardware {{was developed}} because data recovery software lacks {{the ability to}} deal with all lost or <b>corrupted</b> <b>data</b> files. Often the failures, such as media files with bad sectors, firmware failures, PCB (Printed circuit board) failures, hard drive head failures, etc., cannot be fixed.|$|E
25|$|A Nuke {{is an old}} {{denial-of-service attack}} against {{computer}} networks consisting of fragmented or otherwise invalid ICMP packets sent to the target, achieved by using a modified ping utility to repeatedly send this <b>corrupt</b> <b>data,</b> thus slowing down the affected computer until {{it comes to a}} complete stop.|$|R
25|$|A buffer {{overflow}} occurs when data written to a buffer also <b>corrupts</b> <b>data</b> values in memory addresses {{adjacent to the}} destination buffer due to insufficient bounds checking. This can occur when copying data from one buffer to another without first checking that the data fits within the destination buffer.|$|R
25|$|Someone {{proposed}} disunification {{of plain}} Ii and capital letter dotless I and small letter I with dot above {{to make the}} casing more consistent.. This {{was rejected by the}} UTC because it would corrupt mapping from character sets with dotted and dotless I and <b>corrupt</b> <b>data</b> in these languages.|$|R
50|$|LAPM is {{an error}} control {{protocol}} defined in ITU-T recommendations V.42. Like many {{data link layer}} protocols, it is a variant of HDLC. Like the Microcom Networking Protocols that preceded it, LAPM uses cyclic redundancy checking (CRC) and retransmission of <b>corrupted</b> <b>data</b> (ARQ) to ensure data reliability.|$|E
5000|$|Native {{handling}} of standard RAID levels and additional ZFS RAID layouts ("RAIDZ"). The RAIDZ levels stripe data across only the disks required, for efficiency (many RAID systems stripe indiscriminately across all devices), and checksumming allows rebuilding of inconsistent or <b>corrupted</b> <b>data</b> to be minimised to those blocks with defects; ...|$|E
50|$|Continuous data {{protection}} differs from RAID, replication, or mirroring in that these technologies only protect one {{copy of the}} data (the most recent). If data becomes corrupted {{in a way that}} is not immediately detected, these technologies simply protect the <b>corrupted</b> <b>data</b> with no way to restore an uncorrupted version.|$|E
50|$|A Nuke {{is an old}} {{denial-of-service attack}} against {{computer}} networks consisting of fragmented or otherwise invalid ICMP packets sent to the target, achieved by using a modified ping utility to repeatedly send this <b>corrupt</b> <b>data,</b> thus slowing down the affected computer until {{it comes to a}} complete stop.|$|R
50|$|A buffer {{overflow}} occurs when data written to a buffer also <b>corrupts</b> <b>data</b> values in memory addresses {{adjacent to the}} destination buffer due to insufficient bounds checking. This can occur when copying data from one buffer to another without first checking that the data fits within the destination buffer.|$|R
5000|$|The worm {{was created}} using {{a simple and}} widely {{available}} Visual Basic Worm Generator program developed by an Argentinian programmer called “KAlamar”. [...] While similar to the ILOVEYOU worm that struck a year earlier, in 2000, the Anna Kournikova worm did not <b>corrupt</b> <b>data</b> on the infected computer.|$|R
