9|173|Public
50|$|Note {{that the}} (trivial) <b>copy</b> <b>function</b> 'c' is {{necessary}} because though the universal constructor 'u'would {{be able to}} construct any description, too, the description it would base on, would ingeneral be longer than the result, rendering full self replication impossible.|$|E
5000|$|It is not {{possible}} to load a Standard Midi File or other sequence file from a card to internal memory onto an existing pattern without initializing all the existing pattern's settings back to basic format. In order to load a SMF onto a pattern and retain that pattern's settings, the SMF must be first loaded onto an unused or empty location withnin internal memory, then moved to the wanted location with the <b>Copy</b> <b>function.</b>|$|E
5000|$|The program {{supports}} the Unicode international character set (so it can browse images and folders whose names {{are written in}} any language) and features a multi-lingual user-interface. It integrates with the Windows shell, for example for context menus and AutoPlay events. It provides a simple external program launcher and a file <b>copy</b> <b>function</b> that copies (or moves) the image currently displayed to a pre-set folder, by pressing a hotkey, along with a file renaming function. Real-time RGB histogram and Exif information (shutter speed, F-stop, ISO speed, exposure compensation, ...) can be displayed in floating windows. The program adapts to screen resolution and supports large fonts and high-DPI display modes, as well as relatively low resolution Netbooks and sub-notebooks screens. The program integrates with the Windows 7 and 8.x taskbars and exposes a list of recently used folders through a mechanism known as [...] "jump lists", introduced in Windows 7.|$|E
5000|$|Integrates {{with the}} browser {{being used to}} track URL or <b>Copy</b> <b>functions</b> if {{downloadable}} content is found ...|$|R
3000|$|... as output {{variables}} that uses only <b>COPY</b> <b>functions,</b> {{but there is}} no analogous strictly bi-quadratic cooperative Boolean circuit. Fortunately, as {{can be seen from the}} description above, it is not actually necessary that [...]...|$|R
50|$|Many {{synthetic}} supramolecular {{systems are}} designed to <b>copy</b> <b>functions</b> of biological systems. These biomimetic architectures {{can be used to}} learn about both the biological model and the synthetic implementation. Examples include photoelectrochemical systems, catalytic systems, protein design and self-replication.|$|R
40|$|The graph <b>copy</b> <b>function</b> when {{restricted}} to the set of trees or of rooted trees is called the tree <b>copy</b> <b>function</b> or the rooted tree <b>copy</b> <b>function,</b> respectively. We show that both the set of tree copy functions and the set of rooted tree copy functions are strongly linearly independent. We also show that the set of all tree copy functions are algebraically independent but the set of all rooted tree copy functions are not. An algebraic base for the algebra generated by rooted tree copy functions is constructed in this paper...|$|E
30|$|Proof We {{will prove}} {{only the first}} part of the theorem; the second part then follows from the {{observation}} that the only nonconstant cooperative unbiased Boolean function that takes at most two inputs is the <b>COPY</b> <b>function.</b>|$|E
40|$|The {{growth in}} the {{computer}} forensic field has created a demand for new software (or increased functionality to existing software) and a means to verify that this software is truly forensic (i. e., capable of meeting {{the requirements of the}} trier of fact). In this work, we present a function-oriented testing framework for validation and verification of computer forensic tools. This framework consists of three parts: function mapping, requirements specification, and reference set development. Through function mapping, we give a scientific and systemical description of the fundamentals of computer forensic discipline; i. e., what functions are needed in the computer forensic investigation process. We focus this article on the forensic <b>copy</b> <b>function.</b> We specify the requirements and develop and a corresponding reference set to test any tools that possess the forensic <b>copy</b> <b>function.</b> ...|$|E
50|$|Unlike {{standard}} <b>copying</b> <b>functions,</b> disk cloning involves copying {{hidden and}} in-use files, and thus presents special challenges, as {{those types of}} files are typically not available for copying. Additional complications arise when the process is used for networked computers, as the network {{must be able to}} distinguish between different computers. Post-cloning operations may be necessary to address these and other issues.|$|R
5000|$|Tumor {{formation}} generally {{follows the}} Knudson [...] "two hit" [...] hypothesis. The first {{copy of the}} gene is mutated in all cells, however the second <b>copy</b> <b>functions</b> normally. When the second copy mutates in a certain cell due to a random event, Loss of Heterozygosity (LOH) occurs and the SDHB protein is no longer produced. Tumor formation then becomes possible.|$|R
5000|$|Each working <b>copy</b> {{effectively}} <b>functions</b> as {{a remote}} backup of the codebase {{and of its}} change-history, protecting against data loss.|$|R
40|$|In 2016, we {{activated}} the EPrints Request a <b>Copy</b> <b>function</b> in our institutional repository LSE Research Online (LSERO). As a mediated service, the implementation was a trial {{to ascertain the}} demand for restricted content. Since implementation in August 2016, we have received over 450 requests. The email addresses of users and their reasons given for requesting a paper offer a considerable and previously untapped source of qualitative data on {{the potential impact of}} LSE research. The Request a Copy button also allows us to gain a greater understanding of which disciplines are more popular pre-publication, and which are more sought after by those outside of academia, ranging from international organisations to local government departments. In this 10 x 10 talk, I will present key findings from our analysis of these data, including: •	Key user groups •	Accessibility and discoverability issues •	Issues around the purpose and role of repositories •	The reach and potential impact of LSE research beyond academia This service has allowed us to maximise the value and benefits of our repository through giving us a more insightful understanding of our users and an improved awareness of the global dissemination of LSE research...|$|E
40|$|Known issues: [URL] version 1. 1. 2 fix issues {{associated}} with upcoming dplyr updates performance enhancements: much faster simulation execution Plot accepts color column in SpatialPointDataFrame objects add col arg to Plot (mimicks cols) add experiment function, a wrapper around spades for running multiple simulations (# 265) add shine function, with simList signature (# 261) add <b>copy</b> <b>function,</b> which does a deep copy of a simList object add RColorBrewer to Imports allow Plot colours to be set in the Plot call using cols argument allow Plot colours to be set in the Plot call using RColorBrewer palettes fix bug when plotting certain real-numbered rasters fix bug in Plot legends fix bug in assigning vectors as default module param values fix bug that prevented printing simulation times fix bug in event list sorting by eventPriority new slot in simList object: current, to store the current event new accessors current and current<- to get and set the current event defineParameter now coerces the default value to match the type class export objectNames() for external use outputPath updates output(sim) $file file paths, in addition to just paths(sim) $outputPath other bug fixe...|$|E
40|$|This paper {{reports on}} the effects of {{providing}} students with the ability to self-assess individualized spreadsheet assignments prior to submission for formal assessment. Quality learning outcomes are achieved when students adopt deep approaches to learning. Learning environments designed to align assessment to learning objectives and learning activities encourage these approaches (Biggs 1999, Ramsden 2003). A crucial part of any learning or assessment activity {{is the degree to which}} students receive timely and effective feedback. This paper responds to Higgins ' (2002) observation on the lack of research on feedback, particularly in relation to the use of spreadsheets in learning and assessment activities. Computer-assisted assessment at traditional universities like the University of Sydney has been limited to multiple choice quizzes, tests completed on paper and scanned, and in recent years, tests completed online. When used for summative assessment, feedback to students is often too late to be effective, limited to a single word or number, or in the case of final exams, non-existent. Some academics may make past exams and tests available to the next semester cohort. A few go further and provide model answers that allow formative self-assessment. However, more immediate and more elaborate feedback is possible with the proliferation of web-based learning management systems like WebCT and Blackboard, which contain an online quiz/test option, and user-friendly programs like WebMCQ and QuestionMark, which allow a greater degree of sophistication in formulating questions. Accounting concepts are one area where students need to understand how different elements are calculated and interact. For example, the interaction of different assumptions for sales price and quantity sold when forecasting net present value need to be carefully considered if one is making a business case to a financier. Spreadsheet assignments are a good way to learn such concepts but they are an assessment nightmare either because of validity problems (the potential for cheating using the cell <b>copy</b> <b>function)</b> or because of marking time (if students are allowed individual choice in application topic) ...|$|E
40|$|Information {{about the}} {{association}} between cognitive <b>functions,</b> such as <b>copying</b> <b>function,</b> and sleep disturbances in patients with {{chronic obstructive pulmonary disease}} (COPD) is lacking. This cross-sectional observational study aimed to investigate {{the association between}} <b>copying</b> <b>function</b> and self-reported sleep quality disturbances and disease severity in an elderly COPD population. Cognitive function performances, assessed using the Mini-Mental State Examination, were compared in 562 ambulatory COPD patients with and without sleep disturbances; assessed using the Established Populations for Epidemiologic Studies of the Elderly questionnaire; and stratified by Global Initiative for Chronic Obstructive Lung Disease (GOLD) grades. Sleep disturbances overall were not correlated with cognitive functioning. A trend was revealed towards worse design copying in patients with sleep disturbances overall. GOLD I patients with difficulties falling asleep and nocturnal awakenings had worse copying ability compared to GOLD I patients without these sleep disturbances. Copying ability was worse for GOLD III than GOLD I, orientation was worse for GOLD II than GOLD I and language was worse for GOLD II and III than GOLD I. To conclude, sleep disturbances seem to be a weak correlate of cognitive functioning, and are not a marker of disease severity...|$|R
50|$|The CHP {{was created}} in 2003 in {{response}} to the SARS outbreak and <b>copies</b> the <b>function</b> of the CDC in the United States.|$|R
5000|$|First, The Audio Critic chose a Mark Levinson ML-2 which Bob acoustically <b>copied</b> (transfer <b>function</b> duplication) {{and sold}} as his M1.5t {{amplifier}} (the “t” stood for transfer function modified).|$|R
50|$|TPC for Replication is {{designed}} to control and monitor copy services operations in storage environments. It also provides advanced <b>copy</b> services <b>functions</b> for supported storage subsystems on the SAN.|$|R
40|$|This article surveys {{representative}} {{techniques of}} exploiting bu#er overflow and format string overflow vulnerabilities and their currently available defensive measures. We also describe our bu#er overflow detection technique that range checks the referenced bu#ers at run time. We augment executable files with type information of automatic bu#ers (local variables and parameters of functions) and static bu#ers (global {{variables in the}} data/bss section), and maintain the sizes of allocated heap bu#ers in order to detect an actual occurrence of bu#er overflow. We describe a simple implementation with which we currently protect vulnerable <b>copy</b> <b>functions</b> in the C librar...|$|R
5000|$|Added {{support for}} {{hardware}} accelerated graphics <b>functions</b> (<b>copy,</b> fill, blittering, etc.) ...|$|R
2500|$|This code only accesses the {{sequence}} by storing and <b>copying</b> pointers, <b>function</b> evaluations, and equality tests; therefore, it {{qualifies as a}} pointer algorithm. The algorithm uses [...] operations of these types, and [...] storage space.|$|R
5000|$|Batch file {{management}} <b>functions</b> (<b>copy,</b> move, delete, save-for-web) through a multi-function rule-based plug-in.|$|R
40|$|Abstract. Conjunctions in Udmurt {{belong to}} {{grammatical}} function words of second-ary origin. Indigenous Udmurt linking devices have developed {{from other parts}} of speech e. g. postpositions and particles. Besides, a group of Russian and Tatar con-junctions has been taken over as a result of intensive contact with the two neigh-bouring languages. This paper will be dealing with the adoption of Russian coor-dinators and subordinators in Modern Udmurt. Russian linking elements are analysed within the code-copying framework (Johanson 2002) and are considered to be <b>copied</b> <b>function</b> units, accordingly. The role of Russian in the development of coordinate and subordinate structures in Udmurt is discussed to account for the on-going changes in the language structure of the colloquial variety...|$|R
50|$|TeraCopy {{can replace}} Windows Explorer's <b>copy</b> and move <b>functions.</b> The author asserts {{that it has}} full Unicode support.|$|R
50|$|XQuery {{can define}} {{recursive}} functions. The following example XQuery <b>function</b> <b>copies</b> the input {{directly to the}} output without modification.|$|R
5000|$|Taking {{the address}} of an [...] {{function}} requires code for a non-inlined <b>copy</b> of that <b>function</b> to be emitted in any case.|$|R
5000|$|... has {{the same}} effects in all C dialects and C++. It will emit a locally visible (out-of-line <b>copy</b> of the) <b>function</b> if required.|$|R
2500|$|The {{daily routine}} of the canons were {{made up of}} {{religious}} services, agricultural duties, household <b>functions,</b> <b>copying</b> books and reading. In detail, this would have been: ...|$|R
5000|$|... a. Through declarationObject b = a; // {{translates}} as Object::Object(const Object&) (invoke <b>copy</b> constructor)b. Through <b>function</b> argumentstype function(Object a);c. Through function return valueObject a = function (...) ...|$|R
50|$|When a user {{used the}} <b>copy</b> and paste <b>function</b> of Microsoft Windows on Encarta {{on more than}} five words, Encarta {{automatically}} appended a copyright boilerplate message after the paste.|$|R
25|$|Cells with {{heterozygous}} mutations (one good copy of {{gene and}} one mutated <b>copy)</b> may <b>function</b> normally with the unmutated copy until the good copy has been spontaneously somatically mutated. This kind of mutation {{happens all the}} time in living organisms, {{but it is difficult to}} measure the rate. Measuring this rate is important in predicting the rate at which people may develop cancer.|$|R
5000|$|In {{computer}} programming, particularly object-oriented programming, cloning {{refers to}} object copying by a method or <b>copy</b> factory <b>function,</b> often called [...] or , {{as opposed to}} by a copy constructor. Cloning is polymorphic, in {{that the type of}} the object being cloned need not be specified, in contrast to using a copy constructor, which requires specifying the type (in the constructor call).|$|R
40|$|Programs {{written in}} C are {{inherently}} vulnerable to buffer overflow attacks. Functions are frequently passed pointers as parameters without {{any hint of}} their sizes. Since their sizes are unknown, most run time buffer overflow detection techniques instead rely on signatures of known attacks or loosely estimate {{the range of the}} referenced buffers. Although they are effective in detecting most attacks, they are not infallible. In this paper we present a buffer overflow detection technique that range checks the referenced buffers at run time. Our solution is a small extension to a generic C compiler that augments executable files with type information of automatic buffers (local variables and parameters of functions) and static buffers (global variables in data / bss section) in order to detect the actual occurrence of buffer overflow. It also maintains the sizes of allocated heap buffers. A simple implementation is described, with which we currently protect vulnerable <b>copy</b> <b>functions</b> in the C library...|$|R
50|$|Concerns {{have been}} raised {{over the use of}} <b>copy</b> and paste <b>functions</b> in {{healthcare}} documentation and electronic health records. There is potential for the introduction of errors, information overload, and fraud.|$|R
25|$|Editing clips {{through the}} cut, <b>copy</b> and paste <b>functions,</b> merging {{separate}} {{audio and video}} tracks, and freely placing the video tracks on a virtual canvas with the options of cropping and rotation.|$|R
