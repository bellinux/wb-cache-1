0|12|Public
5000|$|Gaius Caedicius, {{one of the}} legates of the consul Lucius Papirius <b>Cursor,</b> <b>commanded</b> {{the cavalry}} in the great battle with the Samnites in 293 BC.|$|R
50|$|An {{access method}} {{keeps track of}} the record being {{currently}} processed {{by means of a}} cursor. Using various SET <b>commands,</b> the <b>cursor</b> can be made to point to the beginning or end of the file, to the next or previous sequential record of the file, to the record with a specific key value, or to the next or previous record as ordered by their keys.|$|R
2500|$|... split (horizontal and vertical) and tabbed windows, Unicode {{and other}} multi-language support, syntax highlighting, trans-session <b>command,</b> search and <b>cursor</b> {{position}} histories, multiple level and branching undo/redo history which can persist across editing sessions, and visual mode.|$|R
50|$|A Stream {{access method}} is an {{instance}} of use of a stream file by a single client. A cursor keeps track {{of the position of}} the current byte of the sub-stream in use by the client. Using various SET <b>commands,</b> the <b>cursor</b> can be made to point to the beginning or end of the file, to any specific position in the file, or to any positive or negative offset from the current position.|$|R
40|$|We {{describe}} a computer vision based mouse, which can control and <b>command</b> the <b>cursor</b> {{of a computer}} or a computerized system using a camera. In order to move the cursor {{on the computer screen}} the user simply moves the mouse shaped passive device placed on a surface within the viewing area of the camera. The video generated by the camera is analyzed using computer vision techniques and the computer moves the cursor according to mouse movements. The computer vision based mouse has regions corresponding to buttons for clicking. To click a button the user simply covers one of these regions with his/her finger...|$|R
25|$|Through {{the late}} 1980s and early 1990s, there was {{considerable}} experimentation with {{ways to improve the}} BBS experience from its command-line interface roots. Almost every popular system improved matters somewhat by adding ANSI-based color menus to make reading easier, and most also allowed <b>cursor</b> <b>commands</b> to offer command-line recall and similar features. Another common feature was the use of autocomplete to make menu navigation simpler, a feature that would not re-appear on the web until decades later.|$|R
40|$|Data-entry device held in {{one hand}} and {{operated}} with five fingers. Contains seven keys. Letters, numbers, punctuation, and <b>cursor</b> <b>commands</b> keyed into computer by pressing keys in various combinations. Device called "data egg" used where standard typewriter keyboard unusable or unavailable. Contains micro-processor and 32 -Kbyte memory. Captures text and transmits it to computer. Concept extended to computer mouse. Especially useful to handicapped or bedridden people who find it difficult or impossible to operate standard keyboards...|$|R
50|$|Through {{the late}} 1980s and early 1990s, there was {{considerable}} experimentation with {{ways to improve the}} BBS experience from its command line interface roots. Almost every popular system improved matters somewhat by adding ANSI-based color menus to make reading easier, and most also allowed <b>cursor</b> <b>commands</b> to offer command-line recall and similar features. Another common feature was the use of autocomplete to make menu navigation simpler, a feature that would not re-appear on the web until decades later.|$|R
50|$|Suppose {{that the}} input type for the machine is: In ::= Command × Character × Position. This {{recognises}} that every interaction {{could be a}} simple character insertion, a menu <b>command</b> or a <b>cursor</b> placement. Any given interaction is a 3-tuple, but some places may be empty. For example, (Insert, 'a', ε) would represent typing the character 'a'; while (Position, ε, 32) would mean placing the cursor between characters 32 and 33; and (Select, ε, 32) would mean selecting the text between the current cursor position and the place between characters 32 and 33.|$|R
5000|$|The GEMDOS {{version of}} the VT52 command set adds {{a number of new}} commands. These mostly {{concerned}} color support, with the color selection being sent as a single character using the same encoding as the [...] command. Only the last four bits of the number were used, providing support for 16 colors. The Atari ST only supported 4 of those in 80 column mode and all 16 in 40 column mode. A few new <b>cursor</b> <b>commands</b> were added as well, essentially filling out the set of the original VT52 by including commands that worked towards {{the bottom of the screen}} as opposed to only the top. The system did not support a number of VT52 commands, including F, G and Z.|$|R
50|$|Some of Vim's {{enhancements}} include completion, comparison and {{merging of}} files (known as vimdiff), a comprehensive integrated help system, extended regular expressions, scripting languages (both native and through alternative scripting interpreters such as Perl, Python, Ruby, Tcl, etc.) including support for plugins, a {{graphical user interface}} (known as gvim), limited integrated development environment-like features, mouse interaction (both with and without the GUI), folding, editing of compressed or archived files in gzip, bzip2, zip, and tar format and files over network protocols such as SSH, FTP, and HTTP, session state preservation, spell checking, split (horizontal and vertical) and tabbed windows, Unicode and other multi-language support, syntax highlighting, trans-session <b>command,</b> search and <b>cursor</b> position histories, multiple level and branching undo/redo history which can persist across editing sessions, and visual mode.|$|R
40|$|Brain-computer {{interface}} (BCI) or Brain Machine Interface (BMI) provides {{direct communication}} channel between user’s brain and an external device without any requirement of user’s physical movement. Primarily BCI has been employed in medical sciences {{to facilitate the}} patients with severe motor, visual and aural impairments. More recently many BCI are also {{being used as a}} part of entertainment. BCI differs from Neuroprosthetics, a study within Neuroscience, in terms of its usage; former connects the brain with a computer or external device while the later connects the nervous system to an implanted device. A BCI receives the modulated input from user either invasively or non-invasively. The modulated input, concealed in the huge amount of noise, contains distinct brain patterns based on the type of activity user is performing at that point in time. Primary task of a typical BCI is to find out those distinct brain patterns and translates them to meaningful communication <b>command</b> set. <b>Cursor</b> controllers, Spellers, Wheel Chair and robot Controllers are classic examples of BCI applications. This study aims to investigate an Electroencephalography (EEG) based non-invasive BCI in general and its interaction with a web interface in particular. Different aspects related to BCI are covered in this work including feedback techniques, BCI frameworks, commercial BCI hardware, and different BCI applications. BCI paradigm Steady State Visually Evoked Potentials (SSVEP) is being focused during this study. A hybrid solution is developed during this study, employing a general purpose BCI framework OpenViBE, which comprised of a low-level stimulus management and control module and a web based Google Street View client application. This study shows that a BCI can not only provide a way of communication for the impaired subjects {{but it can also be}} a multipurpose tool for a healthy person. During this study, it is being established that the major hurdles that hamper the performance of a BCI system are training protocols, BCI hardware and signal processing techniques. It is also observed that a controlled environment and expert assistance is required to operate a BCI system...|$|R

