1473|69|Public
25|$|BFSR-SR, a 2D {{short-range}} Battle Field Surveillance Radar, {{meant to}} be manportable. Designed and developed by LRDE, the project was a systematic example of <b>concurrent</b> <b>engineering,</b> with the production agency involved through the design and development stage. This enabled the design to be brought into production quickly. The radar continues to progress further in terms of integration, with newer variants being integrated with thermal imagers for visually tracking targets detected by the radar. Up to 10 BFSR-SR can be networked together for network centric operation. It is in use with the Indian Army and the BSF as well as export customers.|$|E
25|$|In October 1989, Rockwell International (Space Systems Division) began {{a year-long}} {{contracted}} effort managed by Langley Research Center {{to perform an}} in-depth study of PLS design and operations with the HL-20 concept as a baseline for the study. Using a <b>concurrent</b> <b>engineering</b> approach, Rockwell factored supportable, efficient design and operations measures into defining a detailed, cost-effective design along with a manufacturing plan and operations assessment. A key {{finding of this study}} was the realization that while design and technological factors could reduce costs of a new manned space transportation system, further significant savings would be possible only if a new operations philosophy were adopted which treated PLS {{in a manner similar to}} an operational airliner rather than a research and development space vehicle.|$|E
5000|$|... (ed., in {{collaboration}} with Parisa Ghodous and Geilson Loureiro), Leading the Web in <b>concurrent</b> <b>engineering</b> : next generation <b>concurrent</b> <b>engineering</b> ...|$|E
5000|$|Dual Degrees (Students can opt {{to take an}} Art-Science program <b>concurrent</b> {{with their}} <b>Engineering</b> program, which usually {{requires}} an additional year of study) ...|$|R
40|$|With {{widely used}} <b>concurrent</b> and {{collaborative}} <b>engineering</b> technologies, {{the validity and}} consistency of product information become important. In order to establish {{the state of the}} art, this paper reviews emerging <b>concurrent</b> and collaborative <b>engineering</b> approaches and emphasizes on the integration of different application systems across prod-uct life cycle management (PLM) stages. It is revealed that checking product information validity is difficult for the cur-rent computer-aided systems because engineering intent is at best partially represented in product models. It is also not easy to maintain the consistency among related product mod-els because information associations are not established. The purpose of this review is to identify and analyze research issues with respect to information integration and sharing for future <b>concurrent</b> and collaborative <b>engineering.</b> A new paradigm of research from the angle of feature unification and association for product modeling and manufacturing is subsequently proposed...|$|R
40|$|<b>Concurrent</b> Control <b>Engineering</b> aims at {{multidisciplinary}} {{integration of}} control engineering methods {{with the data}} and procedures of complementary engineering disciplines in view of holistic system optimization. This necessitatesan iterative and interactive multi-objective search-based design approach {{to take care of}} the variety of analysis and design objectives both of a control specific and a multidisciplinary nature...|$|R
50|$|The success behind {{concurrent}} design and manufacturing lies within completing processes {{at the same}} time while involving all disciplines. As product development has become more cost and time efficient over the years, elements of <b>concurrent</b> <b>engineering</b> have been present in product development approaches. The elements of <b>concurrent</b> <b>engineering</b> that were utilized were cross-functional teams as well as fast time-to-market and considering manufacturing processes when designing. By involving multiple disciplines in decision making and planning, <b>concurrent</b> <b>engineering</b> has made product development more cost and time efficient. The fact that <b>concurrent</b> <b>engineering</b> could result in faster time-to-market is already an important advantage in terms of a competitive edge over other producers. <b>Concurrent</b> <b>engineering</b> has provided a structure and concept for product development that can be implemented for future success.|$|E
50|$|Several {{definitions}} of <b>concurrent</b> <b>engineering</b> are in use.|$|E
5000|$|LASMIS : Mechanical Systems and <b>Concurrent</b> <b>Engineering</b> Laboratory ...|$|E
40|$|This paper {{describes}} the analysis, modeling, and simulation of a notional air defense system using SMOOCHES (State Machines for Object-Oriented, <b>Concurrent,</b> Hierarchical <b>Engineering</b> Speci-fications). SMOOCHES is an object-oriented environment based on hierarchical state machines and extensions to Statecharts, spe-cifically developed as an environment to specify, model, simulate and analyze / evaluate distributed, reactive systems. I...|$|R
40|$|<b>Concurrent</b> Control <b>Engineering</b> aims at {{optimization}} {{of active}} systems within multidisciplinary projects. This poses additional problems ofengineering data management {{with respect to}} intelligible data structuring, consistent data interpretation and recoverable data recording. In order to tie the engineering data produced by any program user to a standard database structure, a dialog generator yields executable code for a dialog skeleton with the appropriate dialog logic...|$|R
50|$|In Software {{configuration}} management (SCM), Merge {{is used to}} combine files based on a line by line comparison method. Merge control is commonly applied to changes to the same attribute of different objects or changes to different attributes of the same object. Object concurrent change control subsumes traditional file control and provides homogeneous and elegant solutions to many difficulties which currently hamper <b>concurrent</b> software <b>engineering.</b>|$|R
5000|$|Enables {{the use of}} <b>concurrent</b> <b>engineering</b> {{methods in}} {{information}} systems development.|$|E
50|$|Experimental {{prototype}} {{systems support}} <b>concurrent</b> <b>engineering,</b> intelligent design, intelligent planning, and scheduling.|$|E
5000|$|Meso-level organisation: <b>concurrent</b> <b>engineering</b> (American), {{simultaneous}} engineering (British), and overlapping-parallel Product Development Processes ...|$|E
40|$|This report describes, how the {{software}} {{environment of the}} <b>Concurrent</b> Control <b>Engineering</b> Group at the DLR Institute for Flight System Dynamics {{can be used on}} different computers and how this software is maintained. A novice user should be enabled by this report to use this software. A more advanced user shall get hints, how to maintain large software products in a heterogeneous network, when the products have to be available and up-to-date on different computers...|$|R
40|$|<b>Concurrent,</b> {{interactive}} <b>engineering</b> {{design and}} analysis {{has the potential}} for substantially reducing product development time and enhancing US competitiveness. Traditionally, engineering design has involved running engineering analysis codes to simulate and evaluate the response of a product or process, writing the output data to file, and viewing or ``post-processing`` the results at a later time. The emergence of high-performance computer architectures, virtual reality, and advanced telecommunications in the mid 90 `s promises to dramatically alter the way designers, manufacturers, engineers and scientists will do their work...|$|R
40|$|This paper {{describes}} {{a series of}} three design tools intended to support various forms of conflict management in <b>concurrent</b> and collaborative <b>engineering</b> settings. The tools are Explorer, ParMan (Parameter Manager), and PCA (Project Coordination Assistant). Explorer single-user parametric design assistant that allows many alternative designs satisfying multi...|$|R
5000|$|... #Caption: Traditional [...] "Waterfall" [...] or Sequential Development Method vs. Iterative Development Method in <b>concurrent</b> <b>engineering.</b>|$|E
5000|$|<b>Concurrent</b> <b>engineering</b> is {{considered}} as an accelerator of efficiency and quality {{on the whole}} development process.|$|E
5000|$|... 1995. Information Integration for <b>Concurrent</b> <b>Engineering</b> (IICE) Compendium {{of methods}} report. Wright-Patterson Air Force Base, Ohio 45433-7604.|$|E
40|$|RASP is {{a control}} {{engineering}} numerical subroutine library {{to support the}} simulation, analysis and design of dynamic systems by frequency- and time-domain methods as well as multi-criteria parameter optimization. Emphasis is on numerically reliable and well-conditioned problem solutions. RSYST 3 is an engineering database system to support a modular integration of large engineering-science FORTRAN programs based on the concepts of abstract datatypes. Emphasis is on an efficient and flexible handling of complex engineering data objects. ANDECS 4 is a <b>Concurrent</b> Control <b>Engineering</b> project. It is a "programmable control engineering tool machine" based on RASP and RSYST...|$|R
40|$|International audienceA company {{needs to}} attract new {{customers}} by reducing their production costs, controlling the process risks and developing differentiation factors. This scientific contribution is based on methodological propositions and deployments using <b>concurrent</b> cost <b>engineering.</b> Therefore, the bases of this paper are to understand the economical factors, their place within the industrial processes and to propose methodological solutions for a full cost engineering integration in the sand casting process, from negotiations to customer delivery. The approach is based on product and process definition, cost evaluation assistance, production impact simulation, process performance enhancement and total digital traceability for parts and tooling in a steel sand casting foundry...|$|R
40|$|Proceedings {{consist of}} 35 {{articles}} that were prepared as the contribution for the International Conference Soil Hydrology in a Small Watershedö taken place on October 15 th, 2003 in Prague. Contributions {{included in this}} Proceedings are dedicated soil hydrology of a small watershed in a plenty of connections with <b>concurrent</b> scientific and <b>engineering</b> branches. The contributions are divided into eight sections...|$|R
5000|$|... 1993. Information Integration for <b>Concurrent</b> <b>Engineering</b> (IICE): IDEF3 Process Description Capture Method Report. Logistics Research Division, Wright-Patterson AFB, OH 45433 ...|$|E
50|$|Doing {{several things}} at once, such as {{designing}} various subsystems simultaneously, {{is critical to}} reducing design time and {{is at the heart}} of <b>concurrent</b> <b>engineering.</b>|$|E
5000|$|... 2003: Legardeur, J, Boujut, J-F, Hey, J, Information sharing for {{knowledge}} creation during early design phases, 10th ISPE International Conference on <b>Concurrent</b> <b>Engineering,</b> Madeira, 2003.|$|E
40|$|Mission {{operations}} {{include the}} utilization of both space and ground resources to achieve mission objectives. Future architectures will make the spacecraft a node on a distributed system, thus expanding the scope of missions beyond the global scale. The history and evolution of planetary mission operations are outlined, together with the current global involvement in planetary missions. The modular nature and reuse of the supporting ground data systems, and the inclusion of automation and dedicated software in space missions, are discussed. A trans-global mission architecture is presented, and consists of an extension of a layered reusable mission operations architecture to create an open ground/space operations system. <b>Concurrent</b> mission <b>engineering</b> with such trans-global structures is discussed...|$|R
40|$|Abstract: Although <b>Concurrent</b> and Collaborative <b>Engineering</b> (CCE) {{has enjoyed}} {{widespread}} acceptance in industry, many implementation problems remain. With {{the advent of}} more powerful artificial intelligence techniques, CCE can be further improved. This paper demonstrates how intelligent software agents may be deployed to facilitate <b>concurrent,</b> collaborative <b>engineering.</b> A system architecture, Java Agent Alive!, {{is presented as a}} multi-agent environment. A case study of configuring a personal computer (PC) from its processor, memory and hard disk drive is discussed to highlight the power of software agents in negotiating for the PC configuration with the best price and performance. A software agent is created and assigned to each of the PC components. These agents attend two levels of agent conferences, viz. the bidding conference and the PC component vendor’s conference. At both conferences, each agent strives to offer components with the best performance and the lowest price. The agents were ascribed artificial intelligence through the Java Expert System Shell (JESS). At the end of the negotiations, five PC configurations were finalised that met the expectations of the user, who is informed of the outcome via e-mail. The strengths and limitations of the system architecture and the domain application of PC assembly, as well as means to enhance security, are also discussed. Some recommendations to further improve the limitations of Java Agent Alive! and the PC Assembly application are made...|$|R
40|$|New {{classes of}} {{large-scale}} distributed applications {{will have to}} deal with unpredictable communication delays, with partial failures, and with networks that partition. In addition, sophisticated applications like teleconferencing, video-on-demand, and <b>concurrent</b> software <b>engineering</b> require a group communication abstraction. These paradigms are not adequately addressed by CORBA. CORBA mainly deals with pointto -point communication and offers no support for the development of reliable applications that exhibit predictable behavior in distributed systems. In this paper we present extensions to CORBA which provide group communication, reliability, and fault-tolerance. We also describe Orbix+Isis and Electra [...] - two CORBA object request brokers that support the implementation of reliable distributed applications and groupware. Keywords: Distributed Systems, CORBA, Object Groups, Multicast, Reliability, Fault-Tolerance, Orbix +Isis, Electra, Isis, Horus 1 Introduction The object paradig [...] ...|$|R
50|$|To {{speed up}} {{delivery}} time, {{the adoption of}} <b>concurrent</b> <b>engineering,</b> integrated product team, and lean product development methodologies are used. The critical path methodology is also essential.|$|E
5000|$|<b>Concurrent</b> <b>Engineering</b> is hosted on ScholarOne™ Manuscripts, {{a web-based}} online {{submission}} and peer review system - SAGE track. Please read the Manuscript Submission guidelines below, and then simply visit ...|$|E
50|$|When the European Space Research and Technology Centre (ESTEC) {{acquired}} a new Concurrent Design Facility, its initial CDF {{was set up}} at the ISU Central Campus in 2008. The CDF brings the Masters students the possibility of familiarizing with <b>concurrent</b> <b>engineering</b> and its application processes through workshops and assignments. These hands-on activities always have double-oriented tasks, by combining the CDF process {{with the development of}} space-related topics. As the usefulness of <b>concurrent</b> <b>engineering</b> extends much further than space mission design, the use of the ISU CDF for design processes in other industry fields than space is also under consideration.|$|E
40|$|An {{environment}} {{to support the}} modeling, analysis, simulation, and development of state transition models, SMOOCHES (State Machines for Object-Oriented <b>Concurrent</b> Hierarchical <b>Engineering</b> Specifications), is presented. SMOOCHES allows the hierarchical construction, analysis, and simulation of state transition models in an object-oriented distributed environment. Statecharts (see Harel, 1987 c), a powerful mechanism for state transition specification, are fundamental {{to the development of}} SMOOCHES. To assist in the specification of hierarchical state transition models for distributed and reactive systems, statecharts are extended by introducing the concept of exitsafe states. SMOOCHES allows the specification of objects in the system with hierarchical state transition models and the derivation of new classes of objects through inheritance. A graphical monitoring system has been developed to represent and simulate the object state lifecycles and monitor event generations. The example prese [...] ...|$|R
40|$|The ViewPoints {{framework}} for distributed and <b>concurrent</b> software <b>engineering</b> provides {{an alternative approach}} to traditional centralised software development environments. We investigate the use of decentralised process models to drive consistency checking and conflict resolution in this framework. Our process models use pattern matching on local development histories to determine the particular situation (state) of the development process, and employ rules to trigger situationdependent assistance to the user. We describe how communication between such process models facilitates the decentralised management of explicitly defined consistency constraints in the ViewPoints framework. 1 Introduction Software engineering processes usually involve the participation {{of a number of}} people. The more people are involved, the more important becomes the collaboration and communication between the individuals. The different participants will have different views on and assumptions about the probl [...] ...|$|R
40|$|This paper {{describes}} {{our experience}} of integrating HCI concepts and techniques into a <b>concurrent</b> requirements <b>engineering</b> process called RESCUE. We focus {{on the use of}} a model of current human activity to inform specification of a future system. We show how human activity descriptions, written using a specially designed template, can facilitate the authoring of use case descriptions {{to be used in the}} elicitation of requirements for complex socio-technical systems. We describe {{our experience of}} using descriptions of human activity, written using the template, to support specification of operational requirements for DMAN, a system to support air traffic controllers in managing the departure of aircraft from airports. We end with a discussion of lessons learnt from our experience and present some ideas for future development of work in this area. 1...|$|R
