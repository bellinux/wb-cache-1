3|2752|Public
50|$|Alternatively MSS is {{also called}} an MTS-U (Motorola {{telephony}} soft-switch) in Motorola terminology, and as MSC-S in Ericsson terminology. MSC server functionality enables split between <b>control</b> <b>plane</b> (<b>signalling)</b> and user plane (bearer in network element called a media gateway), which guarantees better placement of network {{elements within the}} network.|$|E
30|$|This article investigates this challenge, by {{addressing}} the dynamic resource {{management of the}} network nodes that serve the <b>control</b> <b>plane</b> <b>signalling</b> coming from the mobile devices. A key question is {{what happens with the}} huge amount of control plane data that are generated to the network side. Inevitably, {{there is a need to}} handle the generated control plane signalling/decision-making requests efficiently, alleviating the network management burden and optimising the utilisation of the respective system resources. In this work, two types of mobile devices are considered in our system: reconfigurable and autonomous ones. The differentiation among them lies in their decision-making capabilities. Reconfigurable mobile devices simply produce decision-making requests to the network side, whereas autonomous mobile devices are able to specify a first set of alternatives that are then communicated to the network side for validation. To this end, a lightweight management mechanism of the decision-making requests is proposed, which allows for their specialised administration according to the type of originating mobile device.|$|E
40|$|This paper {{presents}} an alternative method to setup Label Switched Paths (LSPs) with Quality of Service (QoS) constraints in Multiprotocol Label Switching (MPLS) enabled networks ∗. The motivation behind {{this work is}} to gather {{the advantages of the}} Control Plane based approach and the Management Plane based approach to establish LSPs. In other words we aim for a mechanism with setup times as shorter as those realizable by <b>Control</b> <b>Plane</b> <b>signalling</b> and with Traffic Engineering capabilities as powerful as in management systems. The concept has been prototyped and initial tests have been performed in a simulated network environment. The outcome of these tests show that our system can be nearly as fast as conventional Control Plane setup mechanisms and by construction it can take advantage of all the network information got by the Management Plane for Constrained-Based Routing (CBR) purposes. Therefore, a trade-off between speed and resource optimisation is feasible. The implementation of the concept in real networks requires platforms with standard control and management interfaces, that have the role of peer network nodes and management agents at a time...|$|E
50|$|The <b>control</b> <b>plane</b> {{maintains}} {{information that}} can be used to change data used by the data plane. Maintaining this information requires handling complex signaling protocols. Implementing these protocols in the data plane would lead to poor forwarding performance. A common way to manage these protocols is to let the data <b>plane</b> detect incoming <b>signaling</b> packets and locally forward them to the <b>control</b> <b>plane.</b> The <b>control</b> <b>plane</b> <b>signaling</b> protocols can update the data plane information and inject outgoing signaling packets into the data plane. This architecture works because signaling traffic is a very small part of the global traffic.|$|R
40|$|Abstract — Peer-to-Peer (P 2 P) {{systems have}} {{witnessed}} an explo-sive growth in popularity {{due to their}} desirable characteristics (robustness, scalability, availability). In this paper, we present an approach to bring these characteristics into the <b>control</b> <b>plane</b> of IP networks, which mainly relies on signaling protocols such as SIP to setup multimedia and instant messaging sessions. We present a structured P 2 P <b>control</b> <b>plane</b> based on modifications to the original Chord P 2 P topology, resulting in a hierarchical over-lay of SIP peers that replaces traditional client-server paradigms in <b>control</b> <b>plane</b> <b>signaling</b> protocols. Implementations were used to study {{the performance of the}} proposed structured P 2 P <b>control</b> <b>plane,</b> and its suitability for use in IP networks. I...|$|R
40|$|This paper {{takes an}} {{exploratory}} look on <b>control</b> <b>plane</b> <b>signaling</b> in a mobile cellular core network. In contrast to most contributions in this field, our focus {{does not lie}} on the wireless or user-oriented parts of the network, but on signaling in the core network. In an investigation of core network data {{we take a look}} at statistics related to GTP tunnels and their signaling. Based on the results thereof we propose a definition of load at the GGSN and create an initial load queuing model. We find signs of user devices putting burden on the core network through their behavior...|$|R
40|$|Multi-Protocol Label Switching (MPLS) {{emerged as}} a {{suitable}} solution to optimization of Internet Protocol (IP) networks. It improves network efficiency, utilization of resources and resilience in packet switched networks. With MPLS, packet forwarding decisions are made based on label inspection rather than packet header information. While MPLS is native to packet switched networks, Generalized Multiprotocol Label Switching (GMPLS) extends MPLS functionality to networks that support non-packet switched domains such as time, lambda and fiber. GMPLS also offers better resource management {{through the use of}} a new protocol; Link Management Protocol (LMP). In this work, a performance evaluation of GMPLS and MPLS <b>control</b> <b>plane</b> <b>signaling</b> protocols was performed. Further, a <b>control</b> <b>plane</b> interworking model for MPLS and GMPLS networks was proposed. Simulations were carried out to examine the performance of signaling protocols in an MPLS network configured with, and without Quality-of-Service (QoS). Conclusions on the performance characteristics of each signaling protocol were made based on the collected results...|$|R
30|$|At the CE subsystem, C is {{expressed}} {{as the amount}} of CE available in UL and DL. A CE is the baseband processing capacity required in node B to provide one voice channel, including the <b>control</b> <b>plane</b> <b>signaling.</b> The particular hardware configuration of a node determines the number of cards and the amount of CE per card available (in the nodes under study, typically each card has 384 CEs). At SC, the factor C is defined as the number of SCs available in the tree for each service. There can also be more than one tree (adding a new 5 -MHz carrier). A regular SC tree has codes ranging from SF 16 to SF 256 and each service consumes one or more codes at a certain SF level.|$|R
50|$|The {{components}} {{within a}} videoconferencing {{system can be}} divided up into several different layers: User Interface, Conference <b>Control,</b> <b>Control</b> or <b>Signaling</b> <b>Plane,</b> and Media Plane.|$|R
30|$|Whenever a {{resource}} shortage is detected, more resources {{need to be}} installed in the system. At radio level, capacity enhancements {{can be made by}} the addition of new carriers. Each 5 -MHz carrier contains a full SC tree. As stated by 3 GPP, each service has a different Spreading Factor (SF) Code consumption. At node B, processing capacity is measured in terms of CE. One CE is the baseband processing capacity required in node B to provide one voice channel, including the <b>control</b> <b>plane</b> <b>signaling.</b> Each service has a different demand of CEs. Increasing the processing capacity of node B through additional CEs involves the installation of extra hardware baseband cards in node B. At the Iub, capacity upgrades will imply increasing the number of virtual channel connections (VCC) when using ATM, or increasing IP throughput when using IP. Iub CS is usually implemented through legacy ATM Constant Bit Rate Virtual Circuits while Iub PS is being migrated from ATM Variable Bit Rate VCs to IP.|$|R
40|$|The {{importance}} of reducing recovery time and latency, e. g., by adding redundancy to {{the connection is}} increasing in today’s communication networks. Thus, {{in this paper we}} investigate dedicated protection approaches which completely avoid <b>control</b> <b>plane</b> <b>signaling</b> and switching matrix reconfiguration when a network failure occurs, i. e., provide quasi instantaneous recovery from failures. As these approaches may require a huge amount of redundancy, we introduce a dynamic routing framework, called General Dedicated Protection (GDP) which provides optimal resilient capacity allocation against multiple link failures, both for routing and network coding. The computational complexity and a theoretical lower bound for GDP will be presented, too. We show the efficiency of the GDP framework through thorough simulations. Finally, we demonstrate that the necessary modules for GDP can be easily adopted in Software Defined Networks (SDNs) {{with the help of the}} OpenFlow protocol. In our proof-of-concept implementation we are following the Network Function Virtualization (NFV) approach, which allows the practical deployment of GDP in transport networks...|$|R
5000|$|While ITU {{has worked}} on the {{requirements}} and architecture of ASON based on the requirements on its members, it is explicitly aiming to avoid {{the development of new}} protocols, when existing ones will work fine. The IETF, on the other hand, has been tasked with the development of new protocols in response to general industry requirement. Therefore, while ITU already include the PNNI protocol for <b>signaling</b> in the <b>Control</b> <b>plane,</b> IETF has been developing GMPLS as a second option protocol {{to be used in the}} <b>Control</b> <b>Plane</b> for <b>signalling.</b> [...] As a product of IETF, GMPLS (Generalized MPLS) uses IP to communicate between different components in the <b>Control</b> <b>Plane.</b>|$|R
50|$|Trillium's first {{software}} product supported the X.25 communications protocol. Subsequent products were developed {{for a number}} of data communications and voice communications protocols. Trillium's primary focus in its early years was on <b>control</b> <b>plane</b> and <b>signalling</b> <b>plane</b> protocols. In later years Trillium also developed some data plane protocols. A more comprehensive list of the {{software product}}s developed by Trillium is listed in the Product History section. Trillium is currently developing software products to support the Femtocell communications protocols. Throughout its history Trillium was also very active in standards setting bodies including the CCITT/ITU, IETF, ATM Forum, Frame Relay Forum and others.|$|R
40|$|Abstract — Many {{emerging}} {{high performance}} applications require distributed infrastructure that is significantly {{more powerful and}} flexible than traditional Grids. Such applications require the optimization, close integration, and control of all Grid resources, including networks. The EnLIGHTened (ENL) Computing Project has designed an architectural framework that allows Grid applications to dynamically request (inadvance or on-demand) any type of Grid resource: computers, storage, instruments, and deterministic, high-bandwidth network paths, including lightpaths. Based on application requirements, the ENL middleware communicates with Grid resource managers and, when availability is verified, co-allocates all the necessary resources. ENL’s Domain Network Manager controls all network resource allocations to dynamically setup and delete dedicated circuits using Generalized Multiprotocol Label Switching (GMPLS) <b>control</b> <b>plane</b> <b>signaling.</b> In order to make optimal brokering decisions, the ENL middleware uses near-real-time performance information about Grid resources. A prototype of this architectural framework on a national-scale testbed implementation {{has been used to}} demonstrate a small number of applications. Based on this, a set of changes for the middleware have been laid out and are being implemented. I...|$|R
40|$|It is now {{evident to}} the {{research}} community that local computational resources cannot keep up in an economical way with the demands generated by some us-ers/applications. Therefore, distributed computing {{and the concept of}} a computational Grid are now emerging. Novel transport network concepts are needed to support such vi-sions and high-speed intelligent optical networking may be the required infrastructure that will enable global Grids. Emerging Utility Grid applications like Business Continuity and Disaster Recovery have strong requirements on the dynamic optical networks connecting the distributed Grid resources. Supporting Grid networking with an Intelligent Optical Network (ION) infrastructure will permit to offer to Utility Grid applications the necessary flexibility with the required Quality of Service (e. g., high bandwidth, reliabil-ity, limited delay). Emerging QoS requirements, such as scalable recovery time, highly depend on the ION’s signal-ing architecture. This article gives simple analytical models for the implementation options of the optical <b>control</b> <b>plane</b> <b>signaling,</b> shows simulation models for different resilience strategies and finally shows some illustrative numerical comparisons to support the aforementioned efforts. This research area is also discussed among others in the Euro...|$|R
50|$|<b>Control</b> (<b>Signaling)</b> <b>Plane</b> {{contains}} the stacks that signal different endpoints {{to create a}} call and/or a conference. Signals can be, but aren’t limited to, H.323 and Session Initiation Protocol (SIP) Protocols. These signals control incoming and outgoing connections as well as session parameters.|$|R
40|$|Failure {{dependent}} protection (FDP) {{is known}} to achieve optimal capacity efficiency among all types of protection, {{at the expense of}} longer recovery time and more complicated signaling overhead. This particularly hinders the usage of FDP in all-optical mesh networks. As a remedy, the paper investigates a new restoration framework that enables all-optical fault management and device configuration via state-of-the-art failure localization techniques, such that the FDP restoration process. It can be implemented without relying on any <b>control</b> <b>plane</b> <b>signaling.</b> With the proposed restoration framework, a novel spare capacity allocation problem is defined, and is further analyzed on circulant topologies for any single link failure, aiming to gain a solid understanding of the problem. By allowing reuse of monitoring resources for restoration capacity, we are particularly interested in the monitoring resource hidden property where less or even no monitoring resources are consumed as more working traffic is in place. To deal with general topologies, we introduce a novel heuristic approach to the proposed spare capacity allocation problem, which comprises a generic FDP survivable routing scheme followed by a novel monitoring resource allocation method. Extensive simulation is conducted to examine the proposed scheme and verify the proposed restoration framework...|$|R
40|$|Abstract—Monitoring trail (m-trail) {{has been}} {{proposed}} as an effective approach for link failure localization in all-optical WDM (Wavelength Division Multiplexing) mesh networks. Previous studies in failure localization rely on alarm dissemination via <b>control</b> <b>plane</b> <b>signaling</b> such that the network controller can collect the flooded alarms to form an alarm code for failure identification. Such cross-layer signaling effort obviously leads to additional control complexity. The paper investigates a novel m-trail failure localization scenario, called network-wide local unambiguous failure localization (NWL-UFL), where each node can perform UFL based on locally available on-off state of traversing m-trails, such that alarm dissemination in the <b>control</b> <b>plane</b> can be completely avoided. The paper firstly defines and formulates the m-trail allocation problem under NWL-UFL, and conducts a series of bound analysis on the cover length required for localizing any single link failure. This is the first study on monitoring trail allocation problem which aims to gain understanding on the consumed cover length via analytical approaches due to the special feature of the NWL-UFL scenario. A novel heuristic algorithm based on random spanning tree assignment (RSTA) and greedy link swapping (GLS) is developed for solving the formulated problem. Extensive simulation on thousands of randomly generated network topologies is conducted to verify the proposed scheme by comparing it with a naive counterpart and with the derived lower bounds. We also demonstrate the impact of topology diversity {{on the performance of}} the proposed scheme as well as its scalability regarding network sizes. I...|$|R
40|$|GMPLS is a {{generalized}} form of MPLS (MultiProtocol Label Switching). MPLS is IP packet based and it uses MPLS-TE for Packet Traffic Engineering. GMPLS is extension to MPLS capabilities. It provides separation between transmission, <b>control</b> and management <b>plane</b> and network management. <b>Control</b> <b>plane</b> allows various applications like traffic engineering, service provisioning, and differentiated services. GMPLS <b>control</b> <b>plane</b> architecture includes <b>signaling</b> (RSVP-TE, CR-LDP) and routing (OSPF-TE, ISIS-TE) protocols. This paper {{provides an overview}} of the signaling protocols, describes their main functionalities, and provides a general evaluation of both the protocols...|$|R
40|$|In this thesis, we {{consider}} instances of component {{failure in the}} Internet and in networked cyber-physical systems, such as the communication network used by the modern electric power grid (termed the smart grid). We design algorithms that make these networks more robust to various component failures, including failed routers, failures of links connecting routers, and failed sensors. This thesis divides into three parts: recovery from malicious or misconfigured nodes injecting false information into a distributed system (e. g., the Internet), placing smart grid sensors to provide measurement error detection, and fast recovery from link failures in a smart grid communication network. First, {{we consider}} the problem of malicious or misconfigured nodes that inject and spread incorrect state throughout a distributed system. Such false state can degrade {{the performance of a}} distributed system or render it unusable. For example, in the case of network routing algorithms, false state corresponding to a node incorrectly declaring a cost of 0 to all destinations (maliciously or due to misconfiguration) can quickly spread through the network. This causes other nodes to (incorrectly) route via the misconfigured node, resulting in suboptimal routing and network congestion. We propose three algorithms for efficient recovery in such scenarios and evaluate their efficacy. The last two parts of this thesis consider robustness {{in the context of the}} electric power grid. We study the use and placement of a sensor, called a Phasor Measurement Unit (PMU), currently being deployed in electric power grids worldwide. PMUs provide voltage and current measurements at a sampling rate orders of magnitude higher than the status quo. As a result, PMUs can both drastically improve existing power grid operations and enable an entirely new set of applications, such as the reliable integration of renewable energy resources. However, PMU applications require correct (addressed in thesis part 2) and timely(covered in thesis part 3) PMU data. Without these guarantees, smart grid operators and applications may make incorrect decisions and take corresponding (incorrect) actions. The second part of this thesis addresses PMU measurement errors, which have been observed in practice. We formulate a set of PMU placement problems that aim to satisfy two constraints: place PMUs 2 ̆ 2 near 2 ̆ 2 each other to allow for measurement error detection and use the minimal number of PMUs to infer the state of the maximum number of system buses and transmission lines. For each PMU placement problem, we prove it is NP-Complete, propose a simple greedy approximation algorithm, and evaluate our greedy solutions. In the last part of this thesis, we design algorithms for fast recovery from link failures in a smart grid communication network. We propose, design, and evaluate solutions to all three aspects of link failure recovery: (a) link failure detection, (b) algorithms for pre-computing backup multicast trees, and (c) fast backup tree installation. To address (a), we design link-failure detection and reporting mechanisms that use OpenFlow to detect link failures when and where they occur inside the network. OpenFlow is an open source framework that cleanly separates the <b>control</b> and data <b>planes</b> for use in network management and control. For part (b), we formulate a new problem, Multicast Recycling, that pre-computes backup multicast trees that aim to minimize <b>control</b> <b>plane</b> <b>signaling</b> overhead. We prove Multicast Recycling is at least NP-hard and present a corresponding approximation algorithm. Lastly, two <b>control</b> <b>plane</b> algorithms are proposed that <b>signal</b> data <b>plane</b> switches to install pre-computed backup trees. An optimized version of each installation algorithm is designed that finds a near minimum set of forwarding rules by sharing forwarding rules across multicast groups. This optimization reduces backup tree install time and associated control state. We implement these algorithms using the POX open-source OpenFlow controller and evaluate them using the Mininet emulator, quantifying <b>control</b> <b>plane</b> <b>signaling</b> and installation time...|$|R
40|$|Bearer service {{convergence}} between {{networks and}} telecommunication is briefly described {{in order to}} introduce the more general problem of service convergence. The technical environment required for such a convergence is analyzed, first from the stake holders point of view, then from the functional architecture point of view for the <b>control</b> <b>plane</b> and the <b>signaling</b> mechanisms. 1) Introduction: Services {{of a different kind}} Engineers presently inherit two very different paradigms for the implementation of services by means of networks. The “Telecommunication ” paradigm used in telecommunication networks is characterized by a small number of services, usually of a peer to peer and persistent nature...|$|R
40|$|Seamless host {{mobility}} {{is vital}} to future network mobility, and has been an active research area for a long time. Much research focuses {{on the performance of}} the data plane. In this paper, we present comprehensive analyses on the <b>control</b> (<b>signalling)</b> <b>plane</b> in the IETF Mobile IPv 6, and compare it with the IRTF Identifier-Locator Network Protocol (ILNP). The <b>control</b> <b>plane</b> behaviour is important in order to assess the robustness and scalability of the mobility protocol. ILNP has a different mobility model from Mobile IPv 6 : it isa host-based, end-to-end architecture and does not require additional network-layer entities. Hence, the control signals are exchanged only between the end systems. We provide model-based analyses for handoff signalling, and show that ILNP is more efficient than MIPv 6 in terms of robustness and scalability. The analytical models we present could also be adapted for other mobility solutions, for comparative assessment. Postprin...|$|R
40|$|Provisioning {{multiple}} service {{classes with}} different performance characteristics (e. g., throughput and delay) {{is an important}} challenge for future packet networks. However, in large-scale networks, individually managing each traffic flow on each of its traversed routers has fundamental scalability limitations, in both the <b>control</b> <b>plane's</b> requirements for <b>signaling,</b> state management, and admission control, and the data plane's requirements for per-flow scheduling mechanisms. In this paper, we develop a scalable technique for quality-of-service management termed egress admission control. In our approach, resource management and admission control are performed only at egress routers, without any coordination among backbone nodes or per-flow management. Our key technique {{is to develop a}} framework for admission control under a general "black box" model, which allows for cross traffic that cannot be directly measured, and scheduling policies that may be ill-described across many network nod [...] ...|$|R
40|$|As Grid {{computing}} {{continues to}} gain {{popularity in the}} research community, it also attracts more attention from the enterprise and consumer levels. Applications in these domains generate large amounts of jobs, with individual jobs having only modest resource requirements. In this article, a novel architecture to realize a highly scalable and flexible platform for consumer-oriented Grids is proposed. The architecture {{is based on an}} optical burst switched network, complemented with an advanced <b>control</b> and <b>signaling</b> <b>plane.</b> The architecture, functionality, and interfaces of all the relevant entities are presented and issues, current initiatives, and future directions for the control and management of these Grid networks are discussed...|$|R
30|$|VDTNs {{follow a}} store-carry-and-forward {{paradigm}} {{similar to the}} one that is implemented by DTNs. This approach allows VDTNs to solve several problems caused by intermittency, disconnection, and long delays. However, it distinguishes itself from DTNs by introducing the bundle layer under the network layer. This approach also assumes two logical <b>planes</b> (a <b>control</b> and a data <b>plane).</b> At the <b>control</b> <b>plane,</b> nodes exchange <b>signaling</b> messages in order to reserve resources (to be used at the data plane) and perform several routing decisions. At a given node, if there are bundles to exchange, the data plane is activated during the estimated contact duration time, and functions like queuing, scheduling, or traffic classification are performed. Data bundles aggregation/de-aggregation is performed {{at the edge of the}} network. This approach is very important because it not only ensures the optimization of the available data plane resources (e.g., storage and bandwidth) but also allows power saving, which is very important for energy-constrained network nodes, such as stationary relay nodes [3, 4].|$|R
40|$|Abstract — We {{propose a}} routing and load-balancing {{approach}} {{with the primary}} goal of being robust to sudden topological changes and significant traffic matrix variations. The proposed method load-balances traffic over several routes in an adaptive way based on its local view of the load in the network. The focus is on robustness and simplicity, rather than optimality, and so it does not rely on a given traffic matrix, nor it is tuned to a specific topology. Instead, we aim to achieve a satisfactory routing under a wide range of traffic and topology scenarios based on each node’s independent operation. The scheme avoids the instability risks of previous load-responsive routing schemes, it does not load the <b>control</b> <b>plane</b> with congestion-related <b>signaling,</b> and it can be implemented on top of existing routing protocols. In this paper, we present the proposed scheme, discuss how it aims to meet the objectives of robustness and load-responsiveness, and evaluate its performance under diverse traffic loads and topological changes with flow-level simulations. I...|$|R
30|$|VDTN {{architecture}} identifies two logical <b>planes</b> (using out-of-band <b>signaling),</b> i.e., the <b>control</b> <b>plane</b> and {{the data}} plane [24]. These planes are logically divided into two layers, the bundle signaling control (BSC) layer and the bundle aggregation and de-aggregation (BAD) layer. BSC is responsible for executing the <b>control</b> <b>plane</b> functions such as signaling messages exchange, resources reservation (at the data plane), and routing. The data plane functions that deal with data bundles are executed in BAD. These functions include data bundles aggregation/de-aggregation, queuing and scheduling, and traffic classification.|$|R
5000|$|The Management Plane is {{responsible}} for managing the <b>Control</b> <b>plane.</b> Its responsibilities include Configuration Management of the <b>Control</b> <b>Plane</b> Resources, Routing Areas, Transport resource in <b>Control</b> <b>Plane</b> and Policy. It also provides Fault Management, Performance Management, Accounting and Security Management functions. The Management Plane contains the Network Management Entity which is connected to an OCC in <b>Control</b> <b>Plane</b> via the NMI-A ( [...] Network Management Interface for ASON <b>Control</b> <b>Plane)</b> and {{to one of the}} switches via NMI-T ( [...] Network Management Interface for the Transport Network).|$|R
50|$|In essence, {{software-defined}} networking (SDN) is {{an approach to}} build data networking equipment and software that separates and abstracts elements of these systems. It does this by decoupling the <b>control</b> <b>plane</b> and data plane from each other, such that the <b>control</b> <b>plane</b> resides centrally and the forwarding components remain distributed. The <b>control</b> <b>plane</b> interacts both northbound and southbound. In the northbound direction the <b>control</b> <b>plane</b> provides a common abstracted view of the network to higher-level applications and programs using APIs. In the southbound direction the <b>control</b> <b>plane</b> programs the forwarding behavior of the data plane, using device level APIs of the physical network equipment distributed around the network.|$|R
40|$|Routing on the Internet {{combines}} data plane {{mechanisms for}} forwarding traffic with <b>control</b> <b>plane</b> protocols for guaranteeing connectivity and optimizing routes (e. g., shortestpaths and load distribution). We propose data-driven connectivity (DDC), a new routing approach that achieves the fundamental connectivity guarantees {{in the data}} plane rather than the <b>control</b> <b>plane,</b> while keeping the more complex requirements of route optimization in the <b>control</b> <b>plane.</b> DDC enables faster recovery from failures and easier implementation of <b>control</b> <b>plane</b> optimization. Categories and Subject Descriptor...|$|R
40|$|The GMPLS/OBS <b>Control</b> <b>Plane</b> is a bold {{research}} topic. Optical Burst Switching (OBS) networks need to {{be capable}} to be rapidly reconfigured {{with the aim of}} achieving an efficient use of bandwidth, low latency and high degree of transparency. The OBS <b>Control</b> <b>Plane</b> is just a packet switched network requiring a high control complexity. The demands are clear but a well-defined <b>control</b> <b>plane</b> is still an open issue. As one of excellent candidate <b>control</b> <b>plane</b> for most of network scenarios, Generalized Multi-Protocol Label Switching (GMPLS) is being taken as a reference to design such OBS <b>Control</b> <b>Plane.</b> In this paper we first describe the proposal for the interoperable GMPLS/OBS <b>Control</b> <b>Plane</b> and then based on such architecture we propose and analyze some GMPLS protocol extensions that must be done to integrate it properly into OBS networks. Postprint (published version...|$|R
40|$|With the {{increasing}} popularity of Software defined network (SDN), designing a scalable SDN <b>control</b> <b>plane</b> becomes a critical problem. An effective approach {{to improving the}} scalability is to design distributed architecture of SDN <b>control</b> <b>plane.</b> However, how to evaluate the scalability of SDN <b>control</b> <b>planes</b> remains unexplored. In this paper, we propose a metric of scalability for SDN <b>control</b> <b>planes,</b> and study three typical SDN <b>control</b> <b>plane</b> structures, including centralized, decentralized and hierarchical architectures. We build performance models for response time, based on which we evaluate the scalability of these three structures. Furthermore, the comparison between different architectures are analyzed by mathematical methods. Numerical evaluations are also conducted to validate the conclusions drawn in this paper...|$|R
50|$|The dynamic {{provisioning}} {{and maintenance of}} lightpaths is managed by the <b>control</b> <b>plane.</b> The <b>control</b> <b>plane</b> is implemented on a separate network and typically employs one network controller for each node in the data plane, {{as shown in the}} figure. The Generalized Multi-Protocol Label Switching (GMPLS) protocol suite, the de facto standard <b>control</b> <b>plane</b> for WSONs proposed by the IETF, is composed of three protocols.|$|R
40|$|Abstract—We {{explore the}} design of a logically {{centralized}} but physically distributed <b>control</b> <b>plane</b> for 4 D architecture. 4 D architecture proposes centralization of network-wide decision making state and logic in a logical <b>control</b> <b>plane</b> to ease the management complexity of data networks. However, the current design implementations of the 4 D <b>control</b> <b>plane</b> are limited to physical centralization. We argue that exploration of physically distributed <b>control</b> <b>plane</b> designs would be beneficial to the scalability and practical deployment of the architecture, and present design guidelines for different routing strategies {{that can be used to}} optimize the deployment of distributed 4 D architecture. I...|$|R
40|$|Grid-GMPLS is a Network <b>Control</b> <b>Plane</b> {{architecture}} that implements {{the concept of}} Grid Network Services. In the PHOSPHORUS framework, GNS is a service that allows the provisioning of network and Grid resources in a single-step {{through a set of}} seamlessly integrated procedures. By providing a unified network/Grid infrastructure the <b>control</b> <b>plane</b> can flexibly adapt to the demands of applications having intensive requirements on both computational resources and network resources. This article introduces the concept of the Grid-GMPLS <b>control</b> <b>plane</b> architecture with particular focus on new services, deployment models, and interoperability issues of Grid-GMPLS and GMPLS <b>control</b> <b>planes...</b>|$|R
40|$|Design of the Grid-GMPLS <b>Control</b> <b>Plane</b> {{to support}} the Phosphorus Grid AAI This {{document}} describes {{the integration of the}} GAAA-TK library released by the WP 4 in the G 2 MPLS <b>control</b> <b>plane</b> released by the WP 2, showing the GAAA-NRP token-based model adopted by the <b>control</b> <b>plane</b> for multi-domain authorization and the associated signalling used to carry the security context information along the end-to-end path. This documents describes also the functionalities and the implementation of the AuthZ gateway, the module that enables the interaction between the G 2 MPLS <b>control</b> <b>plane</b> and the GAAA-NRP infrastructure...|$|R
