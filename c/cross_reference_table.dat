4|2651|Public
40|$|Air quality modelers and {{emission}} inventory preparers {{rely on the}} SCC-Speciation Profile <b>Cross</b> <b>Reference</b> <b>Table</b> (<b>Cross</b> <b>Reference</b> <b>Table)</b> to identify appropriate speciation profiles to use for calculating species needed for air quality models from VOC and PM 2. 5. Applications of the <b>Cross</b> <b>Reference</b> <b>Table</b> are wide and essential, from photochemical modeling inputs t...|$|E
30|$|Trailer—provides {{relevant}} {{information about how}} the application reading the file should find the <b>cross</b> <b>reference</b> <b>table</b> and other special objects. The trailer also contains information {{about the number of}} revisions made to the document. All PDF readers should begin reading a file from this section.|$|E
40|$|In {{his fourth}} edition of Case Study Research Design and Methods, Robert K. Yin {{continues}} {{to encourage the}} formation of better case study research. The text provides a technical yet practical guide to aid the committed researcher. It {{is an effort to}} promote rigor and to encourage the recognition of the limitations and awareness of the strengths of case study research. Throughout the text, Yin forthrightly addressed criticisms of the method and provided a solid defense of case study research and its breadth as a research method. An unexpected bonus of the text is found in the <b>cross</b> <b>reference</b> <b>table</b> that provides access to a wealth of classic and contemporary case study research...|$|E
40|$|A Hewlett-Packard 8460 A {{spectrometer}} {{was adapted}} for automatic spectral searches and measurements under computer control. Software {{consists of a}} BASIC language control program and assembly language equipment drivers. Complete software listings are given including <b>cross</b> <b>reference</b> <b>tables.</b> Each equipment driver program is discussed, and wiring diagrams are given for the additions required for computer control...|$|R
50|$|The QPDF library {{also makes}} it {{possible}} for you to create PDF files from scratch. In this mode, you are responsible for supplying all the contents of the file, while the QPDF library takes care of the syntactical representation of the objects, creation of <b>cross</b> <b>references</b> <b>tables</b> and, optionally, object streams, encryption, linearization, and other syntactic details.|$|R
40|$|PDPGENER~enables {{the user}} to {{generate}} original program listings and source decks from machine readable PDP- 9 /L computer object code in either card or paper tape form. The reconstructed listings contain alphanumeric labelling and complete <b>cross</b> <b>reference</b> <b>tables.</b> PDPGENER may {{also be used to}} update and punch new card object decks from card or paper tape input, thus eliminating slow paper tape input to the PDP- 9 /L. Users of other small computers may also edit object decks by specifying the object card format to PDPGENER...|$|R
30|$|In {{our recent}} studies [4], [35] we {{thoroughly}} investigated PDF files {{and found that}} most malicious PDF files (96.5  %) are not compatible with the PDF file format specifications (checked with the Adobe PDF Reference 23). These files cannot be viewed by the PDF reader or the user, and an error message will likely be displayed on the screen when an attempt is made to open the file. However in such cases involving incompatible malicious PDF files, the malicious operations will still be executed. A common incompatibility observed was located {{at the end of}} the file between the “startxref” and “ %EOF” lines. This line should contain a number serving as a reference (offset) to where the last <b>cross</b> <b>reference</b> <b>table</b> section is located in the file. In cases of incompatibility, the number that appears is incorrect.|$|E
50|$|The {{main purpose}} of Texinfo {{is to provide a}} way to easily typeset {{software}} manuals. Similar to the LaTeX syntax, all the normal features of a book, such as chapters, sections, <b>cross</b> <b>references,</b> <b>tables</b> and indices are available for use in documents. Using the various output generators that are available for Texinfo, it is possible to keep several documentation types up-to-date (such as on-line documentation provided via a Web site, and printed documentation, as generated using the TeX typesetting system) using only a single source file.|$|R
40|$|Description based on: 38 th (1859). Issues for 1975 - have title: Laws of {{the state}} of Maine as passed by the [...] . Legislature. Title varies slightly, 1840 - 1973 : Acts and {{resolves}} as passed by the [...] . Legislature {{of the state}} of Maine; Acts and resolves of the [...] . Legislature {{of the state of}} Maine. Issued in parts, Mode of access: Internet. Cumulative <b>cross</b> <b>reference</b> <b>tables</b> and subject index: 1964 through 1981, 1 v.; 1964 through 1983 - 1984, 1 v.; 1989 - 1992, 1 v. Formed by the union of: Maine. Public acts of the State of Maine; Maine. Private and special acts of the State of Maine; and: Maine. Laws, etc. Resolves of the Legislature of the state of Maine...|$|R
40|$|We have‘implemented'a {{software}} package for our IBM 360 / 370 system at SLAC, which we {{use in the}} development of stand alone LSI- 11 software systems. Included in this package are: * XASMll- a cross assembler which handles a substantial subset of MACRO- 11 * PL- 11 - a cross compiler for a structured programming language designed around the PDP- 11 instruction set * FORTRAN- FORTRAN code is compiled under RT: 11, and the object modules are transmitted to the IBM 360 / 370 for translation and integration * XLCVT- a conversion program which takes as input standard DEC DOS/RT- 11 object modules or LIBR files, or object modules produced by PL- 11 and XASMll; it converts them to a form suitable for input to XLINKll * XLINKll- a cross linker which takes in relocatable object modules and outputs a DEC DOS/RT- 11 absolute loader format module, or a format suitable for an IBM 360 / 370 PDP- 11 simulator * REFORM/EPROM- conversion programs which take as input a DEC DOS absolute loader format module generated by XLINKll and convert it to a format suitable for downloading into an LSI- 11 or for burning into EPROM's * XREF- a <b>cross</b> <b>reference</b> program which takes as input a PDS of XLINKll type object modules, and outputs <b>cross</b> <b>reference</b> <b>tables</b> and information on each of the modules * WYLBUR execute files- several files of commands which may be executed from the terminal to create jobs in response to simple prompts * KERNEL- a set of MACRO- 11 and PL- 11 routines which have been burnt into 2708 EPROM's and include a terminal emulator, a down line loader, and several utility routines for the LSI- 11 All of this was accomplished by using the facilities already available on our IBM 3601370 system. Most of this package has been in regular use since Spring 1976, although new features are still being added. The manpower cost of researching, organizing, developing, and integrating the tools has paid off well in terms of programmer productivity, source code readability, accessibility, and integrity...|$|R
40|$|With {{the ongoing}} {{financial}} challenges being faced {{in the economic}} environment, research exploring financial and psychological well-being is of significant value because employees’ socio-economic behaviour affects productivity. Research emphasises mainly the effect of income level on psychological well-being, and its orientation to psychological well-being is narrowly derived from a focus on subjective well-being constructs. This study addresses the research gap by exploring the relationship dynamics between sense of coherence, income level and financial well-being. Secondary data were obtained from a cross-sectional online employee-wellness survey (n= 7 185). The sample distribution included 66 per cent females and 34 per cent males from various age groups, with 46 per cent of the sample comprising single-household earners and 54 per cent sharing household income. Analysis of variance was conducted {{to examine the relationship}} dynamics between sense of coherence, level of income and financial well-being. Demographic variables that formed part of the survey results were included in the analysis. The relationships between sense of coherence and identified significant income level, financial well-being and demographic effects were further explored in Bonferroni multiple comparisons of means test and <b>cross</b> <b>reference</b> frequency <b>tables</b> that included Pearson’s chi-square and/or Cochran–Armitage trend tests. Detail results indicate that high-income employees exhibit a significantly stronger sense of coherence than low-income employees, and that, despite level of income, financial wellbeing is nevertheless positively related to sense of coherence. Results indicate important implications for managing a financially healthy workforce. Limitations are discussed and recommendations for future research are highlighted...|$|R
40|$|Effective, {{efficient}} {{communication is}} {{an essential element of}} the software development process. The Software Design and Documentation Language (SDDL) provides an effective communication medium to support the design and documentation of complex software applications. SDDL supports communication between all the members of a software design team and provides for the production of informative documentation on the design effort. Even when an entire development task is performed by a single individual, it is important to explicitly express and document communication between the various aspects of the design effort including concept development, program specification, program development, and program maintenance. SDDL ensures that accurate documentation will be available throughout the entire software life cycle. SDDL offers an extremely valuable capability for the design and documentation of complex programming efforts ranging from scientific and engineering applications to data management and business sytems. Throughout the development of a software design, the SDDL generated Software Design Document always represents the definitive word on the current status of the ongoing, dynamic design development process. The document is easily updated and readily accessible in a familiar, informative form to all members of the development team. This makes the Software Design Document an effective instrument for reconciling misunderstandings and disagreements in the development of design specifications, engineering support concepts, and the software design itself. Using the SDDL generated document to analyze the design makes it possible to eliminate many errors that might not be detected until coding and testing is attempted. As a project management aid, the Software Design Document is useful for monitoring progress and for recording task responsibilities. SDDL is a combination of language, processor, and methodology. The SDDL syntax consists of keywords to invoke design structures and a collection of directives which control processor actions. The designer has complete control over the choice of keywords, commanding the capabilities of the processor in a way which is best suited to communicating the intent of the design. The SDDL processor translates the designer's creative thinking into an effective document for communication. The processor performs as many automatic functions as possible, thereby freeing the designer's energy for the creative effort. Document formatting includes graphical highlighting of structure logic, accentuation of structure escapes and module invocations, logic error detection, and special handling of title pages and text segments. The SDDL generated document contains software design summary information including module invocation hierarchy, module <b>cross</b> <b>reference,</b> and <b>cross</b> <b>reference</b> <b>tables</b> of user selected words or phrases appearing in the document. The basic forms of the methodology are module and block structures and the module invocation statement. A design is stated in terms of modules that represent problem abstractions which are complete and independent enough to be treated as separate problem entities. Blocks are lower-level structures used to build the modules. Both kinds of structures may have an initiator part, a terminator part, an escape segment, or a substructure. The SDDL processor is written in PASCAL for batch execution on a DEC VAX series computer under VMS. SDDL was developed in 1981 and last updated in 1984...|$|R
50|$|A <b>table</b> (called the <b>referencing</b> <b>table)</b> {{can refer}} to a column (or a group of columns) in another <b>table</b> (the <b>{{referenced}}</b> <b>table)</b> by using a foreign key. The referenced column(s) in the <b>referenced</b> <b>table</b> must be under a unique constraint, such as a primary key. Also, self-references are possible (not fully implemented in MS SQL Server though). On inserting a new row into the <b>referencing</b> <b>table,</b> the relational database management system (RDBMS) checks if the entered key value exists in the <b>referenced</b> <b>table.</b> If not, no insert is possible. It is also possible to specify DRI actions on UPDATE and DELETE, such as CASCADE (forwards a change/delete in the <b>referenced</b> <b>table</b> to the <b>referencing</b> <b>tables),</b> NO ACTION (if the specific row is referenced, changing the key is not allowed) or SET NULL / SET DEFAULT (a changed/deleted key in the <b>referenced</b> <b>table</b> results in setting the referencing values to NULL or to the DEFAULT value if one is specified).|$|R
40|$|Reference {{paragraph}} 2. 28. 18. Insert a {{space between}} “ 741 ” and “to”. Reference paragraph 3. 5. 1. Change “Attachment 5 ” to “Attachment 6 ”. Reference paragraph 3. 4. 2. Change “Attachment 5 ” to Attachment 4 ”. Reference Attachment 13, paragraph A 13. 3. 3. Change “within a year ” to “no later than 6 months”. <b>Reference</b> <b>Table</b> A 11. 2. The formatting {{needs to be}} corrected. The last column is truncated. <b>Reference</b> <b>Table</b> A 11. 3. The formatting needs to be corrected. The last column is truncated. <b>Reference</b> <b>Table</b> A 11. 4. The formatting needs to be corrected. The last column is truncated. <b>Reference</b> <b>Table</b> A 11. 5. The formatting needs to be corrected. The last column is truncated. <b>Reference</b> <b>Table</b> A 11. 5. First row, second column, change “regulator ” to “regulatory”. <b>Reference</b> <b>Table</b> A 11. 6. The formatting needs to be corrected. The last column is truncated. <b>Reference</b> <b>Table</b> A 11. 7. The formatting needs to be corrected. The last column is truncated. <b>Reference</b> <b>Table</b> A 11. 8. The formatting needs to be corrected. The last column is truncated. <b>Reference</b> <b>Table</b> A 11. 9. The formatting needs to be corrected. The last column is truncated. <b>Reference</b> <b>Table</b> A 11. 10. The formatting needs to be corrected. The last column is truncated. <b>Reference</b> <b>Table</b> A 11. 11. The formatting needs to be corrected. The last column is truncated...|$|R
50|$|In a {{normalized}} data model, {{the reference}} domain is typically specified in a <b>reference</b> <b>table.</b> Following the previous example, a Gender <b>reference</b> <b>table</b> would have exactly two records, one per allowed value—excluding NULL. <b>Reference</b> <b>tables</b> are formally related to other tables in a database {{by the use}} of foreign keys.|$|R
3000|$|... -angle bin in the <b>reference</b> <b>table.</b> After {{traversing}} all {{the points}} on the contour template, the template generation and <b>reference</b> <b>table</b> are completed.|$|R
50|$|Multiple rows in the <b>referencing</b> (or child) <b>table</b> may {{refer to}} the same row in the <b>referenced</b> (or parent) <b>table.</b> In this case, the {{relationship}} between the two tables is called a one to many relationship between the <b>referenced</b> <b>table</b> and the <b>referencing</b> <b>table.</b>|$|R
40|$|Analytical {{results for}} soil samples (site) Analytical results for soil samples (reference) Analytical results for tundra soil samples (site) Analytical results for tundra soil samples (reference) Analytical results for stream {{sediment}} samples (site) Analytical results for stream sediment samples (reference) Analytical results for stream surface water samples (site) Analytical results for stream surface water samples (reference) Analytical results for pond sediment samples (site) Table C- 10. Analytical results for pond sediment samples (<b>reference)</b> <b>Table</b> C- 11. Analytical results for pond surface water samples (site) Table C- 12. Analytical results for pond surface water samples (<b>reference)</b> <b>Table</b> C- 13. Analytical results for lagoon sediment samples (site) Table C- 14. Analytical results for lagoon sediment samples (<b>reference)</b> <b>Table</b> C- 15. Analytical results for lagoon surface water samples (site) Table C- 16. Analytical results for lagoon surface water samples (<b>reference)</b> <b>Table</b> C- 17. Analytical results for marine sediment samples (site) Table C- 18. Analytical results for marine sediment samples (<b>reference)</b> <b>Table</b> C- 19. Analytical results for marine surface water samples (site) Table C- 20. Analytical results for marine surface water samples (<b>reference)</b> <b>Table</b> C- 21. Analytical results for moss (site) Table C- 22. Analytical results for moss (<b>reference)</b> <b>Table</b> C- 23. Analytical results for fish tissue (site...|$|R
50|$|An author {{working in}} a content {{management}} system is responsible for identifying subjects of interest that cross documents, and creating appropriate systems of <b>cross</b> <b>references</b> to support readers who seek to understand those subjects. For an individual <b>cross</b> <b>reference,</b> an author should ensure that location {{and content of the}} target of the <b>cross</b> <b>reference</b> are clearly identified, and the reader can easily determine how to follow the <b>cross</b> <b>reference</b> in each medium in which publication is supported.|$|R
50|$|This is {{an example}} of a <b>reference</b> <b>table</b> with risk {{categories}} for drivers of vehicles. It can be referenced from any satellite in the data vault. For now we reference it from satellite S_DRIVER_INSURANCE. The <b>reference</b> <b>table</b> is R_RISK_CATEGORY.|$|R
50|$|Whenever rows in {{the master}} (<b>referenced)</b> <b>table</b> are deleted (or updated), the {{respective}} rows of the child (<b>referencing)</b> <b>table</b> with a matching foreign key column will be deleted (or updated) as well. This is called a cascade delete (or update).|$|R
40|$|When {{identifying}} and elaborating compliance requirements, analysts {{need to follow}} the <b>cross</b> <b>references</b> in legal texts and consider the additional information in the cited provisions. Enabling easier navigation and handling of <b>cross</b> <b>references</b> requires automated support {{for the detection of}} the natural language expressions used in <b>cross</b> <b>references,</b> the interpretation of <b>cross</b> <b>references</b> in their context, and the linkage of <b>cross</b> <b>references</b> to the targeted provisions. In this article, we propose an approach and tool sup- port for automated detection and resolution of <b>cross</b> <b>references.</b> The approach leverages the structure of legal texts, formalized into a schema, and a set of natural language patterns for legal <b>cross</b> <b>reference</b> expressions. These patterns were developed based on an investigation of Luxembourg’s legislation, written in French. To build confidence about their applicability beyond the context where they were observed, these patterns were validated against the Personal Health Information Protection Act (PHIPA) by the Government of Ontario, Canada, written in both French and English. We report on an empirical evaluation where we assess the accuracy and scalability of our framework over several Luxembourgish legislative texts as well as PHIPA...|$|R
50|$|If the <b>cross</b> <b>reference</b> {{mechanism}} is well designed, {{the reader will}} be able to follow each <b>cross</b> <b>reference</b> to the referenced content whether the content is presented in print or electronically.|$|R
5000|$|... #Subtitle level 2: <b>Reference</b> <b>table</b> of layouts and normalisations ...|$|R
5000|$|... a quick <b>reference</b> <b>table</b> on {{the most}} {{significant}} operational information ...|$|R
5000|$|Because the {{database}} management system enforces referential constraints, it must ensure data integrity if rows in a <b>referenced</b> <b>table</b> are to be deleted (or updated). If dependent rows in <b>referencing</b> <b>tables</b> still exist, those references have to be considered. SQL:2003 specifies 5 different referential actions that shall take place in such occurrences: ...|$|R
50|$|A value {{cannot be}} updated or deleted when a row {{exists in a}} <b>referencing</b> or child <b>table</b> that <b>references</b> the value in the <b>referenced</b> <b>table.</b>|$|R
5000|$|... #Caption: MIL-STD-105 D Quick <b>reference</b> <b>Table,</b> TABLE I and TABLE IIA ...|$|R
5000|$|Executing a [...] {{statement}} {{can cause}} triggers to run {{that can cause}} deletes in other tables. For example, if two tables are linked by a foreign key and rows in the <b>referenced</b> <b>table</b> are deleted, then it is common that rows in the <b>referencing</b> <b>table</b> {{would also have to}} be deleted to maintain referential integrity.|$|R
40|$|Privacy Preserving Record Linkage is an {{emerging}} {{field of research}} which attempts {{to deal with the}} classical linkage problem from a privacy preserving point of view. In this paper we propose a novel approach for performing Privacy Preserving Blocking in order to minimize the computational cost of Privacy Preserving Record Linkage. We achieve this without compromising privacy by using Nearest Neighbors clustering, a well-known clustering algorithm and by using a <b>reference</b> <b>table.</b> A <b>reference</b> <b>table</b> is a publicly known table the contents of which are used as intermediate references. The combination of Nearest Neighbors and a <b>reference</b> <b>table</b> offers our approach k-anonymity characteristics. © 2012 ACM...|$|R
40|$|Text {{segmentation}} is {{the process}} of converting information in unstructured text into structured records. This is an important problem since structured data is amenable to efficient query processing. CRFs are a class of discriminative probabilistic models that are gaining acceptance as an effective computing machinery for text segmentation. An important aspect of CRFs is learning model parameters from labeled training data. Labeling can be a labor intensive process. One can avoid the labeling step by using structured <b>reference</b> <b>tables</b> whose data domains and that of the input text data given for segmentation, coincide. In other words the labels in the training data drawn from <b>reference</b> <b>tables</b> “come for free”. Inspired by recent work on their use for training HMMs, we developed an unsupervised technique for text segmentation with CRFs using <b>reference</b> <b>tables.</b> Assuming text sequences to be segmented come in batches and sequences in a batch conform to the same attribute order, we build CRF models for each attribute in the <b>reference</b> <b>table,</b> use them to decide the attribute order of a batch of input sequences, derive labeled training data from the <b>reference</b> <b>table</b> according to that order, and train a global CRF model to segment the input sequences in the batch. Preliminary experimental results indicate that our technique works well in practice. ...|$|R
50|$|This syntax {{defines a}} {{variable}} {{of the type}} of the referenced column on the <b>referenced</b> <b>tables.</b>|$|R
30|$|All {{the values}} in the <b>reference</b> <b>tables</b> were rounded to one {{significant}} digit after the decimal point.|$|R
5000|$|... #Caption: An {{example of}} a SIP - MIL-STD-105 D Quick <b>reference</b> <b>Table,</b> TABLE I and TABLE IIA ...|$|R
50|$|Tuscaloosa <b>cross</b> <b>reference</b> {{directories}} from 1966 to 2004.|$|R
5000|$|Bible {{concordance}} and <b>cross</b> <b>reference</b> for Hungarian translation ...|$|R
