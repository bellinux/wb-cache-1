69|251|Public
5000|$|Block or {{alert the}} user about all {{unauthorized}} inbound or outbound <b>connection</b> <b>attempts</b> ...|$|E
5000|$|... enable ECN when {{requested}} by incoming connections, and also request ECN on outgoing <b>connection</b> <b>attempts</b> ...|$|E
5000|$|In {{computer}} networking, port knocking is {{a method}} of externally opening ports on a firewall by generating a connection attempt {{on a set of}} prespecified closed ports. Once a correct sequence of <b>connection</b> <b>attempts</b> is received, the firewall rules are dynamically modified to allow the host which sent the <b>connection</b> <b>attempts</b> to connect over specific port(s). A variant called single packet authorization exists, where only a single [...] "knock" [...] is needed, consisting of an encrypted packet.|$|E
50|$|A {{more subtle}} idea is greylisting, which, in simple terms, rejects the first <b>connection</b> <b>attempt</b> from any previously-unseen IP address. The {{assumption}} is that most spammers make only one <b>connection</b> <b>attempt</b> (or a few attempts over {{a short period of}} time) to send each message, whereas legitimate mail delivery systems will keep retrying over a longer period. After they retry, they will eventually be allowed in without any further impediments.|$|R
30|$|In UTRAN, a <b>connection</b> <b>attempt</b> {{is blocked}} {{whenever}} {{one of the}} necessary resources is not available. At the same time, resources need to attend different services simultaneously.|$|R
5000|$|Allows {{the user}} to control which {{programs}} can and cannot access the local network and/or Internet and provide the user with information about an application that makes a <b>connection</b> <b>attempt</b> ...|$|R
50|$|Connection reset: If a {{previous}} TCP connection is {{blocked by the}} filter, future <b>connection</b> <b>attempts</b> from both sides can also be blocked for some variable amount of time. Depending on {{the location of the}} block, other users or websites may also be blocked, if the communication is routed through the blocking location. A circumvention method is to ignore the reset packet sent by the firewall.|$|E
50|$|Slowloris {{tries to}} keep many {{connections}} to the target web server open and hold them open as long as possible. It accomplishes this by opening connections to the target web server and sending a partial request. Periodically, it will send subsequent HTTP headers, adding to—but never completing—the request. Affected servers will keep these connections open, filling their maximum concurrent connection pool, eventually denying additional <b>connection</b> <b>attempts</b> from clients.|$|E
50|$|The {{practice}} {{of attempting to}} connect {{to a range of}} ports in sequence on a single computer is commonly known as port scanning. This is usually associated either with malicious cracking attempts or with network administrators looking for possible vulnerabilities to help prevent such attacks. Port <b>connection</b> <b>attempts</b> are frequently monitored and logged by computers. The technique of port knocking uses a series of port connections (knocks) from a client computer to enable a server connection.|$|E
5000|$|The MS {{sends the}} first {{message on the}} new Dm, which is the RR Paging Response message. This message {{contains}} a mobile identity (IMSI or TMSI) and also implies a <b>connection</b> <b>attempt</b> in the MM sublayer.|$|R
50|$|Katie Lee's <b>connections</b> <b>attempted</b> to make further {{history in}} seeking a rare victory for a filly in the New Zealand Derby, but {{a mixture of}} a tough and long {{campaign}} and the 2,400 metres of the Derby meant {{she was unable to}} perform as expected, finishing 14th.|$|R
50|$|The {{proposal}} modifies the TCP {{three-way handshake}} by only accepting connections from clients that transmit a proof {{of knowledge of}} a shared secret. If the <b>connection</b> <b>attempt</b> does not use TCP Stealth, or if authentication fails, the server acts as if no service was listening on the port number.|$|R
5000|$|Port {{knocking}} {{is usually}} implemented by configuring a daemon {{to watch the}} firewall log file for said <b>connection</b> <b>attempts</b> then modify the firewall configuration accordingly. It can also be performed on the kernel level (using a kernel-level packet filter such as iptables) or by a userspace process examining packets {{at a higher level}} (using packet capture interfaces such as pcap), allowing the use of already [...] "open" [...] TCP ports to be used within the knock sequence.|$|E
5000|$|A Hack Trapper is an {{application}} {{run on a}} sometimes deliberately unprotected machine or network {{with the intention of}} alerting the user of <b>connection</b> <b>attempts.</b> A Hack Trapper listens on certain ports which are commonly used to gain unauthorized access to a machine or data on it. When a connection is made, the user is alerted in some way. In most cases the source IP address is logged to help trace the connection. Some of these ports include Remote Desktop Protocol, Windows File Sharing, NetBIOS, as well as many Trojan Horses and Backdoors.|$|E
5000|$|After Google officially stopped {{supporting}} Google Talk for Windows on February 23, 2015, {{the application}} continued to function normally during an apparent grace period lasting until February 28. As of that date, <b>connection</b> <b>attempts</b> returned an error message stating [...] "Username and password do not match." [...] Those users received a notification e-mail stating, in part: [...] "We noticed you recently tried using the Google Talk app for Windows. We {{wanted to let}} you know that this was discontinued on February 23rd 2015. We recommend giving Hangouts a try so you can chat with all your Google contacts." ...|$|E
3000|$|..., respectively. In general, higher {{priority}} {{is given to}} requests from handover users rather than new users, because a connection that is abruptly terminated is more annoying than an occasionally blocked new <b>connection</b> <b>attempt</b> from the user perspective. Therefore, handover requests have a {{higher priority}} than new requests, so {{it is necessary that}} [...]...|$|R
5000|$|A {{key feature}} of a random-access channel is that {{messages}} are not scheduled (compared to, for example, a [...] "dedicated channel" [...] in UMTS, which is assigned exclusively to one user at a time). There is no certainty {{that only a}} single device makes a <b>connection</b> <b>attempt</b> at one time, so collisions can result.|$|R
50|$|The tarball {{includes}} a library named libwrap that implements the actual functionality. Initially, only services that were spawned for each connection from a super-server (such as inetd) got wrapped, utilizing the tcpd program. However most common network service daemons today {{can be linked}} against libwrap directly. This is used by daemons that operate without being spawned from a super-server, or when a single process handles multiple connections. Otherwise, only the first <b>connection</b> <b>attempt</b> would get checked against its ACLs.|$|R
50|$|Communication is {{possible}} over a connection {{in spite of}} a duplex mismatch. Single packets are sent and acknowledged without problems. As a result, a simple ping command fails to detect a duplex mismatch because single packets and their resulting acknowledgments at 1-second intervals do not cause any problem on the network. A terminal session which sends data slowly (in very short bursts) can also communicate successfully. However, as soon as either end of the <b>connection</b> <b>attempts</b> to send any significant amount of data, the network suddenly slows to very low speed. Since the network is otherwise working, the cause is not so readily apparent.|$|E
5000|$|As Cheung and Yoyo's {{relationship}} turns serious, Tung {{finds his}} own {{relationship with a}} married woman turning sour. She routinely asks him for money seems she's paying him for sex, which leaves him constantly broke. When Push-pin realizes slapping Yoyo has resulted in Cheung becoming an enemy, Push-pin hands Tung a handful of money, [...] "as a gift." [...] Actually, this act is a bribe, and when Cheung is later attacked {{by a group of}} Push-pin's men and Tung, having made the <b>connection,</b> <b>attempts</b> to bring Push-pin in, Push-pin reminds Tung of the money he'd given him. Tung finds himself powerless to arrest Push-pin without exposing himself as having been bribed.|$|E
5000|$|In its {{simplest}} implementation, Round-robin DNS {{works by}} responding to DNS requests {{not only with}} a single potential IP address, but with one out of a list of potential IP addresses corresponding to several servers that host identical services. The order in which IP addresses from the list are returned {{is the basis for}} the term [...] With each DNS response, the IP address sequence in the list is permuted. Usually, basic IP clients attempt connections with the first address returned from a DNS query, so that on different <b>connection</b> <b>attempts,</b> clients would receive service from different providers, thus distributing the overall load among servers.|$|E
50|$|A duplex {{mismatch}} causes {{problems when}} {{both ends of}} the <b>connection</b> <b>attempt</b> to transfer data at the same time. This happens even if the channel is used (from a high-level or user's perspective) in one direction only, in case of large data transfers. Indeed, when a large data transfer is sent over a TCP, data is sent in multiple packets, some of which will trigger an acknowledgment packet back to the sender. This results in packets being sent in both directions at the same time.|$|R
40|$|Abstract. Sampling-based motion {{planning}} {{has been}} successful in plan-ning the motion {{for a wide variety of}} robot types. An important primitive of these methods involves connecting nodes by selecting candidate neigh-bors and checking the path between them. Recently, an approach called Adaptive Neighbor Connection (ANC) was proposed to automate neigh-bor selection using machine learning techniques. It adaptively selects a neighbor connection strategy from a candidate set of options and learns which strategy to use by examining their success rates and costs. In this work, we extend ANC’s reward function by characterizing the types of nodes added (including information about their connectivity) after each <b>connection</b> <b>attempt.</b> In doing so, we gain insight into the na-ture of these nodes and their ability to improve roadmap quality. We also refine ANC’s cost function by considering the computation time spent during each <b>connection</b> <b>attempt</b> so as to potentially learn faster and more efficient connectors. We show improved performance over selecting a sin-gle connection strategy and over ignoring node characterization during learning. We present results in a variety of 2 D and 3 D environments and are able to solve queries in half the time on average compared to the best single connection strategy and to the original ANC work. ...|$|R
40|$|Abstract. Many times, network {{intrusion}} attempts {{begin with}} either a network scan, where a <b>connection</b> is <b>attempted</b> to every possible destination in a network, or a port scan, where a <b>connection</b> is <b>attempted</b> to each port on a given destination. Being able to detect such scans can help identify a more dangerous threat to a network. Several techniques exist to automatically detect scans, but these are mostly dependant on some threshold that an attacker could possibly avoid crossing. This paper presents a means to use visualization to detect scans interactively...|$|R
50|$|Each {{computer}} may {{act as a}} server, a client, or both. In {{the server}} configuration a listening socket is opened on a specific port (default port is 99) and the server waits for <b>connection</b> <b>attempts</b> from its clients. The client connects by opening a socket and sending data to the server in the format HeaderData. The header contains information about the message such as the message length, message number which can be anything from 1 to 4,294,967,295 and the part unique identifier or serial number which is limited to 10 digits (9,999,999,999 max). The serial number consists of the year 4 digits, {{the day of the}} year (0-366) 3 digits and a 3 digit sequential number.|$|E
5000|$|Version 1.1 {{incorporated}} {{text messaging}} and window docking; version 1.21 (April 2001) incorporated better video capture and firewall support, call blocking, improved text messaging and web integration. The PC Magazine May 2001 review of Eyeball Chat LE v1.21 {{approved of the}} product's [...] "breadth of control", including image resizing, automatic or manual frame rate and quality adjustments, and its management features for call blocking, information privacy, and text chatting or video answering of calls. On the other hand, it was [...] "not quite ready for prime time" [...] because Internet congestion resulted in video and audio degradation, required multiple <b>connection</b> <b>attempts,</b> and the audio lag required speaking [...] "at a deliberate pace, punctuated by pauses". Overall, [...] "Eyeball chat should be graded on a curve", and it was deemed [...] "pretty neat." ...|$|E
5000|$|Intrusion {{tolerance}} is a fault-tolerant design {{approach to}} defending information systems against malicious attack. Abandoning the conventional aim of preventing all intrusions, intrusion tolerance instead calls for triggering mechanisms that prevent intrusions from {{leading to a}} system security failure. Intrusion response is {{a key component of}} intrusion tolerance, in which an automated response is launched to a detected intrusion. Surveys of intrusion tolerance and intrusion response techniques {{can be found at the}} following links [...] and. The survey categorizes the response systems as either static or dynamic (or adaptive). Static systems are simple in nature and have a static mapping from the symptom of an intrusion to the response that should be taken. For example, when a packet with a malware sample is intercepted, blacklist the IP address from which the packet was sent. Dynamic systems are more complex and learn from the context and there is no fixed mapping from symptom to response action. For example, the initial response to the malware-laden packet may be to slow down further <b>connection</b> <b>attempts</b> and after some time blacklist the IP address and then blacklist the subnet that the IP address belongs to.|$|E
30|$|Advocates of {{the trust}} on first use method (TOFU) reject {{the idea of having}} to rely on a third-party-issuing {{certificates}} that have to be renewed periodically. Instead users are supposed to make a leap of faith, trusting and pinning the certificate that has been presented by a remote host during the very first <b>connection</b> <b>attempt.</b> This approach is familiar from its use in SSH and it also has been proposed for encrypted e-mails [27]. The application of the TOFU approach for SSL certificate validation has been proposed in [28]. An implementation of the concept is the certificate patrol browser extension [29].|$|R
40|$|Last mile link {{is often}} a {{bottleneck}} for end user. However, users typically have multiple ways of accessing the Internet (cellular, ADSL, public Wifi). This observation led to creation of protocols like mTCP or R-MTP. Current bandwidth aggregation protocols are packet based. However, {{this is not always}} practical - for example, non-TCP protocols are often blocked on firewalls. Moreover, a lot of effort was devoted over the years into making single-path TCP work well over various types of links. In this paper we introduce protocol which uses multiple TCP streams to establish single reliable <b>connection</b> <b>attempting</b> to maximize bandwidth and minimize latency...|$|R
50|$|The {{potentially}} scandalous {{matter is}} resolved, until {{a group of}} prostitutes — Annie's friends Mary Kelly, Polly Nichols, Anne Chapman, and Liz Stride — who {{are aware of the}} illegitimate child and its royal <b>connections,</b> <b>attempt</b> to blackmail Sickert to pay off a gang of thugs who are threatening them. After Queen Victoria learns of the blackmail attempt, Gull is once again enlisted, this time to silence the group of women who are threatening the crown. The police are complicit in the crimes — they are granted prior knowledge of Gull's intentions, and are adjured not to interfere until the plot is completed.|$|R
5000|$|Video {{enhancement}} is {{the latest}} evolution of CTC technology. To understand this implementation, imagine that while {{the other end of}} your call is being connected, you're watching TV style video on your computer screen with the synchronized audio presentation coming over the telephone. This high impact implementation of Request-a-Call (CTC) technology is generally used to keep the consumer's interest while the appropriate person he needs to speak to is located, perhaps as the call rolls through sequential call <b>connection</b> <b>attempts,</b> trying, e.g., the target's office direct dial, then cell, then home. From a commercial perspective, the video component is more important as an obvious opportunity for a target to emphasize, cross sell, up sell, or otherwise make an [...] "impression," [...] as in [...] "cost per impression" [...] or CPI, on a consumer-browser-inquiring who otherwise might not be converted to a buyer. Such an impression will generally be made on an extremely well targeted audience, because it will only be made on a consumer who requests it, and from a page that allows the web host to know exactly what the consumer's interest is at precisely the time when that consumer is most likely to be in a buying mood.|$|E
5000|$|In {{order to}} make {{decisions}} in its operations with peers, a BGP peer uses a simple finite state machine (FSM) that consists of six states: Idle; Connect; Active; OpenSent; OpenConfirm; and Established. For each peer-to-peer session, a BGP implementation maintains a state variable that tracks which of these six states the session is in. The BGP defines the messages that each peer should exchange in order to change the session from one state to another. The first state is the [...] "Idle" [...] state. In the [...] "Idle" [...] state, BGP initializes all resources, refuses all inbound BGP <b>connection</b> <b>attempts</b> and initiates a TCP connection to the peer. The second state is [...] "Connect". In the [...] "Connect" [...] state, the router waits for the TCP connection to complete and transitions to the [...] "OpenSent" [...] state if successful. If unsuccessful, it starts the ConnectRetry timer and transitions to the [...] "Active" [...] state upon expiration. In the [...] "Active" [...] state, the router resets the ConnectRetry timer to zero {{and returns to the}} [...] "Connect" [...] state. In the [...] "OpenSent" [...] state, the router sends an Open message and waits for one in return in order to transition to the [...] "OpenConfirm" [...] state. Keepalive messages are exchanged and, upon successful receipt, the router is placed into the [...] "Established" [...] state. In the [...] "Established" [...] state, the router can send/receive: Keepalive; Update; and Notification messages to/from its peer.|$|E
30|$|On the DL, <b>connection</b> <b>attempts</b> first {{enter the}} Iub. Accepted {{connections}} through Iub are then processed at DL CE {{to decide whether}} sufficient resources are available. Finally, the remaining non-blocked traffic reaches the SC block. The output through the entire chain will conform to the successful connections performed. On the UL, the <b>connection</b> <b>attempts</b> will first reach the UL CE and then the Iub UL. The output traffic will be the successful connections (Figure 4). SC {{is not involved in}} the uplink as each user terminal has its own set of orthogonal codes.|$|E
50|$|Such {{encrypted}} or hashed exchanges do {{not directly}} reveal the password to an eavesdropper. However, they may supply {{enough information to}} allow an eavesdropper to deduce what the password is, using a dictionary attack or brute-force attack. The use of information which is randomly generated on each exchange (and where the response {{is different from the}} challenge) guards against the possibility of a replay attack, where a malicious intermediary simply records the exchanged data and retransmits it at a later time to fool one end into thinking it has authenticated a new <b>connection</b> <b>attempt</b> from the other.|$|R
50|$|The SRP {{protocol}} has {{a number}} of desirable properties: it allows a user to authenticate themselves to a server, it is resistant to dictionary attacks mounted by an eavesdropper, and it does not require a trusted third party. It effectively conveys a zero-knowledge password proof from the user to the server. In revision 6 of the protocol only one password can be guessed per <b>connection</b> <b>attempt.</b> One of the interesting properties of the protocol is that even if {{one or two of the}} cryptographic primitives it uses are attacked, it is still secure. The SRP protocol has been revised several times, and is currently at revision 6a.|$|R
40|$|This paper proposes an {{intelligent}} mobile middleware utilizing group-based content push with dynamic session startup and plugand-play features. Solution enhances {{the distribution of}} mobile content, such as game applications or multimedia files, within a peer group community. It exploits the social relationships of the user community to enable instant application downloading, installation, and licensing upon incoming <b>connection</b> <b>attempt</b> initiated by another peer group member. In {{the core of the}} middleware functionality are dynamic application identification and immediate session startup. This paper presents a use case scenario for a content push procedure. Functional and technical analysis of the novel middleware component are provided. Observations from experimental signaling system setup are mapped with estimates of end-to-end delay budget...|$|R
