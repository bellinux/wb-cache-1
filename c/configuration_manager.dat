134|48|Public
5|$|Windows RT {{does not}} support {{connecting}} to a domain for network logins, nor does it support using Group Policy for device management. However, Exchange ActiveSync, the Windows Intune service, or System Center <b>Configuration</b> <b>Manager</b> 2012 SP1 {{can be used to}} provide some control over Windows RT devices in enterprise environments, such as the ability to apply security policies and provide a portal which can be used to sideload apps from outside Windows Store.|$|E
25|$|Oracle <b>Configuration</b> <b>Manager</b> (OCM, {{previously}} Customer Configuration repository or CCR) gathers and uploads {{details of}} the configuration of Oracle software.|$|E
25|$|The {{kernel mode}} parts consist of the Virtual Machine Manager (VMM), the Installable File System Manager (IFSHLP), the <b>Configuration</b> <b>Manager,</b> and in Windows 98 and later, the WDM Driver Manager (NTKERN). As a 32-bit {{operating}} system, virtual memory space is 4 GiB, divided into a lower 2 GiB for applications and an upper 2 GiB for kernel per process.|$|E
30|$|<b>Configuration</b> <b>Managers</b> (E 7): {{composed}} by three LinkedIn groups of interest devoted to configuration management (CM). Its main skills groups are CM (12.30  %), Programming (10.73  %) and Personal Skills (10.09  %).|$|R
5000|$|An Admin Area, with {{options and}} <b>configurations</b> {{allowing}} <b>managers</b> to control technicians and support hours, view reports, create inquiries and perform other business administration tasks.|$|R
5000|$|IBM Software <b>Configuration</b> and Library <b>Manager</b> (SCLM) is an IBM {{software}} {{product that is}} a component of ISPF.|$|R
25|$|The Windows Executive {{services}} {{make up the}} low-level kernel-mode portion, and {{are contained}} in the file NTOSKRNL.EXE. It deals with I/O, object management, security and process management. These are divided into several subsystems, among which are Cache Manager, <b>Configuration</b> <b>Manager,</b> I/O Manager, Local Procedure Call (LPC), Memory Manager, Object Manager, Process Structure and Security Reference Monitor (SRM). Grouped together, the components can be called Executive services (internal name Ex). System Services (internal name Nt), i.e., system calls, are implemented at this level, too, except very few that call directly into the kernel layer for better performance.|$|E
25|$|Background Intelligent Transfer Service (BITS) is a {{component}} of Microsoft Windows 2000 and later iterations of the operating systems, which facilitates asynchronous, prioritized, and throttled transfer of files between machines using idle network bandwidth. It is most commonly used by recent versions of Windows Update, Microsoft Update, Windows Server Update Services, and System Center <b>Configuration</b> <b>Manager</b> to deliver software updates to clients, Microsoft's anti-virus scanner Microsoft Security Essentials (a later version of Windows Defender) to fetch signature updates, and is also used by Microsoft's instant messaging products to transfer files. BITS is exposed through the Component Object Model (COM).|$|E
2500|$|Desired State Configuration (DSC) Local <b>Configuration</b> <b>Manager</b> (LCM) version 2.0 ...|$|E
30|$|This paper {{exemplified}} {{through a}} survey on characteristics of agility and agile practices in software processes {{the use of}} a conceptual framework for supporting sampling in large scale SE surveys and how it can contribute for retrieving representative samples. As a result, a set of pertinent groups of interest from the professional social network LinkedIn could be stratified, suggesting similarities between them. From these strata, it was possible to randomly recruit a representative sample of 7745 individuals distributed in all continents. Then, based on the characterization reported by the respondents, the strata were reorganized into the following five amalgamated groups: agilists, testing professionals, programmers, <b>configuration</b> <b>managers</b> and system analysts. This process allowed us to identify relevant findings regarding the survey’s object of study.|$|R
40|$|Abstract: The Chimera Methodology is a {{software}} engineering paradigm that enables rapid development of real-time applications {{through use of}} dynamically reconfigurable and reusable software. It is targeted towards a distributed shared memory computing environment. The primary contribution {{of this research is}} the port-based object model of a real-time software component. The model is obtained by applying the portautomaton formal computational theory to object-based design. A finite state machine, detailed interface specifications, and a C-language template are used to define the port-based object. Tools to support the integration, scheduling, and state variable communication between the objects have been developed and incorporated into the Chimera Real-Time Operating System. Techniques for verifying correctness and analyzing performance are also provided for <b>configuration</b> <b>managers</b> that integrate software designed using the port-based object model. 1...|$|R
40|$|The Chimera Methodology is a {{software}} engineering paradigm that enables rapid development of real-time applications {{through use of}} dynamically reconfigurable and reusable software. It is targeted towards a distributed shared memory computing environment. The primary contribution {{of this research is}} the port-based object model of a real-time software component. The model is obtained by applying the portautomaton formal computational theory to object-based design. A finite state machine, detailed interface specifications, and a C-language template are used to define the port-based object. Tools to support the integration, scheduling, and state variable communication between the objects have been developed and incorporated into the Chimera Real-Time Operating System. Techniques for verifying correctness and analyzing performance are also provided for <b>configuration</b> <b>managers</b> that integrate software designed using the port-based object model. 1. INTRODUCTION The Chimera Methodology is a [...] ...|$|R
2500|$|Upon {{running a}} configuration, DSC {{will ensure that}} the system gets the state {{described}} in the configuration. DSC configurations are idempotent. [...] The Local <b>Configuration</b> <b>Manager</b> (LCM) periodically polls the system using the control flow described by resources (imperative pieces of DSC) {{to make sure that}} the state of a configuration is maintained.|$|E
5000|$|In 2009 Microsoft {{offered a}} new way to {{implement}} App-V with enhancements to System Center <b>Configuration</b> <b>Manager.</b> System Center <b>Configuration</b> <b>Manager</b> Architecture consists of the following components: ...|$|E
50|$|System Center <b>Configuration</b> <b>Manager</b> integration.|$|E
5000|$|The {{utilities}} in this menu group {{include the}} Connection Manager {{for managing the}} Wi-Fi <b>configuration,</b> a File <b>Manager,</b> a firmware System Update tool.|$|R
30|$|One way {{to develop}} event-time pacing {{would be to}} study how {{strategic}} managers can use event metrics to gauge progress and assess performance that derive from event-time pacing. Innovators and managers can gauge their progress by examining how useful are the configurations they are imagining, if they are deepening their understanding well enough to tackle the new problems that emerge as they develop their new strategy and if not why not, and question how promising are the alternatives and consequences suggested by the imagined <b>configuration.</b> <b>Managers</b> can also clock-time {{how long it takes}} to determine if learning events have occurred, how quickly people recognize emerging perturbations and evaluate learning events, how quickly others provide input to the evaluating and reframing, and how quickly innovators identify alternatives and choose among them to take next steps. Both temporal structures can address strategic issues such as does this opportunity open a new niche, protect us from competition, or give us a long term foothold.|$|R
40|$|This paper {{presents}} our {{solution for}} specifying and imple-menting self-adaptivness within an OS-based and reconfig-urable embedded system according to objectives such as qual-ity of service (QoS), performance or power consumption. More precisely, we detail {{our approach to}} separate, at runtime, application-specific decisions and hardware/software imple-mentation decisions at system level. The first ones are re-lated to {{the control of the}} efficiency of applications, they are specified in Local <b>Configuration</b> <b>Managers</b> (LCM) based on the knowledge of application engineers. The second ones are generic and address the choice between various hardware and software implementations according to observations of the gap between online measurements and objectives set by the user, these decisions are implemented in the Global Con-figuration Manager (GCM) as an adaptive close-loop model. We have designed a video tracking application on an FPGA to demonstrate the effectiveness of our solution, results are given for a system built around a NIOS soft-core with µCOS II RTOS and new services for managing hardware and soft-ware tasks transparently. Categories and Subject Descriptors C. 3 [Special-purpose and application-based systems]: Real-time and embedded system...|$|R
5000|$|The <b>Configuration</b> <b>Manager</b> {{composed}} of the following components: ...|$|E
5000|$|System Center <b>Configuration</b> <b>Manager</b> (formerly System Management Server) ...|$|E
5000|$|... #Subtitle level 4: Shared System Center <b>Configuration</b> <b>Manager</b> ...|$|E
50|$|The Service Model defines {{flexible}} and efficient {{ways in which}} an Agent may pass a <b>Manager</b> <b>configuration</b> information. In this way the Manager can build its own picture of the objects possessed by the Agent.|$|R
40|$|OPERA is a long-baseline {{neutrino}} experiment at the Gran Sasso underground laboratories (LNGS), {{to observe}} V-tau appearance in a V-mu neutrino beam produced at CERN. The detector is {{a structure of}} two super modules, each built-up of a massive lead/nuclear-emulsion target complemented by electronic detectors and a magnetic spectrometer. The two magnets are instrumented by 1000 Resistive Plate Chambers (RPCs) detectors for a total surface of about 3200 m(2). The slow control system {{has been designed to}} monitor and control all the critical parameters for the proper functioning of the spectrometers. The different hardware (Magnet and RPC High Voltage power supplies, RPC current meters, Magnet and RPC temperature sensors, RPC timing boards) is read out via CAN bus connections by several distributed clients. The clients write the data to a relational database (PostgresSQL) which {{is the heart of the}} system: it gives persistence to the data and allows to perform correlations useful to debug possible system malfunctioning. Among the various tools (histograms and XML <b>Configuration</b> <b>Managers),</b> a controller process checks for possible failures of the system using data from the database and generates warnings/alarms for people on shift...|$|R
5000|$|V6.0 {{released}} on January 1, 2011. LibreOffice added. Libraries and utilities were updated. Linux 2.6.36 kernel sources {{are available in}} the live DVD. Save configuration was improved. WICD is used for network <b>configuration.</b> A package <b>manager</b> was added for building and downloading lzm.|$|R
5000|$|Desired State Configuration (DSC) Local <b>Configuration</b> <b>Manager</b> (LCM) version 2.0 ...|$|E
50|$|App-V 4.x has direct {{integrations}} with <b>Configuration</b> <b>Manager</b> 2007 SP1 through 2012 R2.|$|E
5000|$|In depth {{knowledge}} of CNC mapping configuration changes using Object <b>Configuration</b> <b>Manager</b> (OCM) ...|$|E
40|$|Software {{development}} is a highly cooperative activity. The first systems developed to support software development have been, more or less explicitly, {{based on the assumption}} that software could be divided into independent components that could be developed separately and then merged together. This assumption is no longer acceptable (if it ever has been). Developers work in a highly cooperative fashion and the individual (sub-groups) activities are strictly related, often in unexpected and unplanned ways. This becomes particularly relevant when we think about development teams distributed over the network (Divitini & Farshchian, 1999), where people get together “to have the work done ” without a strict organizational and power structure. Supporting cooperation is therefore a central and challenging issue in providing developers with a computer based tool facilitating their activities rather than hindering them. Though many traditional tools used for software development have lately addressed cooperation, still, we believe that there is a need for ad-hoc groupware addressing the cooperation level (in terms of communication, coordination and information sharing facilities). This groupware tool must be able to interact with the tools that are normally at the disposal of the developers, such as <b>configuration</b> <b>managers</b> and tools for process modeling. 1. Groupware and transaction model...|$|R
40|$|Context: Configuration {{management}} {{is one of}} the important support processes within IT. Configuration {{management is}} involved in IT phases such as design, development, test and deployment. Stream overview as an important document for communication with teams; it helps people to determining the project strategy. Stream overview generator can {{play an important role in}} configuration management. Objective: This thesis will identify the gap in configuration management. The master thesis project consists of finding a solution to visualize and maintain project stream overview. The research report is valuable to people involved in configuration management who want to improve the work process. Method: Concerning the configuration management in real industry, the research study has been carried out with case study methodology. This thesis was performed at the IXR (Interventional X-Ray) department in Philips healthcare. Results: The necessary visual elements are defined, and the stream overview generator was created based on the research results. The stream overview generator allows <b>configuration</b> <b>managers</b> to create and maintain the stream overview. Conclusion: The stream overviews for planning propose is essential to have a good solution. The proposed model of stream overview generator shows how to deal with the issues on planning and maintaining the stream overview in the configuration management process...|$|R
50|$|The {{architecture}} of WebWork {{was based on}} the MVC Framework, Command, and Dispatcher patterns and the principle of Inversion of Control. The life cycle of a WebWork request begins when the servlet container receives a new request. The new request is passed through a set of filters called the filter chain and sent to the FilterDispatcher. The FilterDispatcher forwards the request to the ActionMapper to determine {{what needs to be done}} with the request. If the request requires an action, it sends an ActionMapping object back to the FilterDispatcher. If not, ActionMapper returns a null object, indicating that no action needs to be taken. The FilterDispatcher forwards the request and the ActionMapper object to the ActionProxy for further action. The ActionProxy invokes the <b>Configuration</b> File <b>manager</b> to get the attributes of the action, which is stored in the xwork.xml file and creates an ActionInvocation object. The ActionInvocation object contains attributes like the action, invocation context, result, result code, etc. The <b>configuration</b> file <b>manager</b> has access to these configuration files and is used by the ActionProxy as a gateway to the configuration files. The ActionInvocation object also has information about Interceptors that need to be invoked after or before an action is executed.|$|R
5000|$|System Center <b>Configuration</b> <b>Manager</b> 2012, {{released}} in 2012 with significant changes to application deployment capabilities.|$|E
5000|$|System Center <b>Configuration</b> <b>Manager</b> 2007, {{released}} in 2007 with support for Windows Vista and Windows Server 2008.|$|E
5000|$|System Center <b>Configuration</b> <b>Manager</b> uses server1.contoso.com as {{an example}} site when {{connecting}} to a new site server.|$|E
30|$|Evaluating the Configuration of Interdependencies by Elaborating and Narrowing: These {{ideas are}} {{hypothesized}} configurations of interdependencies among learning events that might constitute a value creating opportunity {{that is to}} be empirically evaluated and reframed. Instead of assuming that outsourcing R&D to universities and biotech firms will automatically work, for example, strategic managers would implement this idea in a particular way (e.g., with a certain university or type of collaboration), and experiment with the hypothesized configurations to generate evaluative knowledge. By elaborating and narrowing around the interdependencies in the <b>configurations,</b> <b>managers</b> and innovators explore the actual interactions to see how and why their hypothesized configuration actually works. They elaborate out around a subset of interdependencies among resources to consider if these interdependencies are central or not, how and why, and what else they can learn. They narrow in on interdependencies that seem stable and useful, and then elaborate out again to see other possibilities. Elaborating and narrowing balances new knowledge with existing insights. For example, managers might narrow in on particular kinds of university collaborations, and elaborate out around how fully and usefully knowledge transfers as assumed, and if not why not. The goal is to evaluate if this configuration of resources can create value based on why managers thought it would, and to explore underlying assumptions in order to learn.|$|R
50|$|Holding {{down the}} shift key while mousing FILE then EXIT WINDOWS {{will save the}} current <b>configuration</b> of Program <b>Manager</b> to PROGMAN.INI, {{including}} the position of all program group icons, assuming that auto-arrange has been disabled. This allowed Microsoft testers to try many different configurations, but the feature remained in the shipped version.|$|R
50|$|The Technical Information Division has {{responsibility}} for the NDIA configuration and data management (CDM) professional certification program. This includes preparation training for certification, the administration of examinations, and the award of certifications. NDIA has established two CDM certification levels: Certified <b>Configuration</b> and Data <b>Manager</b> (CCDM) and Certified Configuration and Data Specialist (CCDS).|$|R
