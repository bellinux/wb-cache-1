21|222|Public
5000|$|... {{which is}} a single logical <b>comment</b> <b>line</b> (used in C++ and C99), and ...|$|E
50|$|In {{addition}} to selector lines, a gophermap may contain comment lines. Comment lines {{are not for}} code comments; rather, they are lines of text sent to the client to display alongside the menu items, such as for a menu description or welcome message. A <b>comment</b> <b>line</b> contains no tab characters.|$|E
5000|$|The OBJ {{file format}} {{is a simple}} data-format that {{represents}} 3D geometry alone [...] - [...] namely, the position of each vertex, the UV position of each texture coordinate vertex, vertex normals, and the faces that make each polygon defined as a list of vertices, and texture vertices. Vertices are stored in a counter-clockwise order by default, making explicit declaration of face normals unnecessary. OBJ coordinates have no units, but OBJ files can contain scale information in a human readable <b>comment</b> <b>line.</b>|$|E
5000|$|The example {{starts with}} several [...] (<b>comment)</b> <b>lines</b> {{followed}} by the last comment on a [...] (<b>comment</b> end) <b>line.</b> The [...] must be followed by geometry lines (lines whose commands start with the letter [...]|$|R
5000|$|Blank <b>lines</b> and <b>comment</b> <b>lines</b> {{beginning}} with a [...] "#" [...] are ignored.|$|R
2500|$|<b>Comment</b> <b>lines</b> can be prefixed {{with the}} # {{character}} {{as well as}} the % character; ...|$|R
5000|$|... This is a <b>comment</b> <b>line</b> * Load the fullword integer {{stored at}} the * {{location}} labeled 'ZIGGY' into general register 3: L 3,ZIGGY SLA 4,5 shift {{the value in}} general register 4 left by 5 bits MVC TARGET,SOURCE move characters from location 'SOURCE' to 'TARGET' AP COUNT,=P'1' add 1 to value in memory location 'COUNT' (packed decimal format) B NEXT unconditional branch to label 'NEXT' HERE EQU * This is a label CLC TARGET,=C'ADDRESS' Compare memory location 'TARGET' to string 'ADDRESS' BE THERE branch if equal to program label 'THERE' ...|$|E
5000|$|The {{shows are}} spontaneous, {{although}} some trends have developed. These often entail Dawn singing, or the signature sign-off [...] "good night, Inkernet." [...] Dawn will often tell a peculiar story; Drew often comments on these stories, getting Dawn sidetracked, {{at which point}} Dawn emasculates Drew. Listeners are invited to call their audio <b>comment</b> <b>line</b> at (206) 666-3825 (which, on an alphanumeric touchtone phone, spells the oft-mentioned [...] "MOM-FUCK"), to leave a voice message, and these messages are then played {{at the end of}} each show. Family members of both hosts have made appearances on the show.|$|E
5000|$|Talkback Live {{was taped}} {{in an open}} air studio {{in the middle of}} the CNN Center atrium in {{downtown}} Atlanta. Filling the 200 plus seats of the audience was no small task. The show had several staff members dedicated to recruiting audience members for the daily show. Many tourists taking the CNN Studio Tour were often persuaded to sit in the audience. The recruiters or [...] "Audience Coordinators" [...] as they were called often solicited people in popular downtown Atlanta spots with the promise of appearing on live television and a 15-minute MCI pre-paid calling card (MCI sponsored the program's call-in <b>comment</b> <b>line).</b>|$|E
5000|$|Semicolons (...) at the {{beginning}} of the <b>line</b> indicate a <b>comment.</b> <b>Comment</b> <b>lines</b> are ignored.; <b>comment</b> text ...|$|R
5000|$|<b>Comment</b> <b>lines</b> {{having an}} {{asterisk}} (*) {{in the first}} column. Comment may also appear in other line after a semicolon( [...] ;).|$|R
5000|$|Fortran 77: A non-comment {{line is a}} {{continuation}} of the previous non-comment line if any non-space character appears in column 6. <b>Comment</b> <b>lines</b> cannot be continued.|$|R
5000|$|Comments - The SREC {{file format}} {{does not support}} comments. Some {{software}} ignores all text lines that do not start with [...] "S" [...] and ignores all text after the checksum field; that extra text is sometimes used (incompatibly) for comments. For example, the CCS PIC compiler supports placing a [...] ";" [...] <b>comment</b> <b>line</b> at the top or bottom of an Intel HEX file, and its manuals states [...] "some programmers (MPLAB in particular) do not like comments {{at the top of}} the hex file", which is why the compiler has the option of placing the comment at the bottom of the hex file.|$|E
5000|$|In 2011, the Prime Minister of the United Kingdom stated {{during a}} Commonwealth of Nations Heads of Government Meeting (CHOGM) in Australia that his Government {{would find it}} {{difficult}} to provide aid for countries which still had laws banning sodomy on their statute books. Thereafter, the Attorney General for Barbados stated publicly that Barbados would not be dictated to by the U.K. [...] Following the statement, several members of Barbados' openly gay community stated that Barbados should begin to offer packaged tourism deals for gay tourists. However an informal <b>comment</b> <b>line</b> by the Barbados Nation newspaper found that plan to be disliked by some.|$|E
5000|$|The XYZ {{file format}} is a {{chemical}} file format. There is no formal standard and several variations exist, but a typical XYZ format specifies the molecule geometry {{by giving the}} number of atoms with Cartesian coordinates that will be read on the first line, a comment on the second, and the lines of atomic coordinates in the following lines. [...] The file format is used in computational chemistry programs for importing and exporting geometries. The units are generally in ångströms. Some variations include using atomic numbers instead of atomic symbols, or skipping the <b>comment</b> <b>line.</b> Files using the XYZ format conventionally have the [...] extension.|$|E
50|$|Dot {{supports}} C and C++ style {{single line}} and multiple <b>line</b> <b>comments.</b> In addition, it ignores lines {{with a number}} sign symbol (#) as their first character. // This is a single <b>line</b> <b>comment.</b> /* This is a multiple <b>line</b> <b>comment.</b> */ # <b>Lines</b> like this are also ignored.|$|R
50|$|Comments are {{generally}} formatted as either block comments (also called prologue comments or stream <b>comments)</b> or <b>line</b> <b>comments</b> (also called inline comments).|$|R
5000|$|... mkd is a {{software}} application for extracting pre-encoded <b>comments</b> <b>lines</b> to generate software documentation {{according to the}} ISO/IEC 26514:2008 standard. mkd is an abbreviation of make documentation. mkd was originally known as mkdoc.|$|R
5000|$|It may {{be noted}} that for the SPICE/Pspice program, the first line being the title line, it may contain any type of text. The last line being the [...]END statement, the order of lines in between is {{irrelevant}} and {{does not affect the}} results of simulation. If any Pspice statement is more than one line, the statement can continue to the next line having a +sign in the first column of the next line. A <b>comment</b> <b>line</b> can be included anywhere proceeded by an (*). Upper or lower case letters may be used for Pspice statements (upper case for SPICE 2). Number of blanks between items is insignificant except in the title line.|$|E
5000|$|The {{following}} Fielded Text Meta file specifies {{the structure}} and layout (schema) of the above text file. [...] Following is a Declared Fielded Text file which contains the above CSV text together with the its meta embedded as comments. The ~ character specifies a <b>comment</b> <b>line.</b> ~|!Fielded Text^| Version="1.0" [...] ~ MetaEmbedded="True" [...] ~ [...] ~ [...] ~ [...] ~ [...] ~ [...] ~ [...] ~ [...] ~ [...] ~ [...] ~ [...] "Pet Name", [...] "Age", [...] "Color", [...] "Date Received", [...] "Price", [...] "Needs Walking", [...] "Type" [...] , (Years), , , (Dollars), , [...] "Rover", 4.5, Brown, 12 Feb 2004, 80, True, [...] "Dog" [...] "Charlie", , Gold, 5 Apr 2007, 12.3, False, [...] "Fish" [...] "Molly", 2, Black, 12 Dec 2006, 25, False, [...] "Cat" [...] "Gilly", , White, 10 Apr 2007, 10, False, [...] "Guinea Pig" ...|$|E
40|$|Project {{specific}} information These are transcripts {{of the infant}} directed speech of 10 mothers to their typically developing infants from age 3 to 12 months and 8 mothers to their 9 infants at risk of autism, defined as having at least one older sibling diagnosed with autism. Each transcription relates to a single session of 5 continuous minutes where mother and infant were engaged in face-to-face interaction. All mothers spoke Hiberno- or Irish-English. Warnings. Only maternal vocalisations and speech addressed to the infants are transcribed. If the infant vocalised or interjected this {{is included in the}} <b>comment</b> <b>line</b> on occasion but actual vocalisations are not trascribed. Information on relevant activity on the infant's part is provided in the <b>comment</b> <b>line</b> where it contextualises mothers' speech. All songs, nursery rhymes, jingles, routines, and onomatopeic sounds are transcribed. Pseudonyms Participants gave informed consent for the use of their data and real names have been replaced by pseudonyms throughout. History of Project The title of this project is: Mother's Infant Directed Speech (IDS) in face-to-face interaction with normally developing infants and infant siblings (SIBS-A) of children with Autistic Spectrum Disorder, aged 3 to 12 months. This was a longitudinal project funded by the Irish Research Council for the Humanities and Social Sciences (IRCHSS). Funding was awarded to Dr. Jean Quigley under a Research Development Initiative grant scheme in 2009...|$|E
50|$|In MATLAB's {{programming}} language, the '%' character {{indicates a}} single-line <b>comment.</b> Multi <b>line</b> <b>comments</b> {{are also available}} via %{ and %} brackets and can be nested, e.g.|$|R
5000|$|Z80 programmers often start {{lines with}} [...] " [...] (double {{quotation}} mark) to denote a <b>comment.</b> <b>Lines</b> starting with [...] " [...] are actually executed changing the [...] variable, but this doesn't affect {{anything other than}} performance unless [...] is read immediately afterwards.|$|R
50|$|There are {{two major}} types of SLOC measures: {{physical}} SLOC (LOC) and logical SLOC (LLOC). Specific definitions of these two measures vary, but the most common definition of physical SLOC is a count of lines {{in the text of}} the program's source code excluding <b>comment</b> <b>lines.</b>|$|R
40|$|I review what we {{currently}} {{do and do}} {{not know about the}} masses of disk galaxies and their dark matter halos. The prognosis for disks is good: the asymptotic rotation velocity provides a good indicator of total disk mass. The prognosis for halos is bad: cuspy halos provide a poor description of the data, and the total mass of individual dark matter halos remains ill-constrained. Comment: 6 pages. Invited review for the ESO workshop The Mass of Galaxies at Low and High Redshift, ed. R. Bender & A. Renzini. (Text unchanged. Info in this <b>comment</b> <b>line</b> got scrambled in original submission: this bibliographic information is the only change. ...|$|E
40|$|We {{give the}} nonperturbative phase {{diagram of the}} four-dimensional hot electroweak phase transition. A {{systematic}} extrapolation a → 0 is done. Our {{results show that the}} finite temperature SU(2) -Higgs phase transition is of first order for Higgs-boson masses m_H< 66. 5 ± 1. 4 GeV. The full four-dimensional result agrees completely with that of the dimensional reduction approximation. This fact is of particular importance, because it indicates that the fermionic sector of the Standard Model (SM) can be included perturbatively. We obtain that the Higgs-boson endpoint mass in the SM is 72. 4 ± 1. 7 GeV. Taking into account the LEP Higgs-boson mass lower bound excludes any electroweak phase transition in the SM. Comment: LATTICE 98 (electroweak), presented by Z. Fodor. Latex, 3 pages, 3 figu res. <b>Comment</b> <b>line</b> change...|$|E
40|$|Software {{testing is}} {{important}} phase of software development life cycle which ensure the developerthat the developed software work according to specifications or not. To make testing {{efficient and effective}} atechniques of test case prioritization are used. A well-organized Test case prioritization technique reduces thecost of testing and fault detection capabilities of testing. We will go to purpose a new technique whichreduces the cost of testing by using new approach for test case prioritization. This approach use clusteringtechnique to prioritize the test case in appropriate order which improve the effectiveness of testing and reducethe cost and efforts required for testing. This approach groups the test case with same characteristics withinsame cluster. This approach also improves the fault detection capability of test case prioritization based oncost effectiveness parameter of test cases and function coverage ability of test case. Our approach of test caseprioritization use function coverage parameter which allows tester to prioritize the test case based on theiractual function coverage ability without considering number of lines covered by test case which may containextra <b>comment</b> <b>line...</b>|$|E
5000|$|Some {{programming}} languages employ both {{block and}} <b>line</b> <b>comments</b> with different comment delimiters. For example, C++ has block comments delimited by [...] and [...] that can span multiple <b>lines</b> and <b>line</b> <b>comments</b> delimited by [...] Other languages support only {{one type of}} comment. For example, Ada <b>comments</b> are <b>line</b> comments: they start with [...] and continue {{to the end of}} the line.|$|R
5000|$|<b>Comment</b> <b>lines</b> in [...]properties {{files are}} denoted {{by the number}} sign (#) or the exclamation mark (!) as the first non blank character, in which all {{remaining}} text on that line is ignored. The backwards slash is used to escape a character. An example of a properties file is provided below.|$|R
5000|$|... sed scripts {{can have}} <b>comments</b> (the <b>line</b> {{starting}} with the [...] symbol).|$|R
40|$|This is a {{teaching}} material about object-oriented programming, illustrated {{with use of}} the programming language C#. The initial version was written i 2006. It is assumed, as a prerequisite, that the readers have some knowledge about imperative programming, preferably knowledge about C. I {{believe that it is}} best to learn object-oriented programming after having learned and worked with imperative programming. Thus, we adhere to an "object later approach". The starting point of of this teaching material is a number of slides. The slides are annotated with explanations and additional resources. The most comprehensive version of the material has the form of a traditional textbook. You can think of the textbook as grown on top of the slide material. Almost all programs in this material have been developed together with the material. However, a few programs come from other sources. If the programs are not original, the source programmers are mentioned and acknowledged in an initial <b>comment</b> <b>line</b> of the program. The current version of the material is complete up to (and including) the last chapter i...|$|E
40|$|We {{describe}} a pseudo- 3 D photoionization code, NEBU 3 D {{and its associated}} visualization tool, VIS NEB 3 D, which are able to easily and rapidly treat {{a wide variety of}} nebular geometries, by combining models obtained with a 1 D photoionization code. The only requirement for the code to work is that the ionization source is unique and not extended. It is applicable as long as the diffuse ionizing radiation field is not dominant and strongly inhomogeneous. As examples of the capabilities of these new tools, we consider two very different theoretical cases. One is that of a high excitation planetary nebula that has an ellipsoidal shape with two polar density knots. The other one is that of a blister HII region, for which we have also constructed a spherical model (the spherical impostor) which has exactly the same Hβ surface brightness distribution as the blister model and the same ionizing star. We present and <b>comment</b> <b>line</b> intensity maps corresponding to different viewing angles. We also use the computed line intensities to derive physical properties of the model {{in the same way as}} an observer would do for a real object. For example, we derive the “apparent” value of N/O for the entire nebulae and along spectral slits of different orientations. For thi...|$|E
40|$|We {{observe that}} the {{periodic}} variations in spin-down rate and beam-width {{of the radio}} pulsar PSR B 1828 - 11 are getting faster. In {{the context of a}} free precession model, this corresponds to a decrease in the precession period P_fp. We investigate how a precession model can account for such a decrease in P_fp, in terms of an increase over time in the absolute biaxial deformation (|ϵ_p|∼ 10 ^- 8) of this pulsar. We perform a Bayesian model comparison against the 'base' precession model (with constant ϵ_p) developed in Ashton et al (2016), and we obtain decisive odds in favour of a time-varying deformation. We study two types of time-variation: (i) a linear drift with a posterior estimate of ϵ̇_p∼ 10 ^- 18 s^- 1 and odds of 10 ^ 75 compared to the base-model, and (ii) N discrete positive jumps in ϵ_p with very similar odds to the linear ϵ_p-drift model. The physical mechanism explaining this behaviour is unclear, but the observation could provide a crucial probe of the interior physics of neutron stars. We also place an upper bound on {{the rate at which the}} precessional motion is damped, and translate this into a bound on a dissipative mutual friction-type coupling between the star's crust and core. Comment: 14 pages, 12 figures. Updated to incorporate referee comments, including new appendix discussing differences in contributions from the two data sets employed. Accepted by MNRAS. (Identical to v 2 aside from this <b>comment</b> <b>line...</b>|$|E
50|$|Statements {{can extend}} beyond one line. You can have several {{statements}} {{in a single}} line (though this is not recommended). Lines that begin with asterisk * in the first column are recognized as <b>comment</b> <b>lines</b> by the ABAP runtime system and are ignored. Double quotations marks (") indicate that the remainder of a <b>line</b> is a <b>comment.</b>|$|R
5000|$|The image {{shown above}} using only 0 or the maximal {{value for the}} {{red-green-blue}} channels can be also encoded as:White space including <b>line</b> ends and <b>comment</b> <b>lines</b> is syntactically equivalent to a single space within the PNM headers. For the plain formats P1…P3 this also affects the pixmap lines; in fact lines {{should be limited to}} 70 characters: ...|$|R
40|$|The program {{described}} {{creates the}} first derivative functions of given function of limited complexity, namely generalized polynomials, but involving possibly many variables. Neither nested functions nor general rational forms are handled. However, partials to such functions {{can usually be}} readily programmed utilizing those forms produced automatically. Similarly, if a function of many variables is nonlinear in only a few, only derivatives of nonlinear terms need to be created; the constant derivatives can be added with ordinary DO-loops or similar standard programming techniques. Three main files are used, indicated by integer variables IN, IFIN and IFOUT. Using these symbols to denote these files, IN contains the FORTRAN source code representing one or more functions f(X) to be differetiated, where X is a vector. The code must contain special <b>comment</b> <b>lines</b> delimiting and identifying each function. File IFIN contains additional <b>comment</b> <b>lines</b> which are really statements in a stylized language which specifies differ entiation, referring to the functions defined in IN. File IFIN can be a preprogrammed (but incomplete) FORTRAN routine which includes the differ entiation statements at appropriate points. File IFOUT, the output, contains the program from IFIN elaborated with statements to compute the derivatives specified. The <b>comment</b> <b>lines</b> are retained and serve as useful comments in the final routine. After an explanatory foreword, usage {{of the program is}} explained. This can be regarded as a users manual. Therafter, detailed explanations of the method, including flowcharts, are given...|$|R
