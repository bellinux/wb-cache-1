424|320|Public
5000|$|Indistinguishability: <b>Covert</b> <b>channel</b> must lack identification.|$|E
5000|$|Detectability: <b>Covert</b> <b>channel</b> must be {{measurable}} by {{the intended}} recipient only.|$|E
5000|$|<b>Covert</b> <b>channel</b> tool hides data in IPv6, SecurityFocus, August 11, 2006.|$|E
40|$|Abstract- <b>Covert</b> <b>channels</b> leaks {{information}} where information travels overlooked. Encryption used {{to protect}} the communication from being deciphered by unlawful users. But <b>covert</b> <b>channels</b> hide the presence of communication. <b>Covert</b> <b>channels</b> are serious security intimidation. There are many existing techniques available for development of <b>covert</b> <b>channels</b> by influencing certain fields in the network protocols such as HTTP, IP, TCP, etc. The available packet length based <b>covert</b> <b>channels</b> are having tamper resistance capability but due to abnormal traffic distribution results in recognition possibility. In this paper we present overview of different protocol {{as well as some}} packet length based <b>covert</b> <b>channels.</b> Index Terms- <b>covert</b> <b>channels,</b> packet length, high bandwidth, network protocols,packet payload,computer network C I...|$|R
40|$|IEEE Comp Soc, Task Force Informat Assurance, IEEE Informat Assurance Activit, IEEE Mass Storage Syst Tech Comm, Int Assoc Cryptol ResWe {{characterize}} {{the properties of}} <b>covert</b> <b>channels</b> and present a taxonomy of <b>covert</b> <b>channels.</b> Information flow sequence is adopted to represent information flows and <b>covert</b> <b>channels.</b> <b>Covert</b> <b>channels</b> are categorized according to their informati...|$|R
40|$|Features of packet {{switching}} networks and the blanket distribution of high-speed IP networks result in widespread research of <b>covert</b> <b>channels.</b> Adversary’s possibilities {{used to build}} <b>covert</b> <b>channels</b> in IP networks were analyzed. Traffic encryption does not protect against {{a wide range of}} <b>covert</b> <b>channels,</b> and the presence of resistant to the detection encoding schemes makes necessary to introduce preventive countermeasures against to the potential <b>covert</b> <b>channels.</b> The compliance between the mechanisms of <b>covert</b> <b>channels</b> construction in IP networks and the methods of eliminating and bandwidth limitation was matched...|$|R
50|$|The HTTP stream {{with its}} <b>covert</b> <b>channel</b> is termed an HTTP tunnel.|$|E
50|$|Their <b>covert</b> <b>channel</b> {{analysis}} {{does not}} consider issues such as interoperability of these data hiding techniques with other network nodes, <b>covert</b> <b>channel</b> capacity estimation, effect of data hiding on the network in terms of complexity and compatibility. Moreover, the generality of the techniques cannot be fully justified in practice since the OSI model does not exist per se in functional systems.|$|E
5000|$|Operational Assurance: System Architecture, System Integrity, <b>Covert</b> <b>Channel</b> Analysis, Trusted Facility Management and Trusted Recovery ...|$|E
40|$|Network <b>covert</b> <b>channels</b> provide two {{entities}} {{the ability}} to communicate stealthily. Hypertext Transfer Protocol (HTTP), which accounts for approximately half of all traffic on the Internet (Burke, 2007), has become the fertile ground for various network <b>covert</b> <b>channels.</b> Proliferation of network <b>covert</b> <b>channels</b> throughout the World Wide Web and other areas of cyberspace has raised new security concerns and brought both challenges and enhancements to the area of Information Warfare. <b>Covert</b> <b>channels</b> impact our ability to observe and orient in this domain and need to be better understood. They are however, extremely difficult to study as a whole. Network <b>covert</b> <b>channels</b> tend to be protocol, implementation, and/or application specific. Similar to biology or botany, where we classify plants and animals, the first step of research is to define a classification scheme. In the paper, it is intended to define a set of common characteristics, classify and analyze several known <b>covert</b> <b>channels</b> in HTTP with respect to these characteristics. New HTTP based <b>covert</b> <b>channels</b> are discussed and their characteristics presented as well. Although many applications of <b>covert</b> <b>channels</b> are malicious in nature, this paper argues that there are beneficial applications of network <b>covert</b> <b>channels,</b> such as detecting Man-in-the-Middle attacks...|$|R
40|$|Keywords: <b>Covert</b> <b>channels</b> in IP {{networks}} are investigated. The possibilities adversary needs to construct <b>covert</b> <b>channels</b> are given. Current methods of <b>covert</b> <b>channels</b> elimination, detection and capacity limitation are examined. Detection methods are compared using such criteria: alpha and beta errors, an ability of implementation...|$|R
40|$|Although both {{anonymity}} and <b>covert</b> <b>channels</b> {{are part}} of the larger topic of information hiding, there also exists an intrinsic linkage between anonymity and <b>covert</b> <b>channels.</b> This linkage was illustrated in [1]; however, [1] just scratched the surface of the interplay between <b>covert</b> <b>channels</b> and anonymity, without a formal analysis of the related issues. This paper begins the process of formalizing the linkage between anonymity and <b>covert</b> <b>channels</b> via the study of quasi-anonymous channels. We also discuss and contrast some of the existing formal mathematical models of anonymity...|$|R
5000|$|In {{computer}} networks, a <b>covert</b> <b>channel</b> can {{be established}} by  transfer information objects between processes that {{are not supposed to}} be allowed to communicate by the computer security policy. For example, the timing of the packets transmitted over the network can be used to transfer messages. Although this method is hiding a message in another message, this is not considered stenography in the literature, but <b>covert</b> <b>channel.</b>|$|E
50|$|While at UCLA, Abad {{discovered}} a {{method by which}} collisions in the hash function used in Internet Protocol datagrams may be leveraged to enable <b>covert</b> <b>channel</b> communications. His discovery was a centerpiece of covert communications methodology and was the primary citation for an Association for Computing Machinery paper on <b>covert</b> <b>channel</b> detection and another on a similar technique using TCP timestamps, the two most well-cited and widely republished papers on the subject.|$|E
50|$|Lampson's {{definition}} of a <b>covert</b> <b>channel</b> was paraphrased in the TCSEC specifically to refer to ways of transferring information from a higher classification compartment to a lower classification. In a shared processing environment, {{it is difficult to}} completely insulate one process from the effects another process can have on the operating environment. A <b>covert</b> <b>channel</b> is created by a sender process that modulates some condition (such as free space, availability of some service, wait time to execute) that can be detected by a receiving process.|$|E
40|$|<b>Covert</b> <b>channels</b> {{are used}} for the secret {{transfer}} of information. Encryption only protects communication from being decoded by unauthorised parties, whereas <b>covert</b> <b>channels</b> aim to hide {{the very existence of}} the communication. Initially, <b>covert</b> <b>channels</b> were identified as a security threat on monolithic systems i. e. mainframes. More recently focus has shifted towards <b>covert</b> <b>channels</b> in computer network protocols. The huge amount of data and vast number of different protocols in the Internet seems ideal as a high-bandwidth vehicle for covert communication. This article is a survey of the existing techniques for creating <b>covert</b> <b>channels</b> in widely deployed network and application protocols. We also give an overview of common methods for their detection, elimination, and capacity limitation, required to improve security in future computer networks...|$|R
40|$|Abstract — The {{detection}} of <b>covert</b> <b>channels</b> has quickly become a vital need {{due to their}} pervasive nature and the increasing popularity of the Internet. In recent years, new and innovative methods have been proposed {{to aid in the}} {{detection of}} <b>covert</b> <b>channels.</b> Existing detection schemes are often too specific and are ineffective against new <b>covert</b> <b>channels.</b> In this paper, we expound upon previous work done with timing channels and apply it to detecting <b>covert</b> storage <b>channels.</b> Our approach {{is based on the assumption}} that the entropy of <b>covert</b> <b>channels</b> will vary from that of previously observed, legitimate, communications. This change in the entropy of a process provides us with a method for identifying storage channels. Using this assumption we created proof of concept code capable of detecting various <b>covert</b> storage <b>channels.</b> The results of our experiments demonstrate that we can successfully detect existing and unpublished <b>covert</b> storage <b>channels</b> accurately...|$|R
40|$|We {{present a}} {{protocol}} for sending data over a common class of low-bandwidth <b>covert</b> <b>channels.</b> <b>Covert</b> <b>channels</b> exist in most communications systems and allow individuals to communicate truly undetectably. However, <b>covert</b> <b>channels</b> are seldom used {{due to their}} complexity. Our protocol is both practical and secure against attack bypowerful adversaries. We implement our protocol on a standard platform (Linux) exploiting a channel in a common communications system (TCP timestamps) ...|$|R
5000|$|<b>Covert</b> <b>channel</b> in {{computer}} networks:  transfering information objects between {{processes that are}} not supposed to be allowed to communicate by the computer security policy. For example, using the packet timings to send information.|$|E
50|$|The {{detection}} of a <b>covert</b> <b>channel</b> {{can be made}} more difficult by using characteristics of the communications medium for the legitimate channel that are never controlled or examined by legitimate users.For example, a file can be opened and closed by a program in a specific, timed pattern that can be detected by another program, and the pattern {{can be interpreted as}} a string of bits, forming a covert channel.Since it is unlikely that legitimate users will check for patterns of file opening and closing operations, this type of <b>covert</b> <b>channel</b> can remain undetected for long periods.|$|E
5000|$|In {{computer}} security, a <b>covert</b> <b>channel</b> {{is a type}} {{of computer}} security attack that creates a capability to transfer information objects between processes that are not supposed to be allowed to communicate by the computer security policy. The term, originated in 1973 by Lampson is defined as channels [...] "not intended for information transfer at all, such as the service program's effect on system load" [...] to distinguish it from Legitimate channels that are subjected to access controls by COMPUSEC. Although <b>covert</b> <b>channel</b> is mainly attributed to the computer networks, covert communication is a more general word that is used in both wired networks and wireless communications.|$|E
40|$|Security in {{building}} automation systems (BAS) recently became a topic in the security community. BAS form a part of enterprise networks and can be utilized {{to gain access to}} a company network or to violate a security policy. Up to now, the threat of <b>covert</b> <b>channels</b> in BAS protocols was not discovered. While a first available solution can limit ``high level'' <b>covert</b> <b>channels</b> in BAS, there is no solution available to prevent <b>covert</b> <b>channels</b> on the lower level (i. e., in BAS protocols). In this paper, we present network covert storage and network <b>covert</b> timing <b>channels</b> in the network and application layer of the BACnet protocol stack to show that protocol-level <b>covert</b> <b>channels</b> in BAS are feasible. Additionally, we introduce the first means enabling a BAS to become multi-level secure on the network and application layer to prevent <b>covert</b> <b>channels.</b> We built a prototype based on the BACnet firewall router (BFR) to implement multi-level security in BACnet environments...|$|R
40|$|Communication is not {{necessarily}} made se- cure {{by the use of}} encryption alone. The mere existence of communication is often enough to raise suspicion and trigger investigative actions. <b>Covert</b> <b>channels</b> aim to hide the very existence of the communication. The huge amount of data and vast number of different protocols in the Internet makes it ideal as a high-bandwidth vehicle for <b>covert</b> communications. <b>Covert</b> <b>channels</b> are hidden inside pre-existing overt communication by encoding additional semantics onto ‘normal’ behaviours of the overt channels. We have developed CCHEF – a flexible and extensible software framework for evaluating <b>covert</b> <b>channels</b> in network protocols. The framework is able to establish <b>covert</b> <b>channels</b> across real networks using real overt traffic, but can also emulate <b>covert</b> <b>channels</b> based on overt traffic previously collected in trace files. In this paper we present the design and implementation of CCHEF...|$|R
40|$|International audienceThis paper {{presents}} an information theory based detection framework for <b>covert</b> <b>channels.</b> We first {{show that the}} usual notion of interference does not characterize the notion of deliberate information flow of <b>covert</b> <b>channels.</b> We then show that even an enhanced notion of “iterated multivalued interference” can not capture flows with capacity lower than one bit of information per channel use. We then characterize and compute the capacity of <b>covert</b> <b>channels</b> that use control flows for a class of systems...|$|R
50|$|Ordinary things, such as {{existence}} of a file or time used for a computation, have been the medium through which a <b>covert</b> <b>channel</b> communicates. Covert channels {{are not easy to}} find because these media are so numerous and frequently used.|$|E
5000|$|A botnet's {{originator}} (known as a [...] "bot herder" [...] or [...] "bot master") {{controls the}} botnet remotely. This {{is known as}} the command-and-control (C&C). The program for operation which must communicate via a <b>covert</b> <b>channel</b> to the client on the victim's machine (zombie computer).|$|E
50|$|A <b>covert</b> <b>channel</b> is {{so called}} {{because it is}} hidden from the access control {{mechanisms}} of ultra-high-assurance secure operating systems since it does not use the legitimate data transfer mechanisms of the computer system such as read and write, and therefore cannot be detected or controlled by the hardware based security mechanisms that underlie ultra-high-assurance secure operating systems. Covert channels are exceedingly hard to install in real systems, and can often be detected by monitoring system performance; in addition, they suffer from a low signal-to-noise ratio and low data rates (on {{the order of a}} few bits per second). They can also be removed manually {{with a high degree of}} assurance from secure systems by well established <b>covert</b> <b>channel</b> analysis strategies.|$|E
40|$|<b>Covert</b> <b>Channels</b> are {{communication}} channels used for information transfer, and created by violating the security policies {{of a system}} (Latham, 1986, p. 80). Research in the field has shown that, like many {{communication channels}}, IPv 4 and the TCP/IP protocol suite has features, functionality and options which could be exploited by cyber criminals to leak data or for anonymous communications, through <b>covert</b> <b>channels.</b> With the advent of IPv 6, researchers are {{on the lookout for}} <b>covert</b> <b>channels</b> in IPv 6 and one of them demonstrated a proof of concept in 2006. Nine years hence, IPv 6 and its related protocols have undergone major changes, which introduced a need to reevaluate the current situation of IPv 6. The current research is a continuation of our (author of this thesis - Lourdes, and committee member - Prof. Hansen) previous studies (Lourdes 2 ̆ 6 Hansen, 2015, 2016), which demonstrated the corroboration of <b>covert</b> <b>channels</b> in IPv 6 and ICMPv 6 by building a software for the same and testing against a simulated enterprise network. Our study had also explained how some of the enterprise firewalls and Intrusion Detection Systems (IDS) do not currently detect such <b>covert</b> <b>channels,</b> and how they could be tuned to detect them. The current research aimed at understanding if these detection mechanisms (IDS signatures) of IPv 6 and ICMPv 6 <b>covert</b> <b>channels</b> are forensically sound, and at exploring if the system logs left by such <b>covert</b> <b>channels</b> in the firewall could provide forensically sound evidence. The current research showed that the IDS signatures that detected certain <b>covert</b> <b>channels</b> in IPv 6 and ICMPv 6, conformed to the forensic soundness criteria of ‘validity of the scientific method’, and ‘known/potential error rates’. The current research also showed that the firewall system logs potentially detected certain <b>covert</b> <b>channels</b> in IPv 6 and ICMPv 6 and also conformed to the forensic soundness criteria of ‘validity of the scientific method’. Thus the current study showed that these could be used as digital forensic investigation techniques for network forensics of certain types of <b>covert</b> <b>channels</b> in IPv 6 and ICMPv 6. ...|$|R
40|$|RFID {{technology}} can help competitive organizations optimize their supply chains. However, {{it may also}} enable adversaries to exploit <b>covert</b> <b>channels</b> to surreptitiously spy on their competitors. We explain how tracking tags and compromising readers can create <b>covert</b> <b>channels</b> in supply chains and cause detrimental economic effects. To mitigate such attacks, the authors propose a framework that enables an organization to monitor its supply chain. The supply chain is modeled as a network flow graph, where tag flow is verified at selected key nodes, and <b>covert</b> <b>channels</b> are actively sought. While optimal taint checkpoint node selection is algorithmically intractable, the authors propose node selection and flow verification heuristics with various tradeoffs. The chapter discusses economically viable countermeasures against supply chain-based <b>covert</b> <b>channels,</b> and suggests future research directions. 11. ...|$|R
40|$|This paper {{presents}} an information theory based detection framework for <b>covert</b> <b>channels.</b> We first {{show that the}} usual notion of interference does not characterize the notion of deliberate information flow of <b>covert</b> <b>channels.</b> We then show that even an enhanced notion of "iterated multivalued interference" can not capture flows with capacity lower than one bit of information per channel use. We then characterize and compute the capacity of <b>covert</b> <b>channels</b> that use control flows for a class of systems. Comment: In Proceedings SecCo 2010, arXiv: 1102. 516...|$|R
50|$|Covert {{channels}} are distinct from, and often confused with, legitimate channel exploitations that attack low-assurance pseudo-secure systems using schemes such as steganography or even less sophisticated schemes to disguise prohibited objects inside of legitimate information objects. The legitimate channel misuse by steganography is specifically not {{a form of}} <b>covert</b> <b>channel.</b>|$|E
5000|$|In {{the same}} way, the other obvious storage <b>covert</b> <b>channel</b> {{would depend on}} the size of the frame sent by the sender. For the 256 {{possible}} sizes, the amount of covert information deciphered from one size of the frame would be of 8 bits. Again this scenario was termed as the covert storage channel.|$|E
50|$|A timing {{channel is}} an example of a <b>covert</b> <b>channel</b> for {{communicating}} information using  objects between processes that are not expected or allowed to communicate by the computer security policy, in which one process signals information to another process by modulating its own use of system resources (e.g., central processing unit time) in such a way that this manipulation affects the real response time observed by the second process.|$|E
40|$|Network <b>covert</b> <b>channels</b> enable hidden {{communication}} {{and can be}} used to break security policies. Within the last years, new techniques for such <b>covert</b> <b>channels</b> arose, including protocol switching <b>covert</b> <b>channels</b> (PSCCs). PSCCs transfer hidden information by sending network packets with different selected network protocols. In this paper we present the first detection methods for PSCCs. We show that the number of packets between network protocol switches and the time between switches can be monitored to detect PSCCs with 98 - 99 % accuracy for bit rates of 4 bits/second or higher...|$|R
40|$|<b>Covert</b> <b>channels</b> are illicit {{means of}} leaking {{sensitive}} or private information through system global variables that usually {{are not part}} of the interpretation of data objects in the security model. We discovered that some <b>covert</b> <b>channels</b> can be modeled as finite-state graphs while others cannot. By using various techniques given in the paper, multiple bits of information can be simultaneously transferred through single or multiple <b>covert</b> <b>channels.</b> We present methods to determine and estimate the maximum bandwidths of both finite-state and infinite-state channels, and give the problems and basic rules for their measurement...|$|R
5000|$|As Girling first {{analyzes}} <b>covert</b> <b>channels</b> in {{a network}} environment. His work focuses on local area networks (LANs) in which three obvious <b>covert</b> <b>channels</b> (two storage channel and one timing channel) are identified. This demonstrates the real examples of bandwidth possibilities for simple <b>covert</b> <b>channels</b> in LANs. For a specific LAN environment, the author introduced {{the notion of a}} wiretapper who monitors the activities of a specific transmitter on LAN. The covertly communicating parties are the transmitter and the wiretapper. The covert information according to Girling can be communicated through any of following obvious ways: ...|$|R
