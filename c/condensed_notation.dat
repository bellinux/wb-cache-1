7|4|Public
5000|$|In more <b>condensed</b> <b>notation,</b> &mu; is locally finite if {{and only}} if ...|$|E
5000|$|In more <b>condensed</b> <b>notation,</b> μ is {{strictly}} positive if {{and only if}} ...|$|E
5000|$|In real time, the -point Green {{function}} is defined bywhere {{we have used}} a <b>condensed</b> <b>notation</b> in which [...] signifies [...] and [...] signifies [...] The operator [...] denotes time ordering, and indicates that the field operators that follow it are to be ordered so that their time arguments increase from right to left.|$|E
5000|$|To {{motivate the}} algorithm, let's {{look at the}} Schrödinger {{equation}} for a particle in some potential in one dimension: We can <b>condense</b> the <b>notation</b> a bit by writing {{it in terms of}} an operator equation, with ...|$|R
2500|$|... and ZΛ {{is really}} {{independent}} of ! We {{have used the}} <b>condensed</b> deWitt <b>notation</b> here. We have also split the bare action SΛ into a quadratic kinetic part and an interacting part Sint Λ. This split most certainly isn't clean. The [...] "interacting" [...] part can very well also contain quadratic kinetic terms. In fact, {{if there is any}} wave function renormalization, it most certainly will. This can be somewhat reduced by introducing field rescalings. RΛ {{is a function of the}} momentum p and the second term in the exponent is ...|$|R
40|$|We {{identify}} a compact and sufficient set of building blocks which constitute most design {{patterns of the}} GoF catalog: uniform sets of classes or functions, function clans, class hierarchies, and regularities (morphisms) thereof. The abstractions observed are manifested within a model in symbolic logic and defined in LePUS, a declarative, higher order language. LePUS formulae concisely prescribe design patterns in a general, complete, and accurate manner. We provide a natural, <b>condensed</b> graphic <b>notation</b> for every LePUS formula and demonstrate how design patterns are faithfully portrayed by diagrams in this notation. We conclude by defining refinement (specialization) between patterns by means of predicate calculus and illustrate how the logical formalism of LePUS facilitates tool support for the recognition and implementation of design patterns. Keywords: Design patterns, theoretical foundations 1. Introduction Design patterns [GoF 95; Coplien & Schmidt 95; Vlissides, Coplie [...] ...|$|R
5000|$|This {{notation}} {{is useful}} {{especially if the}} operations are commutative, although one can additionally specify that the rows are the first operand and the columns are the second operand. This <b>condensed</b> <b>notation</b> is particularly useful in discussing multi-valued extensions of logic, as it significantly cuts down on combinatoric explosion {{of the number of}} rows otherwise needed. It also provides for quickly recognizable characteristic [...] "shape" [...] of the distribution of the values in the table which can assist the reader in grasping the rules more quickly.|$|E
40|$|This work {{deals with}} {{advanced}} finite element (FE) formulations {{for the analysis}} of multilayered structures in the case of multifield problems. The following four fields are considered: mechanical, thermal, electrical and magnetic. Constitutive equations, in terms of coupled mechanical-thermal- electrical-magnetic field variables, are obtained {{on the basis of a}} thermodynamic approach. The four-field principle of virtual displacements is employed to derive FE matrices. Three-fields, two-fields as well as pure mechanical problems have been discussed as relevant particular cases. A <b>condensed</b> <b>notation,</b> known as Carrera unified formulation, has been employed to establish a comprehensive two-dimensional modeling with variable kinematic features. Layer-wise/equivalent single layers plate elements have been developed according to linear up to fourth-order expansion in the layer/plate thickness directions. FE matrices have been obtained in terms of a few fundamental nuclei whose dimension is 6 × 6 for the full four fields case. Numerical results show the effectiveness of the proposed implementation by encompassing various static and dynamic multifield plate problems...|$|E
40|$|This work {{deals with}} {{classical}} and mixed variational statements {{for the analysis}} of layered structures under the effect of four different ﬁelds: mechanical, thermal, electrical and magnetic. Constitutive equations, in terms of coupled mechanical-thermalelectrical-magnetic ﬁled variables, are obtained {{on the basis of a}} thermodynamics approach. The Principle of Virtual Displacements (PVD) and the Reissner&# 039;s Mixed Variational Theorem (RMVT) are employed. The latter permits interlaminar variables, such as transverse stresses, transverse electrical displacements, etc. to be assumed "a priori. " A number of particular cases of the considered variational statements are proposed. A new <b>condensed</b> <b>notation</b> is introduced into the Uniﬁed Formulation (UF) framework, which leads to governing equations and ﬁnite element matrices in terms of a few fundamental nuclei. The Finite Element (FE) case for multilayerd plates has been addressed. Variable kinematics, as well as layer-wise and equivalent single layer descriptions have been implemented for the considered FEs according to UF. A few results show the effectiveness of the proposed approach...|$|E
40|$|In many-particle {{problems}} involving interacting fermions or bosons, {{the most}} natural language for expressing the Hamiltonian, the observables, and the basis states {{is the language of}} the second-quantization operators. It thus appears advantageous to write numerical computer codes which allow the user to define the problem and the quantities of interest directly in terms of operator strings, rather than in some low-level programming language. Here I describe a Mathematica package which provides a flexible framework for performing the required translations between several different representations of operator expressions: <b>condensed</b> <b>notation</b> using pure ASCII character strings, traditional notation ("pretty printing"), internal Mathematica representation using nested lists (used for automatic symbolic manipulations), and various higher-level ("macro") expressions. The package consists of a collection of transformation rules that define the algebra of operators and a comprehensive library of utility functions. While the emphasis is given on the problems from solid-state and atomic physics, the package can be easily adapted to any given problem involving non-commuting operators. It can be used for educational and demonstration purposes, but also for direct calculations of problems of moderate size. Comment: 9 pages, 1 figur...|$|E

