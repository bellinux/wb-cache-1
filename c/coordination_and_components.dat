1|10000|Public
40|$|The authors analyse the {{construction}} of a seed fruit market. The conventional market had led to the 'anonymousness' of the fruit and to disconnected temporalities. The process needs new types of <b>coordination</b> <b>and</b> <b>components</b> within the common information channels and actors' network. It also needs {{the construction}} of a new contract between producers and consumers, that the conventional market is unable to allow. Producers are experimenting with direct contact with the final consumer to find ways of allowing it. The fruit is replaced in the subject's experience of the final consumer and in the grower's story. The grower's story deals with managing pests, consumers, and commitments through a harmless action: eating a pear or an apple. ...|$|E
40|$|We {{present the}} formal {{operational}} semantics of S-NET, a <b>coordination</b> language <b>and</b> <b>component</b> technology based on stream processing. S-NET turns conventional (sequential) functions/procedures into asynchronous components interacting {{with each other}} through a streaming network; it defines network topologies inductively by a small combinator language that captures essential forms of concurrency. Our formal semantics allows us to reason about program properties and defines the design space for alternative implementation strategies...|$|R
40|$|We {{present the}} design of S-NET, a <b>coordination</b> {{language}} <b>and</b> <b>component</b> technology based on stream processing. S-NET achieves a near-complete separation between application code, written in a conventional programming language, <b>and</b> <b>coordination</b> code, written in S-NET itself. S-NET boxes integrate existing sequential code as stream-processing components into streaming networks, whose construction is based on algebraic formulae built out of four network combinators. Subtyping {{on the level of}} boxes and networks and a tailor-made inheritance mechanism achieve flexible software reuse. ?? 2008 World Scientific Publishing Company...|$|R
40|$|AbstractWe {{argue that}} {{programming}} high-end stream-processing applications requires {{a form of}} coordination language that enables the designer to represent interactions between stream-processing functions asynchronously. We further argue {{that the level of}} abstraction that current programming tools engender should be drastically increased <b>and</b> present a <b>coordination</b> language <b>and</b> <b>component</b> technology that is suitable for that purpose. We demonstrate our approach on a real radar-data processing application from which we reuse all existing <b>components</b> <b>and</b> present speed-ups {{that we were able to}} achieve on contemporary multi-core hardware...|$|R
40|$|S-NET is a {{declarative}} <b>coordination</b> language <b>and</b> <b>component</b> technology {{aimed at}} modern multi-core/many-core architectures and systems-on-chip. It {{builds on the}} concept of a stream processing to structure networks of communicating asynchronous components, which can be implemented using a conventional (sequential) language. In this paper we present the architecture of our S-NET implementation. After sketching out the interplay between compiler and runtime system, we characterise the deployment and operational behaviour of our multi-threaded runtime system for contemporary multi-core processors. Preliminary runtime figures demonstrate the effectiveness of our approach...|$|R
40|$|S-Net is a {{declarative}} <b>coordination</b> language <b>and</b> <b>component</b> technology {{aimed at}} modern multi-core/many-core architectures and systems-on-chip. It {{builds on the}} concept of stream processing to structure networks of communicating asynchronous components, which can be implemented using a conventional (sequential) language. In this paper we present Distributed S-Net, a conservative language extension for placement of <b>components</b> <b>and</b> <b>component</b> networks in distributed memory environments from compute clusters to wide-area grids. We further describe a novel distributed runtime system layer that complements the existing multithreaded runtime system for smaller shared memory multiprocessor and multicore machines. Particular emphasis is put on efficient management of data communication. Last not least, we present very preliminary experimental data...|$|R
40|$|Original article can {{be found}} at: [URL] Copyright Elsevier B. V. We argue that {{programming}} high-end stream-processing applications requires a form of coordination language that enables the designer to represent interactions between stream-processing functions asynchronously. We further argue {{that the level of}} abstraction that current programming tools engender should be drastically increased <b>and</b> present a <b>coordination</b> language <b>and</b> <b>component</b> technology that is suitable for that purpose. We demonstrate our approach on a real radar-data processing application from which we reuse all existing <b>components</b> <b>and</b> present speed-ups {{that we were able to}} achieve on contemporary multi-core hardware...|$|R
40|$|ABSTRACT. The {{purpose of}} this paper is to {{investigate}} the use of a new concept in component communication, expressed by the channel based coordination language called ρέω, in the coordination of Web Services. The role of ρέω is to construct and manage connectors. Connectors are patterns of connected channel communicators. The communication <b>and</b> <b>coordination</b> of <b>components</b> lying over a distributed address space has been dealt so far with stream or datagram connections created and controlled by the participating calculation <b>and</b> <b>coordination</b> <b>components.</b> Web Services can take advantage of the ρέω channel system that separates the communication issue using components that have independent sink and source ports that can be attached to web services components, thus overcoming the problem of compatibility in distributed systems. The flow of information is entirely regulated by the channel interconnections. 1...|$|R
40|$|Approaches to the {{formation}} of three new types of micro-porous materials that complement zeolites will be discussed. In each case, whether metal coordination polymers, metal-linked ceramic oxide clusters, or new hybrids containing both <b>coordination</b> <b>and</b> ceramic <b>components,</b> engineering of the Secondary Building Unit (SBU) is of critical importance. Successful examples of these approaches include the first thermally stable 3 -D micro-porous coordination polymer with chemical functionalizability [Cu 3 (TMA) 2 (H 2 O) 3] n, as well as a 3 -D micro-porous cluster based material [V 12 B 18 O 60 H 8 {Cd(en) (H 2 O) } 3] n-. © 2000 Elsevier Science B. V. All rights reserved...|$|R
40|$|There are {{a number}} of {{problems}} in office environments, medical diagnosis, and planning that require cooperation among agents (either active or passive) for their solutions. Briefly, cooperative problem solving {{can be viewed as a}} complex activity requiring harmonious and dynamic interaction between active agents (typically humans [...] providing sequencing, decision making, <b>and</b> <b>coordination</b> <b>components)</b> <b>and</b> passive agents (typically computing systems [...] providing inferencing, algorithmic computation, and Data/knowledge storage). By definition, a problem in this category cannot be solved by an individual problem solving agent without cooperation among the problem solving agents although each component (or the problem solving agent involved in problem solving) is autonomous and is capable of sophisticated problem solving. This problem is currently being addressed by the research community at various levels of abstraction. Broadly, this paper analyzes the problem of cooperative prob [...] ...|$|R
40|$|S-Net is a {{declarative}} <b>coordination</b> language <b>and</b> <b>component</b> technology {{aimed at}} radically facilitating software engineering for modern parallel compute systems by near-complete separation of concerns between application (<b>component)</b> engineering <b>and</b> concurrency orchestration. S-Net {{builds on the}} concept of stream processing to structure networks of communicating asynchronous components implemented in a conventional (sequential) language. In this paper we present the design, implementation and evaluation of a new and innovative runtime system for S-Net streaming networks. The Front runtime system outperforms the existing implementations of S-Net by orders of magnitude for stress-test benchmarks, significantly reduces runtimes of fully-fledged parallel applications with compute-intensive <b>components</b> <b>and</b> achieves good scalability on our 48 -core test system...|$|R
40|$|Ben Grocholsky Doctor of Philosophy The University of Sydney March 2002 Information-Theoretic Control of This {{thesis is}} {{concerned}} with the development of a consistent, information-theoretic basis for understanding of <b>coordination</b> <b>and</b> cooperation decentralised multi-sensor multi-platform systems. Autonomous systems composed of multiple sensors and multiple platforms potentially have significant importance in applications such as defence, search and rescue, mining or intelligent manufacturing. However, the e#ective use of multiple autonomous systems requires that an understanding be developed of the mechanisms of <b>coordination</b> <b>and</b> cooperation between <b>component</b> systems in pursuit of a common goal. A fundamental, quantitative, understanding of <b>coordination</b> <b>and</b> cooperation between decentralised autonomous systems is the main goal of this thesis...|$|R
40|$|This paper {{presents}} a new architectural approachfor managing the health-care emergences and large scaledisasters using agent-based applications. Such scenarios requirea support {{that must be}} distributed, context-aware, reactive andautonomous. In the following we will show how agent’s behaviourbest fits to these requirements and how the technologycan be applied efficiently to problems where the main challengeis the <b>coordination</b> <b>and</b> collaboration between <b>components.</b> Wepropose a FIPA compliant Multi-Agent System based on theBDI and PIM technology...|$|R
40|$|S-Net is a {{declarative}} <b>coordination</b> language <b>and</b> <b>component</b> technology {{aimed at}} modern multi-core/many-core architectures and systems-on-chip. It {{builds on the}} concept of stream processing to structure dynamically evolving networks of communicating asynchronous components. Components themselves are implemented using a conventional language suitable for the application domain. This two-level software architecture maintains a familiar sequential development environment for large parts of an application and offers a high-level declarative approach to component coordination. In this paper we present a conservative language extension for the placement of <b>components</b> <b>and</b> <b>component</b> networks in a multi-memory environment, i. e. architectures that associate individual compute cores or groups thereof with private memories. We describe a novel distributed runtime system layer that complements our existing multithreaded runtime system for shared memory multicores. Particular emphasis is put on efficient management of data communication. Last not least, we present preliminary experimental data...|$|R
40|$|Regional Energy Planning {{constitutes}} a complex decision-making process which involves {{a multitude of}} operations. This paper presents the design and development of an integrated system for supporting, in a structured and efficient way, the decisions and corresponding actions performed {{in the process of}} regional energy planning. The main advantage of the system is that it provides a unified framework which incorporates a wide range of decision support tools together with a domain knowledge base. It actually consists of six major components: the Data Base, the Model Base, the Multicriteria Evaluation Tools, the Domain Specific Knowledge Base, <b>and</b> the <b>Coordination</b> <b>and</b> Reporting <b>Components.</b> The proposed system was used for developing an application concerning the construction of the energy plan of the region of Lesvos in Greece, the results of which are presented in this paper...|$|R
40|$|S-Net is a {{declarative}} <b>coordination</b> language <b>and</b> <b>component</b> technology primarily {{aimed at}} modern multi-core/many-core chip architectures. It {{builds on the}} concept of stream processing to structure dynamically evolving networks of communicating asynchronous components, which themselves are implemented using a conventional language suitable for the application domain. We present the design and implementation of Distributed S-Net, a conservative extension of S-Net aimed at distributed memory architectures ranging from many-core chip architectures with hierarchical memory organisations to more traditional clusters of workstations, supercomputers and grids. Three case studies illustrate how to use Distributed S-Net to implement different models of parallel execution. Runtimes obtained on a workstation cluster demonstrate how Distributed S-Net allows programmers with little or no background in parallel programming to make effective use of distributed memory architectures with minimal programming effort...|$|R
40|$|TÆMS agents {{integrate}} planning, scheduling, <b>and</b> <b>coordination</b> <b>components</b> in a reusable agent construction framework. TÆMS agent components {{have been}} used in over a dozen research projects and continue to provide an increasingly refined foundation for rapid construction of multiagent control systems for research and commercial prototype applications. This paper recounts a set of generalization issues that we have encountered in striving to build generic multiagent control <b>components,</b> <b>and</b> how these issues effect the use of TÆMS technology both in research and commercial applications...|$|R
40|$|The {{supply of}} complex {{products}} often involves {{the assembly of}} other products, components or sub-assemblies. Furthermore, these sub-assemblies may be produced by different suppliers. As a result, the specification of the assembly process for the final product contains relationship between multiple supply chain components, including business entities, manufacturing processes, products, and parts. This specification, involving the <b>coordination</b> <b>and</b> arrangement of <b>components</b> production to support final product assembly, {{is referred to as}} a supply chain planning and routing. An optimization model is proposed to deals with the routing problem considering constraints on the suppliers production capacity and minimizing the transportation costs...|$|R
30|$|Since the modifying {{effect on}} epoxy curing due to metal <b>and</b> <b>coordination</b> <b>components</b> <b>and</b> {{its effect on}} network {{structure}} are already documented in literature [5, 7, 10 – 12, 20], {{the impact of the}} presence of copper in a cured solder mask on the adhesion behavior was investigated in this study. The presence of copper in the epoxy acrylate bulk volume exhibited no changes in the network formation in the surface near region (within 2  µm information depth). Differences in the surface chemistry concerning the copper content from the top most monolayer to 10  nm in the surface near region do not affect the wetting and adhesion behavior to an epoxy adhesive. Breakage of the solder masks from the substrate base material and copper base layer exhibits the same pull-off strength values if the interface glass fiber/epoxy resin within the base material is not affected. The failure mode in this case includes a serrated crack path along the glass fiber mat leading to higher pull-off strength values. The mechanical strength of the solder mask/copper base layer interface is not influenced by the different copper complex formations of amine and anhydride based curing agents.|$|R
40|$|International audienceModern {{distributed}} software systems must integrate in near-time parallel processes and heterogeneous information sources provided by active, autonomous software systems. Such lively information sources are e. g. sensory data, weather data, traffic data, or booking data, operated by independent distributed sites. The complex integration requires {{the coordination of}} these data flows to guarantee consistent global semantics. Design, implementation, analysis and control of distributed concurrent systems are notoriously complex tasks. Petri Nets are widely used to model concurrent activities. However, a higher-level programming abstraction is needed. We propose a new programming model for modeling concurrent coordination patterns, {{which is based on}} the idea of “peer workers” that represent re-usable <b>coordination</b> <b>and</b> application <b>components.</b> These components encapsulate behavior, structure distributed data and control flow, and allow integration of pre-existing service functions. A domain-specific language is presented. The usability of the peer-based programming model is evaluated with the Split/Join pattern...|$|R
40|$|<b>Coordination</b> <b>and</b> {{composition}} of <b>components</b> {{is an essential}} concern in component-based software engineering. In this paper, we present an operational semantics for a component composition language called Reo. Reo connectors exogenously compose and coordinate the interactions among individual components, that unawarely comprise a complex system, into a coherent collaboration. The formal semantics we present here paves the way for studying the behavior of component composition mechanisms rigorously. To demonstrate the feasibility of such a rigorous approach, we give a faithful translation of Reo semantics into the Maude term rewriting language. This translation allows us to exploit the rewriting engine and the modelchecking module in the Maude tool-set to symbolically run and model-check the behavior of Reo connectors. ...|$|R
40|$|Distributed S-NET is a {{declarative}} <b>coordination</b> language <b>and</b> <b>component</b> technology primarily {{aimed at}} modern multi-core/many-core chip architectures. It {{builds on the}} concept of stream processing to structure dynamically evolving networks of communicating asynchronous components. These components themselves are implemented using a conventional language suitable for the application domain. Our goal is to map Distributed S-NET to the Intel SCC processor in order to provide users with a simplified programming environment, yet still allowing them {{to make use of the}} advanced features of the SCC architecture. Following a brief introduction to the design principles of S-NET, we sketch out the general ideas of our implementation approach. These mainly concern the use of SCC’s message passing buffers for lightweight communication of S-NET records and control data between cores as well as remapping of large data structures through lookup table manipulation. The latter avoids costly memory copy operations that would result from more traditional message passing approaches. Last, but not least, we present prototypical performance measurements for our communication primitives...|$|R
40|$|Concurrent systems {{maintain}} a distributed state <b>and</b> thus require <b>coordination</b> <b>and</b> synchronization between <b>components</b> to ensure consistency. To provide a coherent design approach to concurrent systems, recent work has employed an object-based methodology which emphasizes interactions through well-defined interfaces. The Actor model has provided formal reasoning about distributed object systems. Nonetheless, {{due to the}} complex interactions among <b>components</b> <b>and</b> the high volume of observable information produced, understanding and reasoning about concurrent algorithms in terms of simple interactions is a difficult task. Coordination patterns, which abstract over simple interactions, are not biased by low-level event orderings and are the appropriate mechanism for reasoning about concurrent algorithms. We outline a methodology for visualizing coordination patterns in concurrent algorithms which emphasizes observable interactions and causal connections between objects. We introduce visualize [...] ...|$|R
40|$|Rapport interne. Advances in {{multimedia}} technology and highspeed networks leads to {{new types of}} applications. Especially, teleconferencing and collaborative work has emerged as new type of communication. Teleconferencing denotes synchronous collaboration, among a conference participants, that combine shared workspaces and live media (audio, video). Such media are computed and transported through a video conferencing system. Some of the problems, that the teleconferencing systems designers are faced with, we find synchronisation, session management <b>and</b> <b>coordination,</b> floor control <b>and</b> human habits to work in collaborative groups. Such problems are {{most of the time}} due to the complexity of these systems. Abstraction combined with the use of Formal Description Techniques, are ones of the most prevalent techniques to deal with complexity. In this work, we define an architecture of a teleconferencing system. This architecture consists in a <b>coordination</b> level <b>and</b> a videconferencing level. Then we present our experiment using SDL to describe the behaviors corresponding to the <b>coordination</b> <b>and</b> videoconferencing system <b>components.</b> We present also the interaction between such components...|$|R
40|$|Copyright ACM, 2010. This is the author's {{version of}} the work. It is posted here by {{permission}} of ACM for your personal use. Not for redistribution. The definitive version was published in Proceedings of the 5 th ACM SIGPLAN Workshop on Declarative Aspects of Multicore Programming: [URL] is a declarative <b>coordination</b> language <b>and</b> <b>component</b> technology aimed at modern multi-core/many-core architectures and systems-on-chip. It builds {{on the concept of}} stream processing to structure dynamically evolving networks of communicating asynchronous components. Components themselves are implemented using a conventional language suitable for the application domain. This two-level software architecture maintains a familiar sequential development environment for large parts of an application and offers a high-level declarative approach to component coordination. In this paper we present a conservative language extension for the placement of <b>components</b> <b>and</b> <b>component</b> networks in a multi-memory environment, i. e. architectures that associate individual compute cores or groups thereof with private memories. We describe a novel distributed runtime system layer that complements our existing multithreaded runtime system for shared memory multicores. Particular emphasis is put on efficient management of data communication. Last not least, we present preliminary experimental data...|$|R
40|$|The {{electrical}} conductivity, static magnetic susceptibility, and Hall voltage {{have been}} measured from room temperature to liquid helium {{on a series}} of carefully characterized vanadium-substituted niobium diselenides (Nb 1 -xVxSe 2, 0 < x < 0, 30). Relatively large temperature-dependent Pauli paramagnetism and quadratic dependence of resistivity on temperature suggest a strongly correlated electron gas. Anomalies in the Hall voltage and resistivity are consistent with a charge-density-wave transition. The effect of vanadium substitution is mainly to change the nature of the <b>coordination</b> <b>and,</b> thereby, the <b>component</b> layers of the polytype structure. The superconducting critical temperature was observed to drop strongly in the 2 H phase and then flatten out as progressive vanadium substitution is accomodated in layers with octahedral coordination...|$|R
40|$|Event-based {{systems are}} {{developed}} {{and used as}} a coordination model to integrate components in loosely coupled systems. Research and product development focused so far on e#ciency issues but neglected methodological support to build such systems. In this paper, we present the modular design and implementation of an event system which supports scopes and event mappings, two new and powerful structuring methods that facilitate engineering <b>and</b> <b>coordination</b> of <b>components</b> in event-based systems. The approach {{is based on a}} trace-based specification method adapted from temporal logic...|$|R
40|$|Innovative {{interactive}} applications on the Web require active processing <b>and</b> <b>coordination</b> {{of services}} <b>and</b> <b>components,</b> which are currently {{limited by the}} lack of integrated mechanisms for coordination. The PageSpace is a platform providing a unified approach to coordination of independent modules on the WWW, creating an environment where active <b>components</b> can communicate <b>and</b> act in a really distributed system, overcoming the limitations of traditional approaches. With the PageSpace architecture, distributed applications on top of the Web and the Internet are empowered, as the platform decentralises activity. By combining coordination technology with the Web and Java, the centralised, server-bound structure of today's Webapplications is replaced with a truly open distributed system. Financial institutions are open to innovative technologies for new information services for their offices and remote branches. PageSpace is an ideal candidate to solve to a large class of financial informat [...] ...|$|R
40|$|There is no {{alternative}} to the world's water resources, and their increasing scarcity is {{making it difficult to}} meet the world population's water needs. This paper presents a sustainable water resources system (SWRS) and analyzes the operating mechanism that makes it possible to evaluate the status of such a system. A SWRS can be described as a complex coupling system that integrates water resources, social, economic and ecological systems into a whole. The SWRS's operating mechanism is composed of dynamic, resistance <b>and</b> <b>coordination</b> <b>components,</b> <b>and</b> it interacts with and controls the system's evolution process. The study introduces a new approach, set pair analysis theory, to measure the state of a SWRS, and an evaluation index system is established using the subsystems and operating mechanism of a SWRS. The evaluation index system is separated into three levels (goal level, criteria level and index level) and divides the index standard into five grades. An evaluation model of the SWRS based on set pair analysis theory is constructed, and an example of SWRS evaluation in Shanghai is presented. The connection degrees of the index in the three levels are calculated, and the connection degree of the goal index is calculated to be 0. 342, which classifies the city's SWRS condition as grade 2. The sustainable use of water resources in the region is determined to be at a relatively adequate level that meets the requirements of sustainable development...|$|R
40|$|Projet POP_ARTReachability of a {{state in}} an {{embedded}} system, and steering the system into that state, are a frequent requirement. The technique we propose ensures reachability by construction. It pre-computes a set of local schedulers which are chosen at run-time depending on the current system state and on a predicate characterizing the set of states to be reached. This quasi-static scheduling approach combines the efficiency of pre-computed schedulers with flexibility during execution, {{making it possible to}} change at run-time the predicate to be reached. Our method uses both local controller synthesis and sufficient conditions to compositionally ensure reachability properties, in order to ensure a small memory footprint and efficient execution. The constructed schedulers are composable with further constraints and scheduling policies, which enables an incremental construction. The underlying component model uses transition systems to express the <b>component</b> behaviors, <b>and</b> composition and restriction to express <b>coordination</b> <b>and</b> constraints between <b>components,</b> <b>and</b> allow for heterogeneous models. The results have been implemented and validated in several case studies...|$|R
40|$|Cloud Computing is an {{innovative}} computing proposal {{that has emerged}} from technological developments {{of the last decade}} in computing, storage and networking. A key feature of this proposal is the ease and effectiveness of providing a service. There are a number of challenges that a management system for the Cloud will need to address including: scale, reliability (fault-handling and high availability), security, multi-tenancy, and service heterogeneity. This paper proposes an object-based language extended with dependencies, called CLOUDSCAPE, to address <b>coordination</b> <b>and</b> control of <b>components</b> in a distributed computation to provide reliability and scalability of service {{in the context of the}} cloud. The problem context is further extended with <b>component</b> failure <b>and</b> dynamic addition of new components. Our language allows programmers to write the dependencies between the lifecycle states of components as relations between the language objects that are responsible for controlling components behaviour...|$|R
40|$|Ball {{grid array}} (BGA) {{packages}} having 0. 5 mm ball pitch require {{careful attention to}} printed circuit board (PCB) design parameters to successfully yield reliable and robust assemblies. PCBs with package-on-package (PoP) technology have additional assembly requirements and options {{that need to be}} considered when designing the PCB. Fine-pitch PCB design is a team effort and may require more than a common list of design rules. Close <b>coordination</b> <b>and</b> communication between <b>component</b> supplier, PCB designer, PCB fabricator, and PCB assembly vendor is mandatory. The following factors have a major effect on the quality and reliability of PCB assembly: pad design, via-in-pad (VIP) guidelines, via finishing, stencil design, solder paste requirements, solder paste deposition, and reflow profile. This application report provides a starting point for estblishing a set of design guidelines. It is strongly recommended that you perform actual studies in conjunction with you...|$|R
5000|$|... On the {{occasion}} of the earthquake that struck the Abruzzo region the Department of Civil Protection of the Presidency of the Council of Ministers ensured a constant <b>and</b> effective <b>coordination</b> of <b>components</b> <b>and</b> operational structures, as well as civil organizations, military and volunteer of the National Service of Civil Protection, providing proof of admirable dedication in the organization of relief and assistance in favor of the affected population and the subsequent work of restoration of normal living conditions, receiving the unanimous appreciation of the local community and across the country, and a general approval the international community. [...] "- June 5, 2012 ...|$|R
40|$|INTRODUCTION: Visual {{performance}} {{is an important}} factor in sport excellence. Visual involvement in a sport varies according to environmental demands associated with that sport. These environmental demands are matched by a task specific motor response. The purpose of this study was to determine if sport specific exercises will improve the visual performance of male rugby players, in order to achieve maximal results on the sports field. MATERIALS AND METHODS: Twenty six adult male rugby players, aged 16 - 22, were chosen as subjects. In order to evaluate the effect of sport specific exercises on visual skills, a pre-test - post-test experimental group design was adopted for the study. RESULTS: Significant differences (p≤ 0. 05) were seen in the focussing, tracking, vergence, sequencing, eye-hand <b>coordination</b> <b>and</b> visualisation <b>components</b> Discussion & Conclusions: Sport specific exercises improved visual skills in rugby players which may provide them with an advantage over their opponents. This study suggests that these training programs and participation in regular on-line EyeDrills sports vision exercises (www. eyedrills. co. za) aimed at improving the athlete’s visual co-ordination, concentration, focus, hand-eye co-ordination, anticipation and motor response should be incorpotated in the rugby players exercise regime. Keywords— Rugby players, sport specific exercises, visual skills[URL]...|$|R
40|$|Abstract—Cloud Computing is an {{innovative}} computing proposal {{that has emerged}} from technological developments {{of the last decade}} in computing, storage and networking. A key feature of this proposal is the ease and effectiveness of providing a service. There are a number of challenges that a management system for the Cloud will need to address including: scale, reliability (fault-handling and high availability), security, multi-tenancy, and service heterogeneity. This paper proposes an object-based language extended with dependencies, called CLOUDSCAPE, to address <b>coordination</b> <b>and</b> control of <b>components</b> in a distributed computation to provide reliability and scalability of service {{in the context of the}} cloud. The problem context is further extended with <b>component</b> failure <b>and</b> dynamic addition of new components. Our language allows programmers to write the dependencies between the lifecycle states of components as relations between the language objects that are responsible for controlling components behaviour. I...|$|R
40|$|Configuration <b>and</b> <b>coordination</b> {{are central}} {{issues in the}} design and {{implementation}} of middleware systems and are {{one of the reasons why}} building such systems is more difficult and complex than constructing stand-alone sequential programs. Through configuration, the structure of the system is established [...] - which elements it contains, where they are located and how they are interconnected. Coordination is concerned with the interaction of the various components [...] - when an interaction takes place, which parties are involved, what protocols are followed. Its purpose is to coordinate the behaviour of the various components in a way that meets the overall system specification. The open and adaptive nature of middleware systems makes the task of configuration <b>and</b> <b>coordination</b> particularly challenging. We propose a model that can operate in such an environment and enables the dynamic integration <b>and</b> <b>coordination</b> of <b>components</b> through observation of their behaviour. Keywords: Coordination, [...] ...|$|R
