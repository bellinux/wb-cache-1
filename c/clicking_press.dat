0|29|Public
5000|$|In his 2006 paper The Death of Postmodernism and Beyond, the British scholar Alan Kirby {{formulated}} a socio-cultural {{assessment of}} post-postmodernism that he calls “pseudo-modernism.” Kirby associates pseudo-modernism with the triteness and shallowness {{resulting from the}} instantaneous, direct, and superficial participation in culture {{made possible by the}} internet, mobile phones, interactive television and similar means: [...] "In pseudo-modernism one phones, <b>clicks,</b> <b>presses,</b> surfs, chooses, moves, downloads." ...|$|R
5000|$|Event-driven {{programming}} - {{program control}} flow {{is determined by}} events, such as sensor inputs or user actions (mouse <b>clicks,</b> key <b>presses)</b> or messages from other programs or threads.|$|R
50|$|It {{can also}} convert Adobe Captivate-generated file formats (.swf) to digital MP4 (.mp4) formats {{which can be}} played with media players or {{uploaded}} to video hosting websites. For software simulations, Captivate can use left or right mouse <b>clicks,</b> key <b>presses</b> and rollover images.|$|R
40|$|In the {{presence}} of one <b>click</b> frequency, the <b>presses</b> of two hungry rats on one of two levers were reinforced with food on variable-interval schedules; in {{the presence}} of a different <b>click</b> frequency, <b>presses</b> on the other lever were reinforced. In stimulus generalization tests, a variety of click frequencies were presented and reinforcement withheld. The test stimuli were found to exert control over which of the two levers the rats pressed, but not over the rate of pressing the selected lever. The results were interpreted as further evidence that intermediate rates in generalization gradients may be the result of the alternation of several distinct behavior patterns...|$|R
50|$|A {{separate}} {{set of gears}} {{called the}} keyless work winds the mainspring when the crown is rotated, and when the crown is pulled out a short distance allow the hands to be turned to set the watch. The stem attached to the crown has a gear called the clutch or castle wheel, with two rings of teeth that project axially from the ends. When the stem is pushed in, the outer teeth turn the ratchet wheel {{on top of the}} mainspring barrel, which turns the shaft that the inner end of the mainspring is attached to, winding the mainspring tighter around the shaft. A spring-loaded pawl or <b>click</b> <b>presses</b> against the ratchet teeth, preventing the mainspring from unwinding. When the stem is pulled out, the inner teeth of the castle wheel engage with a gear which turns the minute wheel. When the crown is turned, the friction coupling of the cannon pinion allows the hands to be rotated.|$|R
5000|$|Provides {{developers}} {{with easy}} and safe access to browser events (such as mouse <b>clicks</b> and key <b>presses).</b> It also provides the Custom Event object for publishing and subscribing to custom events.|$|R
5000|$|In [...] "About WinRAR" [...] Help menu {{clicking}} on the WinRAR logo makes the ocean surf and waves move. Mouse <b>clicking</b> with Shift <b>pressed</b> on the logo generates a sailboat {{to the right of}} [...] "WINRAR".|$|R
50|$|The players {{controls}} a four man squad in {{a similar}} way to classic games like Syndicate and Cannon Fodder or more modern games like Commandos 3. Specifically the player moves his squad around the world by clicking on where they should go and they will walk to the point in the level the player <b>clicked</b> on. <b>Pressing</b> the other mouse button will make the current squad shoot from where they are standing {{in the direction of the}} mouse pointer.|$|R
5000|$|In {{computer}} programming, event-driven {{programming is}} a programming paradigm {{in which the}} flow of the program is determined by events such as user actions (mouse <b>clicks,</b> key <b>presses),</b> sensor outputs, or messages from other programs/threads. Event-driven programming is the dominant paradigm used in graphical user interfaces and other applications (e.g. JavaScript web applications) that are centered on performing certain actions in response to user input. This is also true of programming for device drivers (e.g. P in USB device driver stacks) ...|$|R
50|$|Events are {{typically}} {{used in user}} interfaces, where actions {{in the outside world}} (mouse <b>clicks,</b> window-resizing, keyboard <b>presses,</b> messages from other programs, etc.) are handled by the program as a series of events. Programs written for many windowing environments consist predominantly of event handlers.|$|R
50|$|ActivePresenter is a screencasting and eLearning {{software}} for Microsoft Windows and Mac OS X {{which can be}} used to create software demonstrations, software simulations, quizzes. It allows exporting to series of images, HTML slideshows, documents (PDF, Microsoft Word, Excel), Microsoft PowerPoint presentations, videos (AVI, MP4, WMV, WebM), Flash videos and interactive simulations (HTML5, Adobe Flash). For eLearning, ActivePresenter can pack exported materials into SCORM or xAPI. For software simulations, it can use mouse hovers, left or right mouse <b>clicks,</b> key <b>presses</b> with modifier keys.|$|R
40|$|This paper {{shows how}} to use the UsaProxy HTTP proxy to perform logging of user {{activity}} for AJAX web applications. UsaProxy is a special-purpose HTTP proxy which modifies HTML pages before forwarding them to the client browser. It adds JavaScript code which collects data about mouse movement, <b>clicks,</b> key <b>presses</b> and other types of interaction without a#ecting the user's browsing experience in any way. Using Gmail as an example for an AJAX application, the paper explains in detail how to prepare for a UsaProxy-based user test and how to interpret the log files generated by the system...|$|R
5000|$|EP Entertainment is an American {{record label}} founded by Robert [...] "Robeo" [...] Eleazer and Tony [...] "The Negotiator" [...] Perez. EP Entertainment {{operates}} in partnerships with Capitol Music Group / Universal Music Group. EP is a full-service entertainment company. It self-operates within divisions in music publishing, touring and merchandising; film & television; new business ventures; {{as well as}} a music label. EP Entertainment is home to a diverse roster of recording artists, writers, and producers Including Alessia Cara, Sebastian Kole, Dylan Hyde, L Jay Currie, Sylah, Exit 21, Riquel V, Asiahn, and producers <b>Click</b> N <b>Press.</b>|$|R
5000|$|The Stage {{captured}} user-generated {{events like}} mouse-down <b>clicks</b> and key <b>presses</b> {{and sent them}} to the Actors. The visual hierarchy determined with object would receive the message first - the Stage was Z-ordered and objects closer to the front got the messages first. Messages could be passed up the class/prototype hierarchy with the [...] command.|$|R
2500|$|Help authors {{can also}} control the {{background}} {{color of the}} main text area, where the actual text of the topic appears. This text can be formatted and arranged in many ways. Within the text, jumps appear as green text with a single underline. [...] Single-clicking on a jump opens a different topic. [...] Some jumps may open secondary Help windows to display information. [...] Popups appear in the text as green text with a dotted underline. Single-clicking on a popup opens a small window with no menus, buttons, or scrollbars, sized to fit the text. [...] Often, popups provide short definitions of key terms or other supplemental information about the main text. The popup automatically disappears {{the next time the}} user <b>clicks</b> or <b>presses</b> a key.|$|R
40|$|The MAP {{transformation}} {{system is}} a tool which supports the interactive derivation of logic programs using the unfold/fold transformation methodology. A derivation consists of a sequence of applications of some predened transformation rules, starting from a given initial program. When a rule is invoked, if the conditions of its application are satised, the system transforms the current program into a new program. Such transformation steps may be performed interactively, in a sequence, until a nal program is derived. The system provides a graphical user interface through which the transformation rules are applied by means of mouse <b>clicks,</b> button <b>presses,</b> menu selections, and dialog boxes. MAP also provides the user with many facilities for controlling and documenting program derivations, such as exploring alternative derivations, printing, saving, and restoring derivations. Key words: Automatic program derivation, program transformation, logic programming, transformation rules, graphi [...] ...|$|R
50|$|Callbacks {{are used}} to program {{applications}} in windowing systems. In this case, the application supplies (a reference to) a specific custom callback function for the operating system to call, which then calls this application-specific function in response to events like mouse <b>clicks</b> or key <b>presses.</b> A major concern here is the management of privilege and security: whilst the function is called from the operating system, it should not run with the same privilege as the system. A {{solution to this problem}} is using rings of protection.|$|R
50|$|Many {{software}} {{systems are}} event-driven, {{which means that}} they continuously wait for the occurrence of some external or internal event such as a mouse <b>click,</b> a button <b>press,</b> a time tick, or an arrival of a data packet. After recognizing the event, such systems react by performing the appropriate computation that may include manipulating the hardware or generating “soft” events that trigger other internal software components. (That’s why event-driven systems are alternatively called reactive systems.) Once the event handling is complete, the system goes back to waiting for the next event.|$|R
50|$|The game {{consists}} of various mini-games with a carnival theme, such as Alley Bowling, Lucky Cups, Nerves of Steel, Hoops, and Day at the Races, and Buckets Of Fun. These {{are set up}} through five different themed areas of the carnival. The player can even win virtual prizes depending on their score. There are many easter eggs hidden as well. You can also multi-player with up to four players. To do that on the booth's screen <b>click</b> multiplayer and <b>press</b> a to select booth. Games includes ka-pow and hole in 1.|$|R
40|$|In this paper, we {{introduce}} an implementation {{for detailed}} monitoring of user actions on web pages. It addresses {{the problem that}} the log data recorded by standard web servers is not sufficient for the tracking of users on AJAX websites, e. g. to conduct a usability test. Using standard web technologies, our HTTP proxy can record very detailed usage information, such as mouse movements, <b>clicks,</b> key <b>presses</b> and scrolling, together with the exact HTML DOM tree objects involved. As we show in several case studies, the tracking also works across multiple websites, none of which needs to be under our control. This approach is much less invasive than previous efforts: The test person {{does not need to}} install software on her computer, and in certain operation modes, no configuration changes at all are required on her computer. Our research indicates that if the technology described in this paper is employed, arbitrary visitors of a website are more likely {{to take part in a}} usability test offered by that site – this facilitates recruiting test participants over th...|$|R
6000|$|... "Well, sir, {{you count}} four bricks below that, and you press {{hard on the}} next, that is the fifth, then you will hear a <b>click,</b> then you <b>press</b> hard with your heel at the corner, in {{the angle of the}} flag below, and you will find the other corner rise. Then you get hold of it and lift it up, and below there is a stone chamber, two feet long and about {{eighteen}} inches wide and deep. It was made to conceal papers in the old days, and I believe food was always kept there, in case the chamber had to be used in haste.|$|R
5000|$|GNU Xnee is a {{suite of}} {{programs}} that can record, replay and distribute user actions under the X11 environment. It {{can be used for}} testing and demonstrating X11 applications.Within X11 each user input (mouse <b>click</b> or key <b>press)</b> is an X Window System event. Xnee records these events into a file. Later Xnee is used to play the events back from the file and into an X Window System just as though the user were operating the system.Xnee {{can also be used to}} play or distribute user input events to two or more machines in parallel.As the target X Window application sees what appears to be physical user input it has resulted in Xnee being dubbed “Xnee is Not an Event Emulator.” ...|$|R
30|$|Throughout this study, {{undergraduates}} across disciplines {{often described}} social media as “a real double-edged sword” that can either help or hinder learning {{depending on the}} context, purpose, or intention of the interaction – in other words, depending on what can be afforded by the technology (Smith, 2016 a; 2016 b). Willcockson and Phelps (2010) have defined an affordance as “the way a technology or software can be used and what it allows the user to do or not to do” (para. 9). Thus, an affordance {{can be understood as}} that which is made available (or, suggested) by characteristics that enable one to carry out possible (inter)actions via an object within a physical or virtual environment. For instance, having the ability to <b>click</b> or <b>press</b> an on-screen button via a mouse, trackpad, or touchscreen affords moving through space when navigating in the on-screen environment (Hayman & Smith, 2015; Smith & Hayman, 2016). Researchers have called for anti-determinist approaches to educational technology research by (re)focusing on affordances, arguing that such approaches should be emphasized in academic analyses of education, technology, and young people (Buckingham, 2011; Selwyn, 2012). Such approaches to research of technologies in educational contexts can develop a shared understanding of the wider contexts within which technologies are ascribed meaning.|$|R
40|$|Modern day {{websites}} offer applications {{with sophisticated}} user interfaces and dynamically interactive data [1]. Understanding how a user interacts with a search service, in particular, {{is an effective}} way to determine the usability and quality of the search experience [1, 2]. Gathering the necessary data to analyse user interactions with a web based search application can be done either server side and/or client side. Server side solutions provide a course grained approach to logging specific discrete events such as when a query is issued, a web page is viewed, etc. Client side solutions, however, can provide a much richer set of data regarding the specific micro interactions performed by a user given the web application interface (i. e. when there is a mouse over, a scroll, a <b>click,</b> a key <b>press,</b> etc). While...|$|R
40|$|When Java {{developers}} need {{to improve}} {{the performance of their}} applications, they usually use one of the many existing profilers for Java. These profilers generally capture a profile that represents the execution time spent in each method. The developer can thus focus her optimization efforts on the methods that consume the most time. In this paper we argue that this type of profile is insufficient for tuning interactive applications. Interactive applications respond to user events, such as mouse <b>clicks</b> and key <b>presses.</b> The perceived performance of interactive applications {{is directly related to the}} response time of the program. In this paper we present listener latency profiling, a profiling approach with two distinctive characteristics. First, we call it latency profiling because it helps developers to find long latency operations. Second, we call it listener profiling because it abstracts away from method-level profiles to compute the latency of the various listeners. This allows a developer to reason about performance with respect to listeners, also called observers, the high level abstraction at the core of any interactive Java application. We present our listener latency profiling approach, describe LiLa, our implementation, validate it on a set of micro-benchmarks, and evaluate it on a complex realworld interactive application...|$|R
40|$|SUMMARY This letter {{proposes a}} {{prototyping}} tool for Web-based Multiuser Online Role-Playing Game (MORPG). The design {{goal is to}} make this tool simple and powerful. The tool is comprised of a GUI ed-itor, a translator and a runtime environment. The GUI editor is used to edit state-transition diagrams, each of which defines the behavior of the fictional characters. The state-transition diagrams are translated into C pro-gram codes, which plays the role of a game engine in RPG system. The runtime environment includes PHP, JavaScript with Ajax and HTML. So the prototype system can be played on the usual Web browser, such as Fire-fox, Safari and IE. On a <b>click</b> or key <b>press</b> by a player, the Web browser sends it to the Web server to reflect its consequence on the screens which other players are looking at. Prospected users of this tool include program-ming novices and schoolchildren. The knowledge or skill of any specific programming languages is not required to create state-transition diagrams. Its structure is not only suitable for the definition of a character behavior but also intuitive to help novices understand. Therefore, the users can easily create Web-based MORPG system with the tool. key words: MORPG, interactive animation, state-transition diagram 1...|$|R
40|$|AbstractWhen {{developers}} need {{to improve}} {{the performance of their}} applications, they usually use one of the many existing profilers. These profilers generally capture a profile that represents the execution time spent in each method. The developer can thus focus her optimization efforts on the methods that consume the most time. In this paper we argue that this type of profile is insufficient for tuning interactive applications. Interactive applications respond to user events, such as mouse <b>clicks</b> and key <b>presses.</b> The perceived performance of interactive applications {{is directly related to the}} response time of the program. In this paper we present listener latency profiling, a profiling approach with two distinctive characteristics. First, we call it latency profiling because it helps developers to find long latency operations. Second, we call it listener profiling because it abstracts away from method-level profiles to compute the latency of the various listeners. This allows a developer to reason about performance with respect to listeners, also called observers, the high level abstraction at the core of any interactive Java application. We present our listener latency profiling approach, describe LiLa, our implementation, validate it on a set of microbenchmarks, and evaluate it on a complex real-world interactive application. We then perform case studies where we use LiLa to tune the perceptible performance of two interactive applications, and we show that LiLa is able to pinpoint performance problems even if their causes are embedded in the largest interactive Java application we are aware of...|$|R
60|$|It took Baron some {{minutes to}} pursue his inquiry, during which he {{reflected}} {{that the people of}} the shop were not such fools after all. They had admitted moreover that they had accidentally neglected this relic of gentility--it had been overlooked in the multiplicity of their treasures. He now recalled that the man had wanted to polish it up before sending it home, and that, satisfied for his own part with its honourable appearance and averse in general to shiny furniture, he had in his impatience declined to wait for such an operation, so that the object had left the place for Jersey Villas, carrying presumably its secret with it, two or three hours after his visit. This secret it seemed indeed capable of keeping; there was an absurdity in being baffled, but Peter couldn't find the spring. He thumped and sounded, he listened and measured again; he inspected every joint and crevice, with the effect of becoming surer still of the existence of a chamber and of making up his mind that his davenport was a rarity. Not only was there a compartment between the two backs, but there was distinctly something IN the compartment! Perhaps it was a lost manuscript--a nice, safe, old-fashioned story that Mr. Locket wouldn't object to. Peter returned to the charge, for it had occurred to him that he had perhaps not sufficiently visited the small drawers, of which, in two vertical rows, there were six in number, of different sizes, inserted sideways into that portion of the structure which formed part of the support of the desk. He took them out again and examined more minutely the condition of their sockets, with the happy result of discovering at last, in the place into which the third on the left-hand row was fitted, a small sliding panel. Behind the panel was a spring, like a flat button, which yielded with a <b>click</b> when he <b>pressed</b> it and which instantly produced a loosening of one of the pieces of the shelf forming the highest part of the davenport--pieces adjusted to each other with the most deceptive closeness.|$|R

