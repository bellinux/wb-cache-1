18|55|Public
50|$|In 1994, Baker Oil Tools {{introduced}} multilateral completion systems, {{which enabled}} operators to install <b>completion</b> <b>tools</b> and perform selective intervention work in multiple horizontal sections {{from a common}} main wellbore.|$|E
50|$|The Eclipse IDE {{is known}} for its {{intuitive}} code <b>completion</b> <b>tools</b> that come packaged with the program. These features have made the program a popular solution for Java, C++, and JavaScript code authoring.|$|E
50|$|BJ Services Company - BJ Services {{provides}} {{pressure pumping}} services {{used in the}} completion and cementing of new {{oil and natural gas}} wells and in remedial work on existing wells, as well as oilfield services including <b>completion</b> <b>tools,</b> completion fluids, casing and tubular services, and production chemical services.|$|E
5000|$|A New College <b>Completion</b> <b>Tool</b> Kit {{has been}} {{developed}} {{by the federal government}} to help the governors and state governments develop better strategies for higher-education promotion.The solutions proposed by the College <b>Completion</b> <b>Tool</b> Kit urge government to set up financial incentives to increase completion rate. The federal government advises to base funding formulas on enrollment rate but also on performance measures and outcome indicators. In order to improve institutions of higher education, states and public policies should: ...|$|R
40|$|This {{document}} {{explains the}} design and use of a termination checker tool and of a Knuth-Bendix <b>completion</b> <b>tool.</b> The termination checker tool checks whether an equational specication terminates, and the Knuth-Bendix <b>completion</b> <b>tool</b> tries to complete an equational speci- cation. These tools {{can be used to}} prove the termination or to complete order-sorted equational specications in Maude [7, 6, 4]. The tools have been written entirely in Maude and are in fact executable specications in rewriting logic [17] of the formal inference system that they implement. The fact that rewriting logic is reective [8, 3], and that Maude eciently supports reective rewriting logic computations [5, 4] is systematically exploited {{in the design of the}} tools. Contents...|$|R
40|$|This {{document}} {{explains the}} design and use of a coherence checker tool and of a coherence <b>completion</b> <b>tool.</b> The coherence checker tool checks whether a rewrite logic specification is coherent, and the coherence <b>completion</b> <b>tool</b> tries to complete a rewrite logic specification {{in order to make}} it coherent. These tools can be used to prove the coherence property or to coherence complete order-sorted rewrite specifications in Maude [7, 5, 2]. The tools have been written entirely in Maude and are in fact executable specifications in rewriting logic [14] of the formal inference system that they implement. The fact that rewriting logic is reflective [8, 1], and that Maude efficiently supports reflective rewriting logic computations [3, 2] is systematically exploited in the design of the tools...|$|R
50|$|BJ Services Company is {{a leading}} {{worldwide}} provider of pressure pumping and oilfield services for the petroleum industry. Pressure pumping services consist of cementing and stimulation services used in the completion of new {{oil and natural gas}} wells and in remedial work on existing wells, both onshore and offshore. Oilfield services include <b>completion</b> <b>tools,</b> completion fluids, casing and tubular services, production chemical services, and precommissioning, maintenance and turnaround services in the pipeline and process business, including pipeline inspection.|$|E
40|$|Given an equational system, {{completion}} procedures compute {{an equivalent}} and complete (terminating and confluent) term rewrite system. We present {{a very simple}} and efficient completion procedure, {{which is based on}} MaxSAT solving. Experiments show that the procedure is comparable to recent powerful <b>completion</b> <b>tools...</b>|$|E
40|$|Code {{completion}} is {{a widely}} used productivity tool. It takes away the burden of remembering and typing the ex-act names of methods or classes: As a developer starts typing a name, it provides a progressively refined list of candidates matching the name. However, the candidate list always comes in alphabetic order, i. e., the environment is only second-guessing the name based on pattern matching. Finding the correct candidate can be cumbersome or slower than typing the full name. We present an approach to improve code completion with program history. We define a benchmark measuring the ac-curacy and usefulness of a code completion engine. Further, we use the change history data to also improve the results offered by code <b>completion</b> <b>tools.</b> Finally, we propose an alternative interface for <b>completion</b> <b>tools.</b> ...|$|E
50|$|New JBoss Seam Tools. JBoss Developer Studio {{includes}} {{brand new}} tools for Seam. They provide wizards for creating new Seam projects, validation tools, expression language code <b>completion,</b> testing <b>tools,</b> and wizards for generating entity objects.|$|R
40|$|Normalized {{completion}} (Marché 1996) is {{a widely}} applicable and efficient technique for com- pletion modulo theories. If successful, a normalized completion procedure computes a rewrite system that allows to decide the validity problem using normalized rewriting. In this paper we consider a slightly simplified inference system for finite normalized completion runs. We prove correctness, show faithfulness of critical pair criteria in our setting, and propose a different notion of normalizing pairs. We then show how normalized completion procedures can benefit from AC- termination tools instead of relying on a fixed AC-compatible reduction order. We outline our implementation of this approach in the <b>completion</b> <b>tool</b> mkbtt and present experimental results, including new completions...|$|R
40|$|International audienceThis paper {{presents}} two {{criteria for}} the termination of tree automata completion. Tree automata completion is a technique for computing a tree automaton recognizing or over-approximating the set of terms reachable w. r. t. a term rewriting system. The first criterion {{is based on the}} structure of the term rewriting system itself. We prove that for most of the known classes of linear rewriting systems preserving regularity, the tree automata completion is terminating. Moreover, it outputs a tree automaton recognizing exactly the set of reachable terms. When the term rewriting system is outside of such classes, the set of reachable terms can be approximated using a set of equations defining an abstraction. The second criterion, which holds for any left-linear term rewriting system, defines sufficient restrictions on the set of equations for the tree automata completion to terminate. We then show how {{to take advantage of this}} second criterion to use completion as a new static analysis technique for functional programs. Some examples are demonstrated using the Timbuk <b>completion</b> <b>tool...</b>|$|R
40|$|A {{consolidated}} reference {{of materials}} for downhole equipment used in geothermal energy exploitation is nearing completion. The reference is {{a summary of}} recent developments {{in the areas of}} tubular goods materials, highly alloyed metals, high temperature cements, high temperature elastomers, drilling and <b>completion</b> <b>tools,</b> logging tools, and downwell pumps. A brief overview is presented in this paper...|$|E
40|$|Abstract Code {{completion}} is {{a widely}} used productivity tool. It takes away the bur-den of remembering and typing the exact names of methods or classes: As a developer starts typing a name, it provides a progressively refined list of candidates matching the name. However, the candidate list usually comes in alphabetic order, i. e., the en-vironment is only second-guessing the name based on pattern matching, relying on human intervention to pick the correct one. Finding the correct candidate can thus be cumbersome or slower than typing the full name. We present an approach to improve code completion based on recorded program histories. We define a benchmarking procedure measuring the accuracy of a code completion engine {{and apply it to}} several completion algorithms on a dataset con-sisting of the history of several systems. Further, we use the change history data to improve the results offered by code <b>completion</b> <b>tools.</b> Finally, we propose an alterna-tive interface for <b>completion</b> <b>tools</b> that we released to developers and evaluated...|$|E
40|$|Abstract—Developers {{depend on}} APIs of {{frameworks}} and libraries {{to support the}} development process. Due to {{the large number of}} existing APIs, it is difficult to learn, remember, and use them during the development of a software. To mitigate the problem, modern integrated development environments provide code completion facilities that free developers from remembering every detail. In this paper, we introduce CSCC, a simple, efficient context-sensitive code completion tool that leverages previous code examples to support method completion. Compared to other existing code <b>completion</b> <b>tools,</b> CSCC uses new sources of contextual information together with lightweight source code analysis to better recommend API method calls. Keywords-API methods, Code Completion, Eclipse plugin I...|$|E
40|$|Modern {{datasets}} {{are becoming}} heterogeneous. To this end, we present {{in this paper}} Mixed- Variate Restricted Boltzmann Machines for simultaneously modelling variables of multiple types and modalities, including binary and continuous responses, categorical options, multicategorical choices, ordinal assessment and category-ranked preferences. Dependency among variables is modeled using latent binary variables, each {{of which can be}} interpreted as a particular hidden aspect of the data. The proposed model, similar to the standard RBMs, allows fast evaluation of the posterior for the latent variables. Hence, it is naturally suitable for many common tasks including, but not limited to, (a) as a pre-processing step to convert complex input data into a more convenient vectorial representation through the latent posteriors, thereby oering a dimensionality reduction capacity, (b) as a classier supporting binary, multiclass, multilabel, and label-ranking outputs, or a regression tool for continuous outputs and (c) as a data <b>completion</b> <b>tool</b> for multimodal and heterogeneous data. We evaluate the proposed model on a large-scale dataset using the world opinion survey results on three tasks: feature extraction and visualization, data completion and prediction. <br /...|$|R
40|$|Complex {{engineering}} systems {{often require}} extensive coordination between different expert areas {{in order to}} avoid costly design iterations and rework. Cyber-physics system (CPS) engineering methods could provide valuable insights to help model these interactions and optimize the design of such systems. In this work, steam assisted gravity drainage (SAGD), a complex oil extraction process that requires deep understanding of several physical-chemical phenomena, is examined whereby the complexities and interdependencies of the system are explored. Based on an established unified feature modeling scheme, a software modeling framework is proposed to manage the design process of the production tools used for SAGD oil extraction. Applying CPS methods to unify complex phenomenon and engineering models, the proposed CPS model combines effective simulation with embedded knowledge of <b>completion</b> <b>tooling</b> design in order to optimize reservoir performance. The system design is expressed using graphical diagrams of the unified modelling language (UML) convention. To demonstrate the capability of this system, a distributed research group is described, and their activities coordinated using the described CPS model...|$|R
40|$|This paper {{presents}} two {{criteria for}} the termination of tree automata completion. Tree automata completion is a technique for computing a tree automaton recog-nizing or over-approximating the set of terms reachable w. r. t. a term rewriting system. The first criterion {{is based on the}} structure of the term rewriting system itself. We prove that for most of the known classes of linear rewriting systems preserving regularity, the tree automata completion is terminating. Moreover, it outputs a tree automaton recognizing exactly the set of reachable terms. When the term rewriting system is outside of such classes, the set of reachable terms can be approximated using a set of equations defining an abstraction. The second criterion, which holds for any left-linear term rewriting system, defines sufficient restrictions on the set of equations for the tree automata completion to terminate. We then show how {{to take advantage of this}} second criterion to use completion as a new static analysis technique for functional programs. Some examples are demonstrated using the Timbuk <b>completion</b> <b>tool...</b>|$|R
40|$|Abstract—Code {{completion}} tool {{plays an}} important role in daily development activities. It helps developers by auto-completing tedious and detailed code during an editing session. However, existing code <b>completion</b> <b>tools</b> are limited to recom-mending only context-free code templates and a single method call of the variable under editing. We introduce GraPacc, an advanced, context-sensitive code completion tool that is based on frequent API usage patterns. It extracts the context-sensitive features from the code under editing, for example, the API elements on focus and the current editing point, and their relations to other code elements. It then ranks the relevant API usage patterns and auto-completes the current code with the proper elements according to the chosen pattern. Keywords-Pattern-oriented Code Completion; Usage Pattern I...|$|E
40|$|Abstract. A Knuth-Bendix {{completion}} {{procedure is}} parametrized by a reduction ordering used to ensure termination of intermediate and resulting rewriting systems. While in principle any reduction ordering can be used, modern <b>completion</b> <b>tools</b> typically implement only Knuth-Bendix and path orderings. Consequently, the theories for which completion can possibly yield a decision procedure {{are limited to}} those that can be oriented with a single path order. In this paper, we present a variant on the Knuth-Bendix completion procedure in which no ordering is assumed. Instead we rely on a modern termination checker to verify termination of rewriting systems. The new method is correct if it terminates; the resulting rewrite system is convergent and equivalent to the input theory. Completions are also not just ground-convergent, but fully convergent. We present an implementation of the new procedure, Slothrop, which automatically obtains such completions for theories that do not admit path orderings. ...|$|E
40|$|Low-rank and sparse {{structures}} {{have been}} profoundly studied in matrix completion and compressed sensing. In this paper, we develop “Go Decomposition ” (GoDec) to efficiently and robustly estimate the low-rank part L and the sparse part S of a matrix X = L + S + G with noise G. GoDec alternatively assigns the low-rank approximation of X − S to L and the sparse approximation of X − L to S. The algorithm can be significantly accelerated by bilateral random projections (BRP). We also propose GoDec for matrix completion {{as an important}} variant. We prove that the objective value ∥X − L − S ∥ 2 F converges to a local minimum, while L and S linearly converge to local optimums. Theoretically, we analyze the influence of L, S and G to the asymptotic/convergence speeds in order to discover the robustness of GoDec. Empirical studies suggest the efficiency, robustness and effectiveness of GoDec comparing with representative matrix decomposition and <b>completion</b> <b>tools,</b> e. g., Robust PCA and OptSpace. 1...|$|E
40|$|We {{investigate}} techniques {{based on}} van Oostrom's decreasing diagrams that reduce confluence proofs to the checking of critical pairs {{in the absence}} of termination properties, which are useful in dependent type calculi to prove confluence on untyped terms. These techniques are applied to a complex example taken from practice: a faithful encoding in an extension of LF with rewrite rules on objects and types, of the calculus of constructions with a cumulative hierarchy of predicative universes above Prop. The rules may be first-order or higher-order, plain or modulo, non-linear on the right or on the left. Variables which occur non-linearly in lefthand sides of rules or in equations must take their values in confined types: in our example, the natural numbers. The first-order rules are assumed to be terminating and confluent modulo some theory: in our example, associativity, commutativity and identity. Critical pairs involving higher-order rules must satisfy van Oostrom's decreasing diagram condition with respect to their indexes taken as labels. Our use of decreasing diagrams yields a modular proof of confluence on open terms. Our encoding of the hierarchy of universes was obtained by using the MAUDE <b>completion</b> <b>tool</b> twisted to fit our needs. The obtained set of rules exploits all the sophistication of our confluence theorem...|$|R
40|$|SKIP version 0. 3 (Software Keyboard for Impaired Users; in Italian: Tastiera Software per Utenti Disabili) is an {{improved}} {{version of a}} software keyboard for improving the efficiency of typing in languages with transparent orthography (i. e., languages with highly regular correspondence of orthography and phonetics) by impaired users or non-expert users. To this aim, a powerful orthogonal framework {{has been used in}} which the keyboard is defined as a 2 -D regular array of keys, so that the number of pressed keys and the key access time are significantly reduced. In fact motor-impaired users (as well as non-expert users) can fast and intuitively input any possible combination of pseudo-syllables, which are text entry units with simpler consonant-vowel phonemic structure. Further speed improvements are obtained with the cooperative use of an embedded word prediction and <b>completion</b> <b>tool.</b> The tool, which runs on single-threaded PC's equipped with Windows XP and previous, has been improved with some significant new features. First, typing speed has been further enhanced by giving the possibility to select more complex pseudo-syllabic structures through local syllabic completion menus associated to the keys. Second, it is optionally possible to add explicative iconic and audio outputs to the keys and explicative icons to the words proposed by the word prediction and completion tool; this to provide iconic and/or audio feedbacks for users with reading difficulties...|$|R
40|$|In this report, we {{describe}} a modification to the SimpleScalar tool set {{to support the}} PowerPC ISA. Our work is based on Version 3. 0 of the publicly available SimpleScalar tool set. We briefly describe features of the PowerPC ISA relevant to the simulator and provide operating system specific implementation details. We made modifications to the suite of five simulators that model the micro-architecture {{at different levels of}} detail. The timing simulator sim-outorder simulates PowerPC binaries on the Register Update Unit (RUU) micro-architecture. The ve simulators were tested by simulating the SPEC CPU 95 benchmarks to <b>completion.</b> The <b>tool</b> set simulates binaries compiled for 32 -bit IBM AIX running on PowerPC...|$|R
40|$|Knuth-Bendix {{completion}} is {{a technique}} for equational automated theorem proving based on term rewriting. This classic procedure is parametrized by an equational theory and a (well-founded) reduction order used at runtime to ensure termination of intermediate rewriting systems. Any reduction order {{can be used in}} principle, but modern <b>completion</b> <b>tools</b> typically implement only a few classes of such orders (e. g., recursive path orders and polynomial orders). Consequently, the theories for which completion can possibly succeed are limited to those compatible with an instance of an implemented class of orders. Finding and specifying a compatible order, even among a small number of classes, is challenging in practice and crucial {{to the success of the}} method. In this thesis, a new variant on the Knuth-Bendix completion procedure is developed in which no order is provided by the user. Modern termination-checking methods are instead used to verify termination of rewriting systems. We prove the new method correct and also present an implementation called Slothrop which obtains solutions for theories that do not admit typical orders and that have not...|$|E
40|$|Abstract. Knuth-Bendix {{completion}} {{takes as}} input {{a set of}} universal equations and attempts to generate a convergent rewriting system with the same equational theory. An essential parameter is a reduction order used at runtime to ensure termination of intermediate rewriting systems. Any reduction order {{can be used in}} principle, but modern <b>completion</b> <b>tools</b> typically implement only a few classes of such orders (e. g., recursive path orders and polynomial orders). Consequently, the theories for which completion can possibly succeed are limited to those compatible with an instance of an implemented class of orders. Finding and specifying a compatible order, even among a small number of classes, is challenging in practice and crucial {{to the success of the}} method. In this work, a new variant on the Knuth-Bendix completion procedure is developed in which no order is provided by the user. Modern termination-checking methods are instead used to verify termination of rewriting systems. We prove the new method correct and also present an implementation called Slothrop which obtains solutions for theories that do not admit typical orders and that have not previously been solved by a fully automatic tool...|$|E
40|$|King Saud University, Petroleum and Natural Gas Engineering Dept. Riyadh 11421, P. O. Box : 800, Kingdom of Saudi Arabia. mamro@ksu. edu. saOil {{and natural}} gas are the {{dominant}} fuels worldwide and since, the current oil production exceeds new additions to known reserves, a verity of enhanced oil recovery methods and advanced technologies especially in upstream {{can be applied to}} mature the mostly depleted reservoir to add more oil to the known reserves. The justification of the increasing demand for petroleum is the main challenge for the petroleum engineers. This paper presents the main EOR methods, which become nowadays more attractive for the oil industry to increase the recovery. However, the selection of a certain EOR-process for increasing oil recovery must be made after analyzing the detailed information of the oil reservoir. In addition, there are advanced technologies such as intelligent well technology which deals with the installation of advanced <b>completion</b> <b>tools,</b> sensors, control devices, and downhole monitoring systems. The primary objectives of adopting such technologies are to enhance production performance of existing and new wells, reduce the costs and improve the profitability. In this paper the techniques, screening criteria and recovery estimation of the EOR methods will be discussed. Moreover, recent advanced technologies employed to improve production and enhance recovery will be also presented...|$|E
50|$|The {{gameplay}} of Trauma Center: Under the Knife 2 {{is similar}} to its predecessor, featuring improved graphics and surgical instruments. The game is divided into multiple chapters on a linear plotline. In each chapter, the player must complete an operation using the Touch Screen. The player is ranked based on multiple scoring factors. Once a chapter is completed, it can be replayed on another difficulty level. Extra, difficult chapters are unlocked upon the game's <b>completion.</b> Surgical <b>tools</b> used include the surgical laser, antibiotic gel, drain, forceps, ultrasound, magnification tool, scalpel, needle, syringe, defibrillator, wire, and an air compressor and penlight in extenuating circumstances. The player can also use the Healing Touch once per operation to slow time.|$|R
40|$|Objective: To {{quantify}} {{the amount of}} helmet movement, time for task <b>completion,</b> <b>tool</b> satisfaction, and overall efficiency for various face-mask removal tools during football helmet face-mask removal. Design and Setting: Each subject performed one trial with the anvil pruner (AP), Face Mask Extractor (FME), PVC pipe cutter (PVC), and Trainer 2 ̆ 7 s Angel (TA). Each subject cut through 4 loop straps and removed the face mask while kneeling behind the athlete 2 ̆ 7 s head. Subjects: Twenty-nine certified athletic trainers (age 29. 5 +/- 6. 2 years, athletic training experience = 6. 3 +/- 5. 0 years). Measurements: Time {{to complete the task}} was recorded. Total range of motion and total movement of the helmet were assessed using a 6 -camera, 3 -dimensional motion-capture system. Satisfaction scores were measured for each subject for each tool. Efficiency scores were calculated using time and total helmet-movement data. Results: When using the FME, subjects were significantly faster than with all other tools (P 3 ̆c. 05), and when using the AP and TA, they were significantly faster than with the PVC. No differences were noted between tools in either movement variable. Significant differences were noted for satisfaction (P 3 ̆c. 05) for all comparisons except TA versus AP. Efficiency scores were FME, 11. 6; AP, 14. 3; TA, 14. 5; and PVC, 22. 9, with lower scores identifying increased efficiency. Conclusions: In general, subjects using the FME were superior in all variables except the movement variables. Future researchers should assess the removal task using specific protocols to determine whether the tools truly differ in terms of the movement created...|$|R
50|$|Intelligent code {{completion}} is a context-aware code completion {{feature in}} some programming environments that speeds {{up the process}} of coding applications by reducing typos and other common mistakes. Attempts to do this are usually done through auto completion popups when typing, querying parameters of functions, query hints related to syntax errors, etc. Intelligent code <b>completion</b> and related <b>tools</b> serve as documentation and disambiguation for variable names, functions and methods using reflection.|$|R
30|$|Commercialization of the steam-assisted gravity {{drainage}} (SAGD) process has made recovery of heavy oil/bitumen {{possible in a}} number of reservoirs hindered by hydrocarbon immobility. However, the economics of this process are highly sensitive to the efficiency of steam creation, delivery, and use, with a successful and unsuccessful SAGD well pair often separated by how effectively thermal inefficiencies can be mitigated in the flow profiles of steam injection and/or in emulsion recovery. To improve flow profiles, Albertan SAGD completions have experimented with the addition of flow control devices (FCDs). These <b>completion</b> <b>tools</b> have historically been used to regulate liquid inflow across long producing laterals, adding a variable pressure drop along the lateral to improve the conformance of hydrocarbon production and delay water breakthrough; within SAGD completions, FCDs find novel use to force a more even flow distribution of steam in the injector and a thermally dependent inflow profile in the producer to maximize recovery of heavy oil/bitumen. This paper provides a comprehensive overview of different FCD designs, discussing their respective methods of regulation, the fluid-adaptive behavior of “autonomous” FCDs, operational strengths and weaknesses of different commercial offerings, and suggestions on how to use existing pressure loss models for FCDs and apply them to the non-traditional application of regulating SAGD flow profiles, both for equipment sizing and estimation of pressure loss/flow rates across the device. From this work, it is proposed that use of autonomous FCDs in the production lateral are of greater value than use of flow control in the injector; however maximum benefits are achieved by coupling simple orifice-style FCDs in the injector lateral with autonomous, large flow path (non-orifice) FCDs capable of controlling steam flash events in the production well.|$|E
40|$|The {{volume of}} heavy oil/bitumen {{recoverable}} worldwide is vast in quantity but difficult and energy intensive to extract {{due to the}} high in-situ oil viscosity of these unconventional plays. One method of thermal recovery, steam-assisted gravity drainage (SAGD), has proven a commercial success in heavy oil/bitumen production by using steam to raise the temperature of heavy oil/bitumen in the reservoir with a resulting lower hydrocarbon viscosity, shifting the relative mobility of reservoir oil to one favorable for extraction via horizontal wells. However, geological and reservoir heterogeneity often complicate this task resulting in uneven production rates, higher operational costs, and stranded heavy oil/bitumen. This work theorizes that SAGD recovery is improved using flow control devices (FCDs) to force conformance in SAGD laterals. To test this theory, a novel protocol and test flow loop was developed to measure pressure drop across an autonomous hybrid FCD while flowing multiphase mixtures containing steam. This laboratory data was used to qualify existing pressure drop correlations and determine if nitrogen gas, a common test gas to describe FCD pressure drop response, creates suitable data for modeling steam systems. Finally, the flow loop was used to induce a steam ?flash?, a transition of water at saturation temperature to vapor due to a suddenly decreased pressure environment, within the FCD to determine if steam flashing changes expected pressure drops. Using linear regression, a correlation of expected pressure drop across the autonomous hybrid FCD for mixtures of heavy oil/bitumen, water, and steam was generated. Existing correlations proved inadequate for mixtures containing steam, consistently underestimating pressure drop across the FCD. However, the empirical correlation of this research highly matched laboratory data with an R-squared value of 0. 94. A secondary linear model captured modifications in FCD behavior due to steam flashing. This second model also exhibited a strong goodness-of-fit with an R-squared value of 0. 96. For both empirical correlations, p-values less than 0. 05 were easily obtained, inferring the statistical significance of each correlation. Correlations generated in this research {{were added to the}} REVEAL? reservoir simulation package to accurately forecast FCD impact on SAGD well pair performance. Simulating a four year production period for SAGD well pairs in Albertan reservoirs consistently show that FCD usage improved bitumen recovery by 50 % or more while simultaneously decreasing cumulative steam/oil ratios (cSOR) by 1 - 2 m^ 3 /m^ 3. The mechanism of action for this change was due largely to improved steam chamber conformance and by eliminating steam breakthrough events in the producer. Net Present Value (NPV) analysis of improvements with the additional cost of FCD <b>completion</b> <b>tools</b> unfailingly showed a strong economic argument for the use of FCDs to improve thermal efficiency...|$|E
30|$|Water {{production}} in oil-producing wells becomes {{a more serious}} problem as the wells mature. Remediation techniques for controlling water production, generally referred to as conformance control, are {{selected on the basis}} of the water source and the method of entry into the wellbore (Reddy et al. 2002). Water shut-off methods can be classified in two different types: mechanical and chemical methods. The mechanical methods are limited to the application of specific <b>completion</b> <b>tools</b> (Vega et al. 2010). On the other hand, the chemical methods, extensively used in the last decade (Sydansk and Southwell 2000; Seright et al. 2003), consist namely of chemical products that are pumped into producer or injector wells. Most of these systems are based on polymer solutions that after a given time from low-viscosity liquids turn to strong or weak gels depending on their formulations, which are the basis of most water shut-off treatments. Several authors have reported the characteristics of gel polymers (hydrogels) utilized for other purposes in detail (Ganji and Vasheghani-Farahani 2009; Rudzinski et al. 2002; Huang et al. 2006). To control water cut and improve the oil recovery of oil fields, many technologies, such as polymer flooding, surfactant flooding, foam flooding, etc. have been widely applied (Liu et al. 2005; Welton et al. 2007; Simjoo et al. 2009). Several authors have also recommended the preformed gel to control conformance in mature oil fields because of their overcoming ability in some distinct drawbacks inherent in in-situ gelation systems (Bai et al. 2007 a, b). Preformed particle gels (PPG)—a kind of preformed gel—is an improved super absorbent polymer and primarily used as an absorbent for water and aqueous solutions. PPGs have developed for the conformance control purposed with some suitable properties such as adjustable sizes, swelling ability in formation water, salt resistance, thermal stability, adjustable strength and slightly controlled swelling rate. PPG treatments have been selected because of its some suitable reasons, its unique properties, overcoming some distinct disadvantages and so on (Bai et al. 2008). PPG was developed by some authors (Bai et al. 2007 a, b) and also has been applied to control conformance in most of the mature oil fields in China. Moreover, most of the PPG applications have shown positive results (Liu et al. 2006). Feng et al. (2003) demonstrated the microgels as good candidates for water shutoff and profile-control operations while they could be injected easily in porous media without any plugging. Bai et al. (2007 a, b) studied the effects of gel compositions and reservoir conditions on PPG properties by evaluating the swollen PPG strength and PPG swelling capacity. They found that although PPG is not sensitive to reservoir minerals and formation-water salinity and also stable over a long period of time, it is strength and size-controlled. Zhang and Bai (2010) studied the quantification of PPG propagation during extrusion through a transport open fracture. They showed that high-concentration brine in preparation of swollen PPG has higher reduction in water permeability than the low-concentration brine. Selection of a polymer gel system for a given well treatment strongly depends on the reservoir conditions such as temperature, salinity, hardness and the pH of the water used for preparation of the gelant; and some other parameters include salinity of the formation water, permeability of the target zone, and the lithology of the formation (Sydansk 1988; Vossoughi 2000; Sydansk 1987; Seright and Martin 1993). Aalaie et al. (2008) investigated the gelation process and effects of clay content and ionic strength and influence of nanoclay content and salt concentration on swelling behavior. They indicated that the swelling ratio of nanocomposite gels in tap-water decreased as the concentration of the clay increased.|$|E
40|$|Bachelor's thesis {{focuses on}} wash basin {{strainer}} fabrication technology. This rotary component {{will be made}} from ČSN 1. 4301 (X 5 CrNi 18 - 10) material. Stated annual production is twenty five thousands completed products. Chosen technology for fabrication is drawing with no wall thinning {{with the use of}} hydraulic press LEN 25 C. Tool for deep drawing will be used for <b>completion.</b> This <b>tool's</b> drawing documentation is enclosed in this thesis. Single-operation tool for deep drawing was designed. This tool contains blank holder, punch, die and gas spring. In the economical section was calculated that total cost of one product is 33 czech crowns. For the production to generate income at least 13 628 products would have to be made...|$|R
40|$|The {{bachelor}} thesis {{focuses on}} communication {{mix of the}} selected company. It concerns communication tools, which are recently in use and subsequently on their improvements. It also contains specific suggestions for improvements or <b>completion</b> of communication <b>tools.</b> The main contribution of the bachelor thesis after its aplication for company should be increase of public awareness about its assortment of goods and increase of competitive advantage of company by means of marketing communication...|$|R
40|$|International audienceThough Cantonese is {{the most}} {{influential}} variety of Chinese other than Mandarin, {{there are only a}} limited number of Cantonese corpora available for linguistic studies. Among the essential steps of building a corpus, word segmentation is a necessary but highly challenging task due to the lack of clear word boundary in Cantonese. This paper reports the construction and evaluation of an open-source automatic Cantonese word segmenter developed for Cantonese. The tool is a component of the multilingual SPPAS program designed to be used directly by linguists. It is a free software distributed under a GPL license. The effectiveness of the tool was evaluated by comparing the result of segmenting some samples of a spoken Cantonese corpus manually and automatically using the tool developed. High precision and recall were found in our study. Upon <b>completion,</b> the <b>tool</b> would definitely promote the development of more Cantonese corpora for language related studies...|$|R
