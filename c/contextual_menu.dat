28|23|Public
25|$|Since {{around the}} late 1990s, the three-button scrollmouse {{has become the}} de facto standard. Users most {{commonly}} employ the second button to invoke a <b>contextual</b> <b>menu</b> in the computer's software user interface, which contains options specifically tailored to the interface element over which the mouse cursor currently sits. By default, the primary mouse button sits located on the left-hand side of the mouse, {{for the benefit of}} right-handed users; left-handed users can usually reverse this configuration via software.|$|E
25|$|When mice {{have more}} than one button, the {{software}} may assign different functions to each button. Often, the primary (leftmost in a right-handed configuration) button on the mouse will select items, and the secondary (rightmost in a right-handed) button will bring up a menu of alternative actions applicable to that item. For example, on platforms with more than one button, the Mozilla web browser will follow a link in response to a primary button click, will bring up a <b>contextual</b> <b>menu</b> of alternative actions for that link in response to a secondary-button click, and will often open the link in a new tab or window in response to a click with the tertiary (middle) mouse button.|$|E
2500|$|Alters {{double-click}} and <b>contextual</b> <b>menu</b> behaviours. When a user double clicks on {{the drive}} icon in Explorer or right clicks to get a context menu, what happens is fully programmable by settings in the autorun.inf file.|$|E
50|$|From {{the user}} {{interface}} designer's perspective, {{an interaction technique is}} a well-defined {{solution to a}} specific user interface design problem. Interaction techniques as conceptual ideas can be refined, extended, modified and combined. For example, <b>contextual</b> <b>menus</b> are {{a solution to the problem}} of rapidly selecting commands. Pie menus are a radial variant of <b>contextual</b> <b>menus.</b> Marking menus combine pie menus with gesture recognition.|$|R
5000|$|New icons {{added to}} {{facilitate}} speedy use of main and <b>contextual</b> <b>menus</b> ...|$|R
5000|$|<b>Contextual</b> <b>menus</b> {{which come}} out of Dock icons now have more options and have a new look, with a semi-transparent {{charcoal}} background and white text.|$|R
2500|$|This {{leaves the}} user open to attack from malware which uses the autorun.inf {{to alter the}} {{double-click}} and <b>contextual</b> <b>menu</b> behaviours. Double clicking the drive icon will infect the machine. Right Clicking and selecting the [...] "Explore" [...] or [...] "Open" [...] options from the context menu is not a workaround as these menu items can be coopted by the appropriate autorun.inf entries.|$|E
2500|$|Introduced in iTunes 4.5, the [...] "Party Shuffle" [...] {{playlist}} {{was intended}} as a simple DJing aid. By default, it selects tracks randomly from other playlists or the library, but users can override the automatic selections by deleting tracks (iTunes will choose new ones to replace them) or by adding their own via drag-and-drop or <b>contextual</b> <b>menu.</b> This allows a mixture of both pre selected and random tracks in the same meta-playlist. The playlist from which Party Shuffle drew could be changed on the fly by the computer user, but doing so will cause all randomly chosen tracks to disappear and be replaced.|$|E
5000|$|Internal tree {{searches}} can {{be performed}} {{for any of the}} annotated node attributes while links to other databases are provided through the <b>contextual</b> <b>menu</b> of the tree browser that appear when clicking any node.|$|E
50|$|The game {{featured}} a unique point-and-click interface with 2D screens where {{the main character}} was not visible; objects and characters displayed <b>contextual</b> <b>menus</b> when clicked on.|$|R
5000|$|The free app, {{available}} for Apple and Android devices, informs its users about {{their rights and}} provides several key features {{through a series of}} simple <b>contextual</b> <b>menus</b> and cues: ...|$|R
50|$|Aim {{with your}} eyes - Target and {{interact}} with objects by glancing at them. Aim your weapon's cross hair in FPS games or create <b>contextual</b> <b>menus</b> for a gaze based interface.|$|R
5000|$|When {{pressing}} Control and {{clicking the}} mouse-button, {{you will get}} a <b>contextual</b> <b>menu.</b> This is a compatibility feature for users with one-button mice; users with two-button mice just use the right mouse-button, with no modifiers.|$|E
5000|$|Alters {{double-click}} and <b>contextual</b> <b>menu</b> behaviours. When a user double clicks on {{the drive}} icon in Explorer or right clicks to get a context menu, what happens is fully programmable by settings in the autorun.inf file.|$|E
50|$|VTUploader is an {{application}} that integrates into the Explorer's (right-click) <b>contextual</b> <b>menu,</b> listed under Send To > Virus Total. The application also launches manually for submitting a URL or {{a program that}} is currently running in the OS.|$|E
5000|$|One of McLaren's reputed [...] "killer" [...] {{features}} was {{a technology}} known as [...] "3D Touch" [...] {{that allowed the}} user {{to interact with the}} phone using gestures. Sensors contained within the device's body and screen enabled new interactions - which mainly centred around the user hovering their finger over the display in order to reveal certain <b>contextual</b> <b>menus</b> or other additional functions.|$|R
50|$|Another {{workaround}} has {{the user}} hold down {{one or more}} keys on the keyboard before pressing the mouse button (typically control on a Macintosh for <b>contextual</b> <b>menus).</b> This has the disadvantage that it requires that both the user's hands be engaged. It also requires that the user perform actions on completely separate devices in concert; that is, holding a key on the keyboard while pressing {{a button on the}} mouse. This can be a difficult task for a disabled user, although can be remedied by allowing keys to stick so that they {{do not need to be}} held down.|$|R
5000|$|On January 6, 2011, version 3.8 of Smultron was {{published}} by Peter Borg in the Mac App Store as a paid app for OS X 10.6-10.8. Eventually separate versions 6, 7 and 8 (for OS X 10.9, 10.10, and 10.11 respectively) were released on the App Store. Each version includes new features and improvements, such as iCloud support in Smultron 6 and better <b>contextual</b> <b>menus</b> in Smultron 7. Smultron 8 introduces support for native OS X tabs {{as well as those}} that already existed in Smultron. Also notable is that Syntax Highlighting has been updated in each version to include more languages: ...|$|R
50|$|BumbleMap was the {{software}} platform for collaborative knowledge management that the Bumblehood portal was run on. It {{was based on}} the topic maps paradigm and provided tree-based visualization of the topic map with a <b>contextual</b> <b>menu</b> adhering to typing of topics, associations and occurrences.|$|E
5000|$|In {{applications}} which support [...] "Services", {{there is}} an option in the application menu (for example, Safari>Services>Look up in Dictionary) which brings up the Dictionary application and displays {{the definition of a}} selected word. The same option appears in the <b>contextual</b> <b>menu</b> after a Control-click on the selected word.|$|E
50|$|The {{compositing}} mode for a clip {{is changed}} by control-clicking or right-clicking on the clip and selecting {{it from the}} cascading <b>contextual</b> <b>menu,</b> or by selecting the mode from the application's 'modify' menu. For either matte modes, the clip that will perform the key is placed overneath the fill clip on the Timeline.|$|E
50|$|Access to prior {{versions}} of a file is easy. A user merely selects a file and clicks the right mouse button to display a <b>contextual</b> pop-up <b>menu</b> listing the X most recent previous {{versions of}} the file, if any.|$|R
5|$|FireRed and LeafGreen {{are members}} of the Pokémon series of {{role-playing}} video games. As in previous games, the player controls the player character from an overhead perspective and participates in turn-based combat encounters. However, new features such as a <b>contextual</b> help <b>menu</b> and a new region the player may access have also been added. Throughout the games, the player captures and raises Pokémon for use in battle.|$|R
40|$|Menu-based natural {{language}} interfaces to databases are software systems that allow their users to edit a query by composing fragments of generated {{natural language}}. The fragments available {{for this purpose}} are provided by the system through <b>contextual</b> <b>menus.</b> This thesis discusses the development of such a system which relies on a description logic reasoner to determine the available fragments, and on natural language generation to produce them. The logic of the interface, along with the query interaction model, are defined by the Query Tool framework. The focus of this work is on the language model and on the resources needed to represent a query in any knowledge domain, meeting the constraints imposed by the query language and the interaction model of Query Tool. This thesis also documents two experimental techniques to produce automatically the resources needed to interface the system with a new knowledge base. The first technique mines a corpus for natural language expressions describing a semantic relation. The second technique produces a generation template from a natural language expression assembling the appropriate lexical and syntactic elements. ...|$|R
5000|$|MacWeb {{pioneered the}} [...] "click and hold" [...] gesture {{to display a}} popup <b>contextual</b> <b>menu.</b> This mouse gesture was {{commonly}} used on the Macintosh before the prevalence of two-button mice on the Mac platform. MacWeb's preferences dialog allowed users to customize display styles on a per-tag basis similar to Cascading style sheets ...|$|E
5000|$|Norm Cox is most {{known for}} his design of the {{hamburger}} menu symbol, a stack of three horizontal black lines. These lines resemble a list of items, which serve as a visual reminder of menu lists. The hamburger menu {{was designed to be}} simple, functionally memorable, and mimic the look of the resulting displayed menu list. Norm originally designed it as a [...] "container" [...] for <b>contextual</b> <b>menu</b> choices on the Xerox Star, similar to the <b>contextual</b> <b>menu</b> that’s displayed today when we right mouse click on objects. The symbol is still in extensive use today as an indicator of a hidden menus on websites and smartphone apps. Additionally, Cox designed the visual style of the Xerox Star user interface elements and icons, including the document icon with the dog-eared corner and folder that are still in use today.|$|E
5000|$|This {{leaves the}} user open to attack from malware which uses the autorun.inf {{to alter the}} {{double-click}} and <b>contextual</b> <b>menu</b> behaviours. Double clicking the drive icon will infect the machine. Right Clicking and selecting the [...] "Explore" [...] or [...] "Open" [...] options from the context menu is not a workaround as these menu items can be coopted by the appropriate autorun.inf entries.|$|E
40|$|We {{propose a}} new type of <b>contextual</b> pop-up <b>menu</b> called a control menu. These menus combine the {{selection}} of an operation and the control of this operation. They integrate up to two scroll bars or spin-boxes and thus allow users to keep their attention focused on the menu during the operation. Control menus can have sub-menus, and also retain the novice and expert modes of use found in marking menus. We describe control menus and how they are useful in different types of user interfaces. A program incorporating our control menus can be tested a...|$|R
40|$|International audienceThis paper {{presents}} Leaf menu, a {{new type}} of <b>contextual</b> linear <b>menu</b> that supports curved gesture shortcuts. By providing an alternative to keyboard shortcuts, the Leaf menus can be used for the selection of commands on tabletops, but its key benefit is its adequacy to small handheld touchscreen devices (PDA, Smartphone). Indeed Leaf menus define a compact and known layout inherited from linear menus, they support precise finger interaction, they manage occlusion and they can be used in close proximity to the screen borders. Moreover, by providing stroke shortcuts, they favour the selection of frequent commands in expert mode and make eye-free selection possible...|$|R
40|$|Many {{interactive}} {{computer systems}} use menus {{as an important}} part of their interface. Menus allow users to select operations but not to control their execution. A second interactor, such as a dialog box, has to be used to control the chosen operation and thus complete the interaction. This decomposition of what is a single action from the user's point of view into two distinct steps slows down interaction with computer systems. This thesis proposes a new <b>contextual</b> pop-up <b>menu,</b> called a Control Menu, that includes proportional control of the chosen operation with immediate feedback. Using this menu gives a more fluid control of complex interfaces and has the advantage of an expert form of use that is very similar to, and thus easily learnt from, the novice usage...|$|R
50|$|TortoiseCVS is a CVS client for Microsoft Windows {{released}} {{under the}} GNU General Public License. Unlike most CVS tools, it includes itself in Windows' shell by adding {{entries in the}} <b>contextual</b> <b>menu</b> of the file explorer, therefore it does not run in its own window. Moreover, it adds icons onto files and directories controlled by CVS, giving additional information to the user without having to run a full-scale stand-alone application.|$|E
5000|$|Consider {{for example}} the process of {{deleting}} a file using a <b>contextual</b> <b>menu.</b> This assumes {{the existence of a}} mouse (input device), a screen (output device), and a piece of code that paints a menu and updates its selection (user feedback) and sends a command to the file system when the user clicks on the [...] "delete" [...] item (interpretation). User feedback can be further used to confirm that the command has been invoked.|$|E
50|$|Since {{around the}} late 1990s, the three-button scrollmouse {{has become the}} de facto standard. Users most {{commonly}} employ the second button to invoke a <b>contextual</b> <b>menu</b> in the computer's software user interface, which contains options specifically tailored to the interface element over which the mouse cursor currently sits. By default, the primary mouse button sits located on the left-hand side of the mouse, {{for the benefit of}} right-handed users; left-handed users can usually reverse this configuration via software.|$|E
2500|$|Full Throttle was LucasArts' {{eleventh}} adventure game {{overall and}} the tenth {{to use the}} company's in-house game engine, SCUMM. It featured full motion video and action sequences, using LucasArts' INSANE animation engine, which was previously utilized in [...] It was the first LucasArts game to be released for Microsoft Windows {{and the first to}} be distributed only on CD-ROM. It also introduced a <b>contextual</b> pie <b>menu</b> through which the player controls interactions with objects and characters. In contrast to other computer games of the era, which mostly relied on in-house talent for their voice acting, Full Throttle used mostly professional voice actors, including Roy Conrad as Ben, Mark Hamill as the villainous Adrian Ripburger, Hamilton Camp as the elderly Malcolm Corley, and Kath Soucie as Ben's ally Maureen. It {{was one of the few}} LucasArts games to use licensed music, featuring songs by San Francisco-area rock band The Gone Jackals.|$|R
50|$|Full Throttle was LucasArts' {{eleventh}} adventure game {{overall and}} the tenth {{to use the}} company's in-house game engine, SCUMM. It featured full motion video and action sequences, using LucasArts' INSANE animation engine, which was previously utilized in Star Wars: Rebel Assault II: The Hidden Empire. It was the first LucasArts game to be released for Microsoft Windows {{and the first to}} be distributed only on CD-ROM. It also introduced a <b>contextual</b> pie <b>menu</b> through which the player controls interactions with objects and characters. In contrast to other computer games of the era, which mostly relied on in-house talent for their voice acting, Full Throttle used mostly professional voice actors, including Roy Conrad as Ben, Mark Hamill as the villainous Adrian Ripburger, Hamilton Camp as the elderly Malcolm Corley, and Kath Soucie as Ben's ally Maureen. It {{was one of the few}} LucasArts games to use licensed music, featuring songs by San Francisco-area rock band The Gone Jackals.|$|R
40|$|In {{the last}} decade, several {{specialized}} tools {{have been created}} upon similarity functions that, given a keyword and a context, determine the degree of similarity (or probability) that information in a dataset corresponds to the user's query. Quite often such tools are meant for experts and require training and knowledge on the application domain to be used. However, given the huge amount of information available on the Web, resolving ambiguities becomes a daily task for most users. In this paper, we present a technique for embedding into a Web browser tools for solving ambiguities between keywords that users might found while navigating the Web. A prototype illustrating such techniques has been developed as a proof of concept. The tool presents the degree of similarity directly on Web pages as a <b>contextual</b> help <b>menu.</b> The overall approach includes different datasets and similarity functions and is flexible enough to support extensions for covering additional contexts of use...|$|R
