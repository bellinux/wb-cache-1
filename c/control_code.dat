406|1632|Public
500|$|After {{the passage}} of strict new state and federal air regulations, the city passed its updated Air Pollution <b>Control</b> <b>Code</b> in 1971, {{designed}} in part to address concerns that nitrogen oxides and unburned hydrocarbons had been left insufficiently controlled by the previous changes. By 1972, New York City had cut levels of sulfur dioxide and particulates by half from their peak. According to an article published by the EPA Journal in 1986, those improvements at the city level were [...] "the legacy of concern that emerged after the 1966 Thanksgiving Day smog disaster." ...|$|E
2500|$|Navtex, {{used for}} {{maritime}} weather reports, with FEC error <b>control</b> <b>code</b> using the SITOR-B system ...|$|E
2500|$|Early {{television}} {{remote controls}} (1956-1977) used ultrasonic tones. [...] Present-day remote controls are commonly consumer infrared devices which send digitally-coded pulses of infrared radiation to control {{functions such as}} power, volume, channels, playback, track change, heat, fan speed, or other features varying from device to device. [...] Remote controls for these devices are usually small wireless handheld objects {{with an array of}} buttons for adjusting various settings such as television channel, track number, and volume. For many devices, the remote control contains all the function controls while the controlled device itself has only a handful of essential primary controls. The remote <b>control</b> <b>code,</b> and thus the required remote control device, is usually specific to a product line, but there are universal remotes, which emulate the remote control made for most major brand devices.|$|E
5000|$|C0 and C1 <b>control</b> <b>codes,</b> {{which shows}} the caret {{notation}} for all C0 <b>control</b> <b>codes</b> as well as DEL ...|$|R
50|$|Unicode {{provides}} graphic characters for representing C0 <b>control</b> <b>codes</b> {{and other}} <b>control</b> {{characters in the}} Control Pictures block. They are visual representations, not the actual <b>control</b> <b>codes</b> themselves.|$|R
5000|$|... #Caption: Windows-1252, {{sometimes}} incorrectly called [...] "ANSI" [...] or [...] "ASCII". Red indicates code {{points that}} are C1 <b>control</b> <b>codes</b> in ISO-8859-1. Blue dots indicate <b>control</b> <b>codes</b> or unused code points.|$|R
2500|$|Unicode {{claims that}} [...] "Ideally, {{there would be}} no pairs of z-variants in the Unicode Standard." [...] This would make it seem that the goal is to at least unify all minor variants, {{compatibility}} redundancies and accidental redundancies, leaving the differentiation to fonts and to language tags. This conflicts with the stated goal of Unicode to take away that overhead, and to allow any number of any of the world's scripts {{to be on the same}} document with one encoding system. Chapter One of the handbook states that [...] "With [...] Unicode, [...] the [...] information [...] technology [...] industry [...] has [...] replaced [...] proliferating [...] character sets [...] with [...] data [...] stability, [...] global interoperability [...] and [...] data [...] interchange, [...] simplified [...] software, and reduced development costs. While [...] taking [...] the [...] ASCII [...] character [...] set [...] as [...] its [...] starting [...] point, [...] the [...] Unicode [...] Standard [...] goes [...] far beyond ASCIIâ€™s limited ability to encode only the upper- and lowercase letters A through Z. It [...] provides [...] the [...] capacity [...] to [...] encode [...] all [...] characters [...] used [...] for [...] the [...] written [...] languages [...] of [...] the world -- more than 1 million characters can be encoded. No escape sequence or <b>control</b> <b>code</b> is required to specify any character in any language. The Unicode character encoding treats [...] alphabetic [...] characters, [...] ideographic [...] characters, [...] and [...] symbols [...] equivalently, [...] which means they can be used in any mixture and with equal facility." ...|$|E
50|$|The ASCII <b>control</b> <b>code</b> unit {{separator}} was formerly used.|$|E
5000|$|The <b>control</b> <b>code</b> [...] defines {{subtitle}} {{position relative}} to video.|$|E
50|$|Reproducing rolls are {{the same}} as hand-played rolls but have {{additional}} <b>control</b> <b>codes</b> to operate the dynamic modifying systems specific to whichever brand of reproducing piano it is designed to be played back on. The roll plays back at a fixed constant speed to preserve the inter-relationship of these <b>control</b> <b>codes</b> and the time it takes for the pianos dynamic mechanisms to operate between sequential <b>control</b> <b>codes.</b>|$|R
50|$|The C1 Controls {{subheading}} contains 32 supplementary <b>control</b> <b>codes</b> {{inherited from}} ISO/IEC 8859-1 {{and many other}} 8-bit character standards. The alias names for the C0 and C1 <b>control</b> <b>codes</b> are taken from ISO/IEC 6429:1992.|$|R
50|$|The Extended Binary Coded Decimal Interchange Code (EBCDIC) {{character}} set contains 65 <b>control</b> <b>codes,</b> including {{all of the}} ASCII <b>control</b> <b>codes</b> as well as additional codes which are mostly used to control IBM peripherals.|$|R
5000|$|In this case, it is {{possible}} to define display values of each line or the whole subtitle line [...] If the <b>control</b> <b>code</b> is in upper case, it affects the whole subtitle line. If the <b>control</b> <b>code</b> is in lower case, it affects only the line it is contained in. For example: ...|$|E
5000|$|Navtex, {{used for}} {{maritime}} weather reports, with FEC error <b>control</b> <b>code,</b> ...|$|E
5000|$|... #Subtitle level 4: Break <b>control</b> <b>code</b> (Additional Type Value = 31) ...|$|E
5000|$|The {{font size}} cannot be {{configured}} in [...]sub files, only in player, but the font {{style of the}} subtitle displayed may be changed using <b>control</b> <b>codes.</b> The available <b>control</b> <b>codes</b> and their purpose are given: ...|$|R
50|$|Sixty-five code points (U+0000-U+001F and U+007F-U+009F) are {{reserved}} as <b>control</b> <b>codes,</b> and {{correspond to the}} C0 and C1 <b>control</b> <b>codes</b> defined in ISO/IEC 6429. Of these U+0009 (Tab), U+000A (Line Feed), and U+000D (Carriage Return) are widely used in Unicode-encoded texts.|$|R
50|$|These are the {{synchronous}} transmit-receive <b>control</b> <b>codes.</b> <b>Control</b> {{characters were}} reserved; {{there was no}} provision for transparent operation.|$|R
50|$|The Win32 device <b>control</b> <b>code</b> {{takes into}} {{consideration}} the mode of the operation being performed.|$|E
5000|$|Navtex, {{used for}} {{maritime}} weather reports, with FEC error <b>control</b> <b>code</b> using the SITOR-B system ...|$|E
50|$|Swecha runs a Git {{repository}} management, Version <b>Control,</b> <b>Code</b> reviews, {{and continuous}} integration etc. at http://code.swecha.org.|$|E
50|$|CEA-931-B {{defines a}} method for {{encapsulating}} remote <b>control</b> <b>codes</b> over IP and CEA-931-A defines {{a method for}} encapsulating remote <b>control</b> <b>codes</b> over IEEE-1394 https://web.archive.org/web/20070927212447/http://www.ce.org/print/Press/CurrentNews/press_release_detail.asp?id=10321. These documents are not free even though free standards are the norm for Internet Protocols and contributed significantly to their widespread adoption.|$|R
50|$|Escape {{sequences}} (from ISO/IEC 6429 or ISO/IEC 2022) {{are not to}} be interpreted. Most applications only {{interpret the}} <b>control</b> <b>codes</b> for LF, CR, and HT. A few applications also interpret VT, FF, and NEL (in C1). Very few applications interpret the other C0 and C1 <b>control</b> <b>codes.</b>|$|R
5000|$|Included in PETSCII are cursor {{and screen}} <b>control</b> <b>codes,</b> such as , , , and [...] (the latter two activating/deactivating reverse-video {{character}} display). The <b>control</b> <b>codes</b> appeared in program listings as reverse-video graphic characters, although some computer magazines, {{in their efforts}} to provide more clearly readable listings, pretty-printed the codes using their actual names, like the above examples. Such names were commonly enclosed in curly braces in the listings. This prevented ambiguity, since, as mentioned, PETSCII had no curly brace characters. The screen <b>control</b> <b>codes</b> were essentially similar to escape codes for text based computer terminals.|$|R
5000|$|ICF: Internal Coupling Facility; Used for z/OS clustering, running {{exclusively}} the Coupling Facility <b>Control</b> <b>Code</b> (CFCC).|$|E
50|$|Graphic {{characters}}, format characters, <b>control</b> <b>code</b> characters, {{and private}} use characters are known collectively as assigned characters.|$|E
5000|$|Minimalistic {{support for}} three {{assembler}} directives (.equ, [...]db, [...]ds) to control data locations, there exist no directives to directly <b>control</b> <b>code</b> locations ...|$|E
5000|$|Windows-1252 {{placed the}} euro sign in a gap (position 80hex) in the {{existing}} C1 <b>control</b> <b>codes.</b>|$|R
40|$|In this paper, {{we propose}} a Joint Source-Network error <b>control</b> <b>coding</b> (JSNC) scheme which {{efficiently}} integrates scalable video <b>coding,</b> error <b>control</b> <b>coding</b> and overlay infrastructure to stream video to heterogeneous users. The distributed overlay data service nodes over the IP network form an application layer media service overlay network and adapt both the video bitstream and error <b>control</b> <b>coding</b> based on both user requirements and available bandwidth. A novel Fine Granular Adaptive FEC (FGA-FEC) scheme, a generalization of MD-FEC, is proposed for error recovery during video transmission to heterogeneous users. Encoding once, the FGA-FEC can adapt the FEC encoded scalable MC-EZBC bitstream to satisfy multiple heterogeneous users simultaneously without decoding/re-encoding FEC at intermediate nodes, thus saving computation 1...|$|R
5000|$|Device Control Three, {{one of the}} C0 and C1 <b>control</b> <b>codes</b> used in text by {{computer}} systems ...|$|R
5000|$|... 3. Processing any <b>control</b> <b>code</b> as the {{terminal}} normally would {{outside of a}} CSI sequence before continuing to parse {{the rest of the}} sequence.|$|E
50|$|The {{primitives}} major type {{has a major}} type {{value of}} 7. It is used for Simple Data types, common complex float types, as well as <b>control</b> <b>code.</b>|$|E
50|$|Sencha Touch {{follows the}} MVC pattern which {{separates}} the application data, the <b>control</b> <b>code</b> and view. This separation allows large scale applications {{to be flexible}} and easy to maintain.|$|E
5000|$|... 128A (Code Set A)ASCII {{characters}} 00 to 95 (0-9, A-Z and <b>control</b> <b>codes),</b> special characters, and FNC 1-4 ...|$|R
40|$|This {{new edition}} has been {{extensively}} revised to reflect the progress in error <b>control</b> <b>coding</b> {{over the past few}} years. Over 60 % of the material has been completely reworked, and 30 % of the material is original. Convolutional, turbo, and low density parity-check (LDPC) coding and polar codes in a unified framework. Advanced research-related developments such as spatial coupling. A focus on algorithmic and implementation aspects of error <b>control</b> <b>coding...</b>|$|R
50|$|Control Pictures is a Unicode block {{containing}} characters for graphically {{representing the}} C0 <b>control</b> <b>codes,</b> and other <b>control</b> characters.|$|R
