103|461|Public
25|$|Sajjad, A. (1999). Efforts in the Standardization of Urdu <b>code</b> <b>table,</b> Akhbar-e-Urdu (Urdu News). Muqtadra Qaumi Zaban. Islamabad. June. (In Urdu).|$|E
25|$|The <b>code</b> <b>table</b> {{initially}} contains {{codes that}} are one bit {{longer than the}} symbol size {{in order to accommodate}} the two special codes clr and end and codes for strings that are added during the process. When the table is full the code length increases to give space for more strings, up to a maximum code 4095 = FFF(hex). As the decoder builds its table it tracks these increases in code length and it is able to unpack incoming bytes accordingly.|$|E
25|$|The {{encoding}} {{process that}} produces the 9-bit codes is shown below. A local string accumulates pixel color numbers from the palette, with no output action {{as long as the}} local string {{can be found in a}} <b>code</b> <b>table.</b> There is special treatment of the first two pixels that arrive before the table grows from its initial size by additions of strings. After each output code, the local string is initialized to the latest pixel color (that could not be included in the output code).|$|E
40|$|The coding {{method has}} the stereo audio {{spectral}} values grouped into scale factor bands (28), with formation of sections each containing {{at least one}} scale factor band. The audio spectral values are coded within each section using a <b>coding</b> <b>table</b> selected {{from a number of}} <b>coding</b> <b>tables.</b> Each <b>coding</b> <b>table</b> is identified by a <b>coding</b> <b>table</b> number transmitted alongside the coded stereo audio spectral values. An additional <b>coding</b> <b>table</b> number is transmitted for an intensity stereo coding method, or an adaptive Huffman coding method for the stereo audio spectral values. ADVANTAGE - Provides compression of audio digital signals without quality degradation...|$|R
40|$|The method {{involves}} grouping spectral {{values and}} detecting a group affected by noise. If a group is not noise affected a <b>coding</b> <b>table</b> out of several tables is allocated for redundancy coding of that group, while the <b>coding</b> <b>table</b> {{allocated to the}} group is referred to by a <b>coding</b> <b>table</b> number. If a group is noise affected, an additional <b>coding</b> <b>table</b> number, not referring to a <b>coding</b> <b>table,</b> is allocated to the group in order to signal that the group is noise affected and, therefore, will not be redundancy coded. USE - For digital video and audio coding according to moving picture expert group standards. ADVANTAGE - Provides extension of standard MPEG- 2 AAC by facility for noise substitution without interfering with basic coding structure...|$|R
40|$|Abstract. An {{innovative}} algorithm for automatic {{generation of}} Huffman <b>coding</b> <b>tables</b> for semantic classes of digital images is presented. Collecting statistics {{over a large}} dataset of corresponding images, we generated Huffman tables for three images classes: landscape, portrait and document. Comparisons between the new tables and the JPEG standard <b>coding</b> <b>tables,</b> using also different quality settings, have shown {{the effectiveness of the}} proposed strategy in terms of final bit size (e. g. compression ratio). ...|$|R
2500|$|An {{example of}} such an attack on disk {{encryption}} is the [...] "Evil Maid Attack", in which an attacker installs a bootkit on an unattended computer, replacing the legitimate boot loader with one under their control. Typically the malware loader persists through the transition to protected mode when the kernel has loaded, and is thus able to subvert the kernel. For example, the [...] "Stoned Bootkit" [...] subverts the system by using a compromised boot loader to intercept encryption keys and passwords. More recently, the Alureon rootkit has successfully subverted the requirement for 64-bit kernel-mode driver signing in Windows 7 by modifying the master boot record. Although not malware {{in the sense of}} doing something the user doesn't want, certain [...] "Vista Loader" [...] or [...] "Windows Loader" [...] software works in a similar way by injecting an ACPI SLIC (System Licensed Internal <b>Code)</b> <b>table</b> in the RAM-cached version of the BIOS during boot, in order to defeat the Windows Vista and Windows 7 activation process. This vector of attack was rendered useless in the (non-server) versions of Windows 8, which use a unique, machine-specific key for each system, that can only be used by that one machine. Many antivirus companies provide free utilities and programs to remove bootkits.|$|E
50|$|The {{data were}} {{obtained}} from Lange's 10th edition and CRC 44th edition unless otherwise noted (see color <b>code</b> <b>table).</b>|$|E
5000|$|A Shannon-Fano tree {{is built}} {{according}} to a specification designed to define an effective <b>code</b> <b>table.</b> The actual algorithm is simple: ...|$|E
5000|$|Encodings of {{punched card}} {{characters}} {{with two or}} more digit punches {{can be found in}} the Character and op <b>codes</b> <b>table.</b>|$|R
40|$|The {{ultimate}} goal of descriptive data mining- in fact of descriptive data analysis in general- is to gain insight {{in the structure of}} the data. While the best model may reflect all important structure of D, this is not true for a good model and algorithms often only return a good model rather than the best. Data sets, however, have many models. Different models of the same data set D highlight different aspects of the structure of D. Hence, it makes sense to consider multiple good models of D. The question is: which good models? In this paper we propose a solution for the case were the data is a transaction database [2] and the models are <b>code</b> <b>tables</b> [8]. More in particular, we introduce a structure function, based on the Minimum Description Length (MDL) principle [6]. This is a partial function from the set of natural numbers to the set of <b>code</b> <b>tables</b> for D; higher natural numbers are mapped to more complex <b>code</b> <b>tables.</b> Computing the structure function exactly is, unfortunately, too complex. Therefore we introduce the heuristic Groei algorithm, which approximates the true structure function. Through experiments we show that Groei produces a set of good <b>code</b> <b>tables</b> that together provide more insight than any of them alone. ...|$|R
40|$|With the {{increase}} of information and data types, high-throughput and flexible memory-based VLC decoder is required for userdefined <b>coding</b> <b>tables</b> to achieve higher compression ratio. In this paper, we present a memory-based VLC decoder which is quite suitable for the applications with user-defined tables. By parallel loading data into memories, the <b>coding</b> <b>tables</b> can be changed with much less time. The codeword-boundary prediction algorithm breaks the recursive dependency of decoding procedures. As a result, the VLC decoder can be realized on multi-processor architecture and hence the decoding throughput is enhanced significantly. Additionally, the INDEX-OFFSET symbols that can recover all data with pure VLC codeword and smaller table size are presented. Simulation {{results show that the}} combination of the proposed VLC decoder and user-defined table can achieve high decompression rate. As a result, it is quite suitable for high data rate applications with user-defined <b>coding</b> <b>tables,</b> such as MPEG- 4...|$|R
5000|$|DCCSCT (directed channel change {{selection}} <b>code</b> <b>table)</b> - {{provides for}} the ability to update states, counties and program genres used in DCCT tables ...|$|E
50|$|Case-insensitive {{operations}} are sometimes said to fold case, {{from the idea}} of folding the character <b>code</b> <b>table</b> so that upper- and lower-case letters coincide.|$|E
5000|$|The <b>code</b> <b>table</b> for ISO 639-3 {{is open to}} changes. In {{order to}} protect {{stability}} of existing usage, the changes permitted are limited to: ...|$|E
50|$|Some form of <b>coding</b> <b>table</b> {{was needed}} because the {{printing}} equipment {{of the time}} provided only 26 letters of the alphabet, a decimal point, plus sign, minus sign, and slash.|$|R
50|$|The {{registration}} authority documents on its Web site instructions {{made in the}} text of the ISO 639-3 standard regarding how the <b>code</b> <b>tables</b> are to be maintained. It also documents the processes used for receiving and processing change requests.|$|R
30|$|Cryptographic security: Gillman and Rivest [22] {{showed that}} {{decoding}} a Huffman coded bitstream without any {{knowledge about the}} Huffman <b>coding</b> <b>tables</b> would be very difficult. However, the basic MHT is vulnerable to known and chosen plaintext attacks as pointed out in [23].|$|R
50|$|The {{correspondence}} between code numbers and graphic characters is represented, with row numbers made into line numbers and cell numbers made into column numbers, on the 94-line 94-column graphic character <b>code</b> <b>table.</b>|$|E
5000|$|The <b>Code</b> <b>Table</b> 7 from MARC-8 allocates ASMO 449 in {{the lower}} part of the 8-bit {{character}} set and allocates the upper part with the Arabic Extension (ISO 11822 / IR 224); ...|$|E
50|$|This {{specification}} {{defines a}} widely used numbering scheme for aircraft parts {{and the appearance}} of printed aircraft maintenance information. The Federal Aviation Administration's JASC (Joint Aircraft System/Component) <b>code</b> <b>table</b> provides a modified version of ATA Spec 100.|$|E
50|$|Supplementary Volume Descriptors {{describe}} the same volume as the Primary Volume Descriptor does, and are normally used for providing additional code page support when the standard <b>code</b> <b>tables</b> are insufficient. The standard specifies that ISO 2022 {{is used for}} managing code sets that are wider than 8 bytes, and that ISO 2375 escape sequences are used to identify each particular code page used. Consequently, ISO 9660 supports international single-byte and multi-byte character sets, provided they fit into {{the framework of the}} referenced standards. However, ISO 9660 does not specify any code pages that are guaranteed to be supported: all use of <b>code</b> <b>tables</b> other than those defined in the standard itself are subject to agreement between the originator and the recipient of the volume.|$|R
50|$|The US Library of Congress is the {{registration}} authority for ISO 639-2 (referred to as ISO 639-2/RA). As registration authority, the LOC receives and reviews proposed changes; {{they also have}} representation on the ISO 639-RA Joint Advisory Committee responsible for maintaining the ISO 639 <b>code</b> <b>tables.</b>|$|R
5000|$|Student Major Information ¡V Nationality <b>Code</b> Conversion <b>Table</b> ...|$|R
50|$|In ISO 646, graphic {{characters}} {{are contained in}} rows 2 through 7 of the <b>code</b> <b>table.</b> However, two {{of the characters in}} these rows, namely the space character SP at row 2 column 0 and the delete character DEL (also called the rubout character) at row 7 column 15, require special mention.|$|E
5000|$|Character codes {{from the}} 7-bit ASCII graphic range (0x20-0x7F), {{being on the}} left side of a {{character}} <b>code</b> <b>table,</b> are referred to as [...] "GL" [...] codes (with [...] "GL" [...] standing for [...] "graphics left") while codes from the [...] "high ASCII" [...] range (0xA0-0xFF), if available, are referred to as the [...] "GR" [...] codes ("graphics right").|$|E
50|$|Case-insensitive {{operations}} {{can be said}} to fold case, {{from the}} idea of folding the character <b>code</b> <b>table</b> so that upper- and lower-case letters coincide. The conversion of letter case in a string is common practice in computer applications, for instance to make case-insensitive comparisons. Many high-level programming languages provide simple methods for case conversion, at least for the ASCII character set.|$|E
50|$|Number plan {{management}} monitors {{changes in}} suppliers' dial codes and adds or removes codes from the company's own <b>code</b> <b>tables</b> to improve costs. Implementing the changes across the company's switches, billing systems, calling card and other IN platforms {{is a significant}} task for the engineering and billing departments.|$|R
50|$|An X server has a {{tremendous}} amount of functionality that must be implemented to support the X core protocol. This includes <b>code</b> <b>tables,</b> glyph rasterization and caching, XLFDs, and the entire core rendering API that draws stippled lines, polygons, wide arcs and many more state-of-the-1980s style graphics primitives.|$|R
5000|$|In {{the program}} <b>code</b> <b>Tables</b> are a native data type. Table access is {{provided}} by a standard DLL interface (known as a [...] "database driver") which separates the program from the chosen data store. This abstraction allows the chosen backend to change with either no, or minimal, changes to the program itself.|$|R
50|$|The <b>code</b> <b>table</b> {{initially}} contains {{codes that}} are one bit {{longer than the}} symbol size {{in order to accommodate}} the two special codes clr and end and codes for strings that are added during the process. When the table is full the code length increases to give space for more strings, up to a maximum code 4095 = FFF(hex). As the decoder builds its table it tracks these increases in code length and it is able to unpack incoming bytes accordingly.|$|E
50|$|The only {{mandatory}} schemas {{for validation}} are the NIEM reference schemas or a correct subset, however the IEPD specification requires that an IEPD include an exchange schema (along with the reference schemas or subsets) {{to be considered}} a complete IEPD. The NIEM schemas may import additional schemas, such as <b>code</b> <b>table</b> schemas, as needed. An optional extension schema may be used to add extended types and properties for components not contained in NIEM, but which are needed for the exchange.|$|E
50|$|The Joint Aircraft System/Component (JASC) Code Tables was a {{modified}} version of the Air Transport Association of America (ATA), Specification 100 code. It was developed by the FAA's, Regulatory Support Division (AFS-600). This <b>code</b> <b>table</b> was constructed by using the new JASC code four digit format, along with an abbreviated code title. The abbreviated titles have been modified in some cases to clarify the intended use of the accompanying code. The final version of the JASC/ATA 100 code was released by the FAA in 1999.|$|E
40|$|We {{propose a}} new variable-sized-block method for VLIW code {{compression}}. Code compression traditionally works on fixed-sized blocks and its efficiency {{is limited by}} the small block size. Branch blocks – instructions between two consecutive possible branch targets – provide larger blocks for code compression. We propose LZW-based algorithms to compress branch blocks. Our approach is fully adaptive and generates <b>coding</b> <b>table</b> on-the-fly during compression and decompression. When encountering a branch target, the <b>coding</b> <b>table</b> is cleared to ensure correctness. Decompression requires only a simple lookup and update when necessary. Our method provides 8 bytes peak decompression bandwidth and 1. 82 bytes in average. Compared to Huffman’s 1 byte and V 2 F’s 13 -bit peak performance, our methods have higher decoding bandwidth and comparable compression ratio. Parallel decompression could also be applied to our methods, which is more suitable for VLIW architecture. 1...|$|R
40|$|This file {{contains}} {{the details of}} the systematic literature review that underlies the article "Empowerment or concealed compliance? A review of literature on mobile ICT solutions for patient empowerment". The article will be published in the proceedings of ACM PETRA 2016. This file contains all the <b>coding</b> <b>tables,</b> and the list of included primary studies...|$|R
50|$|The Global JXDM, Version 3.0.3 Global Justice XML Data Dictionary (Global JXDD) {{types and}} {{properties}} are rendered as XML Schema types, elements, and attributes. Also included {{are the most}} current enumeration type schemas (<b>code</b> <b>tables)</b> and their proxy schemas. Version 3.0.3 is compatible with Versions 3.0.2 and 3.0. See the FAQ on compatibility for an explanation.|$|R
