128|126|Public
2500|$|Cloudflare was {{affected}} by the 2016 leap second. Its DNS resolver implementation calculated a negative number when subtracting two timestamps obtained from the Go programming language's time.Now (...) function, which uses a real-time <b>clock</b> <b>source.</b> [...] This {{could have been avoided}} by using a monotonic <b>clock</b> <b>source,</b> but the Go language does not presently have a built-in API for that.|$|E
2500|$|The goal of clock tree {{synthesis}} (CTS) is {{to minimize}} skew and insertion delay. Clock is not propagated before CTS {{as shown in the}} picture. After CTS hold slack should improve. Clock tree begins at [...]sdc defined <b>clock</b> <b>source</b> and ends at stop pins of flop. There are two types of stop pins known as ignore pins and sync pins. ‘Don’t touch’ circuits and pins in front end (logic synthesis) are treated as ‘ignore’ circuits or pins at back end (physical synthesis). ‘Ignore’ pins are ignored for timing analysis. If clock is divided then separate skew analysis is necessary.|$|E
2500|$|The second {{generation}} of satellites, known as Glonass-M, were developed beginning in 1990 and first launched in 2003. These satellites possess a substantially increased lifetime of seven years and weigh slightly more at [...] They are approximately [...] in diameter and [...] high, with a solar array span of [...] for an electrical power generation capability of 1600 watts at launch. The aft payload structure houses 12 primary antennas for L-band transmissions. Laser corner-cube reflectors are also carried to aid in precise orbit determination and geodetic research. On-board cesium clocks provide the local <b>clock</b> <b>source.</b> Glonass-M includes 31 satellites ranging from satellite index 21 - 92 and with 4 spare active satellites.|$|E
50|$|<b>Clock</b> <b>sources</b> {{used for}} {{synchronization}} in telecommunications networks are rated by quality, commonly called a stratum. Typically, a network element uses {{the highest quality}} stratum available to it, which can be determined by monitoring the synchronization status messages (SSM) of selected <b>clock</b> <b>sources.</b>|$|R
40|$|NTP format {{timestamps}} {{are used}} by several RTP protocols for synchronisation and statistical measurements. This memo specifies Session Description Protocol (SDP) signalling that identifies timestamp reference <b>clock</b> <b>sources</b> and SDP signalling that identifies the media <b>clock</b> <b>sources</b> in a multimedia session. Status of This Memo This is an Internet Standards Track document. This document {{is a product of}} the Internet Engineering Task Force (IETF). It represents the consensus of the IETF community. It has received public review and has been approved for publication by th...|$|R
40|$|This paper {{describes}} a methodology {{used for the}} implementation flow of a system on chip circuit containing a complex clock design. The clock generation module contained 2 <b>clock</b> <b>sources</b> and 11 generated clocks. Many of them have interactive relationship. and the 2 <b>clock</b> <b>sources</b> generate the internal clocks in various modes. It uses the combination of bottom-up strategy and top-down strategy to accomplish the clock generation module implementation first, and then finish the whole chip design. This methodology of the solution makes the whole structure of the design distinct, saves a lot of iterative time, and reduces chip power consumption...|$|R
5000|$|Wide {{operating}} frequency range, using a single-phase <b>clock</b> <b>source.</b>|$|E
5000|$|Cloudflare was {{affected}} by the 2016 leap second. Its DNS resolver implementation calculated a negative number when subtracting two timestamps obtained from the Go programming language's [...] function, which uses a real-time <b>clock</b> <b>source.</b> [...] This {{could have been avoided}} by using a monotonic <b>clock</b> <b>source,</b> but the Go language does not presently have a built-in API for that.|$|E
50|$|The control {{register}} controls {{the number of}} stop bits, the word length, receiver <b>clock</b> <b>source</b> and transmit/receive rate.|$|E
40|$|Abstract—A {{possible}} idea {{is presented}} here for deal-ing with clock skew problems on synchronous digital sys-tems. Nakao et al. recently reported that independent neu-ral oscillators can be synchronized by applying temporal random impulses to the oscillators [1]. We regard neural oscillators as independent <b>clock</b> <b>sources</b> on LSIs; i. e., <b>clock</b> <b>sources</b> are distributed on LSIs, {{and they are}} forced to syn-chronize through the use of random noises. We designed neuron-based clock generators operating at sub-RF region (< 1 GHz) by modifying the original neuron model to a new model that is suitable for CMOS implementation with 0. 25 -µm CMOS parameters. Through circuit simulations, we demonstrate that the clock generators are certainly syn-chronized by pseudo-random noises. 1...|$|R
30|$|The {{reader and}} the tags {{have their own}} {{independent}} <b>clock</b> <b>sources</b> and hence {{they have to be}} treated as asynchronous. Let us denote Δ(k)= δ(k)+Tfu(k), with u(k)integer and 0 ≤ δ(k)< Tf, the clock offset of the k th tag with respect to the reader's clock.|$|R
40|$|Information {{obtained}} on the solid-state lattice dynamics by electron-phonon interaction between lattice phonons and electrons could {{open up to}} learn more about lattice dynamics and to apply it in nanoelectronic devices including software reliability, nano-size capacitors, master <b>clock</b> <b>sources,</b> as well as non-contact temperature probes on nano-electronic and photonicdevices...|$|R
50|$|The Linux kernel {{can also}} use HPET as its <b>clock</b> <b>source.</b> The {{documentation}} of Red Hat MRG version 2 states that TSC is the preferred <b>clock</b> <b>source</b> due to its much lower overhead, but it uses HPET as a fallback. A benchmark in that environment for 10 million event counts found that TSC took about 0.6 seconds, HPET took slightly over 12 seconds, and ACPI Power Management Timer took around 24 seconds.|$|E
50|$|Historical note: {{provision}} for cards that use an internal <b>clock</b> <b>source</b> and a fixed ETU of 1/9&#8239;600 second during ATR existed in ISO/IEC 7816-3:1989, and {{was removed from}} the 1997 edition onwards.|$|E
5000|$|Autonegotiation is a {{requirement}} for using 1000BASE-T according to Section 28D.5 Extensions required for Clause40 (1000BASE-T). [...] At least the <b>clock</b> <b>source</b> has to be negotiated, as one endpoint must be master and the other endpoint must be slave.|$|E
50|$|FlashTalk {{combined}} {{a conventional}} LocalTalk-like dongle with a <b>clocking</b> <b>source</b> and an external power supply. Using these connectors, {{and the associated}} software, TOPS could run at 770 kbit/s. This {{was not only a}} fairly dramatic improvement over LocalTalk, but also relatively speedy overall in an era when 1 Mbit/s networks were still common.|$|R
50|$|It {{can also}} {{transmit}} MIDI Machine Control and MIDI beat clock, and slave to external beat <b>clock</b> <b>sources</b> such as other Roland grooveboxes. It {{can be used}} as a sequencer to drive external synthesizer units. It is the successor to the Roland MC-303 and Roland MC-505. The predecessor to the Roland MC-909 and the Roland MC-808.|$|R
50|$|This {{symmetric}} and {{end to end}} ECMT behavior gives IEEE 802.1aq {{a highly}} predictable behavior and off line engineering tools can accurately model exact data flows. The behavior is also advantageous to networks where one way delay measurements are important. This is because the one way delay can be accurately computed as 1/2 the round trip delay. Such computations are used by time distribution protocols such as IEEE 1588 for frequency and time of day synchronization as required between precision <b>clock</b> <b>sources</b> and wireless base stations.|$|R
50|$|Different clock domains have clocks {{which have}} a {{different}} frequency, a different phase (due to either differing clock latency or a different <b>clock</b> <b>source),</b> or both. Either way {{the relationship between the}} clock edges in the two domains cannot be relied upon.|$|E
5000|$|LPC111xL {{consists}} of LPC111x features, plus low power profile in active and sleep modes, internal pull-up resistors to pull-up pins to full VDD level, programmable pseudo open-drain mode for GPIO pins, upgraded to windowed watch dog timer with <b>clock</b> <b>source</b> lock capability.|$|E
5000|$|Agnus's timings are {{measured}} in [...] "color clocks" [...] of 280 ns. This {{is equivalent to}} two low resolution (140 ns) pixels or four high resolution (70 ns) pixels. Like Denise, these timings were designed for display on household TVs, and can be synchronized to an external <b>clock</b> <b>source.</b>|$|E
40|$|Abstract This paper {{shows how}} {{effectiveness}} of sidechannel and fault attacks {{can be improved}} for devices running from internal <b>clock</b> <b>sources.</b> Due to frequency instability of internally clocked chips, attacking them was always a great challenge. A significant improvement was achieved by using a frequency injection locking technique via the power supply line of a chip. As a result, the analysis of a semiconductor chip can be accomplished with less effort and in shorter time. Successful synchronization was demonstrated on a secure microcontroller and a secure FPGA. This paper presents research into limits for synchronization and discusses possible countermeasures against frequency injection attacks...|$|R
40|$|AbstractWe {{argue that}} a {{hexagonal}} grid with simple intermediate nodes is a robust alternative to buffered clock trees typically used for clock distribution in VLSI circuits, multi-core processors, and other applications that require accurate synchronization: Our HEX grid is Byzantine fault-tolerant, self-stabilizing, and seamlessly integrates with multiple synchronized <b>clock</b> <b>sources,</b> as used in multi-synchronous Globally Synchronous Locally Asynchronous (GALS) architectures. Moreover, HEX guarantees a small clock skew between neighbors even for wire delays that are only moderately balanced. We provide both a theoretical analysis of the worst-case skew and simulation results that demonstrate a very small average skew...|$|R
50|$|Decoding of N {{elementary}} streams is synchronized {{by adjusting}} the decoding of streams to a common master time base rather than {{by adjusting the}} decoding of one stream to match that of another. The master time base {{may be one of}} the N decoders' <b>clocks,</b> the data <b>source’s</b> <b>clock,</b> or it may be some external clock.|$|R
50|$|The STK200 {{starter kit}} and {{development}} system has a DIP socket that can host an AVR chip in a 40, 20, or 8-pin package. The board has a 4 MHz <b>clock</b> <b>source,</b> 8 light-emitting diode(LED)s, 8 input buttons, an RS-232 port, a socket for a 32k SRAM and numerous general I/O. The chip can be programmed with a dongle {{connected to the}} parallel port.|$|E
50|$|In {{addition}} to clock skew due to static {{differences in the}} clock latency from the <b>clock</b> <b>source</b> to each clocked register, no clock signal is perfectly periodic, so that the clock period or clock cycle time varies even at a single component, and this variation is known as clock Jitter. At a particular point in a clock distribution network, jitter is the only contributor to the clock timing uncertainty.|$|E
50|$|The {{original}} Super Game Boy {{is known}} {{to play the game}} program and its audio 2.4% faster than other Game Boy hardware. This is due {{to the use of the}} Super NES's clock speed divided by 5, which ends up being 4.295 MHz instead of 4.194 MHz. The timing issue can be rectified by adding an appropriate crystal oscillator to the Super Game Boy and disconnecting the Super NES's <b>clock</b> <b>source.</b>|$|E
40|$|We {{consider}} the most general case of <b>source</b> <b>clock</b> frequency recovery (SCFR) in packet networks, i. e., asynchronous SCFR through aperiodic packet streams, {{where there is}} neither a common reference clock nor any relation between packet generation intervals and a <b>source</b> <b>clock</b> frequency. We formulate the problem of asynchronous SCFR with timestamps as a linear case of regression through the origin (RTO) and propose two schemes, one based on recursive least squares (RLS) method and the other based on simple heuristics of cumulative ratio of interarrival and interdeparture times, which provide better estimates of the <b>source</b> <b>clock</b> frequency with faster convergence than conventional phase-locked loop (PLL) -based schemes...|$|R
40|$|The {{standard}} method of measuring one-way delay and delay {{variance in the}} Internet uses synchronous techniques which require <b>clock</b> synchronization between <b>source</b> and destination. In this paper, we propose an asynchronous method of measuring one way delay and delay variance in the Internet, which does not require <b>clock</b> synchronization between <b>source</b> and destination. The proposed asynchronous method requires minor additional functionality in the Internet routers...|$|R
40|$|This article {{describes}} an inexpensive way of clock generation for FPGA-based circuit cores, which reduces {{the number of}} external <b>clock</b> <b>sources</b> and eases synchronization problems. We introduce {{a modified version of}} the BRESENHAM line drawing algorithm and use it outside its original application domain for the rational division of clocks. An optimized hardware design for BRESENHAM-based clock division is presented and the quality of its output is evaluated. The optimal initialization conditions in terms of phase shift and jitter are identified and formally proven. Finally, the complexity characteristics of a generic synthesizable VHDL design based on this algorithm are examined and verified by synthesis examples. Special attention is paid to implementation results in conjunction with different FPGA families...|$|R
50|$|Time {{deviation}} (TDEV), {{also known}} as , is the time stability of phase x versus observation interval τ of the measured <b>clock</b> <b>source.</b> The time deviation thus forms a standard deviation type of measurement to indicate the time instability of the signal source. This is a scaled variant of frequency stability of Allan deviation. It is commonly defined from the modified Allan deviation, but other estimators may be used.|$|E
50|$|DMS Bus {{is used to}} {{interconnect}} the DMS Core, the switching network and the Input/Output controller (IOC) and manage message flows between these units and consists of redundant Message Switches. The Message Switches of the DMS Bus operate in a load-sharing mode {{and one of them}} provides the main <b>clock</b> <b>source</b> for the DMS-100 system while the others are synchronized to it. Messages between all SuperNode units are carried by optical DS512 links.|$|E
50|$|It is a {{scaled-down}} {{version of}} the Roland MC-505. It has the same tone generator, but a much smaller control surface. It does, however, have several features that make it an ideal <b>clock</b> <b>source</b> for musicians wanting to do beatmatching. These include a large, very granular tempo slider similar to the sliders found on a modern phonograph and 'push' and 'hold' buttons that permit temporarily slowing down or speeding up the beat clock.|$|E
40|$|This paper {{describes}} {{the experiences of}} the author using C++ templates to build the Generic Date Time Library (GDTL). While there are many date-time representations available for C++, the libraries are often unsuitable for domains that need high precision, long epochs, infinity, specialized calendars, or custom <b>clock</b> <b>sources.</b> The GDTL is an attempt to use generic and template programming techniques to provide a single library that meets all these demands, as well as more typical date-time programming. To build a single library, templates are used in several roles: allow user replacement of underlying date and time representations, to factor out calendar interfaces, building range and composite types, and providing interface constraint enforcement...|$|R
40|$|The ADF 4001 clock {{generator}} {{can be used}} to implement <b>clock</b> <b>sources</b> for PLLs that require very low noise, stable reference signals. It consists of a low noise digital PFD (phase frequency detector), a precision charge pump, a programmable reference divider, and a programmable 13 -bit N counter. In addition, the 14 -bit reference counter (R counter) allows selectable REFIN frequencies at the PFD input. A complete PLL (phase-locked loop) can be implemented if the synthesizer is used with an external loop filter and VCO (voltage controlled oscillator) or VCXO (voltage controlled crystal oscillator). The N minimum value of 1 allows flexibility in clock generation. AV DD DV DD V P CPGND R SE...|$|R
40|$|The NBC 12430 and NBC 12430 A are general purpose, PLL based {{synthesized}} <b>clock</b> <b>sources.</b> The VCO {{will operate}} over a frequency range of 400 MHz to 800 MHz. The VCO frequency {{is sent to}} the N−output divider, where it can be configured to provide division ratios of 1, 2, 4, or 8. The VCO and output frequency can be programmed using the parallel or serial interfaces to the configuration logic. Output frequency steps of 250 kHz, 500 kHz, 1. 0 MHz, 2. 0 MHz can be achieved using a 16 MHz crystal, depending on the output dividers settings. The PLL loop filter is fully integrated and does not require any external components...|$|R
