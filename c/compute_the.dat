10000|10000|Public
5|$|Choose a {{canonical}} {{labeling of}} the digits by assigning values for B1 (see grid), and <b>compute</b> <b>the</b> {{rest of the}} Band1 permutations relative B1.|$|E
5|$|In {{order to}} <b>compute</b> <b>the</b> curve-shortening flow efficiently, both a {{continuous}} curve and the continuous {{evolution of the}} curve {{need to be replaced}} by a discrete approximation.|$|E
5|$|The first {{formulation}} of a quantum theory describing radiation and matter interaction {{is attributed to}} British scientist Paul Dirac, who (during the 1920s) was able to <b>compute</b> <b>the</b> coefficient of spontaneous emission of an atom.|$|E
3000|$|Algorithm 3 <b>computes</b> <b>the</b> two {{required}} quantities b(i) and T_b(i) for throughput computation. It first <b>computes</b> <b>the</b> deactivation rate μ [...]...|$|R
5000|$|Therefore, solving <b>the</b> system amounts <b>computing</b> <b>the</b> {{roots of}} , {{and for each}} root [...] <b>computing</b> <b>the</b> common root(s) of [...] and ...|$|R
30|$|There is {{no clear}} {{advantage}} of <b>computing</b> <b>the</b> cost over a future time window, compared with <b>computing</b> <b>the</b> cost only at the next scheduling time.|$|R
5|$|The {{majority}} {{problem is}} the problem of constructing a cellular automaton that, when run on any finite set of cells, can <b>compute</b> <b>the</b> value held by a majority of its cells.|$|E
5|$|From {{the point}} of view of sheaf cohomology, the Mayer–Vietoris {{sequence}} is related to Čech cohomology. Specifically, it arises from the degeneration of the spectral sequence that relates Čech cohomology to sheaf cohomology (sometimes called the Mayer–Vietoris spectral sequence) in the case where the open cover used to <b>compute</b> <b>the</b> Čech cohomology consists of two open sets. This spectral sequence exists in arbitrary topoi.|$|E
5|$|The {{frequency}} accuracy {{relative to the}} clock frequency is limited only by the precision of the arithmetic used to <b>compute</b> <b>the</b> phase. NCOs are phase- and frequency-agile, and can be trivially modified to produce a phase-modulated or frequency-modulated output by summation at the appropriate node, or provide quadrature outputs {{as shown in the}} figure.|$|E
3000|$|..., <b>computing</b> <b>the</b> {{solutions}} on {{the whole}} hyperbolic disk has the same complexity as <b>computing</b> <b>the</b> solutions of usual Euclidean neural field equations defined on [...]...|$|R
40|$|Let T be a tree, A its {{adjacency}} matrix, and a scalar. We {{describe a}} linear-time algorithm {{for reducing the}} matrix In + A. Applications include <b>computing</b> <b>the</b> rank of A, finding a maximum matching in T, <b>computing</b> <b>the</b> rank and determinant of the associated neighborhood matrix, and <b>computing</b> <b>the</b> characteristic polynomial of A...|$|R
3000|$|... can be {{transformed}} into <b>computing</b> <b>the</b> inversion of matrix L. Continue to utilize the Sherman-Morrison lemma [12] to iterate <b>the</b> process of <b>computing</b> <b>the</b> L [...]...|$|R
25|$|The {{coefficients}} {{that bound}} the inequalities in the primal space {{are used to}} <b>compute</b> <b>the</b> objective in the dual space, input quantities in this example. The coefficients used to <b>compute</b> <b>the</b> objective in the primal space bound the inequalities in the dual space, output unit prices in this example.|$|E
25|$|We now <b>compute</b> <b>the</b> {{derivatives}} of this {{log likelihood}} as follows.|$|E
25|$|The {{function}} f {{can be used}} to <b>compute</b> <b>the</b> predicted {{state from}} the previous estimate and similarly the function h {{can be used to}} <b>compute</b> <b>the</b> predicted measurement from the predicted state. However, f and h cannot be applied to the covariance directly. Instead a matrix of partial derivatives (the Jacobian) is computed.|$|E
5000|$|The {{following}} formula reduces <b>the</b> {{problem of}} <b>computing</b> <b>the</b> least common multiple to <b>the</b> problem of <b>computing</b> <b>the</b> {{greatest common divisor}} (GCD), {{also known as the}} greatest common factor: ...|$|R
40|$|In {{this paper}} we study the {{computational}} complexity of <b>computing</b> <b>the</b> noncommutative determinant. We first consider the arithmetic circuit complexity of <b>computing</b> <b>the</b> noncommutative determinant polynomial. Then, more generally, we also examine <b>the</b> complexity of <b>computing</b> <b>the</b> determinant (as a function) over noncommutative domains. Our hardness results are summarized below: 1. We show {{that if the}} noncommutative determinant polynomial has small noncommutative arithmetic circuits then so does the noncommutative permanent. Consequently, the commutative permanent polynomial has small commutative arithmetic circuits. 2. For any field F we show that <b>computing</b> <b>the</b> n X n permanent over F is polynomial-time reducible to <b>computing</b> <b>the</b> 2 n X 2 n (noncommutative) determinant whose entries are O(n^ 2) X O(n^ 2) matrices over the field F. 3. We also derive as a consequence that <b>computing</b> <b>the</b> n X n permanent over nonnegative rationals is polynomial-time reducible to <b>computing</b> <b>the</b> noncommutative determinant over Clifford algebras of n^{O(1) } dimension. Our techniques are elementary and use primarily {{the notion of the}} Hadamard Product of noncommutative polynomials. Comment: 11 pages, v 2 : 18 pages, some typos removed, new section added on Clifford algebras, and some reorganizatio...|$|R
25|$|Integrals can be {{used for}} <b>computing</b> <b>the</b> area of a {{two-dimensional}} region that has a curved boundary, as well as <b>computing</b> <b>the</b> volume of a three-dimensional object that has a curved boundary.|$|R
25|$|For {{each pair}} of {{vertices}} (s,t), <b>compute</b> <b>the</b> shortest paths between them.|$|E
25|$|Delta method – to <b>compute</b> <b>the</b> limit {{distribution}} of {{a function of}} a random variable.|$|E
25|$|This {{method is}} also very {{efficient}} to <b>compute</b> <b>the</b> multiplicative inverse of a power series.|$|E
50|$|However, in general, the theorem {{is only an}} {{existence}} theorem {{and does}} not provide any way for <b>computing</b> <b>the</b> solution, unless one has an algorithm for <b>computing</b> <b>the</b> coefficients of Bézout's identity.|$|R
50|$|Integrals can be {{used for}} <b>computing</b> <b>the</b> area of a {{two-dimensional}} region that has a curved boundary, as well as <b>computing</b> <b>the</b> volume of a three-dimensional object that has a curved boundary.|$|R
40|$|An {{attempt was}} made in this study, to develop a Knowledge Based System for i) <b>computing</b> <b>the</b> depth (or the third dimension) of 3 D objects, ii) <b>computing</b> <b>the</b> inclinations of 2 D planes with {{predefined}} reference planes and iii) <b>computing</b> <b>the</b> inclinations of a straight line with predefined reference planes. The development of the proposed Knowledge Based System {{was based on the}} Principle of Color Gradation...|$|R
25|$|A scalar {{projection}} {{can be used}} as a {{scale factor}} to <b>compute</b> <b>the</b> corresponding vector projection.|$|E
25|$|There are online tools {{available}} to <b>compute</b> <b>the</b> outcome of whole campaigns (i.e. the attacking of several territories in a row).|$|E
25|$|Exactly {{the same}} method {{can be used}} to <b>compute</b> <b>the</b> {{distribution}} of other functions of multiple independent random variables.|$|E
50|$|LTSA {{is based}} on the intuition that when a {{manifold}} is correctly unfolded, all of the tangent hyperplanes to the manifold will become aligned. It begins by <b>computing</b> <b>the</b> k-nearest neighbors of every point. It <b>computes</b> <b>the</b> tangent space at every point by <b>computing</b> <b>the</b> d-first principal components in each local neighborhood. It then optimizes to find an embedding that aligns the tangent spaces.|$|R
40|$|Agrawal-Vinay [AV 08], Koiran [Koi 12] and Tavenas [Tav 13] have {{recently}} shown that an exp(ω(n log n)) lower bound for depth four homogeneous circuits <b>computing</b> <b>the</b> permanent with bottom layer of × gates having fanin bounded by √n translates to super-polynomial lower bound for general arithmetic circuits <b>computing</b> <b>the</b> permanent. Motivated by this, we examine <b>the</b> complexity of <b>computing</b> <b>the</b> permanent and determinant via such homogeneous depth four circuits with bounded bottom fanin. We show here that any homogeneous depth four arithmetic circuit with bottom fanin bounded by n <b>computing</b> <b>the</b> permanent (or the determinant) must be of size exp(Ω(n)) ...|$|R
40|$|We {{identify}} {{a new and}} non-trivial restriction called bijectivity on Boolean circuits and prove an exponential size lower bound for <b>computing</b> <b>the</b> Boolean permanent matching function in this model. As consequences of this lower bound, we show exponential size lower bounds for: (a) <b>computing</b> <b>the</b> Boolean permanent using monotone multilinear circuits; (b) <b>computing</b> <b>the</b> 0 - 1 permanent function using monotone arithmetic circuits; and (c) <b>computing</b> <b>the</b> lexicographically first bipartite perfect matching function using circuits over (min, concat). The lower bound arguments for the Boolean permanent function are adapted to prove an exponential lower bound for <b>computing</b> <b>the</b> Hamiltonian cycle function using bijective circuits. We {{identify a}} class of monotone functions such that if their counting version is #P-hard, then there are no polynomial size bijective circuits for such functions unless PH collapses...|$|R
25|$|To <b>compute</b> <b>the</b> minor M2,3 and the {{cofactor}} C2,3, we {{find the}} determinant of the above matrix with row 2 and column 3 removed.|$|E
25|$|There are {{additional}} forms, listed below. Together with the linearity of the integral, this formula {{allows one to}} <b>compute</b> <b>the</b> integrals of all polynomials.|$|E
25|$|Therefore, the {{dielectric}} constant (and the conductivity) has contributions from both terms. This {{approach can be}} generalized to <b>compute</b> <b>the</b> frequency dependent dielectric function.|$|E
40|$|We {{propose a}} method and {{algorithm}} for <b>computing</b> <b>the</b> weighted Moore-Penrose inverse of one-variable rational matrices. Continuing this idea, we develop an algorithm for <b>computing</b> <b>the</b> weighted Moore-Penrose inverse of one-variable polynomial matrix. These methods and algorithms are generalizations of <b>the</b> method for <b>computing</b> <b>the</b> weighted Moore-Penrose inverse for constant matrices, originated in Wang and Chen [G. R. Wang, Y. L. Chen, A recursive algorithm for <b>computing</b> <b>the</b> weighted Moore-Penrose inverse AMN, J. Comput. Math. 4 (1986) 74 - 85], and the partitioning method for <b>computing</b> <b>the</b> Moore-Penrose inverse of rational and polynomial matrices introduced in Stanimirovic and Tasic [P. S. Stanimirovic, M. B. Tasic, Partitioning method for rational and polynomial matrices, Appl. Math. Comput. 155 (2004) 137 - 163]. Algorithms are {{implemented in the}} symbolic computational package MATHEMATICA...|$|R
3000|$|MA operations. This {{complexity}} is {{the same}} complexity associated with <b>computing</b> <b>the</b> feed-forward filter coefficients of DFE-I scenario and <b>the</b> linear equalizer. <b>Computing</b> <b>the</b> feedback filter coefficients requires matrix inversion of size [...]...|$|R
40|$|AbstractLet G be a unicyclic graph with n {{vertices}} and {{the unique}} cycle C, A(G) and N(G) its adjacency matrix and neighborhood matrix, respectively, and α a scalar. We obtain an algorithm for <b>computing</b> <b>the</b> determinant of α In+A(G) which uses O(n) space and O(n) arithmetic operations for δ⩽n, where δ=min{dG(x) : x∈V(C) }. Applications include <b>computing</b> <b>the</b> determinants of A(G) and N(G), and <b>computing</b> <b>the</b> {{characteristic polynomial of}} A(G) ...|$|R
