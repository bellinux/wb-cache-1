3|21|Public
50|$|At {{the same}} time, he became {{involved}} {{in a number of}} writing projects, including the monthly Animata column for InterActivity magazine and books on 3D graphics. In the mid-nineties, he was attracted to the world of Japanese anime and manga, and amassed a large collection of books and DVDs. He even studied the language, and eventually started to work on adaptations of Japanese novels, manga and anime. While still at Mondo, he worked with anime legend Toshihiro Kawamoto of Cowboy Bebop fame on some character designs for an unreleased internet minishow. He also worked for Super Techno Arts (publisher of the JoJo's Bizarre Adventure anime series). He currently works for Region Free (Japanese artist referral and <b>contract</b> <b>translation</b> service) and does graphics and website work through his Binary Arts company.|$|E
40|$|Grammatical {{peculiarities of}} <b>{{contract}}</b> <b>translation</b> are characterised by high usage of verbals. The text of contract is presented mostly with infinitive and participial constructions. Among infinitive constructions those {{ones with the}} Simple / Indefinite and Perfect Infinitives are singled out as adjuncts to active and passive (only in newspapers and contracts) verbs and the Simple Infinitives as complex adjuncts to active verbs. З лінгвістичної точки зору контракт є типом документу оскільки будь-яка домовленість надає документально фіксовану інформацію. У статті представлені граматичні особливості перекладу контрактів як типу тексту...|$|E
40|$|A proof-transforming {{compiler}} is a compiler {{that takes}} a source proof as input and produces a bytecode proof. This project consists {{of the development of}} a proof-transforming compiler for Eiffel contracts. The compiler takes a source proof with contracts and produces a bytecode proof and its CIL contract. The proof translation will be done using the compiler implemented in [4]. Scope of the work The work consists of the implementation of a <b>contract</b> <b>translation.</b> The input of the compiler is a source proof and contracts written in the XML format. In a first step, a parser for the source proof will be implemented. The parser will produce an AST. The design of the XML schema and the AST is presented in [4]. They will be extended to handle contracts. In a second step, contracts will be parsed generating an AST. The AST will be designed to model the complete contract [3]. The formal grammar of the considered contract language is the following: datatype EiffelContract = Requires_ensures boolExpr datatype boolExpr = Const bool | Neg boolExpr | And boolExpr boolExpr | Or boolExpr boolExpr | AndThen boolExpr boolExpr | OrElse boolExpr boolExp...|$|E
5000|$|Also, in {{the early}} days of computing, a number of terms for the {{practitioners}} of the field of computing were suggested in the Communications of the ACM—turingineer, turologist, flow-charts-man, applied meta-mathematician, and applied epistemologist. Three months later in the same journal, comptologist was suggested, followed next year by hypologist. The term computics has also been suggested. In Europe, terms derived from <b>contracted</b> <b>translations</b> of the expression [...] "automatic information" [...] (e.g. [...] "informazione automatica" [...] in Italian) or [...] "information and mathematics" [...] are often used, e.g. informatique (French), Informatik (German), informatica (Italian, Dutch), informática (Spanish, Portuguese), informatika (Slavic languages and Hungarian) or pliroforiki (πληροφορική, which means informatics) in Greek. Similar words have also been adopted in the UK (as in the School of Informatics of the University of Edinburgh)."In the U.S., however, informatics is linked with applied computing, or computing in the context of another domain." ...|$|R
40|$|In {{this paper}} we {{construct}} directionally sensitive functions {{that can be}} viewed as directional time-frequency representations. We call such a sequence a rotational uniform covering frame and by studying rotations of the frame, we derive the rotational Fourier scattering transform and the truncated rotational Fourier scattering transform. We prove that both operators are rotationally invariant, are bounded above and below, are non-expansive, and <b>contract</b> small <b>translations</b> and additive diffeomorphisms. We also construct finite uniform covering frames...|$|R
5000|$|Robert Cormier {{was born}} in the Poitou region of France. About 1634, he married Marie Peraude (Perreau) at La Rochelle. They had two sons, Thomas born in 1636 and Jean in 1643. Like most {{migrants}} from France to New France and Acadia, Robert arrived as part of an employment contract for a term of three years. These contracts were different in nature from the indentured servant contracts used in the English Colonies. Robert's <b>contract</b> in <b>translation</b> reads as follows: ...|$|R
50|$|Webber's new-adult fiction title Easy was {{released}} on eBook and paperback in June 2012 then republished through Penguin/Razorbill UK Publishing and Penguin/Berkley US Publishing in September 2012 and October 2012, respectively. As of today, Easy has a total of 24 separate foreign <b>translation</b> <b>contracts.</b>|$|R
50|$|The service privatised their {{language}} interpretation service in 2011, giving a <b>contract</b> to Capita <b>Translation</b> and Interpreting. Figures released to The Guardian in 2016 show that over 2,600 court cases were adjourned {{because of a}} failure to provide an adequate interpreter in the previous five years.|$|R
40|$|A <b>translation</b> <b>contract</b> is {{a binary}} {{predicate}} corrTransl(S,T) for source programs S and target programs T. It precisely specifies when T {{is considered to}} be a correct translation of S. A certifying compiler generates [...] in addittion to the target T [...] a proof for corrTransl(S,T). Certifying compilers are important for the development of safety critical systems to establish the behavioral equivalence of high-level programs with their compiled assembler code. In this paper, we report on a certifying compiler, its proof techniques, and the underlying formal framework developed within the proof assistent Isabelle/HOL. The compiler uses a tiny C-like language as input, has an optimization phase, and generates MIPS code. The underlying <b>translation</b> <b>contract</b> is based on a trace semantics. We investigate design alternatives and discuss our experiences...|$|R
40|$|This {{research}} analyses {{the translation}} of sale of goods' contracts from the common law systems of the United States, England and Wales into the civil law system of Colombia. It explores the subjects derived from legal translation, comparative law and legal harmonization that influence the <b>translation</b> of these <b>contracts.</b> This is done by keeping a binocular vision that allows translators to compare contract law concepts from both legal families. A timeline vision is also developed to help translators understand the liability-contract relationship, which is crucial to perceive the contract as an entity immersed in commercial translations and law practice. One the links between comparative law and legal translation are firmly established, the analysis {{as a whole is}} illustrated with the <b>translation</b> of two <b>contracts.</b> Such <b>translation</b> applies a comprehensive method (based on the works of Prieto Ramos and the functionalist school) that asserts the interdisciplinary nature of legal translation...|$|R
40|$|This final project {{report was}} written {{based on the}} job {{training}} in UPT P 2 Bof Sebelas Maret University, during February 17 th, 2015 – April 13 th, 2015. The objectives of this final project are to describe the translation activity in UPT P 2 B of Sebelas Maret University, to explain the process of translating English-Indonesian language, and to find the problems and propose the solutions that the writer encountered during the job training. In translation activity, the first step in translating document in UPT P 2 B of Sebelas Maret University is conducting translation brief and giving <b>translation</b> <b>contract</b> to the client. After doing the translation brief, both the translatorand the client sign a stamped <b>translation</b> <b>contract.</b> After signing the <b>translation</b> <b>contract,</b> the client pays the down payment to the cashier. On the predetermined day, the client comes to take the translation. The client will be given 2 copies of the translation, the hardcopy, and the softcopy. During the writer’s job training at UPT P 2 Bof Sebelas Maret University, the writer used several tools to make translation activity easier and more effective. The tools used by the writer are laptop, internet, and dictionary. In the translation process, the writer applied 3 steps when translating documents from English to Indonesian. The steps were: source language text analysis, transfer, and restructuring. Source language text analysis is reading the whole text which would be translated. Reading the whole textis intended to comprehend the content of the text. Transfer is the process of translating the text. Restructuring is the step of restructuring and rewriting of target language text. There are 3 problems in translating document. The first one is lack of experience. The solution was asking the job training supervisor to help the writer solve the problem. The second problem is lack of knowledge about translation theory. The solution was trying to read some articleson internet and read some books related to the theory of translation during the job training. And the third one is UPT P 2 B’s internet connection problem and the solution was using the writer’s mobile phone to connect to internet...|$|R
40|$|Most {{software}} {{systems are}} described in high-level model or programming languages. Their runtime behavior, however, {{is determined by the}} compiled code. For uncritical software, it may be sufficient to test the runtime behavior of the code. For safety-critical software, there is an additional aggravating factor resulting {{from the fact that the}} code must satisfy the formal specification which reflects the safety policy of the software consumer and that the software producer is obliged to demonstrate that the code is correct with respect to the specification using formal verification techniques. In this scenario, it is of great importance that static analyses and formal methods can be applied on the source code level, because this level is more abstract and better suited for such techniques. However, the results of the analyses and the verification can only be carried over to the machine code level, if we can establish the correctness of the translation. Thus, compilation is a crucial step in the development of software systems and formally verified translation correctness is essential to close the formalization chain from high-level formal methods to the machine-code level. In this thesis, I propose an approach to certifying compilers which achieves the aim of closing the formalization chain from high-level formal methods to the machine-code level by applying techniques from mathematical logic and programming language semantics. I propose an approach called foundational translation validation (FTV) in which the software producer implements an FTV system comprising a compiler and a specification and verification framework (SVF) which is implemented in higher-order logic (HOL). The most important part of the SVF is an explicit <b>translation</b> <b>contract</b> which comprises the formalizations of the source and the target languages of the compiler and the formalization of a binary translation correctness predicate corrTrans(S,T) for source programs S and target programs T. The formalizations of the languages are realized as deep embeddings in HOL. This enables one to declare the whole program in a formalized language as a HOL constant. The predicate formally specifies when T is considered to be a correct translation of S. Its definition is explicitly based on the program semantics definitions provided by the <b>translation</b> <b>contract.</b> Subsequent to the translation, the compiler translates the source and the target programs into their syntactic representations as HOL constants, S and T, and generates a proof of corrTrans(S,T). We call a compiler which follows the FTV approach a proof generating compiler. Our approach borrows the idea of representing programs in correctness proofs as logic constants from the foundational proof-carrying code (FPCC) approach. Novel features that distinquish our approach from further approaches to certifying compilers, such as proof-carrying code (PCC) and translation validation (TV) are the following: Firstly, the presence of an explicit <b>translation</b> <b>contract</b> formalized in HOL: The approaches PCC and TV do not formalize a <b>translation</b> <b>contract</b> explicitly. Instead of this, they incorporate operational semantics and translation correctness criterion in translation validation tools on the programming language level. Secondly, representation of programs in correctness proofs as logic constants: The approaches PCC and the TV translate programs into their representations as semantic abstractions that serve as inputs for translation validation tools. Thirdly, certification of program transformation chains: Unlike the TV approach, which certifies single program transformations, the FTV approach achieves the aim of certifying whole chains of program transformations. This is possible due to the fact that the <b>translation</b> <b>contract</b> provides, for all programming languages involved in the program transformation chain, definitions of program semantics functions which map programs to mathematical objects that are elements of a set with an (at least) partial order "<=". Then, the proof makes use of the fact that the relation "<=" is transitive. In this thesis, the feasibility of the FTV approach is exemplified by the implementation of an FTV system. The system comprises a compiler front-end that certifies its optimization phase and an accompanying SVF that is implemented in the theorem prover Isabelle/HOL. The compiler front-end translates programs in a small C-like programming language, performs three optimizations: constant folding, dead assignment elimination, and loop invariant hoisting, and generates translation certificates in the form of Isabelle/HOL theories. The main focus of the thesis is on the description of the SVF and its translation verification techniques. Ein formales Rahmenwerk für Beweis generierende Optimiere...|$|R
40|$|International audienceEthereum is a {{framework}} for cryptocurrencies which uses blockchain technology to provide an open global computing platform, called the Ethereum Virtual Machine (EVM). EVM executes bytecode on a simple stack machine. Programmers do not usually write EVM code; instead, they can program in a JavaScript-like language, called Solidity, that compiles to bytecode. Since {{the main purpose of}} EVM is to execute smart contracts that manage and transfer digital assets (called Ether), security is of paramount importance. However, writing secure smart contracts can be extremely difficult: due to the openness of Ethereum, both programs and pseudonymous users can call into the public methods of other programs, leading to potentially dangerous compositions of trusted and untrusted code. This risk was recently illustrated by an attack on TheDAO contract that exploited subtle details of the EVM semantics to transfer roughly $ 50 M worth of Ether into the control of an attacker. In this paper, we outline {{a framework}} to analyze and verify both the runtime safety and the functional correctness of Ethereum <b>contracts</b> by <b>translation</b> to F*, a functional programming language aimed at program verification...|$|R
50|$|In 1993, Duke University Press {{published}} <b>Contracting</b> Colonialism: <b>Translation</b> and Christian Conversion in Tagalog Society Under Early Spanish Rule, {{in which}} Rafael examined {{the role of}} language and translation in the religious conversion of Tagalogs to Catholicism during the early period of Spanish rule of the Philippines. In 1995, Temple University Press published a collection he edited entitled Discrepant Histories: Translocal Essays on Filipino Cultures that studied {{a number of issues}} {{in the formation of the}} Philippine nation-state and translocal Filipino cultures. In 1999, Cornell University Press published Figures of Criminality in Indonesia, the Philippines, and Colonial Vietnam, a collection of essays on the relationships between criminality and colonial state formation. In 2000, Duke University Press published his White Love and Other Events in Filipino History, a challenging of traditional, epic narratives of Filipino history and especially the emergence of revolutionary nationalism. His most recent work is The Promise of the Foreign: Nationalism and the Technics of Translation in the Spanish Philippines, also published by Duke University Press, in 2005. Its main argument is that translation was crucial to the emergence of Filipino nationalism, a mechanism from which was issued the promise of nationhood.|$|R
40|$|Software {{support for}} the {{generation}} of good Braille has historically been hampered by fragmented and small markets. Some languages have good commercial support, others are lacking. Fortunately Liblouis, an open source tool for complete Braille transcription services, is emerging as a universal solution. Liblouis provides Braille translation for literary and computer Braille, offers support for <b>contracted</b> and uncontracted <b>translation</b> for many languages and includes support for Braille mathematics codes such as Nemeth. Liblouis also provides Braille formatting, which can handle many document formats including DTBook XML. Both the translation and the formatting can easily be adapted to new languages and document formats. This paper shows how Liblouis will be used at the Swiss Library for the Blind and Visually Impaired to integrate Braille generation into a production workflow based around DTBook XML...|$|R
40|$|Correctness of {{compilation}} {{is important}} for the reliability of software. New techniques to guarantee correctness do not verify the compiler itself, but check for each compiled program whether it is correctly translated. Following these ideas, we developed an approach in which checking is realized as proof checking within a formal specification and verification framework. Based on formal specifications of source and target language and a translation predicate, compilers produce, in addition to the target program c, a proof that c is correct w. r. t. its source program. This proof can be checked independently of the compiler by the framework. Thus, it {{can be used as a}} translation certificate. The paper describes the overall approach and applies it to a simple translation scenario. Specification and verification is done within the theorem prover Isabelle/HOL. To show the flexibility of the approach, we present two different proof techniques for translation correctness. Key words: compilation correctness, translation validation, formal <b>translation</b> <b>contract,</b> automatic proof generation, proof checking...|$|R
40|$|With {{its origins}} in German culture, the term world {{literature}} always implicitly contains translation and does so in a double sense. Firstly, the term as such is a translation from German, and secondly, bigger portion of {{the literature of the}} world reaches the readers through translations. In this sense there is no separate emphasis needed to stress the importance of translation to the spread and development of world literature or any other field of knowledge. But literary works do not travel from one cultural space to another by themselves. Such transfer of cultural goods is initiated by human agents for different reasons and purposes. Moreover, it is bound to publishing traditions and determined by multiple factors, economic ones among other things. Archival records in Estonian Literary Museum (ELM), letters exchanged between the translator and the publisher as well as <b>translation</b> <b>contracts,</b> reveal the mechanics of commissioning translations and the details pertaining to the translation process. By observing the correspondence between Marta Sillaots, an extremely prolific Estonian translator {{in the first half of}} the 20 th century, an...|$|R
50|$|The Siraya {{language}} {{entered the}} historical record in the early 17th century when traders from the Dutch East India Company, expelled from mainland China and Chinese waters, set up a stronghold on Taiwan at Fort Zeelandia, {{which was in the}} Siraya-speaking area. During the period of Dutch rule in Taiwan, Calvinist missionaries used Siraya and Babuza (also known as Favorlang) as contact languages. A translation of the Gospel of St. Matthew into Siraya (174 pages of Siraya and Dutch text, Gravius 1661) and a catechism in Siraya (288 pages of Siraya and Dutch text, Gravius 1662) were published, and have been subsequently republished. The Dutch colony was driven out in 1661 by Ming loyalist refugees from China, and Taiwan was subsequently incorporated into the Qing Empire. During the period of Qing Dynasty rule, use of Siraya receded, but some Siraya language materials survive in the form of Siraya land <b>contracts</b> with Chinese <b>translations,</b> known as the Sinckan Manuscripts. The last records were lists of words made in the early 19th century.|$|R
40|$|Abstract. According to Szyperski, “a {{software}} component is {{a unit of}} composition with contractually specified interfaces and explicit context dependencies only”. But {{it is well known}} that these contractually specified interfaces should go well beyond mere syntactic aspects: they should also involve functional, synchronization and Quality of Service (QoS) aspects. In large, mission-critical component based systems, it is also particularly important to be able to explicitly relate the QoS contracts attached to provided interfaces with the QoS contracts obtained from required interfaces. In this paper we propose a language called QoSCL (defined as an add-on to the UML 2. 0 component model) to let the designer explicitly describe and manipulate these higher level contracts and their dependencies. We show how the very same QoSCL contracts can then be exploited for validation of individual components and also validation of a component assembly, including getting end-to-end QoS information inferred from individual component <b>contracts,</b> by automatic <b>translation</b> to a Constraint Logic Programming language. We illustrate our approach with the example of a GPS (Global Positioning System) {{software component}}, from its functional and contractual specifications to its implementation in a. Net framework. ...|$|R
5000|$|A {{translation}} of a granted European patent must be filed in some EPC Contracting States to avoid loss of right. Namely, in the Contracting States which have [...] "prescribed {{that if the}} text, in which the European Patent Office intends to grant a European patent (...) is not drawn {{up in one of}} its official languages, the applicant for or proprietor of the patent shall supply to its central industrial property office a {{translation of}} this text in one of its official languages at his option or, where that State has prescribed the use of one specific official language, in that language". The European patent is void ab initio in a designated Contracting State where the required translation (if required) is not filed within the prescribed time limit after grant. In other <b>Contracting</b> States, no <b>translation</b> needs to be filed, for example in Ireland if the European patent is in English. In those Contracting States where the London Agreement is in force the requirement to file a translation of the European patent has been entirely or partially waived. If a translation is required, a fee covering the publication of said translation may be due as well.|$|R
50|$|He has {{produced}} DVD courses for The Teaching Company in the Great Courses Series on calculus, statistics, probability, geometry, {{and the joy}} of thinking, which have reached {{hundreds of thousands of}} people worldwide. Since 2000, he has given over 200 invited lectures and presented more than 35 workshops on effective teaching to faculty members. He has co-authored two Inquiry Based Learning textbooks published by the MAA: (with David Marshall and Edward Odell) Number Theory Through Inquiry and (with Brian Katz) Distilling Ideas: An Introduction to Mathematical Thinking in the new Mathematics Through Inquiry subseries of the MAA Textbook Series. He has written three books with co-author Edward B. Burger: The Heart of Mathematics: An invitation to effective thinking (in its 4th edition and winner of a Robert Hamilton book award); Coincidences, Chaos, and All That Math Jazz: Making Light of Weighty Ideas (which has been translated into eight languages); and The 5 Elements of Effective Thinking (which is published by Princeton University Press, has <b>translation</b> <b>contracts</b> in 16 languages, and was a 2013 Independent Publisher Book Award Silver Medal winner). The book, The Heart of Mathematics: An Invitation to Effective Thinking was acclaimed by the American Mathematical Monthly as possibly the best math book for nonmathematicians it had ever reviewed. It won a 2001 Robert W. Hamilton Book Award.|$|R
40|$|Abstract. The aim of {{this paper}} is to show how the Model Driven Architecture (MDA) can be used in {{relation}} with component based software engineering. A software component only exhibits its provided or required interfaces, hence defining basic contracts between components allowing one to properly wire them. These contractually specified interfaces should go well beyond mere syntactic aspects: they should also involve functional, synchronization and Quality of Service (QoS) aspects. In large, mission-critical component based systems, it is also particularly important to be able to explicitly relate the QoS contracts attached to provided interfaces with the QoS contracts obtained from required interfaces. We thus introduce a QoS contract model (called QoSCL for QoS Constraint Language), allowing QoS contracts and their dependencies to be modeled in a UML 2. 0 modeling environment. Building on Model Driven Engineering techniques, we then show how the very same QoSCL contracts can be exploited for (1) validation of individual components, by automatically weaving contract monitoring code into the components; and (2) validation of a component assembly, including getting end-toend QoS information inferred from individual component <b>contracts,</b> by automatic <b>translation</b> to a Constraint Logic Programming language. We illustrate our approach with the example of a GPS (Global Positioning System) software component, from its functional and contractual specifications to its implementation in a. Net framework. ...|$|R
40|$|This {{research}} {{investigated the}} feasibility of South African translations of Dewey Decimal Classification (DDC). The study provides an introductory overview of DDC throughout the world, followed by its use in South Africa. The introduction highlights shortcomings and possible solutions – of which translations {{seem to be the}} most ideal. This research involved a critical analysis of the literature on DDC translations, a documentary analysis and technology-based research in the form of Google translations and evaluation of parts of Abridged Edition 15 of DDC. The critical analysis of the literature and the documentary analysis identified problems relating to translations, how translations deal with shortcomings in DDC, the fact that no literature exists on multilingual translations, and the process of translations (including {{the fact that this is}} an expensive endeavour). It also revealed information about sponsorship and the mixed translation model. The technology-based research, using Google Translate for translations of parts of Abridged Edition 15 and the subsequent evaluation of these translations indicated that Google translations were comprehensive and needed minimum editorial effort. Further to this it paved the way for describing a possible workflow for South African translations and indicated that the parts already translated as well as further Google translations can expedite the translation process. A model for South African translations, based on only the cost of the Pansoft translation software was proposed. The mixed model approach, where some languages are used as main languages (schedules, Relative Index terms and the like) and others for Relative Index terms only, was deemed the most appropriate in the South African context. This led to the conclusion that DDC translations into ten of the official South African languages are indeed feasible. The research supports translations that keep the integrity of DDC intact, with possible expansions based on literary arrant. It is important, though, to get the support of the South African library community and authoritative bodies such as the National Library of South Africa and/or the Library and Information Association of South Africa (LIASA) to negotiate and sign a <b>contract</b> for these <b>translations.</b> Information ScienceD. Litt. et Phil. (Information Science...|$|R
40|$|Correspondence {{issued by}} the Government Accountability Office with an {{abstract}} that begins "DOD has taken some steps to gain efficiencies in its approach to contracting for certain types of foreign language support services and products, but its contracting approach for other types remains fragmented across multiple components, and DOD has not explored whether additional opportunities exist to gain efficiencies across this broader range of contracting activity. In 2005, DOD sought to centralize and standardize contracting efforts for foreign language support by designating the Army as an executive agent to manage contracting in this area. In performing its responsibilities, the executive agent has focused its efforts solely on arranging for <b>contracts</b> to acquire <b>translation</b> and interpretation services for contingency operations because of the rapidly increasing requirements for these services. Specifically, from fiscal year 2008 through 2012, the Army, as executive agent, obligated about $ 5. 2 billion for contracts to provide DOD components with translation and interpretation services for contingency operations. During the same time period, we found that multiple DOD components contracted independently for foreign language support outside of the executive agent's management. Specifically, to support the needs of contingency operations, predeployment training, and day-to-day military activities, we identified 159 contracting organizations in 10 different DOD components that obligated approximately $ 1. 2 billion on contracts for foreign language support outside of those managed by the executive agent. In some cases, DOD has gained efficiencies by centralizing contracting for certain foreign language support contracts under an executive agent, but DOD has not comprehensively assessed whether additional opportunities exist to gain efficiencies across {{a broader range of}} foreign language support contracts. Best practices for service acquisition suggest that DOD's acquisition approach should provide for an agency-wide view of service contract spending and promote collaboration to leverage buying power across multiple organizations. Implementing such an approach requires an analysis of where an organization is spending its money, which should be the starting point for gaining knowledge that can assist agencies in determining which products and services warrant a more coordinated acquisition approach. 8 In commenting on a draft of this report, DOD agreed with our recommendations. DOD also provided technical comments on a draft of this report, which we incorporated, where appropriate. However, DOD has not conducted an analysis of this type to evaluate the whole range of services and products that are currently managed outside the executive agent and determine whether additional efficiencies could be gained. Without a more complete understanding of where the department is spending resources on foreign language support contracts, DOD does not have all of the information it needs to make informed decisions about the types of services and products that could be managed by the executive agent and does not have reasonable assurance that it is fully leveraging its buying power for foreign language support. ...|$|R

