5|545|Public
6000|$|... "One {{never knows}} such a thing, mother, {{until he has}} had an {{opportunity}} of making comparisons; though Miss Bayard herself says Dus is much her superior in many things. I am sure her uncle is my superior in some respects; in <b>carrying</b> <b>chain,</b> particularly so." ...|$|E
6000|$|... "Yes, t'at is t'e fact. Figures and I didn't agree; nor do I like 'em any petter at seventy t'an I liket 'em at seventeen. Frank Malbone, now, Dus's brother, t'ere, ist a lat {{that takes}} to 'em nat'rally, and he works t'rough a sum ast your fat'er would carry a {{battalion}} t'rough a ravine. <b>Carrying</b> <b>chain</b> I like; it gives sufficient occupation to t'e mind; put honesty {{is the great}} quality for the chainbearer. They say figures can't lie, Mortaunt; but 'tis not true wit' chains; sometimes they do lie, desperately." ...|$|E
6000|$|... "Food is plenty, I allow, {{but we had}} no money; {{and when}} the {{question}} was between beggary or exertion, we merely chose the last. My uncle did try old Killian, the black, for a day; but you {{know how hard it is}} to make one of those people understand anything that is a little intricate; and then I offered my services. I am intelligent enough, I trust"--the girl smiled a little proudly as she said this--"and you can have no notion how active and strong I am for light work like this, and on my feet, until you put me to the proof. Remember, <b>carrying</b> <b>chain</b> is neither chopping wood nor piling logs; nor is it absolutely unfeminine." ...|$|E
40|$|Fast <b>carry</b> <b>chains</b> {{featuring}} dedicated adder circuitry is {{a distinctive}} feature of modern FPGAs. The <b>carry</b> <b>chains</b> bypass the general routing network and {{are embedded in}} the logic blocks of FPGAs for fast addition. Conventional intuition is that such <b>carry</b> <b>chains</b> can be used only for implementing carry-propagate addition; state-of-the-art FPGA synthesizers can only exploit the <b>carry</b> <b>chains</b> for these specific circuits. This paper demonstrates that the <b>carry</b> <b>chains</b> {{can be used to}} build compressor trees, i. e., multi-input addition circuits used for parallel accumulation and partial product reduction for parallel multipliers implemented in FPGA logic. The key to our technique is to program the lookup tables (LUTs) in the logic blocks to stop the propagation of carry bits along the <b>carry</b> <b>chain</b> at appropriate points. This approach improves the area of compressor trees significantly compared to previous methods that synthesized compressor trees solely on LUTs, without compromising the performance gain over trees built from ternary carry-propagate adders. 1...|$|R
40|$|Abstract:- Adder is {{the most}} {{extensively}} used component in any VLSI designer library. Thus {{it is necessary to}} design a fast and have a constant rise, fall and delay time. The Manchester <b>carry</b> <b>chain</b> adder is chosen because it is fast and give a constant rise, fall and delay time for all the sum and carry output signals compare to other adders, regardless the number of bits. The simulations were done for all types of Manchester adder to determine the Manchester <b>carry</b> <b>chain</b> adder circuitry that provides the best performances. Tanner Tools Pro is used to analyse the Manchester <b>carry</b> <b>chain</b> adder with 2 -micron technology and the channel length, L= 2 Âµm. T-spice and W-edit are used for circuit analysis. The exhaustive test for the 2 -bit Manchester adder proves that the dynamic stage of the Manchester <b>carry</b> <b>chain</b> adder gives constant rise, fall and delay time for the carry and sum outputs with maximum frequency of 125 MHz. Key-Words:- Manchester <b>carry</b> <b>chain</b> adder, VLSI design, VLSI designer library, MOS...|$|R
40|$|The {{programmable}} logic block (PLB) {{in a modern}} FPGA features a built-in <b>carry</b> <b>chain</b> (or adder) and a decomposable LUT, where such an LUT may be decomposed into two or more smaller LUTs. Leveraging decomposable LUTs and underutilized <b>carry</b> <b>chains,</b> we propose to decompose a logic function in a PLB into two subfunctions and to combine the subfunctions via a <b>carry</b> <b>chain</b> to make the circuit more robust against single-event upsets(SEUs). Note that such decomposition can be implemented using the decomposable LUT and <b>carry</b> <b>chain</b> in the original PLB without changing the PLB-level placement and routing. Therefore, it is an in-place decomposition (IPD) with no area and timing overhead at the PLB level and has an ideal design closure between logic and physical syntheses. For 10 largest combinational MCNC benchmark circuits with a conservative 20 % utilization rate for <b>carry</b> <b>chain,</b> IPD improves MTTF (mean time to failure) by 1. 43 and 2. 70 times respectively, for PLBs {{similar to those in}} Xilinx Virtex- 5 and Altera Stratix-IV. 1...|$|R
6000|$|... "I {{do not say}} he is glad; I {{only say}} he professes to be so. These are {{different}} things with certain persons. As for the emolument, {{it will not be}} much certainly; though it will be enough to prevent Frank's sister from <b>carrying</b> <b>chain,</b> and leave her to exercise her talents and industry in their proper sphere. In the first place, every lease on the estate is to be renewed; and there being a hundred, and the tenant bearing the expense, it will at once put a considerable sum at your brother's disposition. I cannot say that the annual commissions will amount to a very great deal, though they will exceed a hundred a year by the terms on which the lands will be relet. The use of this house and farm, however, I did intend to offer to your uncle; and, for the same reason, I shall offer them to Frank." ...|$|E
40|$|Multimolecule Brownian {{dynamics}} {{simulation results}} for diffusion controlled polymerization of bead-rod chain molecules in 2 D solution are presented. Reaction between any two molecules undergoing Brownian diffusion takes place if the reactive chain ends approach {{each other to}} within a certain reaction radius, and if the chain end carrying segments are collinear within certain specified limits. The second order reaction rate constant is found to decrease with time as the molecular lengths increase and the diffusivities decrease. Application of a shear flow is seen to result in alignment of the molecules along the flow direction, thereby enhancing the concentration of molecular pairs with parallel orientation of reactive-end <b>carrying</b> <b>chain</b> segments, and hence the overall reaction rate. This effect {{is found to be}} more pronounced in the case of long rigid molecules as compared to flexible molecules because of the slow rotation and high level of orientation under flow of the former. Even the molecular weight distribution (MWD) obtained during polymerization may be affected. For example, longer molecules have lower diffusivities and hence lower reactivities, resulting in a narrower MWD in the absence of flow, as compared to the results with the usual assumption of molecular reactivity being independent of chain length. Furthermore, in the presence of an external flow, the longer molecules orient to a higher degree and hence display a higher enhancement in reactivity. This results in a wider MWD of the polymer. The simulation results are in qualitative agreement with previous experimental data for solution polymerization of rod-like molecules...|$|E
40|$|An {{improved}} <b>carry</b> <b>chain</b> circuit with carry-skip {{capability is}} described. The carryskip logic allows an arbitrarily long <b>carry</b> <b>chain</b> {{without the need}} for intermediate buffers for signal restoration, leading to an implementation that is both fast and areaefficient. The chain can flexibly accommodate technology-imposed maximum depth of NMOS transistor pull-down stack...|$|R
40|$|In the {{state-of-the-art}} field-programmable gate arrays (FPGAs), {{logic circuits}} are synthesized and mapped on clusters of look-up tables. However, arithmetic operations {{benefit from an}} existing dedicated adder along with a <b>carry</b> <b>chain</b> used to ensure a fast carry propagation. This <b>carry</b> <b>chain</b> is a dedicated wire available in {{the architecture of the}} FPGA and is as such independent of the external programmable routing resources. In this paper, we propose a variable-structure Boolean matching technology mapper with embedded decomposition techniques to map nonarithmetic logic functions on <b>carry</b> <b>chains.</b> Previously synthesized and mapped logic functions are adapted so that their outputs are routed using the dedicated <b>carry</b> <b>chains</b> instead of the external programmable interconnects. The experimental results show a reduction in the used routing resources as well as the circuit area when using this Boolean matching-based mapper on the Altera Stratix-III FPGA. PublishedN/...|$|R
50|$|Two of the {{carry-out}} bits can {{be known}} as soon as input arrives, for the input shown in the picture. This means that the maximum <b>carry</b> <b>chain</b> length is three, not five. If it uses dual-rail signalling for inputs and outputs, it can indicate completion as soon as all the <b>carry</b> <b>chains</b> have completed.|$|R
40|$|<b>Carry</b> <b>chains</b> are an {{important}} consideration for most computations, including FPGAs, because they are often on the critical path. Current FPGAs dedicate {{a portion of their}} logic to support these demands via a simple ripple carry scheme. This thesis demonstrates how more advanced carry constructs can be integrated into FPGAs, thus providing significantly higher performance <b>carry</b> <b>chains.</b> The standard ripple <b>carry</b> <b>chain</b> is redesigned {{to reduce the number of}} logic levels in each cell. Additionally, entirely new carry structures are developed based on high performance adders such as Carry Select, Carry Lookahead, and Brent-Kung. Overall, these optimizations achieve a speedup of 3. 8 times over current architectures...|$|R
5000|$|BWG owns Ireland's largest Cash & <b>Carry</b> <b>chain,</b> Value Centre, {{which has}} 22 {{branches}} nationwide.|$|R
50|$|The theatre {{is named}} after Lawrence Batley, a local {{entrepreneur}} and philanthropist, who founded a nationwide cash and <b>carry</b> <b>chain.</b>|$|R
40|$|This paper {{presents}} an architecture for a high-speed carry select adder with very long bit lengths utilizing a conflict-free bypass scheme. The proposed scheme has {{almost half the}} number of transistors and is faster than a conventional carry select adder. A comparative study is also made between the proposed adder and a Manchester <b>carry</b> <b>chain</b> adder which shows that the proposed scheme has the same transistor count, without suffering any performance degradation, compared to the Manchester <b>carry</b> <b>chain</b> adder...|$|R
5000|$|Musgrave Retail Partners EspaÃ±a {{operates}} from {{a base in}} Alicante in south-east of Spain, {{and operates}} Dialsur, and a Cash & <b>Carry</b> <b>chain.</b>|$|R
5000|$|The Manchester <b>carry</b> <b>chain</b> is a {{variation}} of the carry-lookahead adder [...] that uses shared logic to lower the transistor count. As can be seen above in the implementation section, the logic for generating each carry contains all of the logic used to generate the previous carries. A Manchester <b>carry</b> <b>chain</b> generates the intermediate carries by tapping off nodes in the gate that calculates the most significant carry value. Not all logic families have these internal nodes however, CMOS being a major example. Dynamic logic can support shared logic, as can transmission gate logic. One of the major downsides of the Manchester <b>carry</b> <b>chain</b> is that the capacitive load of all of these outputs, together with the resistance of the transistors causes the propagation delay to increase much more quickly than a regular carry lookahead. A Manchester-carry-chain section generally won't exceed 4 bits.|$|R
40|$|Look-up table based FPGAs have {{migrated}} from a niche technology for design prototyping to a valuable end-product component and, in some cases, {{a replacement for}} general purpose processors and ASICs alike. One way architects have bridged the performance gap between FPGAs and ASICs is through the inclusion of specialized components such as multipliers, RAM modules, and microcontrollers. Another dedicated structure that has become standard in reconfigurable fabrics is the arithmetic <b>carry</b> <b>chain.</b> Currently, it is only used to map arithmetic operations as identified by HDL macros. For non-arithmetic operations, it is an idle but potentially powerful resource.;Obstacles to using the <b>carry</b> <b>chain</b> for generic logic operations include lack of architectural and computer-aided design support. Current carry-select architectures facilitate <b>carry</b> <b>chain</b> reuse, although they do so only for (K- 1) -input operations. Additionally, hardware description language (HDL) macros are the only recourse for a designer wishing to map generic logic chains in a carry-select architecture. A novel architecture that allows the full K-input operational capacity of the <b>carry</b> <b>chain</b> to be harnessed {{is presented as a}} solution to current architectural limitations. It is shown to have negligible impact on logic element area and delay. Using only two additional 2 : 1 pass transistor multiplexers, it enables the transmission of a K-input operation to the <b>carry</b> <b>chain</b> and general routing simultaneously. To successfully identify logic chains in an arbitrary Boolean network, ChainMap is presented as a novel technology mapping algorithm. ChainMap creates delay-optimal generic logic chains in polynomial time without HDL macros. It maps both arithmetic and non-arithmetic logic chains whenever depth increasing nodes, which increase logic depth but not routing depth, are encountered. Use of the chain is not reserved for arithmetic, but rather any set of gates exhibiting similar characteristics. By using the <b>carry</b> <b>chain</b> as a generic, near zero-delay adjacent cell interconnection structure a potential average optimal speedup of 1. 4 x is revealed. Post place and route experiments indicate that ChainMap solutions perform similarly to HDL chains when cluster resources are abundant and significantly better in cluster-constrained arrays...|$|R
60|$|MITCHENER. Arming yourselves! But, my dear ladies, {{under the}} latest {{proclamation}} women are strictly forbidden to <b>carry</b> <b>chains,</b> padlocks, tracts on the franchise, or weapons of any description.|$|R
40|$|Improving {{arithmetic}} circuits on FPGAs {{is one of}} {{the main}} imperatives of FPGA vendors. Augmenting logic cells with dedicated arithmetic components such as adders and <b>carry</b> <b>chains</b> indicates the need for such improvements. In a prior work, we showed how the <b>carry</b> <b>chains</b> in the state-of-the-art Altera FPGAs could be exploited for synthesis of compressor trees. In that work, we proposed generalized parallel counters (GPCs) as the building blocks and mapped them to logic cells of FPGA using LUTs and <b>carry</b> <b>chains.</b> In this paper, we propose a novel technique to increase the logic density of compressor tree synthesis by sharing the logic cells between two neighbor GPCs in a chain. Moreover, we expand the GPC library with bigger GPCs and we propose a systematic approach to select the right GPCs based on the synthesis optimization targets. Finally, we will demonstrate that our framework can be retargeted to Xilinx Virtex- 5 FPGAs with minor modifications. 1...|$|R
40|$|This {{innovation}} {{is a series}} of time-tag pulses from a photomultiplier tube, featuring short time interval between pulses (e. g., 2. 5 ns). Using the previous art, dead time between pulses is too long, or too much hardware is required, including a very-high-speed demultiplexer. A faster method is needed. The goal of this work is to provide circuits to time-tag pulses that arrive at a high rate using the hardwired logic in an FPGA - specifically the <b>carry</b> <b>chain</b> - to create what is (in effect) an analog delay line. High-speed pulses travel down the chain in a "wave. " For instance, a pulse train has been demonstrated from a 1 - GHz source reliably traveling down the <b>carry</b> <b>chain.</b> The size of the <b>carry</b> <b>chain</b> is over 10 ns in the time domain. Thus, multiple pulses will travel down the <b>carry</b> <b>chain</b> in a wave simultaneously. A register clocked by a low-skew clock takes a "snapshot" of the wave. Relatively simple logic can extract the pulses from the snapshot picture by detecting the transitions between logic states. The propagation delay of CMOS (complementary metal oxide semiconductor) logic circuits will differ and/or change as a result of temperature, voltage, age, radiation, and manufacturing variances. The time-to-digital conversion circuits can be calibrated with test signals, or the changes can be nulled by a separate on-die calibration channel, in a closed loop circuit...|$|R
5000|$|Approximate adders, {{multipliers}} {{and other}} logical circuits can reduce hardware overhead. For example, an approximate multi-bit adder can ignore the <b>carry</b> <b>chain</b> and thus, allow all its sub-adders to perform addition operation in parallel.|$|R
40|$|Ripple-carry {{architectures}} are {{the norm}} in todayâs reconfig-urable fabrics. They are simple, require minimal routing, and are easily formed across arbitrary cells in a fabric. How-ever, their computation delay grows linearly with operand width. Many different fabric carry-chains have been pre-sented in literature offering non-linear delays, but generally require a significant investment in routing and processing area. Carry-skip chains are well-known in arithmetic logic design, and although they too possess a linear delay, their performance is 2 x or more faster than simple ripple-carry schemes. They require an expanded <b>carry</b> <b>chain</b> and minimal extra logic, but offer impressive speed-ups for arithmetic. This paper presents a reconfigurable cell that supports carry-skip arithmetic using a multi-bit <b>carry</b> <b>chain</b> achieving 2 Â·k Â·b+ n b performance, where b is the block size and k is an architecture constant. The cell is specialized for arithmetic and Boolean operations with reduced configuration mem-ory. Additional resources are provided to reuse the multi-bit <b>carry</b> <b>chain</b> for 3 -source operand arithmetic to explore how multi-bit chains can be reused. 1...|$|R
6000|$|... "How could he, and <b>carry</b> <b>chain</b> {{twenty miles}} distant? We have been here, occasionally, {{a few days}} at a time; but the work was {{to be done and}} it must be done on the land itself." ...|$|R
40|$|A {{document}} discusses a {{pulse generator}} with subnanosecond resolution implemented with a low-cost {{field-programmable gate array}} (FPGA) at low power levels. The method used exploits the fast <b>carry</b> <b>chains</b> of certain FPGAs. Prototypes have been built and tested in both Actel AX and Xilinx Virtex 4 technologies. In-flight calibration or control can be performed by using a similar and related technique as a time interval measurement circuit by measuring a period of the stable oscillator, as the delays through the fast <b>carry</b> <b>chains</b> will vary {{as a result of}} manufacturing variances as well as the result of environmental conditions (voltage, aging, temperature, and radiation) ...|$|R
40|$|AbstractâCarry {{chains are}} an {{important}} consideration for most computations, including FPGAâs. Current FPGAâs dedicate a por-tion of their logic to support these demands via a simple ripple carry scheme. In this paper, we demonstrate how more advanced carry constructs can be embedded into FPGAâs, providing signif-icantly higher performance carry computations. We redesign the standard ripple <b>carry</b> <b>chain</b> {{to reduce the number}} of logic levels in each cell. We also develop entirely new carry structures based on high-performance adders such as carry select, carry lookahead, and BrentâKung. Overall, these optimizations achieve a speedup in carry performance of 3. 8 times over current architectures. Index TermsâAddition, arithmetic, <b>carry</b> <b>chains,</b> FPGA. I...|$|R
40|$|Most modern FPGAs {{have very}} {{optimised}} carry logic for efficient implementations of ripple carry adders (RCA). Some FPGAs {{also have a}} six input look up table (LUT) per cell, whereof two inputs are used during normal addition. In this paper we present an architecture that compresses the <b>carry</b> <b>chain</b> length to N/ 2 in recent Xilinx FPGA, by utilising the LUTs better. This carry compression was implemented by letting some cells calculate the <b>carry</b> <b>chain</b> in two bits per cell, while some others calculate the summary output bits. In total the proposed design uses no more hardware than the normal adder. The result shows that the proposed adder is faster than a normal adder for word length larger than 64 bits in Virtex- 6 FPGAs...|$|R
25|$|Boxing Day is an {{occasion}} for music competitions, held in Sturge Park. Steelbands, village groups, masquerade ensembles and mummers all perform. Jump-up Day commemorates and celebrates emancipation from slavery, and is accompanied by steelbands, masquerades and dancing men <b>carrying</b> <b>chains</b> to symbolize the bondage of slavery.|$|R
40|$|International audienceInteger {{addition}} is {{a pervasive}} operation in FPGA designs. The need for fast wide adders grows with {{the demand for}} large precisions as, for example, required {{for the implementation of}} IEEE- 754 quadruple precision and eliptic-curve cryptography. The FPGA realization of fast and compact binary adders relies on hardware <b>carry</b> <b>chains.</b> These provide a natural implementation environment for the ripple-carry addition (RCA) scheme. As its latency grows linearly with the operand width, wide additions call for acceleration, which is quite reasonably achieved by addition schemes built from parallel RCA blocks. This study presents FPGA-specific arithmetic optimizations for the mapping of carry-select/increment adders targeting the hardware <b>carry</b> <b>chains</b> of modern FPGAs. Different trade-offs between latency and area are presented. The proposed architectures represent attractive alternatives to deeply pipelined RCA schemes...|$|R
40|$|AbstractâInteger {{addition}} is {{a pervasive}} operation in FPGA designs. The need for fast wide adders grows with {{the demand for}} large precisions as, for example, required {{for the implementation of}} IEEE- 754 quadruple precision and eliptic-curve cryptography. The FPGA realization of fast and compact binary adders relies on hardware <b>carry</b> <b>chains.</b> These provide a natural implementation environment for the ripple-carry addition (RCA) scheme. As its latency grows linearly with the operand width, wide additions call for acceleration, which is quite reasonably achieved by addition schemes built from parallel RCA blocks. This study presents FPGA-specific arithmetic optimizations for the mapping of carryselect/increment adders targeting the hardware <b>carry</b> <b>chains</b> of modern FPGAs. Different trade-offs between latency and area are presented. The proposed architectures represent attractive alternatives to deeply pipelined RCA schemes. Keywords-FPGA; addition; carry-chain; carry-select; carryincrement I...|$|R
40|$|A {{reconfigurable}} device {{includes an}} arrangement of a plurality of cells and routing resources for transmitting signals between the cells. The plurality of cells comprises carry-select reuse cells, each of the carry-select reuse cells configured to provide for performing non-arithmetic operations using a reuse arithmetic <b>carry</b> <b>chain</b> interconnecting adjacent cells...|$|R
50|$|Both the <b>carry</b> <b>chain</b> of the adder and the decoder combine {{information}} from the entire width of the index portion of the address. Combining information across the entire width twice is redundant. A sum-addressed SRAM combines the information just once by implementing the adder and decoder together in one structure.|$|R
40|$|In a {{delay line}} {{type of a}} time-to-digital {{converter}} implemented in Field Programmable Gate Array, the timing accuracy decreases for a longer <b>carry</b> <b>chain.</b> In this paper, we propose a structure that has a multi-phase clock and a state machine to check metastability; this would reduce the required length of the <b>carry</b> <b>chain</b> with the same time resolution. To reduce the errors caused by the time difference in the four delay lines associated with a four-phase clock, the proposed TDC generates a single input pulse from four phase clocks and uses a single delay line. Moreover, the state machine is designed to find the phase clock {{that is used to}} generate the single input pulse and determine the metastable state without a synchronizer. With the measurement range of 1 ms, the measured resolution was 22 ps, and the non-linearity was 2...|$|R
6000|$|... "Got help t'e men, t'en, t'at haf to <b>carry</b> <b>chain</b> petween you {{and your}} neighpors, T'ousandacres; a man's wants to-tay may tiffer from his wants to-morrow, and to-morrow from t'e next tay, ant so on to t'e ent of time! On your toctrine, not'in' woult pe settlet, ant all woult pe at sixes ant sevens." ...|$|R
40|$|<b>Carry</b> <b>chains</b> are an {{important}} consideration for most computations, including FPGAs. Current FPGAs dedicate {{a portion of their}} logic to support these demands via a simple ripple carry scheme. In this paper we demonstrate how more advanced carry constructs can be embedded into FPGAs, providing significantly higher performance carry computations. We redesign the standard ripple <b>carry</b> <b>chain</b> {{to reduce the number of}} logic levels in each cell. We also develop entirely new carry structures based on high performance adders such as Carry Select, Carry Lookahead, and Brent-Kung. Overall, these optimizations achieve a speedup in carry performance of 3. 8 times over current architectures. Introduction Although originally intended as a way to efficiently handle random logic tasks in standard hardware systems, FPGAs have become the driving force behind a new computing paradigm. By mapping algorithms to these FPGAs significant performance benefits can be achieved. However, in order to achieve [...] ...|$|R
6000|$|... "Don't press me too far, Chainbearer, don't press me too far. There's desp'rate crittur's in this clearin', {{and them}} that is'nt {{to be driven}} from their righteous 'arnin's by any that <b>carry</b> <b>chains</b> or p'int compasses. Go your way, I tell ye, and leave us to gather the harvest that comes of the seed of our own sowin' and plantin'." ...|$|R
