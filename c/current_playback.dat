10|7|Public
2500|$|... iTunes 2 was {{the first}} version of the {{software}} to be able to sync with an iPod. iTunes can automatically synchronize its music and video library with an iPod or iPhone every time it is connected. New songs and playlists are automatically copied to the iPod, and songs and playlists that have been deleted from the library on the host computer are also deleted from the iPod. Ratings awarded to songs on the iPod will sync back to the iTunes library and audiobooks will also remember the <b>current</b> <b>playback</b> position.|$|E
5000|$|Scrobbling: {{ability to}} share <b>current</b> <b>playback</b> {{information}} from MusicBee to Last.fm.|$|E
5000|$|... iTunes 2 was {{the first}} version of the {{software}} to be able to sync with an iPod. iTunes can automatically synchronize its music and video library with an iPod or iPhone every time it is connected. New songs and playlists are automatically copied to the iPod, and songs and playlists that have been deleted from the library on the host computer are also deleted from the iPod. Ratings awarded to songs on the iPod will sync back to the iTunes library and audiobooks will also remember the <b>current</b> <b>playback</b> position.|$|E
50|$|Single {{articles}} and interviews are made available as podcast. So current news are instantly available. Due to categorisation users can {{subscribe to the}} newsfeeds of topics they are interested to and load them directly to MP3 player. This compatibility with <b>current</b> mobile <b>playback</b> devices {{is the reason why}} the podcast uses the MP3 format.|$|R
40|$|Abstract. The <b>current</b> {{transmission}} and <b>playback</b> of the streaming {{media in the}} WEB browser are mainly depend {{on the use of}} the Flash plug-in. And different platforms you need to install the plug-in are often different, that bring a very bad user experience. Combined with UDP transport protocol of streaming media, the design of audio and video players is realized by HTML 5 technology in this paper. And create a custom control for HTML 5 audio and video with JavaScript MediaAPI, while PhoneGap was used for encapsulation, so as to achieve the cross-platform, cross-terminal application...|$|R
40|$|<b>Current</b> {{mainstream}} audio <b>playback</b> paradigms do {{not take}} any account of a user 2 ̆ 7 s physical location or orientation {{in the delivery of}} audio through headphones or speakers. Thus audio is usually presented as a static perception whereby it is naturally a dynamic 3 D phenomenon audio environment. It fails to take advantage of our innate psycho-acoustical perception that we have of sound source locations around us. Described in this paper is an operational platform which we have built to augment the sound from a generic set of wireless headphones. We do this in a way that overcomes the spatial awareness limitation of audio playback in indoor 3 D environments which are both location-aware and sensor-equipped. This platform provides access to an audio-spatial presentation modality which by its nature lends itself to numerous cross-dissiplinary applications. In the paper we present the platform and two demonstration applications...|$|R
30|$|In this section, {{we propose}} a new ABR scheme that {{provides}} high QoE to clients in DASH environment using the ANFIS structure described in Section 2. In the FDASH scheme mentioned in Section 1, the <b>current</b> <b>playback</b> buffer {{level and the}} differential of the client buffer level are used as the inputs of the FLC. However, the proposed method determines the next bit rate based on the <b>current</b> <b>playback</b> buffer level and the estimated download time, which is advantageous because the input values of the FLC of FDASH do not consider network throughput. A detailed explanation is as follows.|$|E
30|$|One of the {{recently}} proposed ABR schemes, FDASH [11] is a fuzzy logic-based bit rate determination technique. The fuzzy logic controller (FLC) of FDASH receives the <b>current</b> <b>playback</b> buffer level and the differential of the client buffer level. Then, the FLC performs fuzzification, fuzzy rule-based inference, and de-fuzzification to create output f, which represents the increase/decrease factor of the segment bit rate. FDASH is better in terms of average video quality {{and the number of}} video quality switching compared to other existing ABR schemes. It, however, is not explained why the fuzzy parameters used for fuzzification and de-fuzzification in the FLC are set. It is therefore not clear whether these set fuzzy parameters are optimal.|$|E
40|$|In this {{contribution}} {{we propose}} a generic service for realtime access to context-based music {{information such as}} lyrics or score data. In our web-based client-server scenario, a client application plays back a particular (waveform) audio recording. During playback, the client connects to a server which in turn identifies the particular piece of audio {{as well as the}} <b>current</b> <b>playback</b> position. Subsequently, the server delivers local, i. e., position specific, context-based information on the audio piece to the client. The client then synchronously displays the received information during acoustic playback. We demonstrate how such a service can be established using recent MIR (Music Information Retrieval) techniques such as audio identification and synchronization and present two particular application scenarios...|$|E
40|$|While {{synchronous}} {{meetings are}} an important part of collaboration, it is not always possible for all stakeholders to meet at the same time. We created the concept of hypermeetings for meetings with asynchronous attendance. Such hypermeetings consist of a chain of video-recorded meetings with hyperlinks for navigating through them. Our HyperMeeting system supports the viewing of prior meetings during a videoconference. Natural viewing behavior such as pausing video generates hyperlinks between previous and <b>current</b> meetings. During <b>playback,</b> automatic link-following guided by playback plans present the relevant content to users. Playback plans take into account the user’s meeting attendance and viewing history and match them with features such as topic and speaker segmentation. A user study showed that participants found hyperlinks useful but did not always understand where the links would take them. Experiences from longer-term use and the study results provide a good basis for future system improvements...|$|R
40|$|Masters Research - Master of Information Technology (Advanced) (MIT(Adv)) The WaveWatch display was {{developed}} through an iterative design process, {{with a number}} of prototypes being developed before the deployment and evaluation of the final design. Overall it was found that creating an Ambient Information System that utilises 3 D graphics and an ocean wave metaphor was technically feasibility. However, building the display was a complicated and lengthy process taking around 200 man-hours. This process was complicated by a number of design challenges including the creation of an aesthetically pleasing scene, the time for each scene to render, the creation of a real-time dynamic looping ocean animation and the limitations of <b>current</b> video <b>playback</b> technology. Despite these technical difficulties it was possible to combine existing technologies to create the novel Ambient Information System known as WaveWatch. An instrumental case study was performed, where the WaveWatch display was deployed in a real life office environment for a period of two weeks. After this two-week evaluation period, participants who worked in the area were given the chance to complete a questionnaire related to the utility and perceived ease of use of the display. The key finding from this instrumental case study was that the majority of respondents found the novel wave metaphor for peripheral information visualisation to be a useful tool for generating interest in the underlying data source, where the metaphor itself was perceived to be both intuitive and easy to understand...|$|R
40|$|The NCP 2704 is a cost {{effective}} audio subsystem designed for portable {{applications such as}} cellular phones and portable media player. It {{has been designed to}} cover the power audio requirements in portable equipment: including a high fidelity Class D speaker amplifier and a Class G equivalent LongPlay true ground headphone amplifier. This patented headphone amplifier circuitry allows the removal of the bulky output capacitors and minimize audio <b>playback</b> <b>current</b> consumption with minimum external components. In addition the user can set the output swing to have enough output dynamic even when a damping resistor is added. Through a flexible I 2 C interface, NCP 2704 can support both single ended and differential types of analog input signal. In both cases, it offers a zero pop noise signature. The same interface allows a user defined architecture with an input control, highly accurate gain setting capability from − 60 dB to + 12 dB and output control. In addition NCP 2704 offers the possibility to reduce the EMI perturbation by lowering the rise and fall times of the Class D outputs (software programmable). The Loudspeaker also amplifier includes an AGC which performs two functions: limiter and non−clipping...|$|R
40|$|In this demo {{we present}} novel {{functionalities}} for a user interface {{referred to as}} Interpretation Switcher, which has emerged from the previously developed SyncPlayer system [1]. This interface allows a user to select several recordings of the same piece of music, which have previously been synchronized [2]. Each of the recordings is represented by a slider bar indicating the <b>current</b> <b>playback</b> position {{with respect to the}} recording’s particular timeline, see Fig. 1. The user may listen to a specific recording by activating a slider bar and then, at any time during playback, seamlessly switch to any of the other versions. In addition to the switching functionality, our current version of the Interpretation Switcher also allows for visualizing annotations below each individual slider bar. Such annotations may encode the harmonic progression (chor...|$|E
30|$|Because DASH {{does not}} define how the client selects the bit {{rate of the}} next segment, many {{adaptive}} bit rate (ABR) algorithms have been proposed to select the next bit rate [8 – 12]. These algorithms determine the next bit rate based on parameters such as the TCP throughput estimated by the application layer [8], <b>current</b> <b>playback</b> buffer level [9, 10], or both [11, 12]. The main goal of these ABR algorithms is to provide the clients with high QoE. In order to provide high QoE, ABR algorithms must meet various conditions such as prevention of rebuffering events, minimizing video start delays, maximizing video quality, minimizing the number of video quality switching events, and smoothly changing the video quality [13 – 16]. However, all of these requirements cannot be met because they have trade-offs with each other [17]. Therefore, the goal of ABR algorithms is to provide clients with high QoE by appropriately meeting each condition to the extent possible.|$|E
40|$|Multimedia {{streaming}} {{today is}} generally delivered using a costly client-server model that ignores the client’s available upstream bandwidth {{to deliver a}} low-bitrate stream. Mean-while, peer-to-peer networks such as BitTorrent {{can be used to}} statically deliver high quality multimedia content, and prove highly effective in utilising upstream bandwidth. In this pa-per, the properties of peer-to-peer overlay and content delivery networks are compared, and assessed for their streaming suitability. The effects of the network topology upon the properties of these networks are also considered. BitTorrent is focused upon as a success-ful example of a swarm topology and the current state of affairs regarding streaming over BitTorrent-style networks is addressed, focusing on the solutions of BiToS [1] and Liveswarms [23]. Proposals are made to improve current approaches, leveraging concepts derived from other peer-to-peer networks, such as a high-priority streaming window ahead of the <b>current</b> <b>playback</b> point[1], the explicit acquisition of relevant distant content as currency [18] to improve future playback performance, the potential application of helpers [19] in certain environments and the use of multiple description streaming technologies. ...|$|E
40|$|Abstract—On-demand video {{services}} such as Youtube and Hulu are expected to comprise {{a large percentage of}} the increasing data loads in mobile networks. On-demand video is distinctive because it is pre-recorded and therefore can be considered elastic traffic because the video frame buffer can be downloaded well past the <b>current</b> point of <b>playback.</b> Based on this observation, we propose Video Rest-and-Download (VR&D) as a video download application framework that aims to reduce network congestion while maintaining playback quality. The intuition for VR&D is that, in a scenario where radio resources are shared by multiple data users, the video user can “rest ” for some amount of time until fewer users are in the network, thereby allowing other data users to complete their downloads faster, without affecting playback quality. We present an algorithmic framework for VR&D based on the Markov Decision Process that uses the history and current state of network activity to determine how aggressive the user should be in downloading video frames. We evaluate its performance using a simulated UMTS network with HSDPA data service based on real network traces from a major U. S. carrier. Our results show that, compared to the existing solution, during the time of video playback this application can reduce download time by as high as 50 %, and alleviate network congestion by up to 30 % with minimal effect on playback quality. I...|$|R
40|$|Figure 1. Our SmartPlayer {{is adopted}} by the metaphor of scenic car driving. In this {{paper we propose a}} new video {{interaction}} model called adaptive fast-forwarding to help people quickly browse videos with predefined semantic rules. This model is designed around the metaphor of “scenic car driving, ” in which the driver slows down near areas of interest and speeds through unexciting areas. Results from a preliminary user study of our video player suggest the following: (1) the player should adaptively adjust the <b>current</b> <b>playback</b> speed based on the complexity of the present scene and predefined semantic events; (2) the player should learn user preferences about predefined event types as well as a suitable playback speed; (3) the player should fast-forward the video continuously with a playback rate acceptable to the user to avoid missing any undefined events or areas of interest. Furthermore, our user study results suggest that for certain types of video, our SmartPlayer yields better user experiences in browsing and fast-forwarding videos than existing video players ’ interaction models. Author Keywords Video playback, adaptive fast-forward, predefined even...|$|E

