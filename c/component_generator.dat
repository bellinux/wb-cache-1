19|274|Public
5000|$|Tools: Hypothetical <b>Component</b> <b>Generator,</b> Bulk C7+/Distillation Curves Petroleum Characterization, Petroleum Assay Manager, Reactions Manager and Compound Creator; ...|$|E
50|$|The current {{generation}} of Hopsan consists of two parts, a graphical user interface and a simulation core library. These are completely separated, so that the core can be used stand-alone, for example in embedded systems or target computers. Everything is precompiled, so that no compilation is required during runtime. Custom user models can be created and compiled as separate library files, which can be loaded from Hopsan. There is also a built-in automated equation based <b>component</b> <b>generator</b> using Modelica syntax. Models can also be generated from equations by using Mathematica. Numerical optimization can be performed by a built-in tool, using COMPLEX or particle swarm algorithms. It is also possible to perform Monte Carlo sensitivity analysis. The plotting tool is capable of generating frequency spectrums and performing frequency analysis to generate Bode diagrams and Nyquist plots.|$|E
40|$|A clock-cycle {{accurate}} synchronization {{technique for}} fully integrated data-converters is presented. Only a single cable {{is needed to}} distribute both the required synchronization signal and the converter clock. Different possible implementations, both to generate and decompose the distributed signal, are presented. A discrete <b>component</b> <b>generator</b> circuit is discussed. To avoid setup and hold time violations, on-chip signal reconstruction is unavoidable. A 40 nm CMOS recovery circuit was developed. Simulation results, including layout parasitics, show the wide frequency operating range of the proposed technique. status: publishe...|$|E
50|$|Vladimir Palikhata {{consolidated}} {{electrical engineering}} assets (including manufacturing of low-voltage switches, electrical <b>components,</b> <b>generators</b> and engines) in Russia and Ukraine, uniting them into Rosenergomash Group which he managed himself.|$|R
50|$|Project cargo and {{the heavy}} lift cargo include items like {{manufacturing}} equipment, air conditioners, factory <b>components,</b> <b>generators,</b> wind turbines, military equipment, and almost any other oversized or overweight cargo which is too big or too heavy {{to fit into a}} container.|$|R
5000|$|... #Caption: A 3-stage {{discrete}} <b>component</b> vector inversion <b>generator.</b>|$|R
40|$|Abstract—This paper {{presents}} recent develop-ments of the LAAS architecture for autonomous systems: the GenoM 3 <b>component</b> <b>generator</b> for functional components design. The GenoM tool {{was originally}} designed for autonomous and ter-restrial mobile robots. This tool remains fairly general and {{is supported by}} a consistently inte-grated set of tools and methodologies, in order to properly design, integrate, test and validate a complex autonomous system. GenoM 3 intends to grant middleware indepen-dance to robotic software components so that a clear separation of concerns is achieved between highly reusable algorithmic parts and integration frameworks. Such a decoupling let middlewares b...|$|E
40|$|Abstract. With the {{increasing}} {{request of the}} comfort, reduce the vibration and noise of automobile AC generator as the industry wide concern. In this paper, based on a type of vehicle alternator speed section of excessive noise problems, using order analysis method on noise generator is analyzed, the main harmonic <b>component</b> <b>generator</b> noise for 36 harmonic components, and determine the maximum value of the resonance speed noise in 1800 rpm, 2400 rpm, 3400 rpm near the motor load state. On this basis, puts forward the corresponding improvement measures to improve the motor, the motor noise value to the manufacturer's standard...|$|E
40|$|National audienceThis paper {{presents}} {{recent developments}} of the LAAS architecture for autonomous systems: the GenoM 3 <b>component</b> <b>generator</b> for functional components design. The GenoM tool was originally designed for autonomous and terrestrial mobile robots. This tool remains fairly general and {{is supported by a}} consistently integrated set of tools and methodologies, in order to properly design, integrate, test and validate a complex autonomous system. GenoM 3 intends to grant middleware independance to robotic software components so that a clear separation of concerns is achieved between highly reusable algorithmic parts and integration frameworks. Such a decoupling let middlewares be used interchangeably, while fully benefitting from their specific, individual features...|$|E
5000|$|... #Subtitle level 2: Steam <b>generator</b> (<b>component</b> {{of prime}} mover) ...|$|R
5000|$|Hitachi Electrical Power <b>Generators</b> and <b>Components</b> Large AC <b>Generators</b> above 40 MVA ...|$|R
5000|$|In 1972 Tomos, Iskra, and Citroën {{formed a}} new company, Cimos (Citroën, Iskra, Tomos), for the {{manufacture}} and export {{of cars and}} car sub-assemblies. [...] Iskra was a manufacturer of automotive <b>components,</b> especially <b>generators.</b>|$|R
40|$|On paper, {{components}} {{would seem}} to be ideal building blocks for distributed software development. But how well are component-based approaches really suited for the rapid design and implementation of interactive applications? A large geographically distributed testbed consisting of domain experts, component framework coordinators, <b>component</b> <b>generator</b> tool providers, application developers, publishers, and users is producing and publishing educational applications. A rapid production pipeline process is employed to output one simple but complete application each week. The role of each stakeholder and the representations used to communicate design, and implementation issues are documented in the context of one complete application production cycle. Guidelines for effective use of component technology for distributed software development are provided...|$|E
40|$|This article {{presents}} an analog {{implementation of the}} signal <b>component</b> <b>generator</b> (SCG) of the CALLUM 2 linear transmitter architecture. The proposed SCG is suited for integration in a standard 0. 35 μm CMOS process, and has from simulations proven to be adequate when operating on an EDGE modulated baseband signal with a data rate of 270. 833 ksymb/s. The total current consumption of the SCG is 2. 0 mA from a 3. 3 V supply. A variable-gain amplifier (VGA) with common-mode (CM) control is presented, and the VGA is inserted in between the SCG and the voltage-controlled oscillator (VCO) to adjust the loop gain, which has strong influence on the stability and spectral performance of the linear transmitter architecture. © 2004 IEEE...|$|E
40|$|Abstract — The {{topic of}} {{reusable}} software in robotics is now largely addressed. Components based architectures, where components are independent units {{that can be}} reused accross applications, have become more popular. As a consequence, {{a long list of}} middlewares and integration tools is available in the community, often in the form of open-source projects. However, these projects are generally self contained with little reuse between them. This paper presents a software engineering approach that intends to grant middleware independance to robotic software compo-nents so that a clear separation of concerns is achieved between highly reusable algorithmic parts and inte-gration frameworks. Such a decoupling let middle-wares be used interchangeably, while fully benefitting from their specific, individual features. This work has been integrated into {{a new version of the}} open-source GenoM <b>component</b> <b>generator</b> tool: GenoM 3. I...|$|E
30|$|Following the {{previous}} work, this paper proposed {{a method to}} evaluate the composite power system reliability considering the FOR of the generators {{as well as the}} transmission lines. The Monte Carlo method is used to simulate the random behavior of the availability of the system <b>components</b> (<b>generator</b> or branch). A DC power flow model, instead of the network flow method [5, 6], is used to obtain more accurate maximum arrival power at load point. With the reliability evaluation process, an implicit sensitivity index based optimization method can be obtained, which can help to choose the most effective component so as to improve the system or bus reliability.|$|R
40|$|International audienceThis paper {{considers}} {{the use of}} a state-of-the-art, general-purpose, component-programming language, specifically ArchJava, to implement software product lines. Component-programming languages provide a more straightforward mapping between components as assets and components as implementation artifacts. However, guaranteeing that the implementation conforms to the architecture raises new issues with respect to dynamic configuration. We show how this can be solved in ArchJava by making the components auto-configurable, which corresponds to replacing <b>components</b> by <b>component</b> <b>generators.</b> Such a scheme can be implemented in various ways, in particular with a two-stage generator. This solution goes beyond the initial technical ArchJava issue and complements the standard static generative approach to software product line implementation...|$|R
50|$|Generator {{convention}} - In source <b>components</b> like <b>generators</b> and batteries, {{the variables}} V and I are defined {{according to the}} active sign convention above; the current variable is defined as entering the negative terminal of the device.|$|R
40|$|Changing an {{existing}} software architecture {{is difficult and}} painful. The typical result is either a poor adaptation to the target architecture or a substantial debasement of the original. Software generators can simplify the transformation process and relieve the pain for certain architectures. We present a <b>component</b> <b>generator</b> that transforms an object-oriented specification to a component-based implicit-invocation system. The input to the transformation {{is a set of}} classes; the output is a package of components. We present this process for a given source specification and target component technology and demonstrate its advantages over conventional approaches. 1 Introduction Changing the architecture of {{an existing}} software system is both difficult and painful. It is difficult because it demands a conceptual shift to a different style, even a different programming paradigm. It is painful because large parts of the system invariably need to be redone. All too often, a good initial arc [...] ...|$|E
40|$|The Thermal Range Model (TRM 4) 1 {{developed}} by the Fraunhofer IOSB of Germany is a commonly used performance model for military target acquisition systems. There are many similarities between the U. S Army Night Vision Integrated Performance Model (NV-IPM) 2 and TRM 4. Almost all of the camera performance characterizations, such as signal-to-noise calculations and modulation transfer theory are identical, only the human vision model and performance metrics differ. Utilizing the new Custom <b>Component</b> <b>Generator</b> in the NV-IPM we develop a component to calculate the Average Modulation at Optimal Phase (AMOP) and Minimum Difference Signal Perceived (MDSP) calculations used in TRM 4. The results will {{be compared with the}} actual TRM 4 results for a variety of imaging systems. This effort demonstrates that the NV-IPM is a versatile system design tool which can easily be extended to include a variety of image quality and performance metrics...|$|E
40|$|The Pacific Software Research Center is {{developing}} a new method to support reuse and introduce reliability into software. The method is based on design capture in domain specific design languages and automatic program generation using a reusable suite of program transformation tools. The transformation tools, and a domain specific <b>component</b> <b>generator</b> incorporating them, are being implemented {{as part of a}} major project underway at the Oregon Graduate Institute of Science and Technology. The processes used in tool development and application of the method are being captured. Once completed, an experiment will be performed on the generator to assess its usability and flexibility. This paper describes the Software Design for Reliability and Reuse method and illustrates its application to the Message Translation and Validation domain, a problem identified by our sponsors so that our method can be compared directly to a previously existing state-of-the-art solution based on code templates pr [...] ...|$|E
40|$|Abstract. The {{repair and}} {{refurbishing}} of steam <b>generator</b> <b>components</b> is discussed {{from the perspective}} of repair welding philosophy including applicable codes and regulations. Some case histories of repair welding of steam <b>generator</b> <b>components</b> are discussed with special emphasis on details of repair welding of cracked steam turbine blades and shrouds in some of the commercial nuclear power plants using procedures developed...|$|R
40|$|Considers a {{creation}} task of program and hardware <b>components</b> of <b>generators</b> of accidental and psevdoaccidental numbers, built in information defense systems, describe the componental generators models of accidental and psevdoaccidental numbers, leads a realization example by model element. ??????????????? ?????? ???????? ??????????? ? ?????????? ??????????? ??????????? ????????? ? ??????????????? ?????, ???????????? ? ??????? ?????? ??????????, ??????????? ???????????? ?????? ??????????? ????????? ? ??????????????? ?????, ?????????? ?????? ?????????? ????????? ??????...|$|R
40|$|International audiencePower {{electronics}} converters {{can generate}} {{a high level}} of harmonic perturbations on on-board electrical systems (planes, ships, road vehicles [...] .). For the optimal sizing of these systems, harmonics must be known to select the best <b>components</b> (<b>generator,</b> filter [...] .) that will limit their effects. In the paper, an analytical frequency domain modeling is proposed to accurately compute the harmonics generated the static converters. Because no numerical simulation is used, the presented approach is fast, accurate and applicable for optimal sizing or sensibility analysis. It is also valid for every kind of static converters. It is illustrated by its application to the sizing of an AC/DC power converter used for connecting electrical generators to DC on-board networks...|$|R
40|$|Abstract:- In today’s {{nanometer}} technology era, more sophicated defect mechanisms {{might exist}} in the manufactured integrated circuits which {{are not covered by}} traditional fault models. In order to ascertain the quality of shipped chips, more realistic fault models should be addressed. In this paper, we propose built-in self-test (BIST) techniques for iterative logic arrays (ILAs) based on realistic sequential cell fault model (RS-CFM). According to the proposed testability conditions and the adopted fault model, exhaustive SIC (single input change) pairs for a cell are applied to each cell in the ILA. The outputs can be propagated to the primary outputs and then observed. The SIC <b>component</b> <b>generator</b> and output response analyzer are also designed as the BIST circuitry. Due to the regularity of ILAs, the hardware overhead of the BIST circuitry is almost negligible. In order to illustrate our approach, a pipelined array multiplier is used as an example. The number of test pairs for completely testing of the array is only 72. Moreover, the BIST overhead to make it delay fault testable is abou...|$|E
40|$|Software Design for Reliability and Reuse (SDRR) is {{a program}} {{generation}} technology based on a core of reusable program transformation tools. This report outlines the top-level design of the tools constructed in the proof-of-concept demonstration project. The SDRR system was designed with goals of simplicity, redundant functionality, incremental development, interoperability, and structure preservation. To meet the requirements specification and accomplish these goals, a suite of tools was developed and integrated into a linear pipeline of program transformations forming a software <b>component</b> <b>generator.</b> We describe the design goals, {{the structure of the}} pipeline, and design issues raised in the development process. Contents 1 Introduction 2 2 Design Goals 3 2. 1 Keep it simple : : : : : : : : : : : : : : : : : : : : : : : : : : : : : : : : : : : : : : : : : 3 2. 2 Minimize number of intermediate representations : : : : : : : : : : : : : : : : : : : : : : 3 2. 3 Redundant functionality : [...] ...|$|E
40|$|In oddball tasks, {{increasing}} {{the time between}} stimuli within a particular condition (target-to-target interval, TTI; nontarget-to-nontarget interval, NNI) systematically enhances N 1, P 2, and P 300 event-related potential (ERP) component amplitudes. This study examined the mechanism underpinning these effects in ERP components recorded from 28 adults who completed a conventional three-tone oddball task. Bivariate correlations, partial correlations and multiple regression explored component changes due to preceding ERP component amplitudes and intervals found within the stimulus series, rather than constraining the task with experimentally constructed intervals, which has been adequately explored in prior studies. Multiple regression showed that for targets, N 1 and TTI predicted N 2, TTI predicted P 3 a and P 3 b, and Processing Negativity (PN), P 3 b, and TTI predicted reaction time. For rare nontargets, P 1 predicted N 1, NNI predicted N 2, and N 1 predicted Slow Wave (SW). Findings show that the mechanism is operating on separate stages of stimulus-processing, suggestive of either increased activation within a number of stimulus-specific pathways, or very long <b>component</b> <b>generator</b> recovery cycles. These results demonstrate {{the extent to which}} matching-stimulus intervals influence ERP component amplitudes and behavior in a three-tone oddball task, and should be taken into account when designing similar studies...|$|E
40|$|Prediction without {{justification}} {{has limited}} applicability. As a remedy, {{we learn to}} extract pieces of input text as justifications [...] rationales [...] that are tailored to be short and coherent, yet sufficient for making the same prediction. Our approach combines two modular <b>components,</b> <b>generator</b> and encoder, which are trained to operate well together. The generator specifies a distribution over text fragments as candidate rationales and these are passed through the encoder for prediction. Rationales are never given during training. Instead, the model is regularized by desiderata for rationales. We evaluate the approach on multi-aspect sentiment analysis against manually annotated test cases. Our approach outperforms attention-based baseline by a significant margin. We also successfully illustrate the method on the question retrieval task. Comment: EMNLP 201...|$|R
40|$|Proposed {{heat-exchange}} scheme boosts {{heat transfer}} per unit area. Key <b>component</b> is <b>generator</b> that fires uniform size droplets of subcooled liquid at hot plate. On impact, droplets {{spread out and}} evaporate almost instantly, removing heat from plate. In practice, many generator nozzles arrayed over evaporator plate...|$|R
40|$|Introduction The Pacific Software Research Center (PacSoft) at the Oregon Graduate Institute of Science & Technology {{is a team}} of {{computer}} science researchers investigating significant new technologies for producing software of high quality and reliability with improved human productivity. Historically, PacSoft has focused on research, particularly {{in the areas of}} program transformations and functional programming languages. In 1993, we contracted with the United States Air Force to use our research expertise to develop a method for creating software <b>component</b> <b>generators.</b> In this project, known as Software Design for Reliability and Reuse (SDRR) [2, 5] we developed a generator for the message translation and validation (MTV) problem domain and compared usage of the generator with usage of a state-of-the-art development method in a controlled human-subjects experiment. This project took 19 calendar months, and required approximately 4. 6 person years of development. These effor...|$|R
40|$|This {{thesis is}} an {{approach}} to investigate the transformation curve of gearing safety. Two types of tooth failures are known to happen to spur gears. There are tooth bending failure (breakage) and tooth surface pitting failure. The focus of this study however {{will be on the}} JGMA and AGMA standards of gearing. Different methods were used to gather relevant data from both standards. JGMA data were gathered from a source in the internet while AGMA data were calculated with the aid of Autodesk Inventor spur gear <b>component</b> <b>generator</b> 2013. The most important data is the allowable torque applied on the gear tooth which can be distinguished into causing either one of the tooth failures mentioned above. Several materials selected from the JGMA and AGMA standards with high value of allowable contact stress compared to its allowable bending stress have a transformation curve from surface durability to bending strength when its torque values are plotted against number of teeth. This allows the forming of a combination threats curve for the material. The curves are useful in determining the maximum torque that can be applied on the spur gear before failures occur. The threat combination curves are then further developed into charts that include other parameters like power, angular velocity and pitch diameters...|$|E
40|$|Details of the High Energy Lightning Simulator (HELS) Test Facility {{for testing}} missiles, motors, ordnance, and {{explosive}} items is described. The HELS Test Facility {{is designed to}} simulate the high current, intermediate current, continuing current, and restrike current components of an idealized direct strike lightning waveform. The HELS Test Facility has been in operation since May, 1988, and consists of four separate capacitor banks used to produce the lightning test components, two steel safety cages and steel barriers for retaining the item under test should it be ignited during testing, an earth covered bunker housing the control/equipment room, a charge/discharge building containing the charging/discharging switching, a remotely located blockhouse from which the test personnel control hazardous testing, and interconnecting cables. Since its construction, a variety of explosive items have been successfully tested. Besides testing, the HELS Test Facility has also been utilized to manufacture an experimental additive for solid propellant material. The restrike current <b>component</b> <b>generator</b> is ideal for exploding metallic wire in a gas filled vessel to create the additive residue. In addition to the HELS Test Facility, two other lightning simulator facilities are available for testing at Redstone Technical Test Center. The Simulated Lightning Effects Test (SLET) Facility is available for testing inert items and explosive items limited to Class 1. 4 explosives. The Transportable Lightning Effects Simulator (TLES) is available for testing at remote locations or at locations other than Redstone Arsenal. I...|$|E
40|$|Extended Abstract High-level {{synthesis}} (HLS) {{has long}} relied on point models for RT-components that assume fixed area and delay values {{for a given}} component style. However, aspect ratio variations alone can result in substantially different area-delay characteristics for a component, and thus may result in large area-delay variations for a complete design composed of {{the same set of}} components by simply changing the aspect ratios and the ensuing feasible floorplans. In this work, we attempt to realistically explore the effects of varying aspect ratios on the area and delay of generic components, {{as well as on the}} area and delay of complete designs generated by HLS using generic components. In particular, we are interested in finding answers to the following questions. Given a particular RT-level component generator: 1. What are the 1 st order factors (parameters) that determine and/or influence the size, composition, and distribution of the &quot;real &quot; design space of a <b>component</b> <b>generator?</b> 2. How would the nature of the design space of individual components (from 1) influence the overall design space of a &quot;typical &quot; complete design composed of several RT components? 3. The main question we wish to address is: are these &quot;point models &quot; of RT-components adequate for characterizing the resulting space of complete design implementations using these Λ All appropriate clearances for the publication of this paper have been obtained, and, if accepted, the authors will prepare the final manuscript in time for inclusion in the Conference Proceedings and will present the paper at the conference. 1 RT-components? In other words, how much penalty in accuracy is incurred by using the &quot;point model &quot; instead of the &quot;comprehensive model&quot;? In order to answer these questions, we performed two sets of extensive experiments. EXPERIMENT 1 : Effect of Aspect Ratio Variation on RT-Components: In the first set of experiments, depicted in Figure 1 (a), we varied the aspect ratios and styles for an individual RT-component and observed the resulting variations in the component's area and delay attributes. The experiments were organized as follows...|$|E
40|$|An {{important}} {{benefit of}} high-level synthesis is rapid design space exploration through examination of different design alternatives. However, such design space exploration is not feasible without fast and accurate area and delay {{estimates of the}} synthesized designs. These estimates must factor in physical design effects and technology-specific information {{in order to achieve}} accuracy. High-level synthesis tools often use abstract, parameterized <b>component</b> <b>generators</b> for describing the synthesized RT design, and thus need to be supported by fast and accurate estimators for these parameterized RTcomponents. Ideally, we would like to obtain the actual area and delay attributes of each component by constructing (or generating) the designs. However, such constructive methods require excessive run times, prohibiting on-line integration with the tasks of scheduling and allocation. In this paper, we describe a fast (constant-time) method for estimating the area and delay of regular-structured g [...] ...|$|R
40|$|The {{design of}} {{excitation}} controllers to improve transient stabilization of power systems {{is a topic}} of renewed interest in the control community. Existence of a state–feedback stabilizing law for multi–machine aggregated reduced network models has recently been established. In this paper we extend this result in two directions: first, in contrast with aggregated models, we consider the more natural and widely popular structure–preserving models that preserve {{the identity of the}} network <b>components</b> (<b>generators,</b> loads and lines) and allow for a more realistic treatment of the loads. Second, we explicitly compute a control law that, under a detectability assumption, ensures that all trajectories converge to the desired equilibrium point, provided that they start and remain in the region where the model makes physical sense. Index Terms Global Nonlinear control, nonlinear differential and algebraic system, nonlinear loads, structure preserving power system, stability. I...|$|R
40|$|Due to {{needs of}} modern radiophysics and plasma {{electronics}} dispersion {{properties of the}} plasma filled waveguide of different geometry are actively studied during the last time. Such type waveguides are utilized as the main <b>component</b> of <b>generators</b> and amplifiers of high frequency electromagnetic waves and guiders of intense charged particle beams [1]. There ar...|$|R
