51|369|Public
50|$|Like all {{the other}} modules of the open TELEMAC-MASCARET system, TOMAWAC has {{the benefit of the}} system's {{powerful}} mesh generation and results display functions. It is also easy to link TOMAWAC and the hydrodynamic or solid transport modules, and to use the same <b>computation</b> <b>grid</b> for various modules (TELEMAC-2D, SISYPHE, TELEMAC-3D, etc.).|$|E
50|$|The {{discretization}} of this {{is typically}} done with either the finite element method or the finite volume method. With the latter, one might also encounter the dual mesh, i.e. the <b>computation</b> <b>grid</b> obtained from connecting the centers of the cells that the initial subdivision into finite elements of the computation domain yielded.|$|E
40|$|A {{prototype}} of a <b>Computation</b> <b>Grid</b> {{is designed to}} assessing the possibility of developing pipeline setup for processing Planck Satellite data. The amount of data collected by the satellite during its sky surveys requires an extremely high computational power both for reduction and analysis. For this reason a Grid environment represents an interesting layout to be considered when processing those data...|$|E
5000|$|... #Subtitle level 3: Verification {{of remote}} <b>computation</b> for <b>grid</b> {{computing}} ...|$|R
40|$|A {{collection}} of command-line programs for modeling the gravitational potential, acceleration, and gradient tensor. Tesseroids supports models and <b>computation</b> <b>grids</b> in Cartesian and spherical coordinates. Official website and documentation: [URL] The first ever release of Tesseroids. This initial version {{was made in}} Python with very little optimization. I'm not sure it will work with {{the current version of}} numpy and scipy...|$|R
40|$|This paper {{shows that}} {{flexibility}} of workflow executions, i. e., {{the ability to}} deviate from a given model on the fly and during execution, is crucial for a wide applicability of workflow management technology in computing grids. Since flexibility concepts for workflows have been elaborated extensively in conventional business-oriented domains, we show how to reuse and adapt them for workflow management in <b>computation</b> <b>grids.</b> 1...|$|R
40|$|Abstract. The new {{paradigm}} of distributed <b>computation,</b> <b>grid</b> computing, {{has given rise to}} a large amount of research on resource scheduling. Unlike the distributed <b>computation,</b> <b>grid</b> computing uses heterogeneous resources, for what grid computing entails new challenges as the adaptation of parallel algorithms before developed for homogeneous resources cluster to the dynamic and heterogeneous resources. In this paper we present a dynamic-balanced scheduler for grid computing that solves two typical kinds of problems of grid computing, using for them the cycles of some resources of the grid. The first problem is based on iterative tasks that usually appear in optimization problems. The second problem is a directed acyclic graph (DAG) problem. Experimental results using dynamic-balanced scheduler show {{that it is possible to}} obtain an improved use of the resources in the grid. This strategy enables to adapt the length of a task to the computing capacity of each resource at any given moment. Furthermore, this scheduling strategy enables to execute all the tasks in a shorter time. Key-Words:- Grid computing, dynamic-balanced scheduler, genetic algorithm, optimization problem. ...|$|E
40|$|Abstract. Numerical method using HI and HOH meshing {{combined}} B- L turbulent {{model and}} S- A turbulent model separately {{based on the}} Rotor 37 compressor Rotor {{was applied to the}} steady flow. results on pressure characteristic curve, stall point forecast etc were compared with related experimental data. This paper discussed calculation precision influenced by the turbulence model and numerical <b>computation</b> <b>grid.</b> This numerical investigation was basis for subsequent compressor internal flow field study...|$|E
40|$|We {{describe}} a two-dimensional shallow water model whose initial implementation simulates flows in the San Francisco Bay and Sacramento-San Joaquin Delta. This model, called REALM, {{is based on}} a Cartesian grid, embedded boundary discretization of the shallow water equations. We employ parallel computation and adaptive mesh refinement for rapid <b>computation.</b> <b>Grid</b> generation from digital elevation models faithfully represents the shoreline and the use of implicit functions and constructive solid geometry permits the representation of structures such as gates. ...|$|E
40|$|A {{collection}} of command-line programs for modeling the gravitational potential, acceleration, and gradient tensor. Tesseroids supports models and <b>computation</b> <b>grids</b> in Cartesian and spherical coordinates. Official website and documentation: [URL] Changes to version 1. 1. 1 : Minor release for bug fixes: * BUG fix: Wrong results when calculating fields below a prism in Cartesian coordinates. See the full release notes ([URL] and documentation ([URL] for more information...|$|R
40|$|Algebraic {{procedures}} are described for the automatic generation of structured, single-block flow <b>computation</b> <b>grids</b> for relatively simple configurations (wing, fuselage, and fin). For supersonic flows, a quasi two-dimensional grid for Euler-marching codes is developed, and some sample results in graphical form are included. A type of grid for subsonic flow calculation is also described. The techniques are algebraic and {{are based on}} a generalization of the method of transfinite interpolation...|$|R
40|$|A {{collection}} of command-line programs for modeling the gravitational potential, acceleration, and gradient tensor. Tesseroids supports models and <b>computation</b> <b>grids</b> in Cartesian and spherical coordinates. Official website and documentation: [URL] This {{was the final}} version of the software that accompanied my bachelor's thesis (available at [URL] and [URL] The parts of the code that are described in the thesis reflect this version. This version was made in Python using the "scipy. weave" package to make code faster...|$|R
40|$|Particle {{localization}} {{is commonly}} encountered {{in many areas}} of numerical computations. A method of tracing particles in irregular unstructured grid system is presented. The method introduced an additional set of indexical grid system to overlap the original irregular unstructured computational grid system. The particle tracing was first conducted in the indexical grid system to obtain which indexical grid cell the particle lies in, and then was carried out among the original irregular <b>computation</b> <b>grid</b> cells which were included in this localized indexical grid cell. The new method is easy to realize in numerical calculations and can apparently improve the efficiency of particle localization...|$|E
40|$|In {{this paper}} we review {{simulation}} methods, which address suspension flows at different length scales. Taking the multiscale problem of confined suspension flow in fractionation and sorting applications as a guiding example, we discuss these numerical methods {{for use in}} a multiscale simulation framework. We have classified the methods in terms of dimensionless numbers, governing the physics of confined suspension flows, and the resolution of particles on the <b>computation</b> <b>grid.</b> From our literature review, we conclude, that for suspension flows at Peclet numbers larger than unity, Lattice Boltzmann is a good method to implement for all levels of the multiscale simulation framewor...|$|E
30|$|It is {{proposed}} to use 3 -D CFD simulations {{to create a}} 1 -D law based on a lookup table and a 4 -D Kriging interpolation method. Code Saturne [2] {{has been used to}} simulate laminar flows and ANSYS Fluent for turbulent flows. Some common simulations have been completed on both software for turbulent cases and have given similar results, which justifies that they can both be used to model the phenomenon. They have been computed on the Mésocentre de Calcul Intensif Aquitain (MCIA) and Irstea <b>computation</b> <b>grid</b> respectively. The Jade supercomputer of Centre Informatique National de l’Enseignement Supérieur (CINES) has been used to assure the validity of the grid convergence.|$|E
40|$|Abstract — This paper {{presents}} {{an application of}} a physicsbased framework for distributed control of autonomous vehicles. The autonomous swarm uses local information to self-organize into dynamic sensing and <b>computation</b> <b>grids</b> during localization {{of the source of}} a toxic plume. Using physics of fluid flow we develop a new plume-tracing algorithm, and then use computational fluid dynamics simulations to show that the new approach outperforms the leading biomimetic competitors for this task. Index Terms — plume tracing, sensor networks, swarms. I...|$|R
40|$|Verification {{is made of}} the {{synoptic}} fields, sea-level pressure, precipitation rate, 200 mb zonal {{wind and}} the surface resultant wind generated by {{two versions of the}} Goddard Institute for Space Studies (GISS) climate model. The models differ regarding the horizontal resolution of the <b>computation</b> <b>grids</b> and the specification of the sea-surface temperatures. Maps of the regional distributions of seasonal means of the model fields are shown alongside maps that show the observed distributions. Comparisons of the model results with observations are discussed and also summarized in tables according to geographic region...|$|R
40|$|Abstract. We {{consider}} a physical model of ultrafast evolution of an initial elec-tron distribution in a quantum wire. The electron evolution {{is described by}} a quantum-kinetic equation accounting for the interaction with phonons. A Monte Carlo approach has been developed for solving the equation. The corresponding Monte Carlo algorithm is NP-hard problem concerning the evolution time. To obtain solutions for long evolution times with small stochastic error we combine both variance reduction techniques and distributed <b>computations.</b> <b>Grid</b> technolo-gies are implemented due to the large computational efforts imposed by the quan-tum character of the model. ...|$|R
40|$|Market-based {{resource}} management {{is becoming an}} emerging issue as the utilization of Grid computing is growing rapidly, particularly in the business field. In this paper, we provide a new Imprecise <b>Computation</b> <b>Grid</b> application model for flexible market-based {{resource management}}. Each job in a Grid application has two parts: mandatory part for the minimum quality and optional part for additional computations. This application model {{can be applied to}} QoS-related Grid applications and used in adaptive resource management. We also provide scheduling algorithms for resource allocation of IC Grid applications. Simulation results show that better utility is achieved when users specify both mandatory and optional requirements...|$|E
40|$|The bubbly cavitating. ow {{generated}} by a lithotriptor is computed using an ensemble averaged two-phase. ow model. The time-dependent, compressible. ow computation {{is divided into two}} separate calculations: the refocusing of a spherical pulse by an ellipsoidal re. ector, and the evolution of the steepening wave including the cavitating bubble cloud it generates. The. rst computation is single phase and is done in prolate spheroidal coordinates in order to have the surface of the ellipsoidal re. ector aligned with the <b>computation</b> <b>grid.</b> The output of this simulation is then fed to the two-phase cylindrical coordinates domain. Preliminary results and qualitative comparison to experimental observation are presented...|$|E
40|$|A {{three-dimensional}} panel {{method was}} used to compute the aerodynamic loads on a large-scale, powered wind tunnel model. The size of the <b>computation</b> <b>grid</b> was selected such that turnaround times, on present computers remained satisfactory. With this constraint, the STOL aircraft configuration was modeled and the capabilities and limitations of the prediction method were investigated. After this study, a similar numerical model was established for a forward-swept-wing aircraft configuration which is planned for large-scale, low-speed testing. The resulting aerodynamic-load predictions are discussed and will be utilized, together with the future experimental results, to obtain a broader validation of this method {{as well as to}} reduce the necessary size of the matrix of the test parameters...|$|E
40|$|The lattice Boltzmann {{method is}} a {{simulation}} technique in computational fluid dynamics. In its standard formulation, it {{is restricted to}} regular <b>computation</b> <b>grids,</b> second-order spatial accuracy, and a unity Courant-Friedrichs-Lewy (CFL) number. This paper advances the standard lattice Boltzmann method by introducing a semi-Lagrangian streaming step. The proposed method allows significantly larger time steps, unstructured grids, and higher-order accurate representations of the solution to be used. The appealing properties of the approach are demonstrated in simulations of a two-dimensional Taylor-Green vortex, doubly periodic shear layers, and a three-dimensional Taylor-Green vortex...|$|R
40|$|A {{solution}} adaptive scheme with directional multigrid for viscous <b>computations</b> on hybrid <b>grids</b> is presented. The {{flow domain}} is discretized with prismatic and tetrahedral elements. The use of hybrid grid enables the solver to compute accurate solutions with relatively less memory requirement than a fully unstructured grid. Further, employing prisms to discretize the full Navier-Stokes equations and tetrahedra for Euler equations renders the solver equation-adaptive. A hybrid grid adaptation scheme that implements h-refinement and redistribution strategies is developed to provide optimum meshes for viscous flow <b>computations.</b> <b>Grid</b> refinement is a dual adaptation scheme that couples 3 -D, isotropic division of tetrahedra and 2 -D, directional division of prisms. The grid adaptive solver yields accurate results {{as compared to}} a globally refined grid with reduced computing resources. A directional viscous multigrid scheme is developed to accelerate convergence to steady-state. The method is s [...] . ...|$|R
40|$|A {{collection}} of command-line programs for modeling the gravitational potential, acceleration, and gradient tensor. Tesseroids supports models and <b>computation</b> <b>grids</b> in Cartesian and spherical coordinates. Official website and documentation: [URL] Changes to version 1. 2. 1 : 	Binaries for Windows 64 bit {{are now available}} for download as well. 	Validate order of boundaries for input tesseroids. Errors if boundaries are switched (e. g, W > E). 	Ignore tesseroids with zero volume from the input file (i. e., W == E, S == N, or top == bottom). These elements can cause crashes because of infinite loops during adaptive discretization...|$|R
40|$|Many {{interesting}} {{fluid dynamics}} problems require {{large amounts of}} computing time for their numerical simulations. Therefore, many researchers have tried to develop parallel numerical algorithms that solve such problems in {{a reasonable amount of}} time. When parallel applications that suit for homogenous cluster run on computational Grid system. It may have less efficient due to poorly managed workload in <b>computation</b> <b>Grid</b> system. Since the nature of computational Grid system that is a heterogeneous computing environment. Thus, the selection of a set of machines to run parallel CFD code is very crucial to the performance attainable from the code. In this paper presents a finding the best set of machines in computational Grid system to allocate the parallel CFD tasks using genetic-algorithm...|$|E
40|$|Wave {{generation}} solvers using Higher Order Spectral Method (HOS) {{have been}} validated and {{developed over the}} years. HOS solves nonlinear wave propagation in open sea (HOS-Ocean) and in numerical wave tank (HOS-NWT) with low computation time comparing with other nonlinear solvers. HOS solvers are released as open-source codes {{under the terms of}} GNU General Public Licence (GPLv 3). Nonlinear irregular wave generation in computational fluids dynamic (CFD) solvers becomes important recently in naval fiels to better estimate the loads on offshore structure. The conventional linear superposition methods imply a long computational time for wave generation and the simulation is made almost impossible without having enough computational power. And if the method is based on linear wave theory, there is also question on occurence of nonlinear phenomenon and the interaction between waves as the simulation goes. Therefore dedicated nonlinear wave solvers with high computational speed are needed. Grid 2 Grid is developed as a wrapper program of HOS to generate wave fields from the results of HOS <b>computation.</b> <b>Grid</b> 2 Grid reconstructs wave fields of HOS with inverse fast Fourier transforms (FFTs) and uses a quick spline module, the nonlinear wave fields can be fastly reconstructed for arbitrary simulation time and space. The nonlinear wave simulation is then possible for a particular position and time where specific non linear phenomenon occur. Grid 2 Grid is developed as a wrapper program of HOS to generate wave fields from the results of HOS <b>computation.</b> <b>Grid</b> 2 Grid reconstructs wave fields of HOS with inverse fast Fourier transforms (FFTs) and uses a quick spline module, the nonlinear wave fields can be fastly reconstructed for arbitrary simulation time and space. The nonlinear wave simulation is then possible for a particular position and time where specific non linear phenomenon occur. Comment: 45 page...|$|E
40|$|Clusters are {{increasingly}} interconnected to form multi-cluster systems, which are becoming popular for scientific <b>computation.</b> <b>Grid</b> users often submit their {{applications in the}} form of workflows with certain Quality of Service (QoS) requirements imposed on the workflows. These workflows detail the composition of Grid services and the level of service required from the Grid. This paper addresses workload allocation techniques for Grid workflows. We model a resource within a cluster as a G/G/ 1 queue and minimise failures (QoS requirement violation) of jobs by solving a mixed-integer non-linear program (MINLP). The novel approach is evaluated through an experimental simulation and the results confirm that the proposed workload allocation strategy not only provides QoS guarantee but also performs considerably better in terms of satisfying QoS requirements of Grid workflows than reservation-based scheduling algorithms. © 2006 ACM...|$|E
40|$|The {{last few}} years have seen a {{substantial}} increase in the geometric complexity for 3 D flow simulation. In this paper we describe the challenges in generating <b>computation</b> <b>grids</b> for 3 D aerospace configuations and demonstrate the progress made to eventually achieve a push button technology for CAD to visualized flow. Special emphasis is given to the interfacing from the grid generator to the flow solver by semi-automatic generation of boundary conditions during the grid generation process. In this regard, once a grid has been generated, push button technology of most commercial flow solvers has been achieved. This will be demonstrated by the ad hoc simulation for the Hopper configuration...|$|R
40|$|Abstract—In the {{literature}} of ad-hoc sensory networks, a well-studied problem is that of achieving full sensory coverage within a region according to the boolean model of coverage. We introduce a new technique to achieve full coverage that anticipates bounded random deviations of resultant positions of some or all sensors from their designated positions. Various scenarios of placement for arbitrary arrangements of sensors are presented, and illus-trated using two widely used grid arrangements. Quantitative results linking radius of coverage, grid granularity and tolerance for inexact placement are provided for triangular and square grid arrangements. Finally, we elaborate on various practical applications cutting across the aforementioned scenarios and arrangements. Index Terms—Sensor networks, deployment, coverage, geomet-rical problems and <b>computations,</b> <b>grid</b> lattice arrangements. I...|$|R
40|$|Grid {{computing}} {{has become}} increasingly popular {{with the growth of}} the Internet, especially in large-scale scientific <b>computation.</b> Computational <b>Grids</b> are characterized by their scale, their heterogeneity, and their unreliability, making the creation of Grid software quite a challenge. Security concerns make the deployment of Grid infrastructure similarly daunting...|$|R
40|$|By {{analyzing}} the related literatures {{on the earth}} tessellation grid (ETG) in recent 10 years, the research achievements in this field are systematic reviewed in four aspects, i. e. the earth subdivision modeling (include quadrangle subdivision, equal-area subdivision and 3 D subdivision), encoding computation (include hierarchical encoding computation, filling curve encoding computation and integer coordinate encoding <b>computation),</b> <b>grid</b> quality assessment (include evaluation criteria, evaluation factors, and propagation trend in diffferent levels) and typical applications (include government agency applications,business software applications and industry applications). The structural characteristics, applicable models and their shortcomings in the different grid models are given in details. Finally, some advanced academic problems in the ETG are given based on the completeness of basic theory, the efficiency of grid computing, and the reliability of grid quality...|$|E
40|$|For {{supporting}} the grid computing in dynamic network environment composed of multi-clusters, a continuance parallel <b>computation</b> <b>grid</b> (CPCG) is proposed in this paper. A series of formal definitions, {{such as the}} CPCG architecture, the dynamic network environment (DNE), the management agent system, the independent computing agents (ICA) which support the traditional computing (TC), the cooperation computing team (CCT) which supports the data parallel computing (DPC), and their relations are given. Through DPC, TC, and the migration mechanism, the continuance data parallel computing (CDPC) was constructed. The dynamic learning method, the fuzzy partition technique for the logical computer cluster on which CCT runs, the stage checkpoint mechanism and the migration process are studied. CPCG computing process is described. The experiment results show that CPCG resolves effectively the problems of optimization use of resources in DNE. It can be fit for grid computing. </p...|$|E
40|$|AbstractRecently new {{classes of}} directed, acyclic graphs with n vertices, namely Am-orders where m {{is a larger}} than 1 integer, have been presented. These classes contain the {{interval}} orders, but are incomparable to trees. Here it is shown that the complexity of recognizing the Am-order class is O(n 9), hence independent of m. However, recognizing if a graph is in Am-orders for all m might be done in O(n 3) time. These classes have an application in the preemptive multiprocessor scheduling problem. This problem is NP-hard {{if the number of}} processors is arbitrary but open for a fixed number of processors m. When the task graph is an Am-order, the problem is polynomial on m processors. Hence it is interesting to recognize such task graphs in a polynomial, independent of m time, especially when the number of processors is large, for instance on a <b>computation</b> <b>grid...</b>|$|E
40|$|We {{describe}} an adaptive hp-refinement local finite element procedure for the parallel solution of hyperbolic systems of conservation laws on rectangular domains. The local finite element procedure utilizes spaces of piecewise-continuous polynomials of arbitrary degree and coordinated explicit Runge-Kutta temporal integration. A solution limiting procedure produces monotonic solutions near discontinuities while maintaining high-order accuracy near smooth extrema. A modified tiling procedure maintains processor load balance on parallel, distributed-memory MIMD computers by migrating finite elements between processors in overlapping neighborhoods to produce locally balanced <b>computations.</b> <b>Grids</b> {{are stored in}} tree data structures, with finer grids being offspring of coarser ones. Within each grid, AVL trees simplify the transfer of information between neighboring processors and the insertion and deletion of elements as they migrate between processors. Computations involving Burger [...] ...|$|R
40|$|The Grid is {{emerging}} as a specialized distributed computation standard of unprecedented power and scope, promising to turn commodity networks and computers into commodity <b>computation.</b> The <b>Grid</b> concept has already been proven useful for science in many applications [1] [2] and substantial infrastructure already exists [3] or is being planne...|$|R
5000|$|In 1997, Active Tools commercialised Nimrod, a {{tool for}} {{performing}} parameterised <b>computations</b> in a <b>grid,</b> as EnFuzion. EnFuzion is now owned and distributed by Axceleon.|$|R
