44|93|Public
5000|$|Pervasive PSQL Client is {{designed}} for use with Pervasive PSQL Server and Pervasive PSQL Vx Server in a <b>client-server</b> <b>network.</b>|$|E
5000|$|W. Wen and B. Mukherjee, [...] "Design and Analysis of a WDM <b>Client-Server</b> <b>Network</b> Architecture," [...] Invited Book Chapter in Encyclopedia of Telecommunications, Ed: J. G. Proakis, Wiley-Interscience Publishers, pp. 650-657, 2001.|$|E
5000|$|Pervasive PSQL Server edition is {{intended}} for configurations that have at minimum ten concurrent connections and it is scalable up to thousands of concurrent network users in <b>client-server</b> <b>network</b> and web-based applications on the enterprise level.|$|E
5000|$|... #Subtitle level 2: Decreasing {{relevance}} in post-NT <b>Client-Server</b> <b>Networks</b> ...|$|R
40|$|The {{client-server}} model {{is fast becoming}} {{the most common form}} of network architecture used in data communications. It’s popularity can be seen in the phenomenal expansion of the World Wide Web. It is essential that students understand the {{client-server model}}, and that they learn how to design <b>client-server</b> <b>networks</b> and to analyze their performance. This paper describes a project to achieve this via problem solving sessions using simulation to facilitate understanding of the design and performance analysis of <b>networks</b> using a <b>client-server</b> architecture. Students will be able to gain experience designing <b>client-server</b> <b>networks</b> and testing their designs for efficiency and expandability...|$|R
50|$|<b>Client-server</b> <b>networked</b> play. An {{updated version}} {{may well have}} been the first {{client-server}} game, with workstations running the client connecting to a mainframe running a server program. This version could be played across the ARPANET, in 1977.|$|R
5000|$|In 1993, MCET was tasked by the Massachusetts Education Reform Act of 1993 with {{leading the}} {{implementation}} of Mass Ed OnLine, to provide a statewide <b>client-server</b> <b>network</b> with full access to the internet. [...] Through this program, MCET acted as a low-cost Internet Service Provider to school districts {{as well as providing}} home access to K-12 teachers in Massachusetts.|$|E
50|$|Large {{numbers of}} nodes making {{demands on the}} same server {{simultaneously}} can slow down everyone's experience. However, this can be mitigated by installing large amounts of RAM on the server (which speeds up read operations by improving caching performance), by adding more servers (which distributes the I/O workload), or by adding more disks to a RAID array (which distributes the physical I/O workload). In any case {{this is also a}} problem which can affect any <b>client-server</b> <b>network</b> to some extent, since, of course, fat clients also use servers to store user data.|$|E
50|$|Quake II uses an {{improved}} <b>client-server</b> <b>network</b> model introduced in Quake. The game code of Quake II, which defines all the functionality for weapons, entities, and game mechanics, {{can be changed}} in any way because id Software published the source code of their own implementation that shipped with the game. Quake II uses the shared library functionality of the operating system to load the game library at run-time—this is how mod authors are able to alter the game and provide different gameplay mechanics, new weapons, and much more. The full source code to Quake II version 3.19 was released {{under the terms of}} the GNU GPL on December 22, 2001. Version 3.21 followed later. A LCC-friendly version was released on January 1, 2002 by a modder going by the name of Major Bitch.|$|E
50|$|In {{relation}} to post-MS Windows 2000 / NT, <b>client-server</b> based <b>networks,</b> NetBIOS is effectively becoming a legacy protocol. NetBIOS was also developed for non-routable LANs. In most post year 2000 networks operating Windows 2000 or later, NetBIOS effectively offers backwards compatibility for network devices that predate compatibility with DNS. A {{central role of}} NetBIOS in <b>Client-Server</b> <b>networks</b> (and also those networks that have networked peripheral hardware that also predates DNS compatibility) is to provide name resolution to computers and networked peripherals. Further, it allows for such networked hardware to be accessed and shared and also enables the mapping and browsing of network folders, shares and shared printers, faxes, etc. In its primary capacity, it acts as a session-layer protocol transported over TCP/IP to provide name resolution to a computer and shared folders. To that end, Windows 2000-based, <b>Client-Server</b> <b>networks</b> - and later - do not require this insecure means of name resolving and addressing or navigating of network shares.|$|R
40|$|Abstract — Peer-to-Peer (P 2 P) {{networks}} are self-configuring networks with minimal or no central control. P 2 P {{networks are}} more vulnerable to dissemination of malicious or spurious content, malicious code, worms, viruses, and Trojans than the traditional <b>client-server</b> <b>networks,</b> due to their unregulated and unmanaged nature. Policing P 2 P networks is extremely difficult due to the decentralized and ad hoc nature of these networks. Besides, P 2 P networks, like the Internet, are physically spread across geographic boundaries and hence are subject to variable laws. The conventional mechanisms for generating trust and protecting <b>client-server</b> <b>networks</b> cannot be used for pure 1 peer to peer networks. This is because the trusted central authority used in the conventional <b>client-server</b> <b>networks</b> is absent in peer to peer networks. We propose a self organizing Trust model that aims to decrease malicious activity in a peer to peer system by establishing trust relations among peers in their proximity. Peers {{do not try to}} collect trust information from all other peers. Each peer in P 2 P develops its own local view of trust about the peers interacted in the past. In this way, good peers form dynamic trust groups in their local proximity and can isolate malicious peers. Since peers generally tend to interact with a small set of peers, forming trust relations in their proximity of peers helps to mitigate attacks in a P 2 P system...|$|R
50|$|Market {{acceptance}} of DEC Alpha computers and chips had been {{slower than the}} company had hoped, even though Alpha's sales for the quarter estimated at $275 million were up significantly from $165 million in the December quarter. DEC had also made a strong push into personal computers and workstations, which had even lower margins than Alpha computers and chips. Also, DEC was playing catchup with its own Unix offerings for <b>client-server</b> <b>networks,</b> as it long emphasized its own VMS software, while corporate computer users based their <b>client-server</b> <b>networks</b> on the industry-standard Unix software (of which Hewlett Packard {{was one of the}} market leaders). DEC's problems were similar to that of larger rival IBM, due to the fundamental shift in the computer industry that made it unlikely that DEC could ever again operate profitably at its former size of 120,000 employees, and while its workforce had been reduced to 92,000 people many analysts expected {{that they would have to}} cut another 20,000.|$|R
5000|$|Tim Berners-Lee's {{vision for}} the World Wide Web was close to a P2P network in that it assumed each user of the web would be an active editor and contributor, {{creating}} and linking content to form an interlinked [...] "web" [...] of links. The early Internet was more open than present day, where two machines connected to the Internet could send packets to each other without firewalls and other security measures. This contrasts to the broadcasting-like structure of the web as it has developed over the years. [...] As a precursor to the Internet, ARPANET was a successful <b>client-server</b> <b>network</b> where [...] "every participating node could request and serve content." [...] However, ARPANET was not self-organized, and it lacked the ability to [...] "provide any means for context or content-based routing beyond 'simple' address-based routing." ...|$|E
40|$|This project {{presents}} {{the design and}} development of a prototype for controlling the illumination and security of a smart home {{through the use of}} a <b>client–server</b> <b>network</b> model. For this we developed an application in Visual Basic for the client–server communication using TCP/IP network protocol. Key words...|$|E
40|$|Processing {{digital video}} {{directly}} in the compressed domain has many advantages in terms of storage efficiency, speed, and video quality. We have developed a compressed video editing and parsing system (CVEPS) with advanced video indexing and manipulation functions. The video parsing tools support automatic extraction of key visual features, e. g., scene cuts, transitional effects, camera operations (zoom/pan), shape and trajectories of prominent moving objects. These visual features are used for efficient video indexing, retrieval and browsing. The editing tools allow users to perform useful video compositing functions and special visual effects typically seen in video production studios. We contrast our compressed-domain approach with traditional decode-process-reencode approach with quantitative and/or qualitative performance comparison. We also present a <b>client-server</b> <b>network</b> based CVEPS implementation. KEYWORDS Compressed domain video manipulation, <b>client-server</b> <b>network</b> based video editing, video content analysis, video indexing. 1...|$|E
40|$|This unit is an {{overview}} of how GIS are being developed to run within the Internet and Worldwide Web, as well as within private intranets. Included is a discussion of strategies for developing GIS functionality within <b>client-server</b> <b>networks.</b> The overview discusses the rationale behind these strategies, but does not provide programming solutions. Nor does it address the details of designing a user interface for a Web GIS application...|$|R
50|$|Web servers are {{typically}} - but not exclusively - {{the first point}} of impact for internet-based attack vectors. Local area network (LAN) ports, by design, advertise information and consequently often {{become the focus of}} the most attacks upon <b>Client-Server</b> <b>networks.</b> Many services that are vulnerable to such means of attack, can - dependent on organizational impact to work-flows - safely be disabled. This is particularly true of network services that are inherently intranet-centric.|$|R
40|$|Abstract —In this paper, {{we present}} an {{analytic}} approach {{to evaluate the}} reactivity of <b>client-server</b> <b>networked</b> automation systems (NAS). Both deterministic and probabilistic analyses are provided while modeling the NAS using Timed Event Graphs (TEG). Since many results {{with regard to the}} deterministic approach have already been published, we recall only its main steps that prove useful while exposing the probabilistic method. Thereby, we provide the density of probability distribution of the response time (or reactivity) using the probability densities of the local delays, experienced at the different stages of the NAS. Furthermore, a case study is presented to compare {{the results of the study}} to measures taken from a real platform. Note to Practitioners—As a matter of fact, <b>client-server</b> <b>networked</b> automation systems are largely used in industry and therefore the efforts to deal with their performances evaluation are necessary. In the current work, we propose an analytic approach to evaluate their reactivity. Analytic formulae are provided to calculate directly and deterministically the bounds of response time along with others to assess its probability density distribution. Moreover, the results of these formulae turn out to be complying with a lot of experimental measurements carried out under different circumstances...|$|R
40|$|TCP/IP {{protocol}} processing {{has become}} the dominant overhead in network servers. With the advent of memory-mapped SAN technologies such as VIA and In niBand, the intra-server transport protocols have been made extremely ecient. Our solution to reduce the <b>client-server</b> <b>network</b> processing overhead is to ooad the TCP/IP protocol from the application hosts to dedicated processors, nodes or intelligent network interface. We called this architecture a TCP Server...|$|E
40|$|Distributive {{processing}} of electronic records archives (ERA) {{could be a}} niche for mobile agents to outrival established <b>client-server</b> <b>network</b> computing methods. Archival records are usually very large computer files that consume a large bandwidth when they are transferred from one networked computer to another. This paper describes an ideational ERA distributive processing scenario in which advantages of using mobile agents or knowledgeable objects could outweigh disadvantages and overcome some of the hurdles that are facing mobile agents...|$|E
40|$|The {{goal of this}} bachelor's thesis Network game: Destroy the {{submarine}} is to analyze and implement network architecture and solve all the problems connected with it. In final version, the created program uses <b>client-server</b> <b>network</b> architecture. Both subjects are communicating with complex network protocol. For effective data the virtual connection over UDP protocol is established. Minor part of this study solves graphical problems and received data displaying. For this purpose, there are different frequenc ies used for data handlings and techniques that provide better game experience...|$|E
5000|$|... #Subtitle level 2: <b>Client-server</b> {{model and}} <b>network</b> {{transparency}} ...|$|R
40|$|Private Set Intersection {{allows a}} client to privately compute set {{intersection}} with the collaboration of the server, {{which is one}} of the most fundamental and key problems within the multiparty collaborative computation of protecting the privacy of the parties. In this paper, we first present a cheat-sensitive quantum scheme for Private Set Intersection. Compared with classical schemes, our scheme has lower communication complexity, which is independent of the size of the server 2 ̆ 7 s set. Therefore, it is very suitable for big data services in Cloud or large-scale <b>client-server</b> <b>networks...</b>|$|R
40|$|International audienceIn this paper, {{we present}} an {{analytic}} approach {{to evaluate the}} reactivity of <b>client-server</b> <b>networked</b> automation systems (NAS). Both deterministic and probabilistic analyses are provided while modeling the NAS using Timed Event Graphs (TEG). Since many results {{with regard to the}} deterministic approach have already been published, we recall only its main steps that prove useful while exposing the probabilistic method. Thereby, we provide the density of probability distribution of the response time (or reactivity) using the probability densities of the local delays, experienced at the different stages of the NAS. Furthermore, a case study is presented to compare {{the results of the study}} to measures taken from a real platform...|$|R
40|$|The {{real-time}} {{system uses}} a recurrent neural network (RNN) with associative memory {{for training and}} recognition. This study attempts to use associative memory to apply pattern recognition (PR) technology to the real-time pattern recognition of engineering components in a web-based recognition system with a <b>Client-Server</b> <b>network</b> structure. Remote engineers can draw {{the shape of the}} engineering components using the browser, and the recognition system then searches the component database via the Internet. Component patterns are stored in the database system considered here. Moreover, the data fields of each component pattern contain the properties and specifications of that pattern, except in the case of engineering components. The database system approach significantly improves recognition system capacity. The recognition system examined here employs parallel computing, which increases system recognition rate. The recognition system used in this work is an Internet-based, <b>client-server</b> <b>network</b> structure. The final phase of the system recognition applies database matching technology to processing recognition, and can solve the problem of spurious states. The system considered here is implemented in the Yang-Fen Automation Electrical Engineering Company as a case study. The experiment is continued for four months, and engineers are also used to operating the web-based pattern recognition system. Therefore, the cooperative plan described above is analysed and discussed here...|$|E
40|$|This bachelor's thesis {{describes}} {{the design and}} implementation of an application that allows to use a mobile device running the Google Android operating system as a wireless touchpad and keyboard to control a computer running the Linux operating system. It works on the standard <b>client-server</b> <b>network</b> model. The mobile device connects to the computer network via a wireless WiFi network interface. For {{the development of the}} individual components were used Java and C++ programming languages. The thesis also deals with the testing of the application and possibilities for its further development...|$|E
40|$|Access {{control in}} network file systems relies on {{primitive}} mechanisms like Access Control Lists and permission bits, {{which are not}} enough when operating in a hostile network environment. Network middleboxes, e. g., firewalls, completely ignore file system semantics when defining policies. Therefore, implementing simple context-aware access policies requires modifications to file servers and/or clients, which is impractical. We present FileWall, a network middlebox that allows administrators to define context-aware access policies for file systems using both the network context and the file system context. FileWall interposes on the <b>client-server</b> <b>network</b> path and implements administrator defined policies through message transformation without modifying eithe...|$|E
40|$|Abstract – {{peer-to-peer}} architectures derives to a {{large extent}} from their ability to function, scale and selforganize {{in the presence of a}} highly transient population of nodes, network and computer failures, without the need of a central server, Peer-to-peer networks are capable of being wounded to peers who cheat, propagate malicious code, leech on the network, or simply do not cooperate. The traditional security techniques developed for the centralized distributed systems like <b>client-server</b> <b>networks</b> are insufficient for P 2 P networks by the virtue of their centralized nature. The absence of a central authority in a P 2 P network poses unique challenges for identity management in the network. These challenges include Reputation of the peers, secure directory data management, Sybil attacks...|$|R
40|$|Abstract: Peer-to-peer (P 2 P) {{networks}} {{are exposed to}} peers who fake, advertise malign code, or peers who won’t contribute. The classic security techniques like <b>client-server</b> <b>networks</b> are not enough for Peer-to-Peer networks because of its centralized nature. BloomCast is a full-text revival scheme which is used in unstructured P 2 P networks. It duplicates Bloom Filters rather than duplicating the documents among the network. BloomCast greatly minimizes the communication cost needed for duplication. But the main disadvantage {{is that it is}} vulnerable to malicious peers. In the proposed method self certification technique is used. Self-certification removes the need of a centralized system for sending the identities. The Self Certification mechanism helps to identify the malicious content and makes the search more effective...|$|R
40|$|In this paper, we {{proposed}} an unconditionally secure quantum Private Set Intersection Cardinality (PSI-CA) protocol. Compared with classical PSI-CA protocols, the proposed protocol can dramatically reduce the communication complexity, because it only requires O(1) communication cost, which is fully {{independent of the}} size of the sets. Furthermore, based on the proposed quantum PSI-CA protocol, we constructed a novel anonymous authentication scheme. This scheme can not only achieve two basic secure goals: secure authentication and anonymity, but can also dynamically update the authorized clients. When revoking any authorized client or adding a new client, it only needs to simply compute several set operations without any complex cryptographic operation, and thus it is very suitable for applications in some dynamic environments, e. g., large-scale <b>client-server</b> <b>networks...</b>|$|R
40|$|In this paper, {{wireless}} 802. 11 ac <b>client-server</b> <b>network</b> {{with open}} system (no security) and WPA 2 (Wi-Fi Protected Access 2) security is investigated. The results shows that, by implementing WPA 2 security, TCP throughput of IPv 4 and IPv 6 on average decreased by 16. 79 % and 10. 22 % respectively. Throughput for UDP is decreased by 18. 07 % and 12. 99 % for IPv 4 and IPv 6 respectively. For both IPv 4 and IPv 6, WPA 2 wireless security implementation also increases the {{round trip time}} (RTT) and CPU Utilization for both TCP and UDP...|$|E
40|$|Abstract—The {{advantage}} of wormhole switching in interconnection networks is its distance insensitivity of communication latency under light traffic. However, this property vanishes when traffic is heavy. We consider {{the performance of}} a linear wormhole-switched network used as a real-time <b>client-server</b> <b>network.</b> Messages generated by client hosts are periodically transmitted to a central server within a predicatable delivery time. We present two algorithms for generating feasible message transmission schedules and compare their performances. It is shown that trade-off exists between quality of schedules and the network utilization. Several open problems are posed. Index Terms — interconnection network, real-time ap-plication, wormhole switching, pipelining, client-server computing, scheduling, performance evaluation I...|$|E
40|$|This paper {{describes}} Gamebots, a {{multi-agent system}} infrastructure derived from an Internet-based multi-player video game called Unreal Tournament. The game allows characters {{to be controlled}} over <b>client-server</b> <b>network</b> connections by feeding sensory information to client players (humans and agents). Unlike other standard test-beds, the Gamebots domain allows both human players and agents, or bots, to play simultaneously; thus providing the opportunity to study human team behavior and to construct agents that play collaboratively with humans. The Gamebots system provides a built-in scripting language giving interested researchers {{the ability to create}} their own multi-agent tasks and environments for the simulation. Keywords Multiple Agent Systems, Agent Infrastructure, Multi-Agent Teamwork, Human-Agent Interaction, Virtual World Simulation, Video Game Bot. 1...|$|E
40|$|TCP is the {{transport}} protocol used predominantly in the Internet {{as well as}} in peer-to-peer networks. However, peerto -peer networks exhibit very different characteristics from those of conventional <b>client-server</b> <b>networks.</b> In this paper, we argue that the unique characteristics of peer-to-peer networks render TCP inappropriate for effective data transport in such networks. Specifically, we motivate transport layer support for multipoint-to-point connections {{to address the problem of}} sources in peer-to-peer networks lacking serverlike properties in terms of capacity and availability. We outline several key elements in designing a new transport protocol for supporting effective multipoint-to-point connections. Finally, we present a case study for a multipointto -point transport protocol that puts together these design elements in practice. We thus motivate further research along this direction...|$|R
50|$|A client-queue-client or passive queue {{system is}} a <b>client-server</b> {{computer}} <b>network</b> in which the server is a data queue for the clients. Instead of communicating with each other directly, clients exchange data with one another by storing it in a repository (the queue) on a server.|$|R
50|$|Server centric gaming is a {{term used}} {{in the fields of}} video lottery and casino gaming. Server centric gaming {{combines}} classic video poker and video lottery with features of a modern <b>client-server</b> computer <b>network.</b> Compared to traditional standalone slot machines, server centric systems offer more advanced functionality.|$|R
