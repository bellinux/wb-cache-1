18|108|Public
5000|$|Standard <b>check</b> <b>interval</b> of 1 minute (Nagios {{defaults}} to 5 minutes) ...|$|E
5000|$|Alaska Airlines's {{extended}} {{end play}} <b>check</b> <b>interval</b> and the FAA's approval of that extension, which allowed the acme nut threads to deteriorate {{to the point}} of failure without the opportunity for detection ...|$|E
50|$|The Honda AX-1 was a {{modified}} version of Honda NX-250 intended only for the Japanese market but was offered in Oceania. Using the same chassis as the NX-250, the AX-1 came standard with alloy rims, aluminum Pro-Link rear suspension this time with a rear disc brake, dual round headlights, taller cams, stainless steel exhaust and different carburetor settings. The valve clearance <b>check</b> <b>interval</b> is every 24000 mi.|$|E
5000|$|All nodes are {{synchronized}} after a <b>checking</b> <b>interval</b> 't' and {{utilize the}} internal clocks {{of the individual}} nodes.|$|R
50|$|Many {{regulations}} {{exist in}} the United States concerning animal trapping including trap <b>check</b> <b>intervals,</b> usually requiring all traps be checked at least once during a 24-hour period. Some governments permit relocation of wildlife, however humane considerations {{must be taken into}} account before relocating wildlife, including population and habitat.|$|R
50|$|Website {{monitoring}} service can check HTTP pages, HTTPS, SNMP, FTP, SMTP, POP3, IMAP, DNS, SSH, TELNET, SSL, TCP, ICMP, SIP, UDP, Media Streaming {{and a range}} of other ports with a variety of <b>check</b> <b>intervals</b> ranging from every four hours to every one minute. Typically, most network {{monitoring service}}s test your server anywhere between once-per-hour to once-per-minute.|$|R
5000|$|End play checks were {{conducted}} during a periodic comprehensive airframe overhaul process called a C‑check. Testimony from {{the director of}} reliability and maintenance programs of Alaska Airlines was that a data analysis package based on the maintenance history of five sample aircraft was submitted to the FAA to justify the extended period between C-checks. Individual maintenance tasks (such as the end play check) were not separately considered in this extension. The NTSB found that [...] "Alaska Airlines' end play <b>check</b> <b>interval</b> extension should have been, but was not, supported by adequate technical data {{to demonstrate that the}} extension would not present a potential hazard".|$|E
40|$|The paper {{studies the}} {{subscription}} operation in smart spaces {{for the case}} when the notification delivery to a client is subject to losses. We consider a TCP-like control of the <b>check</b> <b>interval</b> for adaptation to the observable loss rate. We propose an adaptive strategy for a client to manage the <b>check</b> <b>interval</b> {{based on the number}} of notification lost. The performance is analyzed and compared with other strategies under simplified assumptions about the notification loss distributio...|$|E
40|$|The paper studies {{performance}} of the subscription operation in smart spaces for the case when the notification delivery to a client is subject to losses. We consider an active control of the <b>check</b> <b>interval</b> for the client {{to adapt to the}} observable loss rate. The adaptive strategy takes into account the number of lost notifications. The performance is analyzed and compared with other strategies under simplified assumptions about the loss distribution...|$|E
50|$|At the February 2016, Singapore Airshow, Bombardier {{announced}} a high density 90-seat {{layout of the}} Q400 which should enter service in 2018: keeping the 28 in seat pitch of the Nok Air 86-seats, an extra row of seats is allowed by changing {{the configuration of the}} front right-hand door and moving back the aft pressure bulkhead. The payload is increased by 2,000 lb and the aircraft maintenance <b>check</b> <b>intervals</b> are increased: 800 hours from 600 for an A-check and 8,000 hours from 6,000 for a C-check.|$|R
40|$|Abstract. In {{accordance}} {{with the goal of}} building a unified national grid company strong and intelligent grid requirements for the practical needs of network engineering and design work and finish construction of three-dimensional design system for intelligent substation. While retaining the traditional design of planar projection based on the parallel use of three-dimensional drawing tools, using refined design, for security <b>checking</b> <b>interval,</b> the wire mechanics, lighting, materials of statistics, Achieving intelligent substation digital transfer, and lay the Foundation for the whole project life-cycle management...|$|R
50|$|The best {{tea leaves}} are {{selected}} for fermenting {{and the rest}} for drying. They are steamed {{for about five minutes}} before either drying or fermenting. Young leaves are packed into bamboo vats set in pits and pressed by heavy weights; the fermentation process is <b>checked</b> at <b>intervals</b> and the pulp may occasionally require re-steaming.|$|R
30|$|Each vehicle {{triggers}} {{the process of}} choosing a target in every hello interval (HI). The maintenance work is then completed in the time interval during which a vehicle finishes its state updating until the next HI occurs. Each vehicle must execute a check job in every <b>check</b> <b>interval</b> (CI) during maintenance. A CM vehicle is tasked to ensure its connection with its target. If such connection is lost, then a CM {{triggers the}} process of choosing a new target. For a CH vehicle, the process of selecting a new target is triggered if other CH vehicles exist in its one-hop neighbor.|$|E
40|$|Model {{checking}} {{is one of}} {{the most}} powerful and widespread tools for system verification with applications in many areas of computer science and artificial intelligence. The large majority of model checkers deal with properties expressed in point-based temporal logics, such as LTL and CTL. However, there exist relevant properties of systems which are inherently interval-based. Model checking algorithms for interval temporal logics (ITLs) have recently been proposed to <b>check</b> <b>interval</b> properties of computations. As the model checking problem for full Halpern and Shoham’s ITL (HS for short) turns out to be decidable, but computationally heavy, research has focused on its well-behaved fragments. In this paper, we provide an almost final picture of the computational complexity of model checking for HS fragments with modalities for (a subset of) Allen’s relations meets, met by, starts, and end...|$|E
40|$|Abstract—Low power {{listening}} (LPL) {{has been}} widely adopted to save energy in wireless sensor networks. However, LPL is ineffective in adapting to dynamic networks with asymmetric traffic patterns, as it sets a network-wide <b>check</b> <b>interval.</b> As a result, nodes with low data traffic waste significant energy resources doing idle listening. This problem is particularly exacerbated in multi-radio networks where majority of data comes through the most reliable radio and the duty cycles of other radios could be reduced. We address this issue in AutoSync, a protocol that combines synchronous LPL with automatic selection of check intervals to reduce energy consumption in both single and multi-radio networks. We first present the justification for AutoSync’s design, and we then discuss our implementation of AutoSync in TinyOS. We compare AutoSync against existing protocols in both simulations and empirical experiments. Results show that AutoSync attains {{a substantial increase in}} the operational lifetime and mean power consumption over existing protocols in single radio networks and even more in dual radio networks. I...|$|E
50|$|Without {{the need}} for line flushing, pigging offers the {{additional}} advantage of much more rapid and reliable product changeover. Product sampling at the receipt point is faster with pigs, because the interface between products is very clear; the old method of <b>checking</b> at <b>intervals</b> to determine where the product is on-specification takes considerably longer.|$|R
40|$|Pain {{alleviation}} {{is one of}} {{the most}} important therapies for chronic or incurable diseases. Consequently, implantable infusion pumps are challenged to provide long-term medication with extended <b>check</b> <b>intervals.</b> With the aim of a treatment serving each patient's individual symptoms pattern, current research focuses especially on the possibilities of adjustable drug flow implementation. Programmable electronic devices are already capable of this performance; yet, they still require several surgeries for exchange of the power source. Against this background, a throttle system for a gas-driven infusion device is being investigated in-silico. The system's centerpiece consists of a nanoporous ceramic throttle unit, yielding flows in the range of micro-to nanoliters per minute. The simulations shall provide information about advantages and drawbacks of variations in the geometric setup. Based on the project's results, the most promising throttle geometries will be chosen for laboratory testing, aiming at a final application to the infusion system...|$|R
40|$|Preamble sampling-based MAC {{protocols}} designed forWireless Sensor Networks (WSN) {{are aimed}} at prolonging the lifetime of the nodes by scheduling their times of activity. This scheduling exploits node synchronization {{to find the right}} trade-off between energy consumption and delay. In this paper we consider the problem of node synchronization in preamble sampling protocols. We propose Cross Layer Adaptation of <b>Check</b> <b>intervals</b> (CLAC), a novel protocol intended to reduce the energy consumption of the nodes without significantly increasing the delay. Our protocol modifies the scheduling of the nodes based on estimating the delay experienced by a packet that travels along a multi-hop path. CLAC uses routing and MAC layer information to compute a delay that matches the packet arrival time. We have implemented CLAC on top of well-known routing and MAC protocols for WSN, and we have evaluated our implementation using the Avrora simulator. The simulation results confirm that CLAC improves the network lifetime at no additional packet loss and without affecting the end-to-end dela...|$|R
40|$|International audienceSmart card {{programs}} {{are subject to}} physical attacks that disturb {{the execution of the}} embedded code. These attacks enable attackers to steal valuable information or to force a malicious behavior upon the attacked code. This paper proposes a methodology to <b>check</b> <b>interval</b> security properties on smart card source codes. The goal is to identify critical attacks that violate these security properties. The verification takes place at source-level and considers all possible attacks thanks to a proposed source-level model of physical attacks. The paper defines an equivalence relation between attacks and shows that a code can be divided into areas where attacks are equivalent. Thus, verifying an interval security property considering all the possible attacks requires to verify as many codes as the number of equivalence classes. This paper provides a reduction algorithm to define the classes i. e. the minimal number of attacked codes that covers all possible attacks. The paper also proposes a solution to make the property verification possible for large codes or codes having unknown source parts...|$|E
40|$|Model {{checking}} is {{a powerful}} method widely explored in formal verification. Given {{a model of a}} system, e. g. a Kripke structure, and a formula specifying its expected behavior, one can verify whether the system meets the behavior by checking the formula against the model. Classically, system behavior is given as a formula of a temporal logic, such as LTL and the like. These logics are “point-wise” interpreted, as they describe how the system evolves state-by-state. However, there are relevant properties, such as those involving temporal aggregations, which are inherently “interval-based”, and thus asking for an interval temporal logic. In this paper, we give a formalization of the model checking problem in an interval logic setting. First, we provide an interpretation of formulas of Halpern and Shoham’s interval temporal logic HS over Kripke structures, which allows one to <b>check</b> <b>interval</b> properties of computations. Then, we prove that the model checking problem for HS against Kripke structures is decidable by a suitable small model theorem, and we outline a PS PACE decision procedure for the meaningful fragments AABB and AAEE...|$|E
40|$|Abstract—Testing {{network devices}} {{in a live}} {{environment}} is desirable due to its reality. However, the defects are not repro-ducible, and the network connectivity will be broken if the device is down. For effective defect reproduction from real traffic, we design a new mechanism, which allows the device under test (DUT) to be automatically online/offline, and supports multi-port replay for multi-port network devices with an OpenFlow switch. The defect traces are captured when the DUT is online. When a DUT failure is detected, the DUT will be offline, and the defect-triggering traces will be replayed to identify the defect. For efficient replay, we keep only partial payloads in a reduced number of packets in the defect traces that are sufficient to trigger the defects. For defect identification, reduction based on a binary search algorithm is presented {{to deal with the}} defects caused by payload anomalies and by overloading. The downsizing ratios in the cases of payload anomalies and overloading are up to 98. 8 % and 96 %, respectively. The minimum outage time of the failover during the DUT failure is obtained when the <b>check</b> <b>interval</b> is 1 second and the number of tolerable consecutive failures is 2. Index Terms—Network devices, failover, OpenFlow switch, multi-port replay, downsizing...|$|E
6000|$|... 'Deep, deep are loving eyes, Flowed with naphtha fiery sweet; And {{the point}} is paradise, Where their glances meet: Their reach shall yet be more profound, And a vision without bound: The axis of those eyes sun-clear Be the axis of the sphere: So shall the lights ye pour amain Go, without <b>check</b> or <b>intervals,</b> Through from the empyrean walls Unto the same again.' ...|$|R
40|$|The {{problem of}} {{temporal}} dataset evaluation consists in establishing {{to what extent}} a set of temporal data (histories) complies with a given temporal condition. It presents a strong resemblance {{with the problem of}} model checking enhanced with the ability of rating the compliance degree of a model against a formula. In this paper, we solve the temporal dataset evaluation problem by suitably combining the outcomes of model <b>checking</b> an <b>interval</b> temporal logic formula against sets of histories (finite interval models), possibly taking into account domain-dependent measures/criteria, like, for instance, sensitivity, specificity, and accuracy. From a technical point of view, the main contribution of the paper is a (deterministic) polynomial time algorithm for interval temporal logic model <b>checking</b> over finite <b>interval</b> models. To the best of our knowledge, this is the first application of a (truly) interval temporal logic model checking in the area of temporal databases and data mining rather than in the formal verification setting...|$|R
50|$|During Coast Guard inspections, the {{batteries}} {{must be able}} to go from 100% discharge to fully charged in no longer than 10 hours in order to pass certification. The charger too must be obtainable at all times during vessel operation and should be inspected to make sure it functions properly. When the reserve source of energy consists of batteries, the battery capacity must be <b>checked</b> at <b>intervals</b> not exceeding 12 months. If not completed within past 12 months, this must be done during inspection.|$|R
40|$|Since {{the late}} 80 s, LTL and CTL model {{checking}} have been extensively applied in various areas of computer science and AI. Even though they proved {{themselves to be}} quite successful in many application domains, there are some relevant temporal conditions which are inher- ently based" (this is the case, for instance, with telic statements like astronaut must walk home in an hour" and temporal aggrega- tions like average speed of the rover cannot exceed the established threshold") and thus cannot be properly modelled by point-based tem- poral logics. In general, to <b>check</b> <b>interval</b> properties {{of the behavior of}} a system, one needs to collect information about states into behavior stretches, which amounts to interpreting each nite sequence of states as an interval and to suitably dening its labelling {{on the basis of the}} labelling of the states that compose it. In order to deal with these properties, a model checking framework based on Halpern and Shoham's interval temporal logic (HS for short) and its fragments has been recently proposed and systematically investigated in the literature. In this paper, we give an original proof of EXPSPACE membership of the model checking problem for the HS fragment AABBE (resp., AAEBE) of Allen's interval relations meets, met-by, started-by (resp., nished-by), starts, and nishes. The proof exploits track bisimi- larity and prex sampling, and it turns out to be much simpler than the previously known one. In addition, it improves some upper bounds...|$|E
40|$|For most applications, sensor nodes rely {{solely on}} {{batteries}} for their power supply and hence battery depletion may have {{a great impact on}} the overall network performance. Consequently, most of the current research work in wireless sensor networks (WSNs) is focusing on improving architectures and protocols with energy conservation as the main focus. Instead of using a competing approach such as used in traditional wireless networks, sensor nodes are proposed to cooperate to achieve a common goal. Multiple sensor nodes can be used to transmit and receive cooperatively and such a configuration is known as a cooperative Multiple-Input Multiple-Output (MIMO) system. Cooperative MIMO systems have been proved to reduce both transmission energy and latency in WSNs. However, most current work in WSNs considers only the energy cost for the data transmission component and neglects the energy component responsible for establishing a cooperative mechanism. When the energy cost of cooperative mechanism establishment is considered, the total energy consumed {{as a function of the}} increasing number of cooperating nodes becomes of particular interest. In addition, most of the previous work in WSNs focused only on Space-Time Block Coding (STBC) schemes and ignored other potential MIMO schemes. In this thesis, both transmission and circuit energies for both components are included in the performance models. Three major cooperative MIMO systems, namely Beamforming (BF), Space-Time Block Coding (STBC) and Spatial Multiplexing (SM) are compared and analysed. WSNs are assumed to operate in quasi-static Rayleigh fading channels with M cooperating transmit nodes and N cooperating receive nodes. The cooperative BF scheme outperforms both the cooperative SM and STBC schemes in terms of energy efficiency and packet latency for both synchronous and asynchronous scenarios. Synchronous scenarios assume perfect synchronisation between cooperating nodes. Also, the cooperative BF outperforms cooperative SM with higher diversity gain. A cooperative BF scheme with two transmit nodes is suggested as the optimal energy efficient cooperative MIMO system with the lowest packet latency when operating below 0. 4 Tb clock jitter difference and below 800 mW radiated power in imperfect synchronisation scenarios. Tb is the bit period which corresponds to the system bit rate. In previous work all sensor nodes are assumed to be always on which could lead to a shorter lifetime due to energy wastage caused by idle listening and overhearing. Low duty cycle MAC protocols have been proposed to tackle this challenge in WSNs. However, most of the low duty cycle MAC protocols have been proposed for noncooperative systems. In this thesis, a new cooperative low duty cycle MAC protocol (CMAC) is proposed for two cooperative MIMO schemes: Beamforming (CMACBF) and Spatial Multiplexing (CMACSM). Performance of the proposed CMAC protocol is evaluated in terms of total energy consumption and packet latency for both synchronous and asynchronous scenarios. All the required energy components are taken into consideration in the system performance modelling and a periodic monitoring application model is used. The impact of the clock jitter, the <b>check</b> <b>interval</b> and the number of cooperative nodes on the total energy consumption and latency is investigated. The CMACBF protocol with two transmit nodes is suggested as the optimal scheme when operating at the 250 ms <b>check</b> <b>interval</b> with the clock jitter difference below 0. 6 Tb...|$|E
40|$|The {{effect of}} thermal-shock cycles on the {{mechanical}} properties of fiber-metal laminates (FMLs) has been evaluated. FML plates were composed by two AA 2024 Al sheets (1. 6 mm thick) and one composite ply formed by {{two layers of}} unidirectional glass fiber epoxy prepreg and two layers of epoxy adhesive tape of glass fiber reinforced epoxy adhesive. the set was manufactured by hand layup and typical vacuum bag technique. the curing cycle was in autoclave at 125 +/- 5 degrees C for 90 min and an autoclave pressure of 400 kPa. FML coupons taken from the manufactured plate were submitted to temperature variations between - 50 and + 80 degrees C, with a fast transition between these temperatures. Tensile and interlaminar shear strength were evaluated on samples after 1000 and 2000 cycles, and compared to nonexposed samples. 2000 Cycles corresponds to typical C <b>Check</b> <b>interval</b> for commercial aircraft maintenance programs. It was observed that the thermal-shock cycles {{did not result in}} significant microstructural changes on the FML, particularly on the composite ply. Similarly, no appreciable effect on the mechanical properties of FML was observed by the thermal-shock cycles. (c) 2012 Elsevier B. V. All rights reserved. Universidade Federal de São Paulo, Dept Ciencia & Tecnol, BR- 12231280 São Paulo, BrazilEmbraer Empresa Brasileira Aeronaut SA, BR- 12227901 São Paulo, BrazilUniv Estadual Paulista, Fac Engn Guaratingueta, Dept Mat & Tecnol, BR- 12516410 São Paulo, BrazilUniversidade Federal de São Paulo, Dept Ciencia & Tecnol, BR- 12231280 São Paulo, BrazilWeb of Scienc...|$|E
40|$|Abstract: The {{problem of}} crack growth {{is a major}} issue in the {{prediction}} and maintenance of engineering structural elements. Prediction of expected life of a structural element due to constant (static) and alternating loading (fatigue) is of major concern to the designers. Prediction of remaining life of the structural elements influences the decisions of maintenance engineers (<b>checking</b> <b>intervals,</b> corrections, and replacements). The fatigue crack growth rate, which determine the fatigue life of the components after crack initiation need to be experimentally and theoretically investigated. In this study, fatigue crack growth tests were conducted under constant amplitude loading at a stress ratio of 0. 1, using three-point bend (TPB) specimens of ASTM A 533 steel material. For the simulation part of this study, three fatigue crack growth models, i. e. the Paris, modified Forman and Austen were examined. None of the models has a fit for the fatigue crack growth rate data in a similar behaviour compared to others. The modified Forman model provided a closer fit than the Paris model with respect to the experimental results. However, the Austen model provided the best fit to the fatigue crack growth rate data as compared with the other two models. Therefore, this model is suggested for use in critical applications...|$|R
40|$|Legislative {{changes to}} {{regulations}} surrounding {{the use of}} traps and other capture devices have unambiguously impacted {{the manner in which}} these devices can be used. In many cases the revisions to trapping legislation have resulted in shortened trap <b>check</b> <b>intervals.</b> This change has increased the costs of using capture devices and decreased the efficiency of Wildlife Services (WS) specialists working in the field. The use of trap monitors may result in cost savings and increased efficiency. Trap monitor systems function as a remote notification system that can identify trap status. These monitor systems can be used as an alternative to visually inspecting the trap, potentially reducing costs. A benefit-cost analysis is an economic method {{that can be used to}} evaluate the efficiency of the use of trap monitors by comparing the costs of the trap monitor system to the benefits of reduced specialist time and resources used. This paper describes a method to estimate cost savings associated with the use of trap monitor systems by the WS program and discusses potential scenarios where trap monitors would provide cost savings. This type of analysis aides in legislative decision-making processes through the identification of trapping situations in which the use of trap monitor systems are economical and through quantifying the return per dollar invested in trap monitor systems...|$|R
40|$|In this work, we have {{addressed}} the complex problem of recovery for concurrent failures in distributed computing environment. We have proposed a new approach {{in which we have}} dealt with effectively both orphan and lost messages. The proposed check pointing and recovery approaches enable a process to restart from its recent checkpoint and hence guarantees the least amount of re-computation after recovery. It also means that a process needs to save only its recent local checkpoint. The proposed value of the common <b>check</b> pointing <b>interval</b> enables an initiator process to log the minimum number of messages sent by each application process...|$|R
40|$|Conventional {{follow-up}} of teenagers with inflammatory bowel diseases (IBD) is done during scheduled outpatient visits {{regardless of how}} well the patient feels. We designed a telemonitoring strategy for early recognition of flares and compared its efficacy with conventional follow-up. Multicentre randomised trial in patients aged 10 - 19 years with IBD in clinical remission at baseline. Participants assigned to telemonitoring received automated alerts to complete a symptom score and send a stool sample for calprotectin measurement. This resulted in an individual prediction for flare with associated treatment advice and test interval. In conventional follow-up the health <b>check</b> <b>interval</b> was left to the physician's discretion. Primary endpoint was cumulative incidence of disease flares. Secondary endpoints were percentage of participants with a positive change in quality-of-life and cost-effectiveness of the intervention. We included 170 participants (84 telemonitoring; 86 conventional follow-up). At 52 weeks {{the mean number of}} face-to-face visits was significantly lower in the telemonitoring group compared to conventional follow-up (3. 6 versus 4. 3, P < 0. 001). The incidence of flares (33 versus 34 %, P= 0. 93) and the proportion of participants reporting positive change in quality-of-life (54 % versus 44 %, P= 0. 27) were similar. Mean annual cost-saving was € 89 and increased to € 360 in those compliant to the protocol. Telemonitoring is as safe as conventional follow-up, reduces outpatient visits and societal costs. The positive impact on quality-of-life was similar in both groups. This strategy is attractive for teenagers and families, and health professionals may be interested in using it to keep teenagers who are well out of hospital and ease pressure on overstretched outpatient services. NTR 3759 (Netherlands Trial Registry...|$|E
40|$|This paper {{reports on}} a study of {{modelling}} condition monitoring intervals. The model is formulated based upon two important concepts. One is the failure delay time concept, {{which is used to}} divide the failure process of the item into two periods, namely a normal working period followed by a failure delay time period from a defect being first identified to the actual failure. The other is the conditional residual time concept, which assumes that the residual time also depends on the history condition information obtained. Stochastic filtering theory is used to predict the residual time distribution given all monitored information obtained to date over the failure delay time period. The solution procedure is carried out in two stages. We first propose a static model that is used to determine a fixed condition monitoring interval over the item life. Once the monitored information indicates a possible abnormality of the item concerned, that is the start of the failure delay time, a dynamic approach is employed to determine the next monitoring time at the current monitoring point given that the item is not scheduled for a preventive replacement before that time. This implies that the dynamic model overrides the static model over the failure delay time since more frequent monitoring might be needed to keep the item in close attention before an appropriate replacement is made prior to failure. Two key problems are addressed in the paper. The first is which criterion function we should use in determining the monitoring <b>check</b> <b>interval,</b> and the second is the optimization process for both models, which can be solved neither analytically nor numerically since they depend on two unknown quantities, namely, the available condition information and a decision of the time to replace the item over the failure delay time. For the first problem, we propose five appealingly good criterion functions, and test them using simulations to see which one performs best. The second problem was solved using a hybrid of simulation and analytical solution procedures. We finally present a numerical example to demonstrate the modelling methodology...|$|E
40|$|The task of a {{topology}} selector {{within an}} analog synthesis {{system is to}} find the best available analog circuit topology out of a library for a given set of input specifications. The proposed selection method consists of a combination of two approaches: procedural filtering and rule-based filtering. The procedural filtering consists of two consecutive phases based on boundary <b>checking</b> and <b>interval</b> analysis. Such a combination of different sorts of filtering is a new technique that allows an optimal trade-off between selection accuracy and required selection time. The tool that implements the method is technology independent and fully open towards newly added design knowledge. ...|$|R
60|$|She did listen, and watch, when evening closed; {{but it was}} in stillest sort: {{walking the}} drawing-room with quite {{noiseless}} step. She <b>checked</b> at <b>intervals</b> her velvet march; inclined her ear, and consulted the night sounds: I should rather say, the night silence; for now, at last, the wind was fallen. The sky, relieved of its avalanche, lay naked and pale: through the barren boughs of the avenue we could see it well, and note also the polar splendour of the new-year moon--an orb white as a world of ice. Nor was it late when we saw also the return of the carriage.|$|R
5000|$|... #Caption: All {{intervals}} in S_center {{that begin}} before x must overlap x if x {{is less than}} x_center.Similarly, the same technique also applies in <b>checking</b> a given <b>interval.</b> If a given interval ends at y and y is less than x_center, all intervals in S_center that begin before y must also overlap the given interval.|$|R
30|$|The ZDL- 800 {{electrochemical}} sensor was set above the compost material in each reactor for {{the determination of}} ammonia. The exposure of an {{electrochemical sensor}} to high concentrations of ammonia over long periods leads to reading errors; therefore, the ZDL- 800 sensor was <b>checked</b> at an <b>interval</b> of 1  h each day (Qasim et al. 2017).|$|R
