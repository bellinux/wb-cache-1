34|74|Public
5000|$|The W {{hierarchy}} is {{a collection}} of computational complexity classes. A parameterised problem is in the class Wi, if every instance [...] can be transformed (in fpt-time) to a <b>combinatorial</b> <b>circuit</b> that has weft at most i, such that [...] if and only if there is a satisfying assignment to the inputs, which assigns 1 to at most k inputs. The height thereby is the largest number of logical units with unbounded fan-in on any path from an input to the output. The number of logical units with bounded fan-in on the paths must be limited by a constant that holds for all instances of the problem.|$|E
40|$|Abstract: In this paper, {{we present}} a new {{algorithm}} for the statistical static timing analysis of a CMOS <b>combinatorial</b> <b>circuit,</b> which can treat correlations of arrival times of input signals to a logic gate and correlations of switching delays in a logic gate. We model each switching delay by a normal distribution, and use a normal distribution of two stochastic variables with a coefficient of correlation for computing the distribution of output delay of a logic gate. Since the algorithm takes the correlation into account, the time complexity is O(n•m) in the worst-case, where n and m are the numbers of vertices and edges of the acyclic graph representing a given <b>combinatorial</b> <b>circuit.</b> I...|$|E
40|$|Aiming at {{solving the}} {{convergence}} rate {{problem in the}} latter stage of circuit evolution design, adaptive HereBoy algorithm together with the population evolution idea of GA is adapted to study the impact of adaptive-adjust factor {{on the evolution of}} convergence rate. One circuit model which is based on the similarities between <b>combinatorial</b> <b>circuit</b> and neural network is proposed, on which the matrix encoding scheme of <b>combinatorial</b> <b>circuit</b> is discussed. Besides of this, extrint evolution is adapted to evaluate the circuits fitness value, and adaptive-adjust factor in GA is introduced to improve the population diversity and convergence rate. The implementation of 2 -bit binary multiplier circuits evolution shows that the average evolution generations and the evolution time all reduce obviously than conventional HereBoy algorithm, and that the average increase rate raises with the increase of evolution generation in the latter stage of circuit evolution...|$|E
50|$|The static/dynamic {{terminology}} {{used to refer}} to <b>combinatorial</b> <b>circuits</b> {{should not be confused with}} how the same adjectives are used to distinguish memory devices, e.g. static RAM from dynamic RAM.|$|R
40|$|A {{design of}} multiple-valued {{circuits}} {{based on the}} multiple-valued programmable logic arrays (MV PLA’s) by generalized disjunctive decomposition is presented. Main subjects are 1) Generalized disjunctive decomposition of multiple-valued functions using multiple-terminal multiplevalued decision diagrams (MTMDD’s); 2) Realization of functions by MV PLA-based <b>combinatorial</b> <b>circuits...</b>|$|R
40|$|A {{distributed}} asynchronous {{system is}} investigated. Its processing elements execute common operations concurrently and distributively. They are implemented as <b>combinatorial</b> <b>circuits</b> and exchange data via open collector bus lines. A method {{is presented to}} identify and to minimize the duration of an operation and therefore to increase {{the performance of the}} system. No hardware modifications are required...|$|R
40|$|AbstractWe {{describe}} the application ESBC {{to perform the}} timing analysis of a <b>combinatorial</b> <b>circuit.</b> The circuit is described by formulas of Classical Logic and the delays of propagation of the signals in a gate are represented {{by a kind of}} valuation form semantics. ESBC computes the exact stabilization times at which the output signals stabilize...|$|E
40|$|We {{show that}} for each iteration-free <b>combinatorial</b> <b>circuit</b> S over a basis B {{containing}} only monotone Boolean functions with at most five variables, {{there exists a}} decision tree for diagnosis of constant faults on inputs of gates with depth at most 7 L(S) where L(S) {{is the number of}} gates in S. © 2013 Elsevier B. V. All rights reserved...|$|E
40|$|Abstract- Gate {{diffusion}} input (GDI) —A {{new technique}} of low-power digital <b>combinatorial</b> <b>circuit</b> design is described. This technique allows reducing power consumption, propagation delay, and area of digital circuits while maintaining low complexity of logic design. Performance comparison with traditional CMOS and various pass-transistor logic design techniques is presented. The different methods are compared {{with respect to}} the layout area, number of devices, delay, and power dissipation...|$|E
40|$|Abstract- A {{design of}} multiple-valued {{circuits}} {{based on the}} multiple-valued programmable logic arrays (MV PLA’s) by generalized disjunctive decomposition is presented. Main subjects are 1) Generalized disjunctive decomposition of multiple-valued functions using multiple-terminal multiplevalued decision diagrams (MTMDD’s); 2) Realization of functions by MV PLA-based <b>combinatorial</b> <b>circuits.</b> Key words- Multiple-valued logic, generalized disjunctive decomposition; combinational multiple-valued circuits (MV circuits). 1...|$|R
40|$|In {{this paper}} we discuss the main {{techniques}} of the modelbased reasoning system DRUM- 2, a system using minimal model semantics for computing diagnoses. We describe different techniques (including techniques used in previous systems, their drawbacks and the necessary improvements in DRUM- 2) and show some preliminary runtime results using the <b>combinatorial</b> <b>circuits</b> from the ISCAS- 85 benchmarks...|$|R
40|$|Abstract- A {{design of}} multiple-valued {{circuits}} {{based on the}} multiple-valued programmable logic arrays (MV PLA’s) by generalized disjunctive decomposition is presented. Main subjects are 1) Generalized disjunctive decomposition of multiple-valued functions using multiple-terminal multiplevalued decision diagrams (MTMDD’s); 2) Realization of functions by MV PLA-based <b>combinatorial</b> <b>circuits.</b> Key words- Multiple-valued logic, generalized disjunctive decomposition; combinational multiple-valued circuits (MV circuits). tree generalized for r-valued functions is proposed too. MTMDD is built from multiple-valued Shannon tree and has the similar structure like in suggested tree. The rest of paper is organized as follows. In section 2 we start with describing the basic notations and definitions. We then discuss the algorithm to find the good decomposition using MTMDD (Section 3). Here, the Shannon tree is also generalized for r-valued functions and the properties of MTMDD are considered too. Design of MV PLA-based <b>combinatorial</b> <b>circuits</b> is represented in Section 4. Section 5 is summary of this paper. 1...|$|R
40|$|Abstract. The RISA Architecture {{is a novel}} {{reconfigurable}} hardware platform containing both {{hardware and}} software reconfigurable elements. This paper describes the architecture and the features that make it suitable for implementing biologically inspired systems such as the evolution of digital circuits. Some of the architecture’s capabilities are demonstrated {{with the results of}} evolving a simple <b>combinatorial</b> <b>circuit</b> using one of the fabricated RISA devices. ...|$|E
40|$|Presents a fast <b>combinatorial</b> <b>circuit</b> for {{performing}} division Q:=A+D. High speed {{is achieved by}} a new algorithm implemented in gallium arsenide (GaAs). An n bit divider produces an n bit quotient Q in 9 *n NOR-gate-delay-units, with n/sup 2 / add/sub cells (called tail) driven by n controller cells (called head). The divider has been implemented by using a buffering technique and a full custom layout methodology, which are well suited for high performance design in GaAs direct coupled FET Logic (DCFL) ...|$|E
40|$|Abstract — An angle {{rotation}} based {{approach to}} simultaneously compute sin(x) and cos(x) is presented. The approach yields a weighted sum of bit-products of the binary bits {{that represent the}} angle x. We discuss the required number of terms in the polynomial {{as well as the}} required coefficient wordlength as function of accuracy. The approach yields a combinatorial realization with a low complexity. We also propose a corresponding fast and simple architecture. The <b>combinatorial</b> <b>circuit</b> has low latency and can easily be pipelined for a high throughput. ...|$|E
40|$|<b>Combinatorial</b> logic <b>circuit</b> {{minimization}} is usualy done using Karnaugh’s Map or Bolean equation. This paper {{presents an}} aplication of Firefly Algorithm to design combinational logic circuit {{in which the}} objective function is to minimize {{the total number of}} gates used. Then, the algorithm is benchmarked with other literatures. Result indicates that it able to find optimal solution but further analysis is required for a more complex <b>combinatorial</b> ogic <b>circuit</b> minimizatio...|$|R
40|$|Hard {{problems}} ” can be {{hard because}} they are computationally intractable. or because they are underconstrained. Here we describe candidate generation for digital devrces with state, a fault localization problem that is intractable when the devices are described at low levels of abstraction, and is underconstrained when described at higher levels of abstraction. Previous v;ork [l] has shown that a fault in a <b>combinatorial</b> digital <b>circuit</b> can be localized using a constraint-based representation of structure and behavior. ln this paper we (1) extend this represerltation to model a circuit with state by choosrng a time granularity and vocabulary of signals appropriate to that circuit; (2) demonstrate that the same candidate generation procedure that works for <b>combinatorial</b> <b>circuits</b> becomes indiscriminate when applied to a state circuit modeled in that extende...|$|R
40|$|We {{describe}} a simulation-based fault injection technique for calculating {{the probability of}} failures caused by SEUs in the configuration memory of SRAM-FPGA systems. Our approach relies on a model of FPGA netlists realised with the Stochastic Activity Networks (SAN) formalism. We validate our method by reproducing the results presented in other studies for some representative <b>combinatorial</b> <b>circuits,</b> and we explore {{the applicability of the}} proposed technique by analysing the actual implementation of a circuit for the generation of Cyclic Redundancy Check codes...|$|R
40|$|GOALS: Understand {{the concept}} of {{inverter}} voltage transfer characteristics, clock, gate delays and simple <b>combinatorial</b> <b>circuit</b> design. In this lab we will cascade an odd number of inverters to create a ring oscillator and build a 4 bit ripple carry adder. Three bitwise functions {{will be added to}} FA to constitute 2 -bit ALU. BACKGROUND: INVERTER VOLTAGE TRANSFER CHARACTERISTICS An inverter’s voltage transfer characteristic is shown below is obtained by continuously varying the input voltage on the x-axis. Y-axis depicts the voltage measured at the output...|$|E
40|$|Abstract — In this paper, {{we propose}} to use {{ensemble}} dependent matrices for describing combinatorial nanoscale circuits. We then apply various signal-processing techniques, including eigen analysis, {{and the use}} of mutual information, for hardwareefficient fault-tolerant nanoscale design at the system level. We find that the condition of an ensemble matrix product determines the circuit’s fault-tolerant capability. If the product matrix is illconditioned, the <b>combinatorial</b> <b>circuit</b> is more error-prone. The knowledge gained from this project can be used eventually to develop computer-aided design tools for optimal nanoscale circuit and system design. I...|$|E
40|$|A <b>combinatorial</b> <b>circuit</b> is {{presented}} for nonparametric signal detection based on rank test. The on-line ranking difficulties are eliminated by parallel processing {{of the signal}} samples {{through a set of}} comparator arrays. The system has the discriminating capabilities with limited number of samples and the versatility of on-line operations at various signal levels. Univ of Pittsburgh, Dep of Electrical Engineering, Pittsburgh, PA, IEEE, Pittsburgh Section, Pittsburgh, PA, USA, ISA, Pittsburgh Section, Pittsburgh, PA, USA, IEEE Systems, Man & Cybernetics Soc, New York, NY, USA, Soc for Computer Simulation, La Jolla, CA, USA, Int Assoc for Mathematics & Computers in Simulation, Brussel...|$|E
40|$|Program {{typically}} implements an automaton: � state: {{contents of}} memory cells � transition: reaction, possibly involving many computations Synchronous hypothesis: reactions are considered atomic, i. e. they take no time. Computational steps execute like <b>combinatorial</b> <b>circuits.</b> Synchronous broadcast: instantaneous communication, i. e. each automaton {{in the system}} considers the outputs of others as being part of its own inputs. Three-phase cyclic execution model (cyclic evolution) : 1. Read input signals (input event) 2. Compute the reaction 3. Update outputs (output event) ...|$|R
40|$|Integer {{division}} {{is an important}} arithmetic operation on microprocessors. To derive integer division algorithms we present an unconvential approach: a derivation technique in a calculational style, that guarantees that the derived algorithms are correct. Four different algorithms are derived using this method: restoring division, non-restoring divsion, radix- 4 division and division by multiplication. We translate these to descriptions into <b>combinatorial</b> <b>circuits,</b> expressed in Verilog code. Then the circuits are compiled on a Spartan- 3 Generation FPGA. At the end, we compare the propagation delays and area requirements for these circuits. We show that the division by multiplication is much faster than the other methods, however it only works for 18 bit integers. Integer {{division is}} an important arithmetic operation on microprocessors. To derive integer division algorithms we present an unconvential approach: a derivation technique in a calculational style, that guarantees that the derived algorithms are correct. Four different algorithms are derived using this method: restoring division, non-restoring divsion, radix- 4 division and division by multiplication. We translate these to descriptions into <b>combinatorial</b> <b>circuits,</b> expressed in Verilog code. Then the circuits are compiled on a Spartan- 3 Generation FPGA. At the end, we compare the propagation delays and area requirements for these circuits. We show that the division by multiplication is much faster than the other methods, however it only works for 18 bit integers...|$|R
40|$|The modern {{integrated}} circuit {{is one of}} the most complex products that has been engineered to-date. It continues to grow in complexity as the years progress. As a result, very large-scale integrated (VLSI) circuit design now involves massive design teams employing state-of-the art computer-aided design (CAD) tools. One of the oldest, yet most important CAD problems for VLSI circuits is physical design automation, where one needs to compute the best physical layout of millions to billions of circuit components on a tiny silicon surface Lim 08. The process of mapping an electronic design to a chip involves a number of physical design stages, one of which is clustering. In this paper, we focus on problems in clustering which are critical for more sustainable chips. The clustering problem in <b>combinatorial</b> <b>circuits</b> alone is a source of multiple models. In particular, we consider the problem of clustering <b>combinatorial</b> <b>circuits</b> for delay minimization, when logic replication is not allowed (CN). The problem of delay minimization when logic replication is allowed (CA) has been well studied, and is known to be solvable in polynomial-time Wong 1. However, unbounded logic replication can be quite expensive. Thus, CN is an important problem. We show that selected variants of CN are NP-hard. We also obtain approximability and inapproximability results for these problems. A preliminary version of this paper appeared in Don 15. Comment: 20 pages, 10 figure...|$|R
40|$|This paper {{presents}} a <b>combinatorial</b> <b>circuit</b> for fast division Q:=A/D. High speed is achieved thanks firstly to an improved algorithm and secondly to its realization in gallium arsenide. An n bit divider produces an n bit quotient Q in 9 *n NOR-gate-delays with n/sup 2 / add/subtract cells (called tail) controlled by n controllers (called head). The {{implementation of the}} divider circuit has been achieved by using buffering techniques and a full custom layout methodology that are well suited for high performance designs in GaAs direct-coupled FET logic (DCFL). Comparison of GaAs and CMOS implementations are given...|$|E
40|$|Since {{there is}} many {{advancement}} in VLSI technology {{and there are}} many efficient styles of designing VLSI circuits. Some of the styles are CMOS, PTL, GDI (Gate Diffusion Input) techniques. GDI technique helps in designing low-power digital <b>combinatorial</b> <b>circuit</b> by which we can eradicate demerits of CMOS, PTL techniques. This technique allows reducing power consumption, propagation delay, and area of digital circuits while maintaining low complexity of logic design. The different methods are compared with respect to the layout area; transistor count, delay, and power dissipation are discussed here in this paper showing advantages and drawbacks of GDI compared to CMOS style...|$|E
40|$|Abstract – The {{implementation}} and the fault simulation technique for the highly reliable digital design using two FPGAs under a processor control is presented. Two FPGAs {{are used for}} duplex system design, each including the combination of totally self-checking blocks based on parity predictors to obtain better dependability parameters. <b>Combinatorial</b> <b>circuit</b> benchmarks have been considered in all our experiments and computations. A Totally Self-Checking analysis of duplex system is supported by experimental results from our proposed FPGA fault simulator, where SEU-fault resistance is observed. Our proposed hardware fault simulator is compared also with the software simulation. An area overhead of individual parts implemented in each FPGA is also discussed. I...|$|E
30|$|The {{unification}} signal {{indicates the}} pipeline stage unification. Since the pipeline register between two adjacent <b>combinatorial</b> logic <b>circuits</b> is inactive or by-passed, the two logic circuits operate {{together as a}} single stage.|$|R
40|$|International audience-Higher {{density of}} {{integration}} and lower power technologies {{are becoming more}} sensitive to soft errors caused by radiations. Not only memories and latches are being affected but also <b>combinatorial</b> <b>circuits.</b> Hardening by design techniques based on {{increasing the amount of}} charge representing the bit and redundancy techniques have been used over the years. But what happens if the hardening is affected? Who guards the guardians? This work proposes a system that acts as an SET filter and as a check point with self healing properties to prevent SET propagation. Index Terms-Cosmic rays, Soft Error, SET, SEU, Critical Charge, Temporal Filtering, C-element, BICS current sensor...|$|R
40|$|Abstract—In this paper, an {{analysis}} is presented, which demonstrates the effect pre-logic factoring could have on an automated combinational logic synthesis process succeeding it. The impact of pre-logic factoring for some arbitrary <b>combinatorial</b> <b>circuits</b> synthesized within a FPGA based logic design environment has been analyzed previously. This paper explores a similar effect, {{but with the}} non-regenerative logic synthesized using elements of a commercial standard cell library. On an overall basis, the results obtained pertaining to the analysis {{on a variety of}} MCNC/IWLS combinational logic benchmark circuits indicate that pre-logic factoring has the potential to facilitate simultaneous power, delay and area optimized synthesis solutions in many cases. Keywords—Algebraic factoring, Combinational logic synthesis...|$|R
40|$|Gate {{diffusion}} input (GDI) —a {{new technique}} of low-power digital <b>combinatorial</b> <b>circuit</b> design—is described. This technique allows reducing power consumption, propagation delay, and area of digital circuits while maintaining low complexity of logic design. Performance comparison with traditional CMOS and various pass-transistor logic design techniques is presented. The different methods are compared {{with respect to}} the layout area, number of devices, delay, and power dissipation. Issues like technology compatibility, top-down design, and precomputing synthesis are discussed, showing advantages and drawbacks of GDI compared to other methods. Several logic circuits have been implemented in various design styles. Their properties are discussed, simulation results are reported, and measurements of a test chip are presented...|$|E
40|$|Renal {{involvement}} {{is a major}} medical concern in the diabetic population, and with the global epidemic of diabetes, diabetic nephropathy (DN) became {{the leading cause of}} end-stage renal failure in the Western world. Heparanase (the only known mammalian endoglycosi-dase that cleaves heparan sulfate) is essentially involved in DN pathogenesis. Nevertheless, the exact mode of heparanase action in sustaining the pathology of DN remains unclear. Here we describe a previously unrec-ognized <b>combinatorial</b> <b>circuit</b> of heparanase-driven mo-lecular events promoting chronic inflammation and renal injury in individuals with DN. These events are fueled by heterotypic interactions among glomerular, tubular, and immune cell compartments, as well as diabetic milieu (DM) components. We found that under diabetic con...|$|E
40|$|International audienceComputing cores to be {{implemented}} on FPGAs may involve divisions by small integer constants in fixed or floating point. This article presents a family of architectures addressing this need. They are derived from a simple recurrence whose body can {{be implemented}} very efficiently as a look-up table that matches the hardware resources of the target FPGA. For instance, division of a 32 -bit integer by the constant 3 may be implemented by a <b>combinatorial</b> <b>circuit</b> of 48 LUT 6 on a Virtex- 5. Other options are studied, including iterative implementations, and architectures based on embedded memory blocks. This technique also computes the remainder. An efficient implementation of the correctly rounded division of a floating-point constant by such a small integer is also presented...|$|E
40|$|This paper gives {{a simple}} but nontrivial set of local {{transformation}} rules for Control-NOT(CNOT) -based <b>combinatorial</b> <b>circuits.</b> It is shown that this rule set is complete, namely, for any two equivalent circuits, S 1 and S 2, there is a sequence of transformations, each {{of them in the}} rule set, which changes S 1 to S 2. Our motivation is to use this rule set for developing a design theory for quantum circuits whose Boolean logic parts should be implemented by CNOT-based circuits. As a preliminary example, we give a design procedure based on our transformation rules which reduces the cost of CNOTbased circuits...|$|R
40|$|We {{describe}} {{a model of}} Field Programmable Gate Array based systems realised with the Stochastic Activity Networks formalism. The model can be used (i) to debug the circuit design synthesised from the high level description of the system, and (ii) to calculate the signal probabilities and transition densities of the circuit design, which are parameters {{that can be used}} for reliability analysis, power consumption estimation and pseudo random testing. We validate the developed model by reproducing the results presented in other studies for some representative <b>combinatorial</b> <b>circuits,</b> and we explore the applicability of the proposed model in the analysis of real-world devices by analysing the actual implementation of a circuit for the generation of Cyclic Redundancy Check codes...|$|R
40|$|Abstract. Recent work {{showed that}} staging and {{abstract}} interpretation {{can be used}} to derive correct families of <b>combinatorial</b> <b>circuits,</b> and illustrated this technique with an in-depth analysis of the Fast Fourier Transform (FFT) for sizes 2 n. While the quality of the generated code was promising, it used more floatingpoint operations than the well-known FFTW codelets and split-radix algorithm. This paper shows that staging and abstract interpretation can in fact be used to produce circuits with the same number of floating-point operations as each of split-radix and FFTW. In addition, choosing between two standard implementations of complex multiplication produces results that match each of the two algorithms. Thus, we provide a constructive method for deriving the two distinct algorithms. ...|$|R
