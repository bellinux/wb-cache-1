8|12|Public
5|$|After the 1973 oil crisis, the Brazilian {{government}} made mandatory {{the use of}} ethanol blends with gasoline, and neat ethanol-powered cars (E100 only) were launched to the market in 1979, after testing with several prototypes developed by four carmakers. Brazilian carmakers modified gasoline engines to support ethanol characteristics and changes included compression ratio, amount of fuel injected, replacement of materials that would get corroded by the contact with ethanol, use of colder spark plugs suitable for dissipating heat due to higher flame temperatures, and an auxiliary <b>cold-start</b> <b>system</b> that injects gasoline from a small tank in the engine compartment to help starting when cold.|$|E
2500|$|Volkswagen do Brasil {{produced}} and sold neat ethanol-powered, (E100 only), vehicles in Brazil, and production was discontinued {{only after they}} were supplanted by more modern Flex Fuel technology. As {{a response to the}} 1973 oil crisis, the Brazilian government began promoting bioethanol as a fuel, and the National Alcohol Program -Pró-Álcool- (...) was launched in 1975. Compelled by the 1979 energy crisis, and after development and testing with government fleets by the CTA at São José dos Campos, and further testing of several prototypes developed by the four local carmakers, including Volkswagen do Brasil, neat ethanol vehicles were launched in the Brazilian market. Gasoline engines were modified to support hydrous ethanol characteristics and changes included compression ratio, amount of fuel injected, replacement of materials that would get corroded by the contact with ethanol, use of colder spark plugs suitable for dissipating heat due to higher flame temperatures, and an auxiliary <b>cold-start</b> <b>system</b> that injects gasoline from a small tank in the engine compartment to help starting when cold. Within six years, around 75% of all Brazilian passenger cars were manufactured with ethanol engines.|$|E
50|$|The TU250x had a twin valve, single {{cylinder}} engine with a closed-loop Electronic Fuel Injection (EFI) system (marketed as Suzuki Dual Throttle Valve (SDTV)) and a 32-bit ECU, oxygen sensor, catalytic converter, integral <b>cold-start</b> <b>system,</b> 32mm throttle body 10-nozzle injector and a proprietary air injection system (marketed as Suzuki Pulsed-secondary AIR-injection or PAIR) that introduces fresh air from the airbox into the exhaust port to ignite unburned hydrocarbons, reducing emissions. In the United States, the TU does not meet California emissions requirements and has remained a 49-state model.|$|E
50|$|The TurboDOS loader OSLOAD.COM is {{a program}} {{containing}} an abbreviated version of the kernel and drivers. Its purpose is to load the full TurboDOS operating system from a disk file (OSSERVER.SYS) into memory at each <b>system</b> <b>cold-start.</b>|$|R
40|$|Abstract—This work {{presents}} the cold-start {{exhaust gas emission}} levels and also performance test on a petrol engine by using the fuel blends. The vehicle, powered by gasoline fuelled engine, {{was used in the}} experiments. The fuel for the engine is supplied using the conventional carburettor <b>system.</b> <b>Cold-start</b> emission levels are measured for gasoline-ethanol and gasoline-isobutanol blends at different proportion. Emission values are recorded for E 5 to E 20 in steps of 5 % and for isobutanol, it is from IB 10 to IB 50 insteps of 10 % increase. The cold start emission test results show that hydrocarbon and carbon monoxide content is lowest for IB 30. And IB 30 showed the highest increase of brake thermal efficiency o...|$|R
40|$|Finding {{effective}} {{solutions for}} <b>cold-starting</b> Context-Aware Recommender <b>Systems</b> (CARSs) {{is important because}} usually low quality recommendations are produced for users, items or contextual situations that are new to the system. In this paper, we tackle this problem with a switching hybrid solution that exploits a custom selection of two CARS algorithms, each one suited for a particular cold-start situation, and switches between these algorithms depending on the detected recommendation situation (new user, new item or new context). We evaluate the proposed algorithms in an off-line experiment by using various contextually-tagged rating datasets. We illustrate some significant performance differences between the considered algorithms and show {{that they can be}} effectively combined into the proposed switching hybrid to cope with different types of cold-start problems. Peer ReviewedPostprint (published version...|$|R
50|$|After the 1973 oil crisis, the Brazilian {{government}} made mandatory {{the use of}} ethanol blends with gasoline, and neat ethanol-powered cars (E100 only) were launched to the market in 1979, after testing with several prototypes developed by four carmakers. Brazilian carmakers modified gasoline engines to support ethanol characteristics and changes included compression ratio, amount of fuel injected, replacement of materials that would get corroded by the contact with ethanol, use of colder spark plugs suitable for dissipating heat due to higher flame temperatures, and an auxiliary <b>cold-start</b> <b>system</b> that injects gasoline from a small tank in the engine compartment to help starting when cold.|$|E
50|$|After {{testing in}} {{government}} fleets with several prototypes developed by local subsidiaries of Fiat, Volkswagen, GM, and Ford, and compelled {{by the second}} oil crisis, the first 16 gasoline stations began supplying hydrous ethanol in May 1979 for a fleet of 2,000 neat ethanol adapted vehicles, and by July, the Fiat 147 was launched to the market, becoming the first modern commercial neat ethanol-powered car (E100) sold in the world. Brazilian carmakers modified gasoline engines to support hydrous ethanol characteristics. Changes included compression ratio, amount of fuel injected, replacement of materials subject to corrosion by ethanol, use of colder spark plugs suitable for dissipating heat due to higher flame temperatures, and an auxiliary <b>cold-start</b> <b>system</b> that injects gasoline from a small tank to aid cold starting. Six years later, approximately 75% of Brazilian passenger cars were manufactured with ethanol engines.|$|E
50|$|Volkswagen do Brasil {{produced}} and sold neat ethanol-powered, (E100 only), vehicles in Brazil, and production was discontinued {{only after they}} were supplanted by more modern Flex Fuel technology. As {{a response to the}} 1973 oil crisis, the Brazilian government began promoting bioethanol as a fuel, and the National Alcohol Program -Pró-Álcool- (Programa Nacional do Álcool) was launched in 1975. Compelled by the 1979 energy crisis, and after development and testing with government fleets by the CTA at São José dos Campos, and further testing of several prototypes developed by the four local carmakers, including Volkswagen do Brasil, neat ethanol vehicles were launched in the Brazilian market. Gasoline engines were modified to support hydrous ethanol characteristics and changes included compression ratio, amount of fuel injected, replacement of materials that would get corroded by the contact with ethanol, use of colder spark plugs suitable for dissipating heat due to higher flame temperatures, and an auxiliary <b>cold-start</b> <b>system</b> that injects gasoline from a small tank in the engine compartment to help starting when cold. Within six years, around 75% of all Brazilian passenger cars were manufactured with ethanol engines.|$|E
40|$|Abstract. In this article, we analyze {{tag-based}} user profiles, which {{result from}} social tagging activities in Social Web systems {{and particularly in}} Flickr, Twitter and Delicious. We investigate the characteristics of tag-based user profiles within these systems, examine to what extent tag-based profiles of individual users overlap between the systems and identify significant benefits of cross-system user modeling by means of aggregating the different profiles of a same user. We present a set of cross-system user modeling strategies and evaluate their performance in generating valuable profiles {{in the context of}} tag and resource recommendations in Flickr, Twitter and Delicious. Our evaluation shows that the cross-system user modeling strategies outperform other strategies significantly and have tremendous impact on the recommendation quality in <b>cold-start</b> settings where <b>systems</b> have sparse information about their users. ...|$|R
40|$|Abstract—Most {{recommender}} systems, such as collaborative filtering, cannot provide personalized recommendations until a {{user profile}} has been created. This {{is known as}} the new user <b>cold-start</b> problem. Several <b>systems</b> try to learn the new users’ profiles as part of the sign up process by asking them to provide feedback regarding several items. We present a new, anytime preferences elicitation method that uses the idea of pairwise comparison between items. Our method uses a lazy decision tree, with pairwise comparisons at the decision nodes. Based on the user’s response to a certain comparison, we select on-the-fly what pairwise comparison should next be asked. A comparative field study has been conducted for examining the suitability of the proposed method for eliciting the user’s initial profile. The results indicate that the proposed pairwise approach provides more accurate recommendations than existing methods and requires less effort when signing up newcomers. I...|$|R
40|$|Capturing user {{preferences}} is {{a problematic}} task. Simply asking the users {{what they want}} is too intrusive and prone to error, yet monitoring behaviour unobtrusively and finding meaningful patterns is both difficult and computationally time consuming. Capturing accurate user preferences is, however, an essential task if the information systems of tomorrow are to respond dynamically to the changing needs of their users. This thesis tests the hypothesis that using an ontology to represent user profiles offers advantages over traditional profile representations in the context of recommender systems. A novel ontology-based approach to recommendation is applied to a real world problem and empirically evaluated. Synergy between recommender systems and ontologies is then explored to help overcome both the recommender <b>system</b> <b>cold-start</b> problem and the ontology interest-acquisition problem. Finally, the visualization of profiles in ontological terms is examined in a real world situation and empirically evaluated. EThOS - Electronic Theses Online ServiceGBUnited Kingdo...|$|R
40|$|This work {{presents}} a thermal modeling {{of a new}} <b>cold-start</b> <b>system</b> technology designed for Otto cycle combustion based on the electromagnetic heating principle. Firstly, the paper {{presents a}} state-of-the-art review and presents the context of automobile industry where heated injectors are necessary. The novel method of electromagnetic heating principle to solve the cold-start problem {{is still in the}} development phase and it enables engine starting at low temperatures in vehicles powered by ethanol or flex-fuel vehicles (FFV). This new system technology should be available as an alternative to replace the existing system. Currently, the <b>cold-start</b> <b>system</b> uses an auxiliary gasoline tank, which brings some inconvenience for the user. Secondly, the aim was also to create a physical model that takes into consideration all the parameters involved on the heating process such as power heating and average heat transfer coefficient. The study is based on the lumped system theory to model the ethanol heating process. From the analysis, two ordinary differential equations arise, which allowed an analytical solution. Particularly, an ethanol heating curve inside the injector was obtained, an important parameter in the process. Comparison with experimental data from other authors is also provided. Finally, a sensitivity analysis of controlling parameters such as heating power and heat transfer coefficient variation. The paper is concluded with suggestions for further studies...|$|E
40|$|The {{goal of a}} {{recommender}} system is to suggest items of interest to a user based on historical behavior of a community of users. Given detailed enough history, item-based collaborative filtering (CF) often performs as well or better {{than almost any other}} recommendation method. However, in cold-start situations—where a user, an item, or the entire system is new—simple non-personalized recommendations often fare better. We improve the scalability and performance of a previous approach to handling cold-start situations that uses filterbots, or surrogate users that rate items based only on user or item attributes. We show that introducing {{a very small number of}} simple filterbots helps make CF algorithms more robust. In particular, adding just seven global filterbots improves both user-based and item-based CF in cold-start user, cold-start item, and <b>cold-start</b> <b>system</b> settings. Performance is better when data is scarce, performance is no worse when data is plentiful, and algorithm efficiency is negligibly affected. We systematically compare a non-personalized baseline, user-based CF, item-based CF, and our bot-augmented user- and item-based CF algorithms using three data sets (Yahoo! Movies, MovieLens, and Each-Movie) with the normalized MAE metric in three types of cold-start situations. The advantage of our “naïve filterbot” approach is most pronounced for the Yahoo! data, the sparsest of the three data sets...|$|E
40|$|Recommender systems {{learn about}} user {{preferences}} over time, automatically finding things of similar interest. This reduces {{the burden of}} creating explicit queries. Recommender systems do, however, suffer from cold-start problems where no initial information is available early on upon which to base recommendations. Semantic knowledge structures, such as ontologies, can provide valuable domain knowledge and user information. However, acquiring such knowledge and keeping it up to date is not a trivial task and user interests are particularly difficult to acquire and maintain. This paper investigates the synergy between a web-based research paper recommender system and an ontology containing information automatically extracted from departmental databases available on the web. The ontology is used to address the recommender <b>systems</b> <b>cold-start</b> problem. The recommender system addresses the ontology 9 ̆ 2 s interest-acquisition problem. An empirical evaluation {{of this approach is}} conducted and the performance of the integrated systems measured...|$|R
50|$|Hardware and {{software}} design, development, and manufacturing were split between two primary locations, in Orange County, California, and {{the outskirts of}} Philadelphia. The Orange County location, which was based in a plant in Mission Viejo, California but at times included facilities in nearby Irvine and Lake Forest, {{was responsible for the}} smaller B6x00 line, while the East Coast operations, based in Tredyffrin, Pennsylvania, handled the larger B7x00 line. All machines from both lines were fully object-compatible, meaning a program compiled on one could be executed on another. Newer and larger models had instructions which were not supported on older and slower models, but the hardware, when encountering an unrecognized instruction, invoked an operating system function which interpreted it. Other differences include how process switching and I/O were handled, and maintenance and <b>cold-starting</b> functionality. Larger <b>systems</b> included hardware process scheduling and more capable input/output modules, and more highly functional maintenance processors. When the Bxx00 models were replaced by the A Series models, the differences were retained but no longer readily identifiable by model number.|$|R
40|$|The cold-start is the {{situation}} in which the recommender system has no or not enough information about the (new) users/items i. e. their ratings/feedback; hence, the recommendations are not well performed. This issue is commonly encountered in techniques based on collaborative filtering, as they mainly rely on the feedback of users and items. This paper focuses on the active learning techniques based on collaborative filtering and using decision trees to address the new user <b>cold-start</b> in recommender <b>systems.</b> These techniques propose to interact with new users by asking them to rate sequentially a few items while the system tries to detect their preferences. Their main goal is to find out the best recognizable items for the new user in order to get very informative user’s feedback. Compared to current state of the art, the presented approach takes into account the users’ ratings predictions in addition to the available users’ ratings. The experimentation shows that our approach achieves better performance in terms of precision and limits the number of questions asked to the users. This is specially interesting in datasets with a low number of users...|$|R
40|$|To {{address the}} issue of data {{sparsity}} and <b>cold-start</b> in recommender <b>system,</b> social information (e. g., user-user trust links) has been introduced to complement rating data for improving the performances of traditional model-based recommendation techniques such as matrix factorization (MF) and Bayesian personalized ranking (BPR). Although effective, the utilization of the explicit user-user relationships extracted directly from such social information has three main limitations. First, it is difficult to obtain explicit and reliable social links. Only a small portion of users indicate explicitly their trusted friends in recommender systems. Second, the “cold-start” users are “cold” not only on rating but also on socializing. There is no significant amount of explicit social information that can be useful for “cold-start” users. Third, an active user can be socially connected with others who have different taste/preference. Direct usage of explicit social links may mislead recommendation. To address these issues, we propose to extract implicit and reliable social information from user feedbacks and identify top-k semantic friends for each user. We incorporate the top-k semantic friends information into MF and BPR frameworks to solve the problems of ratings prediction and items ranking, respectively. The experimental results on three real-world datasets show that our proposed approaches achieve better results than the state-of-the-art MF with explicit social links (with 3. 0 % improvement on RMSE), and social BPR (with 9. 1 % improvement on AUC) ...|$|R
40|$|PolyU Library Call No. : [THS] LG 51. H 577 P COMP 2015 Wangxxii, 123 pages :illustrations; 30 cmWith {{the growing}} {{interconnectedness}} {{of the world}} and advances in transportation and communication, an increasing number of people are travelling as independent tourists, putting together their own itineraries and activities from information researched from social media. Moreover, a growing number of travellers post reviews and give ratings online to share experiences and opinions, which have become one important source of information. However, the explosive growth of travel information and the proliferation of uninformative, biased or false information make it very time-consuming and challenging for travellers to find helpful and credible information. Recommender systems can assist travellers in managing the information available and facilitate their travel decisions. There have been some recommender systems developed in the tourism domain. However, these systems usually apply collabo-rative filtering-based, content-based or knowledge-based approaches, which require historical ratings, description of items, or extra knowledge about users' needs. It is difficult for them to generate reliable recommendation when the ratings, description as well as the knowledge are insufficient, and they cannot make recommendations when there is no such information. In the tourism domain, ratings, description and knowledge available are much fewer than the equivalent for books or movies. Therefore, they usually suffer from the sparseness and cold-start issues. Addressing the sparseness issue, we apply rating inference method to augment ratings for rating-based recommender systems. We investigate several clustering approaches to do sentiment analysis on travel reviews to generate numerical ratings. The clustering methods include K-means, co-clustering, hierarchical co-clustering, and six state-of-the-art traditional hierarchical clustering algorithms. Moreover, we compare different features extracted from reviews to choose more suitable features for each clustering method. Experimental results show that hierarchical algorithms (traditional hierarchical clustering and hierarchical co-clustering) with stepwise exploiting strategy lead to more accurate clustering results than non-hierarchical algorithms (K-means and co-clustering). Especially, hierarchical co-clustering method gets better clusters than all of the other clustering methods, no matter what features it uses. From the investigation, we also found {{that it is difficult to}} get very accurate multi-rating clusters by using these unsupervised approaches. Rating inference on reviews can augment ratings for recommendation, but it is not helpful for solving the cold-start issue, since a new item or traveller has no review. Therefore, a demographic recommender system is applied to the recommendation of attractions to overcome the <b>cold-start</b> problem. Our <b>system</b> categorizes travellers using their demographic information and then makes recommendations based on demographic classes. Its advantage is that the history of ratings, description of attractions and extra knowledge are not necessary, so even a new traveller can obtain recommendations. Different machine learning methods are adopted to produce prediction of ratings, so as to determine whether these approaches and demographic information are suitable for providing recommendations. Our preliminary results show that these machine learning methods and demographic information can be used to predict travellers' ratings on attractions. But only limited accuracy can be achieved using demographic information alone. Although recommender systems are able to provide travellers with recom-mendations, most of them make recommendations based on existing ratings or reviews, which may contain uninformative, biased or even false information. Recommendations will be not so helpful or reliable if the recommender systems generate them based on these unreliable information. For instance, TripAdvisor, the world's largest travel community supplies a recommender system which can ranks reviews on an attraction for travellers based on posting dates or ratings. Travellers can then read some top ranked reviews on the attraction. However, there may be some incredible information involved in the top ranked reviews. Hence, it is critical to help travellers seek credible information from such amounts of travel information. Most current work applies mainly qualitative approaches to investigate the credibility of reviews or reviewers without quantitative evaluation. This thesis presents a method that quantifies the credibility of reviewers, to help travellers find more credible information. We propose an Impact Index to quantify the credibility of reviewers by simultaneously evaluating the expertise and trustworthiness based on the number of reviews posted by reviewers and the number of helpful votes received by those reviews. Furthermore, Impact Index is enhanced into the Exposure-Impact Index by considering in addition the number of destinations on which the reviewer posted reviews. Our experimental results show that both methods perform better than the state-of-the-art method in discovering credible reviewers. To further examine the effectiveness and applicability of Impact Index and Exposure-Impact Index, we evaluate them on the data sets collected from two rather different online travel communities: TripAdvisor, the world{ 174 }s largest travel community, and Qunar, one of the most popular travel communities in China, by taking into consideration the differences between these two travel communities, such as different languages, scales and data distributions. Experimental results show that both Impact Index and Exposure-Impact Index lead to results more consistent with human judgments. They can not only discover more credible reviewers, but also provide better ranking of reviewers, which manifest their effectiveness and applicability across diverse travel communities. Department of ComputingPh. D., Dept. of Computing, The Hong Kong Polytechnic University, 2015 Doctorat...|$|R
40|$|Tez (Yüksek Lisans) [...] İstanbul Teknik Üniversitesi, Bilişim Enstitüsü, 2012 Thesis (M. Sc.) [...] İstanbul Technical University, Institute of Informatics, 2012 The {{number and}} kind of {{available}} content {{and the number of}} users who can view them have increased tremendously in both movie/television and music domains. Therefore, recommendation systems that can accurately recommend to a certain user the set of products that he would most likely be interested and as fast as possible, have become important. While content based recommendation systems use features of products a user has viewed so far and they are domain dependent, domain independent collaborative filtering systems use only the ratings given to each product by a number of users. There are some shortcomings of both collaborative and content-based recommendation <b>systems.</b> <b>Cold-start</b> problem {{is one of the most}} important problem of the collaborative filtering systems. If a movie is not watched in the training set, this movie can not be recommended to any user. Content-based system can solve this problem. Moreover if a user is new in the system namely if s/he did not watch any movies, collaborative filtering system can not recommend any movies to this user either. In order to solve the new user problem user demographics can be used, however they tend to be not so reliable for many domains. In our system we first observe the watching behavior of a user for a number of movies and then do recommendations. Content-based recommendation systems rely on content features which need to be extracted. Rating matrices are generally sparse and high dimensional matrices, so it is costly to work with large matrices. In collaborative filtering system matrix factorization methods can generate low dimensional user and item factors to solve the sparsity problem. Content-based recommendation systems rely on content data gathered for a specific user and if too complex models are chosen they may suffer from overspecialization. Different hybrid recommendation systems that integrate content and collaborative recommendation systems have been proposed in the literature. In this thesis, content-based, collaborative and hybrid TV movie recommendation methods are proposed and evaluated. In the content-based recommendation system as the content for a movie, we use information such as movie actor, producer, genre and also words obtained from the movie summaries. In addition to these fields, computed (implicit) ratings which users give to the movies are used in the content-based system. Another recommendation method used in this work is the collaborative filtering method. Collaborative filtering method uses only users? ratings for movies. In this project, we also propose a hybrid movie recommendation system which uses a linear combination of recommendations proposed by the content-based and collaborative filtering methods. Recommendation systems need user ratings. However, for the TV recommendation problem, we do not have explicit ratings from the users. In this thesis, we used the implicit ratings of the movies, which are generated as the percentage of the movie watched by the user over all presentations of the movie. Therefore if a user watched a movie multiple times or different parts in different sessions, the implict rating reflects that. Another contribution of the thesis is the use of different performance evaluation criteria for TV movie recommendation. We evaluate performance of the movie recommendation system by using four evaluation measures. Two of them are the well known information retrieval performance measurements precision and recall. Precision is determined in our system as the number of movies watched by the user in top 10 recommendations divided by 10. High precision means system hits many correct movies in the top 10 recommendation. If a user has watched a lot of content, his/her precision is naturally high. Recall solves this problem since it divides the top 10 hits by the number of movies user u watched in the test set. In addition, two other performance evaluation measures are developed in this thesis: normalized precision and rating weighted normalized precision. Precision gets higher as the number of movies that a user watched in the test set increases and it also gets higher as the number of movies in the test set decreases. Normalized precision takes into account the number of the movies in the test set. Ratio of the number of movies watched by a user and the number of movies in the test set can be used as a normalization term for each user. Normalized precision is precision normalized by this ratio. This ratio is proportional to how much better a recommendation is compared to a uniform random recommendation system to a user who watches movies uniformly random. A recommendation system which recommends movies watched by the user with high ratings is more preferable to another system that recommends the same number of watched movies with low ratings. Rating weighted normalized precision (RWNP) performance measure takes into account the users ratings for the test movies. It is computed as the sum of the ratings of the watched movies in the top 10 recommendations and divided by the ratio of the number of movies that are watched by the user in the test set and the total number of the movies in the test set. The content-based recommendation system uses actor, genre, director and keyword features of movies watched by a user. In the feature extraction phase, first of all a movie-feature matrix which contains the features of all movies in the training set, is created. For a particular user, an existing feature in a watched movie is scaled by the implicit rating for that movie and the sum of the user?s weights for the movie?s features divided by the number of movies that the user watched in the training set gives the weight of a feature for that user. These features are reference features for the recommendation of the test set movies. If a feature weight for a user is greater than the other feature weights it means that the user gives more importance to this feature than the others. This feature weight computation is done separately for four different feature sets: actor, genre, director and keyword. In the test set when movie i will be recommended to the user u, firstly features of the movie i are extracted. Assume that actor feature set is chosen, which actor features movie i contains and whether user u watched such a movie which contains one of these actor features is investigated. If user u watched a movie which contains the actors of the movie i in the training set, then user u rating for movie i is determined by summation of the actor features weights of the user u. While generating ratings according to actor feature set, since usually movies have more than one actor, all available feature weights are summed. On the other hand, according to the director feature set generally there is one director for each movie, so user weights for director features are used directly as ratings for movies. It is observed that ratings generated using the director feature set are more successful than the others, while the genre feature set is also quite successful. Content-based recommendations for each feature set are also combined using three different strategies. Before combination, all generated ratings are normalized to 0 - 1 range using min-max normalization. In the first combination scheme, different feature sets? ratings are summed directly to generate a new rating for a user to a movie. The second combination scheme takes a weighted sum of the ratings for each feature set. The weight of a feature set is determined as the exponential of the negative mean absolute training set error between the actual ratings and the predicted ratings for that feature set. Weighted sum combination gives better results than sum. The third strategy aims to use the feature set which is likely to be the most successful for a particular user. The feature set with the minimum mean absolute training error for the user is chosen as the feature set to be used for test recommendations. In collaborative filtering, generally explicit feedback recommendation methods where users rank movies explicitly such as likes or dislikes or using scores, are used. However, in TV program recommendation problem, as in many other areas, it is difficult to request the explicit ratings from the user for the programs. Instead of ratings, there is information on how long the user watched an item. For such problems, instead of explicit recommendation methods, implicit methods should be used. In this work, we process the time durations for which users watch the programs to obtain implicit ratings and similar to prior work of others use these ratings for implicit recommendation. The user-movie matrix, which contains the users? ratings for movies can be used to assess similarities between users and movies and hence, for example, movies liked by users similar to the current user can be recommended. However, the user-movie matrix is a very sparse matrix and most user-user and item-item similarities may happen to be just zero. Matrix factorization techniques are used to represent each movie and user in a small number of reduced dimensions where user-item similarities are as close as possible to the ratings given in the training set. We first use the implicit computed ratings as if they are explicit ratings and use explicit matrix factorization methods. While learning the matrix factors, we introduce adaptive learning rate to speed up the learning and we also introduce user/item adaptive regularization. We also use implicit matrix factorization and compare it with the other recommendation methods. Since matrix factorization is a costly procedure which involves many parameters, we also used count based collaborative filtering to measure user-user similarities. In this method when movie i will be recommended to the user u, first the set of users who watched movie i in the training set is obtained. For each of these users, the count of movies liked by user u and that user is used as a similarity between the users. Count based collaborative filtering predicts ratings as the similarity weighted ratings of the users similar to user u for movie i [...] In this thesis, we propose two hybrid movie recommendation systems by combining content-based and collaborative recommendation system ratings linearly. The first hybrid system HybridCommonMovie is obtained by combining content-based system and count based collaborative filtering system. The second one HybridMF is generated by combining content-based system and matrix factorization based collaborative filtering system. A weight parameter is used to adjust the contribution of the methods in the linear combination. Experiments were performed to assess the performance of the recommendation algorithms for thirteen months of data. Among all the methods experimented with, the best results are obtained with the HybridCommonMovie systems. For this recommendation system, averaged over all users, precision, recall, normalized precision and rating weighted normalized precision results are better than the other recommendation systems. HybridCommonMovie method also is the method which has the smallest number of parameters that need to be adjusted for different datasets, therefore is the preferred recommendation method for the TV recommendation dataset used in this thesis. Yüksek LisansM. Sc...|$|R

