118|309|Public
25|$|It was {{possible}} to wire the carry of one accumulator into another accumulator to perform double precision arithmetic, but the accumulator carry <b>circuit</b> <b>timing</b> prevented the wiring of 3+ for even higher precision. ENIAC used 4 of the accumulators (controlled by a special multiplier unit) to perform up to 385 multiplication operations/second; 5 of the accumulators were controlled by a special divider/square-rooter unit to perform up to 40 division operations/second or 3 square root operations/second.|$|E
50|$|Emulators do not model precise <b>circuit</b> <b>timing,</b> {{and hence}} they will {{probably}} not find any race conditions or setup and hold time violations.|$|E
5000|$|The {{critical}} path {{is defined as}} the path between an input and an output with the maximum delay. Once the <b>circuit</b> <b>timing</b> has been computed by one of the techniques below, the {{critical path}} can easily be found by using a traceback method.|$|E
40|$|Abstract—This paper {{presents}} a methodology to model {{and analyze the}} functional behavior of logic <b>circuits</b> under <b>timing</b> variations. In the framework, first a Time Accurate Model (TAM) of the circuit is constructed. The TAM represents {{the behavior of the}} circuit in the functional domain under a discrete time model. Afterwards, Variation Logic is inserted to apply the timing variations. Moreover, the circuit TAM is enhanced by Time Control (TC) logic to model the circuit frequency. We apply the proposed methodology to analyze a circuit or an approximate <b>circuit</b> under <b>timing</b> variations as well as to analyze a circuit under timing-induced errors for approximate computing. Keywords—logic <b>circuits,</b> <b>timing</b> variations, formal verification I...|$|R
40|$|A motor {{controller}} employing a triac through which {{power is supplied}} to a motor is described. The open circuit voltage appearing across the triac controls the operation of a <b>timing</b> <b>circuit.</b> This <b>timing</b> <b>circuit</b> triggers on the triac at a time following turn off which varies inversely {{as a function of}} the amplitude of the open circuit voltage of the triac...|$|R
40|$|This paper {{presents}} a methodology for testing highperformance pipelined circuits with slow-speed testers. The technique uses a clock <b>timing</b> <b>circuit</b> to control data transfer {{in the pipeline}} in test mode. A clock <b>timing</b> <b>circuit</b> capable of achieving a timing resolution of 50 ps in 0. 18 #m CMOS technology is presented. The design provides the ability to test the clock <b>timing</b> <b>circuit</b> itself...|$|R
50|$|Simple {{timing lights}} may just contain a neon lamp {{operated}} by the energy provided by the ignition <b>circuit.</b> <b>Timing</b> lights using xenon strobe lamps electronically triggered by the spark provide brighter light, allowing use of the timing lamp under normal shop lighting or daylight conditions.|$|E
50|$|It was {{possible}} to wire the carry of one accumulator into another accumulator to perform double precision arithmetic, but the accumulator carry <b>circuit</b> <b>timing</b> prevented the wiring of 3+ for even higher precision. ENIAC used 4 of the accumulators (controlled by a special multiplier unit) to perform up to 385 multiplication operations/second; 5 of the accumulators were controlled by a special divider/square-rooter unit to perform up to 40 division operations/second or 3 square root operations/second.|$|E
50|$|High-performance {{integrated}} circuits {{have traditionally been}} characterized by the clock frequency at which they operate. Gauging {{the ability of a}} circuit to operate at the specified speed requires an ability to measure, during the design process, its delay at numerous steps. Moreover, delay calculation must be incorporated into the inner loop of timing optimizers at various phases of design, such as logic synthesis, layout (placement and routing), and in in-place optimizations performed late in the design cycle. While such timing measurements can theoretically be performed using a rigorous circuit simulation, such an approach is liable to be too slow to be practical. Static timing analysis plays a vital role in facilitating the fast and reasonably accurate measurement of <b>circuit</b> <b>timing.</b> The speedup comes from the use of simplified timing models and by mostly ignoring logical interactions in circuits. It has become a mainstay of design over the last few decades.|$|E
50|$|Underclocking, {{also known}} as downclocking, is modifying a {{computer}} or electronic <b>circuit's</b> <b>timing</b> settings to run at a lower clock rate than is specified. Underclocking is used to reduce a computer's power consumption, increase battery life, reduce heat emission, and it may also increase the system's stability and compatibility. Underclocking may be implemented by the factory, but many computers and components may be underclocked by the end user.|$|R
40|$|A {{synchronized}} target subsystem {{for use in}} {{an automated}} docking system for docking a chase vehicle with a target vehicle wherein the chase vehicle is provided with a video camera for feeding digitized frames to an image processing unit which controls a <b>timing</b> <b>circuit.</b> 'Me <b>timing</b> <b>circuit</b> turns on the video camera to digitize a foreground frame {{and at the same}} time turns on a transmitter on the chase vehicle. A power generating antenna on the target vehicle receives the transmitted signal from the transmitter and actuates lights on the chase vehicle so that these lights appear in the foreground frame. After the foreground frame has been grabbed, the <b>timing</b> <b>circuit</b> turns the transmitter off and signals the video camera to digitize a background frame. The image processing unit subtracts the background frame from the foreground frame and provides a docking signal...|$|R
40|$|A single chip {{camera device}} is formed {{on a single}} {{substrate}} including an image acquisition portion for control portion and the <b>timing</b> <b>circuit</b> formed on the substrate. The <b>timing</b> <b>circuit</b> also controls the photoreceptors in a double sampling mode in which are reset level is first read and then after an integration time a charged level is read...|$|R
40|$|Abstract — This paper {{presents}} an adjustment-based modeling frame-work for Statistical Static Timing Analysis (SSTA) when {{the dimension of}} parameter variability is high. Instead of building a complex model between the <b>circuit</b> <b>timing</b> and parameter variability, we build a model which adjusts an approximate variation-aware timing into an accurate one. The intuition {{is that it is}} simpler to build a model which adjusts an approximate estimate into an accurate one. It is also more efficient to obtain an approximate <b>circuit</b> <b>timing</b> model. The combination of these two observations makes the use of an adjustment-based model a good choice for SSTA with high dimension of parameter variability. To build the adjustment model, we use a simulation-based approach, which is based on Gaussian Process. Combined with intelligent sampling, we show that an adjustment-based model can more effectively capture the nonlinearity of the <b>circuit</b> <b>timing</b> with respect to parameter variability compared to polynomial modeling. We also show that with only 200 samples of the <b>circuit</b> <b>timing</b> and 42 independent parameter variations, adjustment-based modeling obtains higher accuracy than direct SSTA using quadratic modeling. I...|$|E
40|$|This paper compares several {{methods for}} {{determining}} an optimal non-zero clock skew schedule for synchronous digital VLSI circuits. The optimality {{of a given}} dock skew schedule which satisfies the <b>circuit</b> <b>timing</b> constraints is defined {{from the perspective of}} <b>circuit</b> <b>timing</b> reliability. This optimality is characterized by the deviation of the computed clock schedule from an 'ideal' objective clock schedule. Both linear and quadratic programming (LP and QP) formulations of the clock skew scheduling problem are analyzed and a novel LP formulation is introduced. These formulations are compared using the ISCAS' 89 suite of benchmark circuits. Mathematical optimization results are calculated using the large scale optimization package Lancelo...|$|E
40|$|Variability {{of process}} {{parameters}} makes prediction of digital <b>circuit</b> <b>timing</b> characteristics {{an important and}} challenging problem in modern chip design. Recently, statistical static timing analysis (statistical STA) has been proposed as a solution. Unfortunately, the existing approaches either do not consider explicit gate delay dependence on process parameters [3]- [6] or restrict analysis to linear Gaussian parameters only [1, [2]. Here we extend the capabilities of parameterized block-based statistical STA [1] to handle nonlinear function of delays and non-Gaussian parameters, while retaining maximum efficiency of processing linear Gaussian parameters. Our novel technique improves accuracy in predicting <b>circuit</b> <b>timing</b> characteristics and retains such benefits of parameterized block-based statistical STA as an incremental mode of operation, computation of criticalit...|$|E
50|$|Tools were {{provided}} by independent vendors, partners of e*ECAD, and included process and device modeling and simulation, SPICE circuit simulation, schematic entry, parasitics extraction, IC layout editing, physical layout verification, <b>circuit</b> verification, <b>timing</b> analysis, and others.|$|R
40|$|International audienceThis article {{describes}} {{the use of a}} near-field electromagnetic pulse EMP injection technique in order to perform a hardware cryptanalysis of the AES algorithm. This characterization technique is {{based on the fact that}} conductors, such as the rails of a Power Distribution Network PDN which is one of the primary EMI risk factors, act as antennas for the radiated EMP energy. This energy induces high electrical currents in the PDN responsible for the violation of the integrated <b>circuit's</b> <b>timing</b> constraints. This modification of the chip's behavior is then exploited in order to recover the AES key by using cryptanalysis techniques based on Differential Fault Analysis (DFA) ...|$|R
40|$|Abstract—Despite an {{increasing}} interest in digital sub-threshold circuits {{little research has}} been dedicated to timing modeling in this voltage domain so far. Especially high timing variabilities makes proper modeling necessary to allow for the prediction of timing behavior and timing yield on the path towards design automation. This paper first deals with gate timing characterization at sub-threshold voltages and a characterization waveform well resembling the actual transistor-level waveforms in this voltage domain is proposed. The error made in this abstraction step is identified and shown to be typically below 3 %. Secondly, the modeling of timing variability is considered and the high correlation between gate delays due to slope propa-gation combined with strong non-linearities in the delay-slope dependencies are pointed out as modeling challenges. A path-based logic-level Monte-Carlo technique, already magnitudes faster than transistor-level simulation, is applied and shown to match transistor-level Monte-Carlo simulation results better than 3 % in mean and 7 % in standard deviation values. Index Terms—sub-threshold <b>circuits,</b> <b>timing</b> modeling, timing analysis, SSTA, characterization I...|$|R
40|$|Statistical Vt {{variations}} lead {{to large}} variations of leakage current, which cause statistical voltage drops {{on the power}} grid that can a#ect <b>circuit</b> <b>timing.</b> We propose a statistical analysis technique whereby variances of the leakage currents are used to estimate the susceptibility to timing violations due to leakage-induced voltage drops...|$|E
40|$|Integrated {{circuit design}} with sub- 100 nm {{technology}} requires {{closer attention to}} the effect of process variations on <b>circuit</b> <b>timing.</b> In a previous work, we had developed a method of statistical timing analysis in which the effect of process variations on <b>circuit</b> <b>timing</b> is assessed, given a generic logic path in a target design technology. In this work, we extend that previous work in an important way, by incorporating into the analysis the effect of clock skew. The resulting model captures both die-to-die and within-die process variations, in both logic and clock paths, it handles within-die correlation using principal component analysis, and it leads to an expression for the resulting timing yield. Among other uses, this allows one to compute how much reduction one will see in the timing yield, for a given clock skew variance. 1...|$|E
40|$|Manufacturing process {{variations}} lead to <b>circuit</b> <b>timing</b> variability and {{a corresponding}} timing yield loss. Traditional corner analysis consists of checking all process corners (combinations of process parameter extremes) {{to make sure}} that <b>circuit</b> <b>timing</b> constraints are met at all corners, typically by running static timing analysis (STA) at every corner. This approach is becoming too expensive due to the exponential {{increase in the number of}} corners with modern processes. As an alternative, we propose a linear-time approach for STA which covers all process corners in a single pass. Our technique assumes a linear dependence of delay on process parameters and provides tight bounds on the worst-case circuit delay. It exhibits high accuracy (within 1 - 3 %) in practice and, if the circuit has m gates and n relevant process parameters, the complexity of the algorithm is O(mn). 1...|$|E
40|$|Abstract—This paper {{describes}} a timing-skew calibration technique which equalizes the phase spacings among multiphase clocks. The scheme uses simple sample-and-hold circuits con-trolled by the multiphase clocks to sample a common reference input. Phase spacing {{is measured by}} {{counting the number of}} zero crossings between two adjacent sampling sequences. A zero-crossing detection scheme is proposed. It has better immu-nity against the offsets of the comparators used in the detector. A digital calibration processor is also proposed. It examines the outputs from the zero-crossing detectors, and then adjusts the delays of clock buffers in order to minimize timing skews. The proposed calibration scheme does not demand stringent require-ment for the reference input. Its application to a eight-channel 6 -b time-interleaved analog-to-digital converter is demonstrated. Index Terms—Analog–digital conversion, calibration, clocks, phase estimation, time-interleaved, <b>timing</b> <b>circuits,</b> <b>timing</b> skew...|$|R
40|$|We {{present a}} new photon <b>timing</b> <b>circuit</b> that {{achieves}} a time resolution of 35  ps full width at half maximum with single photon avalanche diodes having active area diameters up to 200  μm. The <b>timing</b> <b>circuit</b> {{is based on}} a double avalanche current sensing network that makes it particularly suited to operation at high photon counting rates. Thanks to its self-adjusting capabilities, no trimming is needed even when changing the photodetector operating conditions over a wide range...|$|R
40|$|Relative Timing is {{introduced}} as an informal method for aggressive asynchronous design. It is demonstrated on three example circuits (C-Element, FIFO, and RAPPID Tag Unit), facilitating transformations from speed-independent circuits to burst-mode, relative timed, and pulse-mode <b>circuits.</b> Relative <b>timing</b> enables improved performance, area, power and testability {{in all three}} cases. 1...|$|R
40|$|Timing circuit {{turns on}} power source on command, then {{turns it off}} again after preset interval. In {{comparison}} with prior devices, unit consumes little power and is smaller, lighter in weight, and less complicated. Timer includes oscillator and counter in integrated <b>circuit.</b> <b>Timing</b> interval equals oscillator period multiplied by number of cycles to be counted...|$|E
40|$|Abstract—Manufacturing process {{variations}} lead to <b>circuit</b> <b>timing</b> variability and {{a corresponding}} timing yield loss. Traditional corner analysis consists of checking all process corners (combinations of process parameter extremes) {{to make sure}} that <b>circuit</b> <b>timing</b> constraints are met at all corners, typically by running static timing analysis (STA) at every corner. This approach is becoming too expensive due to {{the increase in the number}} of corners with modern processes. As an alternative, we propose a linear-time approach for STA which covers all process corners in a single pass. Our technique assumes a linear dependence of delays and slews on process parameters and provides estimates of the worst case circuit delay and slew. It exhibits high accuracy in practice, and if the circuit has m gates and n relevant process parameters, the complexity of the algorithm is O(mn). Index Terms—Hyperplanes, multicorner, process variations, static timing analysis (STA) ...|$|E
40|$|In this paper, {{we propose}} a timing-reasoning {{algorithm}} {{to improve the}} resolution of delay fault diagnosis. In contrast to previous approaches which identify candidates by utiliz-ing only logic conditions, we propose a timing-simulation-based method to perform the candidate reasoning. Based on the <b>circuit</b> <b>timing</b> information, we identify invalid can-didates which cannot maintain the consistency of failure behaviors. By eliminating those invalid candidates, the di-agnosis resolution can be improved. We then analyze the problem of <b>circuit</b> <b>timing</b> uncertainty caused by the delay variation and the simulation model. We calculate a metric, named invalid-probability, for each candidate. Then we propose a candidate-ranking heuristic which is robust with respect to such sources of timing uncertainty. By rank-ing the candidates based on their invalid-probability, we can improve the candidate first-hit-rate of the traditional critical path tracing (CPT) technique. To demonstrate {{the efficiency of the}} proposed method, we have developed a timing diagnosis framework which can simulate the real diagnosis process to evaluate and compare different algo-rithms. ...|$|E
40|$|A. G. McManus, C. J. Price, N. Snooke, R. Joseph, Design Verification of Automotive Electrical Circuits. Proceedings 13 th International Workshop on Qualitative Reasoning, Loch Awe, 1999. pp. 153 - 159, ISBN 0 - 903878 - 60 - 7 Automotive {{engineers}} are under increasing pressure to produce correct, safe designs in shorter time frames. We present an algorithm for automating Design Verification of automotive electrical circuits, {{building on the}} qualitative simulator used by the AutoSteve system for producing Failure Mode and Effects Analysis (FMEA). Our system allows an engineer to use a specification (in {{the form of a}} state chart) to verify the correct behavior of a circuit design. Design Verification can be used to reveal errors in the specification, sneak <b>circuits,</b> <b>timing</b> and sequence errors, and we give early results for some of these problems. Non peer reviewe...|$|R
40|$|This paper {{presents}} a new formalism anda new algorithm for verifying timed circuits. The formalism, called orbital nets, allows hierarchical verification based on abehavioral semantics of timed trace theory. We present improvements to a geometric timing algorithm that {{take advantage of}} concurrency by using partial orders to reduce the time and space requirements of verification. This algorithm has been fully automated and incorporated into a design system for timed circuits, and experimental results demonstrate that this verification algorithm is practical for realistic examples. 1 Introduction Timing considerations are critical in circuit design. In the design of timed <b>circuits,</b> <b>timing</b> information is taken into account resulting in simpler circuits than their speedindependent counterparts in which gate delays {{are assumed to be}} unbounded [1]. Timing information must also be considered for designs with a mixed synchronous/asynchronous environment. Finally, even in speed-independent [...] ...|$|R
40|$|Abstract The paper investigates {{properties}} of change diagrams. They {{are able to}} model a subclass of concurrent systems, for example asynchronous <b>circuits</b> or <b>timing</b> diagrams. The following results are described: Change diagrams {{are related to the}} class of dynamic min-max graphs. E cient algorithms for timing analysis are derived. Liveness and boundedness properties are investigated...|$|R
40|$|Variabilities {{in metal}} {{interconnect}} structures can affect <b>circuit</b> <b>timing</b> performance or even cause function failure in VLSI designs. This paper proposes {{a method to}} estimate {{the difference between the}} nominal and perturbed circuit waveforms by calculating the moments in frequency-domain via efficient iterative method. The algorithm can be used to accurately reproduce the differential waveforms, or to provide efficient early estimates on the timing impact of the variabilities for RC networks. ...|$|E
40|$|Abstract—The {{impact of}} timing {{variations}} {{on the performance of}} Very-Large-Scale Integrated (VLSI) circuits is increasing as the feature sizes shrink down into the nanometer scale. Timing variations induced by process, environmental or other effects may lead to a failing speedpath. In this paper, first a functional model of <b>circuit</b> <b>timing</b> is constituted. Then, timing variations are added to the model. Afterwards, this model is utilized to diagnose failing speedpaths. Keywords—diagnosis, speedpath, timing variation I...|$|E
40|$|This paper {{presents}} an input-independent method for finding bounds on the voltage drop in RC power bus in digital VLSI circuits. The voltage at power bus nodes {{is expressed in}} term of gate currents using sensitivity analysis. <b>Circuit</b> <b>timing</b> information, functionality and logic dependencies are employed to find maximum simultaneous HL and LH switching in a clock subinterval. The sensitivity information together with an optimization procedure are applied to find bounds on the voltage drop in targeted bus nodes. ...|$|E
40|$|The {{advancement}} in CMOS technology has surpassed the progress in {{computer aided design}} tools, creating an avenue for new design optimization flows. This paper presents a design level transistor sizing based timing optimization algo rithms for mixed-static-dynamic CMOS logic designs. This optimization algorithm performs timing optimization through partitioning a design into static and dynamic <b>circuits</b> based on <b>timing</b> critical paths, and is further extended through a process variation aware <b>circuit</b> level <b>timing</b> optimization algorithm for dynamic CMOS circuits. Implemented on a 64 -b adder and ISCAS benchmark circuits for mixed-static-dynamic CMOS, the design level optimization algo rithm demonstrated a critical path delay improvement of over 52 % in comparison with static CMOS implementation by state-of-the-art commercial optimization tools. </p...|$|R
40|$|Abstract. The paper investigates {{properties}} of change diagrams. They {{are able to}} model a subclass of concurrent systems, for example asynchronous <b>circuits</b> or <b>timing</b> diagrams. The following results are described: – Change diagrams {{are related to the}} class of dynamic min-max graphs. – Efficient algorithms for timing analysis are derived. – Liveness and boundedness properties are investigated. ...|$|R
40|$|Most {{existing}} path sensitizing algorithms {{are only}} available for flat, combinational designs. We present a new dynamic path sensitizing algorithm {{for use in}} timing analysis of synchronous circuits. The algorithm processes hierarchical designs of sequential circuits. Edge triggered flipflops are modeled using impulse gates. The algorithm {{is based on a}} set of sensitizing conditions which include the properties of impulse gates. We introduce a new concept to deal with hierarchical design by recursive processing steps, and to reuse hierarchical information. 1 Introduction To ensure proper functioning of <b>circuits,</b> <b>timing</b> verification has to be performed. The goal of timing verification is to identify all paths in a circuit to check for timing problems. This can be performed by static timing verifiers without resorting to tedious simulation. Timing problems are located by static verifiers timing in paths (error paths). Because static timing verifiers do not take in consideration the functio [...] ...|$|R
