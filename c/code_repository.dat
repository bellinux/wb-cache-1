289|262|Public
5|$|Enhancement of the {{language}} goes along with development of the CPython reference implementation. The mailing list python-dev is the primary forum for discussion about {{the language}}'s development; specific issues {{are discussed in the}} Roundup bug tracker maintained at python.org. Development took place on a self-hosted source <b>code</b> <b>repository</b> running Mercurial, until Python moved to GitHub in January 2017.|$|E
5|$|The Heartbeat Extension for the Transport Layer Security (TLS) and Datagram Transport Layer Security (DTLS) {{protocols}} {{was proposed}} {{as a standard}} in February 2012 by RFC 6520. It provides a way to test and keep alive secure communication links without the need to renegotiate the connection each time. In 2011, one of the RFC's authors, Robin Seggelmann, then a Ph.D. student at the Fachhochschule MÃ¼nster, implemented the Heartbeat Extension for OpenSSL. Following Seggelmann's request to put {{the result of his}} work into OpenSSL, his change was reviewed by Stephen N. Henson, one of OpenSSL's four core developers. Henson failed to notice a bug in Seggelmann's implementation, and introduced the flawed code into OpenSSL's source <b>code</b> <b>repository</b> on December 31, 2011. The defect spread with the release of OpenSSL version 1.0.1 on March 14, 2012. Heartbeat support was enabled by default, causing affected versions to be vulnerable.|$|E
25|$|GIMP is {{primarily}} developed by volunteers {{as a free}} software project associated to both the GNU and GNOME Projects. Development {{takes place in a}} public git source <b>code</b> <b>repository,</b> on public mailing lists and in public chat channels on the GIMPNET IRC network.|$|E
50|$|In the 1990s, {{this system}} {{was used to}} manage the IBM OS/2 and IBM AIX source <b>code</b> <b>repositories.</b>|$|R
40|$|Source <b>code</b> <b>repositories</b> are {{designed}} to store {{a huge amount of}} source code. They also collect indirectly information useful to analyze the development process. Usually, the last set of data is not used at all {{due to the lack of}} specialized tools to collect and analyze such data. This paper presents the early stages of a tool designed to perform acquisition and analysis of data stored in source <b>code</b> <b>repositories.</b> 1...|$|R
5000|$|The {{foundation}} hosts servers for mailing lists, websites, and <b>code</b> <b>repositories</b> for {{a number}} of bioinformatics-related open source projects, including: ...|$|R
25|$|GNOME {{releases}} {{are made}} to the main FTP server {{in the form of}} source code with configure scripts, which are compiled by operating system vendors and integrated with the rest of their systems before distribution. Most vendors use only stable and tested versions of GNOME, and provide it in the form of easily installed, pre-compiled packages. The source code of every stable and development version of GNOME is stored in the GNOME git source <b>code</b> <b>repository.</b> Interested users can always obtain a snapshot of the _master_ development branch or any other branch/tag and build a cutting-edge version for their own use.|$|E
500|$|In {{addition}} to developers, FreeBSD has thousands of [...] "contributors". Contributors are also volunteers {{outside of the}} FreeBSD project who submit patches for consideration by committers, as they don't have direct access to FreeBSD's source <b>code</b> <b>repository.</b> Committers then evaluate contributors submissions and decide what to accept and what to reject. A contributor who submits high-quality patches is often asked to become a committer.|$|E
500|$|On 27 January 2006, the {{developers}} responsible {{for maintaining the}} ReactOS <b>code</b> <b>repository</b> disabled access after a meeting was held to discuss the allegations. When approached by NewsForge, Microsoft declined to comment about the incident. Since ReactOS is a free and open-source software development project, the claim triggered a negative reaction by the free software community; in particular, Wine barred several inactive developers from providing contributions and formal high level cooperation between the two projects remained difficult [...] Contributions from several active ReactOS developers have been accepted post-audit, and low level cooperation for bug fixes still occurs.|$|E
40|$|Abstract. Much of {{the data}} about free, libre, and open source (FLOSS) {{software}} development comes from studies of <b>code</b> <b>repositories</b> used for managing projects. This paper presents a method for integrating data about open source projects by way of matching projects (entities) and deleting duplicates across multiple <b>code</b> <b>repositories.</b> After {{a review of the}} relevant literature, a few of the methods are chosen and applied to the FLOSS domain, including a simple scoring system for confidence in pairwise project matches. Finally, the paper describes limitations of this approach and recommendations for future work. ...|$|R
50|$|OSDN (formerly SourceForge.JP) is {{a web-based}} {{collaborative}} development environment for open-source software projects. It provides source <b>code</b> <b>repositories</b> and web hosting services. With features similar to SourceForge, {{it acts as}} a centralized location for open-source software developers.|$|R
50|$|Kenai.com's {{services}} included version controlled source <b>code</b> <b>repositories</b> (Mercurial, Subversion, Git), team wikis, a download area to host documents, {{an integrated}} team member IM chat, issue tracking (JIRA, Bugzilla), forums, mailing lists, and webhooks for selected events.|$|R
2500|$|There {{are three}} primary methods of {{communication}} used {{in the development of}} Perl 6 today. The first is the [...] IRC channel on freenode. The second is a set of mailing lists on The Perl Foundation's servers at [...] The third is the Git source <b>code</b> <b>repository</b> hosted at https://github.com/perl6.|$|E
2500|$|In February 2017, Microsoft {{announced}} {{the migration of}} its Windows source <b>code</b> <b>repository</b> from Perforce to Git. This migration involved 3.5 million separate files in a 300 gigabyte repository. By May 2017, 90 percent of [...] its engineering team now uses Git, in about 8500 commits and 1760 Windows builds per day.|$|E
2500|$|On 3 October 2007, Microsoft {{announced}} that the source code for [...]NET Framework 3.5 libraries was to become available under the Microsoft Reference Source License (Ms-RSL). The source <b>code</b> <b>repository</b> became available online on 16 January 2008 and included BCL, ASP.NET, ADO.NET, Windows Forms, WPF, and XML. Scott Guthrie of Microsoft promised that LINQ, WCF, and WF libraries were being added.|$|E
5000|$|Apache Allura is an {{open-source}} forge {{software for}} managing source <b>code</b> <b>repositories,</b> bug reports, discussions, wiki pages, blogs and more {{for any number}} of individual projects. Allura graduated from incubation with the Apache Software Foundation in March 2013.|$|R
30|$|Research {{efforts that}} aimed at {{understanding}} co-development often had a singular perspective: they considered either the technical subsystems {{of the business}} information system (e.g. analyzing source <b>code</b> <b>repositories</b> and issue trackers) or the business subsystems (e.g. investigating wiki co-authorship).|$|R
50|$|Assembla hosts {{more than}} 100,000 client projects. Their {{customers}} range from game development firms, consultants, outsourcers, and digital agencies. Assembla offers Apache Subversion, Git, and Perforce <b>code</b> <b>repositories.</b> Additionally, Assembla integrates with {{tools such as}} Slack, GitHub, and JIRA.|$|R
2500|$|Ubuntu TV, labeled [...] "TV {{for human}} beings" [...] by Canonical Ltd., was {{introduced}} at the 2012 Consumer Electronics Show by Canonical's marketing executive John D. Bernard. Created for smart TVs, Ubuntu TV aimed {{to provide access}} to popular Internet services and stream content to mobile devices running Android, iOS and Ubuntu. Launchpad.net Ubuntu TV <b>code</b> <b>repository</b> has not shown any actual development activity since December 2011.|$|E
2500|$|The first NetBSD source <b>code</b> <b>repository</b> was {{established}} on March 21, 1993 {{and the initial}} release, NetBSD 0.8, was made in April 1993. [...] This was derived from 386BSD 0.1 plus the version 0.2.2 unofficial patchkit, with several programs from the Net/2 release missing from 386BSD re-integrated, and various other improvements. [...] In August 1993, NetBSD 0.9 was released, which contained many enhancements and bug fixes. This was still a PC-platform-only release, although by this time work was underway to add support for other architectures.|$|E
2500|$|After {{stealing}} the customers' data, cyber-thieves also accessed Adobe's source <b>code</b> <b>repository,</b> likely in mid-August 2013. Because hackers acquired {{copies of the}} source code of Adobe proprietary products, they could find and exploit any potential weaknesses in its security, computer experts warned. Security researcher Alex Holden, chief information security officer of Hold Security, characterized this Adobe breach, which affected Acrobat, ColdFusion and numerous other applications, as [...] "one of the worst in US history". Adobe also announced that hackers stole parts of the source code of Photoshop, which according to commentators could allow programmers to copy its engineering techniques and {{would make it easier}} to pirate Adobe's expensive products.|$|E
40|$|<b>Code</b> <b>repositories</b> play {{a central}} role in the reuse and mining of {{existing}} assets when engineering large, complex software systems. It is, therefore, essential that database support be extended to new programming paradigms as and when they emerge. This paper proposes an approach to support the storage, reuse and mining of aspects - constructs used in Aspect- Oriented Programming (AOP) to separate crosscutting concerns - in AspectJ (an aspect language for Java) using a relational database. The approach is based on mapping an aspectâs anatomy to the relational model hence allowing finegrained queries to be composed. This results in greater flexibility during search and retrieval in contrast with most existing <b>code</b> <b>repositories</b> which store the code as BLObs complemented by meta-data about the code...|$|R
25|$|On June 18, 2008, Reddit {{became an}} open source project, until September 2017. With the {{exception}} of the anti-spam/cheating portions, all of the code and libraries written for Reddit had been freely available on GitHub. , Reddit's main <b>code</b> <b>repositories,</b> backing its desktop and mobile websites, are no longer open source.|$|R
50|$|System files used by {{applications}} must {{be protected}} {{in order to ensure}} the integrity and stability of the application. Using source <b>code</b> <b>repositories</b> with version control, extensive testing, production back-off plans, and appropriate access to program code are some effective measures {{that can be used to}} protect an application's files.|$|R
2500|$|In August 2011, Linus Torvalds {{said that}} [...] "eventually Android and Linux {{would come back}} to a common kernel, but it will {{probably}} not be for four to five years". In December 2011, Greg Kroah-Hartman announced the start of Android Mainlining Project, which aims to put some Android drivers, patches and features back into the Linux kernel, starting in Linux 3.3. Linux included the autosleep and wakelocks capabilities in the 3.5 kernel, after many previous attempts at merger. The interfaces are the same but the upstream Linux implementation allows for two different suspend modes: to memory (the traditional suspend that Android uses), and to disk (hibernate, as it is known on the desktop). Google maintains a public <b>code</b> <b>repository</b> that contains their experimental work to re-base Android off the latest stable Linux versions.|$|E
2500|$|In December 1994, De Raadt {{was asked}} to resign his {{position}} as a senior developer {{and member of the}} NetBSD core team, and his access to the source <b>code</b> <b>repository</b> was revoked. The reason for this is not wholly clear, although there are claims that it was due to personality clashes within the NetBSD project and on its mailing lists. De Raadt has been criticized for having a somewhat abrasive personality: in his book, Free for All, Peter Wayner claims that De Raadt [...] "began to rub some people the wrong way" [...] before the split from NetBSD; while Linus Torvalds has described him as [...] "difficult". Many have different feelings: the same interviewer describes De Raadt's [...] "transformation" [...] on founding OpenBSD and his [...] "desire {{to take care of his}} team," [...] some find his straightforwardness refreshing, and few deny he is a talented hacker and security [...] "guru".|$|E
5000|$|OpenSXCE - An OpenSolaris {{distribution}} {{release for}} both 32-bit and 64-bit x86 platforms and SPARC microprocessors, initially produced from OpenSolaris source <b>code</b> <b>repository,</b> ported to the illumos source <b>code</b> <b>repository</b> to form OpenIndiana's first SPARC distribution. Notably, the first OpenSolaris distribution with illumos source for SPARC based upon OpenIndiana, OpenSXCE finally {{moved to a}} new source <b>code</b> <b>repository,</b> based upon DilOS, where new releases continue.|$|E
5000|$|OpenEMR has {{a vibrant}} {{open-source}} development community with over 133 developers having {{contributed to the}} project. [...] There are 485 developers with personal OpenEMR <b>code</b> <b>repositories</b> on Github. Open Hub (formerly Ohloh) says OpenEMR has [...] "one of the largest open-source teams in the world, {{and is in the}} top 2% of all project teams on Open Hub".|$|R
40|$|AbstractâCloud {{computing}} {{provides us}} with general purpose storage and server hosting platforms at a reasonable price. We explore the possibility of tapping these resources {{for the purpose of}} hosting source <b>code</b> <b>repositories</b> for individual projects as well as entire open source communities. An analysis of storage costs is presented, and a complete hosting solution is built and evaluated as a proof-of-concept. I...|$|R
40|$|Source <b>code</b> version <b>repositories</b> {{provide a}} {{treasure}} of information encompassing the changes {{introduced in the}} system throughout its evolution. These repositories are typically managed by tools such as CVS. However, these tools identify and express changes in terms of physical attributes i. e., file and line numbers. Recently, to help support the mining of software repositories (MSR), researchers have proposed methods to derive and express changes from source <b>code</b> <b>repositories</b> in a more source-code âawareâ manner (i. e., syntax and semantic). Here, we discuss these MSR techniques {{in light of what}} changes are identified, how they are expressed, the adopted methodology, evaluation, and results. This work forms the basis for a taxonomic description of MSR approaches...|$|R
5000|$|The {{official}} OpenEMR <b>code</b> <b>repository</b> was {{migrated from}} CVS to git on [...] The project's main <b>code</b> <b>repository</b> is on GitHub. There are also official mirrored code repositories on Sourceforge, Google Code, Gitorious, Bitbucket, Assembla, CodePlex and Repo.or.cz.|$|E
50|$|SubUnit source <b>code</b> <b>repository.</b>|$|E
50|$|RTelnet is a listed {{project on}} SourceForge <b>code</b> <b>repository.</b>|$|E
50|$|Allura {{can manage}} {{any number of}} projects, {{including}} groups of projects known as Neighborhoods, as well as sub-projects under individual projects. Allura also has a modular design to support tools attached to neighborhoods or individual projects. Allura comes packaged with many tools, and additional external and third-party tools can be installed. There are tools to manage version control for source <b>code</b> <b>repositories,</b> ticket tracking, discussions, wiki pages, blogs and more.|$|R
5000|$|One of {{the reasons}} I care is for the kernel, we had a break in {{on one of the}} BitKeeper sites where people tried to corrupt the kernel source <b>code</b> <b>repositories.</b> [...] However Git does not require the second {{preimage}} resistance of SHA-1 as a security feature, since it will always prefer to keep the earliest version of an object in case of collision, preventing an attacker from surreptitiously overwriting files.|$|R
40|$|Version {{control systems}} are {{essential}} for co-ordinating work on a software project. A number of open- and closedsource projects are proposing to move, or have already moved, their source <b>code</b> <b>repositories</b> from a centralized version control system (CVCS) to a decentralized version control system (DVCS). In this paper we summarize the differences between a CVCS and a DVCS, and describe some of the rationales and perceived benefits offered by projects to justify the transition. 1...|$|R
