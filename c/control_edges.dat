11|520|Public
5000|$|Data-flow optimizations, {{based on}} data-flow analysis, {{primarily}} {{depend on how}} certain properties of data are propagated by <b>control</b> <b>edges</b> in the control flow graph. Some of these include: ...|$|E
40|$|Current Control-Flow Integrity (CFI) {{implementations}} track <b>control</b> <b>edges</b> individually, {{insensitive to}} the context of preceding edges. Recent work demonstrates that this leaves sufficient leeway for powerful ROP attacks. Context-sensitive CFI, which can provide enhanced security, is widely considered impractical for real-world adoption. Our work shows that Context-sensitive CFI (CCFI) for both the backward and forward edge can be implemented efficiently on commodity hardware. We present PathArmor, a binary-level CCFI implementation which tracks paths to sensitive program states, and defines the set of valid <b>control</b> <b>edges</b> within the state context to yield higher precision than existing CFI implementations. Even with simple context-sensitive policies, PathArmor yields significantly stronger CFI invariants than context-insensitive CFI, with similar performance...|$|E
40|$|Path-sensitivity {{is often}} a crucial {{requirement}} for verifying safety properties of programs. As it is infeasible to enumerate and analyze each path individually, analyses compromise by soundly merging information about executions along multiple paths. However, this frequently results {{in a loss of}} precision. We present a program analysis technique that we call Satisfiability Modulo Path Programs (SMPP), based on a path-based decomposition of a program. It is inspired by insights that have driven the development of modern SMT (Satisfiability Modulo Theory) solvers. SMPP symbolically enumerates path programs using a SAT formula over <b>control</b> <b>edges</b> in the program. Each enumerated path program is verified using an oracle, such as abstract interpretation or symbolic execution, to either find a proof of correctness or report a potential violation. If a proof is found, then SMPP extracts a sufficient set of <b>control</b> <b>edges</b> and corresponding interference edges, as a form of proof-based learning. Blocking clauses derived from these edges are added back to the SAT formula to avoid enumeration of other path programs guaranteed to be correct, thereby improving performance and scalability. We have applied SMPP in the F-Soft program verification framework, to verify properties of real-world C programs that require path-sensitive reasoning. Our results indicate that the precision from analyzing individual path programs, combined with their efficient enumeration by SMPP, can prove properties as well as indicate potential violations in the large...|$|E
5000|$|... 1993-1994 <b>Controlled</b> <b>Edge</b> Enhancement Utilizing Skin Hue KeyingBTS and Ikegami (Joint Award ...|$|R
40|$|Abstract This paper {{presents}} a fast approach for matching stereoscopic images acquired by stereo cameras mounted aboard a moving car. The proposed approach exploits the spatio-temporal consistency between consecutive frames in stereo sequences to improve matching results. This {{means that the}} matching process at current frame uses the matching results obtained at its preceding one. The preceding frame allows to compute an Initial Disparity Map for the current frame. The initial disparity map is used to derive disparity ranges for each scanline {{as well as what}} we call Matching <b>Control</b> <b>Edge</b> Points. Dynamic programming is performed for matching edge points in stereo pairs. The matching <b>control</b> <b>edge</b> points are used to drive the search for an optimal solution in the search plane. This is accomplished by dividing the dynamic programming search space into a number of subspaces depending on the number of the matching <b>control</b> <b>edge</b> points. The proposed approach has been tested both on virtual and real stereo images sequences demonstrating satisfactory performance...|$|R
5000|$|Slip and grip: Maximum forward speed; extra <b>edge</b> <b>control</b> for turning; realism is lost without {{speed and}} <b>edge</b> <b>control</b> ...|$|R
40|$|Abstract – Taskflow-oriented {{programming}} merges concepts from structured programming, hardware description, and mark-up languages. A mark-up language such as XML {{supports a}} well-defined schema that can capture the decomposition {{of a program}} into a hierarchy of tasks. A hardware description language such as VHDL relies on well-defined and explicit input/output port definitions to create, at any level of hierarchy, explicit data dependencies among tasks. A structured programming language provides control to sequence the execution of all tasks. We apply these concepts {{to the design of}} a distributed user-configurable environment that supports project-specific collaborative, networked, and taskfloworiented programming as well as computing. Starting with the topdown decomposition of a computing project into task, we capture not only the hierarchy of tasks but also explicit and user-defined dependencies, i. e. directed task=>task <b>control</b> <b>edges.</b> Data dependencies are created implicitly only during the detailed bottom-up implementation of input/output assignments for each task. Task-flow programming is not about programming the tasks. Rather, it is about programming dependency edges between the tasks, task=>task <b>control</b> <b>edges</b> in particular. An executable program is written simply as a (hierarchical) taskflow in XML, interconnecting tasks and data. Most task=>task edges are in the ’enabled ’ state by default and require no programming, while conditions to ‘enable/disable ’ the state of task=>task edges are short and simple and {{are an integral part of}} the task node encapsulation. Similarly, the data->task and task->data edges are always ‘enabled’...|$|E
40|$|The {{control edge}} {{geometry}} of a hydraulic pinion/rack power steering valve is studied and the valve characteristics modelled. Non-facet and two-facet <b>control</b> <b>edges</b> {{have been studied}} and the geometry data of the later are from a commercial product. The characteristics from simulation and experiment of a test-rig show the steering feeling, and the two-facet control edge valve was designed for safer and friendly steering manipulation. The hydraulic pump pressure, determined {{as a function of}} the steering twist angle, is incorporated in the steering control valve characteristics. A modification at the control edge geometry is proposed, and its characteristics show that there is large room available at the control edge design to improve the steering feeling and safe manipulation...|$|E
40|$|The {{concept of}} {{controllability}} of concurrency control mcch_iι ni_ι^⊂_}nls {{was introduced by}} the author. It is useful to realize a distributed system consisting {{of different kinds of}} concurrency control mechanisms. We can also realize adaptive concurrency control mechanisms as well as mechanisms to handle complex data which are mutually related. This paper discusses a method to realize controllable two-phase locking mechanisms. In a controllable concurrency control mechanism, from outside we can add order information on transactions and the mechanism produces the serializable schedule which has no conflicts with the given order. A wait-for graph with <b>control</b> <b>edges</b> is introduced to realize controllability by modifying the lock phase of two-phase locking mechanisms. We will show conditions when rollback of a transaction is required using that graph in order to satisfy the given order. ...|$|E
5000|$|ZRON20: The Great Leap Forward - <b>Controlling</b> The <b>Edges</b> of Tone 12-inch EP (1987) ...|$|R
30|$|We propose {{illumination}} normalization {{steps that}} reduce image dependency on illumination direction and <b>control</b> <b>edge</b> extraction sensitivity to illumination {{for the purpose}} of face recognition. The proposed illumination normalization steps are obtained from fusing RGB normalization (rgbN) method and the non-linear pixel power transform method termed GC for color images. We term this proposed steps the rgb-gamma encoding (rgbGE) technique.|$|R
50|$|In airbrushing, a frisket is {{a plastic}} sheet with an {{adhesive}} backing used {{to mask off}} specific areas of an image so that only the exposed area is covered with paint. The frisket is vital to airbrushing, because it allows the artist to control excess paint spray, create special effects, achieve extreme precision, <b>control</b> <b>edge</b> attributes and to expedite the airbrushing process.|$|R
40|$|Taskflow-oriented {{programming}} merges concepts from structured programming, hardware description, and mark-up languages. A mark-up language such as XML {{supports a}} well-defined schema that can capture the decomposition {{of a program}} into a hierarchy of tasks. A hardware description language such as VHDL relies on well-defined and explicit input/output port definitions to create, at any level of hierarchy, explicit data dependencies among tasks. A structured programming language provides control to sequence the execution of all tasks. We apply these concepts {{to the design of}} a distributed user-configurable environment that supports project-specific collaborative, networked, and taskfloworiented programming as well as computing. Starting with the topdown decomposition of a computing project into task, we capture not only the hierarchy of tasks but also explicit and user-defined dependencies, i. e. directed task [...] Ytask <b>control</b> <b>edges.</b> Data dependencies are created implicitly only during the detailed bottom-up implementation of input/output assignments for each task...|$|E
40|$|Rectification {{of single}} and {{overlapping}} multiple scanner frames produced by such satellite-borne scanners as the LANDSAT MSS {{was carried out}} using a newly developed comprehensive parametric model. Tests with both simulated and real image data demonstrate conclusively that this model in general is superior to the widely used polynomial model, and that the simultaneous rectification of overlapping frames using least squares techniques yields a high accuracy than sngle frame rectification due to the inclusion of tie points between the image frames. Used to <b>control,</b> <b>edges</b> or lines, whic {{are much more likely}} to be found in images, can replace conventional control points and can easily be implemented into the least squares approach. An efficient algorithm for findng corresponding points in image paris was developed which can be used for determining tie points between image frames and thus increase the ecnomy of the whole rectification procedure...|$|E
40|$|The {{topic of}} the thesis is the energy saving {{potential}} of digital hydraulic valve controlled drives. Digital hydraulic valves are capable of independent metering of flow paths, enabling reduction of energy losses when compared to traditional 4 / 3 -way control valves with mechanically fixed opening ratio between inflow and outflow <b>control</b> <b>edges.</b> So far independent metering control has been studied using proportional valves with four and five metering edges. In addition to four- and five-edge digital valves, six-edge controlled three-chamber cylinder and four-edge digital valve with pressurized tank line are studied in this thesis and their capability of reducing energy losses is systematically compared. In addition to model-based valve controller, control mode switching logic is needed to control and optimize the energy consumption of digital hydraulic valve drives. The thesis presents the mode switching logic for the digital hydraulic valve drives studied. The main focus {{in the design of}} mode switching logic is the avoidance of unnecessary throttling losses, retaining the stiffness of the drive and enabling control mode switching during motion. The energy efficiency of the different digital hydraulic drives is studied using experimental tes...|$|E
40|$|Abstract—A {{software}} birthmark is {{an inherent}} {{characteristic of a}} program {{that can be used}} to identify that program. By comparing the birthmarks of two programs, it is possible to infer if one program is a copy of another. In this paper, we propose a static birthmark based on the <b>control</b> flow <b>edges</b> in Java programs. <b>Control</b> flow <b>edges</b> can represent possible behaviors in program execution. Thus, a set of the <b>control</b> flow <b>edges</b> of a program can be used as a birthmark for that program. The similarity between two programs can then be calculated by finding pairs of similar behaviors of the <b>control</b> flow <b>edges</b> in the two birthmarks. The proposed birthmark is evaluated and compared with previous approaches in terms of credibility and resilience. Experimental results show that the proposed birthmark is more reliable than previous methods for detecting programs that are suspected to be copied. Keywords-software birthmark; software security; software copyright; program analysis; I...|$|R
50|$|The {{concept of}} parity also <b>controls</b> how <b>edge</b> {{positions}} are played and how edges interact.|$|R
50|$|Motorola {{introduced}} {{their first}} digital {{monolithic integrated circuit}} line, MECL I, in 1962. Motorola developed several improved series, with MECL II in 1966, MECL III in 1968 with 1 nanosecond gate propagation time and 300 MHz flip-flop toggle rates, and the 10,000 series (with lower power consumption and <b>controlled</b> <b>edge</b> speeds) in 1971.The MECL 10H family was introduced in 1981.Fairchild introduced the F100K family.|$|R
40|$|Predication of <b>control</b> <b>edges</b> has the {{potential}} advantages of improving fetch bandwidth and reducing branch mispredictions. However, heavily predicated code in out-of-order processors can lose significant performance by deferring resolution of the predicates until they are executed, whereas in nonpredicated code those control arcs would have remained as branches, and would be resolved immediately in the fetch stage when they are predicted. Although predicate prediction can address this problem, three problems arise when trying to predict aggressively predicated code that contains multi-path hyperblocks: (1) How to maintain a high bandwidth of branch prediction to keep the instruction window full without having the predicate predictions interfere and without increasing the branch mispredictions, (2) how to determine which predicates in the multi-path hyperblocks should be predicted, and (3) how to achieve high predicate prediction accuracies without centralizing all prediction information in a single location. To solve these problems, this paper proposes a speculation architecture called hierarchical control prediction (HCP). In HCP, the control flow speculation is partitioned into two levels. In parallel with the branch predictor, which identifies the coarsegrain execution path by predicting the next hyperblock entry, HPC identifies and predicts the chain of predicate instructions along the predicted path of execution within each hyperblock, using encoded static path approximations in each branch instruction and local per-predicate histories to achieve high accuracies. Using a 16 -core composable EDGE processor as the evaluation platform, this study shows that hierarchical control prediction can address these issues comprehensively, accelerating single-threaded execution by 19 % compared to no predicate prediction, and thus achieving half of the 38 % performance gain that ideal predicate prediction would attain. 1...|$|E
40|$|We {{present an}} {{overview}} of the multi-layer intermediate representation [1] and its implementation and testing. As compiler infrastructure we use a combination of SUIF 2 and its Machine SUIF extension because both provide some tools that are useful for different parts of our work. Machine SUIF relies on base SUIF for the front-end translation, but contains several well-tested libraries such as CFG and DFG creation that SUIF alone does not provide. As the SUIF C front end is closed source, we were forced to develop a novel way of integrating timing information in C source code that does not jeopardize ANSI compliance, but is reliably transformed by the front-end. We did so by using #pragma directives {{in the beginning of the}} code, which express timing constraints between blocks of code that are designated by standard C labels. In order to have an even finer granularity when specifying the timing constraints, we introduce a type of statement that defines the time-critical variables in the code. The timing edges are thus attached to the operations on these variables. We then show how the annotated code is transformed into the multi-layer IR. This is done in the following order: Source Code -> SUIF IR -> Machine SUIF IR -> Multi-Layer IR. In the SUIF IR there are some preparative transformations, whereas the final creation part takes place in Machine SUIF. As the multi-layer IR comprises a novel concept of a parallel control layer based on data dependencies, we also developed an algorithm that extracts these <b>control</b> <b>edges</b> from the SSA graph of the program. In an concrete example we show how the multi-layer IR is constructed step-by-step, and introduce the branch postponing technique that makes use of it to resolve scheduling conflicts...|$|E
5|$|The player <b>controls</b> <b>Edge,</b> a young {{mercenary}} who battles {{an empire}} on a flying dragon and encounters a mysterious girl from a vanished civilization. Unlike the other Panzer Dragoon games, which are rail shooters, the player has free 3D movement and some areas are explored on foot. The battle system mixes real-time and turn-based elements, with the player circling enemies on the dragon to expose weak spots and escape dangerous positions.|$|R
30|$|The basic {{shape control}} means of cold rolling strip mainly include roll tilting, roll bending, roll shifting, roll cooling, roll {{profiles}} optimization, rolling process optimization, and so on. Researches {{on the basic}} shape control means, such as roll profile optimization, rolling mill type selection, rolling process optimization, local shape <b>control,</b> <b>edge</b> drop <b>control,</b> and comprehensive control of shape and surface quality, have achieved great progress in the past 10 years.|$|R
40|$|The Grandjean-Friedel-Cano wedge {{geometry}} is used {{to produce}} well <b>controlled</b> <b>edge</b> dislocation patterns in ordered latexes. Due to the strain field, {{the color of the}} Bragg reflected light is found to be modified, making the dislocations easily visible in a metallurgical microscope. An estimate of the elastic energy stored in this strain field is made. The minimum energy configuration of the dislocation is found to agree with that observed experimentally...|$|R
50|$|The player <b>controls</b> <b>Edge,</b> a young {{mercenary}} who battles {{an empire}} on a flying dragon and encounters a mysterious girl from a vanished civilization. Unlike the other Panzer Dragoon games, which are rail shooters, the player has free 3D movement and some areas are explored on foot. The battle system mixes real-time and turn-based elements, with the player circling enemies on the dragon to expose weak spots and escape dangerous positions.|$|R
40|$|The unified {{technique}} for the irradiance correction and appearance enhancement {{for the real}} scene is pro-posed in this paper. The proposed method employed MPC algorithm for the projector camera system and enabled arbitrary appearance control such like photo retouching software in the real world. In the exper-iment, the appearance control of saturation enhance-ment, color removal, phase <b>control,</b> <b>edge</b> enhancement, image blur, makes unique brightness and the other en-hancements for the real scene are shown. 1...|$|R
30|$|In {{the past}} 10 years, the {{researches}} of the shape control means mainly {{focus on the}} roll optimization, mill type selection, process optimization, local strip shape <b>control,</b> <b>edge</b> drop <b>control,</b> and so on. However, the shape control objective and variable are usually single and rough, lack of global concept. In the future, more attention should {{be paid to the}} coordination control of both strip shape and other quality indexes, and the refinement of control objective should be strengthened.|$|R
40|$|A {{simple and}} unified {{heuristic}} method for nicely drawing directed, undirected and mixed graphs is proposed basing upon {{a new model}} called magnetic-spring model which {{is an extension of}} Eades's spring model. In the new model, the idea of <b>controlling</b> <b>edge</b> orientations by magnetic forces is employed. Since the method is conceptually intuitive, it is quite easy to understand, implement, tune end improve it. Examples of layouts and results of experiments are shown to demonstrate extensive possibilities of the method...|$|R
40|$|An {{analytical}} and mechanization {{study was conducted}} for two flutter stability augmentation systems. One concept uses only the wing trailing <b>edge</b> <b>control</b> surface. Another concept uses leading and trailing <b>edge</b> <b>control</b> surfaces operating simultaneously. The combined use of leading and trailing <b>edge</b> <b>control</b> surfaces should improve the surface coupling (controllability) with vertical bending and torsional structural modes and decrease the coupling between bending and torsional modes. The study was directed toward stability augmentation systems characteristics for the supersonic transport aircraft...|$|R
5000|$|In graph theory, a single-entry single-exit (SESE) {{region in}} a given graph is an ordered edge pair (a, b) of {{distinct}} <b>control</b> flow <b>edges</b> a and b where: ...|$|R
40|$|This report investigates {{boundary}} layer <b>control</b> and trailing <b>edge</b> flaps for direct-lift control. "NASA CR- 1426. ""October 1969 " [...] Cover. Includes bibliographical references (p. 80). This report investigates {{boundary layer}} <b>control</b> and trailing <b>edge</b> flaps for direct-lift control. Prepared by the Boeing Company, Seattle, Wash. for Ames Research CenterMode of access: Internet...|$|R
40|$|Edge {{chipping}} is {{a phenomenon}} commonly observed during the machining of ceramic material. Characterization of edge chipping, both in macro and in micro scale, and correlating its formation to machining parameters form a basis for developing new and innovative technologies for controlling in machining induced damage. An experimental-based study using glass ceramic material is performed. Three types of edge chipping are identified. The SEM-sterephotography method and the finite element method are {{used to evaluate the}} edge chipping effect under a set of machining conditions. Significant findings are obtained and guidelines for <b>controlling</b> <b>edge</b> chipping during machining are suggested...|$|R
3000|$|One of {{the aims}} of our {{contributions}} {{is to develop a}} fully automated system (i.e., with very limited human control). Accordingly, the parameters that <b>control</b> the <b>edge</b> detection process (e.g., the width [...]...|$|R
40|$|A crucial aspect {{in the use}} of {{microfluidic}} {{systems is}} the filling of microchannels with the liquid. In order to better understand this phenomenon, systematic studies of the meniscus dynamics in model system microchannels are being carried out. A critical factor for the reliability of such a study is the capability to control the rounding radius of the micro features used as obstacles. For this purpose a dedicated process chain was developed for the realization of disposable polymer microfluidic chips integrating the desired features and allowing the generation of internal as well as external corners with <b>controlled</b> <b>edge</b> radius. Preliminary test results are presented...|$|R
40|$|Patterning {{graphene}} {{into various}} mesoscopic {{devices such as}} nanoribbons, quantum dots, etc. by lithographic techniques has enabled the guiding and manipulation of graphene's Dirac-type charge carriers. Graphene, with well-defined strain patterns, holds promise of similarly rich physics while avoiding the problems created by the hard to <b>control</b> <b>edge</b> configuration of lithographically prepared devices. To engineer the properties of graphene via mechanical deformation, versatile new techniques are needed to pattern strain profiles in a controlled manner. Here we present a process by which strain can be created in substrate supported graphene layers. Our atomic force microscope-based technique opens up new possibilities in tailoring the properties of graphene using mechanical strain...|$|R
40|$|ABSTRACT: The {{mechanisms}} <b>controlling</b> <b>edge</b> delamination in [&plusmn; 30 &deg; / &plusmn; 30 &deg;/ 90 &deg;/ 90 &deg] composites {{have been}} studied. Edge delamination strength and fracture toughness were strongly {{dependent on the}} resin matrices. For the same resin matrix, however, these prop-erties drastically and consistently varied with the fibers studied, suggesting a fiber/matrix interface-controlled mechanism. Failure analyses using microscopy techniques revealed corresponding variations of fiber/matrix adhesion and crack paths. As the fiber/matrix adhesion decreased, the dominant crack paths in the laminates changed from straight &mdash; 30 &deg;/ 90 &deg; interply failure to zig-zag 90 &deg; intraply failure. The critical role of fiber/matrix adhesion on edge delamination was demonstrated...|$|R
40|$|General formula {{describing}} {{both the}} divertor strike point splitting and width of magnetic islands created by resonant magnetic perturbations (RMPs) in a poloidally diverted tokamak equilibrium is derived. Under {{the assumption that}} the RMP is produced by coils at the low-field side such as those used to <b>control</b> <b>edge</b> localized modes (ELMs) it is demonstrated that the width of islands on different magnetic surfaces at the edge and the amount of divertor splitting are related to each other. Explanation is provided of aligned maxima of the perturbation spectra with the safety factor profile - an effect empirically observed in models of many perturbation coil designs. Comment: 8 pages, revte...|$|R
