541|1028|Public
25|$|The DOS file {{names are}} in the current OEM {{character}} set: this can have surprising effects if characters handled in one way for a given <b>code</b> <b>page</b> are interpreted differently for another <b>code</b> <b>page</b> (DOS command CHCP) with respect to lower and upper case, sorting, or validity as file name character.|$|E
25|$|UTF-8 can encode any Unicode character. Files in {{different}} scripts can be displayed correctly {{without having to}} choose the correct <b>code</b> <b>page</b> or font. For instance Chinese and Arabic can be supported (in the same text) without special codes inserted or manual settings to switch the encoding.|$|E
25|$|HPRoman-9 (also {{known as}} HPRoman9, hp-roman9, roman9 or R9) {{is a slight}} {{modification}} of the 8-bit HPRoman-8 character set where the general currency sign (¤) at codepoint 186 (0xBA) {{was replaced by the}} euro sign (€). It was introduced in early 1999. As of 2016, HPRoman-9 still has no known <b>code</b> <b>page</b> number assigned to it.|$|E
50|$|There are {{two groups}} of <b>code</b> <b>pages</b> in Windows systems: OEM and ANSI <b>code</b> <b>pages.</b> <b>Code</b> <b>pages</b> {{in both of these}} groups are {{extended}} ASCII <b>code</b> <b>pages.</b>|$|R
50|$|These <b>code</b> <b>pages</b> {{are used}} by IBM when emulating the Microsoft Windows {{character}} sets. Most of these <b>code</b> <b>pages</b> have the same number as Microsoft <b>code</b> <b>pages,</b> although they are not exactly identical. Some <b>code</b> <b>pages,</b> though, are new from IBM, not devised by Microsoft.|$|R
50|$|These <b>code</b> <b>pages</b> {{are used}} by Microsoft in its MS-DOS {{operating}} system. Microsoft refers to these as the OEM <b>code</b> <b>pages</b> because they were defined by the OEMs who licensed MS-DOS for distribution with their hardware, not by Microsoft or a standards organization. Most of these <b>code</b> <b>pages</b> have the same number as the equivalent IBM <b>code</b> <b>pages,</b> although they are not exactly identical. There are minimum differences in some <b>code</b> <b>pages</b> from IBM and Microsoft.|$|R
25|$|The {{following}} table summarizes {{usage of}} UTF-8 code units (individual bytes or octets) in a <b>code</b> <b>page</b> format. The upper half (0_ to 7_) is for bytes used only in single-byte codes, {{so it looks}} like a normal code page; the lower half is for continuation bytes (8_ to B_) and (possible) leading bytes (C_ to F_), and is explained further in the legend below.|$|E
25|$|HPRoman-8 (also {{known as}} HPRoman8, HPRoman, hp-roman8, roman8, R8, <b>code</b> <b>page</b> 1051, CP1051, ibm-1051, WE8ROMAN8 (as well as N8ROMAN8, DK8ROMAN8, S8ROMAN8 and SF8ROMAN8) is an 8-bit single byte {{character}} encoding that is mainly used on HP-UX and many Hewlett-Packard and PCL compatible printers. The name Roman-8 appeared in 1983, but a pre-cursor {{of the character}} set was already used by the HP 250 and HP 300 workstations since 1978/1979 as 8-bit Roman Extension.|$|E
25|$|Œ and œ were {{omitted from}} ISO-8859-1 (as well as derived standards, such as IBM <b>code</b> <b>page</b> 850), {{which are still}} {{widespread}} in internet protocols and applications. Œ is the only character in modern French that {{is not included in}} ISO-8859-1, and this has led to it becoming replaced by 'oe' in many computer-assisted publications (including printed magazines and newspapers). This was due, in part, to the lack of available characters in the French ISO/IEC 646 version that was used earlier for computing. Another reason is that œ is absent from most French keyboards, and as a result, few people know how to input it.|$|E
50|$|EBCDIC <b>code</b> <b>pages</b> {{are based}} on the {{original}} EBCDIC character encoding; {{there are a variety of}} EBCDIC <b>code</b> <b>pages</b> intended for use in different parts of the world, including <b>code</b> <b>pages</b> for non-Latin scripts such as Chinese, Japanese (e.g., EBCDIC 930, JEF, and KEIS), Korean, and Greek (EBCDIC 875).|$|R
50|$|However, OEM <b>code</b> <b>pages</b> do not {{necessarily}} reside in ROM, but include so called prepared <b>code</b> <b>pages,</b> (aka downloadable character sets or downloadable fonts), character sets loaded as raster fonts into the font RAM of suitable display adapters (like NEC APC, HP 100LX/200LX/700LX, Persyst's BoB Color Adapter, Hercules' HGC+, InColor and Network Plus with RAMFONT, and IBM's MCGA, EGA, VGA, etc.) and printers as well. Hence, the group of OEM <b>code</b> <b>pages</b> is a superset of hardware <b>code</b> <b>pages.</b>|$|R
50|$|Windows <b>code</b> <b>pages</b> are sets of {{characters}} or <b>code</b> <b>pages</b> (known as character encodings in other operating systems) used in Microsoft Windows from the 1980s and 1990s. Windows <b>code</b> <b>pages</b> were gradually superseded when Unicode was implemented in Windows, {{although they are}} still supported both within Windows and other platforms.|$|R
500|$|Dwarf Fortress {{has three}} primary game modes which {{take place in}} worlds created by the player, {{where most of the}} {{elements}} are randomly generated. Fortress mode is a construction and management simulation of a colony of dwarves. There are no objectives, with the player being free to decide how to go about managing the colony and making them interact with the environment, thus making it an open-ended and sandbox-style game. Since {{there is no way to}} win, it only ends when the entire colony is defeated by the various possible threats, or the player decides to abandon the fortress. The visuals are text-based using <b>code</b> <b>page</b> 437 characters in various colors as graphics. Thus, it is full of letters, numbers and symbols; dwarves are represented by the symbol , a cat and dog are a white [...] "c" [...] and brown [...] "d", while a giant spider is a grey [...] "S".|$|E
2500|$|In {{the early}} days of computers, Urdu was not {{properly}} represented on any <b>code</b> <b>page.</b> One of the earliest code pages to represent Urdu was IBM <b>Code</b> <b>Page</b> 868 which dates back to 1990. Other early code pages which represented Urdu alphabets were Windows-1256 and MacArabic encoding both of which date back to the mid 1990s. In Unicode, Urdu is represented inside the Arabic block. Another <b>code</b> <b>page</b> for Urdu, which is used in India, is Perso-Arabic Script Code for Information Interchange. In Pakistan, the 8-bit <b>code</b> <b>page</b> which is developed by National Language Authority is called Urdu Zabta Takhti (...) (UZT) [...] which represents Urdu in its most complete form including some of its specialized diacritics, though UZT is not designed to coexist with the Latin alphabet.|$|E
2500|$|СТ РК 1048—2002 for Windows (a {{modification}} of <b>code</b> <b>page</b> 1251) ...|$|E
5000|$|Hardware <b>code</b> <b>pages</b> {{are also}} OEM <b>code</b> <b>pages.</b> The {{designation}} [...] "OEM", for [...] "original equipment manufacturer", {{indicates that the}} character set could be changed by the manufacturer to meet different markets.|$|R
50|$|For other encodings, see Polish <b>code</b> <b>pages.</b>|$|R
50|$|These <b>code</b> <b>pages</b> number {{assignments}} are not official neither by IBM, neither by Microsoft {{and almost}} none of them is referred as a usable character set by IANA. The numbers assigned to these <b>code</b> <b>pages</b> are arbitrary and may clash to registered numbers in use by IBM or Microsoft.|$|R
2500|$|When {{the first}} IBM PC was {{designed}} in 1980, it included a [...] "peseta symbol" [...] "Pts" [...] in the ROM of the Monochrome Display Adapter (MDA) and Color Graphics Adapter (CGA) video output cards' hardware, with the code number 158. This original character set chart {{later became the}} MS-DOS <b>code</b> <b>page</b> 437. [...] Some spreadsheet software for PC under MS-DOS, as Lotus 1-2-3, employed this character as the peseta symbol in their Spanish editions. [...] Subsequent international MS-DOS code pages, like <b>code</b> <b>page</b> 850 and others, deprecated this character in favour of some other national characters.|$|E
2500|$|In {{order to}} {{guarantee}} the interchange with previous encodings such as <b>code</b> <b>page</b> 437, the international standard Unicode includes this character as U+20A7 PESETA SIGN in its Currency Symbols block. Other than that, {{the use of the}} [...] "peseta symbol" [...] standalone is extremely rare, and has been outdated since the adoption of the euro in Spain.|$|E
2500|$|In {{the version}} 1.0 of Unicode the {{character}} ₧ U+20A7 PESETA SIGN had two reference glyphs: a [...] "Pts" [...] ligature glyph as in IBM <b>code</b> <b>page</b> 437 and an erroneous P with stroke. In Unicode 2.0 the reference glyph P with stroke was erroneously displayed {{as the only}} symbol for peseta and was latter corrected to the Pts ligature and a separate character code was added for the peso sign.|$|E
5000|$|IBM/Microsoft <b>code</b> <b>pages</b> CP 437, 850, 1251, 1252, {{and many}} others ...|$|R
5000|$|... #Subtitle level 2: Problems {{arising from}} the use of <b>code</b> <b>pages</b> ...|$|R
50|$|These <b>code</b> <b>pages</b> {{are used}} by IBM in its OS/2 {{operating}} system.|$|R
2500|$|As a consequence, ß has {{occasionally}} {{been used}} as a surrogate for Greek [...] "β", notably [...] in reference to [...] beta test versions of application programs for older operating systems, whose character encodings (notably Latin-1 and Windows-1252) did not support easy use of Greek letters. Also, the original IBM DOS <b>code</b> <b>page,</b> CP437 (aka OEM-US) conflates the two characters, assigning them the same codepoint (0xE1) and a glyph that minimizes their differences.|$|E
2500|$|The {{character}} set was originally introduced by Hewlett-Packard as extended ASCII 7-bit codepage named HP Roman Extension (also known as RE, <b>code</b> <b>page</b> 1050, CP1050 or ibm-1050), which existed {{at least since}} 1978. On some systems it was also accessible as 8-bit codepage. Before the name [...] "Roman-8" [...] was established for the 8-bit variant in 1983, this was sometimes called [...] "8-bit mode", [...] "8-bit Roman Extension" [...] or [...] "HP Roman-8 Extension". Over the years both variants were revised to include more characters. The final 1985 revision of the {{character set}} was also standardized as codepage 1050 by IBM in 1989.|$|E
2500|$|Many Windows {{programs}} (including Windows Notepad) add the bytes 0xEF, 0xBB, 0xBF at {{the start}} of any document saved as UTF-8. This is the UTF-8 encoding of the Unicode byte order mark (BOM), and is commonly referred to as a UTF-8 BOM, even though it is not relevant to byte order. A BOM can also appear if another encoding with a BOM is translated to UTF-8 without stripping it. Software that is not aware of multibyte encodings will display the BOM as three garbage characters {{at the start}} of the document, e.g. [...] "ï»¿" [...] in software interpreting the document as ISO 8859-1 or Windows-1252 or [...] "∩╗┐" [...] if interpreted as <b>code</b> <b>page</b> 437, a default for certain older Windows console applications.|$|E
50|$|Microsoft {{recommends}} {{new applications}} use UTF-8 or UCS-2/UTF-16 instead of these <b>code</b> <b>pages.</b>|$|R
50|$|These <b>code</b> <b>pages</b> {{are used}} by IBM when emulating the Adobe {{character}} sets.|$|R
2500|$|... (Note {{these are}} {{historical}} <b>code</b> <b>pages,</b> modern systems use Unicode Encoding, such as UTF-8) ...|$|R
2500|$|The Dutch ij {{is neither}} {{present in the}} ASCII code, nor {{in any of the}} ISO 8859 {{character}} encodings, and therefore the digraph is most often encoded as an i followed by a j. The ligature is present as a national-use character within the Dutch version of ISO 646, one implementation of which is of DEC's National Replacement Character Set (NRCS) aka <b>code</b> <b>page</b> 1102, and it also existed in the Atari ST character set (but not in the GEM character set for PCs) {{as well as in the}} Lotus Multi-Byte Character Set (LMBCS). It is also present in Unicode in the Latin Extended-A range as [...] and [...] These characters are considered compatibility-decomposable. They are included for compatibility and round-trip convertibility with legacy encodings. Their use is discouraged. So even with Unicode available, it is recommended to encode ij as two separate letters.|$|E
5000|$|IBM {{reserved}} several <b>code</b> <b>page</b> IDs for PUA code pages: <b>Code</b> <b>page</b> 1445 (IBM AFP PUA No. 1), <b>code</b> <b>page</b> 1446 (ISO 10646 UCS-PUP15), <b>code</b> <b>page</b> 1447 (ISO 10646 UCS-PUP16), <b>code</b> <b>page</b> 1449 (IBM default PUA).|$|E
50|$|<b>Code</b> <b>page</b> 949 is IBM's PC Data KS code. This <b>code</b> <b>page</b> {{supports}} the Korean language. It {{is a combination}} of <b>Code</b> <b>page</b> 1088 and <b>Code</b> <b>page</b> 951.|$|E
50|$|The use of <b>code</b> <b>pages</b> {{limits the}} set of {{characters}} that may be used.|$|R
50|$|These <b>code</b> <b>pages</b> {{are used}} by IBM when emulating the Apple Macintosh {{character}} sets.|$|R
50|$|One notable way {{in which}} ISO {{character}} sets differ from <b>code</b> <b>pages</b> is that the character positions 128 to 159, corresponding to ASCII control characters with the high-order bit set, are specifically unused and undefined in the ISO standards, though they had often been used for printable characters in proprietary <b>code</b> <b>pages,</b> a breaking of ISO standards that was almost universal.|$|R
