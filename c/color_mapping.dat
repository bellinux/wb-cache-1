180|1800|Public
25|$|Scientific {{visualization}} using {{computer graphics}} gained in popularity as graphics matured. Primary applications were scalar fields and vector fields from computer simulations and also measured data. The primary methods for visualizing two-dimensional (2D) scalar fields are <b>color</b> <b>mapping</b> and drawing contour lines. 2D vector fields are visualized using glyphs and streamlines or line integral convolution methods. 2D tensor fields are often resolved to a vector field by {{using one of}} the two eigenvectors to represent the tensor each point in the field and then visualized using vector field visualization methods.|$|E
50|$|<b>Color</b> <b>mapping</b> is a {{function}} that maps (transforms) the colors of one (source) image to the colors of another (target) image. A <b>color</b> <b>mapping</b> may {{be referred to as}} the algorithm that results in the mapping function or the algorithm that transforms the image colors. <b>Color</b> <b>mapping</b> is also sometimes called color transfer or, when grayscale images are involved, brightness transfer function (BTF).|$|E
50|$|<b>Color</b> <b>mapping</b> {{provides}} a means of identifying potential logo colors for new brands and ensuring brand differentiation within a visually cluttered marketplace.|$|E
40|$|Abstract. One of {{the most}} {{fundamental}} features of scientific visualization is the process of mapping scalar values to colors. This process allows us to view scalar fields by coloring surfaces and volumes. Unfortunately, the majority of scientific visualization tools still use a <b>color</b> <b>map</b> that is famous for its ineffectiveness: the rainbow <b>color</b> <b>map.</b> This <b>color</b> <b>map,</b> which naïvely sweeps through the most saturated colors, is well known for its ability to obscure data, introduce artifacts, and confuse users. Although many alternate <b>color</b> <b>maps</b> have been proposed, none have achieved widespread adoption by the visualization community for scientific visualization. This paper explores the use of diverging <b>color</b> <b>maps</b> (sometimes also called ratio, bipolar, or double-ended <b>color</b> <b>maps)</b> for use in scientific visualization, provides a diverging <b>color</b> <b>map</b> that generally performs well in scientific visualization applications, and presents an algorithm that allows users to easily generate their own customized <b>color</b> <b>maps.</b> ...|$|R
5000|$|<b>Color</b> <b>map</b> length (2 bytes): {{number of}} entries of the <b>color</b> <b>map</b> that are {{included}} in the file ...|$|R
40|$|Color {{is one of}} {{the most}} {{important}} visual variables in information visualization. In many cases, two-dimensional information can be color-coded based on a 2 D <b>color</b> <b>map.</b> A variety of <b>color</b> <b>maps</b> as well as a number of quality criteria for the use of color have been presented. The choice of the best <b>color</b> <b>map</b> depends on the analytical task users intend to perform and the design space in choosing an appropriate 2 D <b>color</b> <b>map</b> is large. In this paper, we present the ColorMap-Explorer, a visual-interactive system that helps users in selecting the most appropriate 2 D <b>color</b> <b>map</b> for their particular use case. ColorMap-Explorer also provides a library of many <b>color</b> <b>map</b> implementations that have been proposed in the scientific literature. To analyze their usefulness for different tasks, ColorMap-Explorer provides use case scenarios to allow users to obtain qualitative feedback. In addition, quantitative metrics are provided on a global (i. e. per <b>color</b> <b>map)</b> and local (i. e. per point) scale. ColorMap-Explorer enables users to explore the strengths and weaknesses of existing as well as user-provided <b>color</b> <b>maps</b> to find the best fit for their task. Any <b>color</b> <b>map</b> can be exported to be reused in other visualization tools. The code is published as open source software, so that the visualization community can use both the <b>color</b> <b>map</b> library and the ColorMap-Explorer tool. This also allows users to contribute new implementations...|$|R
50|$|It is also {{possible}} to define the matrix across two different images. Such a matrix can then be used for <b>color</b> <b>mapping.</b>|$|E
50|$|Image {{formation}} is a plotting method {{that produces a}} <b>color</b> <b>mapping</b> through changing the x-y position of the tip while scanning and recording the measured variable, i.e. the intensity of control signal, to each x-y coordinate. The <b>color</b> <b>mapping</b> shows the measured value corresponding to each coordinate. The image expresses the intensity of a value as a hue. Usually, the correspondence between the intensity of a value and a hue is shown as a color scale in the explanatory notes accompanying the image.|$|E
50|$|Color is a {{particularly}} important element of visual brand identity and <b>color</b> <b>mapping</b> provides an effective way of ensuring color contributes to differentiation in a visually cluttered marketplace (O'Connor, 2011).|$|E
40|$|The cues {{that are}} added for visual {{interpretation}} often compromise the data {{when it comes}} to automated analysis � What are some of the cues that were added? <b>Color</b> <b>Maps</b> � To form the picture from digital data, some one had to assign a <b>color</b> <b>map</b> � <b>Color</b> <b>maps</b> ideally suited to human eye’s sensitivity � Much more sensitive to gradations in low (dark) intensities • Numerical algorithms sensitive to variations in large numbers � Pictures appear banded • The underlying numbers are actually analog � The choice of <b>color</b> <b>map</b> often dictates what features users see � Look at the population density <b>color</b> <b>map</b> � Does it separate the dynamic range uniformly? � Do the shades chosen emphasize anything about the data? Use A Perceptual <b>Color</b> <b>map</b> � Most image processing algorithms rely on linear scaling of data � i. e. that you can divide the dynamic range uniformly � When presented with data on logarithmic scale, can be advantageous to transform the data first � For example, image processing of radar reflectivity images works better in dBZ rather than in Z � Given unfamiliar data, how do you know? � Auto-scale your data and use a perceptual <b>color</b> <b>map</b> to visualize it � Unlike the “rainbow ” <b>color</b> <b>map</b> that is an (inappropriate) default <b>color</b> <b>map,</b> this divides up the color space so that your eye is equally sensitive to every band. � This is what an automated algorithm will “see ” <b>Color</b> <b>Map</b> Alternatives “Rainbow...|$|R
40|$|Figure 1 : An {{anti-aliased}} {{procedural texture}} produced by applying a <b>color</b> <b>map</b> to noise (left), introducing structure that cannot be generated using only the noise function. Meshes with tessellated <b>color</b> <b>mapped</b> procedural microsurface details. The <b>color</b> <b>map</b> {{is applied to}} the microsurface heights (middle) and orientations (right) and filtered appropriately according to view-dependent masking and shading effects. <b>Color</b> <b>map</b> textures applied directly to surfaces, to geometric microsurface details, or to procedural functions (such as noise), are commonly used to enhance visual detail. Their simplicity and ability to mimic a wide range of realistic appearances have led to their adoption in many rendering problems. As with any textured or geometric detail, proper filtering is needed to reduce aliasing when viewed across a range of distances, but accurate and efficient <b>color</b> <b>map</b> filtering remains an open problem for several reasons: <b>color</b> <b>maps</b> are complex non-linear functions, especially when mapped through procedural noise and/or geometry-dependent functions, and the effects of perspective and masking further complicate the filterin...|$|R
50|$|In {{case that}} not the entire <b>color</b> <b>map</b> is {{actually}} {{used by the}} image, a non-zero first entry index allows to store only a required part of the <b>color</b> <b>map</b> in the file.|$|R
50|$|There are {{two types}} of <b>color</b> <b>mapping</b> algorithms: those that employ the {{statistics}} of the colors of two images, and those that rely on a given pixel correspondence between the images.|$|E
50|$|<b>Color</b> <b>mapping</b> {{can serve}} two {{different}} purposes: one is calibrating {{the colors of}} two cameras for further processing using two or more sample images, the second is adjusting the colors of two images for perceptual visual compatibility.|$|E
50|$|A common {{algorithm}} for computing the <b>color</b> <b>mapping</b> {{when the}} pixel correspondence is given is building the joint-histogram (see also co-occurrence matrix) {{of the two}} images and finding the mapping by using dynamic programming based on the joint-histogram values.|$|E
50|$|On December 6, 2013 A <b>Color</b> <b>Map</b> of the Sun {{received}} a nomination for Best Dance/Electronica Album in the 2014 Grammys. On December 10, 2013 Pretty Lights released A <b>Color</b> <b>Map</b> of the Sun Remixes.|$|R
40|$|Objective To {{assess the}} added value of {{arterial}} enhancement fraction (AEF) <b>color</b> <b>maps</b> for the differ-entiation of small metastases from hepatic benign lesions. Subjects and Methods We retrospectively analyzed 46 patients with colorectal cancer who underwent multiphasic liver CT imaging and had low-attenuating liver lesions smaller than 3 cm (123 total lesions; metastasis: benign = 32 : 91). AEF <b>color</b> <b>maps</b> {{of the liver}} were created from multiphasic liver CT images using dedicated software. Two radiologists independently reviewed multiphasic CT image sets alone and in combination with image sets with AEF <b>color</b> <b>maps</b> using a five-point scale. The additional diagnostic value of the <b>color</b> <b>maps</b> was assessed by means of re-ceiver-operating characteristic (ROC) analysis. Results The area under the ROC curve (Az) increased when multiphasic CT images were combined with AEF <b>color</b> <b>map</b> analysis as compared with evaluation based only on multi...|$|R
40|$|Introduction: Three-dimensional (3 D) <b>color</b> <b>maps</b> {{are useful}} for {{analyzing}} data acquired by laser scanning, stereophotography, or computed tomography (CT). The authors aim to illustrate the different applications of <b>color</b> <b>maps</b> in the craniomaxillofacial region. Methods: The images obtained from the above techniques at 2 different time points are superimposed based on a common area unaffected by the surgical intervention or growth. Using specialized software, the distance differences between the 2 superimposed images are depicted in a graphical format as a 3 D <b>color</b> <b>map.</b> A color-coded scale indicating the distances accompanies these maps. Results: 3 D <b>color</b> <b>maps</b> can be manipulated and viewed {{in a variety of}} angles to extract the maximum diagnostic information. They facilitate the critical evaluation of facial asymmetry, accuracy of fusing CT and 3 D photo data sets, and postsurgical changes. Conclusion. 3 D <b>color</b> <b>maps</b> aid the objective assessment of craniofacial structures while enhancing visual comprehension and communication with patients. © The Author(s) 2010. link_to_subscribed_fulltex...|$|R
5000|$|In 1979, APASCO {{worked with}} the {{government}} agency, Commonwealth Scientific and Industrial Research Organisation (CSIRO), to create COLOURMAP, an interactive <b>color</b> <b>mapping</b> system. [...] A few years later, APASCO would add site location and territory assignment capabilities for their product, APASCOMAP.|$|E
50|$|Choosing an organisation's logo's {{color is}} an {{important}} decision because of its long term implications {{and its role in}} creating differentiation among competitors' logos. A methodology for identifying potential logo colors within an industry sector is <b>color</b> <b>mapping,</b> whereby existing logo colors are systematically identified, mapped, and evaluated (O'Connor, 2011).|$|E
50|$|An {{example of}} an {{algorithm}} that employs the statistical properties of the images is histogram matching. This is a classic algorithm for <b>color</b> <b>mapping,</b> suffering from the problem of sensitivity to image content differences. Newer statistic-based algorithms deal with this problem. An example of such algorithm is adjusting the mean and the standard deviation of Lab channels of the two images.|$|E
40|$|International audienceColor map textures applied {{directly}} to surfaces, to geometric microsurface details, or to procedural functions (such as noise), {{are commonly used}} to enhance visual detail. Their simplicity and ability to mimic {{a wide range of}} realistic appearances have led to their adoption in many rendering problems. As with any textured or geometric detail, proper filtering is needed to reduce aliasing when viewed across a range of distances, but accurate and efficient <b>color</b> <b>map</b> filtering remains an open problem for several reasons: <b>color</b> <b>maps</b> are complex non-linear functions, especially when mapped through procedural noise and/or geometry-dependent functions, and the effects of perspective and masking further complicate the filtering over a pixel's footprint. We accurately solve this problem by computing and sampling from specialized filtering distributions on-the-fly, yielding very fast performance. We filter <b>color</b> <b>map</b> textures applied to (macro-scale) surfaces, as well as <b>color</b> <b>maps</b> applied according to (micro-scale) geometric details. We introduce a novel representation of a (potentially modulated) <b>color</b> <b>map's</b> distribution over pixel footprints using Gaussian statistics and, in the more complex case of high-resolution <b>color</b> <b>mapped</b> microsurface details, our filtering is view- and light-dependent, and capable of correctly handling masking and occlusion effects. Our results match ground truth and our solution is well suited to real-time applications, requires only a few lines of shader code (provided in supplemental material), is high performance, and has a negligible memory footprint...|$|R
40|$|A new color based {{generalized}} Hough transform algorithm which initially {{generates a}} similar <b>color</b> <b>map</b> between the prototype object and a test image {{and uses a}} novel Large Color Local Binary Pattern (LCLBP) descriptor on the similar <b>color</b> <b>map</b> for feature extraction and object detection is proposed. The novel LCLBP descriptor can efficiently capture the local structure of target object on the similar <b>color</b> <b>map.</b> According to the experiment results, the proposed algorithm can provide comparable accuracy with the state-of-the-art Hough algorithm, but ours is 27 times faster. Department of Electronic and Information EngineeringRefereed conference pape...|$|R
50|$|In 1991, China's first <b>color</b> <b>Map</b> Editing and Publication System, MapCAD.|$|R
5000|$|The {{histogram}} {{matching algorithm}} {{can be extended}} to find a monotonic mapping between two sets of histograms. Given two sets of histograms [...] and , the optimal monotonic <b>color</b> <b>mapping</b> [...] is calculated to minimize {{the distance between the}} two sets simultaneously, namely [...] where [...] is a distance metric between two histograms. The optimal solution is calculated using dynamic programming.|$|E
50|$|The camera {{calibration}} needs a known calibration {{target to}} be photographed and the resulting output from the camera to be converted to color values. A correction profile can then be built using {{the difference between the}} camera result values and the known reference values.When two or more cameras need to be calibrated relatively to each other, to reproduce the same color values, the technique of <b>color</b> <b>mapping</b> can be used.|$|E
50|$|Image {{differencing}} is {{an image}} processing technique used to determine changes between images. The difference between two images is calculated by finding the difference between each pixel in each image, and generating an image based on the result. For this technique to work, the two images must first be aligned so that corresponding points coincide, and their photometric values must be made compatible, either by careful calibration, or by post-processing (using <b>color</b> <b>mapping).</b> The complexity of the pre-processing needed before differencing varies {{with the type of}} image.|$|E
5000|$|... #Caption: False <b>color</b> <b>map</b> {{of ocean}} depth in the Atlantic basin ...|$|R
40|$|In this paper, we {{investigate}} {{the use of}} 3 D surface geometry for face recognition and compare it to one based on <b>color</b> <b>map</b> information. The 3 D surface and <b>color</b> <b>map</b> data are from the CAESAR anthropometric database. We find that the recognition performance is not very different between 3 D surface and <b>color</b> <b>map</b> information using a principal component analysis algorithm. We also discuss the different techniques for {{the combination of the}} 3 D surface and <b>color</b> <b>map</b> information for multi-modal recognition by using different fusion approaches and show that there is significant improvement in results. The effectiveness of various techniques is compared and evaluated on a dataset with 200 subjects in two different positions. Comment: Proceedings of SPIE Vol. 5404 Biometric Technology for Human Identification, Anil K. Jain; Nalini K. Ratha, Editors, pp. 351 - 361, ISBN: 9780819453273 Date: 25 August 200...|$|R
5000|$|... #Caption: The first <b>color</b> <b>map</b> of Ceres by Dawn (exaggerated color, March 2015) ...|$|R
50|$|Over time, {{specific}} device performance (and other conditions) may vary. Certainly different {{devices of}} the same device type will also vary {{with respect to the}} baseline data. However it is essential that the proofing system always perform as closely as possible to the original color profile. Calibration is a process of outputting more color charts, measuring them and adjusting the <b>color</b> <b>mapping</b> until system performance is {{as close as possible to}} the original baseline and color profile. During calibration, device settings may also be changed to achieve an optimal output process and subsequent color match.|$|E
50|$|Scientific {{visualization}} using {{computer graphics}} gained in popularity as graphics matured. Primary applications were scalar fields and vector fields from computer simulations and also measured data. The primary methods for visualizing two-dimensional (2D) scalar fields are <b>color</b> <b>mapping</b> and drawing contour lines. 2D vector fields are visualized using glyphs and streamlines or line integral convolution methods. 2D tensor fields are often resolved to a vector field by {{using one of}} the two eigenvectors to represent the tensor each point in the field and then visualized using vector field visualization methods.|$|E
5000|$|For some inkjet printers, {{monochrome}} ink {{sets are}} available {{either from the}} printer manufacturer or from third-party suppliers. These allow the inkjet printer {{to compete with the}} silver-based photographic papers traditionally used in black-and-white photography, and provide the same range of tones: neutral, [...] "warm" [...] or [...] "cold". When switching between full-color and monochrome ink sets, it is necessary to flush out the old ink from the print head with a cleaning cartridge. Special software or at least a modified device driver are usually required, to deal with the different <b>color</b> <b>mapping.</b>|$|E
50|$|Cortical {{maps are}} {{collections}} (areas) of minicolumns {{in the brain}} cortex that {{have been identified as}} performing a specific information processing function (texture <b>maps,</b> <b>color</b> <b>maps,</b> contour maps, etc.).|$|R
40|$|This paper {{presents}} an efficient algorithm for piecewise-linear approximation of surfaces defined by two-dimensional discrete scalar fields (height <b>map</b> and <b>color</b> <b>map).</b> The presented algorithm {{takes into account}} information from <b>color</b> <b>map</b> to improve perceived approximation quality. The algorithm sacrifices the quality of geometry approximation {{for the sake of}} a better texturing of the simplified model thus increasing the overall perceived approximation quality...|$|R
2500|$|Ajayi, A. J. F. and Michael Crowder. Historical Atlas of Africa (1985); 300 <b>color</b> <b>maps.</b>|$|R
