58|40|Public
50|$|In {{order for}} a Visa or MasterCard member bank to use the service, the bank has to operate <b>compliant</b> <b>software</b> that {{supports}} the latest protocol specifications. Once <b>compliant</b> <b>software</b> is installed, the member bank will perform product integration testing with the payment system server before it rolls out the system.|$|E
50|$|In June 2012, Infoblox {{released}} LINC, an open-source OpenFlow version 1.2 and 1.3 <b>compliant</b> <b>software</b> switch.|$|E
5000|$|For {{a payment}} {{application}} {{to be deemed}} PA-DSS <b>compliant,</b> <b>software</b> vendors must ensure that their software includes the following fourteen protections: ...|$|E
5000|$|GNU Modula-2 for GCC platforms, version 1.0 {{released}} December 11, 2010; PIM2, PIM3, PIM4, and ISO <b>compliant</b> (free <b>software,</b> GPLed) ...|$|R
5000|$|... 3GPP <b>compliant</b> {{protocol}} stack <b>software</b> for: GSM, GPRS, EDGE, W-CDMA, LTE ...|$|R
5000|$|<b>Compliant</b> Products are <b>software</b> {{products}} that comply to OGC's OpenGIS Specifications. When a product {{has been tested}} and certified as compliant through the OGC Testing Program, the product is automatically registered as [...] "compliant" [...] on this site.|$|R
50|$|WinPT or Windows Privacy Tray is {{frontend}} to the Gnu Privacy Guard (GnuPG) for the Windows platform. Released under GPL, it {{is compatible}} with OpenPGP <b>compliant</b> <b>software.</b>|$|E
50|$|Disposable {{elements}} of the instrument ensure that issues of contamination are handled easily. The stainless steel body of the instrument allows wash-down with harsh chemicals to meet stringent decontamination requirements. 21 CFR Part 11 <b>compliant</b> <b>software</b> provides a full data audit trail that meets FDA requirements.|$|E
50|$|In 1991, {{the company}} moved {{to its current}} offices in Millbrae, California. UniSoft then shifted its focus to the {{television}} industry in 1997, {{in order to address}} standards <b>compliant</b> <b>software</b> in that market. It now works solely in development, testing, and broadcast tools for digital television.|$|E
25|$|Because macOS is POSIX <b>compliant,</b> many <b>software</b> {{packages}} {{written for}} the other Unix-like systems such as Linux can be recompiled to run on it, including much scientific and technical software. Third-party projects such as Homebrew, Fink, MacPorts and pkgsrc provide pre-compiled or pre-formatted packages. Apple and others have provided versions of the X Window System graphical interface which can allow these applications to run with an approximation of the macOS look-and-feel. The current Apple-endorsed method is the open-source XQuartz project; earlier versions could use the X11 application provided by Apple, or before that the XDarwin project.|$|R
40|$|Industry Foundation Classes (IFC) {{provide an}} {{environment}} of interoperability among IFC-compliant software applications in the architecture, engineering, construction, and facilities management (AEC/FM) industry. They allow building simulation software to automatically acquire building geometry and other building data from project models created with IFC <b>compliant</b> CAD <b>software.</b> They also facilitate direct exchange of input and output data with other simulation software. This paper discusses how simulation software can be made compliant with version 1. 5 of the IFC. It also describes the immediate plans for expansion of IFC {{and the process of}} definition and addition of new classes to the model...|$|R
50|$|GPAC has {{roots in}} a New York city startup 1999. As an {{open-source}} project GPAC officially started in 2003 {{with the initial}} goal to develop from scratch, in ANSI C, clean <b>software</b> <b>compliant</b> to the MPEG-4 Systems standard, a small and flexible alternative to the MPEG-4 reference software. It is actually licensed under LGPL.|$|R
5000|$|Byte order mark — The most in-band way {{to store}} the {{encoding}} together with the data - prepend it. This is by intention invisible to humans using <b>compliant</b> <b>software,</b> but will by design be perceived as [...] "garbage characters" [...] to incompliant software (including many interpreters).|$|E
5000|$|OpenMG is a SDMI-compliant {{digital rights}} {{management}} system by Sony. It is designed for audio files in ATRAC3 format. The <b>compliant</b> <b>software,</b> e.g. Sony SonicStage, is usually capable of transcoding MP3 and wav files to OpenMG/ATRAC3. The file extensions OpenMG-encrypted files use are [...]omg and [...]oma.|$|E
50|$|WarpUP forms a {{hardware}} abstraction layer between the hardware and software, and {{ensures that the}} applications function correctly on PowerPC architecture. It also forms an interface between PowerPC driven hardware, and 68k <b>compliant</b> <b>software,</b> which allows the optimal exploitation {{of the speed of}} the PowerPC CPU, whilst making the porting of 68k applications as easy as possible.|$|E
50|$|Among {{the system}} manufacturers, by February 2010 ACSS {{certified}} Change 7.1 for their TCAS 2000 and Legacy TCAS II systems, {{and is currently}} offering Change 7.1 upgrade for their customers. By June 2010 Honeywell published a white paper with their proposed solutions for TCAS II Version 7.1. Rockwell Collins currently announces that their TCAS-94, TCAS-4000 and TSS-4100 TCAS II <b>compliant</b> systems are <b>software</b> upgradeable to Change 7.1 when available.|$|R
40|$|This paper {{describes}} {{an approach to}} model-based testing where a test suite is generated from a model and automatically concretized to drive an implementation. Motivated by an industrial project involving DO- 178 B <b>compliant</b> avionics <b>software,</b> where the models are UML activity diagrams and the implementation is ANSI C, we developed a seamless testing environment based on our test specification language FQL. We demonstrate how to apply FQL to activity diagrams {{in such a way}} that FQL test specifications easily translate from UML to C code. Our approach does not require any additional glue or auxiliary code but is fully automatic except for straightforward source code annotations that link source and model. In this way, we can check for modeled but unimplemented behavior and vice versa, and we can also evaluate the degree of abstraction between model and implementation. © 2011 Springer-Verlag...|$|R
40|$|This Application Note {{demonstrates}} how the Agilent LC/MS/MS solution can increase productivity through improved {{performance of the}} analytical equipment and superior data analysis software that reports relevant para-meters directly from the analytical data. Features of the Agilent solution are: • Fast LC methods and short cycle times through alternating column regeneration • State-of-the-art MS performance • Easy-to-learn and easy-to-use acquisition and data analysis software • Calculation of PK parameters directly by the data analysis <b>software</b> • <b>Software</b> <b>compliant</b> with the regulations for clinical trials Michael FrankApplication Note Improving the productivity of pharmaco-kinetic parameter determinatio...|$|R
50|$|ASCOM {{defines a}} {{collection}} of required Properties and Methods that ASCOM <b>compliant</b> <b>software</b> can use to communicate with an ASCOM compliant device. ASCOM also defines a range of optional Properties and Methods {{to take advantage of}} common features that may not be available for every manufacturer's device. By testing various properties an ASCOM client application can determine what features are available for use.|$|E
5000|$|... mXparser is an {{open-source}} mathematical expressions parser/evaluator providing {{abilities to}} calculate various expressions at a run time. Expressions definitions are given as plain text, then verified {{in terms of}} grammar / syntax, finally calculated. Library source code is maintained separately for Java and C#, providing the same API for Java/JVM, Android, [...]NET and MONO (Common Language Specification <b>Compliant).</b> <b>Software</b> is free and is distributed under Simplified BSD License.|$|E
50|$|In {{addition}} to supporting profile quality assurance (QA) {{of the technical}} process at the local facility, (e.g. determining if the dose was appropriate for the procedure performed), the profile also supports population analysis performed by national registries. <b>Compliant</b> <b>software</b> products are capable of de-identifying and submitting dose reports to a national dose register securely, making it relatively simple for groups such as ACR to collect and process dose data {{from across the country}} once they have recruited participating sites.|$|E
50|$|SystemC {{is defined}} and {{promoted}} by the Open SystemC Initiative (OSCI — now Accellera), and has {{been approved by the}} IEEE Standards Association as IEEE 1666-2005 - the SystemC Language Reference Manual (LRM). The LRM provides the definitive statement of the semantics of SystemC. OSCI also provide an open-source proof-of-concept simulator (sometimes incorrectly referred to as the reference simulator), which can be downloaded from the OSCI website. Although it was the intent of OSCI that commercial vendors and academia could create original <b>software</b> <b>compliant</b> to IEEE 1666, in practice most SystemC implementations have been at least partly based on the OSCI proof-of-concept simulator.|$|R
40|$|International audienceAcceleration {{of product}} development, {{decrease}} of NC programming effort and increase of product quality are demands from enterprises {{to make their}} products competitive. These requirements are hardly met by the today's used CAx process chain {{which is based on}} a multitude of interfaces and the standardised control data format ISO 6983. New concepts of product data modelling are necessary for a structured and object-oriented description of machining. The development of STEP-NC (ISO 14649) over the last ten years has brought new opportunities for automating the CAx process chain. This paper portrays a methodology for implementation of a standardised CAx process chain for rotational asymmetric parts, which are described in the technology-oriented process model for turning (ISO 14649 - 12). The methodology is realised through a suite of STEP <b>compliant</b> NC <b>software</b> tools, based on STEP compliant information models to integrate the whole chain from design to machining. Component case studies are used to demonstrate and analyse the methodology. The final part of the paper discusses the major issues and deficiencies related to the current phase of development of this new approach...|$|R
40|$|Abstract: Critical systems {{development}} pushes software {{quality to the}} extreme. When human life depends on the correct operation of the software, strict processes are {{put in place to}} ensure, as much as possible, the absence of errors in the air-borne system. These processes are very tool-demanding, and these tools also need to follow stringent and rigorous guidelines to provide the proper guarantees of qual-ity. The Open-DO initiative aims at providing a framework federating open-source tools for safety-critical systems. A key point is that these tools will come with the material to ensure that industrial users can trust their output and use them to develop <b>software</b> <b>compliant</b> to the highest integrity levels...|$|R
5000|$|The {{interoperability}} between {{devices of}} different vendors {{is defined by}} the layers of the OSI models. Also status outputs, IP addresses, port numbers as well as the data encoding of function blocks like PUBLISH/SUBSCRIBE and CLIENT/SERVER, which are used for the communication between devices, have to be considered. HOLOBLOC, Inc. defines the [...] "IEC 61499 compliance profile for feasibility demonstrations", which is for example supported by the IEC 61499 <b>compliant</b> <b>software</b> tools FBDK [...] and 4DIAC.|$|E
50|$|IEC 61499-2 defines {{requirements}} for software tools to be compliant to IEC 61499. This includes {{requirements for}} the representation and the portability of IEC 61499 elements {{as well as a}} DTD format to exchange IEC 61499 elements between different software tools.There are already some IEC 61499 <b>compliant</b> <b>software</b> tools available. Among these are commercial software tools, open-source software tools, and academic and research developments. Usually an IEC 61499 compliant runtime environment and an IEC 61499 compliant development environment is needed.|$|E
50|$|IEC 61499-4 {{describes}} {{the rules that}} a system, device or software tool must follow to be compliant to IEC 61499. These rules are related to interoperability, portability and configuration. Two devices are interoperable if they can work together to provide the functionality specified by a system configuration. Applications compliant to IEC 61499 have to be portable, {{which means that they}} can be exchanged between software tools of different vendors considering the requirements for software tools described within IEC 61499-2. Devices of any vendor have to be configurable by any IEC 61499 <b>compliant</b> <b>software</b> tool.|$|E
40|$|Deposited with {{permission}} of the author. © 2003 Sullivan, Shirley. In 2002, the University of Melbourne Information Division established a repository for research output of University of Melbourne staff. The repository {{is one of a}} growing number, both nationally and internationally, using open source <b>software</b> <b>compliant</b> with the protocols and standards of the OpenArchives Initiative. The paper discusses these and also outlines the experiences of the authors in establishing the repository. The paper complements EPRINTS@MELBOURNE by Jane Garner, Lynne Horwood and Shirley Sullivan and which outlines the means used to populate and publicise the repository to academic staff. 6 - 9 May 2003 Open Acces...|$|R
40|$|This {{document}} {{contains the}} NASA architecture standard for software defined radios used in space- and ground-based platforms to enable commonality among radio developments to enhance capability and services while reducing mission and programmatic risk. Transceivers (or transponders) with functionality primarily defined in software (e. g., firmware) {{have the ability}} to change their functional behavior through software alone. This radio architecture standard offers value by employing common waveform software interfaces, method of instantiation, operation, and testing among different <b>compliant</b> hardware and <b>software</b> products. These common interfaces within the architecture abstract application software from the underlying hardware to enable technology insertion independently at either the software or hardware layer...|$|R
40|$|SCA {{governs the}} {{structure}} and operation of software defined radios, enabling programmable radios to load waveforms, run applications, and network into an integrated system. Adherence to standards detailed in the SCA definition document allows hardware and software designers to know what equipment and programs to design. The SCA Hardware (HW) Framework tells the designer what minimum design specifications must be met by hardware devices. These specifications assure software written to the SCA guidance will run on SCA <b>compliant</b> hardware. Similar <b>software</b> specifications are provided for software applications. The core framework provides an abstraction layer between the waveform application and the software defined radio, enablin...|$|R
50|$|In April 2010, the x264 project {{announced}} full Blu-ray compliant video encoding capability making x264 {{the first}} free Blu-ray <b>compliant</b> <b>software</b> H.264 encoder. x264 {{has always had}} the ability to create video streams that are playable on most Blu-ray devices. However, it was up to the user to choose appropriate conversion settings. The default x264 preset chooses adequate compatibility for Blu-ray players but it is now possible to choose more complex conversion settings while simply maintaining compatibility by explicitly enabling Blu-ray compatibility mode. Blu-ray compatibility can be useful when striving for cross device compatibility, especially in the realm of high definition hardware media players.|$|E
40|$|Compliance {{provides}} a new methodology in constructing software architectures, which accommodate, {{and are therefore}} compliant to, particular application needs. The fundamental concept behind compliance is that by enabling higher layers in the software architecture to make policy decisions, the application support system is able to evolve with application needs. It has been conjectured {{that the benefits of}} the <b>compliant</b> <b>software</b> architecture will include ease of system evolution, a reduction in complexity, gains in flexibility and increased application performance. The <b>compliant</b> <b>software</b> architecture has been examined in several investigations, all of which have been done in the first instantiation of the <b>compliant</b> <b>software</b> architecture, the ProcessBase system. These investigations successfully demonstrate the evolutionary potential of the <b>compliant</b> <b>software</b> architecture, through the accommodation of application needs. However, the purported increase in application performance, together with a detailed examination of the adequacy of the <b>compliant</b> <b>software</b> architecture in supporting the needs of a real application have yet to be established. Hence, the primary objective of this study is the provision of a quantitative and qualitative analysis, which determines the efficiency and flexibility that the <b>compliant</b> <b>software</b> architecture provides to applications. To facilitate this analysis, a secondary objective of this study is the development of compliant thread scheduling functionality within the existing ProcessBase system. This project provides the first detailed analysis of compliance applied to a real and existing application. This analysis shows that the <b>compliant</b> <b>software</b> architecture imposes no performance overheads when specifying the default policies defined within the system. Further, by providing application-specific scheduling policies, applications are able to significantly improve their performance. These results combined with the detailed qualitative analysis of compliance, substantiate the postulated benefits of performance and flexibility that the <b>compliant</b> <b>software</b> architecture can bring to applications...|$|E
30|$|The MMHR-HRIR {{database}} {{is distributed}} under a Creative Commons (CC-BY 3.0) license {{and can be}} downloaded from [URL] The data is provided in the SOFA format, allowing the MMHR-HRIR database {{to be used in}} <b>compliant</b> <b>software</b> with minimal modifications. A MATLAB API for the SOFA format can be obtained from [15].|$|E
40|$|CNC {{manufacturing}} {{has evolved}} {{through the use}} of faster, more precise and more capable CNC controllers and machine tools. These enhancements in machine tools however have not been integrated under a common platform to support CAD/CAM/CNC software inter-operability and as a result a plethora of standards is being used for these systems. ISO 10303 (STEP) and ISO 14649 (STEP-NC) seek to eliminate the barriers in the exchange of information in the CNC manufacturing chain and enable inter-operability throughout the manufacturing software domain. This paper introduces a novel software platform called the Integrated Platform for Process Planning and Control (IP 3 AC) to support the rapid development of STEP-NC <b>compliant</b> CNC manufacturing <b>software...</b>|$|R
40|$|Abstract—The {{aerospace}} {{industry has been}} adopting avionics architectures {{to take advantage of}} advances in computer engineering. Integrated Modular Avionics (IMA), as described in ARINC 653, distributes functional modules into a robust configuration interconnected with a “virtual backplane ” data communications network. Each avionics module’s function is defined in <b>software</b> <b>compliant</b> with the APEX Application Program Interface. The Avionics Full-Duplex Ethernet (AFDX) network replaces the point-topoint connections used in previous distributed systems with “virtual links”. This network creates a command and data path between avionics modules with the software and network defining the active virtual links over an integrated physical network. In the event of failures, the software and network can perform complex reconfigurations ver...|$|R
40|$|Started in 1993, the Debian {{project is}} one of the oldest Free Software projects. Due to its {{volunteer}} nature, specialists from all fields contribute to the Debian GNU/ Linux distribution, which includes more than 30000 packages. The Debian packaging policy, its advanced package management system and the conservative release process lead to a stable basis which is ideal for customized environments like scientific research. The Debichem project [1] has been packaging and maintaining chemical <b>software</b> <b>compliant</b> with the Debian Free Software Guidelines (DFSG) [2] since 2006. Currently, 35 Free Software package are directly maintained by the Debichem team and 10 more are part of Debichem but maintained by others. At the core of Debichem are the cheminformatic...|$|R
