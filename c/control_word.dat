128|864|Public
500|$|A binary phase {{accumulator}} {{consists of}} an N-bit binary adder and a register configured as shown in Figure 1. Each clock cycle produces a new N-bit output consisting of the previous output obtained from the register summed with the frequency <b>control</b> <b>word</b> (FCW) which is constant for a given output frequency. The resulting output waveform is a staircase with step size , the integer value of the FCW. In some configurations, the phase output is taken from {{the output of the}} register which introduces a one clock cycle latency but allows the adder to operate at a higher clock rate.|$|E
2500|$|Scanned text is {{subjected}} to analysis by two different optical character recognition programs – one of them, as mentioned the project developer Ben Maurer, is ABBYY FineReader. Their respective outputs are then aligned with each other by standard string-matching algorithms and compared both {{to each other and}} to an English dictionary. Any word that is deciphered differently by both OCR programs or that is not in the English dictionary is marked as [...] "suspicious" [...] and converted into a CAPTCHA. The suspicious word is displayed, out of context, sometimes along with a <b>control</b> <b>word</b> already known. If the human types the <b>control</b> <b>word</b> correctly, then the response to the questionable word is accepted as probably valid. If enough users were to correctly type the <b>control</b> <b>word,</b> but incorrectly type the second word which OCR had failed to recognize, then the digital version of documents could end up containing the incorrect word. The identification performed by each OCR program is given a value of 0.5 points, and each interpretation by a human is given a full point. Once a given identification hits 2.5 points, the word is considered valid. Those words that are consistently given a single identity by human judges are later recycled as control words. If the first three guesses match each other but do not match either of the OCRs, they are considered a correct answer, and the word becomes a <b>control</b> <b>word.</b> When six users reject a word before any correct spelling is chosen, the word is discarded as unreadable.|$|E
2500|$|The {{original}} reCAPTCHA {{method was}} designed to show the questionable words separately, as out-of-context correction, rather than in use, such as within a phrase of five words from the original document. Also, the <b>control</b> <b>word</b> might mislead context for the second word, such as a request of [...] "/metal/ /fife/" [...] being entered as [...] "metal file" [...] due to the logical connection of filing with a metal tool being considered more common than the musical instrument [...] "fife".|$|E
5000|$|J {{provides}} {{control structures}} (details here) {{similar to other}} procedural languages. Prominent <b>control</b> <b>words</b> in each category include: ...|$|R
40|$|The {{present study}} was {{designed}} to compare lexical decision latencies in visual and auditory modalities to three word types: (a) words that are inconsistent with two information sources, orthography and semantics (i. e., heterographic homophones such as bite/byte), (b) words that are inconsistent with one information source, semantics (i. e., homographic homophones such as bat), and (c) <b>control</b> <b>words</b> that are not inconsistent with any information source. Participants (N = 76) were randomly assigned to either the visual or auditory condition in which they judged the lexical status (word or nonword) of 180 words (60 heterographic homophones, 60 homographic homophones, and 60 <b>control</b> <b>words)</b> and 180 pronounceable nonsense word foils. Results differed significantly in the visual and auditory modalities. In visual lexical decision, homographic homophones were responded to faster than heterographic homophones or <b>control</b> <b>words,</b> which did not differ significantly. In auditory lexical decision, both homographic homophones and heterographic homophones were responded to faster than <b>control</b> <b>words.</b> Results are used to propose potential modifications to the Cooperative Division of Labor Model of Word Recognition (Harm & Seidenberg, 2004) to enable it to encompass both the visual and auditory modalities and account for the present results...|$|R
50|$|Tag 3 {{represents}} {{code words}} themselves, which won't {{occur on the}} stack. Tag 3 is also used for the stack <b>control</b> <b>words</b> MSCW, RCW, TOSCW.|$|R
2500|$|The {{question}} whether the presentation of words in a sentence context restricts lexical access to words of the target language only are most studied in bilinguals' second language (L2) processing. This sentence context effect might be an efficient strategy to speed up lexical search, because it reduces the number of lexical candidates. For example, Elston-Guttler et al. showed that cross-lingual activation is very sensitive {{to the influence of}} a sentence context and previous activation state of the two languages in a semantic priming study. In their study, German-English bilinguals were presented with relatively low-constraint sentences in which a homograph (e.g., The woman gave her friend a pretty GIFT; gift means poison in German) or a <b>control</b> <b>word</b> was presented at the end (e.g., The woman gave her friend a pretty SHELL). [...] "Constraint" [...] means {{the degree to which the}} sentence frame preceding the target word biased that word. The sentence was then replaced by a target word (poison) for lexical decision task. They found that only for participants who saw a German film prior to experiment and only in the first block of the experiment, participants could recognize the target faster after primed with the related homograph sentence than primed with the controlled sentence. This suggests that bilinguals can quickly [...] "zoom into" [...] the L2 processing situation even the L1 activation was boosted.|$|E
50|$|This is {{achieved}} {{by a combination of}} scrambling and encryption. The data stream is scrambled with a 48-bit secret key, called the <b>control</b> <b>word.</b> Knowing the value of the <b>control</b> <b>word</b> at a given moment is of relatively little value, as under normal conditions, content providers will change the <b>control</b> <b>word</b> several times per minute. The <b>control</b> <b>word</b> is generated automatically {{in such a way that}} successive values are not usually predictable; the DVB specification recommends using a physical process for that.|$|E
50|$|To {{initialize}} the counters, {{the microprocessor}} must write a <b>control</b> <b>word</b> (CW) in this register. This {{can be done}} by setting proper values for the pins of the Read/Write Logic block and then by sending the <b>control</b> <b>word</b> to the Data/Bus Buffer block.|$|E
5000|$|... {{taxonomy}} - {{a formal}} list of concepts, denoted by <b>controlled</b> <b>words</b> or phrases, arranged from abstract to specific, related by subtype-supertype relations or by superset-subset relations.|$|R
40|$|EUTERPE (Ai memo no. 129) was {{designed}} as a "real-time music program" which would interpret music described as "voice-programs" in DDT. These voice-programs consisted of note words, description of tones to be sounded, and <b>control</b> <b>words</b> which determined the parameters of pitch, tempo, articulation and wave form and allowed for a subroutine feature and transfer within the voice-program. It had been hoped that complex musical forms could be described in terms of a few collections of note words and sequences of <b>control</b> <b>words.</b> However, musical variation and development is more subtle than the developmental power of these <b>control</b> <b>words.</b> Any transformation of musical material may be expressed as a LISP function; therefore, the <b>control</b> <b>words</b> were abandoned and EUTERPE was linked to LISP. The voice-programs would be written and loaded by LISP and played by EUTERPE. The principle function in the system is LOAD which takes two arguments: 1) an absolute location in core and 2) a list of note words. The note words are translated into EUTERPE-readable code and loaded into the proper voice program. The addresses of the first location of each if the six voice programs are SETQed by the system with the names VOICE 1, [...] ., VOICE 6. The value of LOAD s the next file word in core, so a series of lists may be loaded by bootstrapping...|$|R
25|$|Only {{words that}} both OCR {{programs}} {{failed to recognize}} are used as <b>control</b> <b>words.</b> Thus, any program that can recognize these words with nonnegligible probability would represent an improvement over {{state of the art}} OCR programs.|$|R
5000|$|As an example, if it {{is needed}} that PC5 be set, then in the <b>control</b> <b>word,</b> ...|$|E
50|$|Thus, as per {{the above}} values, 0B (Hex) will be {{loaded into the}} <b>Control</b> <b>Word</b> Register (CWR).|$|E
5000|$|... | 0 | n | (4, 1) The integer n (declared on {{entry to}} a block, not a procedure) |-----------------------| | D4==>3 | MSCW | (4, 0) The Mark Stack <b>Control</b> <b>Word</b> {{containing}} {{the link to}} D3. |=======================| | 0 | r2 | (3, 5) The real r2 |-----------------------| | 0 | r1 | (3, 4) The real r1 |-----------------------| | 1 | p2 | (3, 3) A SIRW reference to g at (2,6) |-----------------------| | 0 | p1 | (3, 2) The parameter p1 from value of f [...] |-----------------------| | 3 | RCW | (3, 1) A return <b>control</b> <b>word</b> |-----------------------| | D3==>3 | MSCW | (3, 0) The Mark Stack <b>Control</b> <b>Word</b> containing the link to D2. |=======================| | 1 | a | (2, 7) The array a ======>word memory block |-----------------------| | 0 | g | (2, 6) The real g [...] |-----------------------| | 0 | f | (2, 5) The real f [...] |-----------------------| | 0 | k | (2, 4) The integer k [...] |-----------------------| | 0 | j | (2, 3) The integer j [...] |-----------------------| | 0 | i | (2, 2) The integer i |-----------------------| | 3 | RCW | (2, 1) A return <b>control</b> <b>word</b> |-----------------------| | D2==>3 | MSCW | (2, 0) The Mark Stack <b>Control</b> <b>Word</b> containing the link to the previous stack frame. |=======================| — Stack bottom ...|$|E
50|$|EasyScript {{is a set}} of macro {{definitions}} and profiles included with Script/370 Version 3 that implements a primitive version of GML. Tags are variables whose values have been set to <b>control</b> <b>words,</b> allowing multiple tags in a single line.|$|R
50|$|RTF {{files are}} usually 7-bit ASCII plain text. RTF {{consists}} of <b>control</b> <b>words,</b> <b>control</b> symbols, and groups. RTF files {{can be easily}} transmitted between PC based operating systems because they are encoded as a text file with 7-bit graphic ASCII characters. Converters that communicate with Microsoft Word for MS Windows or Macintosh should expect data transfer as 8-bit characters and binary data can contain any 8-bit values.|$|R
40|$|In Experiment 1, {{university}} students classified on lexical expertise {{on the basis}} of spelling plus nonword pronunciation accuracy made lexical decisions to homophones and <b>control</b> <b>words.</b> Homophones were accepted as words more slowly than <b>control</b> <b>words,</b> but lexical experts showed a smaller homophone cost than the less skilled group. In Experiment 2, similarly classified groups showed a large difference in their ability to detect homophones, with the low-expertise group showing a yes bias to high-frequency words, and having difficulty detecting homophones when mate-frequency was low. The results suggest superior use of orthography in the lexical experts and more reliance on semantic information in nonexperts, and support the importance of facility with orthography–phonology mappings in lexical expertise...|$|R
50|$|In {{order for}} the {{receiver}} to unscramble the data stream, it must be permanently informed about the current value of the <b>control</b> <b>word.</b> In practice, it must be informed slightly in advance, so that no viewing interruption occurs. Encryption is used to protect the <b>control</b> <b>word</b> during transmission to the receiver: the <b>control</b> <b>word</b> is encrypted as an entitlement control message (ECM). The CA subsystem in the receiver will decrypt the <b>control</b> <b>word</b> only when authorised to do so; that authority {{is sent to the}} receiver {{in the form of an}} entitlement management message (EMM). The EMMs are specific to each subscriber, as identified by the smart card in his receiver, or to groups of subscribers, and are issued much less frequently than ECMs, usually at monthly intervals. This being apparently not sufficient to prevent unauthorized viewing, TPS has lowered this interval down to about 12 minutes. This can be different for every provider, BSkyB uses a term of 6 weeks. When Nagravision 2 was hacked, Digital+ started sending a new EMM every three days to make unauthorized viewing more cumbersome.|$|E
5000|$|This mode is {{selected}} when D7 {{bit of the}} <b>Control</b> <b>Word</b> Register is 1. There are three I/O modes: ...|$|E
5000|$|Hence, for {{the desired}} operation, the <b>control</b> <b>word</b> {{register}} {{will have to}} be loaded with [...] "10001010" [...] = 8A (hex).|$|E
50|$|SCRIPT allows space {{units in}} <b>control</b> <b>words</b> to be {{specified}} {{in a number of}} units including inches, centimeters, millimeters, picas, ciceros, m-spaces, or device units (pels at the current device resolution). Vertical space units are assumed to be lines unless otherwise specified.|$|R
5000|$|The Model 85 has {{separate}} instruction fetch (I-unit) {{and execution}} (E-unit) to provide high performance. The I-unit is hardware controlled. The E-unit is microprogrammed; the <b>control</b> <b>words</b> are 108 bits wide on a basic 360/85 and wider if an emulator feature is installed.|$|R
5000|$|RTF 1.2 {{specification}} defined use {{of drawing}} {{objects such as}} rectangles, ellipses, lines, arrows, polygons and various other shapes. RTF 1.5 specification introduced many new <b>control</b> <b>words</b> for drawing objects. RTF drawing objects are also called [...] "shapes" [...] since RTF 1.5.|$|R
50|$|One {{technical}} method, {{implemented by}} providers such as Irdeto and NDS, is {{to update the}} software of digital receivers provided by the subscription television service. This software implements a further decryption layer, held within the receiver. Rather than sending a plain text <b>control</b> <b>word</b> from the smart card to the receiver's microprocessor, which can be intercepted, the decrypted ECM will in fact be an encrypted <b>control</b> <b>word,</b> {{which can only be}} decrypted by a legitimate, non card sharing capable, receiver. A simpler method, used by several providers, is to simply increase the frequency of <b>control</b> <b>word</b> changes. With changes occurring as frequently as once every few seconds, extra stress is put onto the smart card sharing system, meaning that clients may be frustrated by short, frequent, missed viewing periods.|$|E
5000|$|The <b>control</b> <b>word</b> [...] {{can be used}} to {{indicate}} that subsequent Unicode escape sequences within the current group do not specify the substitution character.|$|E
50|$|The {{security}} of conditional access smart card technology {{is limited by}} the {{security of}} the DVB standard in which it operates. The standard practice of a legitimate smart card is to decrypt an ECM (Entitlement Control Message), which then provides the <b>control</b> <b>word,</b> which allows the viewing of scrambled material. With card sharing, however, the smart card and its security features are bypassed; software intercepts the decrypted <b>control</b> <b>word</b> and allows the user to share it across a computer network.|$|E
40|$|NASCAP simulates the {{charging}} process for a complex object in either tenuous plasma (geosynchronous orbit) or ground test (electron gun source) environment. Program <b>control</b> <b>words,</b> {{the structure of}} user input files, and various user options available are described in this computer programmer's user manual...|$|R
5000|$|The Model 40 uses 56-bit <b>control</b> <b>words.</b> The 2040 box {{implements}} {{both the}} System/360 main processor and the multiplex channel (the I/O processor). This model uses [...] "TROS" [...] dedicated readers similar to [...] "CROS" [...] units, {{but with an}} inductive pickup (Transformer Read-only Store).|$|R
40|$|In this event-related brain {{potentials}} (E RP) study, {{we explored}} {{the possibility to}} selectively track referential ambiguity during spoken discourse comprehension. Earlier ERP {{research has shown that}} referentially am biguous nouns (e. g., “the girl” in a two-girl context) elicit a frontal, sustained negative sh ift relative to unambiguous <b>control</b> <b>words.</b> In the current study, we examined whether this ERP effect reflec ts ‘deep’ situation model ambiguity or ‘superficial’ textbase am biguity. We contrast ed these different interpretations by investigating whether a discourse-level semantic manipulation that prevents referential ambiguity also averts t he elicitation of a referentially induced ERP effect. We compared ERPs el icited by nouns that were re ferentially non-ambiguous but were associated with two discourse entities (e. g., “the girl” with two girls introduced in the context, but one of which has died or le ft the scene), with referentially ambiguous and non-ambiguous <b>control</b> <b>words.</b> While temporally referentially ambiguous nouns elicited a frontal negative shift compared to <b>control</b> <b>words,</b> the ‘double bo und’ but referentially non-ambiguous nouns did not. These results suggest {{that it is possible to}} selectively track referential ambiguity with ERPs at the level that is most relev ant to discourse comprehension, the situation mode...|$|R
5000|$|The <b>control</b> <b>word</b> {{register}} contains 8 bits, labeled D7..D0 (D7 is the MSB). The decoding {{is somewhat}} complex. Mostvalues set the parameters {{for one of}} the three counters: ...|$|E
5000|$|The OUT pin is set low {{after the}} <b>Control</b> <b>Word</b> is written, and {{counting}} starts one clock cycle after the COUNT is programmed. OUT remains low until the counter reaches 0, {{at which point}} OUT will be set high until the counter is reloaded or the <b>Control</b> <b>Word</b> is written. The counter wraps around to [...] internally and continues counting, but the OUT pin never changes again. The Gate signal should remain active high for normal counting. If Gate goes low, counting is suspended, and resumes when it goes high again.|$|E
50|$|Operation mode of the PIT {{is changed}} by setting the above {{hardware}} signals. For example, {{to write to}} the <b>Control</b> <b>Word</b> Register, one needs to set =0, =1, =0, A1=A0=1.|$|E
40|$|International audienceEvent-related {{potentials}} (ERPs) {{served to}} investigate whether phonological representations from both the first (L 1) and second (L 2) language of bilinguals are activated during silent reading of L 2 words. French-English late bilinguals and control monolingual English speakers read Interlingual homophones (e. g., pool in English which has substantial phonological overlap with the French word “poule”, meaning 'chicken') and matched <b>control</b> <b>words.</b> Results showed a reduction in N 400 amplitude in response to interlingual homophones in comparison to <b>control</b> <b>words</b> for bilinguals, but not for English monolinguals. The reduced N 400 response to homophones in bilinguals suggests facilitation of word recognition. These results suggest parallel activation of both L 1 and L 2 phonological representations when reading silently in the L 2. These findings point to a language nonspecific model for bilinguals at the phonological level of representation...|$|R
40|$|Iconicity is a {{fundamental}} feature of human language. However its processing consequences at the behavioral and neural level in spoken word comprehension are not well understood. The current paper presents the behavioral and electrophysiological outcome of an auditory lexical decision task in which native speakers of Dutch listened to onomatopoeic <b>words</b> and matched <b>control</b> <b>words</b> while their electroencephalogram was recorded. Behaviorally, onomatopoeic words were processed as quickly and accurately as words with an arbitrary mapping between form and meaning. Event-related potentials time-locked to word onset revealed {{a significant decrease in}} negative amplitude in the N 2 and N 400 components and a late positivity for onomatopoeic words in comparison to the <b>control</b> <b>words.</b> These findings advance our understanding of the temporal dynamics of iconic form-meaning mapping in spoken word comprehension and suggest interplay between the neural representations of real-world sounds and spoken words...|$|R
40|$|The {{question}} of how word morphology is coded and retrieved during visual word recognition {{has given rise to}} a large number of empirical studies. The results, however, do not enable one to decide between alternative models of morphological representation and processing. It is argued in this paper that the contrast between pseudoprefixed <b>words</b> and non-prefixed <b>control</b> <b>words</b> can provide an empirical basis for deciding between hypotheses of morphology representation as sublexical or lexical. This contrast has been used in the three lexical decision experiments reported here, which show that decision times for pseudoprefixed words are significantly slower than for non-prefixed <b>control</b> <b>words.</b> This pseudoprefixation effect strongly supports the hypothesis that morphology is coded and processed sublexically during word recognition. The experimental conditions employed allow both strategic and strictly orthographic explanations for the pseudoprefixation effect to be dismissed...|$|R
