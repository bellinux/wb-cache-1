0|3773|Public
40|$|The {{invention}} {{relates to}} {{a method for}} authenticating a client (C) {{with respect to a}} <b>service</b> <b>server</b> (S) comprises the following steps: transmitting an authentication token (c) from an authentication server (K) to the client (C) (110); transmitting the authentication token (c) from the client (C) to the <b>service</b> <b>server</b> (S) (120); verifying the authentication token (c) by the <b>service</b> <b>server</b> (S) (130); and deciding on an approval or disapproval of the requested resource, taking a result of the verification by the <b>service</b> <b>server</b> (S) into consideration (140). An authentication server (K) for authenticating a client (C) with respect to a <b>service</b> <b>server</b> (S) comprises a cryptography device for cryptographically attaching the authentication token (c) to a secret (cid), which is shared between the client (C) and the authentication server (K). The invention further relates to a <b>service</b> <b>server</b> (S) for authenticating a client (C) with respect to the <b>service</b> <b>server</b> (S), wherein the <b>service</b> <b>server</b> (S) comprises an authentication token verifier for verifying whether the authentication token (c) was cryptographically attached to a secret (cid) shared between the client (C) and the authentication server (K) ...|$|R
30|$|If the {{algorithm}} finds servers {{in good condition}} (line 12), the session is admitted (lines 13 – 17), else the session is deferred to the busy <b>service</b> <b>server</b> (line 20). Only if also the busy <b>service</b> <b>server</b> is overloaded, will the session be rejected (line 22).|$|R
50|$|DotGNU Execution Environment (DGEE) is a web <b>service</b> <b>server.</b>|$|R
5000|$|Network <b>service</b> <b>servers</b> for {{receiving}} documents for print or storage ...|$|R
50|$|Telecommunications: communications, mobile telephony, {{local area}} networks, interconnectivity, <b>services,</b> <b>servers</b> and operators.|$|R
30|$|Following verification, the Data Store {{receives}} the confirmation from the Remote Desktop Services/Terminal <b>Services</b> <b>servers.</b>|$|R
30|$|Subsequently, {{the request}} is {{passed on to}} the Remote Desktop Services/Terminal <b>Services</b> <b>servers</b> where the {{licenses}} are verified.|$|R
5000|$|H.264(MPEG4-Part10) encode Push & Download {{transport}} DRM security VOD Servers & Various VAS (Value Added <b>Service)</b> <b>Servers</b> Authorization, Billing & Management System ...|$|R
25|$|Windows XP Home Edition, {{for home}} {{desktops}} and laptops - lacked {{features such as}} joining Active Directory Domain, Remote Desktop Server and Internet Information <b>Services</b> <b>Server.</b>|$|R
40|$|Abstract. This paper {{presents}} a SOAP request scheduling algorithm for differentiated quality of service. The scheduling algorithm can be deployed on a Web <b>services</b> <b>server</b> or any server that processes SOAP requests. Due to the resource-intensive security processing of SOAP messages, this research implements the scheduling algorithm on a QoS security server. The security server schedules the requests forwarded from the Web <b>services</b> <b>server</b> {{for the security}} processing and then sends the valid requests back to the Web <b>services</b> <b>server</b> for executing the Web services. The design of the scheduling algorithm {{is derived from the}} traditional deficit round-robin scheduling. However, the scheduling algorithm schedules requests according to the probed CPU resource consumption of requests. In the evaluation, the scheduling algorithm reveals the service differentiation on the throughput and response time and the little scheduling overhead. The resource utilizations are measured to prove the security processing is much more resource-intensive than the Web services execution. ...|$|R
50|$|Argus is {{a systems}} and network {{monitoring}} application.It {{is designed to}} monitor the status of network <b>services,</b> <b>servers,</b> and other network hardware. It will send alerts when it detects problems.|$|R
5000|$|Client/Server, Telecommunications, Intranets, and Extranets: An audit {{to verify}} that {{telecommunications}} controls are in place on the client (computer receiving <b>services),</b> <b>server,</b> and on the network connecting the clients and servers.|$|R
50|$|Zabbix is {{enterprise}} {{open source}} monitoring software for networks and applications, created by Alexei Vladishev. It {{is designed to}} monitor and track the status of various network <b>services,</b> <b>servers,</b> and other network hardware.|$|R
5000|$|Upon {{receiving}} messages E and F from TGS, {{the client}} has {{enough information to}} authenticate itself to the <b>Service</b> <b>Server</b> (SS). The client connects to the SS and sends the following two messages: ...|$|R
5000|$|... isyVmon was a {{computer}} system and network monitoring software application system created by iT-CUBE SYSTEMS. It was designed to monitor and track the status of various applications, network <b>services,</b> <b>servers,</b> and other network hardware.|$|R
50|$|OpenNap is a {{peer-to-peer}} <b>service</b> <b>server</b> software. It {{was created}} as an open source Napster server, extending the Napster protocol to allow sharing of any media type, and adding {{the ability to}} link servers together.|$|R
50|$|Depending on {{the mobile}} form {{application}} provider, some mobile form solutions allow offices to dispatch data to mobile form application. In addition, other mobile form applications can {{be connected with}} various cloud <b>services,</b> <b>servers</b> and social media platforms.|$|R
5000|$|The International Association of Health <b>Central</b> <b>Service</b> Material Management (IAHSCMM) is a {{professional}} association which represents healthcare <b>Central</b> <b>Service</b> (CS) professionals, and is based in Chicago, Illinois with over 21,000 members worldwide. IAHSCMM in association with Purdue University provides education and professional certification for <b>central</b> <b>service</b> personnel in the field. These Certifications include: ...|$|R
50|$|It is the {{new service}} {{authentication}} technology that eliminated the need to type in a user password and replaced the conventional machine-to-machine service authentication with human interaction and trust. The human interaction {{plays a major role}} as users visually verify the authenticity of service through identifying the code generated by server on their smartphones. The code generated by the <b>service</b> <b>server</b> is challenge and response-based one time password and has a specific seed value from binding complex session values to the user credentials. Users can expect to engage in the secure communication with the <b>service</b> <b>server</b> since the <b>service</b> itself generates and provides its credentials to the user first. It is especially effective in protecting users from pharming attacks.|$|R
5000|$|... 1937 <b>Central</b> <b>Service</b> established, {{enabling}} centralized {{preparation of}} equipment and supplies. Now used universally by all hospitals, the Dee's <b>Central</b> <b>Service</b> department {{was the first in}} Utah.|$|R
30|$|The busy service {{amounts to}} a polling session, notifying the user when the {{requested}} service is available and showing a waiting message or other distraction until then. Using server push technology or websockets, the busy <b>service</b> <b>server</b> could be moved to the client instead.|$|R
40|$|Abstract — In this paper, we analyze {{survivability}} {{issues of}} Bluetooth Location Networks (BLN) for location-aware or context-driven mobile networks, such as m-commerce environ-ments or e-museums. We assume that, {{in any of}} those scenarios, there exist <b>service</b> <b>servers</b> that need to know user location in real-time, to send context-oriented information to user handhelds when necessary. The BLN transmits position information to <b>service</b> <b>servers,</b> without user participation. It is not subject to line-of-sight constraints and is supported by existing commercial handhelds. BLN users carry either a Bluetooth-enabled handheld or any mobile data terminal and a Bluetooth badge. The BLN is composed by wireless Bluetooth nodes, which establish an spontaneous network topology at system initialization. The BLN can coexist with other Bluetooth systems...|$|R
5000|$|... "Certified <b>Central</b> <b>Service</b> Vendor Program" [...] (CCSVP), which recognizes vendors {{who have}} {{demonstrated}} knowledge of <b>Central</b> <b>Service</b> concepts and processes including the decontamination, inspection, assembly, packaging, and sterilization of reusable surgical instruments.|$|R
50|$|Other {{enhancements}} included new component types (<b>Services,</b> <b>Server</b> Pages, Reports); Signature Editor and Assembly Workbench; subsystems; operations; non-modal forms; component instances; improved {{editors and}} navigation; enhanced editor plug-in; new debugger; integrated online help; component templates; Web Application Server; improved validation; Uniface Name Server and graphical partitioning manager.|$|R
40|$|The {{authentication}} systems {{which uses}} passwords to authenticate their systems stores their password {{in a central}} server which is easily prone to attack {{and if they are}} being compromised by the intruder, it is possible for the intruder to obtain the password and gain access to the contents of the user. To overcome this problem, the multi-server systems were being proposed in which the user has to communicate in parallel with several or all of the servers for the purpose of authentication. Such system requires a large communication bandwidth and needs for synchronization at the user. The system is not easy to deploy and maintain or it requires the protocols which are quite expensive. To overcome these problems the two server authentication system is being proposed which uses only the passwords and the session keys rather than performing any cryptographic techniques. The system consists of two servers, the front end <b>service</b> <b>server</b> which interacts directly to the user and the back end control server which is only visible to the <b>service</b> <b>server.</b> The users contact only the <b>service</b> <b>server</b> but these two servers are responsible for the authentication of the user. The user has a password which is transformed into two long secrets which are held by <b>service</b> <b>server</b> and control server. Both the system using their respective shares validate user during the login. The system also overcomes the online and offline dictionary attacks that are prevailing in the single and multi-server systems. The system is particularly suitable for resource-constrained users due to its efficiency in terms of both computation and communication. It is also possible for the servers to associate with multiple clients. The system is compatible with the single server systems that are available today such as FTP and web application...|$|R
50|$|Internet hosting {{services}} provide email, web-hosting, {{or online}} storage services. Other <b>services</b> include virtual <b>server,</b> cloud <b>services,</b> or physical <b>server</b> operation.|$|R
2500|$|Terminal Services Gateway: {{enables the}} ability to use a {{front-end}} IIS server to accept connections (over port 443) for back-end Terminal <b>Services</b> <b>servers</b> via an https connection, similar to how RPC over https allows Outlook clients to connect to a back-end Exchange 2003 server. [...] Requires Windows Server 2008.|$|R
40|$|We {{investigate}} {{the migration of}} network-based PDE. Mart to the grid platform. The grid architecture of PD. EMart is presented. Grid-based PDE. Mart is a service-oriented system, and is implemented based on Apache AXIS and Tomcat web <b>service</b> <b>server.</b> Implementation issues are discussed in detail. © 2005 IEEE...|$|R
5000|$|Terminal Services Gateway: {{enables the}} ability to use a {{front-end}} IIS server to accept connections (over port 443) for back-end Terminal <b>Services</b> <b>servers</b> via an https connection, similar to how RPC over https allows Outlook clients to connect to a back-end Exchange 2003 server. Requires Windows Server 2008.|$|R
5000|$|... iRacing is a subscription-based racing {{simulation}} {{released by}} iRacing.com Motorsport Simulations in 2008. Official races, special events, league races, and practice sessions are all hosted on the <b>service's</b> <b>servers.</b> The <b>service</b> simulates realistic cars, tracks, and racing events, and enforcing {{rules of conduct}} modeled on real auto racing events.|$|R
2500|$|Internet hosting {{services}} provide email, web-hosting, {{or online}} storage services. [...] Other <b>services</b> include virtual <b>server,</b> cloud <b>services,</b> or physical <b>server</b> operation.|$|R
30|$|Initial {{position}} of the web <b>service</b> 'secondary <b>server</b> IP’.|$|R
50|$|PowerPivot {{uses the}} SSAS Vertipaq {{compression}} engine {{to hold the}} data model in memory on the client computer. Practically, this means that PowerPivot is acting as an Analysis <b>Services</b> <b>Server</b> instance on the local workstation. As a result, larger data models may not be compatible with the 32-bit version of Excel.|$|R
50|$|The Department of <b>Central</b> <b>Services.</b>|$|R
5000|$|... #Subtitle level 3: University Administration and <b>Central</b> <b>Services</b> ...|$|R
40|$|Our goal is {{to support}} reuse and {{extensibility}} in distributed object systems. This requires some form of distributed inheritance and polymorphism. Most existing distributed system architectures can only cope with the inheritance and reuse of interface specifications. We discuss reuse requirements and approaches in general and their particularities in distributed systems. An approach is proposed that enables inheritance and reuse for object implementations. Our approach {{is based on a}} decoupling of object state and behavior. The behavior is implemented by so [...] called object engines. Our engine design and prototype implemementation are presented and compared to other well-known reuse techniques in distributed systems. 1 Introduction The enormous progress in computer and telecommunications technologies has led to distributed computing environments with a multitude of <b>services,</b> <b>servers</b> and clients. The terms <b>service,</b> <b>server</b> and client refer to the enterprise view of the acting entities in [...] ...|$|R
