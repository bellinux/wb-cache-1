105|56|Public
5000|$|If m ≥ n, the <b>Clos</b> <b>network</b> is rearrangeably nonblocking, {{meaning that}} an unused input on an ingress switch {{can always be}} {{connected}} to an unused output on an egress switch, but for this to take place, existing calls {{may have to be}} rearranged by assigning them to different centre stage switches in the <b>Clos</b> <b>network.</b> [...] To prove this, it is sufficient to consider m = n, with the <b>Clos</b> <b>network</b> fully utilised; that is, r&times;n calls in progress. The proof shows how any permutation of these r&times;n input terminals onto r&times;n output terminals may be broken down into smaller permutations which may each be implemented by the individual crossbar switches in a <b>Clos</b> <b>network</b> with m = n.|$|E
5000|$|Crossbar switch Describes the {{switching}} {{element of a}} <b>Clos</b> <b>network.</b>|$|E
5000|$|Nonblocking minimal {{spanning}} switch Describes the switching algorithm of a <b>Clos</b> <b>network.</b>|$|E
40|$|<b>Clos</b> <b>networks</b> are an {{important}} class of switching networks due to their modular structure and much lower cost compared with crossbars. For routing I/O permutations of <b>Clos</b> <b>networks,</b> sequential routing algorithms are too slow, and all known parallel algorithms are not practical. We present the algorithm-hardware codesign of a unified fast parallel routing architecture called distributed pipeline routing (DPR) architecture for rearrangeable nonblocking and strictly nonblocking <b>Clos</b> <b>networks.</b> The DPR architecture uses a linear interconnection structure and processing elements that performs only shift and logic AND operations. We show that a DPR architecture can route any permutation in rearrangeable nonblocking and strictly nonblocking <b>Clos</b> <b>networks</b> in O (√ N) time. The same architecture {{can be used to}} carry out control of any group of connection/disconnection requests for strictly nonblocking <b>Clos</b> <b>networks</b> in O (√ N) time. Several speeding-up techniques are also presented. This architecture is applicable to packet and circuit switches of practical sizes...|$|R
5000|$|... #Subtitle level 3: Rearrangeably nonblocking <b>Clos</b> <b>networks</b> (m &ge; n) ...|$|R
40|$|A self{routing {{connection}} network is a switching device where the routing of each switch {{can be determined}} {{in terms of the}} destination addresses of its inputs alone, i. e., independent of the routing information regarding the other switches in the network. One family of {{connection network}}s that were considered in the literature for self{routing are <b>Clos</b> <b>networks.</b> Earlier studies indicate that some <b>Clos</b> <b>networks</b> can be self{routed for certain permutations. This paper proves that the only category of <b>Clos</b> <b>networks</b> that can be self{routed for all permutations are those with at most two switches in their outer stages...|$|R
5000|$|<b>Clos</b> <b>network</b> a non {{blocking}} crossover {{switch that}} needs fewer than N² switches ...|$|E
50|$|The {{relative}} {{values of}} m and n define the blocking {{characteristics of the}} <b>Clos</b> <b>network.</b>|$|E
50|$|In {{the context}} of a <b>Clos</b> <b>network,</b> each boy {{represents}} an ingress switch, and each girl represents an egress switch. A boy is said to know a girl if the corresponding ingress and egress switches carry the same call. Each set of k boys must know at least k girls because k ingress switches are carrying k&times;n calls and these cannot be carried by less than k egress switches. Hence each ingress switch can be paired off with an egress switch that carries the same call, via a one-to-one mapping. These r calls can be carried by one middle-stage switch. If this middle-stage switch is now removed from the <b>Clos</b> <b>network,</b> m is reduced by 1, and we are left with a smaller <b>Clos</b> <b>network.</b> The process then repeats itself until m = 1, and every call is assigned to a middle-stage switch.|$|E
5000|$|... #Subtitle level 3: Strict-sense nonblocking <b>Clos</b> <b>networks</b> (m &ge; 2n&minus;1): the {{original}} 1953 Clos result ...|$|R
40|$|The three-stage <b>Clos</b> <b>networks</b> {{remain the}} most popular {{solution}} to many practical switching systems to date. The aim {{of this paper is}} to show that the modular structure of <b>Clos</b> <b>networks</b> is invariant with respect to the technological changes. Due to the wavelength routing property of arrayed-waveguide gratings (AWGs), non-blocking and contention-free wavelength-division-multiplexing (WDM) switches require that two calls carried by the same wavelength must be connected by separated links; otherwise, they must be carried by different wavelengths. Thus, in addition to the non-blocking condition, the challenge of the design of AWG-based multistage switching networks is to scale down the wavelength granularity and to reduce the conversion range of tunable wavelength converters (TWCs). We devise a logic scheme to partition the WDM switch network into wavelength autonomous cells, and show that the wavelength scalability problem can be solved by recursively reusing similar, but smaller, set of wavelengths in different cells. Furthermore, we prove that the rearrangeably non-blocking (RNB) condition and route assignments in these AWG-based three-stage networks are consistent with that of classical <b>Clos</b> <b>networks.</b> Thus, the optimal AWG-based non-blocking <b>Clos</b> <b>networks</b> also can achieve 100 % utilization when all input and output wavelength channels are busy. Comment: Add some contents to the manuscript in page 2, 12 and 1...|$|R
50|$|The STC104 {{can be used}} to {{construct}} a variety of network topologies, including multi-dimensional grids and tori, hypercubes and <b>Clos</b> <b>networks</b> (and the closely related Fat tree).|$|R
5000|$|Clos: A <b>clos</b> <b>network</b> uses 3 stages {{to switch}} from N inputs to N outputs. In the first stage, there are r= N/n {{crossbar}} switches and each switch is of size n*m. In the second stage there are m switches of size r*r and finally the last stage is mirror of first stage with r switches of size m*n. A <b>clos</b> <b>network</b> will be completely non-blocking if m >= 2n-1. The number of connections, though more than omega network is much {{less than that of}} a crossbar network.|$|E
50|$|The Jacobaeus {{approximation}} is more accurate, {{and to see}} how it is derived, {{assume that}} some particular mapping of calls entering the <b>Clos</b> <b>network</b> (input calls) already exists onto middle stage switches. This reflects the fact that only the relative configurations of ingress switch and egress switches is of relevance. There are i input calls entering via the same ingress switch as the free input terminal to be connected, and there are j calls leaving the <b>Clos</b> <b>network</b> (output calls) via the same egress switch as the free output terminal to be connected. Hence 0 ≤ i ≤ u, and 0 ≤ j ≤ u.|$|E
50|$|Clos {{networks}} {{may also}} be generalised to any odd number of stages. By replacing each centre stage crossbar switch with a 3-stage <b>Clos</b> <b>network,</b> Clos networks of five stages may be constructed. By applying the same process repeatedly, 7, 9, 11,... stages are possible.|$|E
40|$|We {{consider}} routing in symmetrical three stage <b>Clos</b> <b>networks.</b> Especially we {{search for}} the routing of an additional connection that requires the least rearrangements, i. e. the minimal number of changes of already routed connections. We describe polynomial methods, based on matchings and edge colorings. The basic idea is to swap colors along alternating paths. The paths need to be maximal, and the shortest of these maximal paths is chosen, since it minimizes the rerouting {{that needs to be}} done. Computational tests confirm the efficiency of the approach. The original publication is available at www. springerlink. com:Kaj Holmberg, Graph optimization approaches for minimal rerouting in symmetric three stage <b>Clos</b> <b>networks,</b> 2009, Journal of Mathematical Modelling and Algorithms, (8), 1, 81 - 100. [URL] Springer Science Business Media[URL]...|$|R
40|$|Having just {{presented}} Silicon-Photonic <b>Clos</b> <b>Networks</b> for Global On-Chip Communication in the 3 rd ACM/IEEE International Symposium on Networks-on-Chip conference, {{our research}} group found {{the usefulness of}} silicon photonics in core-to-core communications somewhat limited and wanted to explore a more viable use of monolithic silicon photonics. We determined that silicon photonics i...|$|R
40|$|The <b>Clos</b> <b>networks</b> are a {{class of}} {{multistage}} switching network topologies that provide alternate paths between inputs and outputs, {{making it possible to}} minimize or eliminate the blocking that can otherwise occur in such networks. In his seminal paper in the Bell System Technical Journal in 1953, Charles Clos showed how these networks could be configured to make them nonblocking and effectively launched the systematic study of switching system performance, a field that has developed a rich technical literature and which continues to be very active and of continuing practical importance. This paper describes how Clos' results have been generalized to systems that support connections with varying bandwidth requirements. These generalizations have extended the application of <b>Clos</b> <b>networks</b> well beyond their original technological context and have led to a number of interesting new results, especially in connection with systems that support multicast communication...|$|R
5000|$|He {{then worked}} for Bell Labs until 1986, [...] {{contributing}} to Kalman filter theory {{as well as}} the Beneš network, a permutation network of the <b>Clos</b> <b>network</b> type. In the 1980s he held a position at Columbia University as well.He has continued to publish independently since 1989.|$|E
5000|$|The word [...] "non-blocking" [...] was {{traditionally}} used {{to describe}} telecommunications networks that could route a connection {{through a set of}} relays [...] "without having to re-arrange existing calls", see <b>Clos</b> <b>network.</b> Also, if the telephone exchange [...] "is not defective, it can always make the connection", see nonblocking minimal spanning switch.|$|E
50|$|This {{topology}} {{is actually}} a special instance of a <b>Clos</b> <b>network,</b> rather than a fat-tree as described above. That is because the edges near the root are emulated by many links to separate parents instead of a single high-capacity link to a single parent. However, many authors continue {{to use the term}} in this way.|$|E
40|$|Abstract—We give {{necessary}} and sufficient conditions for strictly nonblocking three-stage <b>Clos</b> <b>networks</b> with {{two types of}} multicast traffic. Then, we extend the results to other models where the routing is under certain restrictions. Finally, we com-pare our results with existing literature to mark the differences and similarities. Index Terms—Multicast traffic, strictly nonblocking, switching networks, wide-sense nonblocking. I...|$|R
50|$|To support routing in {{hierarchical}} networks, such as multi-stage butterfly or <b>Clos</b> <b>networks,</b> the STC104 {{provides a}} mechanism for header deletion. Each output link that {{is connected to the}} next level of the hierarchy can be programmed to discard the header, so that the packet is subsequently routed by the new packet header, which immediately precedes the deleted one.|$|R
40|$|An {{extension}} of the classical theory of connection networks is defined and studied. This extension models systems in which multiple connections of differing data rates share the links within a network. We determine conditions under which the <b>Clos</b> and Cantor <b>networks</b> are strictly nonblocking for multirate traffic. We also determine conditions under which the Benes network and variants of the Cantor and <b>Clos</b> <b>networks</b> are rearrangeable. We find that strictly nonblocking operation can be obtained for multirate traffic with essentially the same complexity as in the classical context...|$|R
5000|$|In the 1940s and 1950s, {{engineers}} in Bell Laboratories began an extended series of mathematical investigations into methods {{for reducing the}} size and expense of the [...] "switched fabric" [...] needed to implement a telephone exchange. One early, successful mathematical analysis was performed by Charles Clos (...) , and a switched fabric constructed of smaller switches is called a <b>Clos</b> <b>network.</b>|$|E
50|$|PARAM 9900/SS was {{designed}} to be a MPP system. It used the SuperSPARC II processor. The design was changed to be modular so that newer processors could be easily accommodated. Typically, it used 32-40 processors. But, it could be scaled up to 200 CPUs using the <b>clos</b> <b>network</b> topology.PARAM 9900/US was the UltraSPARC variant and PARAM 9900/AA was the DEC Alpha variant.|$|E
50|$|The {{obvious way}} to emulate a {{crossbar}} switch {{was to find}} some way to build it from smaller crossbar switches. If a crossbar switch could be emulated by some arrangement of smaller crossbar switches, then these smaller crossbar switches could also, in turn be emulated by even smaller crossbar switches. The switching fabric could become very efficient, and possibly even be created from standardized parts. This is called a <b>Clos</b> <b>network.</b>|$|E
50|$|While some designs {{experimented with}} {{multiple}} shared buses, the eventual approach was {{to adapt the}} crossbar switch model from telephone switches, in which every forwarding engine had a hardware path to every other forwarding engine. With {{a small number of}} forwarding engines, crossbar forwarding fabrics are practical and efficient for high-performance routing. There are multistage designs for crossbar systems, such as <b>Clos</b> <b>networks.</b>|$|R
40|$|Abstract — Discrete-time queues are {{infinite}} dimensional switches in time. Ever since Shannon [22] {{published his}} {{paper on the}} memory requirements in a telephone exchange, there have been tremendous efforts {{in the search for}} switches with minimum complexity. Constructing queues with minimum complexity has not received the same amount of attention as queues are relatively cheap to build via electronic memory. Recent advances in optical technologies, however, have spurred interest in building optical queues with minimum complexity. In this paper, we develop mathematical theory of constructing discrete-time optical FIFO queues. To our surprise, we find that many classical constructions for switches have their counterparts for constructing queues. Analogous to the three-stage construction of <b>Clos</b> <b>networks,</b> we develop a three-stage construction of optical FIFO queues via Switched Delay lines (SDL). Via recursively expanding the three-stage construction, we show that an optical FIFO queue with buffer Ò   can be constructed by using Ò ¢ switches with the total fiber length ¡ Ò   . Index Terms — FIFO queues, optical switches, optical memory, <b>Clos</b> <b>networks,</b> switched delay lines I...|$|R
40|$|We de ne {{and study}} an {{extension}} of the classical theory of nonblocking networks that is applicable to multirate circuit and fast packet/ATM switching systems. We determine conditions under which the Clos, Cantor and Benes networks are strictly nonblocking. We also determine conditions under which the Benes network and variants of the Cantor and <b>Clos</b> <b>networks</b> are rearrangeable. We nd that strictly nonblocking operation can be obtained for multirate tra c with essentially the same complexity as in the classical context. ...|$|R
5000|$|Beneš: It is a rearrangeably {{non-blocking}} network {{derived from}} the <b>clos</b> <b>network</b> by initializing n = m = 2. There are (2log(N) - 1) stages, with each stage containing N/2 2*2 crossbar switches. An 8*8 Beneš has 5 stages of switching elements, and each stage has 4 switching elements. The center three stages has two 4*4 benes network. The 4*4 benes network, can connect any input to any output recursively.|$|E
50|$|In {{the field}} of telecommunications, a <b>Clos</b> <b>network</b> {{is a kind of}} {{multistage}} circuit switching network, first formalized by Charles Clos in 1952, which represents a theoretical idealization of practical multi-stage telephone switching systems. Clos networks are required when the physical circuit switching needs to exceed the capacity of the largest feasible single crossbar switch. The key advantage of Clos networks is that the number of crosspoints (which make up each crossbar switch) required can be far fewer than would be the case if the entire switching system were implemented with one large crossbar switch. When the <b>Clos</b> <b>network</b> was first devised, the number of crosspoints was a reasonable approximate indication of the total cost of the switching system. While this was important for electromechanical crossbars, it became less relevant with the advent of VLSI, wherein the interconnects often could be implemented either directly in silicon, or within a relatively small cluster of boards. However, the advent of complex data centers, with huge interconnect structures, each based on optical fiber links, means that they are again important.|$|E
50|$|Some {{authors have}} {{proposed}} that to make datacenter networks more energy proportional, the routing elements need greater power dynamic range. They proposed {{the use of the}} flattened butterfly topology instead of the common folded <b>Clos</b> <b>network</b> in use in datacenters (also known as the fat tree) to improve overall power efficiency, and to use adaptive link rates to adjust link power in relation to utilization. They also propose predicting future link utilization to scale data rates in anticipation.|$|E
50|$|<b>Clos</b> <b>networks</b> {{have three}} stages: the ingress stage, middle stage, and the egress stage. Each stage {{is made up}} of a number of {{crossbar}} switches (see diagram below), often just called crossbars. Each call entering an ingress crossbar switch can be routed through any of the available middle stage crossbar switches, to the relevant egress crossbar switch. A middle stage crossbar is available for a particular new call if both the link connecting the ingress switch to the middle stage switch, and the link connecting the middle stage switch to the egress switch, are free.|$|R
40|$|Abstract An {{extension}} of the classical theory of connection networks is dened and studied This extension models systems in which multiple connections of diering data rates share the links within a network We determine conditions under which the <b>Clos</b> and Cantor <b>networks</b> are strictly nonblocking for multirate trac We also determine conditions under which the Benes network and variants of the Cantor and <b>Clos</b> <b>networks</b> are rearrangeable We nd that strictly nonblocking operation can be obtained for multirate trac with essentially the same complexity as in the classical context Key words nonblocking networks rearrangeable networks multirate networks fast packet networks Introduction In this paper we introduce a generalization of the clas sical theory of nonblocking switching networks to model communications sys tems designed to carry connections with a multiplicity of data rates The theory of nonblocking networks was motivated by the problem of designing telephone switching systems capable of connecting any pair of idle terminal...|$|R
40|$|Permutation {{switching}} is {{a critical}} element of many computer and communication systems. Within a group theoretical framework, this paper provides an indepth study of permutation networks, and examines the tradeoffs between network cost and set up or routing time. It introduces {{the notion of an}} (n, r, q) -permuter, i. e., a permuter with n inputs and r outputs that can realize all q! permutations between any q of its n inputs and q of its r outputs, where q ≤ r ≤ n. This generalization accounts for a switching environment where the maximum number of simultaneous paths may be less than the actual number of inputs and outputs. It is shown that the previously known designs, such as <b>Clos</b> <b>networks</b> result in inferior realizations of (n, r, q) -permuters. Using concentrators, the paper gives new network designs that lead to (n, r, q) -permuters with asymptotically minimum cost and quadlogarithmic routing time for all q ≤ r. More specifically, for q = O(lg n) and q = O(n ɛ), where 0 <ɛ< 1, an (n, r, q) -permuter with O(n) switches is given 1. For the same values of q, Clos designs require at least n lg lg n and n lg n switches. Another advantage of the new designs is that they do not require complex routing schemes as <b>Clos</b> <b>networks</b> since they are inherently self-routing. It is also established that, when q = n = r, these same designs can be extended to permuters with O(n lg n) switches...|$|R
