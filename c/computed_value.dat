215|7176|Public
25|$|A type system {{associates}} a type {{with each}} <b>computed</b> <b>value</b> and, {{by examining the}} flow of these values, attempts to ensure or prove that no type errors can occur. The given type system in question determines exactly what constitutes a type error, but in general {{the aim is to}} prevent operations expecting a certain kind of value from being used with values for which that operation does not make sense (logic errors); memory errors will also be prevented. Type systems are often specified as part of programming languages, and built into the interpreters and compilers for them; although the type system of a language can be extended by optional tools that perform added kinds of checks using the language's original type syntax and grammar.|$|E
25|$|As can be seen, M {{appears on}} both sides of the equation. The easiest method to solve the {{supersonic}} M calculation is to enter both the subsonic and supersonic equations into a computer spreadsheet, or an equivalent program to solve it numerically. It is first determined whether M is indeed greater than 1.0 by calculating M from the subsonic equation. If M is greater than 1.0 at that point, then the value of M from the subsonic equation is used as the initial condition in the supersonic equation. Then a simple iteration of the supersonic equation is performed, each time using the last <b>computed</b> <b>value</b> of M, until M converges to a value—usually in just a few iterations. Alternatively, Newton's method can also be used.|$|E
5000|$|The [...] is {{assigned}} the <b>computed</b> <b>value,</b> replacing the prior {{value of that}} variable.|$|E
40|$|MATLAB program solving one- and two-sector neoclassical {{stochastic}} growth models by <b>computing</b> <b>value</b> function by simulation {{as described}} in the article "Solving Nonlinear Dynamic Stochastic Models: An Algorithm <b>Computing</b> <b>Value</b> Function by Simulations" by Lilia Maliar and Serguei Maliar, Economic Letters 87, pp. 135 - 140, 2005. ...|$|R
30|$|Table  4 {{summarizes}} the <b>computed</b> <b>values</b> for EV and ICEV costs.|$|R
50|$|The Los Alamos group {{completed}} its {{work in a}} much shorter time than the Cambridge group. However, the punched-card machine operation <b>computed</b> <b>values</b> to six decimal places, whereas the Mark I <b>computed</b> <b>values</b> to eighteen decimal places. Additionally, Mark I integrated the partial differential equation at a much smaller interval size smaller mesh and so...achieved far greater precision.|$|R
50|$|A related {{distinct}} syntactic {{feature is}} that a function can be defined to take as input the <b>computed</b> <b>value</b> of the expression on its left side. Also, a single additional argument does not require surrounding parentheses. The resulting infix notation blurs the syntactical difference between functions and operators. Such expressions seem conceptually as having a <b>computed</b> <b>value</b> flowing from left to the right.|$|E
50|$|Note: The {{sum of the}} {{individual}} digits is usually compared with a previously <b>computed</b> <b>value.</b>|$|E
5000|$|... margin [...] - [...] {{inherits}} the computation and recomputes {{it instead}} of inheriting the <b>computed</b> <b>value.</b>|$|E
5000|$|In the {{following}} examples, <b>computed</b> <b>values</b> are in bold, while Register numbers are not.|$|R
40|$|Abstract—This article argues cloud <b>computing</b> <b>value</b> is {{generated}} through dynamic interactions of IT artifacts, services, organizations and their interests. From actor network theory, it illustrates Amazon, Google, and IBM, Microsoft cloud <b>computing</b> <b>value</b> networking and translation, inscription in their actor-network. Further implications such as cloud computing transactions types, standards, economics, and hybrid cloud trends are discussed. Keywords-cloud computing; actor network theory; IT value I...|$|R
40|$|Classic {{theories}} of secondary compression in clays are reviewed. Inferences are drawn {{as to why}} the <b>computed</b> <b>values</b> of secondary settlements might differ from those computed from the traditional Buisman’s approach. It is suggested that a practicing engineer may be able to discern in advance when a difference in the two values would arise for a given problem. Accordingly, corrections in the <b>computed</b> <b>values</b> may be introduced...|$|R
5000|$|Checksum, two hex digits, a <b>computed</b> <b>value</b> {{that can}} be used to verify the record has no errors.|$|E
5000|$|The <b>computed</b> <b>value</b> of SDI {{is often}} {{compared}} to the species maximum to determine the relative [...] "stand density" [...] or stocking of the stand.|$|E
5000|$|This {{does not}} mean there is 0.95 {{probability}} {{that the value of}} parameter μ is in the interval obtained by using the currently <b>computed</b> <b>value</b> of the sample mean, ...|$|E
5000|$|In earlier {{versions}} of C++, template metaprogramming {{is often used to}} <b>compute</b> <b>values</b> at compile time, such as: ...|$|R
5000|$|... #Caption: Graphical view {{of world}} files {{parameters}} and <b>computed</b> <b>values</b> {{of the four}} first upper left pixels of an image.|$|R
5000|$|You can <b>compute</b> <b>values</b> of [...] recursively from [...] {{using this}} formula, which is {{equivalent}} to the Möbius inversion formula.|$|R
50|$|The {{disparity}} {{with the}} lowest <b>computed</b> <b>value</b> {{using one of the}} above methods is considered the disparity for the image feature. This lowest score indicates that the algorithm has found the best match of corresponding features in both images.|$|E
50|$|In {{compiler}} theory, common subexpression elimination (CSE) is a compiler optimization that {{searches for}} instances of identical expressions (i.e., they all evaluate {{to the same}} value), and analyzes whether it is worthwhile replacing them with a single variable holding the <b>computed</b> <b>value.</b>|$|E
50|$|One {{possibility}} {{is to use}} not only the previously <b>computed</b> <b>value</b> yn to determine yn+1, but to make the solution depend on more past values. This yields a so-called multistep method. Perhaps the simplest is the Leapfrog method which is second order and (roughly speaking) relies on two time values.|$|E
30|$|We {{follow up}} on our {{experiment}} in “Experimental results” section, and <b>computed</b> <b>values</b> of all new multiplex flows on the arXiv HEP-Th dataset.|$|R
40|$|A {{simple and}} {{efficient}} CAD model based on cavity model analysis is proposed to compute accurately the resonant frequency, input impedance, bandwidth and gain of radome loaded rectangular patch antenna. The <b>computed</b> <b>values</b> for {{wide range of}} radome parameters are compared with different theoretical and experimental values available in open literature. The <b>computed</b> <b>values</b> employing the present model shows very close agreements with the experiments {{compared to the other}} model. An electromagnetic software (HFSS) is also used to generate some simulated data...|$|R
40|$|Rayleigh {{reflection}} coefficients {{and bottom}} losses of compressional waves {{at normal incidence}} on the water-sediment interface are <b>computed</b> with <b>values</b> of density and velocity measured in sea-floor sediment samples; main sediment types in three major environments of the Pacific and adjacent areas arc included. Some typical average <b>computed</b> <b>values</b> of acoustic bottom loss at nor...|$|R
50|$|Most modern compilers {{would not}} {{actually}} generate two multiply instructions and a store for this statement. Instead, they identify constructs {{such as these}} and substitute the computed values at compile time (in this case, 2,048,000). The resulting code would load the <b>computed</b> <b>value</b> and store it rather than loading and multiplying several values.|$|E
50|$|When negamax {{searches}} the game tree, and encounters the same node multiple times, a transposition table can return a previously <b>computed</b> <b>value</b> of the node, skipping potentially lengthy and duplicate re-computation of the node's value. Negamax performance improves particularly for game trees with many paths {{that lead to}} a given node in common.|$|E
5000|$|The second way {{leaves a}} <b>computed</b> <b>value</b> {{on the data}} stack, {{duplicating}} it as needed. This uses operations to copy stack entries. The stack must be depth shallow enough for the CPU's available copy instructions. Hand-written stack code often uses this approach, and achieves speeds like general-purpose register machines. Unfortunately, algorithms for optimal [...] "stack scheduling" [...] are not in wide use by programming languages.|$|E
30|$|Three feature extractors were {{implemented}} and {{included in the}} O-FIm framework herein. All features {{were implemented}} to normalize the <b>computed</b> <b>values</b> in the interval [0, 1].|$|R
40|$|Implementing re-use of {{previously}} <b>computed</b> <b>values</b> is hard {{and is therefore}} often dismissed by programmers: a missed opportunity for improved computational efficiency. Memoisation and change propagation are techniques for implementing the re-use {{of previously}} <b>computed</b> <b>values.</b> Using existing libraries either destroys the conciseness of the code or is too limited for a real-world application where fine-grained control over the amount of memory used is necessary. We combine both memoisation and change propagation and provide clean interfaces through the ubiquitous applicative, monad, and arrow interfaces...|$|R
50|$|The {{software}} provides various {{facilities for}} <b>computing</b> <b>values</b> of financial instruments and related calculations. It {{is a major}} example of Mathematical finance. Its main use is in quantitative analysis.|$|R
5000|$|The {{name is a}} misnomer, as the {{statistic}} is not {{a percentage}} but a scale of measure whose <b>computed</b> <b>value</b> is a rational number in the interval 4. A slugging percentage is always expressed as a decimal to three decimal places, and is generally spoken as if multiplied by 1000 (so a slugging percentage of [...]589 would be spoken as [...] "five eighty nine").|$|E
5000|$|The value {{computed}} {{with the}} CG function is unaffected {{by changes in}} the ordering of search results. That is, moving a highly relevant document [...] above a higher ranked, less relevant, document [...] {{does not change the}} <b>computed</b> <b>value</b> for CG. Based on the two assumptions made above about the usefulness of search results, DCG is used in place of CG for a more accurate measure.|$|E
50|$|A type system {{associates}} types {{with each}} <b>computed</b> <b>value.</b> By examining {{the flow of}} these values, a type system attempts to prove that no type errors can occur. The type system in question determines what constitutes a type error, but a type system generally seeks to guarantee that operations expecting {{a certain kind of}} value are not used with values for which that operation does not make sense.|$|E
25|$|He then computes a {{table of}} values, similar to Elderton but, importantly, reverses the roles of χ2 and p. That is, rather than {{computing}} p for different values of χ2 (and degrees of freedom n), he <b>computes</b> <b>values</b> of χ2 that yield specified p-values, specifically 0.99, 0.98, 0.95, 0,90, 0.80, 0.70, 0.50, 0.30, 0.20, 0.10, 0.05, 0.02, and 0.01. That allowed <b>computed</b> <b>values</b> of χ2 to be compared against cutoffs and encouraged the use of p-values (especially 0.05, 0.02, and 0.01) as cutoffs, instead of computing and reporting p-values themselves. The same type of tables were then compiled in , which cemented the approach.|$|R
3000|$|... of graphite-like a-C, {{which is}} highly sp 2 -rich, {{and more than}} eight orders of {{magnitude}} higher than sp 3 -rich tetrahedral a-C [22]. Our <b>computed</b> <b>values</b> are ∼ 10 − 8 [...]...|$|R
30|$|Both {{existing}} and developed indices were evaluated at each sampling site. However, <b>computed</b> <b>values</b> revealed that developed indices had identical trends of increasing or decreasing scores with slight variations over each sampling site.|$|R
