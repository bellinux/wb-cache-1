103|2571|Public
25|$|Class badges are {{successive}} {{stages in}} which the Scout learns the techniques needed for the Scout game. An important final (first <b>Class)</b> <b>test</b> for the Scout or Guide section is making a journey on their own, proving their independence.|$|E
2500|$|As the two youths {{returned}} to their vehicles, Harris encountered Brooks Brown, a friend and classmate {{with whom he had}} recently patched up a longstanding series of disagreements. Brown, who was in the parking lot smoking a cigarette, was surprised to see Harris, whom he had earlier noted had been absent from an important <b>class</b> <b>test.</b> Harris seemed unconcerned when reminded of this fact by Brown, commenting, [...] "It doesn't matter anymore." [...] Harris then elaborated: [...] "Brooks, I like you now. Get out of here. Go home." [...] Brown, feeling uneasy, walked away. Several minutes later, students departing Columbine for their lunch break observed Brown heading down South Pierce Street away from the school. Meanwhile, Harris and Klebold armed themselves by their vehicles and waited for the bombs to explode.|$|E
5000|$|... "Most {{innovative}} and Best In <b>Class</b> <b>Test</b> Prep and Assessment Platform" [...] at the 2010 Education Innovation Summit ...|$|E
40|$|A {{class is}} widely {{considered}} the basic unit of testing in object-oriented software. Although {{there has been much}} recent research on <b>class</b> <b>testing,</b> little {{attention has been paid to}} codebased <b>class</b> <b>testing</b> criteria. In this paper, we extend the traditional data ow testing techniques and propose three new code-based <b>class</b> <b>testing</b> criteria. These new criteria help overcome the problems associated with existing data ow techniques. We also show that eachof the new criteria is stricter than its traditional counterpart in the subsume hierarchy. ...|$|R
40|$|A novel Object-Oriented <b>class</b> <b>testing</b> approach, {{proposed}} in this paper, combines functional with structural testing techniques. Based on state-based testing, test cases {{generated from the}} MACT (Method for Automatic <b>Class</b> <b>Testing)</b> tool {{can be used to}} execute functional testing. The definition-use information of data members, occur in public member functions of a <b>class</b> under <b>test,</b> is generated from MACT to facilitate data flow analysis. Testers can compute definition-use path with the information {{in order to ensure that}} the class is also satisfied with data flow coverage at intra-class level. The discussion with a queue class example to reveal that using a hybrid <b>testing</b> technique benefits <b>class</b> <b>testing.</b> ...|$|R
30|$|Teacher: I {{give them}} quiz and <b>class</b> <b>tests.</b>|$|R
50|$|In {{the next}} chapter, Mildred and Maud {{inadvertently}} make an invisibility potion {{instead of a}} laughing potion in their <b>class</b> <b>test.</b>|$|E
50|$|Art and Music mid-terms and finals were held, college-like, {{with the}} entire class {{examining}} in the auditorium and graded on the entire <b>class</b> <b>test</b> curve. These examinations had challenging visual and/or audio components.|$|E
5000|$|Class badges are {{successive}} {{stages in}} which the Scout learns the techniques needed for the Scout game. An important final (first <b>Class)</b> <b>test</b> for the Scout or Guide section is making a journey on their own, proving their independence.|$|E
50|$|Auto Multiple Choice for <b>class</b> <b>tests,</b> with LaTeX formatting.|$|R
5000|$|Preparing {{schedules}} {{for both}} continuous assignments and <b>class</b> <b>tests.</b>|$|R
50|$|The Card SystemUntil the 1990s {{the school}} {{maintained}} {{a system of}} <b>class</b> <b>tests</b> spanned across the academic year, in between regular term exams. These <b>class</b> <b>tests</b> were for different grades - green, blue, pink and yellow. The green cards were averaged based on high percentage while yellow denoted failure {{in one or more}} primary subjects.|$|R
50|$|The 'Half yearly examination'is {{normally}} {{taken on}} the months of June and July and the 'Annual examination'is generally {{taken on the}} month of November. Before these exams a <b>class</b> <b>test</b> on each subject is held during the normal classes.|$|E
5000|$|... <b>class</b> <b>Test</b> { x = 0 y = 0 [...] this(x, y) { :x = x :y = y } [...] {{function}} toString (...) = format("x = {} y = {}", :x, :y) } [...] local t = Test(3, 4) writeln(t) ...|$|E
50|$|All the 12th class {{students}} are {{very excited about}} the field trip but Yadav Sir cancels their field trip. All the students decide to protest against it and do mass bunking. Only Meera and Mehul attend Yadav Sir's <b>class</b> <b>test.</b> Vinny Sir and Yadav Sir decide to teach all of them a lesson and inform their parents about the mass bunking. Next day in school everyone get shocked {{to see that they}} have failed in the <b>class</b> <b>test.</b> They all apologize to Yadav Sir and request him to conduct the test once again for them. Finally Yadav Sir forgives them and also informs them that they will be going for a field trip.|$|E
40|$|Runtime <b>class</b> <b>testing</b> is a {{technique}} whereby virtual function calls are transformed into statically-bound function calls {{through a series of}} conditional branches. Through this transformation, the overhead of virtual function calls can be significantly reduced. However, the drawback of these tests is that by relying on conditional branches, the amount of instruction-level parallelism (ILP) is limited and the mispredict penalties can be relatively high. We show that by using predication during <b>class</b> <b>testing,</b> these drawbacks can be eliminated, and the benefits of <b>class</b> <b>testing</b> can be improved upon. Predication is a supported feature in Explicitly Parallel Instruction Computing (EPIC) architecture, which converts control dependencies into data dependencies, and thus eliminates the mispredict penalties. With analytical cost models and experimental results, we show that predicated <b>class</b> <b>testing</b> can reduce the direct cost of virtual function calls by 43 % on an average, which in contrast to ot [...] ...|$|R
5000|$|Re-pass the Second <b>Class</b> <b>tests</b> (this {{is to be}} {{the second}} from last test).|$|R
5000|$|<b>Class</b> <b>tests</b> may query {{students}} at a more sophisticated level than the regular stream sections.|$|R
50|$|The {{academic}} year is organised around the semester. The examination procedure {{consists of two}} <b>class</b> <b>test,</b> one mid-semester and an end-semester. IT-GGU follows a 10-point CGPA scale. According to decision of Academic council of university, student are {{able to see the}} checked answer sheets of main exam.|$|E
50|$|Richardson long {{advocated}} {{the addition of}} new compulsory figures to the International schedule and established the Star <b>Class</b> <b>Test</b> in England, including the new compulsory figures. His proposals never gained international acceptance, however, a factor {{that contributed to the}} eventual disappearance of compulsory figures from international competition.|$|E
5000|$|In a 1996 {{episode of}} Dexter's Laboratory, [...] "The Big Cheese", Dexter hooks {{himself up to}} a {{gramophone}} that repeats his lesson for a French <b>class</b> <b>test</b> the next morning. The gramophone gets stuck at the phrase omelette du fromage, and Dexter finds out the next morning that it is all {{he is capable of}} saying.|$|E
40|$|A new <b>class</b> of <b>tests</b> {{based on}} convex {{combination}} of the two statistics is proposed. These are functions of sub-sample order statistics. The <b>classes</b> of <b>tests</b> proposed by Kochar and Gupta [6], Shetty and Pandit [16], Pandit and Kumari [11] and Kendallâ€™s test lie in the proposed <b>class</b> of <b>test</b> statistics. The asymptotic normality of the proposed <b>class</b> of <b>tests</b> is established. It has been observed that some members of the class perform better than the existing tests. Unbiasedness and consistency of the proposed <b>class</b> of <b>tests</b> are established...|$|R
40|$|Previous work on {{generating}} {{state machines}} {{for the purpose}} of <b>class</b> <b>testing</b> has been informally based. There has also been work on deriving state machines from formal specifications for testing non-object-oriented software. We build on this work by presenting a method for deriving a state machine for testing purposes from a formal object-oriented specification of the <b>class</b> under <b>test.</b> We also show how the resulting state machine can be used as the basis for a test suite developed and executed using an existing framework for <b>class</b> <b>testing.</b> To derive the state machine, we identify the states and possible interactions of the operations of the <b>class</b> under <b>test.</b> The Test Template Framework is used to formally derive the states from the Object-Z specification of the class un [...] ...|$|R
40|$|A {{combination}} of perl scripts and LaTeX files, this generates multiple multiple choice <b>class</b> <b>tests</b> {{from a single}} set of questions. You input {{a list of questions}} and answers into a text file. The script then produces any number of <b>class</b> <b>tests</b> that can be used, together with master answer sheets, by scrambling the order of the questions and the answers. Includes a detailed README file, but best just to try it and see...|$|R
50|$|Tokarev is a 1st Class Air Force Pilot and a 1st <b>Class</b> <b>Test</b> Pilot. Tokarev {{has gained}} {{proficiency}} and flight experience with 44 types of airplanes and helicopters and has logged more than 3000 hours. He {{has participated in}} tests of fourth-generation carrier-based aircraft and vertical/short takeoff and landing jets (Su-27K, MiG-29K, Yak-38M, Su-25UTG), as well as bomber and missile navy fleet jets (Su-24M).|$|E
5000|$|... 2013Winner Team Championship Blancpain Endurance Series with MarcVDS Racing Team. Sharing with Markus Palttala and Henri Moser in BMW Z4 GT3 Participation 24h Spa in BMW Z4 GT3 Winner VLN8 in Z4 GT3 {{sharing with}} Maxime Martin Podium in ELMS at the Redbull Ring with Algarve Pro Racing Team in LMPC Class. Participation ELMS Hungaroring LMPC <b>Class</b> <b>Test</b> driver Algarve Pro Racing Team in an LMPC ...|$|E
50|$|The {{grade in}} a course {{will be based on}} an overall {{evaluation}} of a students performance in assignments, <b>class</b> <b>test,</b> midterm examination, quizzes, term papers, project work, class participation, class attendance and semester final examination. Weightage will be fixed up by the Institute Committee. Grades will be determined by the teacher responsible for the course. In each semester, CGPA will be computed to determine the academic standing of the student in the program.|$|E
40|$|This paper {{presents}} a new <b>class</b> of <b>test</b> procedures for two-sample location problem based on subsample quantiles. The <b>class</b> includes Mann-Whitney <b>test</b> {{as a special}} case. The asymptotic normality of the <b>class</b> of <b>tests</b> proposed is established. The asymptotic relative performance of the proposed <b>class</b> of <b>test</b> {{with respect to the}} optimal member of Xie and Priebe (2000) is studied in terms of Pitman efficiency for various underlying distribution...|$|R
40|$|Taking aspects as {{incremental}} {{modifications to}} their base classes, {{this paper presents}} an incremental approach to testing whether or not aspect-oriented programs and their base classes conform to their respective behavior models. We exploit a rigorous aspect-oriented extension to state models for capturing the impact of aspects on the state transitions of base class objects {{as well as an}} explicit weaving mechanism for composing aspects into their base models. We generate abstract <b>tests</b> for base <b>classes</b> and aspect-oriented programs from their state models. As base <b>class</b> <b>tests</b> are not necessarily valid for aspect-oriented programs, we identify several rules for maximizing reuse of concrete base <b>class</b> <b>tests</b> for aspects according to the state-based impact of aspects on their base classes. To illustrate our approach, we use two examples that indicate distinctive types of aspect-oriented applications and exhibit fundamental features in complex applications: aspects removing state transitions from base classes and aspects adding and modifying state transitions in base classes. Our results show that majority of base <b>class</b> <b>tests</b> can be reused for aspects, but subtle modifications to some of them are necessary. In particular, positive (or negative) base <b>class</b> <b>tests</b> can become negative (or positive) aspect tests. We also discuss how several types of aspect-specific faults can be revealed by the state-based testing...|$|R
5000|$|Teachersâ€”This {{questionnaire}} includes {{questions about}} [...] "characteristics of the <b>class</b> <b>tested,</b> instructional activities for teaching reading, classroom resources, assessment practices, and about their education, training, {{and opportunities for}} professional development." ...|$|R
5000|$|The {{following}} example {{written in}} Visual Basic [...]NET shows {{the difference between}} reference types and value types:Imports SystemClass Class1 Public Value As Integer = 0End Class 'Class1 <b>Class</b> <b>Test</b> Shared Sub Main (...) Dim val1 As Integer = 0 Dim val2 As Integer = val1 'Coded By val2 = 123 Dim ref1 As New Class1 (...) Dim ref2 As Class1 = ref1 ref2.Value = 123 Console.WriteLine("Values: {0}, {1}", val1, val2) Console.WriteLine("Refs: {0}, {1}", ref1.Value, ref2.Value) End Sub 'MainEnd Class 'TestThe output of the above example ...|$|E
50|$|To {{use this}} pattern, a class {{implements}} a marker interface (also called tagging interface), and methods that interact with instances of that <b>class</b> <b>test</b> {{for the existence}} of the interface. Whereas a typical interface specifies functionality (in the form of method declarations) that an implementing class must support, a marker interface need not do so. The mere presence of such an interface indicates specific behavior {{on the part of the}} implementing class. Hybrid interfaces, which both act as markers and specify required methods, are possible but may prove confusing if improperly used.|$|E
50|$|The Australian cricket team first toured New Zealand in 1878 and {{recognised}} first <b>class</b> <b>Test</b> cricket {{between the}} respective national teams commenced in 1945-46. The underarm incident of 1981 stands as memorable for bringing Australian cricket into infamy and causing anger in New Zealand {{as well as}} being remarked upon by the respective heads of government. The two nations have exclusively and directly competed for the Trans-Tasman Trophy in test cricket since 1985-86 and for the Chappell-Hadlee Trophy in ODI cricket since 2006-07. They have competed at Twenty20 internationals and tournaments since their first such match occurring on 17 February 2005.|$|E
50|$|The {{service is}} used by {{those who wish to}} {{anonymously}} test their peers about personal facts, learn more about others, set <b>class</b> <b>tests</b> and also as an activity in long-distance relationships.|$|R
50|$|The {{academic}} year starts from January and ends at December. Each year {{is divided into}} 2 terms, exams being held for all classes {{at the end of}} each term. In each term, the students sit for 2 <b>class</b> <b>tests</b> for 25 marks. The two <b>class</b> <b>tests</b> marks are averaged and added to the term exam which is of 100 marks but converted into 75. Students move to a higher class if they pass the exams. All students from KG to Class 5 follow the same curriculum. After passing Class 4, they are offered a choice to follow either the International or National curriculum.|$|R
30|$|By {{assigning}} to <b>test</b> <b>classes</b> the same semantic embedding as their related training class, we effectively equate {{them to the}} same <b>class.</b> Hence, <b>test</b> images that are correctly classified into their child or parent training class are correctly classified into their actual <b>test</b> <b>class.</b>|$|R
