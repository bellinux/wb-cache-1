19|0|Public
50|$|Verbal arithmetic, {{also known}} as alphametics, <b>cryptarithmetic,</b> cryptarithm or word addition, {{is a type of}} {{mathematical}} game consisting of a mathematical equation among unknown numbers, whose digits are represented by letters. The goal is to identify the value of each letter. The name can be extended to puzzles that use non-alphabetic symbols instead of letters.|$|E
5000|$|He {{worked with}} prime numbers, pentominos, amicable numbers and {{developed}} mathematical concepts used in {{applications such as}} cyber security with <b>cryptarithmetic.</b> He made contributions to Narcissistic numbers and Fibonacci series devising puzzles using Fibonacci numbers. [...] His work in recreational mathematics covered other diverse areas from chess to magic squares [...] to calculator art.|$|E
50|$|In 2008, the Plano Independent School District in Plano, TX {{launched}} a Math Rocks! program, {{a program for}} kids with very high-level math skills. For two years, it was piloted successfully. Then, in 2010, PISD {{made a decision to}} open Math Rocks! to all Plano schools, not just those on the west side. Since then, Math Rocks! is at many PISD schools, such as Rice, Murphy, Schimelpfenig, Schell, Otto, Christie, and McCall. Dr. Andreescu helps to direct the program. Subjects of Math Rocks! include simple sums, nice numbers, factorials, math and chess, divisors of numbers, tangrams, magic squares, <b>cryptarithmetic,</b> and digits of numbers. Plano Independent School District has gotten special permission from the Mathematical Association of America (MAA) for students in Math Rocks! to participate in the American Mathematics Competitions (AMC.) These high level math tests include the AMC 8 (8th grade material), AMC 10 (10th grade material),the AMC 12 (12th grade material.), and AIME. Students enrolled in Math Rocks! taking the AMC tests include third graders all the way to tenth graders.|$|E
40|$|The {{hybridization}} {{of words}} and numbers finds its classic expression in <b>cryptarithmetic.</b> In my view, <b>cryptarithmetic</b> has two distinct forms, the cryptarithms of the codebreakers, and the witty constructions of the wordsmiths. Codebreakers (most notably {{the members of the}} internationally-respected American Cryptogram Association) produce algebraic puzzles with meaningless collections of letters which appeal to the mathematically inclined. The teasers produced by the wordsmiths are far more difficult to devise but usually much easier to solve. This article is concerned with the latter, which {{for want of a better}} term I call literary cryptarithms...|$|E
40|$|Abstract: <b>Cryptarithmetic</b> puzzles {{are quite}} old and their {{inventor}} is not known. An example in The American Agriculturist of 1864 disproves the popular {{notion that it}} was invented by Sam Loyd. The name <b>cryptarithmetic</b> was coined by puzzlist Minos (pseudonym of Maurice Vatriquant) in the May 1931 issue of Sphinx, a Belgian magazine of recreational mathematics. In the 1955, J. A. H. Hunter introduced the word "alphabetic " to designate cryptarithms, such as Dudeney's, whose letters from meaningful words or phrases. Solving a cryptarithm by hand usually involves a mix of deductions and exhaustive tests of possibilities. <b>Cryptarithmetic</b> is a puzzle consisting of an arithmetic problem in which the digits {{have been replaced by}} letters of the alphabet. The goal is to decipher the letters (i. e. Map them back onto the digits) using the constraints provided by arithmetic and the additional constraint that no two letters can have the same numerical value...|$|E
40|$|The {{notion that}} {{cooperation}} can aid {{a group of}} agents to solve problems more efficiently than if those agents worked in isolation is prevalent in computer science and business circles. Here we consider a primordial form of cooperation - imitative learning - that allows an effective exchange of information between agents, which are viewed as the processing units of a social intelligence system or collective brain. In particular, we use agent-based simulations to study {{the performance of a}} group of agents in solving a <b>cryptarithmetic</b> problem. An agent can either perform local random moves to explore the solution space of the problem or imitate a model agent - the best performing agent in its influence network. There is a trade-off between the number of agents N and the imitation probability p, and for the optimal balance between these parameters we observe a thirtyfold diminution in the computational cost to find the solution of the <b>cryptarithmetic</b> problem as compared with the independent search. If those parameters are chosen far from the optimal setting, however, then imitative learning can impair greatly the performance of the group. FAPESP (13 / 17131 - 0) CNPq (303979 / 2013 - 5...|$|E
40|$|PAS-II, a {{computer}} program which represents a generalized version of an automatic protocol system (PAS-I) is described. PAS-II is a task-free, interactive, modular data analysis system for inferring the information processes used by a human from his verbal behavior while solving a problem. The output {{of the program is}} a Problem Behavior Graph: a description of the subject's changing knowledge state during problem solving. As an example of system operation the PAS-II analysis of a short <b>cryptarithmetic</b> protocol is presented. 1...|$|E
40|$|Heuristic {{programming}} was {{the first}} area in which AI methods were tested. The favourite case-studies were fairly simple toy-problems, such as <b>cryptarithmetic,</b> games, such as checker or chess, and formal problems, such as logic or geometry theorem-proving. These problems are well-defined, roughly speaking, at least in comparison to real-life problems, and as such have {{played the role of}} Drosophila in early AI. In this paper I will investigate the origins of heuristic programming and the shift to more knowledge-based and real-life problem solving...|$|E
40|$|Magic squares, chess-like {{problems}}, <b>cryptarithmetic</b> puzzles, {{and similar}} classes of {{problems have been}} extensively used to challenge human reasoning capabilities. Lo Shu magic square {{can be traced back}} to 650 B. C., the eight-queens problem was proposed in 1848 by the chess player Max Bazzel TWO × TWO=THREE puzzle appeared in Strand Magazine in 1924. These puzzles are nowadays widely used in constraint programming courses. The first programming language provided with constraint modelling primitives (Sketchpad) has been proposed by the Turing award winner Ivan Sutherland in his PhD thesis (1963...|$|E
40|$|The role of {{parallel}} processing in heuristic search is examined {{by means of}} an example (<b>cryptarithmetic</b> addition). A problem solver is constructed that combines the metaphors of constraint propagation and hypothesize-and-test. The system is capable of working on many incompatible hypotheses at one time. Furthermore, it is capable of allocating different amounts of processing power to running activities and and changing these allocations as computation proceeds. It is empirically found that the parallel algorithm is, on the average, more efficient than a corresponding sequential one. Implications of this for problem solving in general are discussed...|$|E
40|$|Several recent {{research}} reports have focussed on the representation and solution {{of problems in}} semantically rich domains (1),(2),(3),(4). These include analysis of algebra word problems as well as problems in mechanics and thermodynamics. The term &quot;semantically rich &quot; characterizes these domains well in that successful problem solvers possess large amounts of problem specific information and task related knowledge. Compare this with the knowledge and information needed to solve tasks such as the Tower of Hanoi or <b>cryptarithmetic.</b> The MECHO group (2) has employed the familiar protocol analysis technique {{in an attempt to}} determine what information the person attempting to solve pulley problems has available, and further...|$|E
40|$|Many of {{our results}} in the {{problem-solving}} literature are from puzzle-game domains. Intuitively, most of us feel that {{there are differences between}} puzzle problems and open-ended, real-world problems. There has been some attempt to capture these differences in the vocabulary of "ill-structured " and "well-structured" problems. However, there seem to be no empirical studies directed at this distinction. This paper examines and compares the task environments and problem spaces of a prototypical well-structured problem (<b>cryptarithmetic)</b> with the task environments and problem spaces of a class of prototypical ill-structured problems (design problems). Results indicate substantive differences, both in the task environments and the problem spaces...|$|E
40|$|He {{possesses}} two of {{the three}} qualities for the ideal detective. He has the power of observation and that of deduction. He is wanting only in knowledge [...] . ” Sherlock Holmes, in speaking of Franois de Villard, the French detective Abstract. Heuristic programming was the first area in which AI methods were tested. The favourite case-studies were fairly simple toyproblems, such as <b>cryptarithmetic,</b> games, such as checker or chess, and formal problems, such as logic or geometry theorem-proving. These problems are well-defined, roughly speaking, at least in comparison to real-life problems, and as such have played the role of Drosophila in early AI. In this chapter I will investigate the origins of heuristic programming and the shift to more knowledge-based and real-life problem solving. ...|$|E
40|$|We present cKanren, a {{framework}} for constraint logic programming (CLP) in Scheme. cKanren subsumes miniKanren, a logic programming language embedded in Scheme. cKanren allows programmers to easily use, define, and combine different kinds of constraints. We provide two example constraint systems: one over finite domains and one over trees. The cKanren framework is designed to encourage an especially pure style of logic programming in which goals can be reordered arbitrarily without affecting a program’s semantics (with an important decidability-related caveat). We develop the complete implementation of the cKanren framework, written in R 6 RS Scheme extended with SRFI 39 parameters. We present the implementation of cKanren’s finite domain and disequality constraint solvers, and we provide introductions to miniKanren, cKanren, and numerous example programs, including the Send More Money <b>cryptarithmetic</b> puzzle and N-Queens...|$|E
40|$|Abstract. We propose {{possible}} alternate {{models of}} injection problems. We theoretically compare, {{with respect to}} arc-consistency, the proposed models of injection problems by using the measure of constraint tightness parameterized by {{the level of the}} level of consistency being enforced [3]. We extend the comparision to search algorithms that maintain (generalised) arc-consistency during search. We also make an asymptotic comparison of the time required to enforce different consistency levels and run some experiments on an injection problem. 1 Introduction There are many problems that can be modelled as injection problems. These problems can be scheduling problems, combinatorial graph problems, <b>cryptarithmetic</b> puzzles, etc. For instance, the sport scheduling problem (modelled in [2] for even number of teams) with an odd number of teams amounts to finding, for each week, an injection from the set periods Θ slots into the set of teams. To model the graceful graph problem [1], an injection from the set of vertices into the set of labels, as well as a permutation of the set of edges ought to be found. Finally, solving the send-more-money puzzle amounts to finding an injection from the set of characters into the set of digits...|$|E
40|$|Blackboard {{systems are}} {{motivated}} by the popular view of task forces as brainstorming groups in which specialists write promising ideas {{to solve a problem}} in a central blackboard. Here we study a minimal model of blackboard system designed to solve <b>cryptarithmetic</b> puzzles, where hints are posted anonymously on a public display (standard blackboard) or are posted together with information about the reputations of the agents that posted them (reputation blackboard). We find that the reputation blackboard always outperforms the standard blackboard, which, in turn, always outperforms the independent search. The asymptotic distribution of the computational cost of the search, which is proportional to the total number of agent updates required to find the solution of the puzzle, is an exponential distribution for those three search heuristics. Only for the reputation blackboard we find a nontrivial dependence of the mean computational cost on the system size and, in that case, the optimal performance is achieved by a single agent working alone, indicating that, though the blackboard organization can produce impressive performance gains when compared with the independent search, it is not very supportive of cooperative work...|$|E
40|$|Computer Science The Ether {{language}}, {{a language}} for parallel problem solving, {{is used as}} an implementational vehicle for two systems. Several aspects of these systems are novel and depend {{on the presence of}} parallelism. One of these is a system that solves <b>cryptarithmetic</b> puzzles. This system is capable of pursuing several alternative hypotheses about assignments of letters to digits in parallel. The resources given to these various activities can be changed asynchronously with their running. Strategies for resource allocation are described. It is argued that parallel search offers greater flexibility in controlling the search process than can classical tree search algorithms. The second is a program synthesis system that takes as input a description of the relationship between inputs and output of a Lisp function in a variant of first order predicate logic. The system synthesizes a Lisp program from this description. The system was designed to test the notion of pursuing multiple implementation strategies in parallel with skeptic strategies. The skeptic strategies attempt to show that certain proposed implementation strategies cannot possibly work. If these succeed, work on the successfully refuted implementation strategy is halted. Sometimes one skeptic can simultaneously refut...|$|E
40|$|ABSTRACT: Research {{on general}} {{thinking}} abilities [...] productive, higher order, critical and creative thinking [...] has progressed slowly {{compared with the}} rapid progress {{that has been made}} in the study of cognitive structures and procedures. As alternatives to currently prevailing as-sumptions, three framing assumptions for the study of thinking are proposed, involving situated cognition, per-sonal and social epistemologies, and conceptual compe-tence. Evidence consistent with these assumptions is out-lined, and topics in the psychology of thinking are dis-cussed in relation to the assumptions. The psychological study of thinking has two parts. One part is concerned with performance on specific tasks. The other part is concerned with broader capabilities of pro-ductive thinking, higher order thinking skills, critical thinking, and creativity. In the past 20 years, there has been major scientific progress in the psychology of thinking concerned with performance on specific tasks, and much less in the psy-chology of critical, productive, higher order, and creative thinking. The study of complex information processing, pioneered by Newell and Simon (1972), has provided a progressive framework for analyzing the cognitive struc-tures and processes in many tasks, including tasks used in Piagetian research (Siegler, 1976), puzzles such as <b>cryptarithmetic</b> and the Towers of Hanoi (Anzai & Simon, 1979), items used in intelligence tests (Pellcgrino & Glaser...|$|E
40|$|The {{present study}} {{investigated}} the effects of both group size and heterogeneity in relevant math skill on collaborative problem solving. Overall, triads demonstrated better reasoning and more effective <b>cryptarithmetic</b> problem solving than dyads and singletons. Importantly, triads outperformed the best individuals in a nominal groups analysis. Triads were also better able than dyads {{to take advantage of}} heterogeneity in math skill. The results suggest that some specific advantages of group collaboration {{may be more likely to}} be realized in triads than dyads, and that triads may be an optimal group size when critical evaluation and reasoning are required for a task. What Are The Advantages of Collaboration? One popular reason why people believe groups should be more effective, flexible and innovative at problem solving is the assumption that each group member brings to the task a slightly different set of task-relevant knowledge and skills. Through discussion, the knowledge and skills of each member can become available for all, giving each member a larger pool of ideas to draw from. Especially if members possess different backgrounds, group problem solving will give people a greater opportunity for novel associations, strategies and operations. Exposure to diverse viewpoints may increase both the quantity and quality of idea generation in a group context (Hoffman, Harburg & Maier...|$|E

