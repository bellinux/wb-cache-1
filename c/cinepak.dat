30|0|Public
5|$|The {{original}} Macintosh {{version of}} Myst {{was constructed in}} HyperCard. Each Age was a unique HyperCard stack. Navigation was handled by the internal button system and HyperTalk scripts, with image and QuickTime movie display passed off to various plugins; essentially, Myst functions {{as a series of}} separate multimedia slides linked together by commands. As the main technical constraint that impacted Myst was slow CD-ROM drive read speeds, Cyan had to {{go to great lengths to}} make sure all the game elements loaded as quickly as possible. Images were stored as 8-bit PICT resources with custom color palettes and QuickTime still image compression. Animated elements such as movies and object animations were encoded as QuickTime movies with <b>Cinepak</b> compression; in total, there were more than 66minutes of Quicktime animation. This careful processing made the finished graphics look like truecolor images despite their low bit depth; the stills were reduced in size from 500kB to around 80kB.|$|E
25|$|Video coding formats: <b>Cinepak,</b> Dirac, DV, H.263, H.264/MPEG-4 AVC, H.265/MPEG HEVC, HuffYUV, Indeo 3, MJPEG, MPEG-1, MPEG-2, MPEG-4 Part 2, RealVideo 3&4, Sorenson, Theora, VC-1, VP5, VP6, VP8, VP9, DNxHD, ProRes {{and some}} WMV.|$|E
25|$|Apple {{released}} QuickTime 1.5 for Mac OS in {{the latter}} part of 1992. This added the SuperMac-developed <b>Cinepak</b> vector-quantization video codec (initially known as Compact Video). It could play video at 320×240 resolution at 30 frames per second on a 25MHz Motorola 68040 CPU. It also added text tracks, which allowed for captioning, lyrics and other potential uses.|$|E
5000|$|Support for Indeo, <b>Cinepak,</b> and {{software}} and hardware-accelerated MPEG-1 video ...|$|E
5000|$|Track 6 Video is in Quicktime format, 320x240, Apple <b>Cinepak</b> codec.|$|E
50|$|<b>Cinepak</b> {{is based}} on vector quantization, which is a {{significantly}} different algorithm from the discrete cosine transform (DCT) algorithm used by most current codecs (in particular the MPEG family, as well as JPEG). This permitted implementation on relatively slow CPUs (video encoded in <b>Cinepak</b> will usually play fine even on a 25 MHz Motorola 68030, consoles like the Sega CD usually used even slower CPUs, e.g. a 12.5 MHz 68000), but tended to result in blocky artifacting at low bitrates, which explained the criticism leveled at the FMV-based video games. <b>Cinepak</b> files tend to be about 70% larger than similar quality MPEG-4 Part 2 or Theora files.|$|E
5000|$|Video formats: <b>Cinepak,</b> DV, H.263, H.264/MPEG-4 AVC, HuffYUV, Indeo, MJPEG, MPEG-1, MPEG-2, MPEG-4 Part 2, RealVideo, Sorenson, Theora, WMV ...|$|E
5000|$|QuickTime related video codecs: <b>Cinepak,</b> Motion JPEG, ProRes, Sorenson 3 Codec, Animation codec (RLE), Apple Video (RPZA), Graphics Codec (SMC) ...|$|E
5000|$|Video formats: <b>Cinepak,</b> DV, H.263, H.264/MPEG-4 AVC, HuffYUV, Indeo, MJPEG, MPEG-1, MPEG-2, MPEG-4 Part 2, RealVideo, Sorenson, Theora, WMV, Bink ...|$|E
50|$|In 1996, {{the main}} {{competitors}} for TrueMotion S software codec were <b>Cinepak</b> and Indeo in games for first-generation CD-ROM based game consoles.|$|E
5000|$|Video formats: MPEG-1, MPEG-2, H.263, MPEG-4 SP and ASP, MPEG-4 AVC (H.264), HEVC (H.265), HuffYUV, Indeo, MJPEG, RealVideo, RMVB, Sorenson, VP8, VP9, WMV, <b>Cinepak</b> ...|$|E
5000|$|Video formats: <b>Cinepak,</b> DV, H.263, H.264/MPEG-4 AVC, HuffYUV, Indeo, MJPEG, MPEG-1, MPEG-2, MPEG-4 ASP, RealVideo, Sorenson, Theora, WMV (partial, {{including}} WMV1, WMV2 and WMV3; via FFmpeg) ...|$|E
5000|$|Windows Media Player related video codecs: Microsoft RLE, Microsoft Video 1, <b>Cinepak,</b> Indeo 2, 3 and 5, Motion JPEG, Microsoft MPEG-4 v1, v2 and v3, WMV1, WMV2 and WMV3 (a.k.a. VC-1) ...|$|E
5000|$|Video coding formats: <b>Cinepak,</b> Dirac, DV, H.263, H.264/MPEG-4 AVC, H.265/MPEG HEVC, HuffYUV, Indeo 3, MJPEG, MPEG-1, MPEG-2, MPEG-4 Part 2, RealVideo 3&4, Sorenson, Theora, VC-1, VP5, VP6, VP8, VP9, DNxHD, ProRes {{and some}} WMV.|$|E
5000|$|Video codecs: DivX, XviD, Theora, WMV, MPEG-1, MPEG-2, MPEG-4, VP3, VP5, VP6, H.263(+), H.264 (AVC1), CYUY, ASV1/2, SVQ1/3, MSVIDC, <b>Cinepak,</b> MS MPEG4 V1/2/3, FFV1, VCR1, FLV1, MSRLE, QTRLE Huffyuv, Digital Video, Indeo3, MJPEG, SNOW, TSCC, Dirac, VC-1, RealVideo, etc.|$|E
50|$|It was {{the primary}} video codec of early {{versions}} of QuickTime and Microsoft Video for Windows, but was later superseded by Sorenson Video, Intel Indeo, and most recently MPEG-4 Part 2 and H.264/MPEG-4 AVC. However, movies compressed with <b>Cinepak</b> are generally still playable in most media players.|$|E
50|$|Apple {{released}} QuickTime 1.5 for Mac OS in {{the latter}} part of 1992. This added the SuperMac-developed <b>Cinepak</b> vector-quantization video codec (initially known as Compact Video). It could play video at 320×240 resolution at 30 frames per second on a 25 MHz Motorola 68040 CPU. It also added text tracks, which allowed for captioning, lyrics and other potential uses.|$|E
50|$|In 1994, Radius {{acquired}} rival SuperMac {{and shifted}} headquarters into the latter's building. The SuperMac acquisition netted Radius the <b>Cinepak</b> video compression CODEC, {{which was still}} supported by most encoders and almost all media players by the early 2000s. The acquisitions continued with Pipeline Digital and its professional time code and video tape deck control software.|$|E
50|$|The vectors {{that are}} {{quantized}} in <b>Cinepak</b> are 2×2 pixel blocks. A block can consist of 4 luminance values (grayscale) or of 4 luminance and 2 chrominance values (4:2:0 chroma subsampling). The quantized blocks {{are stored in}} two codebooks, named V1 and V4, each with up to 256 entries. The vectors in the V1 codebook represent downscaled 4×4 pixel blocks, while those in the V4 codebook represent 2×2 pixel blocks.|$|E
5000|$|By {{way of the}} RIFF format, the {{audio-visual}} data {{contained in}} the [...] "movi" [...] chunk can be encoded or decoded by software called a codec, which is an abbreviation for (en)coder/decoder. Upon creation of the file, the codec translates between raw data and the (compressed) data format used inside the chunk. An AVI file may carry audio/visual data inside the chunks in virtually any compression scheme, including Full Frame (Uncompressed), Intel Real Time (Indeo), <b>Cinepak,</b> Motion JPEG, Editable MPEG, VDOWave, ClearVideo / RealVideo, QPEG, and MPEG-4 Video.|$|E
5000|$|Because {{of the low}} {{capacity}} of Game Boy Advance cartridges (ranging from 4 to 32 MB) {{and the length of}} the video content (generally feature-length movies and episodes), GBA Video Paks are heavily compressed, with visual artifacts marring nearly every frame. The image quality has a similar appearance to early <b>Cinepak</b> compression, and the [...] "quilting" [...] and color bleeding effect found in other compressed video formats is also present. Also, in cases where certain videos are available both as a 45-minute two-part episodes or a 22-minute edited version, the 22-minute version is used.|$|E
5000|$|Indeo Video (commonly known now {{simply as}} [...] "Indeo") is a video codec {{developed}} by Intel in 1992. It {{was sold to}} Ligos Corporation in 2000. While its original version was related to Intel's DVI video stream format, a hardware-only codec for the compression of television-quality video onto compact discs, Indeo was distinguished by {{being one of the}} first codecs allowing full-speed video playback without using hardware acceleration. Also unlike <b>Cinepak</b> and TrueMotion S, the compression used the same Y'CbCr 4:2:0 colorspace as the ITU's H.261 and ISO's MPEG-1.|$|E
50|$|<b>Cinepak</b> is a lossy {{video codec}} {{developed}} by Peter Barrett at SuperMac Technologies, and released in 1991 with the Video Spigot, {{and then in}} 1992 as part of Apple Computer's QuickTime video suite. One of the first video compression tools to achieve full motion video on CD-ROM, {{it was designed to}} encode 320×240 resolution video at 1× (150 kbyte/s) CD-ROM transfer rates. The original name of this codec was CompactVideo, which is why its FourCC identifier is CVID. The codec was ported to the Microsoft Windows platform in 1993. It was also used on first-generation and some second-generation CD-ROM game consoles, such as the Atari Jaguar CD, Sega CD, Sega Saturn, and 3DO.|$|E
50|$|With {{the launch}} of {{consoles}} with built-in optical storage (the Sega Saturn and Sony's PlayStation (console)) console manufacturers began more actively taking {{it upon themselves to}} provide higher quality FMV capabilities to developers. Sony included optimizations in their hardware for their MDEC (motion decompression) technology, and Sega chose the software route. Sega worked both internally on optimizing technology such as <b>Cinepak,</b> and externally by licensing video decompression technology from the NY based Duck Corporation. While Duck's offering won praise for its quality (showcased in games like Enemy Zero, major Launch titles in the US and the Saturn adaptations of console hits from the Sega AM2 arcade group) the opaque licensing and royalty structure impeded widespread adoption outside of Japanese and larger US developers.|$|E
50|$|Elements from Michael Crichton's novel, Jurassic Park, {{were added}} into the game. Full motion video (FMV) {{sequences}} were {{created for the}} game using <b>Cinepak.</b> In addition to appearing in the game, Bakker also provided information to the developers on how the game's dinosaurs should move and behave. Bakker filmed the video segments in a studio against a white background. Afterwards, the footage had to be compressed to be playable on the Sega CD. Background sketches were created by artist Mimi Doggett, and were then converted into pixels and sprites. In addition to dinosaur sketches, models were also created for the animals to aid artists in creating dinosaur sprites on Silicon Graphics computers. In January 1993, a demo of the game was shown at the Consumer Electronics Show in Las Vegas, Nevada.|$|E
50|$|With the re-popularization of FMV {{games in}} the early 1990s {{following}} the advent of CD-ROM, higher-end developers usually created their own custom FMV formats to suit their needs. Early FMV titles used game-specific proprietary video renderers optimized for {{the content of the}} video (e.g., live-action vs. animated), because CPUs of the day were incapable of playing back real-time MPEG-1 until the fastest 486 and Pentium CPUs arrived. Consoles, on the other hand, either used a third-party codec (e.g., <b>Cinepak</b> for Sega Mega-CD games) or used their own proprietary format (e.g. the Philips CD-i). Video quality steadily increased as CPUs became more powerful to support higher quality video compression and decompression. The 7th Guest, one of the first megahit multiple-CD-ROM games, {{was one of the first}} games to feature transparent quality 640x320 FMV at 15 frames per second in a custom format designed by programmer Graeme Devine.|$|E
50|$|The {{original}} Macintosh {{version of}} Myst {{was constructed in}} HyperCard. Each Age was a unique HyperCard stack. Navigation was handled by the internal button system and HyperTalk scripts, with image and QuickTime movie display passed off to various plugins; essentially, Myst functions {{as a series of}} separate multimedia slides linked together by commands. As the main technical constraint that impacted Myst was slow CD-ROM drive read speeds, Cyan had to {{go to great lengths to}} make sure all the game elements loaded as quickly as possible. Images were stored as 8-bit PICT resources with custom color palettes and QuickTime still image compression. Animated elements such as movies and object animations were encoded as QuickTime movies with <b>Cinepak</b> compression; in total, there were more than 66 minutes of Quicktime animation. This careful processing made the finished graphics look like truecolor images despite their low bit depth; the stills were reduced in size from 500 kB to around 80 kB.|$|E
50|$|For processing, <b>Cinepak</b> divides a video into key (intra-coded) {{images and}} inter-coded images. In key images the codebooks are {{transmitted}} from scratch, while in inter-coded images codebook entries are selectively updated. Each image is further divided {{into a number}} of horizontal bands. The codebooks can be updated on a per-band basis. Each band is divided into 4×4 pixel blocks. Each block can be coded either from the V1 or from the V4 codebook. When coding from the V1 codebook, one codebook index per 4×4 block is written to the bitstream, and the corresponding 2×2 codebook entry is upscaled to 4×4 pixels. When coding from the V4 codebook, four codebook indices per 4×4 block are written to the bitstream, one for each 2×2 subblock. Alternatively to coding from the V1 or the V4 codebook, a 4×4 block in an inter-coded image can be skipped. A skipped block is copied unchanged from the previous frame in a conditional replenishment fashion. The data rate can be controlled by adjusting the rate of key frames and by adjusting the permitted error in each block.|$|E
5000|$|Originally {{the data}} from the game was to be {{streamed}} from a CD player using <b>Cinepak</b> for compression, but since this could only produce a letterboxed display, lead programmer Charlie Grisafi opted to instead run the game on a CoJag (a modified Atari Jaguar used in arcade games) interfaced with a hard disk drive and using Grisafi's own custom compression software. Grisafi recalled: [...] The amount of rendering required was a huge obstacle. It was originally done by Robert Weatherby's team in Texas but as time went on, the raw horsepower required to do it all became more than they had. I realized that the Silicon Graphics workstations of all the different teams at Atari in California could be a huge resource for doing this. Atari helped us coordinate getting access to all of the systems in the building after hours when the other teams weren't using their systems, so every night we would take over and turn all the SGI systems at Atari into a large render farm.|$|E
40|$|The {{file size}} and picture quality are factors to be {{considered}} for streaming, storage and transmitting videos over networks. This work compares <b>Cinepak,</b> Intel, Microsoft Video and Indeo Codec for video compression. The peak signal to noise ratio is used to compare the quality of such video compressed using AVI codecs. The most widely used objective measurement by developers of video processing systems is Peak Signal-to-Noise Ratio (PSNR). Peak Signal to Noise Ration is measured on a logarithmic scale and depends on the mean squared error (MSE) between an original and an impaired image or video, relative to (2 n- 1) 2. Previous research done regarding assessing of video quality has been mainly by the use of subjective methods, and there is still no standard method for objective assessments. Although it has been considered that compression might not be significant in future as storage and transmission capabilities improve, but at low bandwidths compression makes communication possible. Comment: 13 pages, 1 figure, 7 tables, journal pape...|$|E

