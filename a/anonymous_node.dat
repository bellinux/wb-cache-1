0|74|Public
40|$|Abstract. Many systems require {{information}} about the topology of networks on the Internet, for purposes like management, efficiency, testing of new protocols and so on. However, ISPs usually do not share the actual topology maps with outsiders. Consequently, many systems have been devised to reconstruct the topology of networks on the Internet from publicly observable data. Such systems rely on traceroute to provide path information, and attempt to compute the network topology from these paths. However, traceroute has the problem that some routers refuse to reveal their addresses, and appear as <b>anonymous</b> <b>nodes</b> in traces. Previous research {{on the problem of}} topology inference with <b>anonymous</b> <b>nodes</b> has demonstrated that it is at best NP-complete. We prove a stronger result. There exists no algorithm that, given an arbitrary trace set with <b>anonymous</b> <b>nodes,</b> can determine the topology of the network that generated the trace set. Even the weak version of the problem, which allows an algorithm to output a “small ” set of topologies such that the correct topology is included in the solution set, is not solvable: there exist trace sets such that any algorithm guaranteed to output the correct topology outputs at least an exponential number of networks. We show how to construct such a pathological case even when the network is known to have exactly two <b>anonymous</b> <b>nodes.</b> ...|$|R
50|$|In {{contrast}} to public blockchain networks, validators on private blockchain networks are vetted by the network owner. They do {{not rely on}} <b>anonymous</b> <b>nodes</b> to validate transactions nor do they benefit from the network effect.|$|R
40|$|AbstractBackgroundWith the 11 th {{revision}} of the International Classification of Disease (ICD) being officially launched by the World Health Organization (WHO), the significance of a formal representation for ICD coding rules {{has emerged as a}} pragmatic concern. ObjectivesTo explore the role of Formal Concept Analysis (FCA) on examining ICD 10 coding rules and to develop FCA-based auditing approaches for the formalization process. MethodsWe propose a model for formalizing ICD coding rules underlying the ICD Index using FCA. The coding rules are generated from FCA models and represented in the Semantic Web Rule Language (SWRL). Two auditing approaches were developed focusing upon non-disjoint <b>nodes</b> and <b>anonymous</b> <b>nodes</b> manifest in the FCA model. The candidate domains (i. e. any three character code with their sub-codes) of all 22 chapters of the ICD 10 2006 version were analyzed using the two auditing approaches. Case studies and a preliminary evaluation were performed for validation. ResultsA total of 2044 formal contexts from the candidate domains of 22 ICD chapters were generated and audited. We identified 692 ICD codes having non-disjoint nodes in all chapters; chapters 19 and 21 contained the highest proportion of candidate domains with non-disjoint nodes (61. 9 % and 45. 6 %). We also identified 6996 <b>anonymous</b> <b>nodes</b> from 1382 candidate domains. Chapters 7, 11, 13, and 17, have the highest proportion of candidate domains having <b>anonymous</b> <b>nodes</b> (97. 5 %, 95. 4 %, 93. 6 % and 93. 0 %) while chapters 15 and 17 have the highest proportion of <b>anonymous</b> <b>nodes</b> among all chapters (45. 5 % and 44. 0 %). Case studies and a limited evaluation demonstrate that non-disjoint <b>nodes</b> and <b>anonymous</b> <b>nodes</b> arising from FCA are effective mechanisms for auditing ICD 10. ConclusionFCA-based models demonstrate a practical solution for formalizing ICD coding rules. FCA techniques could not only audit ICD domain knowledge completeness for a specific domain, but also provide a high level auditing profile for all ICD chapters...|$|R
40|$|Abstract. Many systems require {{information}} about the topology of networks on the Internet, for purposes like management, efficiency, testing of new protocols and so on. However, ISPs usually do not share the actual topology maps with outsiders; thus, {{in order to obtain}} the topology of a network on the Internet, a system must reconstruct it from publicly observable data. The standard method employs traceroute to obtain paths between nodes; next, a topology is generated such that the observed paths occur in the graph. However, traceroute has the problem that some routers refuse to reveal their addresses, and appear as <b>anonymous</b> <b>nodes</b> in traces. Previous research on the problem of topology inference with <b>anonymous</b> <b>nodes</b> has demonstrated that it is at best NP-complete. In this paper, we improve upon this result. In our previous research, we showed that in the special case where <b>nodes</b> may be <b>anonymous</b> in some traces but not in all traces (so all node identifiers are known), there exist trace sets that are generable from multiple topologies. This paper extends our theory of network tracing to the general case (with strictly <b>anonymous</b> <b>nodes),</b> and shows that the problem of computing the network that generated a trace set, given the trace set, has no general solution. The weak version of the problem, which allows an algorithm to output a “small ” set of networks- any one of which is the correct one- is also not solvable. Any algorithm guaranteed to output the correct topology outputs at least an exponential number of networks. Our results are surprisingly robust: they hold even when the network is known to have exactly two <b>anonymous</b> <b>nodes,</b> and every node as well as every edge in the network is guaranteed to occur in some trace. On the basis of this result, we suggest that exact reconstruction of network topology requires more powerful tools than traceroute. ...|$|R
40|$|Most {{research}} on Internet topology {{is based on}} active measurement methods. A major difficulty in using these tools is that one comes across many unresponsive routers. Different methods of dealing with these <b>anonymous</b> <b>nodes</b> to preserve the connectivity of the real graph have been suggested. One of the more practical approaches involves using a placeholder for each unknown, resulting in multiple copies of every such node. This significantly distorts and inflates the inferred topology. Our goal in this work is to unify groups of placeholders in the IP-level graph. We introduce a novel clustering algorithm based on semisupervised spectral embedding of all the nodes followed by clustering of the <b>anonymous</b> <b>nodes</b> in the projected space. Experimental results on real internet data are provided, that show good similarity to the true networks. 1...|$|R
40|$|This master's thesis {{describes}} importing the ontology {{in language}} OWL 2 into the internal structures of 4 A annotation server. It is concerned in <b>anonymous</b> <b>nodes,</b> {{for example in}} anonymous classes or anonymous properties. The solution was to use the library The OWL API for import ontology. The solution also allows automatic generation of names to anonymous classes and properties...|$|R
40|$|Abstract. A lone soldier {{has been}} {{stranded}} in an alien world, filled with resources, literals and shifty <b>anonymous</b> <b>nodes.</b> Room upon room {{are filled with}} named graphs – can he find a way out? RDFRoom is an isometric RDF viewer. It gives the user ways to view and manipulate his RDF data that might make him see the data in a brand new perspective...|$|R
40|$|Abstract. Many systems require {{information}} about the topology of net-works on the Internet, for purposes like management, efficiency, testing of new protocols and so on. However, ISPs usually do not share the actual topology maps with outsiders; thus, {{in order to obtain}} the topol-ogy of a network on the Internet, a system must reconstruct it from publicly observable data. The standard method employs traceroute to obtain paths between nodes; next, a topology is generated such that the observed paths occur in the graph. However, traceroute has the prob-lem that some routers refuse to reveal their addresses, and appear as <b>anonymous</b> <b>nodes</b> in traces. Previous research on the problem of topol-ogy inference with <b>anonymous</b> <b>nodes</b> has demonstrated that it is at best NP-complete. In this paper, we improve upon this result. In our pre-vious research, we showed that in the special case where <b>nodes</b> may be <b>anonymous</b> in some traces but not in all traces (so all node identifiers are known), there exist trace sets that are generable from multiple topolo...|$|R
40|$|We {{propose a}} model for {{deterministic}} distributed function computation by a network of identical and <b>anonymous</b> <b>nodes,</b> with bounded computation and storage capabilities that do not scale with the network size. Our goal is to characterize the class of functions that can be computed within this model. In our main result, we exhibit a class of non-computable functions, and prove that every function outside this class can at least be approximated. The problem of computing averages in a distributed manner plays {{a central role in}} our development. ...|$|R
40|$|Abstract. In mobile scenarios, {{privacy is}} {{an aspect of}} growing impor-tance. In {{order to avoid the}} {{creation}} of movement profiles, participating nodes change their identifying properties on a regular basis in order to hide their identities and stay anonymous. The drawback of this action is that nodes which previously had a connection have no means to recognise this fact. A complete re-authentication would be necessary – if possible at all. This paper discusses this new problem and proposes two possible solu-tions for re-identification of <b>anonymous</b> <b>nodes,</b> one based on symmetric encryption and one based on secure hashes. ...|$|R
50|$|The term {{anonymous}} is used {{to describe}} both kinds of network because it is difficult—if not impossible—to determine whether a node that sends a message originated the message or is simply forwarding it on behalf of another node. Every <b>node</b> in an <b>anonymous</b> P2P network acts as a universal sender and universal receiver to maintain anonymity. If a node was only a receiver and did not send, then neighbouring nodes would know that the information it was requesting was for itself only, removing any plausible deniability {{that it was the}} recipient (and consumer) of the information. Thus, in order to remain <b>anonymous,</b> <b>nodes</b> must ferry information for others on the network.|$|R
40|$|We present {{geographical}} secure path routing, {{an infrastructure}} free geographic routing protocol, that is resilient to disruptions caused by malicious or faulty nodes. Geographic locations of <b>anonymous</b> <b>nodes</b> are authenticated {{in order to}} provide location authentication and location privacy simultaneously. Our protocol also authenticates the routing paths taken by individual messages. This provides a basis for geographic security policies. This paper discusses the design and attack resistance of the secure geographic routing protocol. The overhead of location authentication is investigated under various scenarios through network simulation. Results show that the presence of malicious nodes increases the routing path length. A data delivery rate of better than 80 % is sustained even if 40 % of the nodes are malicious. ...|$|R
40|$|We {{introduce}} Mantis, a searchable, peer-to-peer (P 2 P) {{network of}} <b>anonymous</b> <b>nodes</b> aimed at protecting {{the privacy of}} individuals acting as servers in the network. In order to minimize the traffic relayed by peers, servers transfer data directly to clients via a separate, source-spoofed UDP stream. This is extremely important as users of a P 2 P system are content to give up bandwidth while downloading or uploading, but are unwilling to donate {{the majority of their}} bandwidth in order to relay traffic for other peers. By relaxing the requirement of full client anonymity, Mantis enables efficient data transfers from anonymous servers while limiting the bandwidth costs incurred by other peers participating in the network...|$|R
40|$|Abstract — We {{propose to}} secure {{location}} aware services over VANET with our geographical secure path routing protocol (GSPR). GSPR is an infrastructure free geographic routing protocol which is resilient to disruptions caused by malicious or faulty nodes. Geographic locations of <b>anonymous</b> <b>nodes</b> are authenticated {{in order to}} provide location authentication and location privacy simultaneously. Our protocol also authenticates the routing paths taken by individual messages. This paper presents the design of the GSPR secure geographic routing protocol. The overhead of location authentication is investigated under various scenarios through network simulation. Results show that although the presence of malicious nodes increases the routing path length, a data delivery rate of larger than 80 % is sustained even if 40 % of the nodes are malicious. I...|$|R
40|$|International audienceThis paper {{concerns}} {{the problem of}} reconstructing the network topology from data propagated through the network {{by means of an}} average consensus protocol. The proposed method is based on the distributed estimation of graph Lapla-cian spectral properties. Precisely, the identification of the network topology is implemented by estimating both eigen-values and eigenvectors of the consensus matrix, which is related to the graph Laplacian matrix. In this paper, we focus the exposition on the estimation of the eigenvectors since the eigenvalues estimation can be achieved based on recent results of the literature using the same kind of data. We show how the topology can be reconstructed in presence of <b>anonymous</b> <b>nodes,</b> i. e. nodes that do not disclose their ID...|$|R
40|$|We {{present a}} graph-basedmodel of a generic type system for an OO language. The type system {{supports}} {{the features of}} recursive types, generics and interfaces, which are commonly found in modern OO languages such as Java. In the classical graph theory, we define type graphs, instantiation graphs and conjunction graphs that naturally illustrate the relations among types, generics and interfaces within complex OO programs. The model employs a combination of nominal and <b>anonymous</b> <b>nodes</b> to represent respectively types that are identified by names and structures, and defines graph-based relations and operations on types including equivalence, subtyping, conjunction and instantiation. Algorithms based on the graph structures are designed {{for the implementation of}} the type system. We believe that this type system is important {{for the development of a}} graph-based logical foundation of a formal method for verification of and reasoning about OO programs. We present a graph-basedmodel of a generic type system for an OO language. The type system supports the features of recursive types, generics and interfaces, which are commonly found in modern OO languages such as Java. In the classical graph theory, we define type graphs, instantiation graphs and conjunction graphs that naturally illustrate the relations among types, generics and interfaces within complex OO programs. The model employs a combination of nominal and <b>anonymous</b> <b>nodes</b> to represent respectively types that are identified by names and structures, and defines graph-based relations and operations on types including equivalence, subtyping, conjunction and instantiation. Algorithms based on the graph structures are designed for the implementation of the type system. We believe that this type system is important for the development of a graph-based logical foundation of a formal method for verification of and reasoning about OO programs...|$|R
40|$|We {{propose a}} model for {{deterministic}} distributed function computation by a network of identical and <b>anonymous</b> <b>nodes.</b> In this model, each node has bounded computation and storage capabil- ities that do not grow with the network size. Furthermore, each node only knows its neighbors, not the entire graph. Our goal is to characterize the class of functions that can be computed within this model. In our main result, we provide {{a necessary condition for}} computability which we show to be nearly sufficient, in the sense that every function that violates this condition can at least be approximated. The problem of computing (suitably rounded) averages in a dis- tributed manner plays a central role in our development; we provide an algorithm that solves it in time that grows quadratically with the size of the network...|$|R
40|$|International audienceWe {{consider}} a large system populated by n <b>anonymous</b> <b>nodes</b> that communicate through asynchronous and pair-wise interactions. The aim of these interactions is for each node to converge toward a global {{property of the}} system, {{that depends on the}} initial state of each node. In this paper we focus on both the counting and proportion problems. We show that for any δ ∈ (0, 1), the number of interactions per node is O(ln(n/δ)) with probability at least 1 − δ. We also prove that each node can determine, with any high probability, the proportion of nodes that initially started in a given state without knowing the number of nodes in the system. This work provides a precise analysis of the convergence bounds, and shows that using the 4 -norm is very effective to derive useful bounds...|$|R
40|$|Abstract—We {{propose a}} model for {{deterministic}} distributed function computation by a network of identical and <b>anonymous</b> <b>nodes.</b> In this model, each node has bounded computation and storage capabilities that do not grow with the network size. Furthermore, each node only knows its neighbors, not the entire graph. Our goal is to characterize the class of functions that can be computed within this model. In our main result, we provide {{a necessary condition for}} computability which we show to be nearly sufficient, in the sense that every function that violates this condition can at least be approximated. The problem of computing (suitably rounded) averages in a distributed manner plays a central role in our development; we provide an algorithm that solves it in time that grows quadratically with the size of the network. Index Terms—Averaging algorithms, distributed computing, distributed control. I...|$|R
40|$|We {{consider}} a large system populated by n <b>anonymous</b> <b>nodes</b> that communicate through asynchronous and pair-wise interactions. The aim of these interactions is for each node to converge toward a global {{property of the}} system, {{that depends on the}} initial state of each node. In this paper we focus on both the counting and proportion problems. We show that for any δ ∈ (0, 1), the number of interactions per node is O(ln(n/δ)) with probability at least 1 − δ. We also prove that each node can determine, with any high probability, the proportion of nodes that initially started in a given state without knowing the number of nodes in the system. This work provides a precise analysis of the convergence bounds, and shows that using the 4 -norm is very effective to derive useful bounds...|$|R
40|$|Abstract We {{present a}} {{graph-based}} {{model of a}} generic type system for an OO language. The type system supports the features of recursive types, generics and interfaces, which are commonly found in modern OO languages such as Java. In the classical graph theory, we define type graphs, instantia-tion graphs and conjunction graphs that naturally illustrate the relations among types, generics and interfaces within complex OO programs. The model employs a combination of nominal and <b>anonymous</b> <b>nodes</b> to represent respectively types that are identified by names and structures, and de-fines graph-based relations and operations on types including equivalence, subtyping, conjunction and instantiation. Algo-rithms based on the graph structures are designed for the im-plementation of the type system. We believe that this type system {{is important for the}} development of a graph-based logical foundation of a formal method for verification of and reasoning about OO programs...|$|R
40|$|In {{this paper}} we {{proposed}} an e-coin based role election scheme for peer-to-peer (P 2 P) systems. A node in a P 2 P group can be elected as an application server, or a {{trusted third party}} (TTP) server, but not both. The attributes of the election process and the outcomes are mapped to the Ferguson’s e-coin scheme so that undeniable evidences can be generated even when the P 2 P <b>nodes</b> remain <b>anonymous.</b> <b>Nodes</b> can nominate and cast their votes without revealing their identities, but violation of voting rules will subject them to disclosure of such misconducts, and their true identities, which were to be tied into the evidences in encrypted forms. Our scheme also supports the merging of multiple groups, to ensure that when a node is involved in multiple groups, it cannot compromise the mutual exclusion requirement of the role choices in the newly merged group. Index terms – peer-to-peer, trusted third party, mutual exclusion, nomination and election, e-coin, grouping. 1...|$|R
40|$|This {{paper is}} an {{extended}} and {{modified version of}} [10]. A protocol with local rules is presented for enumerating <b>anonymous</b> <b>nodes</b> of finite graphs. It is proved that such algorithms do not exists for the class of ambiguous graphs, defined in the paper; the proposed algorithm works successfully for remaining non-ambiguous graphs. It is also proved that protocol is fair, which means that no enumeration of nodes is discriminated by the protocol and that all individual nodes "know" the fact of successful termination of the protocol activity, provided the number of nodes of a graph is known to the protocol. The described protocol is a generalization of that presented in [9] by the author. Keywords: Algorithms; distributed systems; graphs; local computations 1 Introduction The issue of enumeration of nodes of a graph by local transformations is worth of consideration {{for a number of}} reasons. First, local transformations of graph labellings are good models of distributed computation, where re [...] ...|$|R
40|$|The Undecided-State Dynamics is a {{well-known}} protocol that achieves Consensus in distributed systems formed {{by a set of}} n <b>anonymous</b> <b>nodes</b> interacting via a communication network. We consider this dynamics in the parallel communication model on the complete graph for the binary case, i. e., when every node can either support one of two possible colors (say, and) or stay in the undecided state. Previous work in this setting only considers initial color configurations with no undecided nodes and a large bias (i. e., Θ(n)) towards the majority color. A major open question here is whether this dynamics reaches consensus quickly, i. e. within a polylogarithmic number of rounds. In this paper we present an unconditional analysis of the Undecided-State Dynamics which answers to the above question in the affermative. Our analysis shows that, starting from any initial configuration, the Undecided-State Dynamics reaches a monochromatic configuration within O(^ 2 n) rounds, with high probability (w. h. p.). ...|$|R
40|$|International audienceWe {{consider}} {{the task of}} exploring graphs with <b>anonymous</b> <b>nodes</b> {{by a team of}} non-cooperative robots modeled as finite automata. These robots have no a priori knowledge of the topology of the graph, or of its size. Each edge has to be traversed by at least one robot. We first show that, for any set of q non-cooperative K-state robots, there exists a graph of size O(qK) that no robot of this set can explore. This improves the O(K^O(q)) bound by Rollik (1980). Our main result is an application of this improvement. It concerns exploration with stop, in which one robot has to explore and stop after completing exploration. For this task, the robot is provided with a pebble, that it can use to mark nodes. We prove that exploration with stop requires Ω(n) bits for the family of graphs with at most n nodes. On the other hand, we prove that there exists an exploration with stop algorithm using a robot with O(D Δ) bits of memory to explore all graphs of diameter at most D and degree at most Δ...|$|R
40|$|Authentication has {{traditionally}} been done either in a decentralized manner with human assistance or automatically through a centralized security infrastructure. In the security infrastructure approach, a central trusted authority takes on the responsibility of authenticating participants within its domain of control. While the security infrastructure approach works well in traditional organizations, it {{does not address the}} needs of open membership systems. We propose automatic decentralized authentication mechanisms for peer-to-peer systems, email systems, and ad-hoc networks. Our byzantine fault tolerant public-key authentication protocol (BPKA) provides decentralized authentication to peer-to-peer systems with honest majority. Authentication is done over an insecure asynchronous network without using trusted third parties or human input. We also authenticate public keys in the email environment through our social-group key authentication protocol (SGKA). The protocol provides end-to-end authentication at the email client without using infrastructure or centralized authorities. Finally, location authentication in ad-hoc networks is proposed through our geographical secure path routing protocol (GSPR). The protocol authenticates geographic locations of <b>anonymous</b> <b>nodes</b> in order to provide location authentication and anonymity simultaneously...|$|R
40|$|Abstract. This paper {{addresses}} {{the problem of}} counting {{the size of a}} network where (i) processes have the same identifiers (<b>anonymous</b> <b>nodes)</b> and (ii) the network topology constantly changes (dynamic network). Changes are driven by a powerful adversary that can look at internal process states and add and remove edges in order to contrast the convergence of the algorithm to the correct count. The paper proposes two leader-based counting algorithms. Such algorithms are based on a technique that mimics an energy-transfer between network nodes. The first algorithm assumes that the adversary cannot generate either disconnected network graphs or network graphs where nodes have degree greater than D. In such algorithm, the leader can count the size of the network and detect the counting termination in a finite time (i. e., conscious counting algorithm). The second algorithm assumes that the adversary only keeps the network graph connected at any time and we prove that the leader can still converge to a correct count in a finite number of rounds, but it is not conscious when this convergence happens...|$|R
40|$|Recent {{advances}} in networking technology {{have increased the}} potential for dynamic enterprise collaborations between an open set of entities on a global scale. Mobile ad-hoc networks (MANETs) have created problem in resource sharing as they are constructed via mobile nodes without any prior knowledge of the existing nodes {{which may not be}} trustworthy. Trust management appears to be a promising approach to formalize trustworthiness among these <b>anonymous</b> <b>nodes.</b> The outcome of the study is to formalize a trust mechanism for MANETs. The aim of this paper is threefold: to formalize and evaluate trust, to use trust as a basis to establish keys between nodes in MANETs, and to utilize trust as a metric for establishing secure distributed control in MANETs. We define metrics for nodes to establish and manage trust, and use this mutual trust to make decisions on establishing group and/or pair-wise keys in the network. We also review the routing protocols of ad-hoc networks with trust considerations and select Dynamic Source Routing (DSR), a protocol {{that can be used in}} distributed ad hoc network settings for path discovery. Griffith Sciences, School of Information and Communication TechnologyFull Tex...|$|R
40|$|P 2 P网络高效的内容分发能力，使之在文件共享领域有广泛的应用。而P 2 P网络中节点的高度匿名在给节点自身安全带来保障的同时，也带来了文件污染这一严重威胁P 2 P网络运行和发展的安全问题。文件污染现象使网络中充斥大量的木马病毒等恶意文件以及不可用文件，降低网络内容可用性，并且威胁到节点安全，严重阻碍了P 2 P文件共享网络的运行和发展。目前对文件污染的研究大部分还停留在对主流P 2 P共享网络中文件污染现象的测量和数学建模上，缺乏有效的防治策略来指导P 2 P共享网络建立可行的抗污染机制。为弥补这些研究不足，本文通过数学建模和实验仿真获得指导污染防治策略的理论依据，并以此为基础提出可行的污染防治机制。 本文主 [...] . P 2 P {{network has}} high {{capability}} in content distribution, {{and it is}} widely used in file-sharing field. <b>Anonymous</b> of <b>node</b> in P 2 P network make node secure, meanwhile, it also causes file pollution as a security problem that seriously threats the operation and development of P 2 P network. The phenomenon of file pollution brings numerous of malicious files and unavailable files such as trojan and virus [...] . 学位：工学硕士院系专业：信息科学与技术学院计算机科学系_计算机系统结构学号： 2302007115129...|$|R
40|$|Abstract — A radio {{networks}} is a {{distributed system}} {{consisting of a}} large number of tiny sensors with low-power transceivers and no central controller. One of the most important problems in such networks is to minimize the energy consumption, and maximize the network life-time. In the initialization problem (also known as naming) each of the n indistinguishable (<b>anonymous)</b> <b>nodes</b> in a given network is assigned a unique identifier, ranging from 1 to n. We consider a network where n nodes (processors) are randomly deployed in a square (resp. cube) X. The network is assumed to be synchronous and the time to be slotted. Two nodes can communicate only if they are at a distance of at most r from each other (r is the transmitting/receiving range). Moreover, if two or more neighbors of a processor u are transmitting concurrently at the same time slot, u cannot receive either of their messages (collision). We suppose also that the nodes have no structural knowledge. To solve the initialization problem, we propose an energy-efficient randomized algorithm running in at most O(MMMM) time slots, with no station being awake for more than O(NNNN) time slots. Index Terms — Multihop networks; self-configuration in ad hoc networks; randomized distributed protocols; initialization; naming; energy efficient algorithms. I...|$|R
40|$|Efficient {{exploration}} of unknown or unmapped environments {{has become one}} of the fundamental problem domains in algorithm design. Its applications range from robot navigation in hazardous environments to rigorous searching, indexing and analysing digital data available on the Internet. A large number of exploration algorithms has been proposed under various assumptions about the capability of mobile (exploring) entities and various characteristics of the environment which are to be explored. This paper considers the graph model, where the environment is represented by a graph of connections in which discrete moves are permitted only along its edges. Designing efficient exploration algorithms in this model has been extensively studied under a diverse set of assumptions, e. g., directed vs undirected graphs, <b>anonymous</b> <b>nodes</b> vs nodes with distinct identities, deterministic vs probabilistic solutions, single vs multiple agent exploration, as well as in the context of different complexity measures including the time complexity, the memory consumption, and the use of other computational resources such as tokens and messages. In this work the emphasis is on memory efficient {{exploration of}} anonymous graphs. We discuss in more detail three approaches: random walk, Propp machine and basic walk, reviewing major relevant results, presenting recent developments, and commenting on directions for further research...|$|R
40|$|In {{distributed}} {{consensus and}} averaging algorithms, processors exchange and update certain values ("estimates" or "opinions") by forming a local average {{with the values}} of their neighbors. Under suitable conditions, such algorithms converge to consensus (every processor ends up holding the same value) or even average-consensus (consensus is achieved on {{the average of the}} initial values held by the processors). We first review some convergence rate results. We then abstract the problem by introducing a model of deterministic distributed function computation by a network of identical and <b>anonymous</b> <b>nodes,</b> with limited communication and storage capabilities, and where each node only knows its neighbors, not the entire graph. Our goal is to characterize the class of functions that can be computed within this model. In our main result, we provide a necessary condition for computability which we show to be nearly sufficient, in the sense that every function that satisfies this condition can at least be approximated. The problem of computing (suitably rounded) averages in a distributed manner plays a central role in our development, and we provide an algorithm that solves it in time that grows at most quadratically with the size of the network. (Joint work with J. Hendrickx and A. Olshevsky). National Science Foundation (U. S.) (Grant EECS- 0701623...|$|R
40|$|The {{initialization}} problem, {{also known}} as naming, consists to give a unique identifier ranging from 1 to n {{to a set of}} n indistinguishable nodes in a given network. We consider a network where n nodes (processors) are randomly deployed in a square (resp. cube) X. We assume that the time is slotted and the network is synchronous, two nodes are able to communicate if they are within distance at most of r of each other (r is the transmitting/receiving range). Moreover, if two or more neighbors of a processor u transmit concurrently at the same time slot, then u would not receive either messages. We suppose also that the <b>anonymous</b> <b>nodes</b> know neither the topology of the network nor the number of nodes in the network. Under this extremal scenario, we first show how the transmitting range of the deployed processors affects the typical characteristics of the network. Then, by allowing the nodes to transmit at various ranges we design sub-linear randomized initialization protocols : In the two, resp. three, dimensional case, our randomized initialization algorithms run in O(n^ 1 / 2 n^ 1 / 2), resp. O(n^ 1 / 3 n^ 2 / 3), time slots. These latter protocols are based upon an optimal gossiping algorithm which is of independent interest...|$|R
40|$|A {{radio network}} is a {{distributed}} system {{consisting of a}} large number of tiny sensors with low-power transceivers and no central controller. One of the most important problems in such networks is to minimize the energy consumption, and maximize the network lifetime. In the initialization problem (also known as naming) each of the n indistinguishable (<b>anonymous)</b> <b>nodes</b> in a given network is assigned a unique identifier, ranging from 1 to n. We consider a network where n nodes (processors) are randomly deployed in a square (resp. a cube) X. The network is assumed to be synchronous and the time to be slotted. Two nodes can communicate only if they are at a distance of at most r from each other (r is the transmitting/receiving range). Moreover, if two or more neighbors of a processor u are transmitting concurrently at the same time slot, u cannot receive either of their messages (collision). We suppose also n and |X | represent the only topological knowledge in each node. To solve the initialization problem, we propose an energy-efficient “ randomized algorithm running in at most O n 3 / 4 log (n) 1 / 4 ” awake for more than O time slots, with no station being n 1 / 4 log (n) 3 / 4 ” time slots...|$|R
40|$|Following {{the trend}} of data trading and data publishing, many online social {{networks}} have enabled potentially sensitive data to be exchanged or shared on the web. As a result, users' privacy could be exposed to malicious third parties since they are extremely vulnerable to de-anonymization attacks, i. e., the attacker links the <b>anonymous</b> <b>nodes</b> in the social network to their real identities {{with the help of}} background knowledge. Previous work in social network de-anonymization mostly focuses on designing accurate and efficient de-anonymization methods. We study this topic from a different perspective and attempt to investigate the intrinsic relation between the attacker's knowledge and the expected de-anonymization gain. One common intuition is that the more auxiliary information the attacker has, the more accurate de-anonymization becomes. However, their relation is much more sophisticated than that. To simplify the problem, we attempt to quantify background knowledge and de-anonymization gain under several assumptions. Our theoretical analysis and simulations on synthetic and real network data show that more background knowledge may not necessarily lead to more de-anonymization gain in certain cases. Though our analysis is based on a few assumptions, the findings still leave intriguing implications for the attacker to make better use of the background knowledge when performing de-anonymization, and for the data owners to better measure the privacy risk when releasing their data to third parties...|$|R
40|$|This paper {{describes}} a workflow of simplifying and matching spec ial language terms in RDF generated from trawling term candidates from Web terminology sites with TermFactory, a Semantic Web framework for professional terminology. Term candidates from such sources {{need to be}} matched and eventually merged with resources already in TermFactory. While merging anonymous data, {{it is important not}} to lose track of provenance. For coding provenance in RDF, TF uses a minor but apparently novel variant of RDF reification. In addition, TF implements a toolkit of methods for dealin g with graphs containing <b>anonymous</b> (blank) <b>nodes...</b>|$|R
