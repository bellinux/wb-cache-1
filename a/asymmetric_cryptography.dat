283|76|Public
25|$|In Simple Electromagnetic Analysis (SEMA) attacks, the {{attacker}} deduces the key directly by observing the trace. It is very effective against <b>asymmetric</b> <b>cryptography</b> implementations. Typically, {{only a few}} traces are needed, though {{the attacker}} {{needs to have a}} strong understanding of the cryptographic device and of the implementation of the cryptographic algorithm. An implementation vulnerable to SEMA attacks will perform a different operation depending on whether the bit of the key is 0 or 1, which will use different amounts of power and/or different chip components. This method is prevalent in many different types of side-channel attacks, in particular, power analysis attacks. Thus, the attacker can observe the entire computation of encryption and can deduce the key.|$|E
5000|$|... #Subtitle level 4: <b>Asymmetric</b> <b>cryptography</b> based {{authentication}} and certificates ...|$|E
50|$|The {{oblivious}} transfer {{can be built}} using <b>asymmetric</b> <b>cryptography</b> like the RSA cryptosystem.|$|E
30|$|<b>Asymmetric</b> key <b>cryptography</b> with RSA (Rivest, Shamir, and Adleman) {{algorithm}} {{is used for}} authentication between the peer entities.|$|R
5000|$|... {{offloading}} application servers {{for complete}} <b>asymmetric</b> and symmetric <b>cryptography.</b>|$|R
40|$|The RSA {{algorithm}} is an <b>asymmetric</b> key <b>cryptography.</b> Based on the theoretical frame work of Deffie and Hellman in 1977, Ron Rivest, Adi Shamir, Len Adleman at MIT developed {{the first major}} <b>asymmetric</b> key <b>cryptography</b> and published their results in 1978. It is named after their first letter of their surnames. Even today, RSA is the most widely accepted public key solution. It solves the problem of key agreements and distribution. [1]. In RSAthere are two keys one for encryption- a private or secret key and a public key for decryption. If one encryption key is use...|$|R
5000|$|Uses <b>asymmetric</b> <b>cryptography</b> to {{establish}} unidirectional trust relationship between users and SAP systems ...|$|E
50|$|A {{cryptoperiod}} is {{the time}} span during which a specific cryptographic key is authorized for use. Common government guidelines range from 1 to 3 years for <b>asymmetric</b> <b>cryptography,</b> and 1 day to 7 days for symmetric cipher traffic keys.|$|E
50|$|In 1998 Gerhard Frey firstly {{proposed}} using trace zero varieties for cryptographic purpose. These {{varieties are}} subgroups of the divisor class group {{on a low}} genus hyperelliptic curve defined over a finite field. These groups {{can be used to}} establish <b>asymmetric</b> <b>cryptography</b> using the discrete logarithm problem as cryptographic primitive.|$|E
5000|$|Public-key <b>cryptography</b> (<b>asymmetric</b> key algorithm): two {{different}} keys {{are used for}} encryption and decryption ...|$|R
5000|$|In case of {{symmetric}} cryptography adoption (Kerberos can work using symmetric or <b>asymmetric</b> (public-key) <b>cryptography),</b> since all authentications {{are controlled by}} a centralized key distribution center (KDC), compromise of this authentication infrastructure will allow an attacker to impersonate any user.|$|R
5000|$|DRM {{mechanisms}} {{also use}} certificates and <b>asymmetric</b> key <b>cryptography</b> in many cases. In all such cases, tamper resistance means not allowing the device user {{access to the}} valid device certificates or public-private keys of the device. The process of making software robust against tampering attacks {{is referred to as}} [...] "software anti-tamper".|$|R
50|$|Some newer {{software}} tokens rely on public-key cryptography, or <b>asymmetric</b> <b>cryptography.</b> This architecture eliminates some of {{the traditional}} weaknesses of software tokens, but does not affect their primary weakness (ability to duplicate). A PIN can be stored on a remote authentication server instead of with the token client, making a stolen software token no good unless the PIN is known as well. However, {{in the case of}} a virus infection the cryptographic material can be duplicated and then the PIN can be captured (via keylogging or similar) the next time the user authenticates. If there are attempts made to guess the PIN, it can be detected and logged on the authentication server, which can disable the token. Using <b>asymmetric</b> <b>cryptography</b> also simplifies implementation, since the token client can generate its own key pair and exchange public keys with the server.|$|E
5000|$|... 3. Server-Supported Signatures (SSS). Proposed in 1996 by Asokan, Tsudik and Waidner {{in order}} to {{delegate}} the use of time-consuming operations of <b>asymmetric</b> <b>cryptography</b> from clients (ordinary users) to a server. For ordinary users, the use of <b>asymmetric</b> <b>cryptography</b> is limited to signature verification, i.e. there is no pre-computation phase like {{in the case of}} on-line/off-line signatures. The main motivation was the use of low-performance mobile devices for creating digital signatures, considering that such devices could be too slow for creating ordinary public-key digital signatures, such as RSA. Clients use hash chain based authentication [...] to send their messages to a signature server in an authenticated way and the server then creates a digital signature by using an ordinary public-key digital signature scheme. In SSS, signature servers are not assumed to be Trusted Third Parties (TTPs) because the transcript of the hash chain authentication phase can be used for non repudiation purposes. In SSS, servers cannot create signatures in the name of their clients.|$|E
5000|$|In 1999 the Pentium III added a Processor Serial Number (PSN) {{as a way}} {{to create}} {{identity}} for security of endpoints on the internet. However, privacy advocates were especially concerned and Intel chose to remove the feature in later versions. [...] Building on improving <b>asymmetric</b> <b>cryptography</b> of the time and group keys, Intel Labs researched and then standardized a way to get to the benefits of PSN while preserving privacy.|$|E
5000|$|Kahn, David - The Codebreakers (...) A single-volume {{source for}} {{cryptographic}} history, {{at least for}} events up to the mid-'60s (i.e., to just before DES and the public release of <b>asymmetric</b> key <b>cryptography).</b> The added chapter on more recent developments (in the most recent edition) is quite thin. Kahn has written other books and articles on cryptography, and on cryptographic history. They are very highly regarded.|$|R
25|$|To much surprise, a {{document}} published in 1997 by the Government Communications Headquarters (GCHQ), a British intelligence organization, revealed that cryptographers at GCHQ had anticipated several academic developments. Reportedly, around 1970, James H. Ellis had conceived {{the principles of}} <b>asymmetric</b> key <b>cryptography.</b> In 1973, Clifford Cocks invented a solution that essentially resembles the RSA algorithm. And in 1974, Malcolm J. Williamson is claimed to have developed the Diffie–Hellman key exchange.|$|R
40|$|Cryptography is {{the science}} of {{encrypting}} the information {{so that it is}} rendered unreadable for an intruder. Cryptographic techniques are of utmost importance in today’s world as the information to be sent might be of invaluable importance to both the sender and the receiver. Various cryptographic techniques ensure that even if an intruder intercepts the sent information, he is not able to decipher it thus render ending it useless for the intruder. Cryptography can be grouped into two types, that is Symmetric key <b>cryptography</b> and <b>Asymmetric</b> key <b>cryptography.</b> Symmetric key cryptography uses the same key for encryption as well as decryption thus making it faster compared to <b>Asymmetric</b> Key <b>cryptography</b> which uses different keys for encryption and decryption. Generation of dynamic keys for Symmetric key cryptography is an interesting field and in this we have tapped this field so as to generate dynamic keys for symmetric key cryptography. In this work, we have devised an algorithm for generating dynamic keys for sending messages over a communication channel and also solving key refreshment problem...|$|R
50|$|The GAA is the {{authentication}} {{architecture that}} makes it possible to extend the existing authentication mechanisms in IMS application layer/service.GAA employs two authentication mechanisms. One is based on the possession of a shared secret between the communicating entities (GBA-Generic Bootstrapping Architecture) derived from the keys used in the AKA authentication, and the other based on <b>asymmetric</b> <b>cryptography</b> (public and private key) and digital certificates or PKI (SSC - Support for Subscriber Certificates).|$|E
50|$|The {{process of}} digital signing {{requires}} that the signature generated by both the fixed message and private key can then be authenticated by its accompanied public key. Using these cryptographic algorithms, the user’s signature cannot be replicated without having access to their private key. A secure channel is not typically required. By applying <b>asymmetric</b> <b>cryptography</b> methods, the digital signature process prevents several common attacks where the attacker attempts to gain access through the following attack methods.|$|E
50|$|Two {{major factors}} in the STU-III's success were the Electronic Key Management System (EKMS) {{and the use of}} a {{removable}} memory module in a plastic package {{in the shape of a}} house key, called a KSD-64A. The EKMS is believed to be one of the first widespread applications of <b>asymmetric</b> <b>cryptography.</b> It greatly reduced the complex logistics and bookkeeping associated with ensuring each encryption device has the right keys and that all keying material is protected and accounted for.|$|E
40|$|Recently an {{efficient}} multicasting protocol {{has been reported}} which uses a concept known as pseudo diameter {{to reduce the number}} of duplicate packets generated during multicasting in wide area networks (WANs). This work is superior to the Distance Vector Multicast Routing protocols (DVMRP) from the viewpoint of better bandwidth utilization. In this thesis security aspect of the above mentioned multicast protocol has been considered. <b>Asymmetric</b> key <b>cryptography</b> concept has been used effectively to design the protocol...|$|R
40|$|In this work, we have {{proposed}} a secured multicasting protocol based on reverse path forwarding. In this new protocol, we {{have proposed}} a method to maintain {{the security of the}} multicasting packets and also {{to reduce the number of}} control messages generated during security key exchanges. A concept known as <b>asymmetric</b> key <b>cryptography</b> has been used to design the security aspect of the protocol. This work is superior to some existing works on security from the viewpoint of better bandwidth utilization and space overhead...|$|R
40|$|Most of the {{e-commerce}} and m-commerce {{applications in}} the current e-business world, has adopted <b>asymmetric</b> key <b>cryptography</b> technique in their authentication protocol to provide an efficient authentication of the involved parties. This paper exhibits the performance analysis of distinct authentication protocol which implements the public key cryptography like RSA, ECC and HECC. The comparison is made based on key generation, sign generation and sign verification processes. The results prove that the performance achieved through HECC based authentication protocol {{is better than the}} ECC- and RSA based authentication protocols...|$|R
50|$|An {{alternative}} {{to the use of}} shared secrets for authentication is the use of <b>asymmetric</b> <b>cryptography.</b> This means that the entity that wants to be authenticated must have a key pair (public and private) and validating a digital certificate key pair. Once in possession of the key and the certificate, the UE can use them to produce digital signatures. The main disadvantage of this type of authentication is that you need a PKI and asymmetric key operations require more computational effort.|$|E
5000|$|<b>Asymmetric</b> <b>{{cryptography}}</b> (or {{public key}} cryptography) is cryptography {{that relies on}} using two (mathematically related) keys; one private, and one public. Such ciphers invariably rely on [...] "hard" [...] mathematical problems {{as the basis of}} their security, so an obvious point of attack is to develop methods for solving the problem. The security of two-key cryptography depends on mathematical questions in a way that single-key cryptography generally does not, and conversely links cryptanalysis to wider mathematical research in a new way.|$|E
50|$|CrypTool {{implements}} {{more than}} 300 algorithms. Users can adjust these with own parameters. The graphical interface, online documentation, analytic tools and algorithms of CrypTool introduce users {{to the field}} of cryptography. CrypTool contains the most classical ciphers as well as modern symmetric and <b>asymmetric</b> <b>cryptography</b> including RSA, ECC, digital signatures, hybrid encryption, homomorphic encryption, and Diffie-Hellman key exchange. Also methods from the area of quantum cryptography (like BB84 key exchange protocol) and the area of post-quantum cryptography (like McEliece, WOTS, Merkle-Signature-Scheme, XMSS) are implemented. Many methods (for instance Huffman code, AES, Keccak, MSS) are visualized.|$|E
2500|$|In a {{groundbreaking}} 1976 paper, Whitfield Diffie and Martin Hellman proposed {{the notion of}} public-key (also, more generally, called <b>asymmetric</b> key) <b>cryptography</b> in which two different but mathematically related keys are used—a public key and a private key. A public key system is so constructed that calculation of one key (the 'private key') is computationally infeasible from the other (the 'public key'), {{even though they are}} necessarily related. Instead, both keys are generated secretly, as an interrelated pair. The historian David Kahn described public-key cryptography as [...] "the most revolutionary new concept in the field since polyalphabetic substitution emerged in the Renaissance".|$|R
40|$|Abstract–Key {{distribution}} and management {{is the foundation}} of any secure services of wireless sensor networks. Due to the resource constraints, establishing cryptographic keys between communicating sensors in large-scale wireless sensor networks is a big challenge. Traditional <b>asymmetric</b> key <b>cryptography</b> is not suitable for wireless sensor environment because of its complexity. Based on the polynomial-key pre-distribution scheme, an improved session key establishment method is proposed in this paper. Compared with existing key distribution schemes, our proposed scheme has lower energy consumption, less key storage and lower communication overheads as well as better network resilience against node capture attacks...|$|R
40|$|The {{security}} of {{wireless sensor networks}} is an active topic of research where both symmetric and <b>asymmetric</b> key <b>cryptography</b> issues have been studied. Due to their computational feasibility on typical sensor nodes, symmetric key algorithms that use the same key to encrypt and decrypt messages have been intensively studied and perfectly deployed in such environment. Because of the wireless sensor’s limited infrastructure, the bottleneck challenge for deploying these algorithms is the key distribution. For the same reason of resources restriction, key distribution mechanisms which are used in traditional wireless networks are not efficient for sensor networks...|$|R
50|$|A kleptographic {{attack is}} an attack which uses <b>asymmetric</b> <b>cryptography</b> to {{implement}} a cryptographic backdoor. For example, one such attack could be to subtly modify how {{the public and private}} key pairs are generated by the cryptosystem so that the private key could be derived from the public key using the attacker's private key. In a well-designed attack, the outputs of the infected cryptosystem would be computationally indistinguishable from the outputs of the corresponding uninfected cryptosystem. If the infected cryptosystem is a black-box implementation such as a hardware security module, a smartcard, or a Trusted Platform Module, a successful attack could go completely unnoticed.|$|E
50|$|In Simple Electromagnetic Analysis (SEMA) attacks, the {{attacker}} deduces the key directly by observing the trace. It is very effective against <b>asymmetric</b> <b>cryptography</b> implementations. Typically, {{only a few}} traces are needed, though {{the attacker}} {{needs to have a}} strong understanding of the cryptographic device and of the implementation of the cryptographic algorithm. An implementation vulnerable to SEMA attacks will perform a different operation depending on whether the bit of the key is 0 or 1, which will use different amounts of power and/or different chip components. This method is prevalent in many different types of side-channel attacks, in particular, power analysis attacks. Thus, the attacker can observe the entire computation of encryption and can deduce the key.|$|E
50|$|Several {{elements}} in the ICP-Brasil case involve the State and tie in to the electronic Leviathan in various ways. These elements are:a. the “reason of State”, including concerns regarding the State’s security and guarantees to ensure its continuing existence;b. the control of society by the State;c. the political decision-making structure, starting with the Head of State;d. a domination strategy emanating from the bureaucracy;e. {{the power of the}} police;f. the treatment of <b>asymmetric</b> <b>cryptography,</b> a dual-use technology controlled by States;g. the consideration given to international practices as evidenced by the comparative examination of other States’ laws and uses of that technology;h. the issue of national security, linked to foreign relations and the geopolitical configuration of States, leading to an in-depth analysis of what and how was being done in other countries;i. updating the way war is waged -“cyber war”;j. containment of problems relating to sovereignty and territory.|$|E
5000|$|In a {{groundbreaking}} 1976 paper, Whitfield Diffie and Martin Hellman proposed {{the notion of}} public-key (also, more generally, called <b>asymmetric</b> key) <b>cryptography</b> in which two different but mathematically related keys are used—a public key and a private key. A public key system is so constructed that calculation of one key (the 'private key') is computationally infeasible from the other (the 'public key'), {{even though they are}} necessarily related. Instead, both keys are generated secretly, as an interrelated pair. The historian David Kahn described public-key cryptography as [...] "the most revolutionary new concept in the field since polyalphabetic substitution emerged in the Renaissance".|$|R
40|$|In {{the present}} {{scenario}} security is biggest issue over internet cloud computing acronym is served everywhere in fast and growing computer generation. So security over the cloud is prime concern. In this paper YAK and ECC are security measures use over the cloud YAK is an <b>asymmetric</b> key <b>cryptography.</b> Whereas ECC is an encryption algorithm. So using YAK and ECC over the cloud network administrator {{can enhance the}} security measures. As per concerned of security measures these algorithms can fulfill requirements over the cloud In this paper cloud model is proposed {{on the basis of}} cloud architecture where YAK and ECC are imposed in cloud architecture for enhancement of security measure...|$|R
40|$|This paper {{extracts}} {{and documents}} patterns that identify problems and solutions concerning confidentiality in a client-server environment. These patterns are then organized as a pattern language. The {{idea is to}} include a new layer {{that is responsible for}} providing the security framework. This layer is composed by a Client Secure Socket and a Server Secure Socket. In order to obtain confidentiality, a combination of symmetric and <b>asymmetric</b> (public/private) <b>cryptography</b> techniques is proposed. For data encryption is proposed the use of the symmetric system with a Session Key. And for exchanging the Session Key, the public/private key pair model is used. This combination provides a fast and reliable cryptosystem...|$|R
