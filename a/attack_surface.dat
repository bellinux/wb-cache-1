383|741|Public
2500|$|Typically, a rich {{operating}} system is {{run in the}} less trusted world, with smaller security-specialized code in the more trusted world, aiming to reduce the <b>attack</b> <b>surface.</b> [...] Typical applications include DRM functionality for controlling the use of media on ARM-based devices, and preventing any unapproved use of the device.|$|E
2500|$|IIS 4 and IIS 5 were {{affected}} by the CA-2001-13 security vulnerability {{which led to the}} infamous Code Red attack; however, both versions 6.0 and 7.0 have no reported issues with this specific vulnerability. In IIS 6.0 Microsoft opted to change the behaviour of pre-installed ISAPI handlers, many of which were culprits in the vulnerabilities of 4.0 and 5.0, thus reducing the <b>attack</b> <b>surface</b> of IIS. In addition, IIS 6.0 added a feature called [...] "Web Service Extensions" [...] that prevents IIS from launching any program without explicit permission by an administrator.|$|E
2500|$|IIS 7.0 was a {{complete}} redesign and rewrite of IIS, and was shipped with Windows Vista and Windows Server 2008. IIS 7.0 included a new modular design that allowed for a reduced <b>attack</b> <b>surface</b> and increased performance. It also introduced a hierarchical configuration system allowing for simpler site deploys, a new Windows Forms-based management application, new command-line management options and increased support for the [...]NET Framework. [...] IIS 7.0 on Vista does not {{limit the number of}} allowed connections as IIS on XP did, but limits concurrent requests to 10 (Windows Vista Ultimate, Business, and Enterprise Editions) or 3 (Vista Home Premium). Additional requests are queued, which hampers performance, but they are not rejected as with XP.|$|E
30|$|After static instrumentation, Sensor Guardian adds {{new code}} into the {{instrumented}} app. If the inserted code is not handled properly, it may introduce new <b>attack</b> <b>surfaces</b> and cause new security problems to the app. Here, we discuss those potential <b>attack</b> <b>surfaces</b> and our mitigation.|$|R
40|$|Adding new {{programs}} or configuration options {{to a system}} often leads to new exploits because it provides adversaries with new ways to access possible vulnerabilities. As a result, application developers often must react to exploits as they are found. One proactive defense is to protect programs at their <b>attack</b> <b>surfaces,</b> the program entry points (e. g., system calls) accessible to adversaries. However, experience has shown that developers often fail to defend these entry points {{because they do not}} locate all such system calls where programs access system resources controlled by attackers. In this paper, we develop a runtime analysis method to compute program <b>attack</b> <b>surfaces</b> in system deployments, which uses a novel approach to computing program adversaries to determine which program entry points access adversarycontrolled objects. We implemented our design as a Linux kernel mechanism capable of identifying entry points for both binary and interpreted programs. Using this mechanism, we computed the <b>attack</b> <b>surfaces</b> for all the programs in the Ubuntu Linux 10. 04 Desktop distribution automatically. On examining located <b>attack</b> <b>surfaces,</b> we discovered previously unknown vulnerabilities in an X Windows startup script available since 2006 and the GNU Icecat web browser. Our tools enable developers to find <b>attack</b> <b>surfaces</b> for their programs quickly and to produce defenses prior to the emergence of attacks, potentially moving us away from the penetrate-and-patch rut. 1...|$|R
40|$|AbstractIn the {{development}} process of software and systems, {{one of the main}} challenges is to detect the existing <b>attack</b> <b>surfaces</b> and their exact related attacks. In this paper, we address the issue of generating attacks related to systems that are designed by using SysML activity diagrams. For this purpose, we develop a practical framework to enable <b>attack</b> <b>surfaces</b> detection and producing their related attacks. First, we propose a formalization of SysML activity diagrams, then we rely on the standard catalog of attacks to build a library of attack patterns. The extracted patterns are modeled as SysML activity diagrams too. Finally, given an SysML activity diagram of a system and a library of SysML attack patterns, we propose an algorithm that automatically detects <b>attacks</b> <b>surfaces</b> relevant to a system under test and generate their related possible attacks...|$|R
2500|$|System {{hardening}} {{represents one}} of the first layers of defence against a rootkit, to prevent it from being able to install. Applying security patches, implementing the principle of least privilege, reducing the <b>attack</b> <b>surface</b> and installing antivirus software are some standard security best practices that are effective against all classes of malware. New secure boot specifications like Unified Extensible Firmware Interface have been designed to address the threat of bootkits, but even these are vulnerable if the security features they offer are not utilized. For server systems, remote server attestation using technologies such as Intel Trusted Execution Technology (TXT) provide a way of validating that servers remain in a known good state. For example, Microsoft Bitlocker encrypting data-at-rest validates servers are in a known [...] "good state" [...] on bootup. PrivateCore vCage is a software offering that secures data-in-use (memory) to avoid bootkits and rootkits by validating servers are in a known [...] "good" [...] state on bootup. The PrivateCore implementation works in concert with Intel TXT and locks down server system interfaces to avoid potential bootkits and rootkits.|$|E
5000|$|The AtomicEye <b>Attack</b> <b>Surface</b> Manager (ASM) aids IT {{management}} by reduces an organization’s <b>attack</b> <b>surface</b> through endpoint scans.|$|E
5000|$|<b>Attack</b> <b>Surface</b> Analyzer {{works on}} the Windows 6.X series of Operating Systems but report {{generation}} can only be done on 6.1 version Operating Systems. Following are the system requirements of <b>Attack</b> <b>Surface</b> Analyzer (from the official download page): ...|$|E
50|$|As noted above, {{these ships}} were {{optimized}} for anti-air warfare, {{but they also}} have weapons on-board capable of <b>attacking</b> <b>surface</b> and submarine targets, for example: the RGM-84F Harpoon missile and Mk. 46 torpedoes.|$|R
2500|$|At times, {{personal}} <b>attacks</b> <b>surfaced</b> in Wall's {{comments in}} the debate. Replying to a Guardian letter from Jonathon Porritt and others supporting leadership, Wall drew parallels with Porritt's own behaviour as a green 'leader': ...|$|R
30|$|In this section, {{we discuss}} Sensor Guardian’s {{advantages}} and disadvantages, including the completeness of its API hooking, the incurred <b>attack</b> <b>surfaces</b> to apps, Sensor Guardian’s strengths and weaknesses, {{and recommendations for}} sensor management on Android.|$|R
50|$|<b>Attack</b> <b>Surface</b> Analyzer {{is a tool}} {{created for}} the {{analysis}} of changes made to the <b>attack</b> <b>surface</b> of the operating systems since Windows Vista and beyond. It is a tool recommended by Microsoft in its SDL guidelines in the verification stage of the development.|$|E
5000|$|The <b>attack</b> <b>surface</b> of a {{software}} environment {{is the sum}} of the different points (the [...] "attack vectors") where an unauthorized user (the [...] "attacker") can try to enter data to or extract data from an environment. Keeping the <b>attack</b> <b>surface</b> as small as possible is a basic security measure.|$|E
50|$|According to the Microsoft SDL Team, {{they did}} not have an all in one tool for {{checking}} the changes made to the <b>attack</b> <b>surface</b> of Windows Operating System before <b>Attack</b> <b>Surface</b> Analyzer was developed. It was a problem to check and verify the effects of various software installations on the system way back since Windows Server 2003 was being developed. Back then they had to use multiple tools for every type of change made to the <b>attack</b> <b>surface.</b> It was a painful process when they had to check for everything again and again and using multiple tools.|$|E
40|$|Cyclic voltammetry and {{controlled}} potential electrolysis, and other analytical techniques {{were used to}} study the reactions of mercury with iridium oxides formed by repetitive cyclic voltammetry (RCV) or by controlled potential electrolysis (CPE) on pure iridium substrate. The oxides were formed in a Hg(I) -containing solution. The SEM images, XPS spectra and CV obtained after the RCV treatment showed a more <b>attacked</b> <b>surface</b> with less mercury on the Ir. On the contrary, the SEM images, XPS spectra and the CV for the electrode prepared by CPE indicated a less <b>attacked</b> <b>surface</b> with more Hg. The oxides formed when the CPE condition was applied inhibited the UPD of mercury...|$|R
40|$|Autoimmune {{hepatitis}} (AIH) {{is described}} as T lymphocyte suppressor disturbance, thus there is formation of autoantibody which <b>attacks</b> <b>surface</b> antigen of liver cells or hepatocytes. Diagnosis of AIH is done after other liver abnormalities have been ruled out. The diagnosis of AIH {{needs to be done}} with thorough and careful examination as there is no pathognomonic clinical appearance. Autoimmune hepatitis (AIH) {{is described as}} T lymphocyte suppressor disturbance, thus there is formation of autoantibody which <b>attacks</b> <b>surface</b> antigen of liver cells or hepatocytes. Diagnosis of AIH is done after other liver abnormalities have been ruled out. The diagnosis of AIH needs to be done with thorough and careful examination as there is no pathognomonic clinical appearance...|$|R
5000|$|In {{addition}} to their ASW and SAR capabilities, most P-3Cs have been modified to carry Harpoon and Maverick missiles for <b>attacking</b> <b>surface</b> ships. American P-3s were formerly armed with the Lulu nuclear depth charge for ASW, but those {{were removed from the}} arsenal and scrapped decades ago.|$|R
5000|$|The basic {{strategies}} of <b>attack</b> <b>surface</b> reduction include the following: {{reduce the amount}} of code running, reduce entry points available to untrusted users, and eliminate services requested by relatively few users. One approach to improving information security is to reduce the <b>attack</b> <b>surface</b> of a system or software. By turning off unnecessary functionality, there are fewer security risks. By having less code available to unauthorized actors, there will tend to be fewer failures. Although <b>attack</b> <b>surface</b> reduction helps prevent security failures, it does not mitigate the amount of damage an attacker could inflict once a vulnerability is found.|$|E
5000|$|... #Subtitle level 3: Organization of Changes {{made to the}} <b>Attack</b> <b>Surface</b> ...|$|E
50|$|G: Ground. Applies to {{vehicles}} {{designed to}} <b>attack</b> <b>surface</b> targets, including vehicles.|$|E
30|$|Besides the {{completeness}} of hooking and the incurred <b>attack</b> <b>surfaces</b> to Android apps, in {{this section}} and Section 5.4, we also discuss {{the strengths and weaknesses}} of Sensor Guardian, in order to have a full understanding about Sensor Guardian’s protection. The strengths of Sensor Guardian are listed as below.|$|R
5000|$|He {{continued}} {{to live in the}} Palace of Whitehall until July, when he was forced by the Rump to return to Hursley. Royalists rejoiced at Cromwell's fall, and many satirical <b>attacks</b> <b>surfaced,</b> in which he was given the unflattering nicknames [...] "Tumbledown Dick" [...] and [...] "Queen Dick".|$|R
50|$|The {{versatile}} submarine, {{finding the}} water too shallow for a torpedo <b>attack,</b> <b>surfaced</b> 27 August to engage three coastal tankers with her deck gun and succeeded in sinking Nanshin Maru. Two other tankers were damaged {{but managed to}} escape into shoal water. Guitarro returned to Fremantle to complete her patrol 8 September 1944.|$|R
50|$|It {{was this}} problem which made Microsoft create an {{application}} with which developers could analyze the changes {{made to the}} Windows <b>Attack</b> <b>Surface.</b> It has at first {{been used by the}} developers at Microsoft. Later, on January 18, 2011, a beta version (version 5.1.3.0) of a tool named <b>Attack</b> <b>Surface</b> Analyzer was released in public for the testers and IT administrators. <b>Attack</b> <b>Surface</b> Analyzer can compare two scan data of a system called the baseline scan and product scan. Both 32-bit and 64-bit versions of software are available for Windows Vista and Windows 7 (and respective Server editions). There is no news about a Windows XP version being released.|$|E
50|$|With {{the idea}} of the Moving <b>Attack</b> <b>Surface,</b> (MAS), the CMD system can be {{regarded}} as a kind of proactive defense system which deploys the multi-dimensional <b>attack</b> <b>surface</b> in an unpredictable way under the condition of visually-unchanged functions. Due to multiple-heterogeneity of structures and environments from each executive entity, it enables resources exploited by attackers (including lurkers) to have uncertainty in temporal and spatial dimensions. At the macro level, it appears that the <b>attack</b> <b>surface</b> is always making irregular movements. Especially for those attack missions which need multiple steps to transmit data to achieve attack goals, the premise of achievability can hardly be guaranteed.|$|E
50|$|As {{with the}} browser contest, the <b>attack</b> <b>surface</b> {{available}} to contestants expanded over three days.|$|E
50|$|Anti-ship warfare missile <b>attacks</b> against <b>surface</b> units up to a {{range of}} 80.5 km.|$|R
5000|$|Since 2013, he {{has gained}} global notoriety for his {{research}} with Charlie Miller in automotive security research, demonstrating {{a number of}} attack vectors against ECUs in automotive control networks. [...] Together with Miller, they have produced a survey of remote <b>attack</b> <b>surfaces</b> in then-current model year automobiles, {{an important first step}} in establishing {{the state of the art}} of automotive security and safety research.|$|R
5000|$|The SANS Institute has {{conducted}} research and surveys {{on the effectiveness}} of threat hunting to track and disrupt cyber adversaries as early in their process as possible. According to a survey released in 2016, [...] "adopters of this model reported positive results, with 74 percent citing reduced <b>attack</b> <b>surfaces,</b> 59 percent experiencing faster speed and accuracy of responses, and 52 percent finding previously undetected threats in their networks." ...|$|R
50|$|<b>Attack</b> <b>Surface</b> of Windows Operating System {{concerns}} {{various parts}} of the Operating System. It would have been difficult for anyone to understand the report if all of the changes were listed in serial order. <b>Attack</b> <b>Surface</b> Analyzer makes it easy for the user to browse through the report by listing the threats in categories and providing a Table of contents in an HTML page.|$|E
50|$|<b>Attack</b> <b>Surface</b> Analyzer {{can compare}} two scan data (generated by itself on two {{different}} scans) and generate a report which can then be viewed in the HTML format. It is also possible to run the scans on one system and then generate on another system using the same tool. This is good for Windows Vista Clients {{because it is not}} possible to generate report using the current version of <b>Attack</b> <b>Surface</b> Analyzer on Windows Vista. In such a case, <b>Attack</b> <b>Surface</b> Analyzer can be used to run scans on the Windows Vista Client, transfer the scan result files to a computer running Windows 7 and then generate and browse the report on the Windows 7 based computer.|$|E
5000|$|Collection of <b>Attack</b> <b>Surface</b> Data: Windows Vista, Windows 7, Windows Server 2008 and Windows Server 2008 R2 ...|$|E
40|$|In the {{development}} process of a secure system is essential to detect {{as early as possible}} the system’s vulnerable points, the so called <b>attack</b> <b>surfaces,</b> and to estimate how feasible it would be that known attacks breach through them. Even if <b>attack</b> <b>surfaces</b> can be sometimes detected automatically, mapping them against known attacks still is a step apart. Systems and attacks are not usually modelled in compatible formalisms. We develop a practical framework that automates the whole process. We formalize a system as SysML activity diagrams and in the same formalism we model libraries of patterns taken from standard catalogues of social engineering and technical attacks. An algorithm that we define, navigates the system’s diagrams in search for its attack surfaces; then it evaluates the possibility and the probability that the detected weak points host attacks among those in the modelled library. We prove the correctness and the completeness of our approach and we show how it works on a use case scenario. It represents a very common situation in the domain of communication and data security for corporations...|$|R
5000|$|While under {{command of}} Rogowsky, on 16 March, [...] {{acquired}} U-866 on sonar and commenced a hedgehog attack. This attack missed the U-boat, which then {{settled on the}} ocean floor, attempting {{to hide from the}} <b>attacking</b> <b>surface</b> ships. Unfortunately for the U-boat, the seabed in the area was ideal for the surface ship's sonar and USS Lowe, , , and , all destroyer escorts, continued to attack with depth charges, until the U-boat was judged destroyed.|$|R
40|$|Enterprise {{wide area}} network (WAN) is a private network that connects the {{computers}} and other devices across an organisation's branch locations and the data centers. It forms the backbone of enterprise communication. Currently, multiprotocol label switching (MPLS) is commonly used to provide this service. As a recent alternative to MPLS, software-defined {{wide area network}}ing (SD-WAN) solutions are being introduced as an IP based cloud-networking service for enterprises. SD-WAN virtualizes the networking service and eases the complexity of configuring and managing the enterprise network by moving these tasks to software and a central controller. The introduction of new technologies causes concerns about their security. Also, this new solution is introduced {{as a replacement for}} MPLS, which has been considered secure and has been in use for more than 16 years. Thus, {{there is a need to}} analyze the security of SD-WAN, which is the goal of this thesis. In this thesis, we perform a security analysis of a commercial SD-WAN solution, by finding its various <b>attack</b> <b>surfaces,</b> associated vulnerabilities and design weaknesses. We choose Nuage VNS, an SD-WAN product provided by Nuage Networks, as the analysis target. As a result, many <b>attack</b> <b>surfaces</b> and security weaknesses were found and reported, especially in the Customer Premises Equipment (CPE). In particular, we found vulnerabilities in the CPE's secure bootstrapping method and demonstrated some attacks by exploiting them. Finally, we propose mitigation steps to avoid the attacks. The results of this thesis will help both the service provider and the SD-WAN solution vendor to know about the <b>attack</b> <b>surfaces</b> and weaknesses of SD-WAN before offering it to their customers. We also help in implementing the temporary countermeasures to mitigate the attacks. The results have been presented to the service provider and the vendor of the SD-WAN product...|$|R
