274|79|Public
5|$|Windows 10 {{incorporates}} multi-factor authentication technology {{based upon}} standards {{developed by the}} FIDO Alliance. The operating system includes improved support for biometric authentication through the Windows Hello platform. Devices with supported cameras (requiring infrared illumination, such as Intel RealSense) allow users to log in with iris or face recognition, similarly to Kinect. Devices with supported readers allow users to log in through fingerprint recognition. Credentials are stored locally and protected using <b>asymmetric</b> <b>encryption.</b>|$|E
2500|$|In contrast, {{consider}} the secret sharing scheme where X {{is the secret}} to be shared, Pi are public <b>asymmetric</b> <b>encryption</b> keys and Qi their corresponding private keys. Each player J is provided with [...] In this scheme, any player with private key 1 can remove the outer layer of encryption, a player with keys 1 and 2 can remove {{the first and second}} layer, and so on. A player with fewer than N keys can never fully reach the secret X without first needing to decrypt a public-key-encrypted blob for which he does not have the corresponding private key – a problem that is currently believed to be computationally infeasible. Additionally we can see that any user with all N private keys is able to decrypt all of the outer layers to obtain X, the secret, and consequently this system is a secure secret distribution system.|$|E
5000|$|The Cramer-Shoup {{cryptosystem}} <b>asymmetric</b> <b>encryption</b> algorithm {{bears his}} name.|$|E
5000|$|... #Subtitle level 2: Symmetric and <b>asymmetric</b> {{database}} <b>encryption</b> ...|$|R
40|$|Abstract. We {{consider}} security {{properties of}} cryptographic protocols, {{that are either}} trace properties (such as confidentiality or authenticity) or equivalence properties (such as anonymity or strong secrecy). Infinite sets of possible traces are symbolically represented using deducibility constraints. We give a new algorithm that decides the trace equivalence for the traces that are represented using such constraints, {{in the case of}} signatures, symmetric and <b>asymmetric</b> <b>encryptions.</b> Our algorithm is implemented and performs well on typical benchmarks. This is the first implemented algorithm, deciding symbolic trace equivalence. ...|$|R
30|$|As a {{ubiquitous}} {{phenomenon in}} nature, chaos {{is a kind}} of deterministic random-like process generated by nonlinear dynamical systems. Chaotic dynamical systems possess the following main characteristics: sensitivity to tiny changes in initial conditions, random-like behavior, ergodicity, unstable periodic orbits, desired diffusion and confusion properties, and one-way property. Due to these properties, chaotic systems have become a very good candidate for use in the field of cryptography. The existing related research progress includes chaos-based symmetric encryptions [1 – 7], security protocols [8, 9], <b>asymmetric</b> <b>encryptions</b> [10, 11], and hash functions [12 – 18].|$|R
50|$|Other uses of AONT can {{be found}} in optimal <b>asymmetric</b> <b>encryption</b> padding (OAEP).|$|E
5000|$|<b>Asymmetric</b> <b>encryption</b> (cf. public-key cryptography) in archive format (multi-file, multi-recipient) called Acid Archives.|$|E
5000|$|IFES (Integer Factorization Encryption Scheme): Essentially RSA {{encryption}} with Optimal <b>Asymmetric</b> <b>Encryption</b> Padding (OAEP).|$|E
40|$|This {{aim of this}} {{research}} is to provide a library of cryptographic tools which can be used for teaching and further research. The library consists of cryptographic algorithms that include symmetric and <b>asymmetric</b> <b>encryptions,</b> key exchange, hashing algorithms and digital signature algorithms. The library is implemented by using Java cryptographic service provider framework that conforms to Java Cryptographic Architecture (JCA) and Java Cryptographic Extension (JCE). The library is developed using Software Development Life Cycle (SDLC), supported by Unified Modeling Language (UML) for the design. The programming language used is Java JDK 1. 4. 1...|$|R
40|$|AbstractCloud {{computing}} {{is emerging}} paradigm provides various IT related services. The security and privacy {{are two major}} factors that inhibits the growth of cloud computing. Security factors are reasons behind lesser number of real times and business related cloud applications compared to consumer related cloud application. Firstly, {{the pros and cons}} of different Attribute Based encryption methods are analysed. Secondly, a new encryption method based on Attribute Based Encryption (ABE) using hash functions, digital signature and <b>asymmetric</b> <b>encryptions</b> scheme has been proposed. Our proposed algorithm is simplified yet efficient algorithm that can implemented for cloud critical application...|$|R
40|$|The {{development}} of mobile technology and RFID {{leads to an}} innovative mobile payment technology by using NFC. One of the popular mobile device platforms today is Android. This research proposes an architecture of NFC-based payment system in cafeteria – which is called NFCafe – and the implementation of it in Android applications. It is a closed payment systems – without involving third parties such as banks. The security issue is handled by using symmetric and <b>asymmetric</b> <b>encryptions,</b> they are RSA and AES. The application has been developed and successfully passed the testing conducted by several respondents...|$|R
5000|$|Proxy re-encryption schemes {{are similar}} to {{traditional}} symmetric or <b>asymmetric</b> <b>encryption</b> schemes, {{with the addition of}} two functions: ...|$|E
5000|$|RSAES-OAEP: {{improved}} encryption/decryption scheme; {{based on}} the Optimal <b>Asymmetric</b> <b>Encryption</b> Padding scheme proposed by Mihir Bellare and Phillip Rogaway.|$|E
50|$|ACE Encryption {{scheme is}} {{recommended}} by NESSIE (New European Schemes for Signatures, Integrity and Encryption) as <b>asymmetric</b> <b>encryption</b> scheme. Press-release is dated by February 2003.|$|E
5000|$|... #Caption: In an <b>asymmetric</b> key <b>encryption</b> scheme, {{anyone can}} encrypt {{messages}} using the public key, {{but only the}} holder of the paired private key can decrypt. Security depends on the secrecy of the private key.|$|R
40|$|There {{are several}} {{symmetric}} and <b>asymmetric</b> data <b>encryption</b> algorithms. IDEA (International Data Encryption Algorithm) {{is one of}} the strongest secret-key block ciphers. In this article, I try to represent the existing IDEA algorithm in a different way. In the following illustration, we would see how the encryption can be expressed in a simpler way...|$|R
40|$|Outsourcing {{data storage}} {{is a topic}} of {{emerging}} importance in database security. In this paper, we consider exact-match query functionality in the public-key setting. Solutions proposed in the database community lack clarity and proofs of security, while encryption-with-keyword-search schemes from the cryptographic community require linear search time (in database size) for each query, which is prohibitive. To bridge the gap, we introduce a new cryptographic primitive we call (<b>asymmetric)</b> efficiently-searchable <b>encryption</b> (ESE), which allows users to store encrypted data on a remote, untrusted server {{in such a way}} that the server can index the data and retrieve or update required parts on request just as e#ciently as for unencrypted data. We give an appropriate definition of security for ESE and several constructions that provably-achieve the definition, in the random oracle model, while providing various computation- and bandwidth-efficiency properties. As deterministic encryption implies ESE, the security definition and several of the constructions are also the first for <b>asymmetric</b> deterministic <b>encryption</b> schemes in general...|$|R
50|$|Certificate-Less Authenticated Encryption (CLAE) adds {{authentication}} to ID-based encryption. It is an <b>asymmetric</b> <b>encryption</b> algorithm {{that can}} exchange secrets between any two entities {{without the need}} to (centrally) administer keys.|$|E
50|$|The {{concept of}} plaintext-aware {{encryption}} {{was developed by}} Mihir Bellare and Phillip Rogaway in their paper on optimal <b>asymmetric</b> <b>encryption,</b> as a method to prove that a cryptosystem is chosen-ciphertext secure.|$|E
50|$|Possible {{uses for}} X-ASVP meta-documents include: posting of <b>asymmetric</b> <b>encryption</b> public keys, posting tokens {{that would be}} {{returned}} in an X-ASVP mail header, and pointers to any other URL's the owner wishes.|$|E
40|$|<b>Asymmetric</b> {{searchable}} <b>encryption</b> allows searches to {{be carried}} over ciphertexts, through delegation, and by means of trapdoors issued by {{the owner of the}} data. Public Key Encryption with Keyword Search (PEKS) is a primitive with such functionality that provides delegation of exact-match searches. As it is important that ciphertexts preserve data privacy, it is also important that trapdoors do not expose the user’s search criteria. The difficulty of formalizing a security model for trapdoor privacy lies in the verification functionality, which gives the adversary the power of verifying if a trapdoor encodes a particular keyword. In this paper, we provide a broader view on what can be achieved regarding trapdoor privacy in <b>asymmetric</b> searchable <b>encryption</b> schemes, and bridge the gap between previous definitions, which give limited privacy guarantees in practice against search patterns. We propose the notion of Strong Search Pattern Privacy for PEKS and construct a scheme that achieves this security notion...|$|R
40|$|In {{wireless}} networks, {{the security}} of data is an important aspect and encryption algorithms {{play an important role}} to provide the security to the wireless networks. The main aim of the cryptography is to enhance the data confidentiality and privacy by making the information unintelligible. Hence the data cannot be interrupted by the intruders. The Encryption techniques and various algorithms are used to provide the needed security to the applications This paper provides a fair performance comparison between the various cryptography algorithms such as the AES, RSA, RC 2, DES, 3 DES, DSA where both types of symmetric and asymmetric techniques. We have compared these parameters for both the symmetric key encryption and for the <b>asymmetric</b> key <b>encryption.</b> The parameters such as the tunability, key length, computational speed, and the type of attacks on the security issues are provided. As a result, the better solution to the symmetric key encryption and for the <b>asymmetric</b> key <b>encryption</b> is provided...|$|R
40|$|We {{consider}} security {{properties of}} cryptographic protocols {{that can be}} modeled using the notion of trace equivalence. The notion of equivalence is crucial when specifying privacy-type properties, like anonymity, vote-privacy, and unlinkability. Infinite sets of possible traces are symbolically represented using deducibility constraints. We describe an algorithm that decides trace equivalence for protocols that use standard primitives (e. g., signatures, symmetric and <b>asymmetric</b> <b>encryptions)</b> {{and that can be}} represented using such constraints. More precisely, we consider symbolic equivalence between sets of constraint systems, and we also consider disequations. Considering sets and disequations is actually crucial to decide trace equivalence for a general class of processes that may involve else branches and/or private channels (for a bounded number of sessions). Our algorithm for deciding symbolic equivalence between sets of constraint systems is implemented and performs well in practice. Unfortunately, it does not scale up well for deciding trace equivalence between processes. This is however the first implemented algorithm deciding trace equivalence on such a large class of processes...|$|R
50|$|Public/private key pairs used in <b>asymmetric</b> <b>encryption</b> (public key cryptography), {{at least}} those based on prime factorisation, must be much longer {{in order to be}} secure; see key size for more details.|$|E
50|$|In cryptography, Optimal <b>Asymmetric</b> <b>Encryption</b> Padding (OAEP) is a padding scheme {{often used}} {{together}} with RSA encryption. OAEP {{was introduced by}} Bellare and Rogaway, and subsequently standardized in PKCS#1 v2 and RFC 2437.|$|E
50|$|<b>A{{symmetric}}</b> <b>encryption</b> expands on {{symmetric encryption}} by incorporating {{two different types}} of keys into the encryption method: private and public keys. A public key can be accessed by anyone and is unique to one user whereas a private key is a secret key that is unique to and only known by one user. In most scenarios the public key is the encryption key whereas the private key is the decryption key. As an example, if individual A would like {{to send a message to}} individual B using <b>asymmetric</b> <b>encryption,</b> he would encrypt the message using Individual B's public key and then send the encrypted version. Individual B would then be able to decrypt the message using his private key. Individual C would not be able to decrypt Individual A's message, as Individual C's private key is not the same as Individual B's private key. <b>Asymmetric</b> <b>encryption</b> is often described as being more secure in comparison to symmetric database encryption given that private keys do not need to be shared as two separate keys handle encryption and decryption processes.|$|E
40|$|Data {{security}} {{protection is}} essential for most multimedia data transmissions today. Classical multimedia content protection is dominated by symmetric encryption methods. This paper explores the possibility of public-key media content encryption. The key problem to the <b>asymmetric</b> selective <b>encryption</b> is formalized and defined as the ＂bounded plaintext problem＂. Possible solutions to this problem are proposed. A public-key multimedia encryption model is developed and the implementation results are provided...|$|R
50|$|Not all {{asymmetric}} key algorithms operate in this way. In the most common, Alice and Bob each own two keys, one for encryption {{and one for}} decryption. In a secure <b>asymmetric</b> key <b>encryption</b> scheme, the private key should not be deducible from the public key. This makes possible public key encryption, since an encryption key can be published without compromising the security of messages encrypted with that key.|$|R
40|$|This paper defines {{adaptive}} soundness (AS) {{security for}} witness encryption and applies it {{to provide the}} first non-invasive schemes for <b>asymmetric</b> password-based <b>encryption</b> (A-PBE). A-PBE offers significant gains over classical, symmetric password-based encryption (S-PBE) {{in the face of}} attacks that compromise servers to recover hashed passwords. We also show by counter-example that the original soundness security (SS) requirement of GGSW does not suffice for the security of their own applications, and show that A...|$|R
5000|$|The Grid Security Infrastructure (GSI), {{formerly}} {{called the}} [...] Globus Security Infrastructure, is a specification for secret, tamper-proof, delegatable communication between software in a grid computing environment. Secure, authenticatable communication is enabled using <b>asymmetric</b> <b>encryption.</b>|$|E
50|$|The Feistel {{construction}} {{is also used}} in cryptographic algorithms other than block ciphers. For example, the optimal <b>asymmetric</b> <b>encryption</b> padding (OAEP) scheme uses a simple Feistel network to randomize ciphertexts in certain asymmetric key encryption schemes.|$|E
50|$|Using {{the same}} key to encrypt and to decrypt {{messages}} is symmetric encryption. <b>Asymmetric</b> <b>encryption</b> involves using different keys (public and private). This chapter gives {{some examples of}} both kinds of encryption, {{and how to use}} them.|$|E
50|$|The keys {{distributed}} by the key server are almost always provided {{as part of a}} cryptographically protected identity certificate containing not only the key but also 'entity' information about the owner of the key. The certificate is usually in a standard format, such as the OpenPGP public key format, the X.509 certificate format, or the PKCS format. Further, the key is almost always a public key for use with an <b>asymmetric</b> key <b>encryption</b> algorithm.|$|R
40|$|Extending {{constraint}} solving for cryptographic protocol analysis with non-standard attacker inference rules ∗ In this paper, we extend {{constraint solving}} for protocol analysis with two non-standard attacker inference rules that are possible when using CBC method for symmetric key encryption and RSA method for <b>asymmetric</b> key <b>encryption.</b> We explain our technique and implementation using some examples which include previously unknown attacks on popular protocols. We also simplify {{the framework of}} constraint solving as presented by Millen and Shmatikov...|$|R
40|$|In thi. 5 paper, it i. s {{shown how}} to adapt certain matrix {{transformation}} {{to create a}} novel <b>asymmetric</b> block <b>encryption</b> scheme. The proposed scheme i. 7 especially usefirlfor encryption of large amounts of data, such as digital images. Firsr. a pair of keys are given by using matrix tranfomalion; Second, the image is encrypted in itv transformation domain. Thi. 7 scheme can. sativ- @ the charactus of convenient realization and locate the possible changed region. 1...|$|R
