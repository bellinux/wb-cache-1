0|60|Public
5000|$|<b>Asynchronous</b> <b>password</b> token. A {{one-time}} password is generated {{without the use}} of a clock, either from a one-time pad or cryptographic algorithm.|$|R
40|$|The {{identification}} / authentication subsystem {{architecture of}} information systems is considered; the analysis of their demerits is done. Advisability of using the onetime <b>passwords</b> <b>generation</b> systems is shown. The software complex of onetime <b>passwords</b> <b>generation</b> is described; the research of their characteristics (the time window and hardware requirements) is performed...|$|R
50|$|After <b>password</b> <b>generation,</b> {{the user}} has {{a sheet of}} paper with n {{passwords}} on it.|$|R
5000|$|... #Caption: Options menu of a <b>password</b> <b>generation</b> program. Enabling more {{character}} subsets {{raises the}} strength of generated passwords, as does increasing the desired length.|$|R
5000|$|Version 4.3.2.4 of 24. June 2015 fixed a bug when special {{characters}} {{were used for}} scratch <b>password</b> <b>generation.</b> It also automatized the support of multi_account when synchronizing with AD/LDAP.|$|R
50|$|Helicon Ape has a GUI {{interface}} (see the screenshot) {{that allows}} easy configs editing (directives auto-completion and spell-check features supported) and browsing, includes a regular expressions tester and a <b>password</b> <b>generation</b> utility.|$|R
5000|$|The {{software}} {{features a}} built-in password generator that generates random passwords. The user may also designate parameters for <b>password</b> <b>generation</b> (length, character set, etc.), creating a [...] "Named Password Policy" [...] by which different passwords can be created.|$|R
50|$|AKA {{stands for}} the Authentication and Key Agreement. It is a {{security}} protocol used in 3G networks.AKA is also used for one-time <b>password</b> <b>generation</b> mechanism for Digest access authentication. AKA is a challenge-response based mechanism that uses symmetric cryptography.|$|R
40|$|Cloud {{computing}} is drastically growing technology {{which provides}} an on-demand software, hardware, infrastructure and data storage as services. This technology is used worldwide {{to improve the}} business infrastructure and performance. However, to utilize these services by intended customer, {{it is necessary to}} have strong password authentication. At present, cloud password authentication can be done in several ways, such as, textual password, graphical and 3 D password. In this paper, we are proposing the strong <b>password</b> <b>generation</b> technique by considering multiple input parameters of cloud paradigm referred as a multidimensional password. This paper presents the multidimensional <b>password</b> <b>generation</b> technique along with architecture, sequence diagrams, algorithms and typical user interfaces. At the end, we derive the probability of breaking our authentication system. Comment: 9 Pages, 8 Figure...|$|R
40|$|AbstractIn {{the most}} recent decades, the amount of web-based users has {{increased}} dramatically. However information and network security is a challenging issue for web users and service providers. Different authentication methods have been proposed to secure their data and networks from unauthorized access and for security. The Password cracking has created serious heated discussion and fear in providing security of the information. Exceedingly secured <b>Password</b> <b>generation</b> is consequently has become an exigent task. In this Paper Petri net based 3 × 3 Array <b>Password</b> <b>generations</b> has been proposed. As two factor confirmations it can be executed for web logins. The methodology adopted in this paper is novel and more immune. This paper exemplifies a new proposal of executing the authentications for effectual information Preservation and Network Security...|$|R
40|$|The thesis {{describes}} <b>password</b> <b>generation</b> {{based on}} rules and parallel <b>generation</b> of <b>passwords</b> on GPU with OpenCL framework. The thesis addresses {{the design of}} a password generator for Fitcrack tool. Module for <b>generation</b> of <b>passwords</b> uses machine learning with real passwords to reduce time to find a correct password...|$|R
40|$|This paper compares three random <b>password</b> <b>generation</b> algorithms, {{describing}} {{and analyzing}} each. It also reports {{the results of}} a small study testing the quality of the passwords generated by the algorithms. Qualities discussed include security, memorability, and user affinity. Suggestions are made for improving the experiment and the individual algorithms...|$|R
40|$|State-of-the-art {{password}} guessing tools, such as HashCat and John the Ripper (JTR), {{enable users}} to check billions of passwords per second against password hashes. In addition to straightforward dictionary attacks, these tools can expand dictionaries using <b>password</b> <b>generation</b> rules. Although these rules perform well on current password datasets, creating new rules that are optimized for new datasets is a laborious task that requires specialized expertise. In this paper, we devise how to replace human-generated password rules with a theory-grounded <b>password</b> <b>generation</b> approach based on machine learning. The {{result of this}} effort is PassGAN, a novel technique that leverages Generative Adversarial Networks (GANs) to enhance password guessing. PassGAN generates password guesses by training a GAN {{on a list of}} leaked passwords. Because the output of the GAN is distributed closely to its training set, the password generated using PassGAN are likely to match passwords that have not been leaked yet. PassGAN represents a substantial improvement on rule-based <b>password</b> <b>generation</b> tools because it infers password distribution information autonomously from password data rather than via manual analysis. As a result, it can effortlessly take advantage of new password leaks to generate richer password distributions. Our experiments show that this approach is very promising. When we evaluated PassGAN on two large password datasets, we were able to outperform JTR's rules by a 2 x factor, and we were competitive with HashCat's rules - within a 2 x factor. More importantly, when we combined the output of PassGAN with the output of HashCat, we were able to match 18 %- 24 % more passwords than HashCat alone. This is remarkable because it shows that PassGAN can generate a considerable number of passwords that are out of reach for current tools. Comment: 9 pages, 3 figures, 4 table...|$|R
5000|$|A user's {{content in}} LastPass, {{including}} passwords and secure notes, {{is protected by}} one master password. The content is synchronized to any device the user uses. Information is encrypted with AES-256 bit encryption with PBKDF2 SHA-256, salted hashes, {{and the ability to}} increase Password Iterations value. Encryption and decryption takes place at the device level. LastPass has a form filler that automates password entering and form filling, and it supports <b>password</b> <b>generation,</b> site sharing and site logging, and Two-Factor Authentication [...]|$|R
40|$|Abstract- Authentication is an {{important}} process in any system to verify whether someone is in fact. In any type of computer network such as private or public, authentication needs username and password. Password is a secrete key to verify the person is authentic. When user wish to use a system, first thing is user has to register with the system, then unique code is assigned for that person. On each subsequent use, the user must know and use the previously declared password. Authentication and authorization {{plays a major role}} which accessing the cloud service from vendors. Cloud customers should be authenticating enough to use the cloud services. Cloud authentication could be done in many ways like textual password, biometrics and graphical etc. In this paper, we are presenting the implementation details for Multifactor Authentication System which authenticates the customer in multiple levels using multidimensional and multilevel <b>password</b> <b>generation</b> technique. users connect to the cloud from their own personal computers or portable devices, over the Internet. To these individual users, the cloud is seen as a single application, device, or document. The hardware in the cloud (and the operating system that manages the hardware connections) is invisible [3]. Index Terms- authentication, cloud computing, cloud security, multifactor authentication, <b>password</b> <b>generation.</b> C I...|$|R
40|$|We {{describe}} a <b>password</b> <b>generation</b> {{scheme based on}} Markov models built from English text (specifically, Charles Dickens' *A Tale Of Two Cities*). We show a (linear-running-time) bijection between random bitstrings of any desired length and generated text, ensuring that all passwords are generated with equal probability. We observe that the generated passwords appear to strike a reasonable balance between memorability and security. Using the system, we get 56 -bit passwords like 'The cusay is wither?" t', rather than passwords like 'tQ$%Xc 4 Ef'. Comment: 5 pages, 2 figure...|$|R
40|$|Research, {{especially}} in the early 21 st century, has shown that education is needed to change people’s behaviour regarding <b>password</b> <b>generation,</b> management and storage. As our daily routines and duties have become more dependent on electronic services in the last decade, {{one could think that}} qualitative education is nowadays given to users. To verify this assumption we conducted a nation-wide, demographic survey in Norway with a sample of 1003 respondents at the age of 18 to 64. The results show that the education or proper guidance seldom is given leading to the outdated users’ behavior...|$|R
40|$|Security of {{internet}} is {{becoming one of}} the latest important concerns along with extensive application of the Internet. OTP is the first security medium for strengthening the stability of electronic financial transactions. In this paper, we propose the method of one-time <b>password</b> key <b>generation</b> of OTP using changed location and angle of fingerprint features and new OTP system. Fingerprint is one of the powerful personal authentication factors, and it can create variable password key for one-time use of information of fingerprint features. And we performed a simulation for proposed random <b>password</b> key <b>generation</b> method and efficiency analysis...|$|R
25|$|The {{strength}} of random passwords {{depends on the}} actual entropy of the underlying number generator; however, these are often not truly random, but pseudo random. Many publicly available password generators use random number generators found in programming libraries that offer limited entropy. However most modern operating systems offer cryptographically strong random number generators that are suitable for <b>password</b> <b>generation.</b> It is also possible to use ordinary dice to generate random passwords. See stronger methods. Random password programs often {{have the ability to}} ensure that the resulting password complies with a local password policy; for instance, by always producing a mix of letters, numbers and special characters.|$|R
40|$|Most {{information}} systems are secured at minimum by {{some form of}} password protection. For various reasons a password may be unavailable, requiring some form of password recovery procedure. One such procedure is software-based automated password recovery, where a program attempts to log into a system by repeatedly trying different password combinations. At the core of such software is a password generator. This article describes the basic iterative and recursive algorithms for generating all possible passwords of a given length, which is {{commonly referred to as}} brute-force <b>password</b> <b>generation.</b> The paper ends with a discussion of alternative password recovery procedures one should attempt before brute-force password recovery. 1...|$|R
40|$|Status of this Memo This memo {{provides}} {{information for the}} Internet community. It does not specify an Internet standard of any kind. Distribution of this memo is unlimited. Copyright Notice Copyright (C) The Internet Society (2002). All Rights Reserved. This memo specifies an Authentication and Key Agreement (AKA) based one-time <b>password</b> <b>generation</b> mechanism for Hypertext Transfer Protocol (HTTP) Digest access authentication. The HTTP Authentication Framework includes two authentication schemes: Basic and Digest. Both schemes employ a shared secret based mechanism for access authentication. The AKA mechanism performs user authentication and session key distribution in Universal Mobile Telecommunications System (UMTS) networks. AKA is a challengerespons...|$|R
50|$|The {{strength}} of random passwords {{depends on the}} actual entropy of the underlying number generator; however, these are often not truly random, but pseudo random. Many publicly available password generators use random number generators found in programming libraries that offer limited entropy. However most modern operating systems offer cryptographically strong random number generators that are suitable for <b>password</b> <b>generation.</b> It is also possible to use ordinary dice to generate random passwords. See stronger methods. Random password programs often {{have the ability to}} ensure that the resulting password complies with a local password policy; for instance, by always producing a mix of letters, numbers and special characters.|$|R
30|$|Password reuse {{has been}} {{identified}} as a common [1], but troubling user behavior that leaves many vulnerable to a broad range of attacks [10, 11]. To address this problem, password managers are designed to reduce or eliminate password reuse across multiple accounts and devices through lightweight <b>password</b> <b>generation</b> and management features that allow users to create random, unique passwords across their accounts while only needing to remember the password to their password manager to access those accounts. If properly utilized, a password manager can help users stay secure without increasing their cognitive burden through arduous memorization, and so many experts recommend users take up the tool [2, 8]. Thus, this study investigates what users think of these tools towards understanding why some choose to use them while others do not.|$|R
40|$|Abstract- This paper {{describes}} {{a method of}} implementing two factor authentication using mobile phones. The proposed method guarantees that authenticating to services, such as online banking or ATM machines, is done in a very secure manner. The proposed system involves using a mobile phone as a software token for One Time <b>Password</b> <b>generation.</b> The generated One Time Password is valid for only a short userdefined {{period of time and}} is generated by factors that are unique to both, the user and the mobile device itself. Additionally, an SMS-based mechanism is implemented as both a backup mechanism for retrieving the password and as a possible mean of synchronization. The proposed method has been implemented and tested. Initial results show the success of the proposed method. I...|$|R
40|$|An {{authentication}} {{protocol was}} proposed in [11] for {{the generation of}} one time authentication identity, {{which can be used}} as one time <b>passwords,</b> <b>generation</b> of disposal credit card numbers. The proposed protocol was designed using a context free grammar and was in the learning theory domain. The protocol required that the context free grammar used for the authentication procedure be difficult to learn. The paper discusses the relationship between the learning theory and the number theory. Then based upon the experimental limitations to learn a context free grammar, we present an algorithm for the generation of context free grammar which is difficult to learn. There exists no theoretical study which states given a set of strings from a language L, {{how difficult it is to}} generat...|$|R
40|$|This paper {{describes}} {{a method of}} implementing two factor authentication using mobile phones. The proposed method guarantees that authenticating to services, such as online banking or ATM machines, is done in a very secure manner. The proposed system involves using a mobile phone as a software token for One Time <b>Password</b> <b>generation.</b> The generated One Time Password is valid for only a short user-defined {{period of time and}} is generated by factors that are unique to both, the user and the mobile device itself. Additionally, an SMSbased mechanism is implemented as both a backup mechanism for retrieving the password and as a possible mean of synchronization. The proposed method has been implemented and tested. Initial results show the success of the proposed method. ...|$|R
40|$|This study {{investigated}} the common <b>password</b> <b>generation</b> practices of online users. Three hundred and fifteen undergraduate and graduate college-age students completed a survey querying; internet usage demographics; the types and number of different password protected accounts maintained; actual practices used in generating, storing and using passwords; what practices users believe that they should use in generating and storing passwords; and general demographic information. Results indicate that, in general, users do not vary the complexity of passwords depending {{on the nature of}} the site or change their passwords on a regular basis if not required by the site. In generating passwords users typically report using (1) lower case letters, (2) numbers or digits, (3) personally meaningful numbers and (4) personally meaningful words...|$|R
50|$|S/KEY uses {{sequences}} of short English words as passwords. OTPW uses by default a base64 encoding instead, because that allows more passwords to be printed {{on a single}} page, with the same password entropy. In addition, an average human spy needs over 30 seconds to write a 12-character random string into short-term memory, which provides a good protection against brief looks that an attacker might have on a password list. Lists of short words {{on the other hand}} are much faster to memorize. OTPW can handle arbitrary <b>password</b> <b>generation</b> algorithms, as long as the length of the password is fixed. In the current version, the otpw-gen program can generate both base-64 encoded (option -p) and 4-letter-word encoded (option -p1) passwords with a user-specified entropy (option -e).|$|R
40|$|Abstract: A remote {{password}} {{authentication scheme}} based on the Chinese remainder theorem is proposed. The scheme can verify the remote password without verification tables. In the initial phase, the <b>password</b> <b>generation</b> centre generates and assigns a password corresponding to each user. The ideas of smart cards and the identity-based signature scheme introduced by Shamir are employed in this phase. Each user possesses a smart card for later login and authentication. In the login phase, the user submits the identity and password associated with the smart card. In the authentication phase, the system verifies the remotely submitted password to check if the login request is accepted or rejected. A signature scheme and communication timestamps are provided in the authentication phase against the potential attacks of replaying a previously intercepted login request. ...|$|R
40|$|Abstract — Smart Card {{technology}} is the emerging technology which is developing among common masses in our culture and widely used in the sectors of banking and industries. Many research works are undergoing in this area to provide highly confidential data transmission. Existing Scheme provides a security against offline attack for the lost Smart Card using Elliptic Curve Cryptography (ECC) but it requires more communication and computation overhead with higher key length. To overcome this limitation, DNA based Password authentication using Hyper Elliptic Curve Cryptography (HECC) scheme is proposed. It provides more security than existing system which allows server and smartcard to exchange the generated password and verify each other. This system exploits the advantages of Hyperelliptic Curve Cryptography (HECC) technique which is having lesser key size, less communication and computation overhead for <b>Password</b> <b>generation</b> and signature verification process...|$|R
40|$|Random {{numbers are}} useful in many {{applications}} such as Monte Carlo simulation, randomized algorithms, games, and <b>password</b> <b>generation.</b> It {{is important to be}} able to prove facts about about pseudo-random number generators, both about the distribution and the predictability of the pseudorandom numbers. I discuss a pseudo-random number generator based on elliptic curves taken over finite fields. This class of generators can produce provably good pseudo-random numbers. Also, I prove that the analog of a faster pseudo-random number generator embedded in an elliptic curve fails to produce good pseudo-random numbers. This report was submitted in partial fulfillment of the requirements for the Senior Honors Research Program in the School of Computer Science at Carnegie Mellon University. Keywords: cryptography, pseudo-random number generation, elliptic curves, linear congruential generators 1 Introduction Random numbers {{are useful in}} many applications such as Monte Carlo simulation, random [...] ...|$|R
40|$|Authentication is {{required}} in stored database systems so that only authorized users can access the data and related cloud infrastructures. This paper proposes an `authentication technique using multi-factor and multi-dimensional authentication system with multi-level security. The proposed technique {{is likely to be}} more robust as the probability of breaking the password is extremely low. This framework uses a multi-modal biometric approach and SMS to enforce additional security measures with the conventional Login/password system. The robustness of the technique is demonstrated mathematically using a statistical analysis. This work presents the authentication system using the consumer authentication architecture diagrams, activity diagrams, data flow diagrams, sequence diagrams, and algorithms. Categories and Subject Descriptors Multi-factor biometric <b>password</b> <b>generation</b> and authentication. Additional Key Words and Phrases Multi-dimensional, multi-level security systems, multiple privilege levels, multi-factor passwords, multi-modal biometrics, cloud computing, big data intelligence, security and privacy. 1...|$|R
40|$|The {{main goal}} {{of this paper is}} to discuss new & faster methods for testing the {{strength}} of security used in today’s wireless networks. This paper discusses probabilistic <b>password</b> <b>generation</b> methodsfor testing the real security of networks protected by WPA/WPA 2 PSK (Pre-shared key) standard (also known as Personal mode). The main advantage of using those techniques in comparison with a traditional dictionary attack is the speed. The first section discusses the using of a modern graphics cards as an additional, very effective processing power for better performance during a key recovery process. The second part of this article describes the statisticalproposal which could be implemented and used for testing the real security of keys used to protect the network. This statistical method, when properly implemented can also significantly reduce the total time required for a wireless audit...|$|R
40|$|A {{secure network}} {{partially}} depends on user authentication and unfortunately authentication schemes used at present are not utterly secure. Most {{of the systems}} today rely on static passwords to verify the user’s identity. This paper describes a method of implementing two factor authentication using mobile phones. The proposed system involves using a mobile phone as a software token for One Time <b>Password</b> <b>generation.</b> OTP algorithm powered with user’s unique identifications like International Mobile Equipment Identification and Subscriber Identification Module; makes a finite alphanumeric token valid for a session and for a single use. The generated One Time Password is valid for only a short user defined {{period of time and}} is generated by factors that are unique to both, the user and the mobile device itself. Additionally, an SMS SMS-based based mechanism is implemented as both a backup mechanism mec for retrieving the password and as a possible mean of synchronization...|$|R
50|$|A {{large number}} of {{password}} generator programs and websites {{are available on the}} Internet. Their quality varies and can be hard to assess if there is no clear description of the source of randomness that is used, and if source code is not provided to allow claims to be checked. Furthermore, and probably most importantly, transmitting candidate passwords over the Internet raises obvious security concerns, particularly if the connection to the <b>password</b> <b>generation</b> site's program is not properly secured or if the site is compromised in some way. Without a secure channel, {{it is not possible to}} prevent eavesdropping, especially over public networks such as the Internet. A possible solution to this issue is to generate the password using a client-side programming language such as JavaScript. The advantage of this approach is that the generated password stays in the client computer and is not transmitted to or from an external server.|$|R
40|$|Random {{numbers have}} been used {{extensively}} in many simulation applications like Monte Carlo Integration or computer modeling. But recently security applications have increased the need for strong (secure) random number <b>generation</b> like automatic <b>password</b> <b>generation,</b> encryption algorithms, on-line gambling etc. Thus random number generation has become a challenging and an interesting task. Most classical random number generators, generate sequences that are either linear or predictable hence not suitable for cryptographic and security applications. Others generate sequences that {{even though they are}} secure they are not cryptographically strong and above all are slow in execution. Also recent advances in random number generation like the construction of Multiple Recursive Generator(MRG) with large orders, Fast Multiple Recursive Generator (FMRG) and DX(system of multiple recursive generators proposed by Deng and Xu [2003]) generators does not generate a strong random number sequences. Though MRGs have extremely long period of lengt...|$|R
