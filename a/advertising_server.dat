6|23|Public
50|$|Later, Avant's developer, Anderson Che, has {{concentrated}} on adding user-requested features, and Avant {{was among the}} first browsers to have popup blocking, <b>advertising</b> <b>server</b> blocking, and one-click disabling of potential security vulnerabilities such as ActiveX, Java and JavaScript.|$|E
50|$|PowerLinks offers {{technology}} {{products and}} services that are sold primarily to advertising agencies and media companies to allow publisher clients to traffic, target, deliver, and report on their content and In-Content and Native advertising campaigns. The company's main product line is its proprietary Content Recommendation and In-Content and Native <b>advertising</b> <b>Server,</b> which is designed for digital publishers.|$|E
50|$|Consilient {{offered a}} free Push email {{application}} called Consilient Push for mobile phones that supported up to 5 email accounts. POP3 and IMAP4 email accounts were supported {{as well as}} Yahoo, Gmail, AOL and Hotmail. The application had photo attaching and sending capability and also supported attachments in MS Word and PDF. Consilient also offered a mobile <b>advertising</b> <b>server</b> solution, allowing telecom companies to easily integrate mobile advertising into their consumer products.|$|E
50|$|A DNS 'A record' {{may be used}} to <b>advertise</b> <b>server</b> {{support for}} ObsTCP (with a DNS 'CNAME record' {{providing}} a 'friendly' name). HTTP header records, or cached/out of band keyset information may also be used instead.|$|R
50|$|The ads may be {{outsourced}} to {{an advertising}} agency under {{contract with the}} publisher, and served from the <b>advertising</b> agency's <b>servers.</b>|$|R
5000|$|At {{least the}} {{following}} <b>servers</b> <b>advertise</b> the 8BITMIME extension: ...|$|R
50|$|Revive Adserver is an {{open-source}} <b>advertising</b> <b>server</b> that is licensed {{under the}} GNU General Public License. It features an integrated banner management interface and tracking system for gathering statistics. It {{used to be}} known under different names in the past, most recently as OpenX Source. In Sep 2013, OpenX Source was sold to Andrew Hill and rebranded Revive Adserver. The current code base for OpenX Enterprise and Revive Adserver (formerly known as OpenX Source) are completely separate.|$|E
40|$|This article {{gives an}} {{overview}} about two new implementations of technologies for locating moving mobile devices, one {{in form of}} a case study, implemented in a real usage scenario and evaluated in a field trial for mobile advertising (Bluetooth and WAP Push Based Location-Aware Mobile Advertising System[1]), the other as a test setup to measure possible advantages and disadvantage of location systems working in an active, passive or hybrid mode (Tracking Moving Devices with the Cricket Location System[2]). While the first effort is based on Bluetooth technologies and location relies on cell identity positioning, in the second effort distance estimates are undertaken in the receiving device, taking the RF signal into account. Even though the second effort divides into active and passive mode based positioning, the technologies used for the mobile advertising system must {{be considered to be}} more a mixture of both technologies. The field study proved that Bluetooth positioning generally works, but still needs some improvement to enhance the rate of successful localizing operations. It also turned out that the <b>advertising</b> <b>server</b> connected to the location system lacks some functionality in profiling possibilities. Security questions were not the focus of the study, but {{it is obvious that the}} system is not capable to solve this issue satisfying The hybrid system developed and introduced with the Cricket location system shows significant improvement in position accuracy, compared to the passive system, and clear benefits in privacy and security concerns, compared to the active system. However, it cannot reach the accuracy of an active system. 1...|$|E
40|$|ElateMe je nová crowdfundingová platforma s elementy sociálni sitě. Na rozdil od jiných podobných projektů, jako jsou Kickstarter nebo Patreon, které podporuji vývoj kreativnich a komerčnich projektů prostřednictvim zájemců, ElateMe je zaměřen na naplněni osobnich přáni s pomoci přátel uživatelů. V aplikaci ElateMe může uživatel sdilet své přáni a jeho přátelé mu mohou pomoci tim, že finančně přispěji. Vývoj této platformy je týmovým projektem. Práce je rozdělena do vývoje Android a iOS aplikaci, backend REST API a reklamniho serveru. Tato bakalářská práce se zaměřuje na vývoj backend REST API pro výše uvedený projekt. Cilem této práce bylo definovat a zdokumentovat funkčni a nefunkčni požadavky pro systém ve vývoji, analyzovat připady užiti a celkovou strukturu projektu. Autor také analyzuje externi systémy použivané touto aplikaci, jmenovitě Facebook Graph API, rozhrani online platebnich systémů, jako jsou FIO-banka a Bitcoin, služby push notifikace Apple(APNs) a Google(GCM). V rámci této práce byla navržena struktura databáze a architektura serverové aplikace a bylo realizováno backend rozhrani pro komunikaci s mobilnimi a webovými aplikacemi pomoci populárnich nástrojů pro vývoj web serverů, jako jsou programovaci jazyk Python, Django web {{framework}} a PostgreSQL DBMS. Nakonec aplikace byla podrobena jednotkovým (unit) a výkonovým testům. ElateMe {{is a new}} crowdfunding {{platform with}} elements of the social network. Unlike other similar projects like Kickstarter or Patreon that help bring creative, commercial projects to life by means of interested people, ElateMe focuses on the fulfillment of personal wishes {{with the help of}} user's friends. In ElateMe application, the user can share his wish, and his friends can help him by contributing financially. The development of this platform is a team project. The work is divided into the development of Android and iOS applications, REST API server and an <b>advertising</b> <b>server.</b> This thesis focuses {{on the development of the}} backend REST API for the project mentioned above. The aim of this work was to define and document the functional and non-functional requirements for the system under development, to analyze use cases and the overall structure of the project. The author also explains the external systems used by this application, such as the Facebook Graph API, the interfaces of the online payment systems like FIO-banka and Bitcoin, the operating system push notification services of Apple(APNs) and Google(GCM). In the framework of this work, the database structure and server-side application architecture were designed, and the backend interface for communication with mobile and web applications was implemented using modern web development tools such as Python programming language, Django web framework, and PostgreSQL DBMS. After that, the application has undergone unit and performance testing...|$|E
50|$|Client SMTP Authorization (CSA) was a {{proposed}} mechanism whereby a domain admin can <b>advertise</b> which mail <b>servers</b> are legitimate originators of mail from his/her domain.|$|R
50|$|Eventually, however, an {{increased}} use of firewalls, a decreasing usage of the shell accounts required to run a server {{or most of the}} clients, and a lack of FSP support in web browsers caused its use to taper off, and the warez scene moved to HTTP and FXP while pornography moved to publicly <b>advertised</b> web <b>servers.</b>|$|R
50|$|A Skype client authenticates {{the user}} with the login <b>server,</b> <b>advertises</b> its {{presence}} to other peers, determines {{the type of}} NAT and firewall it is behind and discovers nodes that have public IP addresses.|$|R
50|$|Practical {{usefulness}} of the PSE-36 feature depends on chipset support for more than 4 GB of RAM. Most chipsets from the Pentium II timeframe did not support this much memory, with 1 GB being the maximum for the Intel 440BX typical desktop chipset, and 2 GB for the 440GX workstation chipset. Only the high-end server Intel 450NX chipset supported 8 GB. Support for PSE-36 (ESMA) was thus usually <b>advertised</b> for <b>servers.</b>|$|R
40|$|HTTP (Hypertext Transport Protocol) was {{originally}} primarily used for human-initiated client-server communications launched from web browsers, traditional computers and laptops. However, today {{it has become}} the protocol of choice for a bewildering range of applications from a wide array of emerging devices like smart TVs and gaming consoles. This paper presents an initial study characterizing the non-traditional sources of HTTP traffic such as consumer devices and automated updates in the overall HTTP traffic for residential Internet users. Among our findings, 13 % of all HTTP traffic in terms of bytes is due to nontraditional sources, with 5 % being from consumer devices such as WiFi enabled smartphones and 8 % generated from automated software updates and background processes. Our findings show that 11 % of all HTTP requests are caused by communications with <b>advertising</b> <b>servers</b> from as many as 190 countries worldwide, suggesting the widespread prevalence of such activities. Overall, our findings start to answer questions about what is the state of traffic generated in these smart homes...|$|R
40|$|This memo defines an Experimental Protocol for the Internet community. It {{does not}} specify an Internet {{standard}} of any kind. Discussion {{and suggestions for}} improvement are requested. Distribution of this memo is unlimited. This document specifies a new IPv 6 Router Advertisement option to allow IPv 6 routers to <b>advertise</b> DNS recursive <b>server</b> addresses to IPv 6 hosts...|$|R
50|$|Ad serving {{describes}} {{the technology and}} service that places advertisements on Web sites. Ad serving technology companies provide software to Web sites and advertisers to serve ads, count them, choose the ads {{that will make the}} Web site or advertiser most money, and monitor progress of different <b>advertising</b> campaigns. Ad <b>servers</b> are divided into two types—publisher ad servers and advertiser (or third party) ad servers.|$|R
5000|$|Although all {{clients and}} servers {{have to support}} the SHA-1 hashing algorithm, SCRAM is, unlike CRAM-MD5 or DIGEST-MD5, {{independent}} from the underlying hash function. All hash functions defined by the IANA can be used instead. As mentioned in the Motivation section, SCRAM uses the PBKDF2 mechanism, which increases the strength against brute-force attacks, when a data leak has happened on the server.Let [...] be the selected hash function, given {{by the name of}} the algorithm <b>advertised</b> by the <b>server</b> and chosen by the client. 'SCRAM-SHA1' for instance, uses SHA1 as hash function.|$|R
40|$|Abstract. We have {{developed}} a highly scalable application, called Shoal, for tracking and utilizing a distributed set of HTTP web caches. Our application uses the Squid HTTP cache. Squid <b>servers</b> <b>advertise</b> their existence to the Shoal server via AMQP messaging by running Shoal Agent. The Shoal server provides a simple REST interface that allows clients to determine their closest Squid cache. Our goal is to dynamically instantiate Squid caches on IaaS clouds in response to client demand. Shoal provides the VMs on IaaS clouds with {{the location of the}} nearest dynamically instantiated Squid Cache. In this paper, we describe the design and performance of Shoal. 1...|$|R
40|$|It is a {{significant}} problem to provide a robust and portable software environment that can link together clusters of workstations and other heterogeneous computers. There are particular difficulties when the computer clusters to be managed transcend administrative boundaries across wide-area networks. We review some of the technologies that have emerged recently for managing arbitrary computer programs across clusters of computers, and use our experiences with such systems to illustrate the difficulties in managing systems across wide areas. A simplifying approach is to limit the services provided across wide-area clusters to well-defined processing and data access modules, that are specified a priori and are <b>advertised</b> between <b>servers.</b> Client programs can then invoke queries on databases, and set up processing tasks based on combinations of these well-defined services. Developers can build new modules or services conforming to a well specified application programming interface and new services can be tested within administrative boundaries before being made available across wide-area clusters. This is the approach we take with our DISCWorld metacomputing environment. We focus on {{a description of the}} scheduling aspects involved in managing multiple job streams acros...|$|R
50|$|Byte serving (other names: RFC 7233 {{says the}} client makes Range Requests when {{it makes a}} partial content request; Clients make range requests; Byte Range Serving; Page on demand) {{is the process of}} sending only a portion of an HTTP/1.1 message from a server to a client. Byte serving begins when an HTTP <b>server</b> <b>advertises</b> its {{willingness}} to serve partial requests using the Accept-Ranges response header. A client then requests a specific part of a file from the server using the Range request header. If the range is valid, the server sends it to the client with a 206 Partial Content status code and a Content-Range header listing the range sent. If the range is invalid, the server responds with a 416 Requested Range Not Satisfiable status code.|$|R
40|$|Proportional-share {{scheduling}} {{has been}} investigated by many researchers including: Waldspurger et. al. at MIT and by Stoica et. al. at Old Dominion University. This work, however, suffers from high overhead and limited scalability problems when applied to a distributed system. This paper presents an alternative approach to proportion-share scheduling, which overcomes these problems. Our system provides a `marketplace' of resources formed from many local 'markets'. Each process is allocated a wage (dependent on importance) which they spend on resources they need, by transferring money to servers. To overcome {{the need for the}} bottlenecks caused by auctions or lotteries used in previous systems, each server instead directly allocates clients their potential share of access dependent on the total paid and current cost price of the resource. These cost prices are then periodically <b>advertised</b> by the <b>servers</b> using agent processes, which update other local markets in their locality. Thus each [...] ...|$|R
2500|$|The {{implementation}} of affiliate marketing {{on the internet}} relies heavily on various techniques built into the design of many web-pages and web-sites, {{and the use of}} calls to external domains to track user actions (click tracking, Ad Sense) and to serve up content (advertising) to the user. Most of this activity adds time [...] and is generally a nuisance to the casual web-surfer and is seen as visual clutter. [...] Various countermeasures have evolved over time to prevent or eliminate the appearance of advertising when a web-page is rendered. Third party programs (Ad-Aware, Adblock Plus, Spybot, pop-up blockers, etc.) and particularly, the use of a comprehensive HOSTS file can effectively eliminate the visual clutter and the extra time and bandwidth needed to render many web pages. [...] The use of specific entries in the HOSTS file to block these well-known and persistent marketing and click-tracking domains can also aid in reducing a system's exposure to malware by preventing the content of infected <b>advertising</b> or tracking <b>servers</b> to reach a user's web-browser.|$|R
40|$|Locating the demanded {{content is}} one of the major {{challenges}} in Information-Centric Networking (ICN). This process is known as content discovery. To facilitate content discovery, in this paper we focus on Named Data Networking (NDN) and propose a novel routing scheme for content discovery, called Bloom Filter-based Routing (BFR), which is fully distributed, content oriented, and topology agnostic at the intra-domain level. In BFR, origin <b>servers</b> <b>advertise</b> their content objects using Bloom filters. We compare the performance of BFR with flooding and shortest path content discovery approaches. BFR outperforms its counterparts in terms of the average round-trip delay, while it is shown to be very robust to false positive reports from Bloom filters. Also, BFR is much more robust than shortest path routing to topology changes. BFR strongly outperforms flooding and performs almost equal with shortest path routing with respect to the normalized communication costs for data retrieval and total communication overhead for forwarding Interests. All the three approaches achieve similar mean hit distance. The signalling overhead for content advertisement in BFR is much lower than the signalling overhead for calculating shortest paths in the shortest path approach. Finally, BFR requires small storage overhead for maintaining content advertisements...|$|R
40|$|Providing Internet {{access to}} Mobile Ad hoc Networks (MANETs) can greatly extend their applications, {{increase}} their scalability, {{and improve the}} quality of service. However, a critical problem is how the mobile hosts can locate Internet-based servers efficiently in a dynamic, unstructured network. Neither reactive strategies, where the hosts initiate on-demand server discovery, nor proactive strategies, where the <b>servers</b> periodically <b>advertise</b> their availability information, are optimal. To that end, this paper studies adaptive strategies that (1) combine both proactive <b>advertising</b> by the <b>servers</b> and on-demand discovery by the mobile hosts, and (2) determine the relative rate of proactive advertising and on-demand discovery adaptively according to the network characteristics including the host mobility level and the offered load. We propose and evaluate two novel, integrated algorithms. First, to determine the rate of proactive advertising, we propose an exponential backoff algorithm to probe the optimal operating point. Second, to reduce the network traffic due to reactive (on-demand) discovery, we propose a novel controlled flooding algorithm. Our simulation study reveals that, compared to the previous proactive strategies and reactive strategies, our adaptive strategies reduce network traffic for locating the servers by several times when the network has a moderate offered load and a low or high level of host mobility...|$|R
40|$|More {{sophisticated}} {{and an increase}} in the world is using Wireless Application Protocol (WAP) who also in line with needed one of the way to overcome it is to build a strategy marketing and aplikasi WAP advertising online in a former needed a mechanism in his car to consumers who want to buy former WAP with a Wireless allows to Internet and get information technology by car market auto sales the system with drafted and the development of global advertisements advertising information technology development business so everywhere. On this paper it will makes advertising auto sales and applicabel into a WAP that could give information advertise for consumers and the WAP application a search and equipped with spesification from a cars in a costomize user and a credit user to know WAP <b>advertising</b> using Java <b>Server</b> Pages (JSP) Technology, Macromedia Dreamweaver MX and MySQL Server 4012 as database. From the implementation WAP system technology to the user and costomize user under the desire to a report in the non-user could give inputs through a book which is useful for around the facilities which has been through handphone using WAP simulator and had a company report advertising advantage already available operators as user them under the request the user and new JSP online advertising and trials of its calculations quest...|$|R
5000|$|... dmap {{provided}} a facility analogous to TCP/IP's ruptime facility. Dmap servers, one per disk-based machine, connected directly to Ethernet and periodically broadcast (multicast, actually, so that non-participants never even saw the messages) their presence. The same process also collected these broadcasts and (as a <b>server)</b> <b>advertised</b> {{the availability of}} the list of senders through netman. To control the load on the servers, the broadcast frequency was affected by the current size of the list in order to limit the network messages to an average of one per second. Dmap clients would contact their nearest dmap server (as determined by who responded first to the service name enquiry) to get the current list of machines, then would contact each machine in turn (usually maintaining four configurable connections in parallel for speed) to get the specific machine status they were interested in. (Unlike most other transient servers, the dmap client program was not also the transient server. The convention for DNET transient servers was that the same program was used for both sides of the link. netman automatically passed a -B command-line argument to any transient server it spawned, indicating to the process that it was the B-side process and that its standard input file descriptor was a network service connection. The reason for splitting dmap into A- and B-side programs was the desire to push as much of the processing as display formatting onto the client as possible, a 'thick' client in other words. In this case because the client was run infrequently, and usually manually, the division was made in order to minimize the load on the servers. This extended even to minimizing the memory footprint of the transient server, which necessitated the split into A- and B-side programs.) ...|$|R
40|$|The Melbert Cary, Jr. Graphic Arts Collection in the Wallace Memorial Library {{is one of}} {{the treasures}} the RIT {{community}} has had available for years. For this thesis project, selected materials from the collection were scanned and made available on the Internet so people at any location can experience the rare and invaluable items the facility houses. Not only has the result of this project created an educational tool for others to use, but it also challenged the author to master web publishing while developments rapidly occur on the most powerful mass communications media to arise in decades. While the primary purpose of this thesis project was to create an aesthetically pleasing and information rich web presentation for the Melbert Cary, Jr. Graphic Arts Collection, many secondary goals had to first be achieved. Those secondary goals are outlined in this list: 1. To acquire high quality color electronic images for others to access remotely. 2. To design a searchable database of 300 records. 3. To learn the ins-and-outs of web publishing by: Creating cohesive and consistent documents in the HyperText Markup Language (HTML). Developing an aesthetically pleasing interface for users to explore documents. This included keeping up-to-date with developments in HTML and using techniques created by web publishing experts to make the text as typographically pleasing as possible. Placing the necessary documents and images on a web <b>server.</b> <b>Advertising</b> the address of the presentation, or URL, to the appropriate audience. 4. Developing clear and concise instructions on how to maintain the presentation, including procedures for adding categories and images. After a substantial amount of work on this project was completed, it was linked to the Wallace Memorial Library 2 ̆ 7 s home page. A home page is the first site a person reaches upon typing in an Internet address on the World Wide Web. Home pages can be created by individuals or organizations and serve as points of departure for exploring textual and graphical information available at these sites. The Cary presentation has a section explaining the history and growth of the collection. A user can continue by taking a virtual tour of the facilities or by reading about recent acquisitions. The main feature of the presentation is a subject library and digital image data base which contains an initial collection of approximately 300 searchable records ranging from medieval manuscripts to portraits of printers. Instructions on how to perform various types of searches, as well as what type of searches are feasible, are also integrated into this project. Finally, information about image acquisition, graphics presentation, and database installation and setup are integrated into this project. In addition, a secondary home page for the American Printing History Association has been created, and sample articles from its journal Printing History will be available in a digital format on an ongoing basis. All images were prepared to be as faithful to the originals as possible, keeping in mind the drawbacks inherent in viewing images and text on today 2 ̆ 7 s monitors. Retaining accurate colors and details while paying heed to practical speed requirements of transmission was of great importance. A feedback form has also been made available for individuals who wish to communicate any comments, problems, requests or suggestions via e-mail. The documentation that follows is the methodology used in creating the Cary Collection 2 ̆ 7 s web presentation...|$|R

