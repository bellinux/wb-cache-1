13|5523|Public
50|$|NetDynamics, Inc. was {{acquired}} by Sun Microsystems in July 1998. The <b>application</b> <b>server</b> <b>software,</b> together with the Netscape Application Server, {{was the basis for}} Sun's iPlanet Application Server offering.|$|E
5000|$|... "Customizable <b>application</b> <b>server</b> <b>software</b> that {{features}} a small footprint, {{making it easier to}} download and manage", saving on system resources and improving performance by allowing you to dynamically enable GBean-based components.|$|E
5000|$|Ubiquity Software - Developer of SIP/IMS <b>Application</b> <b>Server</b> <b>software</b> platform, {{which was}} {{acquired}} by Avaya in Feb 2007 for about U.S. $150M and {{is the basis of}} Avaya's next generation solutions.|$|E
50|$|<b>Application</b> <b>servers</b> <b>software</b> {{installed}} {{on a computer}} to facilitate the serving (running) of other applications.|$|R
50|$|A {{computer}} running several {{software components}} {{is often called}} an <b>application</b> <b>server.</b> This combination of <b>application</b> <b>servers</b> and <b>software</b> components is usually called distributed computing. Typical real-world application of this is in, e.g., financial applications or business software.|$|R
5000|$|WebSiphon is a World Wide Web <b>application</b> <b>server</b> and <b>software</b> {{development}} tool {{used to create}} dynamic, data-driven web sites. WebSiphon was developed by Purity Software for the Mac OS operating system, with version 1.0 released publicly in 1996.|$|R
50|$|Caucho Technology {{is based}} in San Diego, CA. It is an {{information}} technology company that produces web server software and <b>application</b> <b>server</b> <b>software</b> {{as well as the}} originators of Quercus and Hessian open source projects.|$|E
50|$|Zope Public License {{is a free}} {{software}} license, used primarily for the Zope <b>application</b> <b>server</b> <b>software.</b> The license {{is similar to the}} well-known BSD license, however the ZPL also adds clauses prohibiting trademark use and requiring documentation of all changes.|$|E
50|$|Later, Mr. Kurian {{served as}} a Senior Vice President of Oracle's Server Technologies Division {{responsible}} for the development and delivery of Oracle Application Servers. He {{played a key role}} in bringing Oracle 9i application server to market. <b>Application</b> <b>server</b> <b>software</b> became Oracle's fastest-growing business primarily because of his efforts.|$|E
50|$|An <b>application</b> <b>server</b> is a <b>software</b> {{framework}} that provides both facilities to create web <b>applications</b> and a <b>server</b> environment to run them.|$|R
25|$|In July 2013, <b>application</b> and <b>server</b> {{management}} <b>software</b> provider Idera Software acquired Precise. Idera CEO Randy Jacops assumed {{leadership of}} the company.|$|R
40|$|Reengineering {{a legacy}} J 2 EE <b>application</b> <b>server</b> {{makes it easier}} to deploy and reconfigure, {{especially}} in distributed environments. Java 2 Enterprise Edition <b>application</b> <b>servers</b> are complex <b>software</b> systems, usually implemented as assemblies of wrapped legacy parts, with each part providing a particular service. For example, JOnA...|$|R
50|$|The {{software}} is built in distinct modules for each distinct area of traffic / transport control and monitoring. The workstation software communicates to the <b>application</b> <b>server</b> <b>software</b> via a publisher / subscriber model (i.e. workstations subscribe to specifically requested streams of data which are {{published by the}} application server).|$|E
50|$|Kiva Software was {{the leading}} {{provider}} and pioneer of internet <b>application</b> <b>server</b> <b>software.</b> Kiva Software released the industry's first application server in January 1996, offering companies a robust platform on which to develop and deploy transaction-oriented business applications on the Web. Kiva's customers included Bank of America, E-Trade, Travelocity, Internet Shopping Network, Hong Kong Telecom and Pacific Bell Internet.|$|E
5000|$|In 1995, Lim founded Kiva Software, {{a leading}} {{provider}} and pioneer of <b>application</b> <b>server</b> <b>software.</b> In 1996, Kiva Software released the industry's first application server to critical acclaim. In 1997, it won PC Week's Best of Comdex award for [...] "Best Internet Software" [...] at Comdex, and {{was selected as}} one of the industry's top privately held technology companies by Red Herring, Computerworld, and Data Communications magazine. In 1997, Kiva Software was acquired by Netscape Communications. After the acquisition, Lim served as Vice President and General Manager of Netscape's Application Server and Web Infrastructure Products Division.|$|E
50|$|Netkey is {{a company}} that {{provides}} applications and management software for self-service kiosks and digital signage. The Netkey software suite consists of packaged applications, an integrated development environment (IDE) for the assembly of kiosk <b>applications,</b> and <b>server</b> <b>software</b> providing kiosk and digital signage remote monitoring, content management and scheduling, data and usage capture, and reporting. The company also has a professional services group that provides business consulting, software configuration and installation, customization, and application design.|$|R
40|$|Linux {{is one of}} {{the great}} success stories of open-source, community-developed software. It is {{increasingly}} used as Web and <b>application</b> <b>servers,</b> <b>software</b> development platforms, personal workstations, and research machines. In computer science and engineering departments, you’ll find Linux systems in classrooms, programming labs, and computer centers, not just because Linux is free, but also because it offers a rich computing environment for teaching and learning. From its beginning in 1991, and with help from the GNU Project, Linux has evolved quickly and has brought new powers and conveniences to users. Competency on Linux will be important for any serious computer professional. This book provides a comprehensive and up-to-date guide to Linux concepts, usage, and programming. The text helps you master Linux with a wellselected set of topics. Hands-on practice is encouraged; it is the only way to gain familiarity with an operating system. A primer gets you started quickly. The chapters lead you from user interfaces, commands and filters, Shell scripting, the file system, networking, to kernel system calls. There are many example...|$|R
40|$|International audienceWe {{describe}} a new interactive system using a social learning platform to provide dormitory {{students with the}} ability to communicate with teachers/advisors in a timely manner to promote self-active awareness of the dormitory environment. Our system comprises tablet PCs, cloud computing services, and <b>application</b> and <b>server</b> <b>software</b> to enable collaboration over a high-speed wireless local area network that covers the campus, dormitory, and teachers’ homes. The purpose of this system is to facilitate the self-recognition of behavioral problems, raise awareness, and encourage student initiative in a natural manner...|$|R
40|$|ABSTRACT- Analysis of {{reliability}} and availability of web-based software system is proposed using fuzzy technique. The analysis is useful to predict reliability of a web-based software system {{on the basis of}} software failure and repair rates in <b>application</b> <b>server</b> <b>software</b> system, router software system and clustered architecture system. 1...|$|E
40|$|This paper {{gives out}} a PUB/SUB-based <b>application</b> <b>server</b> <b>software,</b> which aims at {{improving}} the coarse granularity of the pushed information in current LBS systems. Taking {{the advantage of}} PUB/SUB system's asynchronous, loosely-coupled and multiplex communication mechanism, the server software pushes LBS information with its granularity refined. By combining position information and the PUB/SUB paradigm, users can easily focus on his points of interest. In this paper, three message formats, which {{are used in the}} communication between client app and server, are introduced and overall architecture is presented. Furthermore, in order to support indoor and outdoor service, a positioning middleware is also applied. The process of subscription matching utilizes a hash table to speed up the rate. Experimental result shows that the software could offer an efficient service to users. © 2012 IEEE. Shanghai University; Shanghai University of Engineering Sciences; University of KentuckyThis paper gives out a PUB/SUB-based <b>application</b> <b>server</b> <b>software,</b> which aims at improving the coarse granularity of the pushed information in current LBS systems. Taking the advantage of PUB/SUB system's asynchronous, loosely-coupled and multiplex communication mechanism, the server software pushes LBS information with its granularity refined. By combining position information and the PUB/SUB paradigm, users can easily focus on his points of interest. In this paper, three message formats, which are used in the communication between client app and server, are introduced and overall architecture is presented. Furthermore, in order to support indoor and outdoor service, a positioning middleware is also applied. The process of subscription matching utilizes a hash table to speed up the rate. Experimental result shows that the software could offer an efficient service to users. © 2012 IEEE...|$|E
40|$|As an {{open-source}} operating system, Linuxe made {{an impressive}} {{mark in the}} history of computing when interest from the corporate IT industry soared toward the end of 1990 s. Linux, however, still faces some challenges in the areas of high performance, especially on symmetrical multiprocessor systems. This paper describes an initiative to investigate Linux performance using IBM WebSpheret <b>Application</b> <b>Server</b> <b>software.</b> The primary goal was to study how Linux performance and scalability could be improved by applying some of the new enhancements put into the kernel as well as by fine-tuning the middleware. We describe the results of this investigation and explain in detail how issues were resolved through our collaboration with the open-source community as well as within the IBM product teams. Linux* * {{has come a long way}} since it was first introduced in 1991. It is undoubtedly one of the most successful open-source programs in the market today. Two of its strong points are its costeffectiveness and its availability on many hardwar...|$|E
50|$|The Sun Netra brand {{has been}} used for a variety of server {{computers}} from Sun Microsystems since 1994. The original Netra servers (such as the Netra i and Netra j models) were re-badged SPARCstation and Sun Ultra series systems bundled with (web) <b>server</b> <b>application</b> <b>software.</b>|$|R
50|$|<b>Application</b> <b>servers</b> are system <b>software</b> {{upon which}} web {{applications}} or desktop <b>applications</b> run. <b>Application</b> <b>servers</b> consist of web server connectors, computer programming languages, runtime libraries, database connectors, {{and the administration}} code needed to deploy, configure, manage, and connect these components on a web host. An <b>application</b> <b>server</b> runs behind a web Server (e.g. Apache or Microsoft Internet Information Services (IIS)) and (almost always) {{in front of an}} SQL database (e.g. PostgreSQL, MySQL, or Oracle). Web applications are computer code which run atop <b>application</b> <b>servers</b> and are written in the language(s) the <b>application</b> <b>server</b> supports and call the runtime libraries and components the <b>application</b> <b>server</b> offers.|$|R
40|$|Modern systems rely on Address-Space Layout Ran-domization (ASLR) and Data Execution Prevention (DEP) {{to protect}} {{software}} against memory corruption vulnera-bilities. The security of ASLR depends on randomizing regions in memory {{which can be}} broken by leaking ad-dresses. While information leaks are common for client <b>applications,</b> <b>server</b> <b>software</b> has been hardened to reduce such information leaks. Memory deduplication is a common feature of Virtual Machine Monitors (VMMs) that reduces the memory footprint and increases the cost-effectiveness of virtual machines (VMs) running on the same host. Memory pages with the same content are merged into one read-only memory page. Writing to these pages is expensive due to page faults caused by the memory protection, and this cost can be used by an attacker as a side-channel to detect whether a page has been shared. Leveraging this memory side-channel, we craft an attack that leaks the address-space layouts of the neighboring VMs, and hence, defeats ASLR. Our proof-of-concept exploit, CAIN (Cross-VM ASL INtrospection) defeats ASLR of a 64 -bit Windows Server 2012 victim VM in less than 5 hours (for 64 -bit Linux victims the attack takes several days). Further, we show that CAIN reliably defeats ASLR, regardless of the number of victim VMs or the system load. ...|$|R
40|$|Client-server {{architecture}} {{is a well}} documented and popular approach to design of distributed systems. A server that provides a set of services (applications) to various clients is called an application server; such servers have {{a common set of}} needs to fulfil their role. These needs are addressed by providing a software package that encapsulates many of these areas of functionality into one bundle. Many different software bundles exist, but probably the most renowned ones are Red Hat’s JBoss, IBM’s WebSphere, Oracle’s Oracle Application Server and BEA WebLogic. Almost every enterprise application is required to persist various data beyond the execution time frame, being customer information, product information or whatever data is needed to provide certain functionality over time. A typical application server consists of an application server frontend which hosts a number of enterprise applications that does all communication with the clients and a backend database which ensures persistent data. The work of mapping relational data (relational databases store data in relations, much different from the object oriented approach commonly used in applications today) to objects within the enterprise applications running on the application server is tedious and error prone, this mapping is provided by the <b>application</b> <b>server</b> <b>software</b> bundle to ease development of enterprise applications. Sun provides JavaEE (Java Enterprise Edition version 5) as a framework for developing server side applications. One of the major parts of Java Enterprise Edition is Enterprise Java Beans (EJB) specification. EJB is a framework aiding developers in creating frontend interfaces for the clients (called session beans) and classes representing persistent data (called entity beans). These classes are plain old java objects (POJO) with annotations that define how the application server should handle these classes (more on this in sections 2. 2 and 2. 3). Web services is a new communication standard between server and client and is based on XML as data representation language and WSDL as definition language. The server publishes via WSDL what services it can provide and the client can connect to the web service endpoint to utilize this service. Web services have gained broad acceptance as the new standard for language neutral software communication. This thesis will focus on a detailed analysis of a Java EE software stack with primary focus on the persistence and object relational mapping section. To achieve this, a system that mimics the TPC-App (Transaction Processing Performance Council, 2005) specification will be used (see section 3. 1 for further details) ...|$|E
50|$|An {{information}} server is an integrated software platform {{consisting of a}} set of core functional modules that enables organizations to integrate data from disparate sources and deliver trusted and complete information, at the time it is required and in the format it is needed. Similar to how an <b>application</b> <b>server</b> is a <b>software</b> engine that delivers applications to client computers, an {{information server}} delivers consistent information to consuming applications, business processes and portals.|$|R
50|$|NSAPI can be {{compared}} to an earlier protocol named Common Gateway Interface (CGI). Like CGI, NSAPI provides a means of interfacing application software with a web server. Unlike CGI programs, NSAPI plug-ins run inside the server process. Because CGI programs run outside of the server process, CGI programs are generally slower than NSAPI plug-ins. However, running outside of the server process can improve server reliability by isolating potentially buggy <b>applications</b> from the <b>server</b> <b>software</b> and from each other.|$|R
40|$|A {{large number}} of CPUs {{connected}} to the Internet are idle almost all the time. These CPUs can help solving computationally difficult problems like the discrete logarithm problem. The goal of this thesis {{is to improve the}} work of Christoph Schwank towards a volunteer computing application which participates at the Certicom ECC Challenge. We decided to switch towards Koblitz curves since the ECC 2 K- 130 seems to be the next simplest challenge to solve. This switch and the poor performance of Crypto++ [7] which was used before resulted in a complete rewrite of the client <b>application.</b> Our <b>server</b> <b>software</b> consists of the BOINC [6] framework enhanced with distributed checking which prevent selfish behavior of participants with almost no additional resources used on clien...|$|R
5000|$|Microsoft's web <b>server</b> <b>application</b> <b>software</b> {{is called}} Internet Information Services, {{which is made}} up of a number of [...] "sub-applications" [...] and is very configurable. ASP.NET is one such slice of IIS, {{allowing}} a programmer to write web applications in his or her choice of programming language (VB.NET, C#, F#) that's supported by the Microsoft [...]NET CLR. ISAPI is a much lower-level programming system, giving much better performance, at the expense of simplicity.|$|R
40|$|We {{describe}} a distributed high-performance compute server {{that has been}} implemented for running compute-intensive applications on a mixture of HPC systems interconnected by Inter- and Intranet. With a practical industrial background, our work focusses on high availability, efficient job load-balancing, security, and the easy integration of HPC computing into the daily work-flow at pharmaceutical companies. The work {{was done in the}} course of the ESPRIT project Phase (A Distributed Pharmaceutical <b>Application</b> <b>Server).</b> The client <b>software</b> is implemented in Java. All results are displayed in a web browser and can be forwarded to the next stage of applications used in the drug design cycle. The <b>server</b> <b>software</b> handles the job load-balancing between the participating HPC nodes and is capable of managing multi-site applications. Our environment currently supports four key applications that are used in rational drug design and drug target identification. They range from the automatic functiona [...] ...|$|R
50|$|The first IM service {{based on}} XMPP was Jabber.org, which has {{operated}} continuously and offered free accounts since 1999. From 1999 until February 2006, the service used jabberd as its <b>server</b> <b>software,</b> {{at which time}} it migrated to ejabberd (both of which are free <b>software</b> <b>application</b> <b>servers).</b> In January 2010, the service migrated to the proprietary M-Link <b>server</b> <b>software</b> produced by Isode Ltd.|$|R
50|$|The Netscape <b>Server</b> <b>Application</b> Programming Interface (NSAPI) is an {{application}} programming interface for extending <b>server</b> <b>software,</b> typically web <b>server</b> <b>software.</b>|$|R
40|$|This thesis {{deals with}} the {{development}} of an information system intended for real-time tracking of people or objects using GPS satellite system positioning. Two main parts of the system are a dedicated device, capable of obtaining the location and communicating with other components over GPRS, and an information system. The thesis presents the development of software used by the dedicated device and also the software that manages the remote <b>application</b> <b>server.</b> The main part of the thesis is divided into the hardware and the software section. The core part of the dedicated device is a Telit GSM module, whose task is to obtain information about longitude, latitude and transfer data to the remote <b>application</b> <b>server.</b> All <b>software</b> on the dedicated device is written in the higher-level language Python. On {{the other side of the}} system is a <b>server</b> <b>application</b> that receives data through a REST interface and stores it using Microsoft SQL Server Express. It also provides a user interface that displays visual representation of the whereabouts in real time using Bing Maps. From the software point of view the server-based applications are programmed using. Net platform and C# language, while the part of the system that handles information visualization is done with Java Script...|$|R
50|$|In 1999, America Online (AOL) {{acquired}} Netscape {{in a stock}} swap {{valued at}} US$10 billion, and formed a partnership with Sun Microsystems. As part of the three-way deal, Sun Microsystems licensed Netscape's <b>server</b> <b>software</b> for $350 million over three years. The Sun-Netscape alliance rolled out a new brand name, iPlanet, which was used for all the server products. The Netscape <b>Application</b> <b>Server</b> {{was chosen as the}} code base for the iPlanet <b>Application</b> <b>Server,</b> even though there had been talk that the iPlanet <b>Application</b> <b>Server</b> would be a combination of both Netscape <b>Application</b> <b>Server</b> and NetDynamics <b>Application</b> <b>Server.</b> NetDynamics, a former competitor of Kiva Software, had been acquired by Sun in 1998, prior to the Sun-Netscape alliance.|$|R
50|$|In 2002, the Berkeley Open Infrastructure for Network Computing (BOINC) {{project was}} founded at University of California, Berkeley Space Sciences Laboratory, {{funded by the}} National Science Foundation. BOINC {{provides}} a complete middleware system for volunteer computing, including a client, client GUI, <b>application</b> runtime system, <b>server</b> <b>software,</b> and software implementing a project web site. The first project based on BOINC was Predictor@home, based at the Scripps Research Institute, which began operation in 2004. Soon thereafter, SETI@home and ClimatePrediction.net began using BOINC. A number of new BOINC-based projects were created {{over the next few}} years, including Rosetta@home, Einstein@home, and AQUA@home. In 2007, IBM World Community Grid switched from the United Devices platform to BOINC.|$|R
40|$|This thesis {{deals with}} the study of {{existing}} frameworks for creating client-side applications, the Java platform, FITLayout software and software architecture design with a web interface, implementation of a web application, testing and comparing the functionality of desktop software with web application. Existing frameworks {{for the development of}} client-side applications in JavaScript programming language are described as well as the Java platform focused on creating a web <b>application</b> <b>server</b> component, FITLayout <b>software</b> for segmentation and analysis of documents. Software architecture design providing similar functionality such as existing graphical tools available in FITLayout and important aspects of implementation follows. At the end of the thesis testing of web application is described as well as comparison of desktop FITLayout software and web application that was implemented...|$|R
