66|730|Public
5000|$|Wrexham & Shropshire {{joint venture}} open <b>access</b> <b>operation</b> (50% shareholding). Ran {{services}} between Wrexham and London, ceased January 2011 {{due to lack}} of profitability ...|$|E
5000|$|We have bound {{the number}} of {{preferred}} child changes at , so if we can show that each preferred child change has cost O(1) amortized we can bound the <b>access</b> <b>operation</b> at [...] This is done using the potential method.|$|E
50|$|Locking (e.g., Two-phase locking - 2PL) - Controlling {{access to}} data by locks {{assigned}} to the data. Access of a transaction to a data item (database object) locked by another transaction may be blocked (depending on lock type and <b>access</b> <b>operation</b> type) until lock release.|$|E
50|$|Another way {{to reduce}} {{restructuring}} is to do full splaying, but only {{in some of the}} <b>access</b> <b>operations</b> - only when the access path is longer than a threshold, or only in the first m <b>access</b> <b>operations.</b>|$|R
5000|$|... #Subtitle level 3: Out-of-order {{execution}} and memory <b>access</b> <b>operations</b> ...|$|R
5000|$|... #Caption: A {{reference}} to Tailored <b>Access</b> <b>Operations</b> in an XKeyscore slide ...|$|R
50|$|Following the {{purchase}} of Arriva by Deutsche Bahn in August 2010, Arriva UK Trains expanded to taking over Deutsche Bahn's existing DB Regio UK division which consisted of Chiltern Railways, DB Regio Tyne & Wear, a 50% shareholding in the now closed Wrexham & Shropshire open <b>access</b> <b>operation</b> and a 50% shareholding in London Overground Rail Operations.|$|E
50|$|Two-phase locking is {{the most}} common {{transaction}} concurrency control method in DBMSs, used to provide both serializability and recoverability for correctness. In order to access a database object a transaction first needs to acquire a lock for this object. Depending on the <b>access</b> <b>operation</b> type (e.g., reading or writing an object) and on the lock type, acquiring the lock may be blocked and postponed, if another transaction is holding a lock for that object.|$|E
50|$|Splaying, as {{mentioned}} above, is performed during a second, bottom-up {{pass over the}} access path of a node. It is possible to record the access path during the first pass for use during the second, but that requires extra space during the <b>access</b> <b>operation.</b> Another alternative is to keep a parent pointer in every node, which avoids the need for extra space during access operations but may reduce overall time efficiency {{because of the need}} to update those pointers.|$|E
5000|$|... {{retaining}} the existing market structure, but with significantly increased open <b>access</b> <b>operations</b> ...|$|R
5000|$|Collection overseas, which {{falls under}} the {{responsibility}} of the Global <b>Access</b> <b>Operations</b> (GAO) division.|$|R
5000|$|Hacking operations, which {{falls under}} the {{responsibility}} of the Tailored <b>Access</b> <b>Operations</b> (TAO) division.|$|R
50|$|When system {{behavior}} varies {{considerably in}} normal operation, multiple control laws {{may have to}} be devised. Each distinct control law addresses a specific system behavior mode. An example is a computer hard disk drive. Separate robust control system modes are designed in order to address the rapid magnetic head traversal operation, known as the seek, a transitional settle operation as the magnetic head approaches its destination, and a track following mode during which the disk drive performs its data <b>access</b> <b>operation.</b>|$|E
50|$|With using fat node method, it {{requires}} O(1) space for every modification: just store the new data. Each modification takes O(1) additional time {{to store the}} modification {{at the end of}} the modification history. This is an amortized time bound, assuming we store the modification history in a growable array. For access time, we must find the right version at each node as we traverse the structure. If we made m modifications, then each <b>access</b> <b>operation</b> has O(log m) slowdown resulting from the cost of finding the nearest modification in the array.|$|E
5000|$|In {{computer}} science, Iacono's working set structure [...] is {{a comparison}} based dictionary. It supports insertion, deletion and <b>access</b> <b>operation</b> {{to maintain a}} dynamic set of [...] elements. The working set of an item [...] is the set of elements that have been accessed in the structure {{since the last time}} that [...] was accessed (or inserted if it was never accessed).Inserting and deleting in the working set structure takes [...] time while accessing an element [...] takes [...] Here, [...] represents the size of the working set of [...]|$|E
5000|$|Tailored <b>Access</b> <b>Operations</b> a {{division}} of the NSA that deals with hacking and cyberwarfare ...|$|R
50|$|An article {{published}} by Ars Technica shows NSA's Tailored <b>Access</b> <b>Operations</b> (TAO) employees intercepting a Cisco router.|$|R
5000|$|... #Caption: The NSA's {{listing of}} its Tailored <b>Access</b> <b>Operations</b> program named IRATEMONK from the NSA ANT catalog.|$|R
50|$|A free {{update to}} the game, Operation Hydra was {{released}} August 29. The update added new missions and achievements, {{the ability to}} buy certain power weapons with XP rather than real currency, {{and support for the}} Xbox 360 controller. A demo version of the game, featuring a tutorial and single mission, was released on August 30. Upon launch of the update, a cloud save issue was encountered for the Windows 8 version of the game, which prevented players from accessing their save files. On August 31, 2013, an update was released which fixed this issue, allowing players to <b>access</b> <b>Operation</b> Hydra without having to replay the entirety of the campaign.|$|E
50|$|An {{alternative}} way to {{keep the}} number of updates bound relatively to the container size would be to use a kind of handle mechanism, that is a collection of indirect pointers to the container's elements that must be updated with the container, and let the iterators point to these handles instead of directly to the data elements. But this approach will negatively impact the iterator performance, since it must effectuate a double pointer following to access the actual data element. This is usually not desirable, because many algorithms using the iterators invoke the iterators data <b>access</b> <b>operation</b> more often than the advance method. It is therefore especially important to have iterators with very efficient data access.|$|E
50|$|Concurrency control {{comprises}} {{the underlying mechanisms}} in a DBMS which handle isolation and guarantee related correctness. It is heavily used by the database and storage engines (see above) both to guarantee the correct execution of concurrent transactions, and (different mechanisms) the correctness of other DBMS processes. The transaction-related mechanisms typically constrain the database data access operations' timing (transaction schedules) to certain orders characterized as the serializability and recoverability schedule properties. Constraining database <b>access</b> <b>operation</b> execution typically means reduced performance (rates of execution), and thus concurrency control mechanisms are typically designed {{to provide the best}} performance possible under the constraints. Often, when possible without harming correctness, the serializability property is compromised for better performance. However, recoverability cannot be compromised, since such typically results in a quick database integrity violation.|$|E
40|$|A {{model of}} {{database}} storage and access is presented. The model represents many evaluation algorithms as special cases, {{and helps to}} break a complex algorithm into simple <b>access</b> <b>operations.</b> Generalized <b>access</b> cost equations associated with the model are developed and analyzed. Optimization of these cost equations yields an optimal access algorithm which can be synthesized by a query subsystem whose design {{is based on the}} modular <b>access</b> <b>operations...</b>|$|R
30|$|DTrace’s {{data access}} trace {{generation}} interfaces require the programmer {{to mark the}} store and load operations. An alternative is to specify the security-critical data itself. However, tracing still works on data <b>access</b> <b>operations</b> and marking the variables requires a fully automatic alias analysis on the protected variables. DTrace focuses on the data integrity enforcement rather than security-critical identification. In fact, DTrace is orthogonal to static alias analysis techniques (Wang et al. 2017; Kuznetsov et al. 2014; Mashtizadeh et al. 2015). The analysis results specify {{a complete set of}} data <b>access</b> <b>operations</b> where DTrace’s interfaces suit well. Nevertheless, we discuss the case of function pointer integrity enforcement in “Evaluations” section which relies on an automatic analysis to identify all function pointer <b>access</b> <b>operations.</b>|$|R
5000|$|Index {{concurrency}} control - Synchronizing <b>access</b> <b>operations</b> to indexes, {{rather than to}} user data. Specialized methods provide substantial performance gains.|$|R
50|$|As is {{commonly}} {{the case with}} such school fires, many student works (notably Visual and Industrial arts HSC projects) were destroyed, causing considerable distress among affected students. Also {{as a result of}} this fire, many portable classrooms were set up for a number of years, near the main oval and where the COLA (Covered Outdoor Learning Area) is now situated. It is estimated that for at least 3 years there could have been up to 20-25 portables (this has not been confirmed). What we do know is that in 2005, the number of portables decreased, down to eight. In 2006, after the completion of the COLA and the new TAS/VA block, four of these were removed. Now (as of April 2009) these four remain. Three of these are used by English mainly. The other one is used for Special Education, as it has wheelchair <b>access.</b> <b>Operation</b> Phoenix Rising oversaw the completion of the rebuilding effort to be completed in 2012.|$|E
50|$|A {{specific}} component of anti-virus and anti-malware software, {{commonly referred to}} as an on-access or real-time scanner, hooks deep into the operating system's core or kernel and functions {{in a manner similar to}} how certain malware itself would attempt to operate, though with the user's informed permission for protecting the system. Any time the operating system accesses a file, the on-access scanner checks if the file is a 'legitimate' file or not. If the file is identified as malware by the scanner, the <b>access</b> <b>operation</b> will be stopped, the file will be dealt with by the scanner in a pre-defined way (how the anti-virus program was configured during/post installation), and the user will be notified. This may have a considerable performance impact on the operating system, though the degree of impact is dependent on how well the scanner was programmed. The goal is to stop any operations the malware may attempt on the system before they occur, including activities which might exploit bugs or trigger unexpected operating system behavior.|$|E
5000|$|Strong strict two {{phase locking}} (SS2PL) {{is a common}} {{mechanism}} utilized in database systems since their early days in the 1970s (the [...] "SS" [...] in the name SS2PL is newer though) to enforce both conflict serializability and strictness (a special case of recoverability which allows effective database recovery from failure) of a schedule. In this mechanism each datum is locked by a transaction before accessing it (any read or write operation): The item is marked by, associated with a lock of a certain type, depending on operation (and the specific implementation; various models with different lock types exist; in some models locks may change type during the transaction's life). As a result, access by another transaction may be blocked, typically upon a conflict (the lock delays or completely prevents the conflict from being materialized and {{be reflected in the}} precedence graph by blocking the conflicting operation), depending on lock type and the other transaction's <b>access</b> <b>operation</b> type. Employing an SS2PL mechanism means that all locks on data on behalf of a transaction are released only after the transaction has ended (either committed or aborted).|$|E
30|$|This {{equation}} {{can be used}} {{to compute}} individually yLimfor identical arithmetic, identical read memory access or identical write memory <b>access</b> <b>operations.</b>|$|R
50|$|In an {{interview}} with Wired magazine, Edward Snowden said the Tailored <b>Access</b> <b>Operations</b> division accidentally caused Syria's internet blackout in 2012.|$|R
5000|$|JDBaccess is a Java {{persistence}} {{library for}} MySQL and Oracle which defines major database <b>access</b> <b>operations</b> {{in an easy}} usable API above JDBC ...|$|R
3000|$|... for {{the maximum}} {{activity}} descriptor. The activity images' binary nature significantly mitigates this large storage requirement, but a conventional high-level implementation still {{suffers from the}} number of required memory <b>access</b> <b>operation.</b> A solution {{can be found in the}} following writing of (14): [...]...|$|E
30|$|We {{present an}} {{acoustic}} location system that adopts {{the time of}} arrival of the path of maximum amplitude as a signature and estimates the target position through nonparametric kernel regression. The system was evaluated in experiments for two main configurations: a privacy-oriented configuration with code division multiple <b>access</b> <b>operation</b> and a centralized configuration with time division multiple <b>access</b> <b>operation.</b> The effects of the number and positions of sources {{on the performance of}} the privacy-oriented system was studied. Moreover, the effect of the number of fingerprint positions on the performance of both systems was investigated. Results showed that our privacy-oriented scheme provides an accuracy of 8.5 cm with 87 % precision, whereas our centralized system provides an accuracy of 2.7 cm for 93 % of measurements. A comparison between our privacy-oriented system and another acoustic location system based on code division multiple <b>access</b> <b>operation</b> and lateration was conducted on our test bench and revealed that the cumulative error distribution function of the fingerprint-based system is better than that of the lateration-based system. This result is similar to that found for Wi-Fi radio-based localization. However, our experiments are the first to demonstrate the detrimental effect that reverberation has on naive acoustic localization approaches.|$|E
30|$|We hereby {{show that}} the {{attacker}} cannot bypass the data integrity checking that DTrace provides. First of all, DTrace injects data access recording operations right alongside each data access event by programmer annotation or program analysis. DTrace will not miss any data <b>access</b> <b>operation</b> {{as long as the}} recording coverage is complete.|$|E
5000|$|... {{requires}} no additional, artificial transaction <b>access</b> <b>operations</b> (e.g., [...] "take timestamp" [...] or [...] "take ticket"), which typically result in additional, artificial conflicts that reduce concurrency.|$|R
5000|$|The Tailored <b>Access</b> <b>Operations</b> (TAO) {{division}} of the NSA intercepted the shipping deliveries of computers and laptops in order to install spyware and physical implants on electronic gadgets. This was done in close cooperation with the FBI and the CIA. NSA officials responded to the Spiegel reports with a statement, which said: [...] "Tailored <b>Access</b> <b>Operations</b> is a unique national asset {{that is on the}} front lines of enabling NSA to defend the nation and its allies. TAO's work is centred on computer network exploitation in support of foreign intelligence collection." ...|$|R
50|$|In 2002, {{the company}} merged with Singapore's sole cable {{television}} operator, Singapore Cable Vision. As {{a result of}} the merger, it acquired SCV's cable television as well as broadband internet <b>access</b> <b>operations.</b>|$|R
