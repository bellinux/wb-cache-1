3|20|Public
40|$|The paper {{presents}} a constructive fixpoint semantics for autoepistemic logic (AEL). This fixpoint characterizes a unique but possibly three-valued belief set of an <b>autoepistemic</b> <b>theory.</b> It may be three-valued {{in the sense}} that for a subclass of formulas F, the fixpoint may not specify whether F is believed or not. The paper {{presents a}} constructive 3 -valued semantics for autoepistemic logic (AEL). We introduce a derivation operator and define the semantics as its least fixpoint. The semantics is 3 -valued {{in the sense that}}, for some formulas, the least fixpoint does not specify whether they are believed or not. We show that complete fixpoints of the derivation operator correspond to Moore's stable expansions. In the case of modal representations of logic programs our least fixpoint semantics expresses well-founded semantics or 3 -valued Fitting-Kunen semantics (depending on the embedding used). We show that, computationally, our semantics is simpler than the semantics proposed by Moore (assuming that the polynomial hierarchy does not collapse). Comment: Proceedings of the Fifteenth National Conference on Artificial Intelligence (AAAI- 98), pages 840 [...] 845, (MIT Press, 1998...|$|E
40|$|An {{important}} {{problem in}} nonmonotonic reasoning is deciding what the precise beliefs of an agent might be, given an incomplete specification. The {{notion of a}} stable expansion of an <b>autoepistemic</b> <b>theory</b> {{is a way of}} capturing this. As autoepistemic logic is not a logic per se, to actually find the stable expansions, one cannot do this on the object level, but has to use an algorithm involving meta-concepts like set inclusion. Levesque's "Only knowing" logic can be used to represent autoepistemic theories, with the benefit of finding the expansions within the logic, on the object level. Waaler's logic Æ generalizes this logic, adding confidence levels. We show how a generalization of stable expansions can be found, strictly using equivalences in Æ, thus providing a rewriting procedure. In Ch. 2, we introduce Æ and the related Æ_ρ. In Ch. 3, we give three rewriting procedures for the case when there is only one confidence level. In Ch. 4 we give a rewriting procedure for the general case with multiple confidence levels. In Ch. 5 we examine the complexity of the problem of deciding whether expansions exist, and give an algorithm for generating them...|$|E
40|$|Abstract. Autoepistemic {{logic is}} one of the principa ~ modes of nonmonotonic {{reasoning}}. It umties several other modes of nonmonotonic reasoning and has important applications in logic programming. In the paper, a theory of autoepisternic logic is developed. This paper starts with a brief survey of some of the previously known results. Then, the nature of nonmonotonicity is studied by investigating how membership of autoepistemic statements in autoepistemic theories depends on the underlying objective theory. A notion similar to set-theoretic forcing is introduced. Expansions of autoepistemic theories are also investigated. Expansions serve as sets of consequences of an <b>autoepistemic</b> <b>theory</b> and they {{can also be used to}} define semantics for logic programs with negation. Theories that have expansions are characterized, and a normal form that allows the description of all expansions of a theory N introduced. Our results imply algorithms to determine whether a theory has a unique expansion. Sufficient conditions (stratification) that imply existence of a unique expansion are discussed. The definition of stratitied theories is extended and (under some additional assumptions) efficient algorithms for testing whether a theory is stratified are proposed. The theorem characterizing expansions is applied to two classes of theories, K 1 -theories and se-programs. In each case, simple hypergraph characterization of expansions of theories from each of these classes is given. Finally, connections with stable model semantics for logic programs with negation is discussed. In particular, it is proven that the problem of existence of stable models is NP-complete...|$|E
40|$|Circumscription on the {{one hand}} and autoepistemic and default logics on the other seem to have quite {{different}} characteristics as formal systems, which makes it difficult to compare them as formalizations of defeasible connmonsense reasoning. In this paper we accomplish two tasks: (1) we extend the original semantics of autoepistemic logic to a language which includes variables quantified into the context of the autoepistemic operator, and (2) we show that a certain class of <b>autoepistemic</b> <b>theories</b> in the extended language has a minimal-model semantics corresponding to circumscription. We conclude that all of the first-order consequences of parallel predicate circumscription can be obtained from this class of <b>autoepistemic</b> <b>theories.</b> The correspondence we construct also sheds light on the problematic treatment of equality in circumscription. ...|$|R
40|$|The {{ability to}} "define" propositions using default {{assumptions}} about the same propositions is identied {{as a source of}} additional computational complexity in nonmonotonic reasoning. If such constructs are not allowed, i. e. the knowledge base is stratified, a significant computational advantage is obtained. This is demonstrated by developing an iterative algorithm for propositional stratified <b>autoepistemic</b> <b>theories</b> the complexity of which is dominated by required classical reasoning. Thus efficient subclasses of stratified nonmonotonic reasoning can be obtained by further restricting the form of sentences in the knowledge base. As an example we derive quadratic and linear time algorithms for specific subclasses of stratified <b>autoepistemic</b> <b>theories.</b> The results are shown to imply efficient reasoning methods for stratified cases of default logic, logic programs, truth maintenance systems, and nonmonotonic modal logics...|$|R
40|$|A sequent {{calculus}} for skeptical consequence in infinite <b>autoepistemic</b> <b>theories</b> {{is presented}} and proved sound and complete. While skeptical consequence is decidable in the finite case, {{the move to}} infinite theories increases the complexity of skeptical reasoning to being Π 1 1 -complete. This implies the need for sequent rules with countably many premises, and such rules are employed...|$|R
40|$|This paper {{investigates the}} problem of finding subclasses of nonmonotonic {{reasoning}} which can be implemented efficiently. The ability to "define" propositions using default assumptions about the same propositions is identified as {{a major source of}} computational complexity in nonmonotonic reasoning. If such constructs are not allowed, i. e. stratied knowledge bases are considered, a significant computational advantage is obtained. This is demonstrated by developing an iterative algorithm for propositional stratified <b>autoepistemic</b> <b>theories</b> the complexity of which is dominated by required classical reasoning. Thus efficient subclasses of stratied nonmonotonic reasoning can be obtained by further restricting the form of sentences in a knowledge base. As an example quadratic and linear time algorithms for specific subclasses of stratified <b>autoepistemic</b> <b>theories</b> are derived. The results are shown to imply efficient reasoning methods for stratied cases of default logic, logic programs, truth maintenance systems, and nonmonotonic modal logics...|$|R
40|$|ABSTRACT. This paper {{investigates the}} problem of finding subclasses of nonmonotonic {{reasoning}} which can be implemented efficiently. The ability to “define” propositions using default assumptions about the same propositions is identified as {{a major source of}} computational complexity in nonmonotonic reasoning. If such constructs are not allowed, i. e. stratified knowledge bases are considered, a significant computational advantage is obtained. This is demonstrated by developing an iterative algorithm for propositional stratified <b>autoepistemic</b> <b>theories</b> the complexity of which is dominated by required classical reasoning. Thus efficient subclasses of stratified nonmonotonic reasoning can be obtained by further restricting the form of sentences in a knowledge base. As an example quadratic and linear time algorithms for specific subclasses of stratified <b>autoepistemic</b> <b>theories</b> are derived. The results are shown to imply efficient reasoning methods for stratified cases of default logic, logic programs, truth maintenance systems, and nonmonotonic modal logics. KEY WORDS: automated theorem proving, tractability, autoepistemic logic, default logic, nonmonotonic modal logics, logic programs, truth maintenance systems. 1...|$|R
40|$|This paper investigates {{separated}} {{autoepistemic logic}} {{which is a}} generalization of Moore's autoepistemic logic with separate modalities for belief and disbelief. Along the separation of beliefs and disbeliefs, the relationship between autoepistemic logic and default logic becomes very intuitive. Straightforward ways of translating default <b>theories</b> into separated <b>autoepistemic</b> <b>theories</b> and back are presented. These translations are shown to preserve a variety of semantics of default theories such as those based on default extensions, weak extensions and stationary extensions. These classes of extensions are captured by their analogs in separated autoepistemic logic, and vice versa. A particular novelty of the approach is that a reasonable notion of separated stationary expansions can be established...|$|R
40|$|This paper {{addresses}} {{the relationship of}} Reiter's default logic, Moore's autoepistemic logic as well as Marek and Truszczynski's strong autoepistemic logic from a new point of view. Earlier research results on their interconnection {{support the view that}} default reasoning is a special case of autoepistemic reasoning. To the contrary, this paper shows how <b>autoepistemic</b> <b>theories</b> can be faithfully translated into default <b>theories.</b> Consequently, <b>autoepistemic</b> reasoning can be seen a form of default reasoning. This indicates together with the previous research results that autoepistemic logic and default logic are of equal generality. As a practical application of the presented translation, it is demonstrated how default decision procedures can be systematically used as autoepistemic decision procedures...|$|R
40|$|It is {{well known}} that it is {{possible}} to split certain <b>autoepistemic</b> <b>theories</b> under the semantics of expansions, i. e. to divide such a theory into a number of different “levels”, such that the models of the entire theory can be constructed by incrementally constructing models for each level. Similar results exist for other non-monotonic formalisms, such as logic programming and default logic. In this work, we present a general, algebraic theory of splitting under a £xpoint semantics. Together with the framework of approximation theory, a general £xpoint theory for arbitrary operators, this gives us a uniform and powerful way of deriving splitting results for each logic with a £xpoint semantics. We demonstrate the usefulness of this approach, by applying our results to auto-epistemic logic...|$|R
40|$|We {{investigate}} {{the relationship between}} two epistemic nonmonotonic formalisms: autoepistemic logic and introspective circumscription. Finitely axiomatized <b>autoepistemic</b> <b>theories</b> are shown to be equivalent to the propositional case of introspective circumscription. This theorem {{is applied to the}} problem of relating the usual "minimizing" circumscription to autoepistemic logic. 1 Introduction The aim {{of this paper is to}} {{investigate the}} relationship between two epistemic nonmonotonic formalisms: autoepistemic logic [Moore, 1985] and introspective circumscription [Lifschitz, 1989]. In recent years, we have seen renewed interest in autoepistemic logic, due primarily to its interaction with the concerns of the logic programming community. Defining a declarative semantics of negation as failure has been long considered an important problem in the theory of logic programming. The mathematical apparatus used earlier for this purpose includes predicate completion [Clark, 1978] and iterated f [...] ...|$|R
40|$|Recent {{research}} on applications of nonmonotonic reasoning to the semantics of logic programs demonstrates that some nonmonotonic formalisms are {{better suited for}} such use than others. Circumscription is applicable {{as long as the}} programs under consideration are stratified. To describe the semantics of general logic programs without the stratification assumption, one has to use autoepistemic logic or default logic. When Gelfond and Lifschitz extended this work to programs with classical negation, they used default logic, because it was not clear whether autoepistemic logic could be applied in that wider domain. In this paper we show that programs with classical negation can be, in fact, easily represented by <b>autoepistemic</b> <b>theories.</b> We also prove that an even simpler embedding is possible if reflexive autoepistemic logic is used. Both translations are applicable to disjunctive programs as well. 1 Introduction Recent {{research on}} applications of nonmonotonic reasoning to the semantics of [...] ...|$|R
40|$|Existing formalisations of {{inductive}} definitions in constructive mathematics {{are reviewed}} and strong correspondences with LP under least model and perfect model semantics become apparent. I point to fundamental restrictions of these existing formalisations {{and argue that}} the well-founded semantics overcomes these problems and hence, provides a superior formalisation {{of the principle of}} inductive definition. I point to fundamental differences between this knowledge theoretic interpretation of LP and the more commonly known interpretations of LP as default <b>theories</b> or <b>autoepistemic</b> <b>theories.</b> 1 Introduction With the completion semantics [5], Clark aimed at formalising the meaning of a logic program as a set of definitions. To that aim, he maps a logic program to a set of First Order Logic (FOL) equivalences. Motivated by the research in Nonmonotonic Reasoning, logic programming is currently often seen as a default logic or autoepistemic logic. In [10], Gelfond proposes a semantic [...] ...|$|R
40|$|In {{this paper}} we propose the minimal well-founded {{semantics}} for logic programs with negation based on the fixpoint of the double Gelfond-Lifschitz transformation which overcomes the existing {{problems associated with the}} stable, the well-founded, and the stable class semantics. By representing logic programs as <b>autoepistemic</b> <b>theories,</b> we are able to represent various semantics as simple circumscription formulas KEY WORDS: Logic Program Semantics, Autoepistemic Logic, Circumscription 1 Introduction The fixpoint and the alternating fixpoint, based on the Gelfond-Lifschitz (GL) transformation introduced in [5], have been used to characterize both the stable and the well-founded semantics, two most prominent semantics for logic programs with negation [2, 1]. In fact, an interpretation I is a stable model of program P if and only if it is a fixpoint of the GL-transformation of P and the well-founded semantics is determined by the set of all alternating fixpoints, i. e., fixpoints of the doub [...] ...|$|R
40|$|In {{this paper}} we first {{demonstrate}} {{that all three}} prominent semantics for logic programs can be redefined in terms of alternating fixpoints of the Gelfond-Lifschitz transformation, and then show that the three semantics can be characterized by circumscription of <b>autoepistemic</b> <b>theories.</b> Key words: logic program semantics, autoepistemic logic, circumscription, nonmonotonic reasoning 1 Introduction The well-founded semantics, proposed by Van Gelder, Ross, and Schlipf in 1988 [4], the stable model semantics, proposed by Gelfond and Lifschitz in 1988 [6], and the preferential semantics, proposed by Dung in 1991 [2], are three most prominent semantics proposed for logic programs with negation. 2 Both stable and well-founded semantics can be characterized by the fixpoint and the alternating fixpoint of the Gelfond-Lifschitz (GL) transformation introduced in [6]. In fact, an interpretation I is a stable model of program P {{if and only if}} it is a fixpoint of the GL-transformation of P and [...] ...|$|R
40|$|This {{article was}} {{processed}} using the L a T E X macro package with LLNCS style 21. R. Kowalski and F. Sadri. Logic programs with exceptions. In Warren and Szeredi, editors, 7 th Int. Conf. on LP. MIT Press, 1990. 22. P. Lamarre and Y. Shoham. On knowledge, certainty, and belief (draft). Personal communication {{of the second}} author, Stanford Univ., 1993. 23. V. Lifschitz. Minimal belief and negation as failure. Technical report, Dep. of Computer Science and Dep. of Philisophy, Univ. of Texas at Austin, 1992. 24. V. Lifschitz and G. Schwarz. Extended logic programs as <b>autoepistemic</b> <b>theories.</b> In L. M. Pereira and A. Nerode, editors, 2 nd Int. Ws. on LP & NMR, pages 101 [...] 114. MIT Press, 1993. 25. V. Marek and M. Truszczynski. Reflexive autoepistemic logic and logic programming. In L. M. Pereira and A. Nerode, editors, 2 nd Int. Ws. on LP & NMR, pages 115 [...] 131. MIT Press, 1993. 26. J. Minker. On indefinite databases and the closed world assumption. In M. Ginsberg, editor, Readings in Nonmonotonic Reasoning, pages 326 [...] 333. Morgan Kaufmann, 1987. 27. R. Moore. Semantics considerations on nonmonotonic logic. Artificial Intelligence...|$|R
40|$|This paper {{presents}} {{the relationship between}} disjunctive logic programs and default theories. We first show that Bidoit and Froidevaux's positivist default theory causes {{a problem in the}} presence of disjunctive information in a program. Then we present a correct transformation of disjunctive logic programs into default theories and show a one-to-one correspondence between the stable models of a program and the extensions of its associated default theory. We also extend the results to extended disjunctive programs and investigate their connections with Gelfond et al's disjunctive default <b>theory,</b> <b>autoepistemic</b> logic, and circumscription...|$|R
40|$|Recently, one of {{the authors}} {{introduced}} a simple and yet powerful non-monotonic knowledge representation framework, called the Autoepistemic Logic of Beliefs, AEB. Theories in AEB are called <b>autoepistemic</b> belief <b>theories.</b> Every belief theory T has been shown to have the least static expansion T which is computed by iterating a natural monotonic belief closure operator Ψ T starting from T. This way, the least static expansion T of any belief theory provides its natural non-monotonic semantics which is called the static semantics. It is easy to see that if a belief theory T is finite then the construction of its least static expansion T stops after countably many iterations. However, a somewhat surprising result obtained in this paper shows that the least static expansion of any finite belief theory T is in fact obtained by means of a single iteration of the belief closure operator Ψ T (although this requires T to be of a special form, we also show that T can be always put in th [...] ...|$|R
40|$|In {{the field}} of {{knowledge}} representation and reasoning, many different logics are developed. Often, these logics exhibit striking similarities, either because they emerged from related ideas, or because they use similar underlying fundamental principles. Approximation fixpoint theory (AFT) is an abstract algebraical unifying framework that aims at exposing these principles by formalising them in lattice theory. It has been successfully applied to unify all common semantics of logic programs, autoepistemic logic, default logic, and more recently Dung's argumentation frameworks and abstract dialectical frameworks. In this dissertation, we extend approximation fixpoint theory to expose more underlying principles common to the aforementioned logics. In these domains, researchers have made use of a similar intuition: that facts (or models) {{can be derived from}} the ground up. They typically phrase this intuition by saying, e. g., that the facts should be grounded, or that they should not be unfounded, or that they should be supported by cycle-free arguments. In different domains, semantics that allow ungrounded models have received a lot of criticism. In logic programming for example, this was the case for Clark's completion semantics, which was later improved by perfect model semantics, stable semantics and well-founded semantics. In autoepistemic logic, a similar evolution happened: Moore's expansion semantics turned out to allow self-supporting models; this resulted in the development of many different semantics in attempts {{to get rid of this}} erroneous behaviour. In the first part of this dissertation, we formalise groundedness in approximation fixpoint theory. We study how groundedness relates to other concepts and fixpoints studied in AFT. We apply our abstract theory to the aforementioned domains: we show that our notion of groundedness indeed captures the intuitions that existed in these domains and study complexity of reasoning with grounded models. We study which existing semantics are grounded and which are not. For example, for logic programming, we find that Clark's completion semantics (indeed) is not grounded, while stable and well-founded semantics are grounded. We show that the well-founded model is not just any grounded model: it is the least precise partial grounded model. In the second part of this thesis we define a class of <b>autoepistemic</b> <b>theories</b> for which it is informally clear how to construct the intended model. Unfortunately, existing constructive semantics for autoepistemic logic, in particular, the well-founded semantics, fail to identify this model. In order to overcome this limitation, we propose, algebraically, a new constructive semantics based on the notion of groundedness. Our new construction refines the well-founded model construction and succeeds in identifying the intended model for the class of motivating examples. Furthermore, we show that for this class of examples, our novel construction constructs the unique grounded fixpoint. Summarised, in this dissertation, we continue the work on approximation fixpoint theory by identifying novel concepts occurring in all of the application domains and by refining existing semantics to better capture the intended meaning of a class of theories. status: publishe...|$|R
40|$|We {{introduce}} 3 -valued stable models {{which are}} a natural generalization of standard (2 -valued) stable models. We show that every logic program P {{has at least one}} 3 -valued stable model and that the wellfounded model of any program P [VGRS 90] coincides with the smallest 3 -valued stable model of P. We conclude that the well-founded semantics of an arbitrary logic program coincides with the 3 -valued stable model semantics. The 3 -valued stable semantics is closely related to non-monotonic formalisms in AI. Namely, every program P can be translated into a suitable <b>autoepistemic</b> (resp. default) <b>theory</b> P so that the 3 -valued stable semantics of P coincides with the (3 -valued) autoepistemic (resp. default) semantics of P. Similar results hold for circumscription and CWA. Moreover, it can be shown that the 3 -valued stable semantics has a natural extension to the class of all disjunctive logic programs and deductive databases. Finally...|$|R
40|$|AbstractRecently, one of {{the authors}} {{introduced}} a simple and yet powerful non-monotonic knowledge representation framework, called the Autoepistemic Logic of Beliefs, AEB. Theories in AEB are called <b>autoepistemic</b> belief <b>theories.</b> Every belief theory T has been shown to have the least static expansionT which is computed by iterating a natural monotonic belief closure operatorΨT starting from T. This way, the least static expansion T of any belieftheory provides its natural non-monotonic semantics which is called the static semantics. It is easy to see that if a belief theory T is finite then the construction of its least static expansion T stops after countably many iterations. However, a somewhat surprising result obtained in this paper shows that the least static expansion of any finite belief theory T is in fact obtained by means of a single iteration of the belief closure operator ΨT (although this requires T to be of a special form, we also show that T can be always put in this form). This result eliminates the need for multiple iterations in the computation of static semantics and allows us to replace the fixed-point definition of static semantics by the equivalent explicit and straightforward definition given by T=ΨT(T). The second, closely related result establishes an intriguing relationship between static semantics T and Clark's completions comp(T) of finite belief theories. Here we use a slightly generalized version of comp(T) (see Definition 3. 2). It shows that the static semantics T of T is obtained by augmenting T with the set Bcomp(T) ={BF:F∈comp(T) } thus ensuring that all formulae that belong to Clark's completion comp(T) of T are believed to be true. Both results open the way for a more efficient implementation of static semantics: the first, because only one iteration is needed, and the second because reasoning in a non-standard logic (belief theories under static semantics) can be reduced to classical theorem proving involving Clark's completion...|$|R

