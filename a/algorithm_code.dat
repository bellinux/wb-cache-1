112|4074|Public
50|$|October 2015 was {{the release}} date of EMIGMA 9. A new Fortran {{compiler}} {{was used to}} rebuild the <b>algorithm</b> <b>code</b> for numerical algorithms such as 3D magnetic and gravity inversion, data interpolation and freespace plate simulation, increasing the scale of problems that could be processed and increasing speed by 5 times.|$|E
5000|$|Code golf {{is a type}} of {{recreational}} computer programming competition in which participants strive to achieve the shortest possible source code that implements a certain <b>algorithm.</b> <b>Code</b> golf {{should not be confused with}} sizecoding, a contest to achieve the smallest binary executable code. Playing code golf is known as [...] "golf scripting". Code golf tournaments may also be named with the programming language used (for example Perl golf).|$|E
50|$|On an Intel Core 2 Quad (Q6600) CPU data {{encryption}} speed {{amounts to}} 104 MB/s per core.Crypto-algorithms for the x86 version are implemented in assembly language, the implementation having a {{maximum number of}} optimizations for the Intel Core line of processors, however it performs sufficiently fast on any other processors as well.Almost all possible enhancements to improve the performance have been applied such as the AES <b>algorithm</b> <b>code</b> is being dynamically generated with optimization made for the usage of a particular key.|$|E
40|$|The {{presentation}} outline includes source coding, channel coding, {{source and}} channel coding, results, and acknowledgements. Topics include: project description, in-lab demo of coding gain using swarm based platform, source <b>coding</b> <b>algorithms,</b> Huffman <b>coding,</b> Lempel-Ziv <b>coding</b> <b>algorithm,</b> channel <b>coding,</b> LT codes, source and channel coding, MENSA beta code in an unofficial TENA library, and Wireshark tool...|$|R
30|$|RH led in the {{construction}} of the Estimation & Score <b>algorithm,</b> <b>coding,</b> analysis of the results and writing of the manuscript. EL contributed to {{the construction}} of the Estimation & Score <b>algorithm,</b> <b>coding,</b> analysis of the results, and writing of the manuscript. AB contributed to the analysis of the results, editing of the manuscript, and conception and design of the Estimation & Score algorithm. All authors read and approved the final manuscript.|$|R
50|$|In 2005, {{he was one}} of the top 24 finalists in the <b>Algorithm</b> <b>Coding</b> Competition of the International Topcoder Collegiate Challenge.|$|R
50|$|OpenVanilla {{is still}} in its nascent stage. Currently a {{preliminary}} implementation is done using rapid prototyping techniques and Objective-C++. To make it platform-independent and more accommodating, it needs to re-implemented. Aside from the Objective-C part that pertains mostly to data structure, OpenVanilla's POJ IM module is a pure <b>algorithm</b> <b>code</b> that deals exclusively with keyboard mapping and syllable transformation without a user interface code, so as not to require an IM developer to possess in-depth knowledge of its inner workings.|$|E
3000|$|... {{and which}} are decoded using log-domain BCJR <b>algorithm.</b> <b>Code</b> rate is 075, data block size is 4 [*]K, and [...]...|$|E
40|$|This paper {{introduces}} {{a new approach}} of MD Algorithm for security design. This approach comprises of the 160 -bit hash algorithm for secure message digest. The {{results show that the}} 160 -bit Message Digest <b>Algorithm</b> <b>code</b> is more secured than 128 -bit Message Digest <b>Algorithm</b> <b>code.</b> This effort can alternate efficiently the accessible Message Digest Algorithm and hash function implementations for security design, so this approach proves a high security step towards design...|$|E
50|$|The <b>algorithm</b> <b>codes</b> {{the most}} {{important}} wavelet transform coefficients first, and transmits the bits so that an increasingly refined copy of the original image can be obtained progressively.|$|R
50|$|The {{oblivious}} adversary {{is sometimes}} referred to as the weak adversary. This adversary knows the <b>algorithm's</b> <b>code,</b> but does not get to know the randomized results of the algorithm.|$|R
50|$|Optimization: Programmers can use {{assembly}} language code {{to implement the}} most performance-sensitive parts of their program's <b>algorithms,</b> <b>code</b> that is apt to be more efficient than what might otherwise be generated by the compiler.|$|R
40|$|In this paper, we {{analyze the}} runtime {{performance}} of the LU factorization algorithm. To do this, we first test the basic algorithm, {{as well as a}} blocked algorithm across different compiler flags. Then, we add other specific optimizations to the blocked <b>algorithm</b> <b>code</b> {{in order to get the}} best runtime performance possible. 1...|$|E
3000|$|In this section, {{we first}} use IDRN to detect {{communities}} with partially cluster labels {{to show the}} ‘community aware’ characteristic it has, then we introduce the datasets and the evaluation metrics for multi-label classification tasks. After that, we conduct several experiments to show the effectiveness of our proposed <b>algorithm.</b> <b>Code</b> to reproduce our results {{is available at the}} authors’ website. 1 [...]...|$|E
40|$|This slide {{presentation}} {{reviews the}} approach {{to the development of}} the Global Precipitation Measurement algorithm. This presentation includes information about the responsibilities for the development of the algorithm, and the calibration. Also included is information about the orbit, and the sun angle. The test of the <b>algorithm</b> <b>code</b> will be done with synthetic data generated from the Precipitation Processing System (PPS) ...|$|E
30|$|PHP—the server side {{scripting}} {{programming language}} that is used for interfacing the RVS machine predictive <b>algorithm</b> <b>codes</b> with the internet services in order to access other e-accessories used for analysing and interpreting the offline RVS machine performance data.|$|R
40|$|We present {{iterative}} algorithms that numerically solve optimization {{problems of}} computing the capacity-power and rate-distortion functions for coding with two-sided state information. Numerical examples are provided to demonstrate efficiency of our algorithms. Key words- Blahut-Arimoto <b>algorithm,</b> <b>coding</b> with side information, Gel’fand-Pinsker problem, Wyner-Ziv problem I...|$|R
40|$|Adaptive video <b>coding</b> <b>algorithms</b> are {{digital video}} {{compression}} algorithms that can adapt the encoding {{of a video}} stream dynamically based {{on the amount of}} bandwidth available on the network. While such algorithms are more complicated than traditional video <b>coding</b> <b>algorithms,</b> they are attractive because of their inherent robustness to changes in network load (i. e., network congestion). Adaptive video <b>coding</b> <b>algorithms</b> seem particularly suitable for high speed network environments, such as B-ISDN/ATM, that offer Available Bit Rate (ABR) services. The goal {{of this paper is to}} assess the role that adaptive video <b>coding</b> <b>algorithms</b> will play in future high speed networks. The paper presents a simple mathematical model and analysis of several hypothetical video <b>coding</b> <b>algorithms</b> for high speed networks, and a simulation study of one such adaptive video <b>coding</b> <b>algorithm</b> that we have implemented in a local area network environment. The results show that adaptive video <b>coding</b> <b>algorithms</b> are indeed robust across a wide range of network loads. More importantly, however, the results suggest that the domain of adaptive video <b>coding</b> <b>algorithms</b> is quite narrow: moderately to heavily loaded networks with speeds on the order of 10 Mbps and 100 Mbps. As a result, adaptive video <b>coding</b> <b>algorithms</b> will likely play only a limited role in future high speed networks. ...|$|R
40|$|WAVE ([URL] is {{a system}} for {{algorithm}} visualization over the Internet designed with a novel paradigm, called Publication-driven approach [1, 2]. The Publication-driven approach separates the task of executing the algorithm from that of running its visualization and thus it {{makes it possible to}} easily distribute such two tasks over the Internet. The idea behind the approach is as follows: The <b>algorithm</b> <b>code</b> runs on the developer machine, while the variables which are the subject of the animation are copied on the end-user machine in a suitable structure, called Public Blackboard. The <b>algorithm</b> <b>code</b> on the developer side is automatically enriched with a set of animation instructions, each corresponding to an event that is relevant for the animation. When an interesting event happens for a variable that has a copy in the Public Blackboard, the corresponding animation instruction sends a message over the Internet, that activates a visualization routine on the end-user machine...|$|E
40|$|This {{document}} {{presents a}} Proportional + Resonant (PR) controller design for regulating the active and reactive power output of a three-phase AC Micro-Grid inverter system. The system employs a Voltage Sourced Inverter (VSI). The VSI is configured {{to operate as}} a current source through an interface L-filter. The power is controlled indirectly by controlling the inverter’s output current. The stationary reference frame strategy is adopted {{for the design of}} the PR controller. A model of a grid connected AC inverter and a detailed design of the inverter’s PR based control scheme are presented. The control scheme is developed and simulated in MATLAB/Simulink software environment. The control <b>algorithm</b> <b>code</b> is generated for a target device. Using Processor In-the Loop (PIL) simulation, functional equivalence testing is performed between the simulated control algorithm and the compiled <b>algorithm</b> <b>code</b> on the target device. Results in both normal and PIL simulations are discussed from the viewpoint of steady state and dynamic performance of the controller...|$|E
40|$|This study {{developed}} {{a framework for}} the shape optimization of aerodynamics profiles using computational fluid dynamics (CFD) and genetic algorithms. A genetic <b>algorithm</b> <b>code</b> and a commercial CFD code were integrated to develop a CFD shape optimization tool. The results obtained demonstrated {{the effectiveness of the}} developed tool. The shape optimization of airfoils was studied using different strategies to demonstrate the capacity of this tool with different GA parameter combinations...|$|E
40|$|A book, Computational Ecology: Artificial Neural Networks and Their Applications, {{published}} in 2010, was introduced and reviewed. This book provides readers with deep insights on <b>algorithms,</b> <b>codes,</b> and applications of artificial neural networks in ecology. A science discipline, computational ecology, is clearly defined and {{outlined in the}} book...|$|R
5000|$|The {{algorithm}} {{was conceived}} in 1970 by Donald Knuth and Vaughan Pratt, and independently by James H. Morris. The three published it jointly in 1977. [...] Independently, Matiyasevich [...] got in 1969 a similar <b>algorithm,</b> <b>coded</b> by a two-dimensional Turing machine, by studying a string pattern matching recognition problem.|$|R
40|$|While {{achieving}} a compression ratio of 2. 0 bits/base, the new <b>algorithm</b> <b>codes</b> non-N bases in fixed length. It dramatically reduces {{the time of}} coding and decoding than previous DNA compression algorithms and some universal compression programs. Comment: 2 pages, 2 tables,using Bioinformatics Latex template,no more relationship between us and that magazin...|$|R
40|$|We {{examine a}} web-centric design using {{standard}} {{tools such as}} web servers, web browsers, PHP, and mySQL. We also consider the applicability of Information Power Grid tools such as the Globus (no relation to the author) Toolkit. We intend to implement this architecture with JavaGenes running {{on at least two}} cycle-scavengers: Condor and United Devices. JavaGenes, a genetic <b>algorithm</b> <b>code</b> written in Java, will be used to evolve multi-species reactive molecular force field parameters...|$|E
30|$|In general, {{programming}} {{students learn}} <b>algorithm,</b> <b>code</b> readings, and coding in turn. They attend a lecture and receive algorithm instruction from their teacher. Then, they reproduce {{the behavior of}} the algorithm using certain input data and produce a sequence of concrete operations that represents {{the behavior of the}} algorithm. Subsequently, they abstract sequences of operations, grasp the relationship between the abstracted operations and the program code, and consequently understand the entire program code. Finally, they perform a coding exercise to confirm their understandings.|$|E
40|$|Anecdotal {{evidence}} from several sources, primarily in industry, indicates that two programmers working collaboratively {{on the same}} design, <b>algorithm,</b> <b>code,</b> or test perform substantially better than the two would working alone. Two courses taught at the University of Utah studied {{the use of this}} technique, often called pair-programming or collaborative programming, in the undergraduate computer science classroom. The students applied a positive form of "pair-pressure" on each other, which proved beneficial to the quality of their work products. The student...|$|E
50|$|Puncturing {{is often}} used with the Viterbi <b>algorithm</b> in <b>coding</b> systems.|$|R
40|$|Abstract: A new genetic <b>algorithm</b> <b>coding</b> is {{proposed}} {{in this paper}} to solve flowshop scheduling problems. To show {{the efficiency of the}} considered approach, two examples, in pharmaceutical and agro-food industries are considered with minimization of different costs related to each problem as a scope. Multi-objective optimization is thus, used and its performances proved...|$|R
40|$|This paper {{studies the}} <b>algorithms</b> for <b>coding</b> and {{decoding}} Prufer codes of a labeled tree. The <b>algorithms</b> for <b>coding</b> and decoding Prufer codes of a labeled {{tree in the}} literatures require Onlogn) (time usually. Although there exist linear time <b>algorithms</b> for Prufer-like <b>codes</b> [1, 2, 3], the algorithms utilize the integer sorting algorithms. The special range of the integers to be sorted is utilized to obtain a linear time integer sorting <b>algorithm.</b> The Prufer <b>code</b> problem is reduced to integer sorting. In this paper we consider the Prufer code problem in a different angle and a more direct manner. We start from a naïve algorithm, then improved it gradually and finally we obtain a very practical linear tim...|$|R
40|$|Proceedings of: Second International Workshop on Sustainable Ultrascale Computing Systems (NESUS 2015). Krakow (Poland), September 10 - 11, 2015. This short paper {{introduce}} an algorithm for labeling connected {{components in}} n-dimensional binary images based on cellular automata,, n >= 2. Here is presented tree-dimensional binary images algorithm. The <b>algorithm</b> <b>code</b> was implemented in NetLogo programming environment. The algorithm is local {{and can be}} efficiently implemented on data-flow parallel platforms with an asymptotic complexity of O(L) on an L × L × L bynary image...|$|E
40|$|This paper {{describes}} 'CompTorrent', {{a general}} purpose distributed computing platform that uses techniques {{derived from the}} popular BitTorrent file sharing protocol. The result is a grid swarm that requires only the creation and seed hosting of a comptorrent file, which contains the <b>algorithm</b> <b>code</b> and data set metrics, to facilitate the computing exercise. Peers need only obtain this comptorrent file and then join the swarm using the CompTorrent application. This paper describes the protocol, discusses its operation and provides directions for current and future research...|$|E
3000|$|... {{is due to}} {{the fact}} that the coding gain of a STBC or QOSTBC is {{determined}} by this product [4]. Since the performance measurement is the BER and it follows an erfc function which is dominated by the worst case, the code that maximizes the minimum coding gain obtains the best global performance because the maximum error is bounded and minimized. With the proposed <b>algorithm,</b> <b>code</b> diversity can be obtained with only a few bits of feedback per user. Besides here, the SNR is not needed to be estimated, as opposed to [8].|$|E
40|$|We {{introduce}} the market resources method (MRM) for solving dynamic optimization problems. MRM extends Carroll's (2006) endogenous grid point method (EGM) for problems {{with more than}} one control variable using policy function iteration. The MRM algorithm is simple to implement and provides advantages in terms of speed and accuracy over Howard's policy improvement <b>algorithm.</b> <b>Codes</b> are available...|$|R
40|$|Information {{technologies}} security {{begins with}} data proof in communications regardless open or close channel of communication used. Data security in open channels requires that <b>coding</b> <b>algorithm</b> should be absolutely non-vulnerable. Here is described {{the simplest and}} the most effective algorithm with required property, which provides all necessary demands to <b>coding</b> <b>algorithms,</b> and unbounded <b>code</b> key length as well. ???????????? ?????????????? ?????????? ?????????? ? ?????? ?????? ? ????????????? ?????????? ?? ?????????? ????????????? ??????. ???????????? ?????? ? ???????? ??????? ???????????? ?????????? ????????? ?????????? ?????????. ????? ?????? ??????? ? ??????????? ????????, ??????????????? ???? ??????????? ???????????, ?????????????? ??????????? ?????????????? ????? ????????? ??????????????????...|$|R
40|$|Video <b>coding</b> <b>algorithms</b> are {{important}} for the proliferation of multimedia applications (i. e., those that incorporate video, voice and data) in high speed networks. Video <b>coding</b> <b>algorithms</b> reduce the bandwidth required for video images while maintaining good picture quality. Of particular interest are adaptive video <b>coding</b> <b>algorithms,</b> which can adapt the encoding of a video stream (and thus its bandwidth requirements) dynamically based {{on the amount of}} bandwidth available in the network. Such applications can make efficient use of the available bit rate (ABR) service class proposed for B-ISDN. The goal of this research was to evaluate adaptive video <b>coding</b> <b>algorithms.</b> Therefore there were three main objectives in this research. The first objective was to determine the robustness of adaptive video <b>coding</b> <b>algorithms</b> to changes in network load. The second objective was to identify the domain (network types and load characteristics) in which adaptive video <b>coding</b> <b>algorithms</b> are feasible. T [...] ...|$|R
