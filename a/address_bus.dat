301|99|Public
5|$|The Z80 {{processor}} {{used in the}} Spectrum has a 16-bit <b>address</b> <b>bus,</b> {{which means}} only 64KB of memory can be directly addressed. To facilitate the extra 80KB of RAM the designers used bank switching so the new memory would be available as eight pages of 16KB {{at the top of}} the address space. The same technique was used to page between the new 16KB editor ROM and the original 16KB BASIC ROM at the bottom of the address space.|$|E
25|$|NOR {{memory has}} an {{external}} <b>address</b> <b>bus</b> for reading and programming. For NOR memory, reading and programming are random-access, and unlocking and erasing are block-wise. For NAND memory, reading and programming are page-wise, and unlocking and erasing are block-wise.|$|E
25|$|To support lower-cost {{systems and}} control {{applications}} with smaller memory sizes, Motorola introduced the 8-bit compatible MC68008, also in 1982. This was a 68000 with an 8-bit data bus {{and a smaller}} (20-bit) <b>address</b> <b>bus.</b> After 1982, Motorola devoted {{more attention to the}} 68020 and 88000 projects.|$|E
5000|$|Two {{separate}} <b>address</b> <b>busses</b> {{driving the}} 8-bit data bus: a 24-bit [...] "Bus A" [...] for general access, and an 8-bit [...] "Bus B" [...] mainly for APU and PPU registers ...|$|R
50|$|Devices {{are allowed}} to stretch clock cycles to suit their {{particular}} needs, which can starve bandwidth needed by faster devices and increase latencies when talking to other device <b>addresses.</b> <b>Bus</b> capacitance also places a limit on the transfer speed, especially when current sources {{are not used to}} decrease signal rise times.|$|R
5000|$|For instance, Alexander's pattern [...] "A PLACE TO WAIT" [...] <b>addresses</b> <b>bus</b> {{stops in}} the same way as waiting rooms in a surgery, while still proposing helpful and {{constructive}} solutions. The [...] "Gang-of-Four" [...] book Design Patterns by Gamma et al. proposes solutions that are independent of the programming language, and the program's application domain.|$|R
25|$|The {{drawback}} of {{the older}} fast column access method was that a new column address had to be sent for each additional dataword on the row. The <b>address</b> <b>bus</b> had to operate at the same frequency as the data bus. Prefetch architecture simplifies this process by allowing a single address request to result in multiple data words.|$|E
25|$|The later {{evolution}} of the 68000 focused on more modern embedded control applications and on-chip peripherals. The 68EC000 chip and SCM68000 core expanded the <b>address</b> <b>bus</b> to 32 bits, removed the M6800 peripheral bus, and excluded the MOVE from SR instruction from user mode programs. In 1996, Motorola updated the standalone core with fully static circuitry, drawing only 2µW in low-power mode, calling it the MC68SEC000.|$|E
25|$|Although {{it had a}} 32-bit {{internal}} bus, the V60 {{had only}} a 16-bit external data bus and a 24-bit <b>address</b> <b>bus.</b> Its architecture was carried largely intact to the V70 (μPD70632) model, which had external 32-bit buses and was released in 1987. Launched in 1989, the V80 (μPD70832) {{was the culmination of}} the series having on-chip caches, a branch predictor, and less reliance on microcode for complex operations. The V60-V80 architecture did not enjoy much commercial success.|$|E
5000|$|When {{a message}} bus daemon like [...] {{is used to}} {{implement}} a D-Bus bus, all processes that want to connect to the bus must know the <b>bus</b> <b>address,</b> the address by which a process can establish a D-Bus connection to the central message bus process. In this scenario, the message bus daemon selects the <b>bus</b> <b>address</b> and the remainder processes must pass that value to their corresponding [...] or equivalent libraries. [...] defines a different <b>bus</b> <b>address</b> for every <b>bus</b> instance it provides. These addresses are defined in the daemon's configuration files.|$|R
5000|$|The {{aforementioned}} reference {{design is}} a bus with a clock (SCL) and data (SDA) lines with 7-bit <b>addressing.</b> The <b>bus</b> has two roles for nodes: master and slave: ...|$|R
5000|$|System Information checks all {{components}} for <b>bus</b> <b>addresses</b> and configuration ...|$|R
25|$|The 6809 was {{assembler}} source-compatible {{with the}} 6800, though the 6800 had 78 {{instructions to the}} 6809's 59. Some instructions were replaced by more general ones which the assembler translated into equivalent operations and some were even replaced by addressing modes. The instruction set and register complement were highly orthogonal, making the 6809 easier to program than the 6800 or 6502. Like the 6800, the 6809 included an undocumented <b>address</b> <b>bus</b> test instruction which came to be nicknamed Halt and Catch Fire (HCF).|$|E
25|$|The Intel 80286 had a 24-bit <b>address</b> <b>bus</b> and {{was able}} to address up to 16MB of RAM, {{compared}} to the 1MB addressability of its predecessor. However, memory cost and the initial rarity of software using the memory above 1MB meant that 80286 computers were rarely shipped with more than one megabyte of RAM. Additionally, there was a performance penalty involved in accessing extended memory from real mode (in which DOS, the dominant PC operating system until the mid-1990s, ran), as noted below.|$|E
25|$|The Altair bus {{consists}} of the pins of the Intel 8080 run out onto the backplane. No particular level of thought went into the design, which led to such disasters as shorting from various power lines of differing voltages being located next to each other. Another oddity was that the system included two unidirectional 8-bit data buses, but only a single bidirectional 16-bit <b>address</b> <b>bus.</b> A deal on power supplies led {{to the use of}} +8V and +18V, which had to be locally regulated on the cards to TTL (+5V) or RS-232 (+12V) standard voltage levels.|$|E
40|$|This {{research}} {{describes the}} Extended Physical <b>Addressing</b> <b>bus</b> transactions between the microprocessor-based {{systems and the}} external peripherals. This addressing technique, based {{on the use of}} software/hardware systems and reduced physical addresses, enlarges the interfacing capacity of the microprocessor-based systems and improves the speed of data exchange. The input of our system hardware part will be connected to the system bus. The output, which is a new bus, will be connected to an external device. To accomplish the bus transactions, the hardware part realizes a conversion of system bus data into new <b>bus</b> <b>addresses.</b> Furthermore, the software part ensures the transfer, with distinct addresses, of the simple data and the data that is intended to be converted. The use of this system with two system addresses and N bit data bus gives a new bus with N bit data bus and 2 N physical addressing capacity...|$|R
50|$|If a Selectrix <b>bus</b> <b>address</b> is used {{to control}} turnouts, signals or other accessories, one SX <b>bus</b> <b>address</b> can control maximum 8 items. In this case one bit with its two values (0 and 1) in a SX address can {{correspond}} to two turnout or signal positions. A typical Selectrix system bus with its 112 <b>bus</b> <b>addresses</b> can therefore control up to 896 switches. Most central units are equipped {{with at least two}} data buses, SX0 and SX1. In a multi bus system, the first data bus, SX0, is commonly used for controlling locomotives only while SX1 and subsequent buses are reserved for accessories.|$|R
5000|$|... 4468737 Circuit for {{extending}} a multiplexed <b>address</b> and data <b>bus</b> to distant peripheral devices ...|$|R
25|$|The <b>address</b> <b>bus</b> of the PowerPC 603 can {{theoretically}} access memory up to 64 MB. However, {{the operating}} system's maximum addressable memory size is 37 MB. Furthermore, {{because of the}} ASIC design of the Pippin hardware, the maximum RAM size that can be added is 32 MB. Officially, Bandai produced memory upgrade modules of 2, 4, 8 and 16 MB. The memory chips are soldered onto {{a printed circuit board}} which is placed in a plastic housing, making installation into a Pippin system simple for the end user. Japanese hackers produced an aftermarket 16 MB module, but because the module was much larger than the memory module compartment on the Pippin, installation required removing the logic board from the chassis, and then mounting the large memory module in-between the logic board and chassis.|$|E
25|$|The 68k {{instruction}} set was particularly {{well suited to}} implement Unix, and the 68000 became the dominant CPU for Unix-based workstations including Sun workstations and Apollo/Domain workstations, and also was used for mass-market computers such as the Apple Lisa, Macintosh, Amiga, and Atari ST. The 68000 was used in Microsoft Xenix systems, {{as well as an}} early NetWare Unix-based Server. The 68000 was used in the first generation of desktop laser printers, including the original Apple Inc. LaserWriter and the HP LaserJet. In 1982, the 68000 received an update to its ISA allowing it to support virtual memory and to conform to the Popek and Goldberg virtualization requirements. The updated chip was called the 68010. A further extended version, which exposed 31bits of the <b>address</b> <b>bus,</b> was also produced in small quantities as the 68012.|$|E
25|$|The ARM2 {{featured}} a 32-bit data bus, 26-bit address space and 2732-bit registers. Eightbits {{from the program}} counter register were available for other purposes; the top sixbits (available because of the 26-bit address space) served as status flags, and the bottom twobits (available because the program counter was always word-aligned) were used for setting modes. The <b>address</b> <b>bus</b> was extended to 32bits in the ARM6, but program code still had to lie within the first 64MB of memory in 26-bit compatibility mode, due to the reserved bits for the status flags. The ARM2 had a transistor count of just 30,000, compared to Motorola's six-year-older 68000 model with around 40,000. Much of this simplicity came {{from the lack of}} microcode (which represents about one-quarter to one-third of the 68000) and from (like most CPUs of the day) not including any cache. This simplicity enabled low power consumption, yet better performance than the Intel 80286. A successor, ARM3, was produced with a 4KB cache, which further improved performance.|$|E
50|$|Parallel {{peripherals}} can {{be attached}} in memory-mapped fashion {{to the regular}} <b>address</b> and data <b>bus.</b>|$|R
40|$|A limited {{literature}} review has been {{performed in the}} area "ergonomics and bus driver workplace". The present and past focus has been identified and the references are grouped into nine groups. The list is far from complete but highlights in a separtate section "general issues" where references with substantial referecne lists {{in their own right}} are listed; the objective being that these references can be seen as natural starting points for any new R&D activity <b>addressing</b> <b>bus</b> driver workplace design and related problems or problem areas. The reference list as a whole has a bias towards stress (health), workload (fatigue) and seating (comfort) and related issues; almost 50 % of the references listed cover this area; an eplanation being that many have thir origin in studies about the negative impacts of the working environment of a bus driver...|$|R
50|$|<b>Bus</b> <b>addressing</b> {{is based}} on the device type only, which allows for a very simple {{protocol}} stack, as no initial enumeration needs to be performed.|$|R
2500|$|A 13-bit <b>address</b> <b>bus,</b> as {{illustrated}} here, {{is suitable for}} a device up to 128 Mbit. [...] It would have two banks, each containing 8192 rows and 8192 columns. [...] Thus, row addresses are 13 bits, segment addresses are 2 bits, and 8 column address bits are required to select one byte from the 2048 bits (256 bytes) in a segment.|$|E
2500|$|Outwardly {{resembling}} the Commodore 128 and codenamed [...] "Rock Lobster" [...] during development, the Amiga 500 houses the keyboard and CPU in one shell, unlike the Amiga 1000. It utilizes a Motorola 68000 microprocessor running at [...] (NTSC) or [...] (PAL). The CPU implements a 32-bit model, has 32-bit registers and 32-bit internal data bus, {{but it has}} a 16-bit main ALU, uses a 16-bit external data bus and 24-bit <b>address</b> <b>bus,</b> providing a maximum of 16MB of address space.|$|E
2500|$|The 68000 has a 24-bit {{external}} <b>address</b> <b>bus</b> and two byte-select signals [...] "replaced" [...] A0. These 24 lines {{can therefore}} address 16 MB of physical memory with byte resolution. Address storage and computation uses 32 bits internally; however, the 8 high-order address bits are ignored {{due to the}} physical lack of device pins. This allows it to run software written for a logically flat 32-bit address space, while accessing only a 24-bit physical address space. [...] Motorola's intent with the internal 32-bit address space was forward compatibility, making it feasible to write 68000 software that would {{take full advantage of}} later 32-bit implementations of the 68000 instruction set.|$|E
5000|$|Besides <b>addressing</b> the <b>bus</b> service problem, the BRT Metrobús project {{emerged in}} the context of the city’s efforts to reduce Air {{pollution}} in Mexico City with a program called Proaire 2002-2010. According to Metrobús, annual environmental benefits include a reduction of [...] of carbon dioxide, [...] of carbon monoxide, [...] of NOx, and [...] of PM10 particulates ...|$|R
5000|$|The HC16 {{provides}} a software upgrade path for HC11 users while giving full hardware compatibility with the [...] <b>address</b> and data <b>bus</b> {{found on the}} 32-bit microprocessors.|$|R
40|$|Fixed-route bus transit service {{areas and}} {{ridership}} fluctuate for myriad and uncontainable reasons. The density and development they serve have life spans causing trip generators to increase and decrease, and bus transit networks must change with them. Bus stops are placed secondary to routes, and are commonly influenced by various and unique conditions. Optimal bus stop spacing, under ideal pedestrian conditions, {{has been established}} as every ¼ mile, however stop spacing in actuality can vary widely. This research will analyze the Bus Stop Service Improvement Project undertaken by the Central Ohio Transit Authority to comprehensively {{address the issue of}} bus stop spacing within their service area. This research seeks to determine if the benefits of standardizing optimal spacing network-wide is balanced by the cost of its implementation, and if it should then be recommended to other transit agencies, such as Indianapolis’ own IndyGo system, which have not holistically <b>addressed</b> <b>bus</b> stop spacing. Department of Urban PlanningThesis (M. U. R. P. ...|$|R
2500|$|NAND flash {{has reduced}} erase and write times, and {{requires}} less chip area per cell, thus allowing greater storage density and lower cost per bit than NORflash; {{it also has}} up to 10 times the endurance of NORflash. However, the I/O interface of NANDflash {{does not provide a}} random-access external <b>address</b> <b>bus.</b> Rather, data must be read on a block-wise basis, with typical block sizes of hundreds to thousands of bits. This makes NANDflash unsuitable as a drop-in replacement for program ROM, since most microprocessors and microcontrollers require byte-level random access. In this regard, NANDflash is similar to other secondary data storage devices, such as hard disks and optical media, and is thus highly suitable for use in mass-storage devices, such as memory cards. The first NAND-based removable media format was SmartMedia in 1995, and many others have followed, including: ...|$|E
50|$|Systems {{that have}} more than one bus master have {{additional}} control bus signals that control which bus master drives the <b>address</b> <b>bus,</b> avoiding bus contention on the <b>address</b> <b>bus.</b>|$|E
50|$|Earlier {{models of}} DVK series {{were based on}} K1801VM1 or K1801VM2 {{microprocessors}} with 16 bit <b>address</b> <b>bus.</b> In the later models, the KM1801VM3 microprocessor (with 22 bit extended <b>address</b> <b>bus)</b> was used.|$|E
5000|$|A single message {{writes to}} the EEPROM. After the START, the master sends the chip's <b>bus</b> <b>address</b> with the {{direction}} bit clear (write), then sends the two-byte address of data within the EEPROM and then sends data bytes to be written starting at that address, followed by a STOP. When writing multiple bytes, all the bytes {{must be in the}} same 32-byte page. While it is busy saving those bytes to memory, the EEPROM will not respond to further I²C requests. (That is another incompatibility with SMBus: SMBus devices must always respond to their <b>bus</b> <b>addresses.)</b> ...|$|R
50|$|At the {{hardware}} level, the fault is initially {{raised by the}} memory management unit (MMU) on illegal access (if the referenced memory exists), {{as part of its}} memory protection feature, or an invalid page fault (if the referenced memory does not exist). If the problem is not an invalid logical address but instead an invalid physical <b>address,</b> a <b>bus</b> error is raised instead, though these are not always distinguished.|$|R
40|$|Abstract. This paper {{describes}} the architecture {{and the performance}} of a new programmable 16 -bit Digital Signal Processor (DSP) engine. It is developed specifically for next generation wireless digital systems and speech applications. Besides providing a basic instruction set, similar to current day 16 -bit DSP’s, it contains distinctive architectural features and unique instructions, which make the engine highly efficient for compute-intensive tasks such as vector quantization and Viterbi operations. The datapath contains two Multiply-Accumulate units and one ALU. The external memory bandwidth is kept to two data busses and two corresponding <b>address</b> <b>busses.</b> Still, the internal bus network is designed such that all three units are operating in parallel. This parallelism is reflected in the performance benchmarks. For example, an FIR filter of N taps will take N/ 2 instruction cycles compared to N for a general purpose 16 -bit DSP, and it will require only half the number of memory accesses of a general purpose DSP. This efficiency is reflected in the very low MIPS requirement to implement cellular standards. 1...|$|R
