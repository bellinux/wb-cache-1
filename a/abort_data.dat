0|26|Public
25|$|Abort mode: A {{privileged mode}} that is entered {{whenever}} a prefetch <b>abort</b> or <b>data</b> <b>abort</b> exception occurs.|$|R
25|$|A (bit 8) is the imprecise <b>data</b> <b>abort</b> disable bit.|$|R
5000|$|This {{performs}} a read from I/O space. All 32 {{bits of the}} read address are provided, so that a device may (for compatibility reasons) implement less than 4 bytes worth of I/O registers. If the byte enables request data not within the address range supported by the PCI device (e.g. a 4-byte read from a device which only supports 2 bytes of I/O address space), it must be terminated with a target <b>abort.</b> Multiple <b>data</b> cycles are permitted, using linear (simple incrementing) burst ordering.|$|R
50|$|Before trigger is for {{checking}} {{data and}} deciding if operation should be permitted. If exception is thrown from before trigger then operation is <b>aborted</b> and no <b>data</b> are changed. In DB2 before triggers are read only — you can't modify data in before triggers. After triggers {{are designed for}} post processing after requested change was performed. After triggers can write data into tables and unlike some other databases you can write into any table including table on which trigger operates. Instead of triggers are for making views writeable.|$|R
40|$|A {{diagnostics}} system {{centered around}} commercial fast 8 -bit digitizer boards has been implemented for the transverse feedback systems at PEP-II. The boards can accumulate bunch-by-bunch position data for 4800 turns (35 ms) in the x plane and the y plane. A dedicated trigger chassis allows {{to trigger the}} data acquisition on demand, or on an injection shot to diagnose injection problems, and provides gating signals for grow-damp measurements. Usually, the boards constantly acquire data and a beam <b>abort</b> stops <b>data</b> acquitision, thus preserving the last 4800 turns of position information before a beam abort. Software in a local PC reads out the boards and transfers data to a fileserver. Matlab-based data analysis software allows to present the raw data but also higher-level functions like spectra, modal analysis, spectrograms and others. The system {{has been instrumental in}} diagnosing beam instabilities in PEP. This paper will describe the architecture of the system and its applications...|$|R
40|$|A 20 -year-old {{woman with}} {{untreated}} homocystinuria was examined {{when she was}} 18 weeks' pregnant. Amniocentesis was performed and raised levels of homocystine and methionine {{were present in the}} amniotic fluid. Assay of cystathionine synthetase activity in cultured amniotic fluid cells showed the carrier state for homocystinuria. An abortion was performed because of the possible adverse effects of continuing the pregnancy both for the mother and the fetus. No pathological abnormality was found in the <b>aborted</b> fetus. Further <b>data</b> are needed to assess the possible teratogenic effects of maternal homocystinuria and the adverse consequences of pregnancy in the affected mother...|$|R
40|$|Conjugating Tetrahymena can abort {{the sexual}} cycle before the {{production}} of progeny somatic (macro-) nuclei and return to vegetative growth. We have analyzed the germinal (micronuclear) genotypes of these cells {{in order to determine}} the stage at which they <b>aborted</b> conjugation. Our <b>data</b> demonstrate that nearly all of these cells attempt meiosis, but that very few reach the successful completion of cross-fertilization. The resulting micronuclear genotypes suggest that either germinal chromosomes or entire nuclei are lost during an unsuccessful attempt at meiosis or cross-fertilization. We conclude that the decision to develop progeny macronuclei is made during meiosis and is dependent on the completion of some step necessary for successful cross-fertilization...|$|R
50|$|Some host TCP stacks may {{implement}} a half-duplex close sequence, as Linux or HP-UX do. If such a host actively closes a connection but {{still has not}} read all the incoming data the stack already received from the link, this host sends a RST instead of a FIN (Section 4.2.2.13 in RFC 1122). This allows a TCP application {{to be sure the}} remote application has read all the data the former sent—waiting the FIN from the remote side, when it actively closes the connection. But the remote TCP stack cannot distinguish between a Connection <b>Aborting</b> RST and <b>Data</b> Loss RST. Both cause the remote stack to lose all the data received.|$|R
40|$|In a {{longitudinal}} study on bilingual child language acquisition, Rooselaar followed four Moroccan girls in the Netherlands from approximately age 2; 0 to age 3; 0. The target language was either Moroccan Arabic or Dutch. Most recordings concern spontaneous speech; part is labeled as 'experimental'. Two of the girls were recorded in a day-care centre where much Dutch is spoken with the caretakers and other children. The two other girls were recorded {{at home with their}} family members. The recordings were made in the framework of a PhD thesis project, but this project was <b>aborted</b> after the <b>data</b> collection stage. Metadata on most recordings are rather extensive; partial transcripts exist of many of the recordings...|$|R
40|$|Objective: To {{understand}} how the HIV diagnosis combines with other factors that influence the decision to <b>abort.</b> Methodology: <b>Data</b> were collected during a crossover study of women aged between 18 and 49 years old and seen in public health services in Porto Alegre, Brazil. The life stories of 18 interviewees who had post-diagnosis abortion were reconstructed on a timeline, using information collected quantitatively. Results: The time between the diagnosis and abortion was 2 years or less {{for more than half}} of the women. For some, post-diagnosis abortion did not mean the end of reproductive life. The most frequent reason for terminating pregnancy was to be living with HIV; however, only some of the women who stated having this motivation did not have post-diagnosis children. Changing partners between pregnancies was a recurring finding; however, in most pregnancies that ended in abortion, the women lived with their partners. Discussion: The analysis of the reproductive trajectory of the women studied showed that there is no specific profile of the woman who aborts after receiving the HIV diagnosis. Although this diagnosis may be involved in the decision to terminate a pregnancy, it does not necessarily result in the end of a woman's reproductive trajectory. Thus, abortion should be understood within a diversity of decision-making processes and the specific moment of a woman's life story...|$|R
40|$|International audienceTransactional memory (TM) is an {{inherently}} optimistic synchronization abstraction: it allows concurrent processes to execute sequences of shared-data accesses (transactions) speculatively, with an op- tion of aborting {{them in the}} future. Early TM designs avoided using locks and relied on non-blocking synchronization to ensure obstruction- freedom: a transaction that encounters no step contention {{is not allowed to}} abort. However, it was later observed that obstruction-free TMs per- form poorly and, as a result, state-of-the-art TM implementations are nowadays blocking, allowing <b>aborts</b> because of <b>data</b> conflicts rather than step contention. In this paper, we explain this shift in the TM practice theoretically, via complexity bounds. We prove a few important lower bounds on obstruction-free TMs. Then we present a lock-based TM implementation that beats all of these lower bounds. In sum, our results exhibit a considerable complexity gap between non-blocking and blocking TM implementations...|$|R
40|$|Transactional memory (TM) is an {{inherently}} optimistic abstraction: it allows concurrent processes to execute sequences of shared-data accesses (transactions) speculatively, with an option of aborting {{them in the}} future. Early TM designs avoided using locks and relied on non-blocking synchronization to ensure obstruction-freedom: a transaction that encounters no step contention {{is not allowed to}} abort. However, it was later observed that obstruction-free TMs perform poorly and, as a result, state-of-the-art TM implementations are nowadays blocking, allowing <b>aborts</b> because of <b>data</b> conflicts rather than step contention. In this paper, we explain this shift in the TM practice theoretically, via complexity bounds. We prove a few important lower bounds on obstruction-free TMs. Then we present a lock-based TM implementation that beats all of these lower bounds. In sum, our results exhibit a considerable complexity gap between non-blocking and blocking TM implementations. Comment: Model of Transactional Memory identical with arXiv: 1407. 687...|$|R
50|$|Concurrency control {{typically}} also {{ensures the}} Recoverability property of schedules for maintaining correctness {{in cases of}} aborted transactions (which can always happen for many reasons). Recoverability (from abort) means that no committed transaction in a schedule has read data written by an <b>aborted</b> transaction. Such <b>data</b> disappear from the database (upon the abort) and are parts of an incorrect database state. Reading such data violates the consistency rule of ACID. Unlike Serializability, Recoverability cannot be compromised, relaxed at any case, since any relaxation results in quick database integrity violation upon aborts. The major methods listed above provide serializability mechanisms. None of them in its general form automatically provides recoverability, and special considerations and mechanism enhancements are needed to support recoverability. A commonly utilized special case of recoverability is Strictness, which allows efficient database recovery from failure (but excludes optimistic implementations; e.g., Strict CO (SCO) cannot have an optimistic implementation, but has semi-optimistic ones).|$|R
40|$|OBJECTIVES: The {{investigators}} {{undertook a}} systematic, comprehensive {{analysis of the}} therapeutic response and clinical outcomes of reperfusion therapy for acute ST-segment elevation myocardial infarction (STEMI) in 5, 470 patients from the Assessment of the Safety and Efficacy of a New Thrombolytic Regimen (ASSENT) - 3 trial. BACKGROUND: Prompt effective reperfusion therapy for acute STEMI may attenuate major myocardial necrosis. METHODS: We prospectively collected sequential electrocardiographs and clinical <b>data.</b> <b>Aborted</b> myocardial infarction (MI) was defined as maximal creatine kinase or = 70 % ST-segment resolution at 60 min whose 30 -day and 1 -year mortality was 1. 0 % and 2. 7 %, respectively, compared with 5. 9 % and 9. 3 % in aborted MI patients with < 70 % ST-segment resolution at 60 min (all p < or = 0. 002). CONCLUSIONS: Prompt fibrinolytic treatment improved the likelihood of aborted MI. The subgroup with complete 60 -min ST-segment resolution had the best clinical outcomes. status: publishe...|$|R
40|$|Prenatal {{diagnosis}} {{for type}} III glycogen storage disease {{was performed by}} using (1) immunoblot analysis with a polyclonal antibody prepared against purified porcine-muscle debranching enzyme and (2) a qualitative assay for debranching-enzyme activity. Cultured amniotic fluid cells from three pregnancies (three families in which the proband had absence of debrancher protein) were subjected to immunoblot analysis. Two unaffected and one affected fetus were predicted. In addition, cultured amniotic fluid cells from nine pregnancies (eight families) were screened with a qualitative assay based on the persistence of a polysaccharide that has a structure approaching that of a phosphorylase limit dextrin when the cells were exposed to a glucose-free medium. This qualitative assay predicted six unaffected and three affected fetuses. All predictions by either method were confirmed postnatally except for one spontaneously <b>aborted</b> fetus. Our <b>data</b> indicate that a definitive diagnosis of type III glycogen storage disease can be made prenatally by these methods...|$|R
40|$|Partially {{observed}} cured data {{occur in}} the analysis of spontaneous abortion (SAB) in observational studies in pregnancy. In contrast to the traditional cured data, such data has an observable `cured' portion as women who do not <b>abort</b> spontaneously. The <b>data</b> is also subject to left truncate in addition to right-censoring because women may enter or withdraw from a study any time during their pregnancy. Left truncation in particular causes unique bias {{in the presence of a}} cured portion. In this paper, we study a cure rate model and develop a conditional nonparametric maximum likelihood approach. To tackle the computational challenge we adopt an EM algorithm making use of "ghost copies" of the data, and a closed form variance estimator is derived. Under suitable assumptions, we prove the consistency of the resulting estimator involving an unbounded cumulative baseline hazard function, as well as the asymptotic normality. Simulation results are carried out to evaluate the finite sample performance. We present the analysis of the motivating SAB study to illustrate the power of our model addressing both occurrence and timing of SAB, as compared to existing approaches in practice. Comment: 48 pages including a 25 -page appendix, 2 figures, 2 table...|$|R
40|$|Abstract. In Transactional Memory (TM), {{contention}} {{management is}} the process of selecting which transaction should be <b>aborted</b> when a <b>data</b> access conflict arises. In this paper, the performance of published CMs (contention managers) is re-investigated using complex benchmarks recently published in the literature. Our results redefine the CM performance hierarchy. Greedy and Priority are found to give the best performance overall. Polka is still competitive, but by no means best performing as previously published, and in some cases degrading performance by orders of magnitude. In the worst example, execution of a benchmark completes in 6. 5 seconds with Priority, yet fails to complete even after 20 minutes with Polka. Analysis of the benchmark found it aborted only 22 % of all transactions, spread consistently over the duration of its execution. More generally, all delay-based CMs, which pause a transaction for some finite duration upon conflict, are found to be unsuitable for the evaluated benchmarks with even moderate amounts of contention. This has significant implications, given that TM is primarily aimed at easing concurrent programming for mainstream software development, where applications are unlikely to be highly optimised to reduce aborts. ...|$|R
40|$|BACKGROUND: Sperm DNA damage (fragmentation) is a {{recently}} discovered cause of male infertility {{for which no}} efficient treatment has yet been found. Previous findings have suggested that clinically relevant sperm DNA damage may occur at the post-testicular level. This study was undertaken to assess the clinical usefulness of ICSI with testicular spermatozoa in this indication. METHODS: The percentage of spermatozoa with fragmented DNA, assessed by terminal deoxyribonucleotidyl transferase-mediated dUTP nick-end labelling assay, and ICSI outcomes were compared in two sequential attempts performed, respectively, with ejaculated and testicular spermatozoa in 18 men with increased sperm DNA fragmentation. RESULTS: The incidence of DNA fragmentation was markedly lower in testicular spermatozoa as compared with ejaculated spermatozoa. No differences in fertilization and cleavage rates and in embryo morphological grade {{were found between the}} ICSI attempts performed with ejaculated and with testicular spermatozoa. However, eight ongoing clinical pregnancies (four singleton and four twin) were achieved by ICSI with testicular spermatozoa (44. 4 % pregnancy rate; 20. 7 % implantation rate), whereas ICSI with ejaculated spermatozoa led to only one pregnancy which was spontaneously <b>aborted.</b> CONCLUSIONS: These <b>data</b> show that ICSI with testicular spermatozoa provides the first efficient assisted reproduction treatment option for men with high levels of sperm DNA damage...|$|R
40|$|TCP has {{historically}} been considered to be protected against spoofed off-path packet injection attacks by relying {{on the fact that}} it is difficult to guess the 4 -tuple (the source and destination IP addresses and the source and destination ports) in combination with the 32 -bit sequence number(s). A combination of increasing window sizes and applications using longer-term connections (e. g., H- 323 or Border Gateway Protocol (BGP) [RFC 4271]) have left modern TCP implementations more vulnerable to these types of spoofed packet injection attacks. Many of these long-term TCP applications tend to have predictable IP addresses and ports that makes it far easier for the 4 -tuple (4 -tuple is the same as the socket pair mentioned in RFC 793) to be guessed. Having guessed the 4 -tuple correctly, an attacker can inject a TCP segment with the RST bit set, the SYN bit set or data into a TCP connection by systematically guessing the sequence number of the spoofed segment to be in the current receive window. This can cause the connection to <b>abort</b> or cause <b>data</b> corruption. This document specifies small modifications to the way TCP handles inbound segments that can reduce the chances of a successful attack. Status of This Memo This is an Internet Standards Track document. This document is a product of the Internet Engineering Task Force (IETF). It represents the consensus of the IETF community. It has received public review and has been approved for publication by th...|$|R
40|$|Improving TCP’s Robustness to Blind In-Window Attacks TCP has {{historically}} been considered to be protected against spoofed off-path packet injection attacks by relying {{on the fact that}} it is difficult to guess the 4 -tuple (the source and destination IP addresses and the source and destination ports) in combination with the 32 -bit sequence number(s). A combination of increasing window sizes and applications using longer-term connections (e. g., H- 323 or Border Gateway Protocol (BGP) [RFC 4271]) have left modern TCP implementations more vulnerable to these types of spoofed packet injection attacks. Many of these long-term TCP applications tend to have predictable IP addresses and ports that makes it far easier for the 4 -tuple (4 -tuple is the same as the socket pair mentioned in RFC 793) to be guessed. Having guessed the 4 -tuple correctly, an attacker can inject a TCP segment with the RST bit set, the SYN bit set or data into a TCP connection by systematically guessing the sequence number of the spoofed segment to be in the current receive window. This can cause the connection to <b>abort</b> or cause <b>data</b> corruption. This document specifies small modifications to the way TCP handles inbound segments that can reduce the chances of a successful attack. Status of This Memo This is an Internet Standards Track document. This document is a product of the Internet Engineering Task Force (IETF). It represents the consensus of the IETF community. It has received public review and has been approved for publication by th...|$|R
40|$|OBJECTIVES: The {{investigators}} {{undertook a}} systematic, comprehensive {{analysis of the}} therapeutic response and clinical outcomes of reperfusion therapy for acute ST-segment elevation myocardial infarction (STEMI) in 5, 470 patients from the Assessment of the Safety and Efficacy of a New Thrombolytic Regimen (ASSENT) - 3 trial. BACKGROUND: Prompt effective reperfusion therapy for acute STEMI may attenuate major myocardial necrosis. METHODS: We prospectively collected sequential electrocardiographs and clinical <b>data.</b> <b>Aborted</b> myocardial infarction (MI) was defined as maximal creatine kinase &lt; or = 2 x upper limit of normal coupled with typical evolutionary electrocardiographic changes. RESULTS: Of the patients, 727 (13. 3 %) had an aborted MI, with the highest frequency (25 %) occurring in patients treated &lt; 1 h after symptom onset. As compared with MI patients, patients with aborted MI more often had complete ST-segment resolution at 60 min (56. 3 % vs. 30. 2 %, p &lt; 0. 001) and 180 min (61. 5 % vs. 53 %, p &lt; 0. 001); they also had smaller infarct sizes based on QRS score at discharge (2. 37 vs. 4. 62, p &lt; 0. 001). Mortality in aborted MI patients compared with those who had true MI was 3. 9 % versus 4. 6 % at 30 -day and 7. 0 % versus 7. 4 % at 1 -year. The baseline-adjusted mortality was significantly lower in patients with aborted MI (odds ratio [OR] 0. 76, 95 % confidence interval [CI] 0. 63 to 0. 92, p = 0. 005 for 30 -day and OR 0. 70, 95 % CI 0. 50 to 0. 98, p = 0. 035 for one year). A very low-risk subset was identified with &gt; or = 70 % ST-segment resolution at 60 min whose 30 -day and 1 -year mortality was 1. 0 % and 2. 7 %, respectively, compared with 5. 9 % and 9. 3 % in aborted MI patients with &lt; 70 % ST-segment resolution at 60 min (all p &lt; or = 0. 002). CONCLUSIONS: Prompt fibrinolytic treatment improved the likelihood of aborted MI. The subgroup with complete 60 -min ST-segment resolution had the best clinical outcomes...|$|R
40|$|AbstractObjectivesThe {{investigators}} {{undertook a}} systematic, comprehensive {{analysis of the}} therapeutic response and clinical outcomes of reperfusion therapy for acute ST-segment elevation myocardial infarction (STEMI) in 5, 470 patients from the Assessment of the Safety and Efficacy of a New Thrombolytic Regimen (ASSENT) - 3 trial. BackgroundPrompt effective reperfusion therapy for acute STEMI may attenuate major myocardial necrosis. MethodsWe prospectively collected sequential electrocardiographs and clinical <b>data.</b> <b>Aborted</b> myocardial infarction (MI) was defined as maximal creatine kinase ≤ 2 × upper limit of normal coupled with typical evolutionary electrocardiographic changes. ResultsOf the patients, 727 (13. 3 %) had an aborted MI, with the highest frequency (25 %) occurring in patients treated < 1 h after symptom onset. As compared with MI patients, patients with aborted MI more often had complete ST-segment resolution at 60 min (56. 3 % vs. 30. 2 %, p < 0. 001) and 180 min (61. 5 % vs. 53 %, p < 0. 001); they also had smaller infarct sizes based on QRS score at discharge (2. 37 vs. 4. 62, p < 0. 001). Mortality in aborted MI patients compared with those who had true MI was 3. 9 % versus 4. 6 % at 30 -day and 7. 0 % versus 7. 4 % at 1 -year. The baseline-adjusted mortality was significantly lower in patients with aborted MI (odds ratio [OR] 0. 76, 95 % confidence interval [CI] 0. 63 to 0. 92, p = 0. 005 for 30 -day and OR 0. 70, 95 % CI 0. 50 to 0. 98, p = 0. 035 for one year). A very low-risk subset was identified with ≥ 70 % ST-segment resolution at 60 min whose 30 -day and 1 -year mortality was 1. 0 % and 2. 7 %, respectively, compared with 5. 9 % and 9. 3 % in aborted MI patients with < 70 % ST-segment resolution at 60 min (all p ≤ 0. 002). ConclusionsPrompt fibrinolytic treatment improved the likelihood of aborted MI. The subgroup with complete 60 -min ST-segment resolution had the best clinical outcomes...|$|R
40|$|The 3 G/ 4 G {{mobile network}} is a {{wireless}} infrastructure that offers universal coverage and ubiquitous {{data and voice}} services. It is a large-scale, global network system {{on a par with}} the Internet. In recent years, the demand for mobile data access grows exponentially. The traffic volume is projected to increase three times by 2018, according to a recent CISCO estimate. The demand will be further accelerated by the increasing popularity of smartphones, tablets, and wearable devices. However, its control-plane design is much more complex and offers many more utility functions (e. g., mobility support, radio resource control, and device-level security) than its Internet counterpart. They communicate with one another along three dimensions of cross layers, cross (circuit-switched and packet-switched) domains, and cross (3 G and 4 G) systems. Despite their significance, the correctness verification on their protocols remains largely unexplored. In this dissertation, we examine control-plane protocol interactions in mobile networks. We propose CNetVerifier, a two-phase signaling diagnosis tool to detect problematic interactions in both design and practice. CNetVerifier first performs protocol screening based on 3 GPP standards via domain-specific model checking, and then conducts phone-based empirical validation in operational 3 G/ 4 G networks. With CNetVerifier, we have uncovered six types of troublesome interactions, along three dimensions of cross layers, cross domains, and cross systems. Such control-plane issues span both design defects in the 3 GPP standards and operational slips by carriers. Some are caused by necessary yet problematic cooperation (i. e., protocol interactions are needed but they misbehave), whereas others are due to independent yet unnecessary coupled operations (i. e., protocols interactions are not required but actually coupled). They all result in performance penalties or functional incorrectness. We further quantify the real world impact of control-plane protocols from end-user’s perspective. We conduct two empirical studies on three essential mobile network services for mobile users: user mobility support, voice and data services in operational networks. Specifically, we focus on whether the improper control-plane (i. e., mobility support) operations affect the accounting (management-plane) for roaming users’ mobile data access or have negative impacts on both data and voice services. There are three lessons learnt from our work. First, the current control-plane design in mobile networks does not honor layering structure which has been strictly examined in the Internet community and does not well recognize differences of domains and systems. The problematic control-plane protocol interactions are almost observed anywhere in practice. Coupling unnecessary inter-layer actions leads to longer call setup time or packet delivery latency than usual; Coupling CS and PS services at the shared radio resource state (RRC) may deprive mobile user of 4 G network connectivity; Inconsistent regulations for the context shared by two different systems may get mobile users into “out-of-service” state for tens of seconds. Second, the control-plane and management-plane (e. g., data usage accounting) do not cooperate with each other in a coordinated manner. For example, the data usage accounting is not suspended while an inter-system handoff (e. g., 3 G→ 4 G) is triggered by the control-plane due to user mobility. The mobile devices cannot receive any packets until the handoff procedure is finished (caused by hardware limitation, e. g., single radio). The roaming users still pay for all packets lost during the handoff procedure. Third, the control-plane does not honor diversity in the demands of voice and data services. The voice service is an essential service (or even the most important service) for carriers. It is always granted higher serving priority than the data service. We discover that the not-well-justified design principle leads to serious performance issues (e. g., up to 83. 4 % data throughput slumps or Internet applications get <b>aborted)</b> to <b>data</b> service or even have negative impacts (e. g., missed incoming call) on voice service...|$|R
40|$|Transactional Memory (TM) aims to make {{shared memory}} {{parallel}} programming easier by abstracting away {{the complexity of}} managing shared data. The programmer defines sections of code, called transactions, which the TM system guarantees that will execute atomically and in isolation {{from the rest of}} the system. The programmer is not required to implement such behaviour, as happens in traditional mutual exclusion techniques like locks - that responsibility is delegated to the underlying TM system. In addition, transactions can exploit parallelism that would not be available in mutual exclusion techniques; this is achieved by allowing optimistic execution assuming no other transaction operates concurrently on the same data. If that assumption is true the transaction commits its updates to shared memory by the end of its execution, otherwise, a conflict occurs and the TM system may abort one of the conflicting transactions to guarantee correctness; the aborted transaction would roll-back its local updates and be re-executed. Hardware and software implementations of TM have been studied in detail. However, large-scale adoption of software-only approaches have been hindered for long due to severe performance limitations. In this thesis, we focus on identifying and solving hardware transactional memory (HTM) issues in order to improve concurrency and scalability. Two key dimensions determine the HTM design space: conflict detection and speculative version management. The first determines how conflicts are detected between concurrent transactions and how to resolve them. The latter defines where transactional updates are stored and how the system deals with two versions of the same logical data. This thesis proposes a flexible mechanism that allows efficient storage and access to two versions of the same logical data, improving overall system performance and energy efficiency. Additionally, in this thesis we explore two solutions to reduce system contention - circumstances where transactions <b>abort</b> due to <b>data</b> dependencies - in order to improve concurrency of HTM systems. The first mechanism provides a suitable design to apply prefetching to speed-up transaction executions, lowering the window of time in which such transactions can experience contention. The second is an accurate abort prediction mechanism able to identify, before a transaction's execution, potential conflicts with running transactions. This mechanism uses past behaviour of transactions and locality in memory references to infer predictions, adapting to variations in workload characteristics. We demonstrate that this mechanism is able to manage contention efficiently in single-application and multi-application scenarios. Finally, this thesis also analyses initial real-world HTM protocols that recently appeared in market products. These protocols have been designed to be simple and easy to incorporate in existing chip-multiprocessors. However, this simplicity comes at the cost of severe performance degradation due to transient and persistent livelock conditions, potentially preventing forward progress. We show that existing techniques are unable to mitigate this degradation effectively. To deal with this issue we propose a set of techniques that retain the simplicity of the protocol while providing improved performance and forward progress guarantees in a wide variety of transactional workloads. Postprint (published version...|$|R

