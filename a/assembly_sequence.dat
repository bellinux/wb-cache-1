378|1422|Public
50|$|CodonCode Aligner is a {{commercial}} application for DNA sequence <b>assembly,</b> <b>sequence</b> alignment, and editing on Mac OS X and Windows.|$|E
50|$|Professional {{electronics}} assemblers used {{to operate}} from books of photographs and follow an exact <b>assembly</b> <b>sequence</b> {{to ensure that}} they did not miss any components. This process is labor-intensive, subject to error and not suitable for automated production. Even after the introduction of printed circuit boards, it did not require laying out and manufacturing circuit boards.|$|E
50|$|To {{begin the}} <b>assembly</b> <b>sequence,</b> the crew {{conducted}} {{a series of}} rendezvous maneuvers similar to those conducted on other Shuttle missions to reach the orbiting FGB. On the way, Currie used the Shuttle's robot arm to place Node 1 atop the Orbiter Docking System. Cabana completed the rendezvous by flying Endeavour to within 10 m of the FGB, allowing Currie to capture the FGB with the robot arm and place it on the Node's Pressurized Mating Adapter.|$|E
40|$|Our work {{focuses on}} various {{complexity}} measures for two-handed <b>assembly</b> <b>sequences.</b> For many products, there exist an exponentially large set of valid sequences, and a natural {{goal is to}} use automated systems to select wisely from the choices. Although {{there has been a}} great deal of algorithmic success for finding feasible <b>assembly</b> <b>sequences,</b> there has been very little success towards optimizing the costs of sequences. We attempt to explain this lack of progress, by proving the inherent di#culty in finding optimal, or even near-optimal, <b>assembly</b> <b>sequences.</b> To begin, we define, "virtual <b>assembly</b> <b>sequencing,</b> " a graph-theoretic problem that is a generalization of <b>assembly</b> <b>sequencing,</b> focusing on the combinatorial aspect of the family of feasible <b>assembly</b> <b>sequences</b> while temporarily separating out the specific geometric assumptions inherent to <b>assembly</b> <b>sequencing.</b> We formally prove the hardness of finding even near-optimal sequences for most cost measures in our generalized framework. As a [...] ...|$|R
40|$|Five {{types of}} {{representations}} for <b>assembly</b> <b>sequences</b> are reviewed: the directed graph of feasible <b>assembly</b> <b>sequences,</b> the AND/OR graph of feasible <b>assembly</b> <b>sequences,</b> {{the set of}} establishment conditions, and two types of sets of precedence relationships. (precedence relationships between the establishment of one connection between parts {{and the establishment of}} another connection, and precedence relationships between the establishment of one connection and states of the assembly process). The mappings of one representation into the others are established. The correctness and completeness of these representations are established. The results presented are needed in the proof of correctness and completeness of algorithms for the generation of mechanical <b>assembly</b> <b>sequences...</b>|$|R
40|$|While many {{approaches}} {{have been proposed}} to optimize the product family design for measures of cost, revenue and performance, many of these approaches fail to incorporate {{the complexity of the}} manufacturing issues into family design decision-making. One of these issues is <b>assembly</b> <b>sequencing.</b> This paper presents a simulation study by which the impact of <b>assembly</b> <b>sequencing</b> on the product family design outcomes is investigated. Overall, the results indicate that when the product family design takes into account the <b>assembly</b> <b>sequencing</b> decisions, the outcomes at the shop floor level improve. The results have implications for companies that are looking into increasing their revenue without increasing their investment in the shop floor...|$|R
50|$|Using {{the results}} of Cuoricino, the final details of the CUORE {{detector}} towers were finalized, and an <b>assembly</b> <b>sequence</b> was {{set up for the}} construction of these 19 towers. CUORE-0 was the first detector tower produced on this assembly line. It had 52 improved TeO2 crystals in a copper tower with better surface purity and significantly reduced radon and other contamination. It was operated in the Cuoricino cryostat from 2013 to 2015 as a first test of the new CUORE assembly procedures as the assembly of the CUORE towers was completed.|$|E
50|$|The {{wire list}} is then sorted alphabetically into an optimal <b>assembly</b> <b>sequence.</b> Bottom wires are placed before top wires. Long wires are usually placed first within a level so that shorter wires will hold longer wires down. This reduces {{vibration}} of the longer wires, making the board more rugged in a vibrating environment {{such as a}} vehicle. Placing all the wires of a certain size and level {{at the same time}} makes it easier for an assembly technician to use precut, prestripped wires while using a semiautomated wire-wrapping machine. Wires of different colors, but the same size are also sorted to be placed together.|$|E
5000|$|Just In Sequence {{implementations}} {{introduce a}} number of new process requirements on top of Just In Time practices. A production sequence or final <b>assembly</b> <b>sequence</b> must be shared upwards to suppliers and sub-contractors. Feedback to customers must be organized according to the scheduled output to earn all positive financial effects. For these and other reasons, the actual production sequence must be [...] "broadcast" [...] out to all relevant parties once it is firm. This [...] "broadcast" [...] can be done over the phone, paper, email, or other automated IT system. UN/EDIFACT supports an EDI message standard called DELJIT as one standardized way to communicate this information.|$|E
40|$|Large-scale <b>sequence</b> <b>assembly</b> and {{alignment}} {{are fundamental}} parts of biological computing. However, {{most of the}} large-scale <b>sequence</b> <b>assembly</b> and alignment require intensive computing power and normally take very long time to complete. To speedup the assembly and alignment process, this paper parallelizes the Euler <b>sequence</b> <b>assembly</b> and pair-wise/multiple <b>sequence</b> <b>assembly,</b> two important <b>sequence</b> <b>assembly</b> methods, and takes advantage of Computing Grid which has a colossal computing capacity to meet the large-scale biological computing demand. <br /...|$|R
40|$|The paper {{describes}} {{an approach to}} automatic generation of <b>assembly</b> <b>sequences,</b> which uses formal and heuristic knowledge {{in the area of}} assembly. A design process is envisioned where the engineer specifies individual part geometries and relates parts to each other to create assemblies. A computerized tool then analyzes the design and suggests sequences for assembling the product. The high-level modeling scheme is described first. Parts are represented in terms of their features, while products consist of parts related to each other through mating conditions. Automatic reasoning processes applied to the design representation plan selected <b>assembly</b> <b>sequences</b> in two stages: A graph transformation method generates an exploded view of the product and a rule-based procedure derives selected <b>assembly</b> <b>sequences.</b> An implementation for triaxial assemblies is described and demonstrated...|$|R
30|$|BLAST {{search of}} the {{complete}} Sra-til nucleotide sequence showed 99 % identity with {{a part of a}} sequence in GenBank under accession no. LN 609529 (S. ratti genome assembly) at position 13120855 – 13122459 and shared 71 % identity with parts of the S. stercoralis and S. papillosus genome <b>assembly</b> <b>sequences</b> (accession no. LL 999048 and LM 525578, respectively). In addition, Sra-til nucleotide sequence showed 69 % similarity with parts of the genome <b>assembly</b> <b>sequences</b> of both S. venezuelensis (accession no. LM 524970) and Parastrongyloides trichosuri (accession no. LM 523174).|$|R
5000|$|In May 1986, NASA {{produced}} a report which had studied the <b>assembly</b> <b>sequence</b> {{with the intent}} of providing early [...] "man-tended" [...] capacity, ensuring that at an early stage, despite the station not being able to support a crew, research work could be carried out by occasional visiting Shuttle flights. Following the Challenger accident, a Critical Evaluation Task Force was set up to reassess the validity and safety of the Station design. While this validated the use of the Dual-Keel design, post-Challenger safety concerns led to changes in the assembly plans, as well as assorted minor changes. Johnson Space Center had previously expressed misgivings about the amount of EVA work needed to assemble the station, which were addressed, as were the Shuttle payload reductions stemming from safety improvements post Challenger.|$|E
50|$|Once the {{sequence}} is broadcast, each party must immediately {{take action to}} deliver sequenced parts in time. In many cases the turn-around time from broadcast to final assembly is less than 2 hours, with some components required in 30 minutes or less. With this time frame, there is little room for errors. In addition, quality inspection and poka-yoke must be implemented in the sequencing step to guarantee that {{the sequence}}d components match the <b>assembly</b> <b>sequence</b> perfectly. In many cases, suppliers must manage periodic sequence reversals, for example, when loading racks into a truck, since the first rack into the truck is {{the last one to}} come out. Employees and systems must also properly manage exceptional scenarios, such as re-processing damaged items after initial sequencing, skipping slots for scrapped items, etc. Just In Sequence implementations can only be successful if all of these processes are implemented correctly and all people involved understand what is at stake.|$|E
40|$|The <b>assembly</b> <b>sequence</b> {{is one of}} {{the most}} time {{consuming}} and expensive manufacturing activities. <b>Assembly</b> <b>sequence</b> affects many of product development design and production and is relevant to many life cycle issues of the product, so <b>assembly</b> <b>sequence</b> analysis should be part of early product design. The cost of assembly on an average is 10 - 30...|$|E
40|$|A genetic {{algorithm}} that generates and evaluates assembly plans is proposed This algorithm {{is able to}} generate near-optimal assembly plans through purposely developed crossover and mutation operators starting from a randomly initialized population of <b>assembly</b> <b>sequences.</b> The optimization criteria we {{used to assess the}} quality of feasible <b>assembly</b> <b>sequences</b> are: i) to minimize the orientation changes of the product; ii) to minimize the gripper changes, and iii) to group as much as possible technologically similar assembly operations. Experimental results that confirm the validity of our approach are also included...|$|R
40|$|The work {{presents}} an appropriate methodology for generation of <b>assembly</b> <b>sequences.</b> Several existing methods are studied and applied on randomly chosen products, {{which are then}} used as building blocks for development of a simplified and appropriate methodology for generation of robotic <b>assembly</b> <b>sequences.</b> The developed methodologies are validated logically. The suitability of these methods with respect to various aspects of robotic assembly is examined and the appropriate one is selected for use. The outcome of the present work is poised to make the robotic assembly system more efficient and flexible. 1...|$|R
40|$|We {{consider}} {{the problem of}} removing a given disk from a collection of unit disks in the plane. At each step, we allow a disk to be removed by a collision-free translation to infinity, and {{the goal is to}} access a given disk using as few steps as possible. This Disks problem is a version of a common task in <b>assembly</b> <b>sequencing,</b> namely removing a given part from a fully assembled product. Recently there has been a focus on optimizing <b>assembly</b> <b>sequences</b> over various cost measures, however with very limited algorithmic success. We explain this lack of success, proving strong inapproximability results in this simple geometric setting. Namely, we show that approximating the number of steps required to within a factor of 2 log 1 -# n for any # > 0 is quasi-NP-hard. This provides the first inapproximability results for <b>assembly</b> <b>sequencing,</b> realized in a geometric setting. As a stepping stone, we study the approximability of scheduling with and/or precedence constraints. The Disks problem [...] ...|$|R
40|$|Abstract- The optimal {{feasible}} robotic <b>assembly</b> <b>sequence</b> {{leads to}} efficient manufacturing process by minimizing the assembly cost. Assembly cost {{is based on}} the energy required to assemble the components through collision free path and robot directional changes during the assembly operations. So, the determination of a feasible <b>assembly</b> <b>sequence</b> with minimum assembly cost is vital concern for manufacturing industries. Through obtaining optimal assembly sequences taking user inputs (assembly connection matrix, precedence relations, etc.,) is less complicate, the correctness of methodology depends on the skill of the engineer who supply these inputs. The present research aims to explore PSO based methodology to determine cost effective optimal robotic <b>assembly</b> <b>sequence</b> through CAD product. The integration of PSO with CAD environment ensures the correctness and completeness of the methodology. The methods to interface with the CAD data to extract liaison data, to test for liaison predicate and feasibility predicate is presented and analyzed briefly with an example. In this methodology, each component of the assembled product is considered as the particle (bird) and mutation operation is performed to generate a new <b>assembly</b> <b>sequence</b> for each iteration. To generate optimal <b>assembly</b> <b>sequence,</b> a fitness function is generated, which {{is based on the}} energy function and robot directional changes associated with <b>assembly</b> <b>sequence.</b> The sequence which is having the best fitness value is treated as the optimal robotic <b>assembly</b> <b>sequence.</b> Index Terms—: robotic <b>assembly</b> <b>sequence,</b> particle swarm optimization, optimal <b>assembly</b> <b>sequence.</b> I...|$|E
40|$|<b>Assembly</b> <b>sequence</b> {{planning}} (ASP) {{refers to}} the process of arrangement of a particular <b>assembly</b> <b>sequence</b> with regard to a product design. In <b>assembly</b> <b>sequence</b> planning, the relationships between components such as the geometry of compliant assemblies should be taken into account before a precedence diagram is eventually built and feasible assembly sequences can be generated. A better <b>assembly</b> <b>sequence</b> can contribute to reduce the cost and time of the manufacturing process, that is, among NP-hard problems. Thus, it is needed to find the optimal sequence from the feasible assembly sequences. In past few years, many optimization techniques have been used to solve the <b>assembly</b> <b>sequence</b> planning problem include Simulated Annealing (SA), Genetic Algorithm (GA), and binary Particle Swarm Optimization (BPSO). In this paper, an approach using Gravitational Search Algorithm (GSA) which is a heuristic optimization algorithm that incorporates the Newton’s law of gravity and the law of motion into analytical studies of systems is proposed to solve the <b>assembly</b> <b>sequence</b> planning problem. The experimental results show that the proposed approach is more efficient in solving the <b>assembly</b> <b>sequence</b> planning problem, with less of total assembly time in comparison with the three other approaches...|$|E
40|$|This paper {{presents}} a knowledge-based method for identifying infeasible assembly {{operations in the}} context of <b>assembly</b> <b>sequence</b> planning. In addition the reasons for the infeasibility are identified and these can guide product designers towards the necessary design changes to make a preferred <b>assembly</b> <b>sequence</b> feasible, or guarantee that an <b>assembly</b> <b>sequence</b> includes a specific partial assembly state. This capability increases the usefulness of <b>assembly</b> <b>sequence</b> planners as concurrent engineering tools by contributing to a closer integration between product design and <b>assembly</b> <b>sequence</b> planning. In the identification of infeasible assembly operations the concept of minimal infeasible sets of connections is introduced and two issues are addressed: the knowledge-based generation of these minimal sets, and their suitability to form a basis for a concise explanation of the causes of assembly operation infeasibility. Two simple examples illustrate practical applications of the method...|$|E
50|$|Consed is {{a program}} for viewing, editing, and {{finishing}} DNA <b>sequence</b> <b>assemblies.</b> Originally developed for <b>sequence</b> <b>assemblies</b> created with phrap, recent versions also support other <b>sequence</b> <b>assembly</b> programs like Newbler.|$|R
40|$|Part 7 : Knowledge RepresentationInternational audienceThe {{representations}} of assembly knowledge and <b>assembly</b> <b>sequences</b> are crucial in assembly planning, where {{the size of}} parts involved is a significant and often prohibitive difficulty. Zero-suppressed binary decision diagram (ZBDD) is an efficient form to represent and manipulate the sets of combination, and appears to give improved results for large-scale combinatorial optimization problems. In this paper, liaison graphs, translation functions, assembly states and assembly tasks are represented as sets of combinations, and the symbolic ZBDD representation of <b>assembly</b> <b>sequences</b> is proposed. An example is given to show the feasibility of the ZBDD-based representation scheme...|$|R
40|$|Abstract—The paper {{describes}} a new method for simultane-ously (dis) <b>assembly</b> <b>sequencing</b> and path planning. Indeed, both {{are parts of}} a same problem that can be formulated in a general path planning framework. Based on this formulation, the algo-rithm proposed in this paper extends a popular sampling-based path planner, RRT, to solve general (dis) assembly planning problems involving objects with arbitrary shapes, and possibly requiring non-monotonic (dis) <b>assembly</b> <b>sequences.</b> The method does not require complex geometric computations, and is easy to implement. Experimental results show {{the efficiency of the}} method for solving a large class of problems. I...|$|R
40|$|An {{appropriate}} {{sequence of}} assembly operations increases the productivity and enhances product quality there by decrease {{the overall cost}} and manufacturing lead time. Achieving such <b>assembly</b> <b>sequence</b> is a complex combinatorial optimization problem with huge search space and multiple assembly qualifying criteria. The {{purpose of the current}} research work is to develop an intelligent strategy to obtain an optimal <b>assembly</b> <b>sequence</b> subjected to the assembly predicates. This paper presents a novel hybrid artificial intelligent technique, which executes Artificial Immune System (AIS) in combination with the Genetic Algorithm (GA) to find out an optimal feasible <b>assembly</b> <b>sequence</b> from the possible <b>assembly</b> <b>sequence.</b> Two immune models are introduced in the current research work: (1) Bone marrow model for generating possible <b>assembly</b> <b>sequence</b> and reduce the system redundancy and (2) Negative selection model for obtaining feasible <b>assembly</b> <b>sequence.</b> Later, these two models are integrated with GA in order to obtain an optimal <b>assembly</b> <b>sequence.</b> The proposed AIS-GA algorithm aims at enhancing the performance of AIS by incorporating GA as a local search strategy to achieve global optimum solution for assemblies with large number of parts. The proposed algorithm is implemented on a mechanical assembly composed of eleven parts joined by several connectors. The method is found to be successful in achieving global optimum solution with less computational time compared to traditional artificial intelligent techniques...|$|E
40|$|This paper {{discusses}} the Space Station <b>assembly</b> <b>sequence</b> {{planning and development}} process. It presents the planning methodologies from both historial and current perspectives. It is shown that planning the <b>assembly</b> <b>sequence</b> is a new and unique challenge and its solution requires the simultaneous satisfaction of many diverse variables and constants. The considerations which influence {{the development of the}} <b>assembly</b> <b>sequence</b> include launch vehicle integration and lift capabilities, on-orbit assembly flight operations, vehicle flight dynamics, spacecraft system capabilities and resource availability. Many of these considerations are described in this paper. In addition, the examples presented demonstrate the current process for <b>assembly</b> <b>sequence</b> planning and show many of the complex trade-offs that must be performed...|$|E
40|$|Assembly {{optimisation}} {{activities that}} involve <b>assembly</b> <b>sequence</b> planning and assembly line balancing have been extensively studied {{because of the}} importance of optimal assembly efficiency to manufacturing competitiveness. Numerous research works in <b>assembly</b> <b>sequence</b> planning and assembly line balancing mainly focus on developing algorithms to solve problems and to optimise <b>assembly</b> <b>sequence</b> planning and assembly line balancing. However, there is a scarcity in works that focus on developing problems to test these algorithms. In optimisation algorithm development, testing algorithms by a broad range of test problems is crucial to identify their strengths and weaknesses. This article proposes a generator of <b>assembly</b> <b>sequence</b> planning and assembly line balancing test problems with tuneable complexity levels. Experiments confirm that the selected combination of input attributes does control the generated <b>assembly</b> <b>sequence</b> planning and assembly line balancing problem complexity, and also that the generated problems can be used to identify the suitability of a given algorithm to problem types...|$|E
40|$|This paper {{analyses}} four representations for <b>assembly</b> <b>sequences</b> {{which are}} based on directed graphs, on AND/OR graphs, on establishment conditions, and on precedence relationships. The latter includes two types: precedence relationships between the establishment of one connection between parts and the establishment of another connection, and precedence relatioships between the establishment of one connection and states of the assembly process. The paper discusses how each representation is related to the others. The correctness and completeness of these representations are also addressed. The results presented are needed to prove the correctness and completeness of algorithms for the generation of mechanical <b>assembly</b> <b>sequences.</b> 1...|$|R
40|$|AbstractIn the {{assembly}} process, the tolerance of mating parts or products, especially geometric tolerance, may cause geometric deviations in {{the assembly}}. These deviations {{must be kept}} in a reasonable range to ensure the precision and stability of assembly. The paper analyzes the influence caused by the difference in <b>assembly</b> <b>sequences</b> on the geometric deviation of key features in an assembly, which results in the influences on assembly precision. The research is done on an example model with two approaches: the mathematical method based on homogenous transformation matrix (HTM) and the simulation-based method. In the mathematical method, a transformation matrix is {{used to describe the}} geometric deviations of mating features caused by the tolerance and assembly clearance, and the resulting propagations in different <b>assembly</b> <b>sequences.</b> In the other method, the geometric deviations are measured with a CAT package based on the Monte-Carlo technique. Through the results of the methods, assembly precision could be identified and corresponding <b>assembly</b> <b>sequences</b> could be evaluated, which may serve as the evidence for the optimization assembly process planning...|$|R
40|$|Abstract. We {{consider}} {{the problem of}} removing a given disk from a collection of unit disks in the plane. At each step, we allow a disk to be removed by a collision-free translation to infinity, and {{the goal is to}} access a given disk using as few steps as possible. This Disks problem is a version of a common task in <b>assembly</b> <b>sequencing,</b> namely removing a given part from a fully assembled product. Recently there has been a focus on optimizing <b>assembly</b> <b>sequences</b> over various cost measures, however with very limited algorithmic success. We explain this lack of success, proving strong inapproximability results in this simple geometric setting. Namely, we show that approximating the number of steps required to within a factor of 2 log 1 −γ n for any γ> 0 is quasi-NP-hard. This provides the first inapproximability results for <b>assembly</b> <b>sequencing,</b> realized in a geometric setting. As a stepping stone, we study the approximability of scheduling with and/or precedence constraints. The Disks problem can be formulate...|$|R
40|$|Abstract — A robotic <b>assembly</b> <b>sequence</b> is {{considered}} to be optimal when it minimizes assembly cost and satisfies the process constraints. The assembly cost relates to assembly operations, assembly motions and assembly direction changes. The present work utilizes an ant colony optimization (ACO) method for generation of optimized robotic assembly sequences. The method reflects the assembly cost to an energy function associated with the <b>assembly</b> <b>sequence.</b> The energy function is iteratively minimized by ACO to generate the desired optimized <b>assembly</b> <b>sequence.</b> A case study is presented to show the effectiveness of the proposed method. I...|$|E
40|$|Abstract. <b>Assembly</b> <b>sequence</b> {{planning}} (ASP) {{and assembly}} line balancing (ALB) problems are two essential {{problems in the}} assembly optimization. This paper proposes an ant colony algorithm for integrating <b>assembly</b> <b>sequence</b> planning and assembly line balancing, {{to deal with the}} two problems on parallel, and resolve the possible conflict between two optimization goals. The <b>assembly</b> <b>sequence</b> planning problem and the assembly line balancing problem are discussed, the process of the proposed ant colony algorithm is investigated. The results can provide a set of solutions for decision department in assembly planning...|$|E
40|$|Part 10 : PLM Virtual and Simulation EnvironmentsInternational audienceNowadays {{in order}} to perform {{assembly}} process planning by using CAPP (Computer Aided Process Planning), researches to generate the <b>assembly</b> <b>sequence</b> have come under constant interest by many researchers and they are devoted to optimize the <b>assembly</b> <b>sequence</b> according to the novel approach such as Genetic Algorithm and the newly biology inspired principle such as ant colony optimizing method. In this paper, the developed <b>assembly</b> <b>sequence</b> generating system analyzes the relationship between assembled parts based on surface contacting information. Moreover, this system generates the new type of parts liaison graph for the assembly sequences via analyzed information such as common area between parts, related ratio and number of the connected parts. Finally, the optimized <b>assembly</b> <b>sequence</b> is generated logically through the parts liaison graph...|$|E
40|$|Abstract. The chaotic {{adaptive}} ant colony {{optimization algorithm}} (CAACO) is proposed {{to seek the}} optimal or near-optimal <b>assembly</b> <b>sequences</b> of mechanical products. Different from the general AACO algorithm, the parameter ρ denoting the global evaporation rate of the AACO algorithm is not specified by the designers, but is generated with the chaotic operators in the optimization process. An example is used to validate the capability of the CAACO algorithm, and {{the results show that}} the robustness of the CAACO algorithm is enhanced and more ants in the ant colony can find their own optimal or near-optimal <b>assembly</b> <b>sequences</b> than those of the general AACO algorithm...|$|R
30|$|Chimera ([URL] is a {{extensible}} molecular {{modeling system}} used for interactive visualization {{and analysis of}} molecular structures and related data, including density maps, supramolecular <b>assemblies,</b> <b>sequence</b> alignments, docking results, trajectories and conformational analysis (Pettersen et al. 2004).|$|R
40|$|This work {{develops}} optimal <b>assembly</b> <b>sequences</b> for {{modular building}} blocks. The underlying concept {{is that an}} automated device could take a virtual shape such as a CAD file, and decide how to physically build the shape using simple, identical building blocks. The primary focus of this work {{is the development of}} methods for generating <b>assembly</b> <b>sequences</b> in a time-feasible manner that ensure static stability at each step of the assembly. This is accomplished by a multi-hierarchical rule-based approach, consisting of a set of low-level, mid-level and high-level assembly rules. Both high-level and mid-level assembly rules are primarily based on static considerations. The best performing rules are presented and their behavior is analyzed...|$|R
