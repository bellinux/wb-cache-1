10000|10000|Public
5|$|<b>A</b> <b>cellular</b> {{automaton}} {{consists of}} an array of cells, each one of which has {{a finite number of}} possible states, together with a rule for updating all cells simultaneously based only on the states of neighboring cells. A configuration of <b>a</b> <b>cellular</b> automaton is an assignment of a state to every cell of the automaton; the update rule of <b>a</b> <b>cellular</b> automaton forms a function from configurations to configurations, with the requirement that the updated value of any cell depends only on some finite neighborhood of the cell, and that the function is invariant under translations of the input array.|$|E
5|$|The {{majority}} {{problem is}} the problem of constructing <b>a</b> <b>cellular</b> automaton that, when run on any finite set of cells, can compute the value held by a majority of its cells.|$|E
5|$|<b>A</b> <b>cellular</b> {{automaton}} {{is defined}} by its cells (often a one- or two-dimensional array), a finite set of values or states that can go into each cell, a neighborhood associating each cell with a finite set of nearby cells, and an update rule according to which the values of all cells are updated, simultaneously, {{as a function of}} the values of their neighboring cells.|$|E
50|$|C. L. Nehaniv in 2002, {{and also}} Y. Takada et al. in 2004, {{proposed}} a universal constructor directly implemented upon <b>an</b> asynchronous <b>cellular</b> automaton, rather than upon <b>a</b> synchronous <b>cellular</b> automaton.|$|R
50|$|In 2002, a women's WTA Tour {{event in}} Oklahoma City was {{purchased}} {{and moved to}} Memphis; this event was renamed The <b>Cellular</b> South Cup. <b>As</b> <b>Cellular</b> South ended sponsoring the tournament after 2011, the event was renamed Memphis International.|$|R
5000|$|<b>As</b> <b>cellular</b> decompositions of the {{projective}} plane, {{they have}} Euler characteristic 1, while spherical polyhedra have Euler characteristic 2. The qualifier [...] "globally" [...] is to contrast with locally projective polyhedra, which are {{defined in the}} theory of abstract polyhedra.|$|R
5|$|In <b>a</b> <b>cellular</b> automaton, {{each cell}} in an {{infinite}} grid of cells may {{have one of}} a finite set of states, and all cells update their states simultaneously based only on the configuration of a small set of neighboring cells.|$|E
5|$|The Rasenshuriken creates countless {{microscopic}} wind-blades that severely {{damage the}} body on <b>a</b> <b>cellular</b> level. It produces so many individual strikes that even Kakashi Hatake {{is unable to}} count them all with his Sharingan. The wind-blades sever all nerve channels in the body, leaving the target unable to move after being struck. They also attack the entire chakra circulatory system, which cannot be repaired by any form of medical ninjutsu.|$|E
5|$|The user {{interface}} changed dramatically between versions, only retaining similar functionality. The Today Screen, later called the Home Screen, shows the current date, owner information, upcoming appointments, e-mails, and tasks. The taskbar display the current {{time as well}} as the volume level. Devices with <b>a</b> <b>cellular</b> radio also show the signal strength on said taskbar.|$|E
50|$|In {{mathematics}} and computability theory, <b>an</b> elementary <b>cellular</b> automaton is <b>a</b> one-dimensional <b>cellular</b> automaton {{where there are}} two possible states (labeled 0 and 1) and the rule to determine the state of a cell {{in the next generation}} depends only on {{the current state of the}} cell and its two immediate neighbors. As such it is one of the simplest possible models of computation. Nevertheless, there is <b>an</b> elementary <b>cellular</b> automaton (rule 110, defined below) which is capable of universal computation.|$|R
40|$|Abstract. Partitioned <b>cellular</b> automata are <b>a</b> {{variant of}} <b>cellular</b> automata that was defined {{in order to}} make it very simple to create complex automata having strong {{properties}} such as number conservation and reversibility (which are often difficult to obtain on cellular automata). In this article we show how <b>a</b> partitioned <b>cellular</b> automaton can be translated into <b>a</b> regular <b>cellular</b> automaton in such a way that these properties are conserved. 1...|$|R
5|$|Any second-order {{automaton}} may {{be transformed}} into <b>a</b> conventional <b>cellular</b> automaton, in which the transition function depends only on the single previous time step, by combining pairs of states from consecutive time steps of the second-order automaton into single states of <b>a</b> conventional <b>cellular</b> automaton.|$|R
5|$|A {{configuration}} in Rule 90 can be partitioned {{into two}} subsets of cells {{that do not}} interact with each other. One of these two subsets consists of the cells in even positions at even time steps and the cells in odd positions in odd time steps. The other subset consists of the cells in even positions at odd time steps and the cells in odd positions at even time steps. Each of these two subsets {{can be viewed as}} <b>a</b> <b>cellular</b> automaton with only its half of the cells.|$|E
5|$|A lattice gas {{automaton}} is <b>a</b> <b>cellular</b> automaton {{designed to}} simulate the motion of particles in a fluid or an ideal gas. In such a system, gas particles move on straight lines with constant velocity, until undergoing elastic collision with other particles. Lattice gas automata simplify these models by only allowing a constant number of velocities (typically, only one speed and either four or six directions of motion) and by simplifying the types of collision that are possible.|$|E
5|$|A {{reversible}} {{cellular automaton}} is <b>a</b> <b>cellular</b> automaton {{in which every}} configuration has a unique predecessor. That is, it is a regular grid of cells, each containing a state drawn from a finite set of states, with a rule for updating all cells simultaneously based on the states of their neighbors, such that the previous state of any cell before an update can be determined uniquely from the updated states of all the cells. The time-reversed dynamics of a reversible cellular automaton can always be described by another cellular automaton rule, possibly on a much larger neighborhood.|$|E
40|$|This paper {{shows how}} partial {{differential}} {{problems can be}} solved thanks to <b>cellular</b> computing and <b>an</b> adaptation of the Least Squares Finite Elements Method. <b>As</b> <b>cellular</b> computing can be implemented on distributed parallel architectures, this method allows the distribution of a resource demanding differential problem over a computer network...|$|R
40|$|Toffoli {{showed that}} every <b>cellular</b> {{automaton}} of <b>an</b> arbitrary dimension d can be embedded into <b>a</b> reversible <b>cellular</b> automaton of dimension d+ 1. He asked "whether <b>an</b> arbitrary <b>cellular</b> automaton can be {{embedded in a}} reversible one having {{the same number of}} dimensions" and conjectured that this is not possible. We show that his conjecture is true. Even if one imposes only a weak, natural condition on embeddings, no cellular automaton which possesses a Garden of Eden configuration can be embedded into <b>a</b> reversible <b>cellular</b> automaton of the same dimension...|$|R
40|$|ISBN 978 - 5 - 94057 - 377 - 7 International audiencePartitioned <b>cellular</b> automata are <b>a</b> {{variant of}} <b>cellular</b> automata that was defined {{in order to}} make it very simple to create complex automata having strong {{properties}} such as number conservation and reversibility (which are often difficult to obtain on cellular automata). In this article we show how <b>a</b> partitioned <b>cellular</b> automaton can be translated into <b>a</b> regular <b>cellular</b> automaton in such a way that these properties are conserved...|$|R
5|$|Alice and the Redfields {{board the}} Arcadia, {{discovering}} it functional but abandoned. Claire then remembers Arcadia is an Umbrella trap to get test subjects; they release the survivors, among them K-Mart (Spencer Locke). Alice follows {{a trail of}} blood deeper into the ship, where she finds Wesker. The T-virus revived him, but it battles Wesker for control, something he believes fresh human DNA can pacify; the Umbrella staff fled when he began eating test subjects. Alice's DNA is superior to his, since she retained control despite her bonding with the virus at <b>a</b> <b>cellular</b> level; Wesker believes eating her will help him regain control of his body over {{the effects of the}} T-virus.|$|E
5|$|Every {{configuration}} of Rule 90 has exactly four predecessors, other configurations {{that form the}} given configuration after a single step. Therefore, in contrast to many other cellular automata such as Conway's Game of Life, Rule 90 has no Garden of Eden, a configuration with no predecessors. It {{provides an example of}} <b>a</b> <b>cellular</b> automaton that is surjective (each configuration has a predecessor) but not injective (it has sets of more than one configuration with the same successor), showing that the converse of the Garden of Eden theorem is not true.|$|E
5|$|From the {{descriptions}} of the rules above, two important properties of its dynamics may immediately be seen. First, in Rule 184, for any finite set of cells with periodic boundary conditions, the number of 1s {{and the number of}} 0s in a pattern remains invariant throughout the pattern's evolution. Rule 184 and its reflection are the only elementary cellular automata to have this property of number conservation. Similarly, if the density of 1s is well-defined for an infinite array of cells, it remains invariant as the automaton carries out its steps. And second, although Rule 184 is not symmetric under left-right reversal, it does have a different symmetry: reversing left and right {{and at the same time}} swapping the roles of the 0 and 1 symbols produces <b>a</b> <b>cellular</b> automaton with the same update rule.|$|E
5000|$|<b>A</b> block <b>cellular</b> {{automaton}} {{consists of}} the following components: ...|$|R
5000|$|... #Caption: <b>A</b> multi-directional, <b>cellular</b> network {{antenna array}} ("cell tower") ...|$|R
5000|$|Brian's Brain, <b>a</b> similar <b>cellular</b> {{automaton}} by {{the same}} author ...|$|R
5|$|Snapdragon {{system on}} chip {{products}} typically include a graphics processing unit (GPU), a global positioning system (GPS) and <b>a</b> <b>cellular</b> modem integrated into a single package. It has software included that operates graphics, video and picture-taking. There are 14 different Snapdragon products under the 200, 400, 600 and the 800 series spanning from low to high-end respectively. Some of their components include the Adreno graphics processing, the Qualcomm Hexagon DSP and processors using Qualcomm's S4 processor architecture. In addition to smartphones, the 400 series is used in smart watches and the 602A is intended for electronics in cars.|$|E
5|$|The RNA genome {{consists}} {{of at least}} seven structural landmarks (LTR, TAR, RRE, PE, SLIP, CRS, and INS), and nine genes (gag, pol, and env, tat, rev, nef, vif, vpr, vpu, and sometimes a tenth tev, which is a fusion of tat env and rev), encoding 19 proteins. Three of these genes, gag, pol, and env, contain information {{needed to make the}} structural proteins for new virus particles. For example, env codes for a protein called gp160 that is cut in two by <b>a</b> <b>cellular</b> protease to form gp120 and gp41. The six remaining genes, tat, rev, nef, vif, vpr, and vpu (or vpx in the case of HIV-2), are regulatory genes for proteins that control the ability of HIV to infect cells, produce new copies of virus (replicate), or cause disease.|$|E
5|$|The {{fact that}} every {{configuration}} has a predecessor may be summarized {{by saying that}} Rule 90 is surjective. The function that maps each configuration to its successor is, mathematically, a surjective function. Rule 90 is also not injective. In an injective rule, every two different configurations have different successors, but Rule 90 has pairs of configurations with the same successor. Rule 90 {{provides an example of}} <b>a</b> <b>cellular</b> automaton that is surjective but not injective. The Garden of Eden theorem of Moore and Myhill implies that every injective cellular automaton must be surjective, but this example shows that the converse is not true.|$|E
50|$|The {{counterexample}} given above for {{a continuous}} and shift-equivariant map {{which is not}} <b>a</b> classical <b>cellular</b> automaton, is <b>an</b> example of <b>a</b> generalized <b>cellular</b> automaton. When the alphabet is finite, the definition of generalized cellular automata coincides with the classical definition of cellular automata due to the compactness of the shift space.|$|R
40|$|Cellular automata are {{discrete}} dynamical systems whose config-urations {{are determined}} by local rules acting on each cell in syn-chronous. Topological entoropy is a tool for measuring the complex-ity of these dynamical systems. In this paper we estimate topologi-cal entropy of <b>a</b> two-dimensional nonlinear <b>cellular</b> automaton. The method we use is that <b>a</b> one-dimensional <b>cellular</b> automaton with positive topological entoropy is “naturally ” embedded into the two-dimensional cellular automaton. Hence we obtain <b>a</b> multidimensional <b>cellular</b> automaton with infinite topological entoropy. 1...|$|R
5|$|Designing {{reversible}} {{rules for}} block cellular automata, and {{determining whether a}} given rule is reversible, is easy: for <b>a</b> block <b>cellular</b> automaton to be reversible it is necessary and sufficient that the transformation applied to the individual blocks at {{each step of the}} automaton is itself reversible. When <b>a</b> block <b>cellular</b> automaton is reversible, the time-reversed version of its dynamics can also be described as <b>a</b> block <b>cellular</b> automaton with the same block structure, using a time-reversed sequence of partitions of cells into blocks, and with the transition function for each block being the inverse function of the original rule.|$|R
5|$|The {{systemic}} {{heart has}} muscular contractile walls {{and consists of}} a single ventricle and two atria, one for {{each side of the}} body. The blood vessels consist of arteries, capillaries and veins and are lined with <b>a</b> <b>cellular</b> endothelium which is quite unlike that of most other invertebrates. The blood circulates through the aorta and capillary system, to the vena cavae, after which the blood is pumped through the gills by the auxiliary hearts and back to the main heart. Much of the venous system is contractile, which helps circulate the blood.|$|E
5|$|The time-reversed {{dynamics}} of the automaton can be described by another cellular automaton. Clearly, {{for this to be}} possible, the update rule must be bijective. In the other direction, if the update rule is bijective, then it has an inverse function that is also bijective. This inverse function must be <b>a</b> <b>cellular</b> automaton rule. The proof of this fact uses the Curtis–Hedlund–Lyndon theorem, a topological characterization of cellular automata rules as the translation-invariant functions that are continuous with respect to the Cantor topology on the space of configurations.|$|E
5|$|Culik {{begins with}} the {{observation}} that <b>a</b> <b>cellular</b> automaton has an injective transition function {{if and only if}} the transition function is injective on the subsets of configurations that are periodic (repeating the same substring infinitely often in both directions). He defines a nondeterministic finite-state transducer that performs the transition rule of the automaton on periodic strings. This transducer works by remembering the neighborhood of the automaton {{at the start of the}} string and entering an accepting state when that neighborhood concatenated to the end of the input would cause its nondeterministically chosen transitions to be correct. Culik then swaps the input and output of the transducer. The transducer resulting from this swap simulates the inverse dynamics of the given automaton. Finally, Culik applies previously known algorithms to test whether the resulting swapped transducer maps each input to a single output.|$|E
40|$|Abstract:Using the Euclidean {{decomposition}} of the hyperbolic surface, R. C. Penner gave <b>a</b> canonical <b>cellular</b> {{decomposition of}} the decorated Teichmüller space of punctured surfaces, which is invariant by {{the action of}} the mapping class group. Adapting his method, we give <b>a</b> canonical <b>cellular</b> decomposition of the Teichmüller space of compact orientable surfaces with non-empty boundary...|$|R
50|$|The MEC {{application}} server can be deployed at the macro base station EnodeB {{that is part}} of <b>an</b> LTE <b>cellular</b> network, or at the Radio Network Controller (RNC) {{that is part of}} <b>a</b> 3G <b>cellular</b> network and at a multi-technology cell aggregation site. The multi-technology cell aggregation site can be located indoors or outdoors.|$|R
40|$|Doctor of PhilosophyThe {{main purpose}} of this thesis is {{to prove that the}} {{cyclotomic}} Khovanov-Lauda-Rouquier algebras of type A over Z are free by giving <b>a</b> graded <b>cellular</b> basis of the cyclotomic KLR algebra. We then extend it to obtain <b>a</b> graded <b>cellular</b> basis of the affine KLR algebra, which indicates that the affine KLR algebra is <b>an</b> affine graded <b>cellular</b> algebra. Finally we work with the Jucys-Murphy elements of the cyclotomic Hecke algebras of type A and proved a periodic property of these elements...|$|R
