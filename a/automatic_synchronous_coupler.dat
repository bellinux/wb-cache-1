0|26|Public
5000|$|... #Caption: Unimog {{pushing a}} [...] "Spindle Precision Wrenching Unit" [...] used for <b>automatic</b> and <b>synchronous</b> {{tightening}} and loosening of rail fastenings ...|$|R
40|$|Abstract—This paper {{presents}} the design, analysis {{and development of}} permanent magnet (PM) torque couplers. These couplers employ rare-earth magnets. Based on finite element analysis and earlier analytical works both concentric and face-type <b>synchronous</b> type <b>couplers</b> have been designed and fabricated. The experimental performance has good correlation with finite element calculations...|$|R
5000|$|At a {{communications}} center, the power required by all <b>automatic</b> switching, <b>synchronous,</b> and terminal equipment (operated simultaneously on-line or in standby), control and keying equipment, plus lighting, ventilation, and air- conditioning equipment {{required to maintain}} full continuity of communications.|$|R
40|$|Information system (IS) {{architectures}} {{have not}} paid {{enough attention to}} integration in the past because integration was not important to build ISs from scratch. However, with the variety and number of ISs in medium/large organizations increasing, including ERP systems, the need for integration is bigger than ever. Furthermore, most organizations now want to integrate their ISs with those belonging to other organizations. In this paper we propose an extension to our previous proposals for representing IS architectures in order to properly support a large variety of integration scenarios between IS, including intra and inter organizations. In particular we support manual and <b>automatic,</b> <b>synchronous</b> and asynchronous integration. We also present an example to illustrate the proposal with real world IS integration needs...|$|R
40|$|<b>Automatic,</b> <b>synchronous</b> and {{of course}} {{reliable}} population of the condition database is critical for the correct operation of the online selection {{as well as of}} the offline reconstruction and data analysis. We will describe here the system put in place in the CMS experiment to automate the processes to populate centrally the database and make condition data promptly available both online for the high-level trigger and offline for reconstruction. The data are ``dropped{''} by the users in a dedicated service which synchronizes them and takes care of writing them into the online database. Then they are automatically streamed to the offline database, hence immediately accessible offline worldwide. This mechanism was intensively used during 2008 and 2009 operation with cosmic ray challenges and first LHC collision data, and many improvements were done so far. The experience of this first years of operation will be discussed in detail...|$|R
40|$|The {{goal of the}} ILDAS {{programme}} is {{to develop}} an operational system for determining the current waveform and attachment points of lightning striking aircraft in-flight. During a flight campaign, the system’s performance was verified using a multi-sensor configuration, capable of real-time detection of lightning strikes on the aircraft and <b>automatic</b> high-rate <b>synchronous</b> measurement and subsequent recording of sensor data from eight magnetic and one electric-field sensors. The measurement setup is presented, calibration is addressed and the first results from the flight test are presented...|$|R
40|$|<b>Automatic,</b> <b>synchronous</b> and {{of course}} {{reliable}} population of the condition databases is critical for the correct operation of the online selection {{as well as of}} the offline reconstruction and analysis of data. In this complex infrastructure, monitoring and fast detection of errors is a very challenging task. To recover the system and to put it in a safe state requires spotting a faulty situation within strict time constraints. We will describe here the system put in place in the CMS experiment to automate the processes that populate centrally the Condition Databases and make condition data promptly available both online for the high-level trigger and offline for reconstruction. The data are automatically collected using centralized jobs or are ``dropped'' by the users in dedicate services (offline and online drop-box), which synchronize them and take care of writing them into the online database. Then they are automatically streamed to the offline database, and thus are immediately accessible offline worldwide. The condition data are managed by different users using a wide range of applications, each having a different role to play. In normal operation the system that monitors the database is used to provide simple timing information and the history of all transactions for all database accounts, and in the case that faults occur it is used to return simple error messages and more complete debugging information...|$|R
40|$|A new mean-square-error <b>automatic</b> {{equalizer}} for <b>synchronous</b> {{data transmission}} is developed. It utilizes Rosen's gradient-projection method to optimize parameters in the discrete frequency domain. The algorithm converges (in the mean) for any channel {{even in the}} presence of noise. It is shown that for the channels considered, convergence is faster (in a bounded sense) than for comparable time-domain equalizers...|$|R
40|$|Abstract—This paper {{addresses}} {{the problem of}} automatically distributing reactive systems. We first show {{that the use of}} synchronous languages allows a natural parallel description of such systems, regardless of any distribution problems. Then, a desired distribution can be easily specified, and achieved with the algorithm presented here. This distribution technique provides distributed programs with the same safety, test, and debug facilities as ordinary sequential programs. Finally, the implementation of such distributed programs only requires a very simple communication protocol (“first in first out ” queues), thereby reducing the need for large distributed real-time executives. Index Terms—Asynchronous communications, distributed processing, reactive systems, <b>automatic</b> distribution, <b>synchronous</b> languages. ————————— — F —————————...|$|R
40|$|We {{prove that}} for lambda {{greater than or}} equal to 1 and all {{sufficiently}} large epsilon, the set of (lambda, epsilon) -quasigeodesics in an infinite word-hyperbolic group G is regular if and only if lambda is rational. In fact, this set of quasigeodesics defines an asynchronous automatic structure for G. We also introduce the idea of an exact (lambda, epsilon) -quasigeodesic and show that for rational lambda and appropriate epsilon the sets of exact (lambda, epsilon) -quasigeodesics define <b>synchronous</b> <b>automatic</b> structures...|$|R
40|$|This paper {{describes}} {{the development and}} implementation of <b>automatic</b> paralleling of <b>synchronous</b> generator system using LabVIEW platform. The system comprises of the hardware and the software parts. The hardware part encapsulates the prime mover, synchronous alternator, excitation unit and other sundries that constitute a synchronous generator system. The software part comprises of the National Instruments LabVIEW software, PCI- 6014 Data Acquisition card, and the NI ELVIS devices. The overall system architecture is simple and cheap to implement and is recommended for paralleling of small synchronous generators (SSG) in the mission field of military establishment...|$|R
40|$|Abstract. The subject study uses ceramic {{materials}} as a circular burnishing-tool {{connected with a}} ring-form electrode to construct a compound circular finishing-tool. In the machining process, the external cylindrical workpiece is put into the compound circular finishing-tool to execute the finishing process by automatic continuity production. By the compound production effects from the electrode and the burnishing-tool, it achieves synchronous execution of multiple effects of electrochemical finishing and burnishing. Thereby rapidly and highly efficiently making improvement on the surface roughness of external cylindrical surface; and by the burnishing process and electrochemical finishing, it enhances the mechanical properties and cleanliness on the materials surface. It is expected that the entire study could make a comprehensive assessment of the compound process characteristics of the circular burnishing-tool and <b>automatic</b> continuity <b>synchronous</b> burnishing and electrochemical finishing, seeking the optimal electrode design and experimental parameters, so that polishing techniques for the external cylindrical can be extensively applied in the future...|$|R
40|$|The <b>automatic</b> {{design of}} <b>Synchronous</b> Reluctance (SyR) {{machines}} is considered {{in this paper}} by means of Finite Element Analysis and Multi-Objective Optimization Algorithms (MOOA). The research focuses {{on the design of}} the rotor geometry which is the key aspect of the SyR machine design. In particular, the performance of three popular MOOAs is analyzed and compared in terms of quality of the final design and computational time. A procedure to minimize the computational burden of the optimized design process is introduced and applied to a three layer and to a five layer rotors. Two prototypes demonstrate experimentally the feasibility of the design procedure...|$|R
40|$|A {{distributed}} real-time {{control system}} has a time-triggered nature, {{just because the}} physical system for control is bound to physics. Loosely Time-Triggered Architectures (ltta) are a weaker form of the strictly synchronous Time-Triggered Architecture proposed by Kopetz, in which the different periodic clocks are not synchronized, and thus may suffer from relative offset or jitter. We propose a protocol that ensures a coherent system of logical clocks {{on the top of}} ltta, and we provide several proofs for it, both manual and <b>automatic,</b> based on <b>synchronous</b> languages and associated model checkers. We briefly discuss how this can be used for correct deployment of synchronous designs on an ltta...|$|R
40|$|International audienceThis paper {{shows the}} {{application}} of the <b>automatic</b> distribution of <b>synchronous</b> reactive programs to the specific problem of discrete controller synthesis of complex reactive systems. Discrete controller synthesis is a formal method used to ensure properties on a flexible system which does not a priori verify them. However, this method is efficient only on Boolean programs. More complex embedded systems, comprising complex data types and structures, cannot be addressed without abstraction means. We show how such abstractions can be obtained automatically using a type-directed projection operation. This operation allows then the safe recombination of the result of the synthesis with the original abstracted system, preserving the ensured properties...|$|R
30|$|Optical music {{recognition}} (OMR) {{refers to}} the automatic processing and analysis of images of musical notation. This process typically employs a scanner or other digital device to transform paper-based musical scores into a digital image, which is then processed, recognized, and automatically translated into a standard format for music files, such as the musical instrument digital interface (MIDI) format. OMR represents a comprehensive amalgamation of fields and methods, including musicology, artificial intelligence, image engineering, pattern recognition, and MIDI technology. OMR technology provides a way to convert paper-based scores and has numerous applications, including computer-assisted music teaching, digital music libraries, musical statistics, digital music image <b>automatic</b> classification, and <b>synchronous</b> music and audio communication.|$|R
40|$|Developping {{embedded}} {{safety critical}} real-time systems and ensuring properties such as deterministic {{behavior in a}} simple way for the application designers is a challenging task. A large number of commercial and academic real-time operating systems (RTOS) as well as model-based development environments based on synchronous languages are available. <b>Automatic</b> transformations from <b>synchronous</b> modelling languages to RTOS are important for streamlining development of real-time applications without compromising the guarantees of their safety. In this paper, we present an automatic transformation from the SCADE synchronous language into applications for the OASIS safety-oriented real-time execution platform, a multi-scale time-triggered approach. This transformation has been partially implemented and we illustrate it with an industrial case-study from the domain of medium voltage protection relays. ...|$|R
40|$|This paper {{introduces}} a new {{general purpose software}} tool for DEVS modeling and simulation oriented to the simulation of hybrid systems. The environment –called PowerDEVS – allows defining atomic DEVS models in C++ language which can be then graphically coupled in hierarchical blockdiagrams to create more complex systems. Both, atomic and coupled models, can be organized in libraries which facilitate the reusability features. The environment automatically translates the graphically coupled models into a C++ code which executes the simulation. A remarkable feature of PowerDEVS {{is the possibility of}} performing the simulations in real time, which permits the design and <b>automatic</b> implementation of <b>synchronous</b> and asynchronous digital controllers. Besides describing the main features of the software, the article also illustrates its use with some examples which show its simplicity and efficience. ...|$|R
40|$|AbstractThe paper proposes {{studies of}} {{electric}} power quality indexes for 10  kV network supplying electric drives of the wide-strip hot-rolling mill stand equipped with thyristor electric drives. It provides the power supply {{diagram of the}} plate rolling shop. Information on the methods of experimental studies of the current and voltage spectral distribution {{with the use of}} a standard measuring device and software is provided. The paper shows the nature of higher-order harmonics content for units of the 10 kV distribution substation. It considers the method and system for reactive power control in the load center that ensures a step power change of the reactive-power compensator batteries and the following smooth fine adjustment by <b>automatic</b> control of <b>synchronous</b> motor excitation current. According to the algorithm proposed condenser batteries shall be operated in the basic mode and compensate a semi-constant component of reactive power...|$|R
40|$|Abstract—Extracting data {{paths in}} {{large-scale}} register-transfer level designs has important usage in <b>automatic</b> veri-fication of <b>synchronous</b> circuits and synthesis of asynchronous circuits. Current tools rely on users {{to provide the}} data/control partition or use state-space analyses to extract data paths. Due to the explosion of state-space, the latter method {{can be used in}} only small designs. To resolve this problem, a graphic search and trim method, which can extract data paths in large scale designs, is presented. A design is first translated into a graphic representation, namely a signal-level data flow graph (DFG), to reveal the connections between signals. By estimating the types (control or data) of these connections, a linear search algorithm can then remove all control-related signals in the graph, which effectively produces a DFG with pure data paths. Results show that this method extracts data paths of large scale designs in seconds. I...|$|R
40|$|Abstract—Synchronous {{programs}} {{were introduced to}} sim-plify the development of reactive systems hiding the complexity and indeterminism of the interleaving while taking full ad-vantage of possible concurrency. The introduction of commu-nication networks enabled the creation of distributed systems presenting the programmer with a new burden of interleaving and non determinism due to the asynchronous communication medium. Again this complexity should be hidden from the user while taking {{full advantage of the}} possible concurrency to improve performance. Many algorithms for the <b>automatic</b> distributions of <b>synchronous</b> programs have been proposed so far, but they are not suitable for large scale system because they do not preserve the compositionality of the original code: the modularity of the synchronous program is lost. As a result the subsystems are not re-usable and a small local change results in the recompilation and re-distribution of the overall system. This solution is cumbersome and unpractical in many real-world applications. In this paper we introduce an algorithm for the distribution of synchronous programs that preserves the modularity and allows separate compilation and subsystem re-use. I...|$|R
40|$|This paper {{introduces}} a {{general purpose software}} tool for DEVS modeling and simulation oriented to the simulation of hybrid systems. The environment –called PowerDEVS- allows defining atomic DEVS models in C++ language that can be then graphically coupled in hierarchical block diagrams to create more complex systems. The environment automatically translates the graphically coupled models into a C++ code which executes the simulation. A remarkable feature of PowerDEVS {{is the possibility of}} performing simulations under a real–time operating system (RTAI) synchronizing with a real time clock, which permits the design and <b>automatic</b> implementation of <b>synchronous</b> and asynchronous digital controllers. Combined with its continuous system simulation library, PowerDEVS is also an efficient tool for real time simulation of physical systems. Another feature is the interconnection between PowerDEVS and the numerical package Scilab. PowerDEVS simulations can make use of Scilab workspace variables and functions, and the results can be sent back to Scilab for further processing and data analysis. Besides describing the main features of the software tool, the article also illustrates its use with some examples which show its simplicity and efficiency...|$|R

