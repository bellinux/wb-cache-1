1870|10000|Public
25|$|Barcode {{scanners}} can {{be classified}} into three categories based on their connection to the computer. The older type is the RS-232 barcode scanner. This type requires special programming for transferring the input data to the <b>application</b> <b>program.</b>|$|E
25|$|A {{microkernel}} {{allows the}} implementation of the remaining part of the operating system as a normal <b>application</b> <b>program</b> written in a high-level language, and the use of different operating systems on top of the same unchanged kernel. It is also possible to dynamically switch among operating systems and to have more than one active simultaneously.|$|E
25|$|A {{system call}} is a {{mechanism}} {{that is used}} by the <b>application</b> <b>program</b> to request a service from the operating system. They use a machine-code instruction that causes the processor to change mode. An example would be from supervisor mode to protected mode. This is where the operating system performs actions like accessing hardware devices or the memory management unit. Generally the operating system provides a library that sits between the operating system and normal programs. Usually it is a C library such as Glibc or Windows API. The library handles the low-level details of passing information to the kernel and switching to supervisor mode. System calls include close, open, read, wait and write.|$|E
50|$|The Netscape Server <b>Application</b> <b>Programming</b> Interface (NSAPI) is an <b>application</b> <b>programming</b> {{interface}} for extending server software, typically {{web server}} software.|$|R
5000|$|The same <b>application</b> <b>programming</b> {{interface}} (API), so <b>application</b> <b>programs</b> {{could be}} transferred among PCP, MFT and MVT without even needing re-compilation.|$|R
5000|$|In computing, Server <b>Application</b> <b>Programming</b> Interface (SAPI) is {{the direct}} module {{interface}} to web servers {{such as the}} Apache HTTP Server, Microsoft IIS, and Oracle iPlanet Web Server. Microsoft uses the term Internet Server <b>Application</b> <b>Programming</b> Interface (ISAPI), and the defunct Netscape web server used the term Netscape Server <b>Application</b> <b>Programming</b> Interface (NSAPI) for the same purpose. [...] In other words, SAPI is an <b>application</b> <b>programming</b> interface (API) provided by the web server to help other developers in extending the web server capabilities.|$|R
25|$|Many {{people use}} the terms Internet and World Wide Web, or just the Web, interchangeably, but the two terms are not synonymous. The World Wide Web is the primary <b>application</b> <b>program</b> that billions of people use on the Internet, and it has changed their lives immeasurably. However, the Internet {{provides}} many other services. The Web is a global set of documents, images and other resources, logically interrelated by hyperlinks and referenced with Uniform Resource Identifiers (URIs). URIs symbolically identify services, servers, and other databases, and the documents and resources that they can provide. Hypertext Transfer Protocol (HTTP) is the main access protocol of the World Wide Web. Web services also use HTTP to allow software systems to communicate in order to share and exchange business logic and data.|$|E
25|$|Although CP/M {{provided}} some hardware abstraction to standardize the interface to disk I/O or console I/O, typically application programs still required installation {{to make use}} of all the features of such equipment as printers and terminals. Often these were controlled by escape sequences which had to be altered for different devices. For example, the escape sequence to select bold face on a printer would have differed among manufacturers, and sometimes among models within a manufacturer's range. This procedure was not defined by the operating system; a user would typically run an installation program that would either allow selection from a range of devices, or else allow feature-by-feature editing of the escape sequences required to access a function. This had to be repeated for each <b>application</b> <b>program,</b> since there was no central operating system service provided for these devices.|$|E
2500|$|The {{operating}} system provides an interface between an <b>application</b> <b>program</b> {{and the computer}} hardware, so that an <b>application</b> <b>program</b> can interact with the hardware only by obeying rules and procedures programmed into the {{operating system}}. [...] The operating system is also a set of services which simplify development and execution of application programs. Executing an <b>application</b> <b>program</b> involves {{the creation of a}} process by the operating system kernel which assigns memory space and other resources, establishes a priority for the process in multi-tasking systems, loads program binary code into memory, and initiates execution of the <b>application</b> <b>program</b> which then interacts with the user and with hardware devices.|$|E
40|$|To {{efficiently}} examine volumetric {{data sets}} from CT or MRI scans good volume rendering applications are needed. This thesis describes {{the design and}} implementation of an <b>application</b> <b>programming</b> interface (API) to be used when developing volume-rendering applications. A complete <b>application</b> <b>programming</b> interface has been designed. The interface is designed so that it makes writing <b>application</b> <b>programs</b> containing volume rendering fast and easy. The interface also makes created <b>application</b> <b>programs</b> hardware independent. Volume rendering using 3 d-textures is implemented on Windows and Unix platforms. Rendering performance has been compared between different graphics hardware...|$|R
40|$|The {{capabilities}} of generic <b>application</b> <b>programs</b> (wordprocessors, spreadsheets, databases etc.) are not widely known in schools. In this paper, {{the results of}} an empirical study in which the use of <b>application</b> <b>programs</b> by a sample of class-teachers in an ordinary municipal primary school in Finland and by a respective sample of the classteachers in a teacher training school are reported. In addition, the development of the level of mastery of <b>application</b> <b>programs</b> plus the deve-lopment {{of the impact of the}} <b>application</b> <b>programs</b> in teaching in a school with a strong IT-orientation are reported...|$|R
5000|$|The same <b>application</b> <b>programming</b> {{interface}} (API) {{and application}} binary interface (ABI), so <b>application</b> <b>programs</b> can be transferred between MFT and MVT without even needing to be modified or re-assembled or re-compiled.|$|R
2500|$|Like the {{keyboard}} interface scanner, USB scanners {{are easy to}} install and do not need custom code for transferring input data to the <b>application</b> <b>program.</b> On PCs running Windows the HID interface emulates the data merging action of a hardware [...] "keyboard wedge", and the scanner automatically behaves like an additional keyboard.|$|E
2500|$|In March 2017, IBM {{announced}} an industry-first initiative to build commercially available universal quantum computing systems called IBM Q. The company also released [...] a new API (<b>Application</b> <b>Program</b> Interface) for the IBM Quantum Experience that enables developers and programmers to begin building interfaces between its existing five quantum bit (qubit) cloud-based quantum computer and classical computers, without needing a deep background in quantum physics.|$|E
2500|$|If the dataset is {{allocated}} in tracks, {{and the end}} of {{the track}} is reached without the requested record being found the channel program terminates and returns a [...] "no record found" [...] status indication. Similarly, if the dataset is allocated in cylinders, {{and the end of}} the cylinder is reached without the requested record being found the channel program terminates and returns a [...] "no record found" [...] status indication. In some cases the system software has the option of updating the track or cylinder number and redriving the I/O operation without interrupting the <b>application</b> <b>program.</b>|$|E
50|$|TCAM {{consists}} of a Message Control Program (MCP) and zero or more <b>application</b> <b>programs.</b> The MCP handles communications with the terminals, identifies input messages and starts <b>application</b> <b>programs</b> to process them as required. This is similar in concept to the much later internet service daemon (inetd) in unix and other systems. It is also similar to QTAM, where the <b>application</b> <b>programs</b> are called Message Processing Programs (MPP).|$|R
30|$|<b>Application</b> <b>programming</b> interface.|$|R
50|$|Advanced Programming in the Unix Environment is a {{computer}} programming book by W. Richard Stevens describing the <b>application</b> <b>programming</b> interface of the UNIX family of operating systems. The book illustrates UNIX <b>application</b> <b>programming</b> in the C programming language.|$|R
2500|$|The {{latest version}} of MDAC (2.8) {{consists}} of several interacting components, {{all of which are}} Windows specific except for ODBC (which is available on several platforms). MDAC architecture may be viewed as three layers: a programming interface layer, consisting of ADO and ADO.NET, a database access layer developed by database vendors such as Oracle and Microsoft (OLE DB, [...]NET managed providers and ODBC drivers), and the database itself. These component layers are all made available to applications through the MDAC API. The Microsoft SQL Server Network Library, a proprietary access method specific to Microsoft SQL Server, is also included in the MDAC. Developers of Windows applications are encouraged to use ADO or ADO.NET for data access, the benefit being that users of the <b>application</b> <b>program</b> are not constrained in their choice of database architecture except that it should be supported by MDAC. Naturally, developers still have the choice of writing applications which directly access OLE DB and ODBC.|$|E
2500|$|The Echols Scholars {{program was}} created in 1960 as {{an answer to the}} soaring numbers {{introduced}} by the GI Bill. The Faculty Senate decided to create a program that would provide [...] "ambitious academic privileges to students". The program was designed to attract applicants deemed by the admissions committee to comprise the very top academic echelon of the prospective incoming class; the significant academic freedoms and other benefits afforded the small selection of applicants honored with the offer of an Echols Scholarship was meant to entice students likely to be accepted into Ivy League and other top schools to choose UVA in their stead. These privileges include living in an exclusive dorm first year, exemption from area requirements, an exclusive counseling program, an interdisciplinary major, and others. Echols Scholars are not selected through a separate admissions application process; rather, all applicants are automatically reviewed for Echols status during the general admissions process. For enrolled students not originally accepted with the Echols distinction, the school offers an additional first-year <b>application</b> <b>program</b> in which students enrolled in challenging classes are invited to apply. If accepted, they are then allowed to join the Echols Scholars Program {{for the rest of their}} tenure at the University.|$|E
50|$|IDAPI {{stands for}} Integrated Database <b>Application</b> <b>Program</b> Interface or Independent Database <b>Application</b> <b>Program</b> Interface. It was {{originally}} {{a component of}} the Paradox relational database management system. It is now the <b>application</b> <b>program</b> interface of the BDE or Borland Database Engine.|$|E
50|$|Under MS-DOS, Btrieve up to version 5, was a Terminate-and-Stay-Resident {{program which}} functioned as an <b>application</b> <b>programming</b> {{interface}} (API) database engine, supplying <b>applications</b> <b>programs</b> with function calls {{to implement a}} multi-user database with record locking. The network version worked in a similar way.|$|R
5000|$|... #Article: Portals network <b>programming</b> <b>application</b> <b>programming</b> {{interface}} ...|$|R
5000|$|ISAPI Internet Server <b>Application</b> <b>Programming</b> Interface (Microsoft) ...|$|R
5000|$|A {{new edition}} of the Generic Security Services <b>Application</b> <b>Program</b> Interface (GSS-API) {{specification}} [...] "The Kerberos Version 5 Generic Security Service <b>Application</b> <b>Program</b> Interface (GSS-API) Mechanism: Version 2." [...] (RFC 4121).|$|E
50|$|The {{size of the}} {{application}} is 100KB. It is possible to use ibisBrowserDX with mega i-mode <b>application</b> <b>program,</b> 500-KB <b>application</b> <b>program,</b> and 300-KB <b>application</b> <b>program</b> corresponding models. The corresponding models are 90Xi series, 704i series, 703i series and F702iD, M702iG, M702iS. Moreover, the pay users of ibisBrowserDX can use ibisBrowserNB version without paying any additional charge. Until March 2007, ibisBrowserDX worked only on NTT DoCoMo FOMA devices. After the development of Open <b>Application</b> <b>Program</b> Player by which the execution of Java application became possible to install in the au terminal. Thus ibisBrowserDX for au has been released on March 2007.|$|E
50|$|The {{operating}} system provides an interface between an <b>application</b> <b>program</b> {{and the computer}} hardware, so that an <b>application</b> <b>program</b> can interact with the hardware only by obeying rules and procedures programmed into the {{operating system}}. The operating system is also a set of services which simplify development and execution of application programs. Executing an <b>application</b> <b>program</b> involves {{the creation of a}} process by the operating system kernel which assigns memory space and other resources, establishes a priority for the process in multi-tasking systems, loads program binary code into memory, and initiates execution of the <b>application</b> <b>program</b> which then interacts with the user and with hardware devices.|$|E
50|$|Netscape Plugin <b>Application</b> <b>Programming</b> Interface (NPAPI) is an <b>application</b> <b>programming</b> {{interface}} (API) {{that allows}} plugins (more specifically, browser extensions) {{to be developed}} for web browsers. It was first developed for Netscape browsers, starting in 1995 with Netscape Navigator 2.0, but was subsequently adopted by other browsers.|$|R
5000|$|<b>Application</b> <b>programming</b> {{interfaces}} (APIs), for devices or networks ...|$|R
5000|$|... #Subtitle level 2: <b>Application</b> <b>programming</b> {{interface}} and apps ...|$|R
50|$|DBL is {{a library}} and becomes an {{integral}} part of the <b>application</b> <b>program.</b> Unlike client-server model database management systems that are standalone process with which the <b>application</b> <b>program</b> communicates. The application software uses DBL's functionality through function calls.|$|E
5000|$|Generic Security Services <b>Application</b> <b>Program</b> Interface (GSS-API) ...|$|E
5000|$|... #Article: Generic Security Services <b>Application</b> <b>Program</b> Interface ...|$|E
5000|$|Diploma in Information Technology (Database <b>Application</b> <b>Programming</b> concentration) ...|$|R
5000|$|Non-text attachments: audio, video, images, <b>application</b> <b>programs</b> etc.|$|R
5000|$|... #Subtitle level 3: Accessibility <b>Application</b> <b>Programming</b> Interfaces (APIs) ...|$|R
