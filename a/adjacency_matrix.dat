3223|629|Public
25|$|A {{symmetric}} {{sparse matrix}} arises as the <b>adjacency</b> <b>matrix</b> of an undirected graph; {{it can be}} stored efficiently as an adjacency list.|$|E
25|$|Spectral layout methods use as {{coordinates}} the eigenvectors of {{a matrix}} {{such as the}} Laplacian derived from the <b>adjacency</b> <b>matrix</b> of the graph.|$|E
25|$|Representing a graph by such {{algebraic}} structures as its <b>adjacency</b> <b>matrix</b> and Laplacian matrix {{gives rise}} to the field of spectral graph theory.|$|E
30|$|In {{addition}} to the above-mentioned first-round dimensionality reduction {{of the number of}} nodes, we need {{to reduce the number of}} <b>adjacency</b> <b>matrices,</b> since it is difficult to compare the <b>adjacency</b> <b>matrices</b> of 2, 058 trading days directly. In this context, the second-round dimensionality reduction is introduced by clustering the conditional <b>adjacency</b> <b>matrices.</b> Specifically, we use the subspace clustering of matrices by using the low rank tensor approximation method. Once the <b>adjacency</b> <b>matrices</b> are sorted into a small number of groups, we build reduced-size sub-period <b>adjacency</b> <b>matrices</b> to summarize information on the inter-period changes of the dynamic network.|$|R
30|$|In this context, Isogai (2016) {{proposed}} {{a novel approach}} to build a dynamic correlation network of returns. We adopt a model-based correlation instead of using a filtered sample correlation to calculate the correlations and <b>adjacency</b> <b>matrices</b> for network clustering. This model-based correlation matrix can be estimated for each trading day during the observation period and a dynamic correlation network built accordingly. A series of <b>adjacency</b> <b>matrices</b> are calculated by adjacency conversion from the estimated correlation matrices. The dimensionality issue due to {{the large number of}} <b>adjacency</b> <b>matrices</b> needs to be addressed to allow an intertemporal comparison of the network. We overcome this issue by using the second-round dimensionality reduction of the <b>adjacency</b> <b>matrices.</b>|$|R
40|$|AbstractA {{selected}} tour of {{the theory}} of identification matrices is offered here. We show that, among other things, shortest-path <b>adjacency</b> <b>matrices</b> are identification matrices for all simple graphs and <b>adjacency</b> <b>matrices</b> are identification matrices for all bipartite graphs. Additionally, we provide an improved proof that augmented <b>adjacency</b> <b>matrices</b> satisfying the circular 1 's property are identification matrices. We also present a characterization of doubly convex bipartite graphs by identification matrices. Based on the theory of identification matrices, we describe an improved method for testing isomorphism between Γ circular arc graphs. The sequential algorithm can be implemented to run in O(n 2) time and is optimal if the graphs are given as (augmented) <b>adjacency</b> <b>matrices,</b> so to speak...|$|R
25|$|The {{principal}} eigenvector is used {{to measure}} the centrality of its vertices. An example is Google's PageRank algorithm. The principal eigenvector of a modified <b>adjacency</b> <b>matrix</b> of the World Wide Web graph gives the page ranks as its components. This vector corresponds to the stationary distribution of the Markov chain represented by the row-normalized adjacency matrix; however, the <b>adjacency</b> <b>matrix</b> must first be modified to ensure a stationary distribution exists. The second smallest eigenvector can be used to partition the graph into clusters, via spectral clustering. Other methods are also available for clustering.|$|E
25|$|Matrix {{structures}} {{include the}} incidence matrix, {{a matrix of}} 0's and 1's whose rows represent vertices and whose columns represent edges, and the <b>adjacency</b> <b>matrix,</b> in which both the rows and columns are indexed by vertices. In both cases a 1 indicates two adjacent objects and a 0 indicates two non-adjacent objects. The Laplacian matrix is a modified form of the <b>adjacency</b> <b>matrix</b> that incorporates information about the degrees of the vertices, and is useful in some calculations such as Kirchhoff's theorem {{on the number of}} spanning trees of a graph.|$|E
25|$|The kth {{power of}} a graph with n {{vertices}} and m edges may be computed in time O(mn) by performing a breadth first search starting from each vertex to determine the distances to all other vertices. Alternatively, If A is an <b>adjacency</b> <b>matrix</b> for the graph, modified to have nonzero entries on its main diagonal, then the nonzero entries of A'k give the <b>adjacency</b> <b>matrix</b> of the kth power of the graph, from which it follows that constructing kth powers may be performed in {{an amount of time}} that is within a logarithmic factor of the time for matrix multiplication.|$|E
5000|$|... #Subtitle level 3: Graph {{interpretation}} and <b>adjacency</b> <b>matrices</b> ...|$|R
40|$|We {{consider}} {{a hierarchy of}} four classes of interval digraphs, or equivalently four classes of 0, 1 -matrics. We provide forbidden submatrix characterizations separating the successive classes. The largest class is the set of (<b>adjacency</b> <b>matrices</b> of) interval digraphs; the smallest is the set of (<b>adjacency</b> <b>matrices</b> of) unit interval digraphs...|$|R
40|$|Codes {{from the}} row spans over finite fields of <b>adjacency</b> <b>matrices</b> for graphs {{have not been}} found to have any uniform {{property}} that might be of use in classification of the graph. This is in contrast to codes from the incidence matrices (vertex set by edge set). However, like techniques may be used to study the codes from <b>adjacency</b> <b>matrices</b> of various classes of graphs, and this is in particular true for the broad class of uniform subset graphs. In this paper we examine ternary codes from <b>adjacency</b> <b>matrices</b> from a class of uniform subset graphs. Web of Scienc...|$|R
25|$|Because of {{the large}} eigengap of the {{modified}} <b>adjacency</b> <b>matrix</b> above, {{the values of the}} PageRank eigenvector can be approximated to within a high degree of accuracy within only a few iterations.|$|E
25|$|The {{distance}} matrix, {{like the}} <b>adjacency</b> <b>matrix,</b> has both its rows and columns indexed by vertices, {{but rather than}} containing a 0 or a 1 in each cell it contains {{the length of a}} shortest path between two vertices.|$|E
25|$|Transitive {{closure of}} {{directed}} graphs (Warshall's algorithm). In Warshall's original {{formulation of the}} algorithm, the graph is unweighted and represented by a Boolean <b>adjacency</b> <b>matrix.</b> Then the addition operation is replaced by logical conjunction (AND) and the minimum operation by logical disjunction (OR).|$|E
40|$|AbstractTutte proved that, if two graphs, {{both with}} more than two vertices, have the same {{collection}} of vertex-deleted subgraphs, then the determinants of the two corresponding <b>adjacency</b> <b>matrices</b> are the same. In this paper, we give a geometric proof of Tutte's theorem using vectors and angles. We further study the lowest eigenspaces of these <b>adjacency</b> <b>matrices...</b>|$|R
40|$|New {{criteria}} for which Cayley graphs of cyclic groups of any order can be completely determined [...] up to isomorphism [...] by the eigenvalues of their <b>adjacency</b> <b>matrices</b> is presented. Secondly, a new construction for pairs of nonisomorphic Cayley graphs of cyclic groups {{with the same}} list of eigenvalues of their <b>adjacency</b> <b>matrices</b> will be presented. Comment: 27 pages, 1 figur...|$|R
30|$|Merge {{adjacent}} vertex {{to source}} vertex, and obtain all (N− 1) dimensions <b>adjacency</b> <b>matrices,</b> go to 2).|$|R
25|$|They are the graphs {{that have}} rank-width one, where the rank-width of a graph {{is defined as}} the minimum, over all {{hierarchical}} partitions of the vertices of the graph, of the maximum rank among certain submatrices of the graph's <b>adjacency</b> <b>matrix</b> determined by the partition.|$|E
25|$|Neighbourhoods {{may be used}} to {{represent}} graphs in computer algorithms, via the adjacency list and <b>adjacency</b> <b>matrix</b> representations. Neighbourhoods are also used in the clustering coefficient of a graph, which {{is a measure of the}} average density of its neighbourhoods. In addition, many important classes of graphs may be defined by properties of their neighbourhoods, or by symmetries that relate neighbourhoods to each other.|$|E
25|$|Alternative {{conventions}} to node-link diagrams include adjacency representations such as circle packings, {{in which}} vertices {{are represented by}} disjoint regions in the plane and edges are represented by adjacencies between regions; intersection representations in which vertices are represented by non-disjoint geometric objects and edges are represented by their intersections; visibility representations in which vertices are represented by regions in the plane and edges are represented by regions that have an unobstructed line of sight to each other; confluent drawings, in which edges are represented as smooth curves within mathematical train tracks; fabrics, in which nodes are represented as horizontal lines and edges as vertical lines; and visualizations of the <b>adjacency</b> <b>matrix</b> of the graph.|$|E
40|$|AbstractWe {{consider}} simple graphs {{and their}} <b>adjacency</b> <b>matrices.</b> In [2], Rara (1996) gives methods of reducing graphs which simplify the procedure of computing the determinant of their <b>adjacency</b> <b>matrices.</b> We continue this {{subject matter and}} give a general method of reducing graphs. By {{the use of this}} method we define a formula for computing the determinant of any planar grid and in particular settle the problem of their singularity...|$|R
40|$|In {{this paper}} we propose {{methodology}} for inference of binary-valued <b>adjacency</b> <b>matrices</b> from various measures {{of the strength of}} association between pairs of network nodes, or more generally pairs of variables. This strength of association can be quantified by sample covariance and correlation matrices, and more generally by test-statistics and hypothesis test p-values from arbitrary distributions. Community detection methods such as block modelling typically require binary-valued <b>adjacency</b> <b>matrices</b> as a starting point. Hence, a main motivation for the methodology we propose is to obtain binary-valued <b>adjacency</b> <b>matrices</b> from such pairwise measures of strength of association between variables. The proposed methodology is applicable to large high-dimensional data-sets and is based on computationally efficient algorithms. We illustrate its utility in a range of contexts and data-sets...|$|R
50|$|Two graphs {{are called}} cospectral or isospectral if the <b>adjacency</b> <b>matrices</b> of the graphs have equal multisets of eigenvalues.|$|R
25|$|The Aanderaa–Karp–Rosenberg {{conjecture}} concerns implicit graphs {{given as}} a set of labeled vertices with a black-box rule for determining whether any two vertices are adjacent. This definition differs from an adjacency labeling scheme in that the rule may be specific to a particular graph rather than being a generic rule that applies to all graphs in a family. Because of this difference, every graph has an implicit representation. For instance, the rule could be to look up the pair of vertices in a separate <b>adjacency</b> <b>matrix.</b> However, an algorithm that is given as input an implicit graph of this type must operate on it only through the implicit adjacency test, without reference to how the test is implemented.|$|E
25|$|It is {{straightforward}} {{to verify that}} a given graph with n vertices and m edges is claw-free in time O(n4), by testing each 4-tuple of vertices {{to determine whether they}} induce a claw. With more efficiency, and greater complication, one can test whether a graph is claw-free by checking, for each vertex of the graph, that the complement graph of its neighbors does not contain a triangle. A graph contains a triangle if and only if the cube of its <b>adjacency</b> <b>matrix</b> contains a nonzero diagonal element, so finding a triangle may be performed in the same asymptotic time bound as n'n matrix multiplication. Therefore, using the Coppersmith–Winograd algorithm, the total time for this claw-free recognition algorithm would be O(n3.376).|$|E
500|$|Eric W. Weisstein conjectured, and [...] proved, {{that the}} same numbers count the (0,1) {{matrices}} for which all eigenvalues are positive real numbers. The proof is bijective: a matrix [...] is an <b>adjacency</b> <b>matrix</b> of a DAG {{if and only if}} [...] is a (0,1) matrix with all eigenvalues positive, where [...] denotes the identity matrix. Because a DAG cannot have self-loops, its <b>adjacency</b> <b>matrix</b> must have a zero diagonal, so adding [...] preserves the property that all matrix coefficients are 0 or 1.|$|E
3000|$|For {{constructing}} the <b>adjacency</b> <b>matrices</b> of the C&T-TNs, the identity given in Eq. (7) {{is used as}} a starting point: [...]...|$|R
3000|$|In the {{previous}} section, a dynamic correlation network of stock returns was successfully built and conditional <b>adjacency</b> <b>matrices</b> A [...]...|$|R
5000|$|As {{connection}} tables / <b>adjacency</b> <b>matrices</b> / lists {{with additional}} information on bond (edges) and atom attributes (nodes), such as: ...|$|R
500|$|If one desires only {{a single}} triangle, or an {{assurance}} that the graph is triangle-free, faster algorithms are possible. As [...] observe, the graph contains a triangle {{if and only if}} its <b>adjacency</b> <b>matrix</b> and the square of the <b>adjacency</b> <b>matrix</b> contain nonzero entries in the same cell. Therefore, fast matrix multiplication techniques such as the Coppersmith–Winograd algorithm can be applied to find triangles in time [...] [...] used fast matrix multiplication to improve the [...] algorithm for finding triangles to [...] These algorithms based on fast matrix multiplication have also been extended to problems of finding -cliques for larger values of [...]|$|E
500|$|The <b>adjacency</b> <b>matrix</b> of {{a finite}} graph {{is a basic}} notion of graph theory. It records which {{vertices}} of the graph are connected by an edge. Matrices containing just two different values (1 and 0 meaning for example [...] "yes" [...] and [...] "no", respectively) are called logical matrices. The distance (or cost) matrix contains information about distances of the edges. These concepts {{can be applied to}} websites connected by hyperlinks or cities connected by roads etc., in which case (unless the connection network is extremely dense) the matrices tend to be sparse, that is, contain few nonzero entries. Therefore, specifically tailored matrix algorithms can be used in network theory.|$|E
2500|$|Bonacich's {{family of}} {{measures}} does not transform the <b>adjacency</b> <b>matrix.</b> The alpha centrality replaces the <b>adjacency</b> <b>matrix</b> with its resolvent. The subgraph centrality replaces the <b>adjacency</b> <b>matrix</b> with its trace. A startling {{conclusion is that}} regardless of the initial transformation of the <b>adjacency</b> <b>matrix,</b> all such approaches have common limiting behavior. [...] As [...] approaches zero, the indices converge to the degree centrality. [...] As [...] approaches its maximal value, the indices converge to the eigenvalue centrality.|$|E
3000|$|... [...]. There are {{multiple}} <b>adjacency</b> <b>matrices,</b> {{as many as}} the number of trading days converted from a series of R [...]...|$|R
3000|$|... sMSpec: Single-layer {{spectral}} optimization {{method that}} will be applied on the mean of <b>adjacency</b> <b>matrices</b> of all layers (Tang et al. 2010); [...]...|$|R
40|$|Abstract—This paper {{describes}} {{the methods used}} to generate a router level map of the African Internet. The traceroute utility was used to collect router level information on the Internet. We developed software to automate the sending of traceroute probes to selected IP addresses, to store the information produced by the traceroute data and to transform the data into <b>adjacency</b> <b>matrices.</b> The <b>adjacency</b> <b>matrices,</b> together with geographical data concerning {{the location of the}} routers, were used to draw a map showing the Internet topology. I...|$|R
