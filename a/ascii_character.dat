262|508|Public
25|$|Particularly vexing was the Selectric's {{lack of a}} full <b>ASCII</b> <b>character</b> set. The late Bob Bemer {{wrote that}} while working for IBM he lobbied unsuccessfully to expand the typing element to 64 {{characters}} from 44. The Selectric actually provided 44 characters per case, but the point remains that with 88 printable characters it could not quite produce the full printable <b>ASCII</b> <b>character</b> set.|$|E
25|$|The {{advantage}} of SLP1 over other encodings {{is that a}} single <b>ASCII</b> <b>character</b> is used for each Devanagari letter, a peculiarity that eases reverse transliteration.|$|E
25|$|When an en dash is {{unavailable}} in {{a particular}} character encoding environment—as in the <b>ASCII</b> <b>character</b> set—there are some conventional substitutions. Often two hyphens are the substitute.|$|E
50|$|Usenet and {{email message}} bodies were {{intended}} to contain only <b>ASCII</b> <b>characters</b> (RFC 822 or RFC 2822). Most competing encodings represent binary files by converting them into printable <b>ASCII</b> <b>characters,</b> because the range of printable <b>ASCII</b> <b>characters</b> is supported by most operating systems. However, since this reduces the available character set considerably, there is significant overhead (wasted bandwidth) over 8bit-byte networks. For example, in uuencode and Base64, three bytes of data are encoded into four printable <b>ASCII</b> <b>characters,</b> which equals four bytes, a 33% overhead (not including the overhead from headers). yEnc uses one character (one byte) to represent one byte of the file, with a few exceptions.|$|R
5000|$|Sequences of {{the form}} , where [...] "0x" [...] is literal, and [...] "FF" [...] {{represents}} any two-digit hexadecimal number, are replaced with the corresponding single-byte value. This {{can be used to}} embed non-printing <b>ASCII</b> <b>characters,</b> or extended <b>ASCII</b> <b>characters.</b>|$|R
5000|$|Each byte {{of memory}} is stored as two {{sequential}} <b>ASCII</b> <b>characters</b> on tape, for example, hexadecimal B5 in memory (181 decimal) would be stored as two sequential <b>ASCII</b> <b>characters</b> [...] "B" [...] and [...] "5" [...] (42 and 35 hexadecimal).|$|R
25|$|Most {{programming}} languages, limiting {{themselves to}} the 7-bit <b>ASCII</b> <b>character</b> set and typeable characters, use ~=, !=, /=, =/=, or <> to represent their Boolean inequality operator.|$|E
25|$|BBSes were {{generally}} text-based, rather than GUI-based, and early BBSes conversed using the simple <b>ASCII</b> <b>character</b> set. However, some home computer manufacturers extended the <b>ASCII</b> <b>character</b> set {{to take advantage}} of the advanced color and graphics capabilities of their systems. BBS software authors included these extended character sets in their software, and terminal program authors included the ability to display them when a compatible system was called. Atari's native character set was known as ATASCII, while most Commodore BBSes supported PETSCII. PETSCII was also supported by the nationwide online service Quantum Link.|$|E
25|$|Both {{simplifications}} {{carried over}} to computer keyboards and the <b>ASCII</b> <b>character</b> set. However, although these {{are widely used}} due to their ubiquity and convenience, they are deprecated in contexts where proper typography is important.|$|E
5000|$|... six 6-bit <b>ASCII</b> <b>characters,</b> {{supporting}} the upper-case unaccented letters, digits, space, and most <b>ASCII</b> punctuation <b>characters.</b> It was {{used on the}} PDP-6 and PDP-10 under the name sixbit.|$|R
25|$|Requires only <b>ASCII</b> <b>characters</b> if {{optional}} separators are not used.|$|R
50|$|ASCII was {{incorporated}} into the Unicode (1991) character set as the first 128 symbols, so the 7-bit <b>ASCII</b> <b>characters</b> have the same numeric codes in both sets. This allows UTF-8 to be backward compatible with 7-bit ASCII, as a UTF-8 file containing only <b>ASCII</b> <b>characters</b> is identical to an ASCII file containing the same sequence of characters. Even more importantly, forward compatibility is ensured as software that recognizes only 7-bit <b>ASCII</b> <b>characters</b> as special and does not alter bytes with the highest bit set (as is often done to support 8-bit ASCII extensions such as ISO-8859-1) will preserve UTF-8 data unchanged.|$|R
25|$|FASTQ {{format is}} a text-based format for storing both a {{biological}} sequence (usually nucleotide sequence) and its corresponding quality scores. Both the sequence letter and quality score are each encoded {{with a single}} <b>ASCII</b> <b>character</b> for brevity.|$|E
25|$|Usenet was {{originally}} created to distribute text content encoded in the 7-bit <b>ASCII</b> <b>character</b> set. With {{the help of}} programs that encode 8-bit values into ASCII, it became practical to distribute binary files as content. Binary posts, due to their size and often-dubious copyright status, were in time restricted to specific newsgroups, {{making it easier for}} administrators to allow or disallow the traffic.|$|E
25|$|The {{typewriter}} apostrophe (') was inherited {{by computer}} keyboards, {{and is the}} only apostrophe character available in the (7-bit) <b>ASCII</b> <b>character</b> encoding, at code value 0x27 (39). As such, it is a highly overloaded character. In ASCII, it represents a left single quotation mark, right single quotation mark, apostrophe, vertical line or prime (punctuation marks), or an acute accent (modifier letters).|$|E
5000|$|... #Caption: There are 95 {{printable}} <b>ASCII</b> <b>characters,</b> numbered 32 to 126.|$|R
5000|$|... #Caption: Jianying Ji's {{infinite}} chess scheme, {{represented by}} <b>ASCII</b> <b>characters</b> (2000).|$|R
5000|$|Octal {{numbers and}} some special symbols {{enclosed}} in brackets to represent <b>ASCII</b> <b>characters</b> ...|$|R
25|$|Notably, {{the various}} {{mappings}} that Japanese input methods use to convert keystrokes on a Roman keyboard to kana often combine features {{of all of}} the systems; when used as plain text rather than being converted, these are usually known as wāpuro rōmaji. (Wāpuro is a blend of wādo purosessā word processor.) Unlike the standard systems, wāpuro rōmaji requires no characters from outside the <b>ASCII</b> <b>character</b> set.|$|E
25|$|Random {{passwords}} {{consist of}} a string of symbols of specified length taken from some set of symbols using a random selection process in which each symbol is equally likely to be selected. The symbols can be individual characters from a character set (e.g., the <b>ASCII</b> <b>character</b> set), syllables designed to form pronounceable passwords, or even words from a word list (thus forming a passphrase).|$|E
25|$|Extended {{position}} description (EPD). Another format {{which gives the}} current positions of a board, with an extended set of structured attribute values using the <b>ASCII</b> <b>character</b> set. It is intended for data and command interchange among chessplaying programs. It is also intended for the representation of portable opening library repositories. It is better than FEN for certain chess variants, such as Fischer Random Chess.|$|E
5000|$|... bytes 6-9: Four <b>ASCII</b> <b>characters</b> for {{indicating}} channel origin. Widely used {{in large}} studios.|$|R
5000|$|Since RFC 2822, {{conforming}} {{message header}} names and values should be ASCII characters; values that contain non-ASCII data {{should use the}} MIME encoded-word syntax (RFC 2047) instead of a literal string. This syntax uses a string of <b>ASCII</b> <b>characters</b> indicating both the original character encoding (the [...] "charset") and the content-transfer-encoding used to map the bytes of the charset into <b>ASCII</b> <b>characters.</b>|$|R
5000|$|<b>ASCII</b> <b>characters</b> (0-127), {{encompassing}} common {{mathematical operator}} symbols, digits, punctuation marks and English language alphabet ...|$|R
25|$|Although domain names may {{theoretically}} {{consist of}} any character representable in an octet, host names use a preferred format and character set. The characters allowed in their labels {{are a subset}} of the <b>ASCII</b> <b>character</b> set, consisting of characters a through z, A through Z, digits 0 through 9, and hyphen. This rule is known as the LDH rule (letters, digits, hyphen). Domain names are interpreted in case-independent manner. Labels may not start or end with a hyphen. An additional rule requires that top-level domain names should not be all-numeric.|$|E
25|$|Netascii is a {{modified}} form of ASCII, defined in RFC 764. It {{consists of an}} 8-bit extension of the 7-bit <b>ASCII</b> <b>character</b> space from 0x20 to 0x7F (the printable characters and the space) and eight of the control characters. The allowed control characters include the null (0x00), the line feed (LF, 0x0A), and the carriage return (CR, 0x0D). Netascii also requires {{that the end of}} line marker on a host be translated to the character pair CR LF for transmission, and that any CR must be followed by either a LF or the null.|$|E
25|$|The <b>ASCII</b> <b>character</b> set is {{the most}} common {{compatible}} subset of character sets for English-language text files, and is generally assumed to be the default file format in many situations. It covers American English, but for the British Pound sign, the Euro sign, or characters used outside English, a richer character set must be used. In many systems, this is chosen based on the default locale setting on the computer it is read on. Prior to UTF-8, this was traditionally single-byte encodings (such as ISO-8859-1 through ISO-8859-16) for European languages and wide character encodings for Asian languages.|$|E
5000|$|... /* <b>ASCII</b> <b>characters</b> 33 to 126 */ while(length--) { putchar(rand (...) % 94 + 33); } ...|$|R
5000|$|... bytes 10-13: Four <b>ASCII</b> <b>characters</b> {{indicating}} channel destination, {{to control}} automatic switchers. Less often used.|$|R
50|$|Line {{notation}} is a typographical {{notation system}} using <b>ASCII</b> <b>characters,</b> {{most often used}} for chemical nomenclature.|$|R
25|$|When an em dash is {{unavailable}} in {{a particular}} character encoding environment—as in the <b>ASCII</b> <b>character</b> set—it has usually been approximated as a double(--) or triple(---) hyphen-minus. The two-hyphen em dash proxy is perhaps more common, being a widespread convention in the typewriting era. (It is still described for hard copy manuscript preparation in the Chicago Manual of Style as of the 16th edition, although the manual conveys that typewritten manuscript and copyediting on paper are now dated practices). The three-hyphen em dash proxy was popular with various publishers because the sequence of one, two, or three hyphens could then correspond to the hyphen, en dash, and em dash, respectively.|$|E
25|$|Exacerbating the problem, common {{punched card}} {{character}} sets {{of the time}} were uppercase only and lacked other special characters. It {{was only in the}} late 1960s that the widespread adoption of the <b>ASCII</b> <b>character</b> set made both lower case and the underscore character _ universally available. Some languages, notably C, promptly adopted underscores as word separators, and identifiers such as end_of_file are still prevalent in C programs and libraries (as well as in later languages influenced by C, such as Perl and Python). However, some languages and programmers chose to avoid underscores—among other reasons to prevent confusing them with whitespace—and adopted camel case instead.|$|E
25|$|It {{seems likely}} that {{standardisation}} of the alphabet will be greatly influenced {{by the need to}} typeset it on computers. The large alphabet can be represented, {{with a great deal of}} ingenuity, within the <b>ASCII</b> <b>character</b> set, omitting certain irregular conjuncts. Work has been underway since around 2001 to develop Unicode fonts, and it {{seems likely that}} it will split into two variants, traditional and modern. In this and other articles on Wikipedia dealing with the Bengali language, a Romanization scheme used by linguists specialising in Bengali phonology is included along with IPA transcription. A recent effort by the Government of West Bengal focused on simplifying the Bengali orthography in primary school texts.|$|E
50|$|Another {{choice would}} be to replace each letter with its binary representation, {{transpose}} that, and then convert the new binary string into the corresponding <b>ASCII</b> <b>characters.</b> Looping the scrambling process on the binary string multiple times before changing it into <b>ASCII</b> <b>characters</b> would likely {{make it harder to}} break. Many modern block ciphers use more complex forms of transposition related to this simple idea.|$|R
5000|$|... is {{represented}} as a byte sequence of 8-bit-padded <b>ASCII</b> <b>characters</b> encoded in MIMEs Base64 scheme as follows: ...|$|R
50|$|The Common Lisp {{character}} type is {{not limited}} to <b>ASCII</b> <b>characters.</b> Most modern implementations allow Unicode characters.|$|R
