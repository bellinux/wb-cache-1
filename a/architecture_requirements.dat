98|584|Public
5000|$|... #Subtitle level 3: Basic Competency <b>Architecture</b> <b>Requirements</b> ...|$|E
5000|$|Wegmann's {{research}} interests and expertise {{are in the}} fields of [...] "strategic thinking, marketing, enterprise <b>architecture,</b> <b>requirements</b> engineering, service-oriented architecture".|$|E
50|$|Overarching Profile: Provides {{the base}} concepts, <b>architecture,</b> <b>requirements,</b> and {{overview}} for the IOP; and specifically addresses platform, payload, mobility, on-vehicle network, communication, and logical interoperability messaging requirements. Additionally, this document introduces and presents the conformance and validation approach {{to be employed}} within the IOP.|$|E
5000|$|Best <b>architectures,</b> <b>requirements,</b> {{and designs}} emerge from {{self-organizing}} teams ...|$|R
5000|$|... 12. The best <b>architectures,</b> <b>requirements,</b> {{and designs}} emerge from {{self-organizing}} teams.|$|R
5000|$|The best {{analytic}} insight, algorithms, <b>architectures,</b> <b>requirements</b> {{and designs}} emerge from self-organizing teams.|$|R
50|$|Börger {{contributed to}} the {{theoretical}} foundations of the method and initiated its industrial applications {{in a variety of}} fields, in particular programming languages, System <b>architecture,</b> <b>requirements</b> and software (re-)engineering, control systems, protocols, web services. To this date, {{he is one of the}} leading scientists in ASM-based modeling and verification technology, which he has crucially shaped by his activities. In 2007, he received the Humboldt Research Award.|$|E
50|$|Model-Based Architecture and Software Engineering (MBASE) in {{software}} engineering is a software development process developed by Barry Boehm and Dan Port {{in the late}} 1990s. MBASE focuses on ensuring that a project’s product models (<b>architecture,</b> <b>requirements,</b> source code, etc.), process models (tasks, activities, milestones), property models (cost, schedule, performance, dependability), and success models (stakeholder win-win, IKIWISI - I’ll Know It When I See It, business case) are consistent and mutually enforcing.|$|E
5000|$|... "Many presentations at the W3C Workshop on Web {{services}} of 11-12 April 2001 {{pointed to the}} need for a common interface and composition language to help address choreography. The Web Services <b>Architecture</b> <b>Requirements</b> Working Draft created by the Web Services Architecture Working Group also lists the idea of Web service choreography capabilities as a Critical Success Factor, in support of several different top-level goals for the nascent Web services architecture"http://www.w3.org/2005/12/wscwg-charter.html.|$|E
50|$|An MPEG-7 <b>architecture</b> <b>requirement</b> is that {{description}} must be {{separate from the}} audiovisual content.|$|R
5000|$|... #Subtitle level 2: Embedded Power <b>Architecture</b> Platform <b>Requirements</b> ...|$|R
5000|$|RFC 2805 - Media Gateway Control Protocol <b>Architecture</b> and <b>Requirements</b> ...|$|R
30|$|Knowledge of the {{software}} <b>architecture</b> <b>requirements</b> (corresponds to reliability structures in reliability theory, see “Case study: Forensic Toolkit Imager” section).|$|E
40|$|This Provisional PDF {{corresponds}} to the article as it appeared upon acceptance. The fully-formatted PDF version will become available shortly after the date of publication, from the URL listed below. Flexible promoter <b>architecture</b> <b>requirements</b> for coactivator recruitment BMC Molecular Biology 2006, 7 : 16 doi: 10. 1186 / 1471 - 2199 - 7 - 1...|$|E
3000|$|... “What {{software}} engineering artefacts {{are affected by}} community smells?” Much information and data in our dataset concerning software artefacts (e.g., software <b>architecture,</b> <b>requirements,</b> integration requests, etc.) in our investigation scenario remains to be analysed - perhaps this data can be analysed in continuation with the study in this paper, e.g., to understand if community smells have a direct or indirect impact on software itself.|$|E
5000|$|G.7715/Y.1706, <b>Architecture</b> and <b>requirements</b> of routing for {{automatic}} switched {{transport network}} ...|$|R
5000|$|ISO/IEC 24760-2 A Framework for Identity Management—Part 2: Reference <b>architecture</b> and <b>requirements</b> ...|$|R
5000|$|RFC 2805 Media Gateway Control Protocol <b>Architecture</b> and <b>Requirements,</b> April 2000 (Informational) ...|$|R
40|$|The <b>architecture,</b> <b>requirements,</b> {{and system}} {{elements}} of an ultrareliable, advanced {{flight control system}} are described. The basic criteria are functional reliability of 10 to the minus 10 power/hour of flight and only 6 month scheduled maintenance. A distributed system architecture is described, including a multiplexed communication system, reliable bus controller, the use of skewed sensor arrays, and actuator interfaces. Test bed and flight evaluation program are proposed...|$|E
40|$|This paper {{presents}} the motivation and design {{decisions for the}} Web Services Grid Application Framework (WS-GAF), which is a mapping of Grid <b>architecture</b> <b>requirements</b> onto the Web Services Architecture. The goal for WS-GAF is to describe a framework for building Grid applications that adheres {{to the principles of}} service-oriented architectures and utilises existing Web Services technologies. The proposed solution addresses issues including stateful interactions, logical resource naming, metadata, and lifetime management...|$|E
40|$|International audienceThe {{concept of}} {{autonomic}} networking {{has been introduced}} to facilitate network management that is increasingly complex. It uses a closed control loop proposed by the autonomic computing. Obviously, this approach relies on a distributed architecture. This implies that the diagnosis algorithms have to be distributed {{in order to satisfy}} autonomic <b>architecture</b> <b>requirements.</b> In this paper we describe novel algorithms regarding the use of causal graph model to perform diagnosis distribution in telecommunication networks...|$|E
5000|$|G.7716/Y.1707, <b>Architecture</b> and <b>requirements</b> of link {{resource}} management for automatically switched transport networks ...|$|R
5000|$|The {{following}} is a list and description of <b>architecture</b> and <b>requirements</b> as published by ITU-T ...|$|R
50|$|For {{quite a long}} time, ASRs {{were not}} {{recognized}} as an important notion. When talking about <b>architecture,</b> non-functional <b>requirements</b> (NFRs) or quality attributes is often used. However, recent empirical studies show that, for a software system, not all NFRs actually affect its <b>architecture,</b> and <b>requirements</b> that are not NFRs can also affect its architecture. So, architecturally significant requirements is a valuable notion that is suggested to use when talking about requirements in relation to architecture.|$|R
40|$|C. Bronson Release 2. 0 of the IBM 133 PCI-X Bridge is now {{generally}} available in volume production. It {{builds on the}} success of the first version, a PCI/PCI-X compliant transparent bridge with features and functions that extend its capabilities beyond the <b>architecture</b> <b>requirements</b> [1, 2]. Release 2. 0 adds new features that facilitate applications with processors or embedded controllers on the secondary bus of the bridge, and this release also enhances the performance of specific configurations...|$|E
40|$|Document classification: PUBLIC Abstract: This {{document}} describes and {{evaluates the}} main requirements {{to the overall}} GridLab architecture. GridLab, as an application driven project, derives most of its design constraints from the application domain, but also from generally accepted Grid design objectives. This paper is actually an excerpt from a submitted research paper [1]. The original paper contains additional information about how the <b>architecture</b> <b>requirements</b> and design constraints are applied to the overall GridLab architecture, and abou...|$|E
40|$|Approved {{for public}} release; {{distribution}} is unlimitedDistributive Interactive Simulation (DIS) requires a communication architecture to support large scale simulations (100, 000 entities). The communication <b>architecture</b> <b>requirements</b> for DIS {{are now being}} defined. DIS will require a wide area network that supports high data rates, multicasting and low latency. DoD {{can no longer afford}} unique solutions for the their wide area networking needs and must align their service requirements with the services provided by common carriers. An analysis is presented on how the future Broadband Integrated Services Digital Network(B-ISDN) and its technology standard, Asynchronous Transfer Mode (ATM), could help meet the WAN communication <b>architecture</b> <b>requirements</b> of DIS. The requirements of DIS are presented and mapped into a format compatible with international standards for common carrier services. Quality of Services (QoS) parameter values for DIS information types are estimated and compared to those of B-ISDN, Conclusions reveal that B-ISDN and its underlying technology, ATM, will help meet the DIS WAN communication architecture needs. Also, QoS parameter values for DIS require further definition and specificity to enable DoD {{to take advantage of the}} future common carrier services. DoD needs to define its future application requirements that are compatible with common carrier services[URL] United States Nav...|$|E
5000|$|ISO 22028-1:2004 Photography and Graphic Technology - Extended color {{encodings}} {{for digital}} image storage, manipulation and interchange - Part 1: <b>Architecture</b> and <b>requirements</b> (ISO TC42) ...|$|R
30|$|This section {{provides}} a detailed {{background on the}} searchable encryption scheme. In particular, we discuss about the <b>architecture,</b> security <b>requirements</b> and design approaches for searchable encryption scheme.|$|R
5000|$|Open network <b>architecture</b> for equal-access <b>requirements</b> in {{telecommunications}} ...|$|R
40|$|D 1. 2 {{reports about}} the {{requirements}} analysis process in universAAL and summarises the related results. The current document D 1. 2 -B, due at month twelve, is the second report from four planned versions. The main focus of this document is to present the approach to {{and the results of}} the second iteration of the requirements analysis process within universAAL. For more general information about the role of this report in universAAL, please refer to Section 2 that provides more details on the purpose of D 1. 2, its relationships to the other universAAL deliverables as well as the positioning of D 1. 2 -B in relation to the other versions of D 1. 2. The second iteration, in contrast to the first iteration that focused on a list of consolidated requirements, is continuing the analysis process in an incremental and iterative fashion. As shortly discussed in Section 3 this iteration is mainly dealing with four significant drawbacks inherent in the consolidated list of requirements, namely:. The high number of around 480 consolidated requirements that makes it difficult to use this list efficiently within the project;. The non-technical nature of some of the requirements which makes it difficult to derive architectural design decisions;. The inconsistency in the description when it comes to level of abstraction which sometimes prevents the architecture designers to derive clear conclusions and decisions from requirements;. The scope and content of individual requirements that were not in line with other decisions regarding scope and content of the project as captured by other artefacts produced in the project, especially the concerns. To deal with these drawbacks the second iteration is therefore narrowing the focus to reference <b>architecture</b> <b>requirements.</b> This is achieved by analysing the purpose of reference <b>architecture</b> <b>requirements</b> within the project in Section 4 and by defining a set of features that helps in identification and formulation of those requirements. Additionally, the relation towards the project 2 ̆ 7 s main concerns, as captured in D 1. 1 is newly assessed as part of Section 5 that leads to re-categorisation of requirements that is also presented in Section 5. Finally, these considerations lead to a reformulation of the requirements resulting in a considerably more focused list of approximately 100 reference <b>architecture</b> <b>requirements.</b> This list of requirements is also the final result of the second iteration and can be viewed {{at the very end of}} Section 5. As outlined in the conclusion section at the very end, D 1. 2 -C and D 1. 2 -D will continue with this iterative refinement process and, thereby, enhance the quality, the completeness and the clarity of requirements in each of the next iterations until a final set of universAAL reference <b>architecture</b> <b>requirements</b> is achieved...|$|E
40|$|This TALIS Federated <b>Architecture</b> <b>Requirements</b> (FAR) {{document}} specifies {{the user}} requirements {{as well as}} the software requirements for the TALIS Federated Architecture to be developed by the TALIS consortium partners. The user requirements are high-level requirements from a user′s point of view. They are discerned into UML Candidate Requirements, UML Business Models, and UML Supplementary Requirements according to the UML/USDP modelling techniques. The software requirements are more detailed technical elaborations of the user requirements that are selected for implementation. They are discerned into UML Use-Case Models and Specifications according to the UML/USDP modelling techniques...|$|E
40|$|A {{framework}} for requirements analysis is proposed {{that accounts for}} individual and personal goals, {{and the effect of}} time and context on personal requirements. The implications of the framework on system architecture are considered as three implementation pathways: functional specifications, development of customisable features and automatic adaptation by the system. These pathways imply the need to analyse system <b>architecture</b> <b>requirements.</b> Different implementation pathways have cost-benefit implications for stakeholders, so cost-benefit analysis techniques are proposed to assess trade-offs between goals and implementation strategies. The use of the framework is illustrated with two case studies in assistive technology domains: e-mail and a personalised navigation system...|$|E
5000|$|IEC 61968-1 - Interface <b>architecture</b> {{and general}} <b>requirements</b> Published ...|$|R
5000|$|March 2016 - Powerdesigner 16.6 {{released}} with Support for SAP HANA Calculation Views and SAP HANA Core Data Services (CDS). PowerDesigner Web can now edit Enterprise <b>Architecture</b> and <b>Requirements</b> Models.|$|R
5000|$|Constraints in an <b>architecture</b> map to <b>requirements</b> for {{a system}} ...|$|R
