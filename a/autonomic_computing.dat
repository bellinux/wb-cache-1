899|71|Public
500|$|In August 2000, Muglia was {{appointed}} to vice president of a new [...]NET Services Group. The following year he was reassigned to focus on database technologies as {{senior vice president of}} the Enterprise Storage Services Group. He helped develop Microsoft's plan for <b>autonomic</b> <b>computing,</b> which was announced in March 2003. By early 2004, Muglia held the position of [...] {{senior vice president of the}} Windows Server Division.|$|E
50|$|It {{is one of}} {{the leading}} {{research}} groups in the field of <b>Autonomic</b> <b>Computing</b> and adaptive computation systems.|$|E
50|$|<b>Autonomic</b> <b>computing</b> {{refers to}} the self-managing {{characteristics}} of distributed computing resources, adapting to unpredictable changes while hiding intrinsic complexity to operators and users.|$|E
5000|$|... "A Model for Managed Elements under <b>Autonomic</b> Cloud <b>Computing</b> Management" [...] in 2016.|$|R
50|$|Edge {{computing}} pushes applications, {{data and}} computing power (services) away from centralized {{points to the}} logical extremes of a network. Edge computing replicates fragments of information across distributed networks of web servers, which may spread over a vast area. As a technological paradigm, edge computing is {{also referred to as}} mesh <b>computing,</b> peer-to-peer <b>computing,</b> <b>autonomic</b> (self-healing) <b>computing,</b> grid computing, and by other names implying non-centralized, nodeless availability.|$|R
40|$|This {{paper is}} {{proposed}} a security plan for Smart Grid Systems based on AGC 4 ISR {{which is an}} architecture for <b>Autonomic</b> Grid <b>Computing</b> Systems. Smart Grid incorporates has many benefits of distributed computing and communications to deliver a real-time information and enable the near-instantaneous balance {{of supply and demand}} at the device level. AGC 4 ISR architecture is Organized by <b>Autonomic</b> Grid <b>Computing</b> and C 4 ISR (Command, Control, Communications, Computers and Intelligence, Surveillance, & Reconnaissance) Architecture. In this paper we will present a solution for as security plan which will be consider encryption, intrusion detection, key management and detail of cyber security in Smart Grids. In this paper we use the cryptography for the packet in the C 4 ISR and we use a key management for send and receive a packet in the smart grid because it is necessary for intelligent networks to keeping away from packet missing. Comment: The International Journal of Soft Computing and Software Engineering [JSCSE], Vol. 3, No. 3, Special Issu...|$|R
5000|$|Currently, {{the most}} {{important}} industrial initiative towards realizing self-management is the <b>Autonomic</b> <b>Computing</b> Initiative (ACI) started by IBM in 2001. The ACI defines the following four functional areas: ...|$|E
50|$|Jeffrey Owen Kephart {{from the}} IBM T. J. Watson Research Center, Yorktown Heights, NY was named Fellow of the Institute of Electrical and Electronics Engineers (IEEE) in 2013 for {{contributions}} and leadership in <b>autonomic</b> <b>computing.</b>|$|E
50|$|Paton's {{research}} interests {{are currently in}} distributed information management including dataspaces,query processing in Wireless sensor networks, <b>autonomic</b> <b>computing,</b> workflow management, and data management for systems biology. His research has been funded by the EPSRC, the BBSRC and the European Union.|$|E
50|$|Now, the {{ubiquitous}} availability of high-capacity networks, low-cost computers and storage devices {{as well as}} the widespread adoption of hardware virtualization, service-oriented architecture, <b>autonomic,</b> and utility <b>computing</b> have led to a tremendous growth in cloud computing. Virtual worlds and peer-to-peer architectures have {{paved the way for the}} concept of an IAN.|$|R
40|$|This paper proposes an {{intuitive}} configuration tool for <b>autonomic</b> pervasive <b>computing</b> systems. Specifically the paper presents {{a system for}} the inference of user task intentions {{from a variety of}} sensed information and describes how this can be readily configured by users to meet their needs for performing particular activities in particular spaces. The approach taken combines the capture of user task concepts and policies with their integration into a 3 D virtual reality model of the environment being used so that these concepts and policies can be mapped intuitively but accurately onto the sensed physical environment. 1. ...|$|R
40|$|A {{distributed}} self-healing {{data store}} / A. Pietzowski [...] . - In: <b>Autonomic</b> and trusted <b>computing</b> : 4 th International Conference, ATC 2007, Hong Kong, China, July 11 - 13, 2007; proceedings / Bin Xiao [...] . (eds.). - Berlin [u. a. ] : Springer, 2007. - S. 458 - 467. - (Lecture notes in computer science; 4610...|$|R
50|$|He has {{authored}} or co-authored {{papers in}} technical journals and conferences on topics related to active databases, temporal databases, Rule-based systems, event processing and <b>Autonomic</b> <b>computing.</b> He has given several keynote address and tutorials {{and has been}} named an ACM Distinguished Speaker.|$|E
50|$|Stone {{describes}} his research interest as understanding {{how we can}} best create complete intelligent agents. His research focuses mainly on machine learning, multiagent systems, and robotics. Application domains have included robot soccer, autonomous bidding agents, autonomous vehicles, <b>autonomic</b> <b>computing,</b> and social agents.|$|E
50|$|The {{technology}} of Techila Distributed Computing Engine {{is built on}} an <b>autonomic</b> <b>computing</b> architecture that is patented by Techila Technologies. This has enabled features such as automated system management and fault tolerance, which simplify the deployment, use and administration of large-scale distributed computing systems.|$|E
40|$|Self-configuration via {{cooperative}} {{social behavior}} / Wolfgang Trumler, Robert Klaus, Theo Ungerer. - In: <b>Autonomic</b> and trusted <b>computing</b> : third international conference, ATC 2006, Wuhan, China, September 3 - 6, 2006; proceedings / Laurence T. Yang [...] . (eds.). - Berlin [u. a. ] : Springer, 2006. - S. 90 - 99. - (Lecture notes in computer science; 4158...|$|R
40|$|<b>Autonomic</b> (self-managing) <b>computing</b> systems {{face the}} {{critical}} problem of resource allocation to different computing elements. Adopting a recent model, we view {{the problem of}} provisioning resources as involving utility elicitation and optimization to allocate resources given imprecise utility information. In this paper, we propose a new algorithm for regret-based optimization that performs significantly faster than that proposed in earlier work. We also explore new regret-based elicitation heuristics {{that are able to}} find near-optimal allocations while requiring a very small amount of utility information from the distributed computing elements. Since regret-computation is intensive, we compare these to the more tractable Nelder-Mead optimization technique w. r. t. amount of utility information required. ...|$|R
40|$|Formal {{modeling}} and {{verification of systems}} with self-x properties / Matthias Güdemann, Frank Ortmeier and Wolfgang Reif. - In: <b>Autonomic</b> and trusted <b>computing</b> : third international conference, ATC 2006, Wuhan, China, September 3 - 6, 2006; proceedings / Laurence T. Yang [...] . (eds.). - Berlin [u. a. ] : Springer, 2006. - S. 38 - 47. - (Lecture notes in computer science; 4158...|$|R
5000|$|Self-management (also called self-governance): A {{system that}} manages itself without {{external}} intervention. What is being managed can vary {{dependent on the}} system and application. Self -management also refers {{to a set of}} self-star processes such as <b>autonomic</b> <b>computing</b> rather than a single self-star process; ...|$|E
5000|$|Profiling is {{not simply}} a matter of {{computerized}} pattern-recognition; it enables refined price-discrimination, targeted servicing, fraud detection, and extensive social sorting. Real-time machine profiling constitutes the precondition for emerging socio-technical infrastructures envisioned by advocates of ambient intelligence, <b>autonomic</b> <b>computing</b> [...] and ubiquitous computing [...]|$|E
50|$|Autonomic Networking {{follows the}} concept of <b>Autonomic</b> <b>Computing,</b> an {{initiative}} started by IBM in 2001. Its ultimate aim is to create self-managing networks to overcome the rapidly growing complexity of the Internet and other networks and to enable their further growth, far beyond the size of today.|$|E
40|$|International audienceDetecting {{the changes}} {{is the common}} issue in many {{application}} ﬁelds due to the non-stationary distribution of the applicative data, e. g., sensor network signals, web logs and grid- running logs. Toward <b>Autonomic</b> Grid <b>Computing,</b> adaptively detecting the changes in a grid system can help to alarm the anomalies, clean the noises, and report the new patterns. In this paper, we proposed an approach of self-adaptive change detection based on the Page-Hinkley statistic test. It handles the non-stationary distribution without the assumption of data distribution and the empirical setting of parameters. We validate the approach on the EGEE streaming jobs, and report its better performance on achieving higher accuracy comparing to the other change detection methods...|$|R
50|$|Techila Distributed Computing Engine was {{demonstrated}} by a research {{team at the}} University of Helsinki in 2011 as being capable of providing <b>autonomic</b> management to <b>computing</b> environments {{of large numbers of}} Windows Azure cloud instances. The University of Helsinki has also demonstrated Techila Distributed Computing Engine's ability to enhance the usability and utilization of large-scale cluster resources in projects implemented using MATLAB, R, Python, Java, and C/ C++/ C#.|$|R
40|$|Abstract. WS-Policy 4 MASC is an XML {{language}} for specification of policies for run-time Web service management. Among its original contributions is specification of diverse business values (e. g., profit, customer satisfaction) and control strategies maximizing different business values. While {{it was originally}} developed for the MASC (Manageable and Adaptable Service Compositions) middleware, {{it can also be}} used in a broader context of <b>autonomic</b> serviceoriented <b>computing.</b> We discuss our research on using WS-Policy 4 MASC in the Adaptive Server Framework (ASF), which supports composing adaptive applications on Java and. NET platforms. WS-Policy 4 MASC enriches ASF with policy definition semantics and enables complex policy management. The combination of WS-Policy 4 MASC and ASF forms a step towards businessdriven autonomic management of service-oriented systems. ...|$|R
50|$|Apache Brooklyn is an {{open-source}} {{framework for}} modeling, deploying and managing distributed applications defined using declarative YAML blueprints. The design {{is influenced by}} <b>Autonomic</b> <b>computing</b> and promise theory and implements the OASIS CAMP (Cloud Application Management for Platforms) and TOSCA (Topology and Orchestration Specification for Cloud Applications) standards.|$|E
50|$|The {{autonomic}} {{nervous system}} governs our heart rate and body temperature, thus freeing our conscious brain from the burden of dealing with these and many other low-level, yet vital, functions. The essence of <b>autonomic</b> <b>computing</b> is self-management, the intent {{of which is to}} free system administrators from the details of system operation and maintenance.|$|E
50|$|A {{possible}} solution {{could be to}} enable modern, networked computing systems to manage themselves without direct human intervention. The <b>Autonomic</b> <b>Computing</b> Initiative (ACI) aims at providing the foundation for autonomic systems. It is inspired by the autonomic nervous system of the human body. This nervous system controls important bodily functions (e.g. respiration, heart rate, and blood pressure) without any conscious intervention.|$|E
3000|$|Cloud {{technology}} Although {{there is}} a focus on maximizing the effectiveness of shared resources [5], the increased availability of high-capacity network, low-cost computers and storage devices {{as well as the}} widespread adoption of hardware virtualization, service-oriented architecture, and <b>autonomic</b> and utility <b>computing</b> have led to a growth in the use of cloud technology. In spite of its increased importance, it is distinct that this subject has not received more attention in the dissertations reviewed.|$|R
40|$|Copyrights {{reserved}} {{on behalf}} of the contributors – Sept. 14, 2010 ” Ambition: <b>Autonomic</b> Network <b>Computing</b> (ANC) ICT {{is at the heart of}} our society and is totally reliant on the design of electronic information processing systems. The solution will be accomplished by a novel design paradigm, which is based on the principals of the autonomic nervous system (ANS) and which is “beyond traditional thinking. ” ANC is inspired by the Autonomic Nervous System: The organs of our bodies, such as the heart, lungs and others, are regulated by a part of the nervous system called the Autonomic Nervous System (ANS) which is part of the peripheral nervous system. It does this without any conscious intervention. In most situations, we are unaware of the workings of the ANS because it functions in a...|$|R
40|$|This paper {{proposes that}} {{software}} architectures that support <b>autonomic</b> service-oriented <b>computing</b> {{need to have}} an exogenous management structure. Exogenous management regards autonomicity as a property of relationships between elements, rather than a property of the elements themselves. We explain the concept of exogenous management, and show how a number of desirable attributes that support autonomicity flow from this approach. These attributes include selfmanagement; separability; recursive composition; and grounding through the monitoring of interactions. We will show how these attributes help enhance the adaptability and control the complexity of contextaware compositions of services. We then discuss how this exogenous approach to management has been implemented in the ROAD (Role-oriented Adaptive Design) programming framework. This framework is extended by software developers to create service compositions whose level of autonomicity can be incrementally modified at runtime. 1...|$|R
50|$|In a 2003 IEEE Computer Magazine article, Kephart and Chess {{warn that}} the dream of {{interconnectivity}} of computing systems and devices could become the “nightmare of pervasive computing” in which architects are unable to anticipate, design and maintain the complexity of interactions. They state the essence of <b>autonomic</b> <b>computing</b> is system self-management, freeing administrators from low-level task management while delivering better system behavior.|$|E
5000|$|The Application Software Systems Laboratory (TASSL) is a {{research}} lab, {{as a part of}} Center for Advanced Information Processing (CAIP), and Department of Electrical and Computing Engineering at Rutgers University [...] It is under the direction of Dr. Manish Parashar and the current research fields include <b>Autonomic</b> <b>Computing,</b> Parallel Computing and Distributed Computing, Grid Computing, Peer-to-peer Computing, Adaptive Computing Systems, and Scientific Computation..|$|E
5000|$|In August 2000, Muglia was {{appointed}} to vice president of a new [...]NET Services Group. The following year he was reassigned to focus on database technologies as {{senior vice president of}} the Enterprise Storage Services Group. He helped develop Microsoft's plan for <b>autonomic</b> <b>computing,</b> which was announced in March 2003. By early 2004, Muglia held the position of {{senior vice president of the}} Windows Server Division.|$|E
40|$|Abstract. The {{concepts}} of <b>Autonomic</b> and Organic <b>Computing</b> (AC/OC) promise to make modern computer systems more secure {{and easier to}} manage. In this paper, we extend the observer/controller archi-tecture typically used in AC/OC systems towards a new target area – embedded real-time systems. As a result we present a two-layered man-agement architecture. We discuss aspects of internal communication and design a communication model. Finally, we present a generic classifica-tion system for the upper layer of the management architecture. ...|$|R
40|$|Abstract—Detecting {{the changes}} {{is the common}} issue in many {{application}} fields due to the non-stationary distribution of the applicative data, e. g., sensor network signals, web logs and gridrunning logs. Toward <b>Autonomic</b> Grid <b>Computing,</b> adaptively detecting the changes in a grid system can help to alarm the anomalies, clean the noises, and report the new patterns. In this paper, we proposed an approach of self-adaptive change detection based on the Page-Hinkley statistic test. It handles the non-stationary distribution without the assumption of data distribution and the empirical setting of parameters. We validate the approach on the EGEE streaming jobs, and report its better performance on achieving higher accuracy comparing to the other change detection methods. Meanwhile this change detection process could help to discover the device fault which was not claimed in the system logs. I...|$|R
40|$|Distributed {{systems are}} {{getting bigger and}} more complex. While the {{complexity}} of large-scale distributed systems has been acknowledged {{to be an important}} challenge, there has not been much work in defining or measuring system complexity. In order to defend against overwhelming system complexity, {{we need to be able}} to understand and measure complexity and then, attack the issues that cause complexity. In this paper, we define different aspects of system complexity and propose metrics for measuring these aspects. We also show how these aspects affect different kinds of people – viz. developers, administrators and end-users. Based on the aspects and metrics of complexity that we identify, we propose general guidelines that can help reduce the complexity of the system. Finally, we briefly describe how we have used some of these guidelines to reduce complexity in our middleware for <b>autonomic</b> ubiquitous <b>computing</b> environments. 1...|$|R
