1671|1206|Public
5|$|In 2005, Sony Pictures {{released}} Q*bert 2005 as a download for Windows {{and as a}} Flash browser <b>applet,</b> featuring 50 different levels.|$|E
5|$|The {{loss of the}} Admiral's {{flagship}} {{threw the}} Swedish forces into disorder, and soon Svärdet, next in line as fleet flagship, was surrounded by the allied admirals and set ablaze by a Dutch fireship after an extended artillery duel. Only 50 of the 650-strong crew escaped the gun battle and the inferno, and among the dead was the acting Admiral Claes Uggla. After losing two of its highest ranking commanders {{as well as its}} two largest ships, the Swedish fleet fled in disarray. Solen later ran aground; Järnvågen, Neptunus and three smaller vessels were captured. <b>Äpplet</b> later sank after breaking her moorings off Dalarö.|$|E
5|$|The Swedish fleet had {{suffered}} a major blow by losing its two largest ships, its commander-in-chief {{and one of its}} most experienced admirals. Even after the battle, the misfortunes continued. <b>Äpplet</b> came off its moorings at Dalarö, went aground and sank. Around fifty survivors were picked up by pursuing Danish ships and taken as prisoners to Copenhagen. The battle gave Denmark undisputed naval supremacy and the Swedish fleet did not dare to venture out {{for the rest of the}} year. The army that had been amassed in Denmark could now be shipped to Scania to take the war to Swedish soil and on 29 June 1676, 14,500 troops were landed at Råå south of Helsingborg. The Battle of Öland was the first major Swedish defeat at sea to Denmark and was followed by further Swedish defeats at Møn and Køge Bay in 1677. The latter was a resounding success for Admiral Niels Juel and has become the most celebrated victory in Danish naval history.|$|E
5000|$|Kicker can embed various <b>applets</b> into itself. The {{included}} <b>applets</b> as of KDE 3.5 are: ...|$|R
5000|$|... emergeDesktop {{has several}} {{additional}} <b>applets</b> {{that can be}} used. These are all standalone <b>applets</b> and can be run independently of the three core <b>applets</b> above. They can also be run on top of Windows Explorer or any other Windows Shell Replacement.|$|R
50|$|Java <b>Applets</b> are {{components}} {{running in}} a web browser. They are developed {{in the form of}} Java byte code. The <b>applets</b> are supported by most modern operating systems and browsers. Java <b>applets</b> have high performance similar to native installed software. Java <b>applets</b> are signed with security certificates to become trusted software, which allows automatic redistribution from a web site and installation on client computers.|$|R
5|$|The {{commission}} did {{not find}} anyone guilty of negligence or misconduct, but Lieutenant Admiral Bär, commander of Nyckeln, and Lieutenant Admiral Christer Boije, who had run aground on <b>Äpplet,</b> were never again given a command in the navy. Lieutenant Admiral Hans Clerck, commander of Solen, went through the process unscathed, and was promoted to full Admiral by the King before the commission even presented its verdict. Creutz has quite consistently been blamed {{for the loss of}} his ship by historians, and has been described as an incompetent sea officer and sailor who more or less single-handedly brought about the sinking through lack of naval experience. Military historians Lars Ericson Wolke and Olof Sjöblom have attempted to nuance the picture by pointing out that Creutz's task was akin to that of an administrator rather than a military commander. The practical issues of ship maneuvering should have been the responsibility of his subordinates, who had experience in naval matters.|$|E
25|$|Mike Thyer, , a {{graphical}} Java <b>applet</b> demonstrating alternative reduction strategies.|$|E
25|$|While Java was {{originally}} made for e.g. client-side <b>applet</b> use in web browsers (usage shifted {{mostly to the}} backend), major browsers no longer have <b>applet</b> support (nor is that use case officially supported by Oracle; neither do they or Apple support Java for macOS; outdated Windows XP is also no longer officially supported, and Microsoft in general hindered use of unchanged Java with their Windows operating system, for a time competing with a J# language).|$|E
40|$|Abstract—The traditional, lecturer-driven {{classroom}} is {{giving way to}} a new more active environment, where students have access to a variety of multimedia course materials. We created several Java <b>applets</b> for the electrical engineering course Properties of Materials. These <b>applets</b> help describe concepts related to electron motion in metals and semiconductors. They address ideas which are often difficult for students to visualize and yet important for students to intuitively understand. Simulation <b>applets</b> are “hands-on” and interactive while tutorial <b>applets</b> are “hands-off ” and presented in slide show format. The <b>applets</b> can be viewed a...|$|R
40|$|This paper {{introduces}} an FPGA IP {{evaluation and}} delivery system that operates within Java <b>applets.</b> The {{use of such}} <b>applets</b> allows designers to create, evaluate, test, and obtain FPGA circuits directly within a web browser. Based on the JHDL design tool, these <b>applets</b> allow structural viewing, circuit simulation, and netlist generation of applicationspecific circuits. <b>Applets</b> can be customized to provide varying levels of IP visibility and functionality as needed by both customer and vendor...|$|R
40|$|JavaCard is {{a variant}} of the Java {{programming}} language specifically designed for use on Smart Cards. In order to support the secure execution of several different <b>applets</b> on a Smart Card, the JavaCard Virtual Machine implements a firewall that isolates <b>applets</b> from each other by preventing unwanted information sharing and communication between <b>applets...</b>|$|R
25|$|Security and Maintenance {{consists}} of three major components: A control panel <b>applet,</b> a Windows service and an application programming interface (API) provided by Windows Management Instrumentation (WMI).|$|E
25|$|ClearType can be {{globally}} enabled {{or disabled}} for GDI applications. A control panel <b>applet</b> {{is available to}} let the users tune the GDI ClearType settings. The GDI implementation of ClearType does not support sub-pixel positioning.|$|E
25|$|The {{control panel}} <b>applet</b> divides the {{monitored}} criteria into categories and color-codes them. Yellow indicates a non-critical warning, e.g. some settings {{are not being}} monitored or are not optimal. Red indicates a critical message, e.g. anti-virus program is offline.|$|E
40|$|The {{bachelor}} thesis {{deals with}} the problém of creating interactive JAVA <b>applets.</b> The practical part of work consist of desing, development and debugging four <b>applets.</b> The first one clearly explains the issue of phasor theory, the second one shows frequency filtering of audio signals, the third one demonstrates artificial coloring of grayscale images and the fourth one creates Huffman code from input text. The theoretical part describes the JAVA language, advantages of <b>applets</b> and theory, which relates to particular <b>applets...</b>|$|R
5000|$|Cinnamon can be {{modified}} by themes, <b>applets</b> and extensions. Themes can customize the look of aspects of Cinnamon, including {{but not limited to}} the menu, panel, calendar and run dialog. <b>Applets</b> are icons or texts that appear on the panel. Five <b>applets</b> are shipped by default, and developers are free to create their own. A tutorial for creating simple <b>applets</b> is available. Extensions can modify the functionalities of Cinnamon, such as providing a dock or altering the look of the [...] window switcher.|$|R
40|$|Abstract. STATISTICAL RESOURCE CENTER (SRC) is a {{collection}} of fully interactive, animated, graphical JAVA <b>applets,</b> developed for teaching basic statistical methods. At this time, in addition to regression and probability <b>applets,</b> its main contribution is 12 <b>applets</b> exploring fundamental statistical distributions. The SRC center is in a development stage and its current Internet URLs ar...|$|R
25|$|Processing.js, a JavaScript port of the Processing {{programming}} language designed to write visualizations, images, and interactive content. It allows Web browsers to display animations, visual applications, games and other graphical rich content {{without the need}} for a Java <b>applet</b> or Flash plugin.|$|E
25|$|In addition, {{the battery}} meter {{interface}} in the notification area aims to provide enhanced discoverability of power schemes in Windows Vista by providing single-click access to default schemes. A link to change additional power management settings via the Power Options Control Panel <b>applet</b> is also included.|$|E
25|$|Windows Mobility Center {{is a new}} Control Panel <b>applet</b> {{available}} on mobile computers that centralizes information and settings relevant to mobile features, including display brightness, power options, presentation settings, and sync settings. It is extensible so that hardware manufacturers can add further capabilities to control other features specific to their hardware.|$|E
2500|$|Java <b>applets</b> in Rosetta-translated applications, {{meaning that}} a native Intel web browser application, {{rather than a}} legacy PowerPC version, must be used to load Java <b>applets</b> ...|$|R
40|$|We {{discuss the}} design of Java <b>applets</b> that {{visualize}} how the Voronoi diagram of n points continuously changes as individual points are moved across the plane, or as the underlying distance function is changed. Moreover, we report on some experiences made in using these <b>applets</b> in teaching and research. The <b>applets</b> can be found and tried out a...|$|R
5000|$|Adopting {{the concept}} of portable, commercially {{available}} software smart <b>applets</b> {{for the purpose of}} automating specific sample system functions. These <b>applets</b> would be resident in the SAM.|$|R
25|$|The Character Palette <b>applet</b> {{makes for}} a quick and easy way to add Esperanto {{characters}} to a web browser or text document. One need only select their newly created palette and click a letter, and that letter will be on their system clipboard waiting to be pasted into the document.|$|E
25|$|Build 4093 (build date of August 19, 2004) – It {{was one of}} {{the last}} builds {{compiled}} before the development reset. Considered highly unstable, it contained Sidebar, WinFS, and an Avalon-based Windows Movie Maker, a preliminary version of Windows Anytime Upgrade, and the Microsoft Anna speech synthesizer. There was an Avalon-based Display Properties control panel <b>applet</b> hidden in the \WINDOWS\SYSTEM32 folder, similar to the one in Build 3683.|$|E
25|$|On 16 October 2007, Beta 3 was released. The beta 3 {{release was}} focused on {{stabilizing}} and finishing the design of libraries {{for the release of}} KDE Development Platform. Plasma received many new features including an <b>applet</b> browser. The educational software received many improvements in Marble and Parley (formerly known as KVoctrain) with bugfixes in other applications. A program called Step, an interactive physics simulator, was produced as part of the Google Summer of Code.|$|E
50|$|AppletViewer is a {{standalone}} command-line {{program from}} Sun to run Java <b>applets.</b> Appletviewer is generally used by developers for testing their <b>applets</b> before deploying {{them to a}} website.|$|R
5000|$|There is no {{standard}} {{to make the}} content of <b>applets</b> available to screen readers. Therefore, <b>applets</b> can harm the accessibility of a web site to users with special needs.|$|R
50|$|A {{graphical}} interface for Sun’s Java Plug-in, which aids developers {{by demonstrating}} how Java <b>applets</b> perform on macOS. Provides tools {{to adjust the}} performance, behavior and user experience in <b>applets</b> in development.|$|R
25|$|The Date and Time Control Panel <b>applet</b> {{has been}} rewritten for Windows Vista and allows {{up to two}} {{additional}} clocks to be displayed on the clock icon of the Windows taskbar. The additional clocks are presented in an analog/digital format and can display the time in other time zones. The calendar function of the clock icon is also enhanced, which now displays additional information during daylight saving time, and also allows users to browse for specific days, months, or years without having to open other settings in the Control Panel.|$|E
25|$|Formula One has an {{extensive}} web following, with most major TV companies covering it {{such as the}} BBC. The official Formula One website (formula1.com) has a live timing JavaScript <b>applet</b> {{that can be used}} during the race {{to keep up with the}} leaderboard in real time. Recently an official application has been made available in the iTunes App Store and on Google Play that allows iOS and Android users to see a real time feed of driver positions, timing and commentary. The same official application has been available for Android phones and tablets since 2011.|$|E
25|$|Chrome supported, up to version 45, {{plug-ins}} {{with the}} Netscape Plugin Application Programming Interface (NPAPI), so that plug-ins (for example Adobe Flash Player) run as unrestricted separate processes outside the browser and cannot be sandboxed as tabs are. ActiveX is not supported. Since 2010, Adobe Flash has been integral to Chrome {{and does not}} need be installed separately. Flash is {{kept up to date}} as part of Chrome's own updates. Java <b>applet</b> support was available in Chrome with Java 6 update 12 and above. Support for Java under OS X was provided by a Java Update released on May 18, 2010.|$|E
50|$|The {{category}} view {{consists of}} categories, which when clicked on display {{the control panel}} <b>applets</b> related to the category. In Windows Vista, the category used <b>applets</b> below {{the name of the}} category.|$|R
40|$|A SW/HW {{interface}} API for Java/FPGA co-designed <b>applets</b> {{is presented}} in this paper. Those codesigned <b>applets</b> normally consist of Java software part and FPGA hardware part. With the developed virtual SW/HW interface APT, software part of the <b>applets</b> can transparently utilize FPGAs to implement some of their computationally intensive algorithms in a networked environment. A demonstrator of web MPEG- 1 player had been constructed for this API...|$|R
40|$|We {{describe}} {{some issues}} in designing and building educational Java <b>applets</b> for an introductory computer graphics course. The design problem involves balancing educational goals of building intuition about fundamental concepts in a domain against heterogeneity both in subject material and in student backgrounds. We present our design approach for resolving these forces [...] - fine-grained units addressing small concepts [...] - and discuss its e#ects {{on other areas}} including hypertext structure, interface design, and software engineering. Keywords educational software, user interface, reuse, granularity, <b>applets,</b> hypertext, interactive illustrations 1 Introduction All over the world, people are developing interactive educational <b>applets.</b> These <b>applets</b> are being used in classroom demonstrations, hands-on laboratories[2], self-directed work outside of class, and distance learning. Despite the fairly broad dissemination of these <b>applets,</b> however, little has been published about the tradeo#s i [...] ...|$|R
