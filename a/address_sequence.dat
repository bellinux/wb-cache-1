49|286|Public
25|$|Little-endian {{representation}} simplifies hardware in processors {{that add}} multi-byte integral values a byte at a time, such as small-scale byte-addressable processors and microcontrollers. As carry propagation must {{start at the}} least significant bit (and thus byte), multi-byte addition can then be carried out with a monotonically-incrementing <b>address</b> <b>sequence,</b> a simple operation already present in hardware. On a big-endian processor, its addressing unit has to be told how big the addition {{is going to be}} so that it can hop forward to the least significant byte, then count back down towards the most significant byte (MSB). On the other hand, arithmetic division is done starting from the MSB, so it is more natural for big-endian processors. However, high-performance processors usually fetch typical multi-byte operands from memory in {{the same amount of time}} they would have fetched a single byte, so the complexity of the hardware is not affected by the byte ordering.|$|E
2500|$|The show is {{consistent}} with the mechanics of address-dialing. The process involves associating a unique symbol of the inner ring to each of at least the first seven of the chevrons on the outer circumference. The main [...] "address" [...] is invariably dialed first, and the last symbol is the [...] "point of origin", representing the gate being used, which acts as the final trigger for the completion of the <b>address</b> <b>sequence.</b> As each symbol is dialed, the chevron is said to [...] "engage" [...] or [...] "encode" [...] and usually responds by lighting up or moving. When the final symbol of an address is dialed, that chevron is said to [...] "lock" [...] and the wormhole opens (this terminology is arbitrary and often interchangeable, but preferred by the recurring character Walter Harriman). If the address is incorrect or does not correspond to an existing or otherwise functional stargate, the last chevron will not lock, and all of the chevrons will disengage.|$|E
5000|$|An 11 digit (plus check digit) barcode, {{containing}} the ZIP Code, ZIP+4 Code, and the delivery point code. 62 bars total. This is usually {{referred to as}} the DPBC, or Delivery Point Bar Code. By including delivery point information, it enables the Postal Service to sort mail into delivery point (<b>address)</b> <b>sequence.</b>|$|E
40|$|A {{universal}} {{approach for}} generation of <b>address</b> <b>sequences</b> with specified properties is proposed and analyzed. A {{modified version of}} the Antonov and Saleev algorithm for Sobol sequences genera-tion is chosen as a mathematical description of the proposed method. Within the framework of the proposed universal approach, the Sobol sequences form a subset of the <b>address</b> <b>sequences.</b> Other sub-sets are also formed, which are Gray sequences, anti-Gray sequences, counter sequences and sequenc-es with specified properties...|$|R
40|$|In {{this paper}} we analyze the test power of SRAM {{memories}} and {{demonstrate that the}} full functional precharge activity is not necessary during test mode because of the predictable <b>addressing</b> <b>sequence.</b> We exploit this observation {{in order to minimize}} power dissipation during test by eliminating the unnecessary power consumption associated with the pre-charge activity. This is achieved through a modified pre-charge control circuitry, exploiting the first degree of freedom of March tests, which allows choosing a specific <b>addressing</b> <b>sequence.</b> The efficiency of the proposed solution is validated through extensive Spice simulations. 1...|$|R
40|$|Abstract Software {{obfuscation}} is dened as a transfor-mation of {{a program}} P into T (P) such that the whitebox and blackbox behaviors of T (P) are computationally in-distinguishable. However, robust obfuscation is impossible to achieve with the existing software only solutions. This results from {{the power of the}} adversary model in DRM which is signicantly more than in the traditional security scenarios. The adversary has complete control of the computing node- supervisory privileges along with the full physical as well as architectural object observational capabilities. In essence, this makes the operating system (or any other layer around the architecture) untrustworthy. Thus the trust has to be provided by the underlying architecture. In this paper, we develop an architecture to support 3 -D obfuscation through the use of well known cryptographic methods. The three dimensional obfuscation hides the <b>address</b> <b>sequencing,</b> the contents associated with an address, and the temporal reuse of <b>address</b> <b>sequences</b> such as in loops (or the second order address sequenc-ing). The software is kept as an obfuscated le system image statically. Moreover, its execution traces are also dynamically obfuscated along all the three dimensions of <b>address</b> <b>sequencing,</b> contents and second order <b>address</b> <b>sequencing.</b> Such an obfuscation makes it innitesimally likely that good tampering points can be detected. This in turn provides with a very good degree of tamper resistance. With the use of already known software distribution model of ABYSS and XOM, we can also ensure copy protection. This results in a complete DRM architecture to provid...|$|R
5000|$|In its {{simplest}} implementation, Round-robin DNS {{works by}} responding to DNS requests {{not only with}} a single potential IP address, but with one out of a list of potential IP addresses corresponding to several servers that host identical services. The order in which IP addresses from the list are returned {{is the basis for}} the term [...] With each DNS response, the IP <b>address</b> <b>sequence</b> in the list is permuted. Usually, basic IP clients attempt connections with the first address returned from a DNS query, so that on different connection attempts, clients would receive service from different providers, thus distributing the overall load among servers.|$|E
50|$|That {{the output}} images are {{oriented}} {{the same way}} around (in the case of CCD image sensors). In the prism assembly illustrated above, where the red light is the direct path, the blue path is reflected once and the resultant image is not laterally inverted, unlike the red and green. In cameras using vacuum tube video pickup devices this was solved by merely reversing the connections for the line scan coils; with CMOS imagers, the row or column <b>address</b> <b>sequence</b> is simply reversed. But with CCD sensors {{it is necessary to}} build a mirror image sensor for one channel. The Philips prism assembly (center right) has all three color channels laterally inverted and can thus use three similar CCDs.|$|E
50|$|Little-endian {{representation}} simplifies hardware in processors {{that add}} multi-byte integral values a byte at a time, such as small-scale byte-addressable processors and microcontrollers. As carry propagation must {{start at the}} least significant bit (and thus byte), multi-byte addition can then be carried out with a monotonically-incrementing <b>address</b> <b>sequence,</b> a simple operation already present in hardware. On a big-endian processor, its addressing unit has to be told how big the addition {{is going to be}} so that it can hop forward to the least significant byte, then count back down towards the most significant byte (MSB). On the other hand, arithmetic division is done starting from the MSB, so it is more natural for big-endian processors. However, high-performance processors usually fetch typical multi-byte operands from memory in {{the same amount of time}} they would have fetched a single byte, so the complexity of the hardware is not affected by the byte ordering.|$|E
40|$|In {{this paper}} we analyze the power {{consumption}} of SRAM memories and {{demonstrate that the}} full functional pre-charge activity is not necessary during test because of the predictable <b>addressing</b> <b>sequence.</b> We exploit this observation {{in order to minimize}} power dissipation during test by eliminating the unnecessary power consumption associated with the pre-charge activity. This is achieved through a modified pre-charge control circuitry, exploiting the first degree of freedom of March tests, which permits to choose a specific <b>addressing</b> <b>sequence.</b> Further, the modified pre-charge logic allows also the switching between the normal functional mode and the low power test mode. We demonstrate that the modified pre-charge control circuitry has little or no effect on the memory performance. We analyze the sources of power consumption in functional and low power test mode, and we show how the power dissipation is computed for bit and word-oriented SRAMs. The efficiency of the proposed solution is validated through extensive Spice simulations for both bit-oriented and word-oriented SRAM...|$|R
40|$|Abstract — In {{this paper}} we analyze the power {{consumption}} of SRAM memories and {{demonstrate that the}} full functional pre-charge activity is not necessary during test because of the predictable <b>addressing</b> <b>sequence.</b> We exploit this observation {{in order to minimize}} power dissipation during test by eliminating the unnecessary power consumption associated with the pre-charge activity. This is achieved through a modified pre-charge control circuitry, exploiting the first degree of freedom of March tests, which permits to choose a specific <b>addressing</b> <b>sequence.</b> Further, the modified pre-charge logic allows also the switching between the normal functional mode and the low power test mode. We demonstrate that the modified pre-charge control circuitry has little or no effect on the memory performance. We analyze the sources of power consumption in functional and low power test mode, and we show how the power dissipation is computed for bit and word-oriented SRAMs. The efficiency of the proposed solution is validated through extensive Spice simulations for both bit-oriented and word-oriented SRAM. Keywords — SRAM, Low Power, Test March, Pre-charge...|$|R
50|$|Controlled {{flooding}} {{has its own}} two algorithms to make it reliable, SNCF (Sequence Number Controlled Flooding) and RPF (Reverse Path Forwarding). In SNCF, the node attaches its own <b>address</b> and <b>sequence</b> {{number to}} the packet, since every node has a memory of <b>addresses</b> and <b>sequence</b> numbers. If it receives a packet in memory, it drops it immediately while in RPF, the node will only send the packet forward. If it is received from the next node, it sends {{it back to the}} sender.|$|R
5000|$|The show is {{consistent}} with the mechanics of address-dialing. The process involves associating a unique symbol of the inner ring to each of at least the first seven of the chevrons on the outer circumference. The main [...] "address" [...] is invariably dialed first, and the last symbol is the [...] "point of origin", representing the gate being used, which acts as the final trigger for the completion of the <b>address</b> <b>sequence.</b> As each symbol is dialed, the chevron is said to [...] "engage" [...] or [...] "encode" [...] and usually responds by lighting up or moving. When the final symbol of an address is dialed, that chevron is said to [...] "lock" [...] and the wormhole opens (this terminology is arbitrary and often interchangeable, but preferred by the recurring character Walter Harriman). If the address is incorrect or does not correspond to an existing or otherwise functional stargate, the last chevron will not lock, and all of the chevrons will disengage.|$|E
3000|$|To support interleavers {{of which}} the <b>address</b> <b>sequence</b> cannot be {{generated}} on-the-fly or cannot be vectorized, our architecture features extensive LUT support, as was described in Section 3.3 (e.g., 802.11 a/g, 4 [...]...|$|E
40|$|It {{is widely}} known that pattern {{sensitive}} faults {{are the most}} difficult faults to detect during the RAM testing process. One of the techniques {{which can be used}} for effective detection of this kind of faults is the multi-background test technique. According to this technique, multiple-run memory test execution is done. In this case, to achieve a high fault coverage, the structure of the consecutive memory backgrounds and the <b>address</b> <b>sequence</b> are very important. This paper defines requirements which have {{to be taken into account}} in the background and <b>address</b> <b>sequence</b> selection process. A set of backgrounds which satisfied those requirements guarantee us to achieve a very high fault coverage for multi-background memory testing...|$|E
30|$|To support {{sufficient}} flexibility {{for both}} the external and the local memory, we use a single, programmable address generator. For {{the majority of the}} studied interleaving functions the associated <b>address</b> <b>sequences</b> can be expressed in a 16 -bit address space. The interleaving functions with large state on the other hand require a 32 -bit address space. For coarse-grained 32 -bit interleaving functions that require no further fine grained interleaving, the programmable channel interleaver allows a bypass around its local memory in the so-called transfer mode.|$|R
40|$|International audienceDiscovering {{unexpected}} {{rules is}} essential, particularly for in- dustrial applications with marketing stakes. In this context, many works {{have been done}} for association rules. How- ever, non of them <b>address</b> <b>sequences.</b> In this paper, we thus propose to discover unexpected multidimensional sequential rules in data cubes. We define the concept of multidimen- sional sequential rule, and then unexpectedness. We formal- ize these concepts and define an algorithm for mining this kind of rules. Experiments on a real data cube are reported and highlight the interest of our approach...|$|R
40|$|Discovering {{unexpected}} {{rules is}} essential, particularly for industrial applications with marketing stakes. In this context, many works {{have been done}} for association rules. However, non of them <b>address</b> <b>sequences.</b> In this paper, we thus propose to discover unexpected multidimensional sequential rules in data cubes. We define the concept of multidimensional sequential rule, and then unexpectedness. We formalize these concepts and define an algorithm for mining this kind of rules. Experiments on a real data cube are reported and highlight the interest of our approach. Categories and Subject Descriptors H. 2. 8 [Database Management]: Database applications, data minin...|$|R
40|$|International Telemetering Conference Proceedings / October 13 - 15, 1970 / International Hotel, Los Angeles, CaliforniaAddressable remote {{multiplexed}} {{time division}} telemetry systems {{are being used}} more and more. Most of these systems operate with serial addresses generated by a central unit where each data source has a unique address. Thus the <b>address</b> <b>sequence</b> determines the particular format. In one type of system, the <b>address</b> <b>sequence</b> is determined by transfer logic between a counter and an address shift register. It takes several man-weeks of effort to develop a format and the logic equations to implement the <b>address</b> <b>sequence</b> for that format. To avoid this effort, an algorithm and computer program that generates the formats and the logic equations has been developed and is described. The program data inputs are: the basic format configuration of addresses (channels or data sources) per frame and the frames per master frame; and the number and types of channels at each samples per master frame (S/MF) rate. The program outputs are: address assignments by program ID, telemetry formats sequences with program ID, and the set equations for the address output shift register. Several checks are made during the program and if program restrictions are violated or format generation is impossible, error messages are printed and the program may be halted...|$|E
30|$|If the latency {{constraint}} of {{a stream}} does not allow the scheduling of an interleaving block of another stream, the iVAG programs for this other stream can be rewritten to process partial interleaving blocks. The iVAG allows storage {{of the state of}} an address generation program so that it can continue with the same <b>address</b> <b>sequence</b> in a subsequent run.|$|E
3000|$|The <b>address</b> <b>sequence</b> for 802.11 a/g cannot {{efficiently}} be vectorized. Since {{the maximum}} interleaving block size is only 288 symbols, this interleaving function can be efficiently implemented by [...] "Addresses in op-fields". For 802.11 n we use this {{solution for the}} first two permutations and a different program for the third permutation. Note that the LUTs for [...] "Addresses in op-fields" [...] are part of the [...] "Program Memory" [...] in Table 8.|$|E
40|$|International audienceReducing power {{dissipation}} during testing of complex integrated circuits (IC) or system-on-chip (SOC) has been acknowledged {{as a major}} concern. Similarly, minimising test power in embedded memories is important since they represent the main contributor to the overall IC {{power dissipation}}. In this paper we analyse the test power of SRAM memories and demonstrate that the normal pre-charge activity is not necessary during test mode because of the predictable <b>addressing</b> <b>sequence.</b> We exploit this finding in order to minimise power dissipation during test by eliminating the unnecessary pre-charge activity. This is achieved through a modified pre-charge control circuitry. The efficiency of the proposed solution is validated through extensive Spice simulations...|$|R
40|$|This paper {{outlines}} {{the reduction of}} Read Equivalent Stress (RES) during test of SRAM memories and demonstrates that the modified pre-charge activity reduces RES because of the predictable <b>addressing</b> <b>sequence.</b> We exploit this observation {{in order to show}} minimization of power dissipation during test by eliminating the unnecessary power consumption associated with RES. Read or write operations on a cell involve a stress on the other cells of the same word line is called Read Equivalent Stress. Read Equivalent Stress has the same effect than a read operation. We have calculated 99. 8 % reduction in RES with the modified pre-charge activity during test for different MARCH algorithms...|$|R
50|$|The UDP payload {{contains}} the sFlow datagram. Each datagram provides {{information about the}} sFlow version, the originating device’s IP <b>address,</b> a <b>sequence</b> number, the number of samples it contains and one or more flow and/or counter samples.|$|R
40|$|In {{this paper}} we <b>address</b> <b>sequence</b> {{estimation}} when the InterSymbol Interference (ISI) communication channel is unknown and time varying. We employ a Maximum A Posterior (MAP) approach, {{in which the}} unknown channel parameters are assigned a distribution and integrated out. For several channel models of interest we describe both the exact MAP estimator and Viterbi algorithm based implementations. We also present EM algorithms for solving these MAP sequence estimation problems, and we contrast these EM solutions with direct MAP algorithms. 1...|$|E
40|$|Abstract* This paper {{presents}} a complete {{analysis of the}} ability of March tests to detect ADOFs (Address Decoder Open Faults) and resistive-ADOFs in address decoders of embedded-SRAMs. Such faults are the primary target of this study because they are notoriously hard-to-detect. With this study, we show that standard March tests without modifications {{are not able to}} detect them and we propose to translate the algorithm presented in [1, 2] into March elements. These new March elements involve a particular <b>address</b> <b>sequence</b> and data to be written...|$|E
40|$|The {{possible}} {{involvement of}} the ACTH-(11 - 24) fragment on the stretchings, yawnings and penile erections induced by the intracerebroventricular injection of ACTH-(1 - 24) in rats, was studied. The results indicate that this C-terminal fragment is devoid of any behavioral activity, but inhibits the behavioral syndrome induced by ACTH-(1 - 24). This suggests that the fragment-(11 - 24) of the ACTH molecule may contain or represent an <b>address</b> <b>sequence</b> for brain ACTH receptors and {{may be involved in}} the termination of the behavioral response to melanocortins...|$|E
40|$|Abstract—Main {{memory and}} {{processor}} performance have been diverging for decades reaching a two {{orders of magnitude}} difference in today’s systems. One approach aiming to bridge this performance gap tries to predict processor’s future accesses and fetch the predicted data prior to processor’s requests. The tech-nique is known as prefetching. One of the major breakthroughs in the field observed that program references contain recurrent <b>address</b> <b>sequences,</b> called streams, which can be identified and used to predict even irregular memory accesses. To exploit streams, computer architects proposed using correlation-tables to store and prefetch these <b>address</b> <b>sequences.</b> Early table-based prefetchers fragmented streams across table entries indexed by a key (e. g., first address of the stream) assuming a fixed stream length, resulting in multiple lookups or waste of capacity. To overcome this limitation, several techniques proposed decoupling the information used to index streams from the actual address streams. Unfortunately, all these designs require impractically large on-chip storage due to vast application working sets. Placing prefetcher structures off-chip using a bandwidth-efficient design has been the road-map to improve practicality. Address-correlating prefetchers have historically observed ad-dresses that miss in the processor’s caches. However, we observe that caches introduce noise into the streams by fragmenting the cache access sequence in an unpredictable manner, reducing the overall stream repetitiveness. Furthermore, by looking at cache accesses rather than their fragmented subsets visible as cache misses, {{we are able to}} predict whole, unfragmented streams, without the need to experience a miss in order to initiate prefetching. We propose, as a future research direction, leveraging access streams to improve performance of address...|$|R
40|$|The way <b>address</b> <b>sequences</b> {{and data}} {{patterns}} {{appear on the}} outside of a memory may differ from their internal appearance; this effect is referred to as scrambling, which has a large impact on the effectiveness of the used tests. This paper presents an analysis of address and data scrambling for memory chips, at the layout and at the electrical level. A method is presented to determine the data backgrounds to be used for the different memory tests. It will be shown that the required data backgrounds are fault model, and hence, also test specific. Industrial results will show the influence of the used data backgrounds on the fault coverage of the tests...|$|R
40|$|We {{report a}} flexible, sensitive, and {{quantitative}} gene-expression profiling system for assaying more than 400 genes, with three probes per gene, for 96 samples in parallel. The cDNA-mediated annealing, selection, extension and ligation (DASL) assay targets specific transcripts, using oligonucleotides containing unique <b>address</b> <b>sequences</b> that can hybridize to universal arrays. Cell-specific gene expression profiles were obtained using this assay for hormone-treated cell lines and laser-capture microdissected cancer tissues. Gene expression profiles derived from this assay {{were consistent with}} those determined by qRT-PCR. The DASL assay has been automated for use with a bead-based 96 -array matrix system. The combined high-throughput assay and readout system is accurate and efficient, and can cost-effectively profile the expression of hundreds of genes in thousands of samples...|$|R
40|$|Abstract * This paper {{presents}} a complete {{analysis of the}} ability of March tests to detect ADOFs (Address Decoder Open Faults) and resistive-ADOFs in address decoders of embedded-SRAMs. Such faults are the primary target of this study because they are notoriously hard-to-detect. With this study, we show that standard March tests without modifications {{are not able to}} detect them and we propose to translate the algorithm presented in [1, 2] into March elements. These new March elements involve a particular <b>address</b> <b>sequence</b> and data to be written. 1...|$|E
40|$|ISBN 978 - 1 - 4577 - 1053 - 7 International audienceIn modern SoCs {{embedded}} memories concentrate {{the majority}} of defects. In addition defect types are becoming more complex and diverse and may escape detection during fabrication test, leading to field failures due {{to the use of}} faulty components in final products. As a matter of fact memories have to be tested by test algorithms achieving very high fault coverage for a increasingly complex faults. Fixing the test algorithm during the design phase may not be compatible with this goal, as unexpected failures not covered by this algorithm may be occur during production. Also, having the possibility to select the memory test algorithm after fabrication is very important during the initial phase of a new process node (both process debug and production ramp-up). Programmable BIST approaches, allowing selecting after fabrication a large variety of memory tests, are therefore desirable, but may lead on unacceptable area cost. BIST approaches enabling test algorithm programmability and data background programmability at low area cost have been presented in the past. However, no proposals exist for programming the <b>address</b> <b>sequence</b> used by the test algorithm. In this paper we expend programmable BIST to include address programmability. This new feature is implemented at low cost by using the memory under test itself to store the desired <b>address</b> <b>sequence</b> and some compact circuitry that enables using this sequence for testing the memory...|$|E
40|$|AbstractGoal in {{pharmaceutical}} research is achievement of necessary drug {{concentrations in the}} target organ, effective treatment with safe delivery of genetic agents, while sparing normal tissue and minimizing side effects. A new “BioShuttle”-delivery system harbouring a cathepsin B cutting site, a nuclear <b>address</b> <b>sequence</b> and a functional peptide was developed and tumor cells were treated. Transport and subcellular activation were determined by confocal laser scanning microscopy permitting the conclusion: BioShuttle-conjugates prove as efficient tools for genetic interventions by selective and topical activation of therapeutic peptide precursors by enzymatic cleavage. As shown here for glioma cells and the cathepsin B cleavable site, living cells can be treated with high specificity and selectivity for diagnostic and therapeutic purposes...|$|E
40|$|Forward link {{capacity}} of fast frequency-hopping code-division multiple access (FFH/CDMA) cellular mobile communication systems is analyzed. M-ary FSK with noncoherent detection is assumed. Coding {{is used for}} both random <b>address</b> <b>sequencing</b> and error correction. Selection diversity reception is also applied. The channel cutoff rate of an interference-limited coded FFH/CDMA channel with a hexagonal cell layout is analyzed for both synchronous and asynchronous cases. The theoretical capacity limit is calculated from the channel cutoff rate. The optimal rate that maximized the user capacity is then determined. Reed-Solomon (RS) codes are then applied as a practical approach. It is shown that optimal RS code rate is 0. 8 for 256 -ary FSK with 19 hops/symbol, which is almost {{the same as that}} derived from the channel cutoff rat...|$|R
5000|$|Strategy Development: Determine how the {{reconstruction}} and stabilization operation will <b>address</b> the prioritization, <b>sequencing</b> and cross-sector linkages of efforts ...|$|R
30|$|Ref. [63] {{analyzes}} the main considerations of load restoration {{in the unit}} start-up stage, and of restoration strategies in coordination with unit start-up. Regarding load restoration in the last stage of network reconfiguration, Ref. [64] presents a combinatorial optimization model to <b>address</b> the <b>sequencing</b> problem of load pickup.|$|R
