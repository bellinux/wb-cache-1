8|102|Public
5|$|In April 1944, the Regiment {{departed}} California {{aboard the}} USS General John Pope for Oro Bay, New Guinea. On {{the way to}} New Guinea the Regiment spent part of June in Australia. Upon arriving at Oro Bay, it {{was assigned to the}} 31st Infantry Division, 8th Army to provide area security and continue training. Some soldiers were then assigned to the Alamo Scouts, the 5217th Reconnaissance Battalion, and to the Philippine Regional Section of Allied Intelligence Bureau. One example was Second Lieutenant Rafael Ileto, a future Vice Chief of Staff in the Philippines, who led a team in the Alamo Scouts. Due to the reassignment of these soldiers, both Filipino Infantry Regiments became smaller than authorized. In response, the 2nd Filipino Infantry Regiment was disbanded and used to bring the 1st Filipino Infantry Regiment to 125% of its standard <b>allocated</b> <b>size.</b> The remaining soldiers of the 2nd Filipino Infantry Regiment who did not join the Regiment formed the 2nd Filipino Infantry Battalion (Separate). During its time at Oro Bay the Regiment was reinforced with Filipinos from Hawaii. These men {{had not been able to}} enlist in the Army until 1943 as the Hawaiian Sugar Planters' Association had successfully argued that their labor was needed in the sugar industry.|$|E
25|$|While {{this method}} greatly {{improves}} {{the chances that}} an attack will be successful, it is not without problems. Exploits using this technique still must rely on some amount of luck that they will guess offsets on the stack that are within the NOP-sled region. An incorrect guess will usually result in the target program crashing and could alert the system administrator to the attacker's activities. Another {{problem is that the}} NOP-sled requires a much larger amount of memory in which to hold a NOP-sled large enough to be of any use. This can be a problem when the <b>allocated</b> <b>size</b> of the affected buffer is too small and the current depth of the stack is shallow (i.e. there is not much space {{from the end of the}} current stack frame to the start of the stack). Despite its problems, the NOP-sled is often the only method that will work for a given platform, environment, or situation; as such it is still an important technique.|$|E
5000|$|As a consequence, {{for certain}} inputs the <b>allocated</b> <b>size</b> is not {{sufficient}} to hold all unmerged runs. In Java, for example this generates for those inputs an array-out-of-bound exception. The smallest input that triggers this exception in Java and Android v7 is of size [...] (Older Android versions already triggered this exception for certain inputs of size [...] ) ...|$|E
5000|$|STACKSIZE (Embedded DOS 6-XL only) : Default stack <b>size</b> <b>allocated</b> for new threads.|$|R
30|$|<b>Allocate</b> a {{different}} <b>size</b> to each piece depending on its priority as we already {{explained in the}} previous subsection.|$|R
30|$|To better tuning the ATMV mechanism, the {{coefficient}} factor for bounding amount of <b>allocated</b> queue <b>size</b> of each {{state in the}} finite state machine should be dynamically adjusted according to the changing of major scenes in the video. We foresee that system is able to support unknown video categories or mixed contents in one video clip.|$|R
50|$|Before {{looking at}} the {{procedure}} in detail, we need some definitions. Let T be a table, E an element to insert, num(T) the number of elements in T, and size(T) the <b>allocated</b> <b>size</b> of T. We assume the existence of operations create_table(n), which creates an empty table of size n, for now assumed to be free, and elementary_insert(T,E), which inserts element E into a table T that already has space allocated, with a cost of 1.|$|E
50|$|While {{this method}} greatly {{improves}} {{the chances that}} an attack will be successful, it is not without problems. Exploits using this technique still must rely on some amount of luck that they will guess offsets on the stack that are within the NOP-sled region. An incorrect guess will usually result in the target program crashing and could alert the system administrator to the attacker's activities. Another {{problem is that the}} NOP-sled requires a much larger amount of memory in which to hold a NOP-sled large enough to be of any use. This can be a problem when the <b>allocated</b> <b>size</b> of the affected buffer is too small and the current depth of the stack is shallow (i.e. there is not much space {{from the end of the}} current stack frame to the start of the stack). Despite its problems, the NOP-sled is often the only method that will work for a given platform, environment, or situation; as such it is still an important technique.|$|E
50|$|In April 1944, the Regiment {{departed}} California {{aboard the}} USS General John Pope for Oro Bay, New Guinea. On {{the way to}} New Guinea the Regiment spent part of June in Australia. Upon arriving at Oro Bay, it {{was assigned to the}} 31st Infantry Division, 8th Army to provide area security and continue training. Some soldiers were then assigned to the Alamo Scouts, the 5217th Reconnaissance Battalion, and to the Philippine Regional Section of Allied Intelligence Bureau. One example was Second Lieutenant Rafael Ileto, a future Vice Chief of Staff in the Philippines, who led a team in the Alamo Scouts. Due to the reassignment of these soldiers, both Filipino Infantry Regiments became smaller than authorized. In response, the 2nd Filipino Infantry Regiment was disbanded and used to bring the 1st Filipino Infantry Regiment to 125% of its standard <b>allocated</b> <b>size.</b> The remaining soldiers of the 2nd Filipino Infantry Regiment who did not join the Regiment formed the 2nd Filipino Infantry Battalion (Separate). During its time at Oro Bay the Regiment was reinforced with Filipinos from Hawaii. These men {{had not been able to}} enlist in the Army until 1943 as the Hawaiian Sugar Planters' Association had successfully argued that their labor was needed in the sugar industry.|$|E
5000|$|Fixed {{hard disk}} image: a file that is <b>allocated</b> to the <b>size</b> {{of the virtual}} disk. Fixed VHDs consist of a raw disk image {{followed}} by a VHD footer (512 or formerly 511 bytes).|$|R
3000|$|... {{where the}} values of these {{thresholds}} are adjusted according to β 1 and β 2, respectively. As long as the total <b>allocated</b> channel time <b>size</b> in the CTAP_MPNC and CTAP_MDEV is below the MPNC_T [...]...|$|R
5000|$|Not real-time: Naive {{implementations}} {{of reference}} counting do not in general provide real-time behavior, because any pointer assignment can potentially cause {{a number of}} objects bounded only by total <b>allocated</b> memory <b>size</b> to be recursively freed while the thread is unable to perform other work. It is possible to avoid this issue by delegating the freeing of objects whose reference count dropped to zero to other threads, {{at the cost of}} extra overhead.|$|R
40|$|Buffer Overflow Attacks that exploit memory overruns in {{a variety}} of ways have been the most {{effective}} and difficult to prevent, methods of compromising system security. The root cause for exploitation of these vulnerabilities is the lack of availability of <b>allocated</b> <b>size</b> information of buffers at runtime. Consequently no bound checking is done in standard C library functions that are the most common interfaces for buffer manipulation leaving most C programs vulnerable to buffer overflow attacks. Ensuring proper bound checking at these interfaces can help prevent buffer overflow attacks. Pure static approach to bounds checking does not work, as it is not possible to know the <b>allocated</b> <b>size</b> of dynamically allocated buffers at compile time. On the other hand, relying on pure dynamic approaches for collecting <b>allocated</b> <b>size</b> information incurs high runtime overhead. A hybrid approach that collects buffer bound information using static and dynamic methods and ensures enforcement of these boundaries at runtime can be very effective in preventing buffer overflows. Such a hybrid approach lowers the overhead of obtaining bound information while improving the accuracy of the information obtained. Tests on the implemented hybrid defense method promise efficient prevention and complete coverage of various buffer overflow attacks. Keywords: Information Security, Software Security. 1...|$|E
40|$|Abstract—Depth-sorted {{fragment}} determination {{is fundamental}} {{for a host}} of image-based techniques which simulates complex rendering effects. It is also a challenging task in terms of time and space required when rasterizing scenes with high depth complexity. When low graphics memory requirements are of utmost importance, k-buffer can objectively be considered as the most preferred framework which advantageously ensures the correct depth order on a subset of all generated fragments. Although various alternatives have been introduced to partially or completely alleviate the noticeable quality artifacts produced by the initial k-buffer algorithm in the expense of memory increase or performance downgrade, appropriate tools to automatically and dynamically compute the most suitable value of k are still missing. To this end, we introduce k+-buffer, a fast framework that accurately simulates the behavior of k-buffer in a single rendering pass. Two memory-bounded data structures: (i) the max-array and (ii) the max-heap are developed on the GPU to concurrently maintain the k-foremost fragments per pixel by exploring pixel synchronization and fragment culling. Memory-friendly strategies are further introduced to dynamically (a) lessen the wasteful memory allocation of individual pixels with low depth complexity frequencies, (b) minimize the <b>allocated</b> <b>size</b> of k-buffer according to different application goals and hardware limitations via a straightforward depth histogram analysis and (c) manage local GPU cache with a fixed-memory depth-sorting mechanism. Finally, an extensive experimental evaluation is provided demonstrating the advantages of our work over all prior k-buffer variants in terms of memory usage, performance cost and image quality. Index Terms—k-buffer, A-buffer, depth peeling, pixel synchronization, depth complexity histogram, dynamic geometr...|$|E
30|$|Virtual Disk Size: The disk <b>size</b> <b>allocated</b> to VM {{for its use}} {{is called}} virtual disk size and its size is defined when the VM is created. Generally, {{hypervisor}} recommends choice to avail all the disk space when VM is created or to dynamically expand based on storage uses.|$|R
50|$|MIMO-OFDM is a {{particularly}} powerful combination because MIMO does not attempt to mitigate multipath propagation and OFDM avoids the need for signal equalization. MIMO-OFDM can achieve very high spectral efficiency even when the transmitter does not possess channel state information (CSI). When the transmitter does possess CSI (which can be obtained {{through the use of}} training sequences), it is possible to approach the theoretical channel capacity. CSI may be used, for example, to <b>allocate</b> different <b>size</b> signal constellations to the individual subcarriers, making optimal use of the communications channel at any given moment of time.|$|R
40|$|Semiparametric and nonparametric {{small area}} estimations {{have been studied}} to {{overcome}} a large variance due to a small sample <b>size</b> <b>allocated</b> in a small area. In this study, we investigate semiparametric and nonparametric mixed effect small area estimators using penalized spline and kernel smoothing methods respectively and compare their performances using labor statistics...|$|R
30|$|Hypervisor Allocated Blocks: It is {{actually}} allocated space by hypervior to VM for data storage and its size may be same as virtual disk storage size if pre-allocation is performed. If the VM free some blocks then hypervior may not shrink the <b>allocated</b> block <b>size</b> {{because it is}} harder or not visible for hypervior to look at VM level storage, it is only visible to VM level file system that which blocks are in use and which are free. So avoiding unused space and garbage collection block could considerably reduce the migration time, {{but it is not}} easy by hypervior because hypervior implementation not carries garbage collection blocks information.|$|R
30|$|In actual execution, {{once the}} {{generated}} RDDs {{are in the}} alternative cache list, they should be compared. If {{there are more than}} one RDDs in the candidate list, it is sorted by relative value/size and placed in the cache. The restriction is that the size of RDD and the currently used storage area cannot exceed the <b>allocated</b> storage memory <b>size.</b>|$|R
3000|$|With {{the same}} network {{configuration}} and scenario used in Figures 1 - 2 at Section 1, we first verified {{the effect of}} TaLE framework on per-location fairness. Note that each location has the same weight in this simulation to evaluate fairness. In this simulation, we do not enable the RTS/CTS mechanism and we have little concern about hidden terminals since we assume all the stations hear each other. The <b>allocated</b> buffer <b>size,</b> B, for all queues is set to 100 packets, and the maximum congestion window size of TCP is set to 50 packets. We employ TCP/Reno and set TCP packet size to 1500 bytes. The parameters of the TaLE framework, α, β, γ, and [...]...|$|R
40|$|Abstract — In this paper, both Distributed Generators (DG) and {{capacitors}} are <b>allocated</b> and <b>sized</b> optimally {{for improving}} line loss and reliability. The objective function {{is composed of}} the investment cost of DGs and capacitors along with loss and reliability which are converted to the genuine dollar. The bus voltage and line current are considered as constraints which should be satisfied during the optimization procedure. Hybrid. Particle Swarm Optimization as a heuristic based technique is used as the optimization method. The IEEE 69 -bus test system is modified and employed to evaluate the proposed algorithm. The results illustrate that the lowest cost planning is found by optimizing both DGs and capacitors in distribution networks. Keywords-distribution network, optimization methods...|$|R
40|$|An {{interactive}} intuitive graphical simulation {{package for}} the analysis of electric distribution systems is presented. It links the interactive graphical design of an electrical network with specialized analysis algorithms. The interaction is facilitated by the use of a friendly graphic interface. The program incorporates complete models for the electric components. The problem of volt/var control is solved with a method originally proposed by Grainger and Civanlar. The method permits to <b>allocate</b> and <b>size</b> capacitor banks for loss reduction and voltage control for varying load conditions. The minimum number of capacitor is determined as well as the switching strategies that allow to respond to daily, weekly or monthly changes in reactive load. 1...|$|R
40|$|In this paper, both Distributed Generators (DG) and {{capacitors}} are <b>allocated</b> and <b>sized</b> optimally {{for improving}} line loss and reliability. The objective function {{is composed of}} the investment cost of DGs and capacitors along with loss and reliability which are converted to the genuine dollar. The bus voltage and line current are considered as constraints which should be satisfied during the optimization procedure. Hybrid Particle Swarm Optimization as a heuristic based technique is used as the optimization method. The IEEE 69 -bus test system is modified and employed to evaluate the proposed algorithm. The results illustrate that the lowest cost planning is found by optimizing both DGs and capacitors in distribution networks...|$|R
40|$|Abstract The paper {{focuses on}} the Metro (metropolitan area) network defined in the IST European project DAVID. The DAVID Metro network is based on sets of optical rings {{interconnected}} by passive memoryless devices called Hubs. Ring access is regulated by a dynamic time-division multiple-access scheme <b>allocating</b> fixed <b>size</b> slots in sets of wavelengths that provide multi-channel pipes among ring pairs. Resource sharing among nodes is granted by a centralized scheduling algorithm running at the Hub and by an empty-slot media access control protocol implemented at the nodes. Node position along the ring has {{a significant impact on}} access opportunities; thus fairness issues become fundamental in this architecture. This paper proposes a new fairness enforcement algorithm for interconnected multi-channel rings and evaluates its performance by simulation...|$|R
40|$|Keywords: The paper {{focuses on}} the Metro (metropolitan area) network defined in the IST European project DAVID. The DAVID Metro network is based on sets of optical rings {{interconnected}} by passive memoryless devices called Hubs. Ring access is regulated by a dynamic time-division multiple-access scheme <b>allocating</b> fixed <b>size</b> slots in sets of wavelengths that provide multi-channel pipes among ring pairs. Resource sharing among nodes is granted by a centralized scheduling algorithm running at the Hub and by an empty-slot media access control protocol implemented at the nodes. Node position along the ring has {{a significant impact on}} access opportunities; thus fairness issues become fundamental in this architecture. This paper proposes a new fairness enforcement algorithm for interconnected multi-channel rings and evaluates its performance by simulation. WDM, optical ring network, interconnected rings, fairness enforcemen...|$|R
2500|$|Some {{operating}} systems require {{the user to}} <b>allocate</b> the maximum <b>size</b> of the file when the file is created. The file can then be allocated as contiguous disk blocks. In that case, to convert the file block address [...] into a disk block address, the operating system simply adds the file block address [...] to {{the address of the}} first disk block constituting the file. The scheme is simple, but the file cannot exceed its created size.|$|R
40|$|To <b>allocate</b> and <b>size</b> {{capacitors}} in {{a distribution}} system, an optimization algorithm, called Discrete Particle Swarm Optimization (DPSO), is employed in this paper. The {{objective is to}} minimize the transmission line loss cost plus capacitors cost. During the optimization procedure, the bus voltage, the feeder current and the reactive power flowing back to the source side should be maintained within standard levels. To validate the proposed method, the semi-urban distribution system that is connected to bus 2 of the Roy Billinton Test System (RBTS) is used. This 37 -bus distribution system has 22 loads being located in the secondary side of a distribution substation (33 / 11 kV). Reducing the transmission line loss in a standard system, in which the transmission line loss consists of only about 6. 6 percent of total power, {{the capabilities of the}} proposed technique are seen to be validated...|$|R
40|$|The {{available}} {{resources such as}} memory buffer and network bandwidth are limited and varying for different application systems. Given a VBR stream, we have already proposed an algorithm to construct a transmission schedule with minimum buffer, minimum workahead and maximum network utilization for the given transmission rate. Notably, there is a trade-off between the <b>allocated</b> buffer <b>size</b> and the obtained network utilization to playback a VBR stream. To facilitate resource management and admission control for QoS guarantees, we need to explore {{the relation of the}} required client buffer and the obtained network utilization for the allocated transmission rate. Having these relation functions, whenever a new request is presented, the admission control procedure can easily check the required resources against the {{available resources}} and decides to admit this new request or not. The session setup protocol is as simple as a request-reply. Note that, the allocated transmission rate turns out to [...] ...|$|R
25|$|With {{the advent}} of larger {{removable}} and fixed disk drives, disk de-blocking formulas were employed which resulted in more disk blocks per logical file allocation block. While this allowed for larger file sizes, it also meant that the smallest file which could be <b>allocated</b> increased in <b>size</b> from 1KB (on single-density drives) to 2KB (on double-density drives) and so on, up to 32KB for a file containing only a single byte. This made for inefficient use of disk space if the disk contained {{a large number of}} small files.|$|R
30|$|Regional {{sample size}} was {{disaggregated}} to the urban areas by purposeful proportion allocation; regional capital cities had 50 % {{of the total sample}} <b>size</b> <b>allocated</b> for the region while the two towns accounted for 25 % each. We hypothetically drew a 200 -m-radius grid, which was an enumeration area (EA) for the survey, from the city midpoint. We preferred urban centers based on a mere assumption that household members in these areas are engrossed in self-employment. Hence, households within the EA were the data frame from this particular survey.|$|R
40|$|This paper {{presents}} software synthesis {{techniques to}} deal with non-primitive data type from graphical dataflow programs based on the synchronous dataflow (SDF) model. Non-primitive data types, often used in multimedia and graphics applications, require buffer memory of large size. To minimize the buffer requirement, we separate global data buffers and local pointer buffers. The proposed approach first <b>allocates</b> the minimum <b>size</b> of global buffers and next binds the local buffers to the global buffers by setting the pointers. Static binding and dynamic binding techniques are devised. Experimental results prove {{the significance of the}} proposed techniques...|$|R
50|$|With {{the advent}} of larger {{removable}} and fixed disk drives, disk de-blocking formulas were employed which resulted in more disk blocks per logical file allocation block. While this allowed for larger file sizes, it also meant that the smallest file which could be <b>allocated</b> increased in <b>size</b> from 1KB (on single-density drives) to 2KB (on double-density drives) and so on, up to 32KB for a file containing only a single byte. This made for inefficient use of disk space if the disk contained {{a large number of}} small files.|$|R
40|$|Abstract Estimates of {{sampling}} errors are {{of importance for}} survey designers when <b>allocating</b> sample <b>sizes,</b> in production {{as a tool for}} output editing and for users of statistics in decision making. The use of two-dimensional designs with elements of non-probability sampling methods, annually updated samples and complex estimators creates problems when estimating sampling variances for CPI-statistics. In this paper the character of variation in price changes is studied by use of analysis of variance models with one locality and one item effect and an error corresponding to the selection of product offers. This yields valuable information for the sample allocation work. Variance estimators in analytical forms, expressed in schemes of resampling procedures and model based formulas are tested in a large simulation study. A random groups method is proposed. This method makes it possible to estimate the variance for complex functions of index links such as e. g. the annual change of quarterly average inflation rates. ...|$|R
40|$|Abstract This paper {{studies the}} {{optimization}} of container shipping network structures and its operations under changing cargo demand and freight rates. Most existing studies that use a given matrix of average demand {{have not been}} able to deal with practical issues such as empty container repositioning, ship-slot <b>allocating,</b> ship <b>sizing,</b> and container configuration. In this paper, these issues are simultaneously considered based on a series of matrices of demand in a year. The problem is formulated as a mixed integer non-linear programming problem (MINP) with an objective of maximizing the average unit ship-slot profit in three stages by using analytical methodology. A genetic algorithm based on heuristic is utilized to arrive at solutions. Through empirical experiments and comparisons, results show that the proposed model can provide a more realistic solution to the issues on the basis of changing demand and freight rates; the model provides a more effective approach to the optimization of container shipping network structures and operations than does a model based on average demand...|$|R
30|$|A radix- 22 {{butterfly}} loads {{their legs}} from the indexes: 0, N/ 4, N/ 2, and 3 [*]N/ 4. All this data should {{exist in the}} cache at the same time. If the L 1 D cache is 2 -way set-associative and denoting L 1 D_S the <b>allocated</b> cache <b>size</b> in bytes, no cache thrash would happen if N is {{less than or equal}} to L 1 D_S/ 8. Otherwise, cache lines for indexes (0 and N/ 2) or (N/ 4 and 3 [*] 0 / 4) will overwrite each other continuously, decreasing then the cache efficiency. A solution to this consists of applying radix- 2 FFTs for larger sizes, until the size (L 1 D_S/ 8) where radix- 22 can be used without cache thrashes. Indeed, while radix- 2 FFTs only access elements at indexes like (0 and N/ 2), no cache thrash would occur no matter how large N is; as long as the cache is 2 -way set-associative.|$|R
40|$|Drosophila larval {{skeletal}} {{muscles are}} single, multinucleated cells {{of different sizes}} that undergo tremendous growth within a few days. The mechanisms underlying this growth in concert with overall body growth are unknown. We find {{that the size of}} individual muscles correlates with the number of nuclei per muscle cell and with increasing nuclear ploidy during development. Inhibition of Insulin receptor (InR; Insulin-like receptor) signaling in muscles autonomously reduces muscle size and systemically affects the size of other tissues, organs and indeed the entire body, most likely by regulating feeding behavior. In muscles, InR/Tor signaling, Foxo and dMyc (Diminutive) are key regulators of endoreplication, which is necessary but not sufficient to induce growth. Mechanistically, InR/Foxo signaling controls cell cycle progression by modulating dmyc expression and dMyc transcriptional activity. Thus, maximal dMyc transcriptional activity depends on InR to control muscle mass, which in turn induces a systemic behavioral response to <b>allocate</b> body <b>size</b> and proportions...|$|R
