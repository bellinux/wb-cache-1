657|10000|Public
5|$|FreeBSD {{provides}} several security-related features including {{access control}} lists (ACLs), security event auditing, extended file system attributes, mandatory <b>access</b> <b>controls</b> (MAC) and fine-grained capabilities. These security enhancements {{were developed by}} the TrustedBSD project. The project was founded by Robert Watson {{with the goal of}} implementing concepts from the Common Criteria for Information Technology Security Evaluation and the Orange Book. This project is ongoing and many of its extensions have been integrated into FreeBSD. The project is supported by a variety of organizations, including the DARPA, NSA, Network Associates Laboratories, Safeport Network Services, the University of Pennsylvania, Yahoo!, McAfee Research, SPARTA, Apple Computer, nCircle Network Security, Google, the University of Cambridge Computer Laboratory, and others.|$|E
5|$|Maryland and Delaware plan to {{continue}} to upgrade US 113 to introduce freeway elements and access control to improve service on the U.S. Highway. MDSHA has a Phase 5 in its US 113 divided highway project {{for the construction of}} an interchange between US113 and MD12 in Snow Hill. As of 2007, the interchange was planned to be a dumbbell interchange, a variation on the diamond interchange with roundabouts replacing the two intersections of the ramps with the crossroad. The work would include adding service roads to improve access among US 113, MD 12, Washington Street, and Brick Kiln Road. , Phase 5 was stalled in the design stage with no estimated completion date. The state has long-term plans to establish partial control of access on US 113 between Pocomoke City and {{the south end of the}} Snow Hill bypass. Once that project is complete, the only remaining stretch of US 113 in Maryland without <b>access</b> <b>controls</b> will be from Hayes Landing Road to the south end of the Berlin bypass.|$|E
25|$|Required <b>access</b> <b>controls</b> {{consist of}} {{facility}} security plans, maintenance records, and visitor sign-in and escorts.|$|E
40|$|AbstractDifferent from {{traditional}} <b>access</b> <b>control</b> technologies, such as discretionary <b>access</b> <b>control,</b> mandatory <b>access</b> <b>control,</b> role-based <b>access</b> <b>control,</b> trust-based <b>access</b> <b>control</b> can {{solve the problem}} of uncertainty, risk and vulnerability coming from authorization. In this paper, strict definition and formal description of trust-based <b>access</b> <b>control</b> is defined...|$|R
40|$|Information Security: basic {{concepts}} • Privacy: {{basic concepts}} and comparison with security • <b>Access</b> <b>control,</b> security policies, and models – <b>Access</b> <b>control</b> policies • the matrix {{model and the}} safety problem • discretionary <b>access</b> <b>control</b> • mandatory <b>access</b> <b>control</b> • role-based and task-based <b>access</b> <b>control</b> • context-based <b>access</b> <b>control</b> • chinese wall access contro...|$|R
40|$|Commodity {{software}} components are intrinsically untrustworthy. It is highly insecure {{to use them}} directly in mission critical systems. Part of the insecurity {{can be attributed to}} the common-used but flawed mechanisms for discretionary <b>access</b> <b>control,</b> which is coarsegrained and based on user's privileges. Many alternative mechanisms have been investigated to provide mandatory <b>access</b> <b>control</b> that is fine-grained and specific to individual {{software components}}. A predominate approach to this end is to classify processes into domains and roles, and to configure <b>access</b> <b>control</b> accordingly. However, this approach has limited applications in practice due to inconvenience in its manual procedure for <b>access</b> <b>control</b> configuration. This position paper introduces a new approach to address the limitation. Our approach differentiates static from dynamic <b>access</b> <b>control</b> policies such that only a small amount of <b>access</b> <b>control</b> policies needs to be configured statically, and that a large amount of <b>access</b> <b>control</b> policies can be configured dynamically through automatic composition. The differentiation and composition together allow flexible and convenient management of <b>access</b> <b>control,</b> even when it is mandatory and is configured with a highly fine granularity. This paper presents background and details of our approach, specifically differentiation of static from dynamic <b>access</b> <b>control</b> policies, configuration of static <b>access</b> <b>control</b> policies, and composition of dynamic <b>access</b> <b>control</b> policies. Keywords Component-specific <b>access</b> <b>control,</b> highly fine-grained <b>access</b> <b>control,</b> <b>access</b> <b>control</b> configuration, <b>access</b> <b>control</b> management, <b>access</b> <b>control</b> composition I...|$|R
25|$|A {{study of}} several hundred wikis showed that a {{relatively}} high number of administrators for a given content size is likely to reduce growth; that <b>access</b> <b>controls</b> restricting editing to registered users tends to reduce growth; {{that a lack of}} such <b>access</b> <b>controls</b> tends to fuel new user registration; and that higher administration ratios (i.e. admins/user) have no significant effect on content or population growth.|$|E
25|$|Information systems housing PHI must be {{protected}} from intrusion. When information flows over open networks, some form of encryption must be utilized. If closed systems/networks are utilized, existing <b>access</b> <b>controls</b> are considered sufficient and encryption is optional.|$|E
25|$|Fedora uses Security-Enhanced Linux by default, which {{implements}} {{a variety}} of security policies, including mandatory <b>access</b> <b>controls,</b> which Fedora adopted early on. Fedora provides hardening wrapper, and does hardening {{for all of its}} packages by using compiler features such as position-independent executable (PIE).|$|E
50|$|VOS {{inherited}} <b>access</b> <b>control</b> lists from Multics {{and also}} implements directory <b>access</b> <b>control</b> lists. If a file {{does not have}} an <b>access</b> <b>control</b> list, the containing directory's default <b>access</b> <b>control</b> list applies.|$|R
50|$|DACS {{performs}} <b>access</b> <b>control</b> by evaluating <b>access</b> <b>control</b> {{rules that}} are specified by an administrator.Expressed {{as a set}} of XML documents, the rules are consulted at run-time to determinewhether access to a given resource should be granted or denied.As <b>access</b> <b>control</b> rules can be arbitrary computations, itcombines attribute-based <b>access</b> <b>control,</b> role-based <b>access</b> control,policy-based <b>access</b> <b>control,</b> delegated <b>access</b> <b>control,</b> and other approaches.The architecture provides many possibilities to administrators.|$|R
40|$|<b>Access</b> <b>control</b> {{models have}} {{traditionally}} included mandatory <b>access</b> <b>control</b> (or lattice-based <b>access</b> <b>control)</b> and discretionary <b>access</b> <b>control.</b> Subsequently, role-based <b>access</b> <b>control</b> has been introduced, along with claims that its mechanisms are general enough {{to simulate the}} traditional methods. In this paper we provide systematic constructions for various common forms of both of the traditional <b>access</b> <b>control</b> paradigms using the role-based <b>access</b> <b>control</b> (RBAC) models of Sandhu et al., commonly called RBAC 96. We see {{that all of the}} features of the RBAC 96 model are required, and that although for the mandatory <b>access</b> <b>control</b> simulation, only one administrative role needs to be assumed, for the discretionary <b>access</b> <b>control</b> simulations, a complex set of administrative roles is required...|$|R
25|$|In April 2017, Apple {{rolled out}} search ads to the United Kingdom, Australia, and New Zealand, along with {{additional}} features for developers, including ad duplication settings {{and a new}} campaign role with additional <b>access</b> <b>controls.</b> The next month, Apple announced changes to its app affiliate program, which lets registered members refer people to apps and in-app content for a percentage of sales. The commission rate for in-app purchases was reduced from 7% to 2.5%.|$|E
25|$|Swift {{supports}} five {{access control}} levels for symbols: open, public, internal, fileprivate, and private. Unlike many object-oriented languages, these <b>access</b> <b>controls</b> ignore inheritance hierarchies: private {{indicates that a}} symbol is accessible only in the immediate scope, fileprivate indicates it is accessible only from within the file, internal indicates it is accessible within the containing module, public indicates it is accessible from any module, and open (only for classes and their methods) indicates that the class may be subclassed outside of the module.|$|E
25|$|Mac OS is {{characterized}} by its monolithic system. From its original release through System 4, it ran only one application at a time. Even so, it was noted for its ease of use. Mac OS gained cooperative multitasking with System 5, which ran on the Macintosh SE and Macintosh II. It was criticized for its very limited memory management, lack of protected memory, no <b>access</b> <b>controls,</b> and susceptibility to conflicts among extensions that provide additional functionality such as networking or support for a particular device.|$|E
40|$|<b>Access</b> <b>Control</b> is {{the process}} or {{mechanism}} for giving the authority to access the specific resources, applications and system. <b>Access</b> <b>control</b> defines a set of conditions or criteria to access the system and its resources. There are three main <b>accesses</b> <b>Control</b> model first is Mandatory <b>access</b> <b>control</b> model, second is Discretionary <b>access</b> <b>control</b> model and third is Role based <b>access</b> <b>control</b> models. In Mandatory <b>access</b> <b>control</b> models, the user’s roles are allotted according to the system administrator wishes. In this, end users do not have authority to set any <b>access</b> <b>control</b> policies on files therefore {{it is the most}} restrictive <b>access</b> <b>control</b> method. It is useful in a highly secured environment. For example military, research centers. In Discretionary <b>access</b> <b>control</b> model, the end users have complete authority to assign any rights to objects. Bu...|$|R
40|$|As the {{development}} of computer science and smart health-care technology, there is a trend for patients to enjoy medical care at home. Taking enormous users in the Smart Health-care System into consideration, <b>access</b> <b>control</b> is an important issue. Traditional <b>access</b> <b>control</b> models, discretionary <b>access</b> <b>control,</b> mandatory <b>access</b> <b>control,</b> and role-based <b>access</b> <b>control,</b> do not properly reflect the characteristics of Smart Health-care System. This paper proposes an advanced <b>access</b> <b>control</b> model for the medical health-care environment, task-role-based <b>access</b> <b>control</b> model, which overcomes the disadvantages of traditional <b>access</b> <b>control</b> models. The task-role-based <b>access</b> <b>control</b> (T-RBAC) model introduces a task concept, dividing tasks into four categories. It also supports supervision role hierarchy. T-RBAC is a proper <b>access</b> <b>control</b> model for Smart Health-care System, and it improves the management of access rights. This paper also proposes an implementation of T-RBAC, a binary two-key-lock pair <b>access</b> <b>control</b> scheme using prime factorization...|$|R
40|$|Abstract. We propose an <b>access</b> <b>control</b> {{model that}} generalizes Role-Based <b>Access</b> <b>Control</b> {{by making a}} {{distinction}} between what we call ascribed status and action status. The model {{is based upon the}} key notion of an event to enable changes in <b>access</b> <b>control</b> requirements to be performed autonomously. Our <b>access</b> <b>control</b> model is specified as a term rewriting system that permits declarative representation of <b>access</b> <b>control</b> requirements, proving of properties of <b>access</b> <b>control</b> policies defined in terms of our model, and fast prototyping of <b>access</b> <b>control</b> checking. ...|$|R
25|$|Most bugs {{arise from}} {{mistakes}} and errors made {{in either a}} program's source code or its design, or in components and operating systems used by such programs. A few are caused by compilers producing incorrect code. A program that contains {{a large number of}} bugs, and/or bugs that seriously interfere with its functionality, is said to be buggy (defective). Bugs can trigger errors that may have ripple effects. Bugs may have subtle effects or cause the program to crash or freeze the computer. Other bugs qualify as security bugs and might, for example, enable a malicious user to bypass <b>access</b> <b>controls</b> in order to obtain unauthorized privileges.|$|E
25|$|Plex Home is {{a feature}} {{allowing}} to have advanced multi-users mode and fast switching between users. This feature is accessible from the Plex Web App. The first user of Plex is considered as the admin and can create, modify and remove other users. A maximum of 15 additional users can be created. If Plex Home is enabled, each app, device or tool {{communicating with the}} concerned Plex Media Server {{will need to be}} signed in a Plex Account and the server will have DLNA disabled. Each user can be customized, and managed with fine-grained <b>access</b> <b>controls.</b> A PIN code can be used to switch faster between accounts. Each users inherits the Plex Pass benefits from the admin. This feature is particularly convenient in a family when a member wants to watch a movie while another wants to watch another TV series episode for example.|$|E
25|$|S. 517 {{would impose}} a private-sector mandate by {{eliminating}} an existing right {{of action for}} wireless carriers (and others), who are currently able to pursue legal action against those who, without permission, circumvent the <b>access</b> <b>controls</b> on certain wireless telephone handsets. The cost of the mandate would be the forgone net value of settlements and damages in such cases. A search of the literature suggests that few, if any, of those types of lawsuits have been brought against individual consumers. Because such claims would probably be uncommon {{in the future and}} the damage awards allowed in such cases would be relatively small, CBO estimates that the cost of this mandate would be small and fall below the annual threshold established in UMRA for private-sector mandate ($152 million in 2014, adjusted annually for inflation). If the Librarian of Congress decides to broaden the exemption allowed under the bill to cover other types of mobile devices, such an action would eliminate additional rights of action. The cost of that expansion would depend on what devices the Librarian would include under the exemption and the forgone net value of settlements and damages. CBO has no basis to estimate the cost of such mandates as it would depend on the regulatory actions taken by the Librarian.|$|E
40|$|<b>Access</b> <b>Control,</b> Security, Trust, and Logic Deconstructing <b>Access</b> <b>Control</b> Decisions A Logical Approach to <b>Access</b> <b>Control</b> PRELIMINARIES A Language for Access ControlSets and Relations Syntax SemanticsReasoning about <b>Access</b> <b>Control</b> Logical RulesFormal Proofs and Theorems Soundness of Logical RulesBasic Concepts Reference Monitors <b>Access</b> <b>Control</b> Mechanisms: Tickets and Lists Authentication Security PoliciesConfidentiality, Integrity, and Availability Discretionary Security Policies Mandatory Security Policies Military Security Policies Commercial PoliciesDISTRIBUTED <b>ACCESS</b> <b>CONTROL</b> Digital Authent...|$|R
50|$|<b>Access</b> <b>control</b> {{models are}} {{sometimes}} categorized as either discretionary or non-discretionary. The three most widely recognized models are Discretionary <b>Access</b> <b>Control</b> (DAC), Mandatory <b>Access</b> <b>Control</b> (MAC), and Role Based <b>Access</b> <b>Control</b> (RBAC). MAC is non-discretionary.|$|R
40|$|Abstract An <b>access</b> <b>control</b> {{system is}} needed to ensure only {{authorized}} users can access a sensitive resource. We propose a secure <b>access</b> <b>control</b> based on a fully secure and fine grained ciphertext-policy attribute-based encryption scheme. The <b>access</b> <b>control</b> for a sensitive resource is ensured by encrypting it with encryption algorithm from the CP-ABE scheme parameterized by an <b>access</b> <b>control</b> policy. Furthermore, the proposed <b>access</b> <b>control</b> supports non-monotone type <b>access</b> <b>control</b> policy. The ciphertext only can be recovered by users whose attributes satisfy the <b>access</b> <b>control</b> policy. We also implement and measure the performance of our proposed <b>access</b> <b>control.</b> The results of experiments show that our proposed secure <b>access</b> <b>control</b> is feasible. Key Words: ciphertext-policy attribute-based encryption, public key encryption, access contro...|$|R
500|$|Investigations {{were held}} in various states, {{including}} Arkansas, Michigan, and Missouri, which led to lawsuits that accused brokers of illegally reselling tickets from the Best of Both Worlds Tour. [...] "When you allow the hijacking of the market, it's literally the worst of both worlds. You get charged too much, and there's no access for the locals", said Missouri Attorney General Jay Nixon. Numerous ticket brokers accessed tickets prior to fans {{as a result of}} a software program by RMG Technologies Inc, which permitted its clients to circumvent Ticketmaster.com's CAPTCHA <b>access</b> <b>controls,</b> and use the copyrighted website in a manner that violated the site's [...] "Terms of Use". Ticketmaster took legal action against RMG Technologies via the United States District Court for the Central District of California, claiming that the developed software for ticket brokers illegally [...] "allows them to cut in line". RMG Technologies representative denied the allegations and said they should not be held accountable because Ticketmaster is getting still paid for the tickets. [...] "This may be the only time in history that any seller sued its customers for paying them too much money", the attorney for RMG Technologies wrote in court documents.|$|E
500|$|MD 135 {{begins at}} an {{intersection}} with US 219 {{on the eastern}} edge of Oakland. [...] Northbound US 219 (Oak Street) continues straight west into downtown Oakland, southbound US 219 (Garrett Highway) heads south toward Red House, and 9th Street (unsigned MD 219) heads north along the alignment of the future Oakland Bypass. [...] MD 135 heads east through Mountain Lake Park as Maryland Highway, a controlled access two-lane highway. [...] Oakland Drive, which is unsigned MD 825B, splits to the northeast to serve residential areas {{on the north side of}} town. [...] The old alignment rejoins MD 135 at G Street before <b>access</b> <b>controls</b> cease upon crossing the Little Youghiogheny River. [...] The state highway intersects MD 560 (Paull Street), which heads south into Loch Lynn Heights. [...] After crossing the river again, MD 135 leaves Mountain Lake Park. [...] The state highway passes scattered residences, farms, and businesses before entering Deer Park. [...] After passing Deer Park Hotel Road, which passes the Pennington Cottage, MD 135 intersects the old alignment of MD 38, which is Sand Flat Road to the north and Main Street to the south. [...] The state highway passes the historic home Glamorgan and Edgewood Drive, part of the old alignment of MD 38, before leaving Deer Park. [...] Upon reaching the hamlet of Altamont, MD 495 (Swanton Road) continues straight northeast toward Swanton while MD 135 turns to the southeast.|$|E
2500|$|... – In 2009, road blocks were raised, and <b>access</b> <b>controls</b> {{during the}} festival, {{due to the}} {{perceived}} threat of attacks by Islamists, were increased.|$|E
50|$|LBAC {{is known}} as a label-based <b>access</b> <b>control</b> (or {{rule-based}} <b>access</b> <b>control)</b> restriction as opposed to role-based <b>access</b> <b>control</b> (RBAC).|$|R
40|$|Specifying, {{enforcing}} and evolving <b>access</b> <b>control</b> policies {{is essential}} to prevent security breaches and unavailability of resources. These <b>access</b> <b>control</b> design concerns impose requirements that allow only authorized users to access protected computer-based resources. Addressing these concerns in a design results in the spreading of <b>access</b> <b>control</b> functionality across several design modules. The pervasive nature of <b>access</b> <b>control</b> functionality {{makes it difficult to}} evolve, analyze, and enforce <b>access</b> <b>control</b> policies. To tackle this problem, we propose using an aspect-oriented modeling(AOM) approach for addressing <b>access</b> <b>control</b> concerns. In the AOM approach, functionality that addresses a pervasive <b>access</b> <b>control</b> concern is localized in an aspect. Other functional design concerns are addressed in a model of the application referred to as a primary model. Composing <b>access</b> <b>control</b> aspects with a primary model results in an application model that addresses <b>access</b> <b>control</b> concerns. We illustrate our approach using a form of Role-Based <b>Access</b> <b>Control...</b>|$|R
50|$|Attribute-based <b>access</b> <b>control</b> is {{sometimes}} referred to as policy-based <b>access</b> <b>control</b> (PBAC) or claims-based <b>access</b> <b>control</b> (CBAC), which is a Microsoft-specific term.|$|R
2500|$|Literary works {{distributed}} in e-book format when all existing e-book {{editions of the}} work (including digital text editions made available by authorized entities) contain <b>access</b> <b>controls</b> that prevent the enabling either of the book's read-aloud function or of screen readers that render the text into a specialized format. (A renewed exemption from 2006, based on a similar exemption approved in 2003.) ...|$|E
2500|$|Cross-site {{scripting}} (XSS) {{is a type}} {{of computer}} security vulnerability typically found in web applications. XSS enables attackers to inject client-side scripts into web pages viewed by other users. A cross-site scripting vulnerability may be used by attackers to bypass <b>access</b> <b>controls</b> such as the same-origin policy. Cross-site scripting carried out on websites accounted for roughly 84% of all security vulnerabilities documented by Symantec as of 2007. Bug bounty company HackerOne in 2017 reported that XSS is still a major threat vector. XSS effects vary in ...|$|E
2500|$|Resurfacing works costing S$50m on its dual runways {{and older}} taxiways were {{announced}} in January 2007 along with {{improvements to the}} security systems of Changi Airport such as <b>access</b> <b>controls</b> and surveillance systems to make the airport safer for travellers. Transport Minister Raymond Lim also added that the [...] "software" [...] of the airport had to be improved as well. Terminal3 was tested in 2007 to prepare for its 2008 opening. From May 2008 to July 2012 Terminal1 was upgraded {{at a cost of}} S$500 million.|$|E
40|$|Abstract. Despite the {{widespread}} adoption of Role-based <b>Access</b> <b>Control</b> (RBAC) models, new <b>access</b> <b>control</b> models {{are required for}} new applications for which RBAC may not be especially well suited and for which implementations of RBAC do not enable properties of <b>access</b> <b>control</b> policies to be adequately defined and proven. To address these issues, we propose a form of <b>access</b> <b>control</b> model that {{is based upon the}} key notion of an event. The <b>access</b> <b>control</b> model that we propose is intended to permit the representation of <b>access</b> <b>control</b> requirements in a distributed and changing computing environment, the proving of properties of <b>access</b> <b>control</b> policies defined in terms of our model, and direct implementations for <b>access</b> <b>control</b> checking. ...|$|R
40|$|<b>Access</b> <b>control</b> models play an {{important}} role in database management systems. In general, there are three basic <b>access</b> <b>control</b> models: Discretionary <b>Access</b> <b>Control</b> (DAC), Mandatory <b>Access</b> <b>Control</b> (MAC), and Non-Discretionary <b>Access</b> <b>Control</b> (NAC). Currently, the majority of commercial DBMSs provide only DAC, and some temporal <b>access</b> <b>control</b> models have been derived based on either DAC or NAC. In the context of video database applications, since the structure of video data is complex in nature, it requires a specific and tailor-made <b>access</b> <b>control</b> mechanism which should include MAC as well as DAC and NAC. However, only few efforts have been put on <b>access</b> <b>control</b> models for video database systems. In this paper, a transitive and temporal <b>access</b> <b>control</b> mechanism for collaborative video database production applications has been proposed, which subsumes the properties of DAC, MAC, and NAC. Moreover, our proposed mechanism is integrated with the intellectual property concerns by constructing an <b>access</b> <b>control</b> hierarchy of video data with authorization rules. In particular, our mechanism can derive novel authorization rules not only on conventional client-data <b>access</b> <b>control,</b> but also on data-data <b>access</b> <b>control.</b> Besides video data, the proposed model is applicable to other data types which exhibit a hierarchical data structure...|$|R
40|$|XML <b>access</b> <b>control</b> {{refers to}} the {{practice}} of limiting access to (parts of) XML data to only authorized users. Similar to <b>access</b> <b>control</b> over other types of data and resources, XML <b>access</b> <b>control</b> is centered around two key problems: (1) the development of formal models for the specification of <b>access</b> <b>control</b> policies over XML data; and (2) techniques for efficient enforcement of <b>access</b> <b>control</b> policies over XML data. HISTORICAL BACKGROUND <b>Access</b> <b>control</b> is one of the fundamental security mechanisms in information systems. It concerns with who can access which information under what circumstances. The need of <b>access</b> <b>control</b> arises naturally when a multi-user system offers selective access to shared information. As one of the oldest problems in security, <b>access</b> <b>control</b> has been studied extensively in a variety of contexts, including operating systems, databases, and computer networks. The most influential policy models today are discretional <b>access</b> <b>control</b> (DAC), mandatory <b>access</b> <b>control</b> (MAC), and role-based <b>access</b> <b>control</b> (RBAC) models. In DAC, the owner of an object (e. g., a file or database table) solely determines which subjects can access that object...|$|R
