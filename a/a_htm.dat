24|121|Public
30|$|A novel mutant {{tolerant}} to the herbicide “Imazethapyr” {{was developed}} and characterized for genetic, sequence and protein level variations. This is <b>a</b> <b>HTM</b> in rice without any IPR (Intellectual Property Rights) infringements and hence {{can be used in}} rice breeding as a novel genetic stock by the public funded organizations in the country and elsewhere.|$|E
40|$|To investigate, in a ‘real-world’ setting, {{the impact}} of home {{telemonitoring}} (HTM) compared to usual care on achieved dose of guideline-recommended medication, hospitalisation rate and mortality in patients with heart failure (HF). Methods: We retrospectively analyzed data on 333 patients with HF referred to <b>a</b> <b>HTM</b> service supported by a nurse-specialist (mean age 7112 years, mean left ventricular ejection fraction (LVEF) 36 11...|$|E
3000|$|... [...])Se 2 (CIGS), and CIGSSe are {{promising}} light-absorbing materials {{due to their}} excellent optoelectronic properties, good photostability, and long-term stability [31, 32]. Recently, CuInS 2 quantum dot was applied as <b>a</b> <b>HTM</b> in conventional PSCs to replace the organic hole conductor spiro-OMeTAD [33]. However, the relatively low PCE of CuInS 2 {{suggests that there is}} still much room for further improvement in performance. Furthermore, the bandgap of CIGSSe can be tuned from 0.98 to 2.40  eV [34], which provides advantageous characteristics such as expanding the photoresponse of perovskite solar cells. Herein, we report the facile synthesis and application of solution-processed CIGSSe nanocrystals as a novel copper-based inorganic HTM in PSCs. Perovskite solar cells with mesoporous architecture were fabricated, and the CH 3 NH 3 PbI 3 perovskites were formed by a one-step solvent-engineering technology [35]. A PCE of 9.15 % was achieved by using CIGSSe nanocrystals as <b>a</b> <b>HTM</b> in PSCs with enhanced device stability under ambient conditions, compared to devices employing Li-TFSI-doped spiro-OMeTAD as HTM.|$|E
40|$|This thesis {{looks into}} how one could use Hierarchal Temporal Memory (HTM) {{networks}} to generate models {{that could be}} used as trading algorithms. The thesis begins with a brief introduction to algorithmic trading and commonly used concepts when developing trading algorithms. The thesis then proceeds to explain what <b>an</b> <b>HTM</b> is and how it works. To explore whether <b>an</b> <b>HTM</b> could be used to generate models {{that could be used}} as trading algorithms, the thesis conducts a series of experiments. The goal of the experiments is to iteratively optimize the settings for <b>an</b> <b>HTM</b> and try to generate a model that when used as a trading algorithm would have more profitable trades than losing trades. The setup of the experiments is to train <b>an</b> <b>HTM</b> to predict if it {{is a good time to}} buy some shares in a security and hold them for a fixed time before selling them again. A fair amount of the models generated during the experiments was profitable on data the model have never seen before, therefore the author concludes that it is possible to train <b>an</b> <b>HTM</b> so it can be used as a profitable trading algorithm...|$|R
40|$|This study {{analyzes}} the synaptic {{interactions between the}} central terminals of A delta high threshold mechanoreceptors (<b>A</b> delta <b>HTMs)</b> and GABA-immunoreactive profiles. <b>A</b> delta <b>HTM</b> primary afferents from three monkeys and one cat were electrophysiologically identified and intracellularly labeled with HRP, and their terminal arborizations in laminae I and II of the sacrocaudal spinal cord were studied at the ultrastructural level. GABA-immunoreactive profiles in relation to <b>A</b> delta <b>HTM</b> terminals were demonstrated using postembedding colloidal gold techniques. Monkey <b>A</b> delta <b>HTM</b> terminals (n = 131) usually constituted the central element of synaptic glomeruli; they established large asymmetric synaptic contacts with 1 - 13 dendrites (modal value 2 - 4) and were surrounded by 0 - 6 peripheral axon terminals (modal value 2 - 3). The large majority (around 85 %) of the peripheral axon terminals were GABA immunoreactive. They were found presynaptic to the <b>A</b> delta <b>HTM</b> terminal and/or to dendrites postsynaptic to the primary afferent terminal. Furthermore, all peripheral axon terminals found presynaptic to the <b>A</b> delta <b>HTM</b> terminals showed GABA immunoreactivity. Within a single <b>A</b> delta <b>HTM</b> fiber, this synaptic arrangement was found in 20 - 60 % of its boutons. In addition, 28 % of the postsynaptic dendritic profiles displayed weak GABA immunoreactivity. Some of them contained vesicles; however, only {{in a few cases}} did we observe synapses between a GABA- immunoreactive vesicle-containing dendrite and a dendritic profile postsynaptic to <b>an</b> <b>A</b> delta <b>HTM</b> terminal. Similar synaptology and interactions with GABA-immunoreactive profiles were displayed by the terminals of the single cat <b>A</b> delta <b>HTM</b> fiber studied. Our data support the hypothesis that GABA-containing neurons use both presynaptic and/or postsynaptic mechanisms to exert a powerful control, presumably inhibitory, over the transmission of nociceptive information between <b>A</b> delta <b>HTM</b> afferents and second-order neurons in monkey and cat spinal cord. Our results also imply that GABA may be released within the synaptic glomeruli formed by <b>A</b> delta <b>HTM</b> terminals either by local dendrites or by axon terminals. We discuss the possibility that these GABAergic synapses can be driven by inputs from both primary afferents and/or descending systems to modulate the transmission of nociceptive sensory information...|$|R
40|$|AbstractThis paper studies how {{to solve}} the {{truncated}} moment problem (TMP) via homogenization and flat extensions of moment matrices. We first transform TMP to a homogeneous TMP (HTMP), and then use semidefinite programming (SDP) techniques to solve HTMP. Our main results are: (1) a truncated moment sequence (tms) is the limit of a sequence of tms admitting measures on Rn {{if and only if}} its homogenized tms (<b>htms)</b> admits <b>a</b> measure supported on the unit sphere in Rn+ 1; (2) <b>an</b> <b>htms</b> admits <b>a</b> measure if and only if the optimal values of a sequence of SDP problems are nonnegative; (3) under some conditions that are almost necessary and sufficient, by solving these SDP problems, a representing measure for <b>an</b> <b>htms</b> can be explicitly constructed if one exists...|$|R
40|$|Abstract. Human {{fibroblasts}} generate {{at least}} eight tropomyosin (TM) isoforms (hTM 1, hTM 2, hTM 3, hTM 4, hTM 5, hTM 5 <b>a,</b> <b>hTM</b> 5 b, and hTMsmo 0 from four distinct genes, and we have previously demonstrated that bacterially produced chimera hTM 5 / 3 exhibits an unusually high affinity for actin filaments {{and a loss of}} the salt dependence typical for TM-acti...|$|E
40|$|It is herein {{proposed}} a handwritten digit recognition system which biologically inspired of the large-scale {{structure of the}} mammalian neocortex. Hierarchical Temporal Memory (HTM) is a memory-prediction network model that {{takes advantage of the}} Bayesian belief propagation and revision techniques. In this article a study has been conducted to train <b>a</b> <b>HTM</b> network to recognize handwritten digits and letters taken from the well-known Hoda dataset for Farsi handwritten digit. Results presented in this paper show good performance and generalization capacity of the proposed network for a real-world big dataset. Keywords Handwritten digit recognition; hierarchical temporal memory (HTM); Hoda handwritten digits dataset. 1...|$|E
40|$|This work {{describes}} an ideal {{design of a}} nematic liquid crystal display (TN-LCD) that allows obtaining the best configuration of a hybrid ternary modulation to be applied in holographic data storage. With this purpose, the thickness of a real LCD was modified in order to change the birefringence versus gray level. With these new birefringences, simulations for different configurations were made to design an LCD having <b>a</b> <b>HTM</b> {{as close as possible}} to the ideal one. This work was supported by the "Ministerio de Ciencia e Innovación" (Spain) under projects FIS 2008 - 05856 -C 02 - 01 and FIS 2008 - 05856 -C 02 - 02...|$|E
50|$|Although it is {{primarily}} a functional model, several {{attempts have been made}} to relate the algorithms of the HTM with the structure of neuronal connections in the layers of neocortex. The neocortex is organized in vertical columns of 6 horizontal layers. The 6 layers of cells in the neocortex should not be confused with levels in <b>an</b> <b>HTM</b> hierarchy.|$|R
30|$|Implementation of Business {{logic of}} a Component (Functionality related to {{business}} concerns of <b>a</b> particular <b>HTM</b> 5 Component).|$|R
40|$|Abstract. A {{truncated}} moment sequence (tms) y in n {{variables and}} of de-gree d is a finite real sequence {yα} indexed by nonnegative integer vectors α: = (α 1, [...] ., αn) with |α |: = α 1 + · · · + αn ≤ d. It admits a measure if {{there exists a}} positive Borel measure µ on Rn such that each yα is the α-th moment of µ. The truncated moment problem (TMP) studies conditions for a tms y to admit a measure. <b>A</b> homogeneous tms (<b>htms)</b> is indexed by α with |α | constant. This paper proposes an approach to solving TMP via homog-enization and flat extensions of moment matrices. We first transform TMP to a homogeneous TMP (HTMP), and then use semidefinite programming to solve HTMP. Assume the degree d is even. Our main results are: (i) a tms is the limit of a sequence of tms admitting measures on Rn {{if and only if}} its homogenized tms (<b>htms)</b> admits <b>a</b> measure supported on the unit sphere in Rn+ 1; (ii) <b>an</b> <b>htms</b> admits <b>a</b> measure if and only if the optimal values of a se-quence of SDP problems are nonnegative; (iii) under some conditions that are almost necessary and sufficient, by solving these SDP problems, a representing measure for <b>an</b> <b>htms</b> can be explicitly constructed if one exists. 1...|$|R
40|$|Hardware {{transactional}} memory (HTM) is {{an attractive}} research topic in recent years. It has great potential to simplify parallel programming on the soon-to-be-ubiquitous multi-core systems. In this paper, <b>a</b> <b>HTM</b> design is proposed, and overall performance is evaluated. This HTM design distinguishes itself from others by its best effort philosophy. The hardware makes best effort to complete each transaction and software handles those transactions that cannot be completed by hardware. This design seeks a balance between application performance and hardware implementation complexity, and tries to answer the question: {{what should be done}} by hardware and what should be done by software. The overall performance of benchmarks is also evaluated by simulation 1...|$|E
30|$|Due to {{the unique}} {{advantages}} of perovskite material which possess the ability to transport electron and hole, as showed by previous study which simulated the possibility of forming a PSC without HTM [43]. This cell pattern, however, depends on the work function of the back contact with energy of the valence band (Ev_absorber). This simulation is further supported experimentally by another literature [37]. Although HTM-free PSC is possible, several other researchers proved {{the importance of having}} <b>a</b> <b>HTM</b> in PSC is rather important and could affect to a positive increment of several outcomes namely PCE, FF, Voc, decreases the internal resistance of the cell as well as increases the electron lifetime thus promoting electron collection and indirectly preventing electron–hole recombination.|$|E
40|$|International audienceHardware Transactional Memories (HTM) {{provide an}} {{attractive}} programming concept which simplifies parallel programs by shifting synchronization problems {{to the underlying}} memory system. There has recently been much work in relationship {{with the implementation of}} such systems, but to our knowledge, all assume a write-back coherence protocol. As no HTM system is based on a write-through protocol, we propose the design and implementation of <b>a</b> <b>HTM</b> system using a directory based write-through invalidate protocol, and we perform the comparison of this system with a more common HTM system based on a write-back MESI protocol using cycle accurate models. The results indicate that the coherence protocol has an impact on the execution times, but that no solution outperforms the other. However, the write-back protocol shows noticeably better results...|$|E
40|$|Hospitality {{and tourism}} {{management}} (HTM) programmes are {{unique in that}} they usually emphasize the development of students’ industry and generic skills through means of practical and experiential learning elements. This research attempted to explore the learning experience of students in <b>an</b> <b>HTM</b> programme by comparing three different modes of curriculum delivery: 1) traditional lectures; 2) practical workshops; and 3) internship which are generally provided by local institutions. Students’ learning experiences were assessed through the examination of three indicators: 1) students’ perceptions of their learning environment (PLE); 2) learning approaches applied (LA); and 3) their perceived learning outcomes (PLO). The {{results showed that the}} existing instruments being adopted can be positively applied for assessing students’ learning in <b>an</b> <b>HTM</b> programme. Variations in students’ learning experiences were found in different modes of curriculum delivery. A significant relationship among PLE, LA and PLO was also observed which generally followed the Trigwell and Prosser’s 3 P Model. The author, based on these findings, has suggested various ways to enhance the learning experience of students in HTM programmes and areas for further improvement if follow-up researches are conducted in the future. published_or_final_versionEducationDoctoralDoctor of Educatio...|$|R
25|$|Likened to a Bayesian network, <b>an</b> <b>HTM</b> {{comprises}} <b>a</b> {{collection of}} nodes that {{are arranged in}} a tree-shaped hierarchy. Each node in the hierarchy discovers an array of causes in the input patterns and temporal sequences it receives. A Bayesian belief revision algorithm is used to propagate feed-forward and feedback beliefs from child to parent nodes and vice versa. However, the analogy to Bayesian networks is limited, because HTMs can be self-trained (such that each node has an unambiguous family relationship), cope with time-sensitive data, and grant mechanisms for covert attention.|$|R
40|$|Text S 2 : A toy {{example for}} belief {{propagation}} in HTM networks The figure below shows an example illustrating the qualitative meaning of belief propagation messages used in HTM networks. What is shown is {{a segment of}} a larger network {{that is used to}} recognize an input image. More details about the full network is available in [1, 2]. The software example and parameter files for constructing and training <b>an</b> <b>HTM</b> network on <b>a</b> line drawing data set is available as part of the NuPIC software that can be downloaded fro...|$|R
40|$|Sb(2) S(3) -sensitized mesoporous-TiO(2) {{solar cells}} using several {{conjugated}} polymers as hole-transporting materials (HTMs) are fabricated. We {{found that the}} cell performance was strongly cc rrelated with the chemical interaction at the interface of Sb(2) S(3) as sensitizer and the HTMs through the thiophene moieties, {{which led to a}} higher fill factor (FF), open-circuit voltage (V(oc)), and short-circuit current density (J(sc)). With the application of PCPDTBT (poly(2, 6 -(4, 4 -bis-(2 -ethylhexyl) - 4 H-cyclopenta[2, 1 -b; 3, 4 -b']dithiophene) -alt- 4, 7 (2, 1, 3 -benzothiadiazole)) as <b>a</b> <b>HTM</b> in a Sb(2) S(3) -sensitized solar cell, overall power conversion efficiencies of 6. 18, 6. 57, and 6. 53 % at 100, 50, and 10 % solar irradiation, respectively, were achieved with a metal maskclose 9...|$|E
40|$|Concurrent {{programming}} is important due to increasing core counts, but scalable con-currency control {{is difficult and}} error-prone to implement. Hardware Transactional Memory (HTM) addresses this problem by providing hardware support for concur-rently executing arbitrary read-modify-write memory transactions [9]. Intel released Transactional Synchronization eXtensions (TSX), <b>a</b> <b>HTM</b> implementation, in select processors to support scalable concurrency control [11]. This thesis contributes {{a case study in}} applying TSX to the Linux virtual memory system, which currently serializes address-space operations with a lock. TSX should provide scalability by supporting concurrent address-space operations. Achieving scalability with TSX, however, turned out to be difficult due to transactional aborts. This thesis details how to identify and resolve abort problems, and it describes the necessary modifications to make address-space operations scale in Linux. This thesis also describes a new TLB shootdown algorithm, TxShootDown, whic...|$|E
40|$|Hypoxic tumor {{microenvironment}} (HTM) {{is considered to}} promote metabolic changes, oncogene activation and epithelial mesenchymal transition, and resistance to chemo- and radio-therapy, {{all of which are}} hallmarks of aggressive tumor behavior. Cancer cells within the HTM acquire phenotypic properties that allow them to overcome the lack of energy and nutrients supply within this niche. These phenotypic properties include activation of genes regulating glycolysis, glucose transport, acidosis regulators, angiogenesis, all of which are orchestrated through the activation of the transcription factor, HIF 1 A, which is an independent marker of poor prognosis. Moreover, during the adaptation to <b>a</b> <b>HTM</b> cancer cells undergo deep changes in mitochondrial functions such as "Warburg effect" and the "reverse Warburg effect". This review aims to provide an overview of the characteristics of the HTM, with particular focus on novel therapeutic strategies currently in clinical trials, targeting the adaptive response to hypoxia of cancer cells...|$|E
50|$|Likened to a Bayesian network, <b>an</b> <b>HTM</b> {{comprises}} <b>a</b> {{collection of}} nodes that {{are arranged in}} a tree-shaped hierarchy. Each node in the hierarchy discovers an array of causes in the input patterns and temporal sequences it receives. A Bayesian belief revision algorithm is used to propagate feed-forward and feedback beliefs from child to parent nodes and vice versa. However, the analogy to Bayesian networks is limited, because HTMs can be self-trained (such that each node has an unambiguous family relationship), cope with time-sensitive data, and grant mechanisms for covert attention.|$|R
50|$|Mimosa in IEEE S&P 2015 {{presented}} {{a more practical}} solution for public-key cryptographic computations against cold-boot attacks and DMA attacks. It employs hardware transactional memory (HTM) which was originally proposed as a speculative memory access mechanism to boost the performance of multi-threaded applications. The strong atomicity guarantee provided by HTM, is utilized to defeat illegal concurrent accesses to the memory space that contains sensitive data. The RSA private key is encrypted in memory by an AES key that is protected by TRESOR. On requested, an RSA private-key computation is conducted within <b>an</b> <b>HTM</b> transaction: the private key is firstly decrypted into memory, and then RSA decryption or signing is conducted. Because a plain-text RSA private key only appears as modified data in <b>an</b> <b>HTM</b> transaction, any read operation to these data will abort the transaction - the transaction will roll-back to its initial state. Note that, the RSA private key is encrypted in initial state, {{and it is a}} result of write operations (or AES decryption). Currently HTM is implemented in caches or store-buffers, both of which are located in CPUs, not in external RAM chips. So cold-boot attacks are prevented. Mimosa defeats against attacks that attempt to read sensitive data from memory (including cold-boot attacks, DMA attacks, and other software attacks), and it only introduces a small performance overhead.|$|R
40|$|This paper proposes an {{efficient}} object-based implementation of non-blocking software transactions. We use ideas from software distributed shared memory to efficiently implement transactions with little overhead for non-transactional code. Rather than emulating a flat transactional memory, our scheme is object-based, which allows compiler optimizations to provide better performance for long-running transactions. We present empirical data on transaction properties {{to support the}} design. A model for the software transaction implementation is given in Promela, whose correctness has been mechanically verified using the Spin model checker. The design presented cooperates well with <b>an</b> <b>HTM</b> providing support for small short transactions...|$|R
40|$|A set {{of three}} N,N-di-p-methoxyphenylamine-substituted pyrene {{derivatives}} have successfully been synthesized and characterized by H- 1 /C- 13 NMR spectroscopy, mass spectrometry, and elemental analysis. The optical and electronic structures of the pyrene derivatives were adjusted by controlling the ratio of N,N-di-p-methoxyphenylamine to pyrene, and investigated by UV/vis spectroscopy and cyclic voltammetry. The pyrene derivatives were employed as hole-transporting materials (HTMs) in fabricating mesoporous TiO 2 /CH 3 NH 3 PbI 3 /HTMs/Au solar cells. The pyrene-based derivative Py-C exhibited a short-circuit current density of 20. 2 mA/cm(2), an open-circuit voltage (V-oc) of 0. 886 V, and a fill factor of 69. 4 % under an illumination of 1 sun (100 mW/cm(2)), resulting in an overall power conversion efficiency of 12. 4 %. The performance is {{comparable to that of}} the well-studied spiro-OMeTAD, even though the V-oc is slightly lower. Thus, this newly synthesized pyrene derivative holds promise as <b>a</b> <b>HTM</b> for highly efficient perovskite-based solar cellsclos...|$|E
40|$|Abstracts: The {{research}} investigates {{two kinds}} basic problems during the precision processing about turbo molecular pump rotor using 5 -axis machining center. The {{one is to}} study the geometric and dimensional precision of turbo molecular pump rotor. The other one is to study the accuracy evaluative factors of 5 -axis turbo molecular pump rotor machining center. For improving the processing precision to ensure the dynamic symmetry and geometric symmetry of the turbo molecular pump rotor, it focus on analyzing the allowable deviations from the turbo molecular pump rotor’s nominal geometry and dimensions specified during the design stage by defining tolerances on the part’s features using geometric dimensioning tolerancing standards and homogeneous transformation matrix. The geometric and dimensional errors deviation model of this feature can be represented by <b>a</b> <b>HTM</b> Hq. From the errors of the machine tools, using rigid body kinematics techniques and HTM, the systemic geometric volumetric error models are established for error synthesis. Volumetric accuracy model can be verified effectiveness better estimation of machine performance, by means of physical simulation and measurement...|$|E
40|$|AbstractOur {{presented}} idea is {{to integrate}} artificial neural network (probably of BICA type) with a real biological network (ideally in the future with the human brain) in order to extend or enhance cognitive- and sensory- capabilities (e. g. by associating existing and artificial sensory inputs). We propose to design such neuro-module using Hierarchical Temporal Memory (HTM) which is a biologically-inspired model of the mammalian neocortex. A complex task of contextual anomaly detection was chosen as our case-study, where we evaluate capabilities of <b>a</b> <b>HTM</b> module on a specifically designed synthetic dataset and propose improvements to the anomaly model. HTM is framed within other common AI/ML approaches and we conclude that HTM is a plausible and useful model for designing a direct brain-extension module and draft a design of a neuromorphic interface for processing asynchronous inputs. Outcome {{of this study is}} the practical evaluation of HTM's capabilities on the designed synthetic anomaly dataset, a review of problems of the HTM theory and the current implemen- tation, extended with suggested interesting research direction for the future...|$|E
40|$|The {{levels of}} {{carbohydrate}} reserves in Saccharomyces uvarum IZ 1904 were quantified during culture in <b>an</b> <b>HTM</b> medium supplemented with 3 g/l of soy oil, during different fermentative cycles. The cells cultivated in this medium presented {{higher levels of}} glycogen, and a balanced behavior between the accumulation and the mobilization of trehalose {{in the course of}} fermentation cycles. The amplitude of variation in the concentration of carbohydrates during accumulation and mobilization was more homogenous in medium supplemented with lipids. This behavior regarding the reserves may be the cause of the greater viability maintained by the cells in the media with soy oil...|$|R
40|$|Hardware {{speculative}} execution schemes such as hardware transactional memory (HTM) enjoy low run-time overheads but {{suffer from}} limited concurrency because {{they rely on}} reads and writes to detect conflicts. By contrast, software speculation schemes can exploit semantic knowledge of concurrent operations to reduce conflicts. In particular, they often exploit that many operations on shared data, like insertions into sets, are semantically commutative: they produce semantically equivalent results when reordered. However, software techniques often incur unacceptable run-time overheads. To solve this dichotomy, we present COMMTM, <b>an</b> <b>HTM</b> that exploits semantic commutativity. CommTM extends the coherence protocol and conflict detection scheme to support user-defined commutative operations. Multiple cores can perform commutative operations to the same data concurrently and without conflicts. CommTM preserves transactional guarantees and {{can be applied to}} arbitrary HTMs. CommTM scales on many operations that serialize in conventional HTMs, like set insertions, reference counting, and top-K insertions, and retains the low overhead of <b>HTMs.</b> <b>As</b> a result, at 128 cores, CommTM outperforms <b>a</b> conventional eager-lazy <b>HTM</b> by up to 3. 4 χ and reduces or eliminates aborts. National Science Foundation (U. S.) (Grant CAREER- 1452994...|$|R
2500|$|<b>A</b> {{number of}} <b>HTM</b> {{software}} development tools {{have been implemented}} using NuPIC: ...|$|R
40|$|To {{address the}} need for a simpler {{parallel}} programming model, Transactional Memory (TM) has been developed and promises good parallel performance with easy-to-write parallel code. Unlike lock-based approaches, with TM, programmers do not need to explicitly specify and manage the synchronization among threads. However, programmers simply mark code segments as transactions, and the TM system manages the concurrency control for them. TM can be implemented either in software (STM) or hardware (HTM). STMs are more ﬂexible but suffer from serious performance overheads whereas HTMs are faster but limited due to hardware space constrains. We present an implementation of <b>a</b> <b>HTM</b> system, based on an existing protocol (Scalable-TCC), over a full-system simulator. We provide a memory system that allows for a conﬁgurable number of cache entries, associativity, cache-line size, and all the access timings in the memory hierarchy. Combined with a powerful statistics system that provides all the necessary information to extract conclusions from the transactional executions. We evaluate our HTM system using applications that cover a wide range of transactional behaviours and demonstrate that it scales efficiently up to 32 processors...|$|E
40|$|The {{issue of}} time {{underlies}} much of the discussion about the relationships between Work, Expression, Manifestation and Item (to use the terms applied in Functional Requirements of Bibliographic Records), and {{is at the root}} of many of the difficulties associated with online publications, but it is much neglected. So far, only the paper on serials raises it as a substantive issue; the fact that it permeates many of our decisions on every area of cataloguing is obscured by the acceptance of unspoken presumptions. Functional Requirements of Bibliographic Records largely ignores the time aspect,but I suggest there is much to be gained from an analysis, at each level (Work, Expression, Manifestation, Item) of: (a) how objects/entities of library interest exist over time; (b) how or whether they change over time (c) how or whether their existence is reflected in some sort of physical reality, tangible or not (d) whether the physical reality is continuous or intermittent. This item was originally mounted on the web in August 1997 at www. bodley. ox. ac. uk/users/mh/time 978 <b>a.</b> <b>htm...</b>|$|E
40|$|Transactional memory (TM) is an {{emerging}} parallel programming paradigm. It seeks to ease common problems with lock-based parallel programming (e. g., deadlock, composability) {{through the use}} of novel language-level constructs. Researchers have proposed many TM systems to implement TM programming semantics, including all-hardware, all-software, or a hybrid of hardware and software support. We focus on hardware TM systems (HTMs) due to their performance advantages over the other implementations. Early HTM proposals restrict the type of transactions that can be run — either its size or its time — and this may unnecessarily burden TM programmers. Such burdens may slow or even squelch the adoption of TM as a wide-spread parallel programming model. Subsequent HTM proposals support virtualizing transactions (in both space and time), but may incur high overheads when handling common virtualization events (e. g., cache replacements of transactional data), or complicate existing hardware (HW) designs (e. g., L 1 cache). An ideal HTM design should have the following characteristics: (1) Allow the execution of transactions of arbitrary size and time and (2) Minimize changes to existing processor cores and systems. This dissertation makes several contributions in the design and analysis of <b>a</b> <b>HTM</b> with these properties...|$|E
40|$|Algorithms {{that use}} {{hardware}} transactional memory (<b>HTM)</b> must provide <b>a</b> software-only fallback path to guarantee progress. The {{design of the}} fallback path can have {{a profound impact on}} performance. If the fallback path is allowed to run concurrently with hardware transactions, then hardware transactions must be instrumented, adding significant overhead. Otherwise, hardware transactions must wait for any processes on the fallback path, causing concurrency bottlenecks, or move to the fallback path. We introduce an approach that combines the best of both worlds. The key idea is to use three execution paths: <b>an</b> <b>HTM</b> fast path, <b>an</b> <b>HTM</b> middle path, and a software fallback path, such that the middle path can run concurrently with each of the other two. The fast path and fallback path do not run concurrently, so the fast path incurs no instrumentation overhead. Furthermore, fast path transactions can move to the middle path instead of waiting or moving to the software path. We demonstrate our approach by producing an accelerated version of the tree update template of Brown et al., which can be used to implement fast lock-free data structures based on down-trees. We used the accelerated template to implement two lock-free trees: a binary search tree (BST), and an (a,b) -tree (a generalization of a B-tree). Experiments show that, with 72 concurrent processes, our accelerated (a,b) -tree performs between 4. 0 x and 4. 2 x as many operations per second as an implementation obtained using the original tree update template...|$|R
5000|$|Hierarchical Temporal Memory (<b>HTM),</b> <b>a</b> model, {{a related}} {{development}} platform and source code by Numenta, Inc. (2008).|$|R
25|$|<b>A</b> typical <b>HTM</b> {{network is}} <b>a</b> tree-shaped {{hierarchy}} of levels that {{are composed of}} smaller elements called nodes or columns. A single level in the hierarchy is also called a region. Higher hierarchy levels often have fewer nodes and therefore less spatial resolvability. Higher hierarchy levels can reuse patterns learned at the lower levels by combining them to memorize more complex patterns.|$|R
