0|1903|Public
50|$|A {{carriage}} return, sometimes {{known as}} a cartridge return and often shortened to CR, or return, is a control character or mechanism used to <b>reset</b> <b>a</b> <b>device's</b> position {{to the beginning of}} a line of text. It is closely associated with the line feed and newline concepts, although it can be considered separately in its own right.|$|R
50|$|Some devices use a layout {{based on}} the UEXT {{connector}} but {{have chosen not to}} implement all of the functionality. In particular the asynchronous serial connection may have been omitted. In these cases the spare pins are usually assigned other purposes, such as connecting to <b>a</b> <b>device</b> <b>reset</b> line, so care should be taken to check the exact connector layout on the schematic of a particular device.|$|R
5000|$|In {{electronics}} and technology, <b>a</b> <b>reset</b> button is <b>a</b> button that can <b>reset</b> <b>a</b> <b>device.</b> On video game consoles, the reset button restarts the game, losing the player's unsaved progress. On personal computers, the reset button clears the memory and reboots the machine forcibly. Reset buttons are found on circuit breakers to reset the circuit. This button can cause data corruption so this button often doesn't exist on many machines. Usually, in {{computers and other}} electronic devices, it is present as a small button, possibly recessed into the case or only accessible by a pin or similar thin object, to prevent it being pressed accidentally [...]|$|R
50|$|The {{reset button}} {{technique}} (based {{on the idea}} of status quo ante) is a plot device that interrupts continuity in works of fiction. Simply put, use of <b>a</b> <b>reset</b> button <b>device</b> returns all characters and situations to the status quo they held before a major change of some sort was introduced. Typically it occurs either {{in the middle of a}} program and negates a portion of it, or it occurs at the beginning, or very end, of a program to negate all that came before it. Often used in science fiction television series, animated series, soap operas, and comic books, the device allows elaborate and dramatic changes to characters and the fictional universe that might otherwise invalidate the premise of the show with respect to future episodes or issues continuity. Writers may, for example, use the technique to allow the audience to experience the death of the lead character, which traditionally would not be possible without effectively ending the work.|$|R
50|$|Domestic fryers {{often include}} a safety cut-out {{in case of}} overheating, for example if not enough oil is used or the fryer is {{switched}} on whilst empty. <b>A</b> <b>reset</b> button is included on most of these fryers to <b>reset</b> the safety <b>device</b> once the unit has cooled down; if <b>a</b> <b>reset</b> button is not included the fryer may need repairing if the safety device activates.|$|R
50|$|The BOR circuit detects low supply {{voltages}} and <b>resets</b> the <b>device</b> by triggering <b>a</b> power-on <b>reset</b> (POR) signal when {{power is}} applied or removed. The MSP430 MCU’s zero-power BOR circuit is continuously turned on, including in all low-power modes.|$|R
30|$|Cold boot attacks {{exploit the}} {{remanence}} effect of Dynamic Random Access Memory (DRAM), which causes data to fade slowly in memory [4, 5]. Thus, {{it is possible}} to reboot or to <b>reset</b> <b>a</b> <b>device</b> and to acquire the data in main memory. A cold boot attack can be initiated by either shortly removing the battery from the device or by triggering <b>a</b> hardware <b>reset</b> functionality. <b>A</b> forensic tool deployed on the target device conducts the data acquisition. The amount of unimpaired bytes in memory after the restart reflects the quality of an attack. This primarily depends on time, temperature, and on the utilized forensic tool. The longer the timespan between the power cut-off and restarting the device, the more bits degrade in RAM. Cooling down the physical memory mitigates the amount of data loss by the remanence effect. Additionally, not allowing the forensics tool to overwrite important content during the acquisition process is essential. An often neglected factor in the data acquisition process is the overwriting of kernel memory when booting forensics tools on the device, like in the Forensic Recovery Of Scrambled Telephones (FROST) framework [1]. In particular, this includes the system state, for example, the list of running processes and their mapping in physical memory.|$|R
40|$|As smart phones {{continually}} add functionality, {{it increases}} the likelihood of device lock up. This condition has been called the “White Screen of Death ” which is a new take on the popular phrase used to describe Windows PCs after a system fault. Before the advent of standalone reset timers, users were required to remove the phone battery to force a device restart. As more device suppliers remove access to the device battery, it has become necessary to provide a more convenient way of forcing <b>a</b> <b>device</b> <b>reset.</b> <b>Reset</b> timers create <b>a</b> failsafe mechanism for users to reset the phone using a single- or multiple-button long key press. <b>Reset</b> timers have <b>an</b> advantage over software solutions in that the independent, hardware-based solution is not susceptible to software crashes. The need for hardware-based reset timers is the result of an increased likelihood that device operating systems can be derailed by the growing applications and features they must support...|$|R
5000|$|The master {{starts a}} {{transmission}} with <b>a</b> <b>reset</b> pulse, which pulls the wire to 0 volts {{for at least}} 480 µs. This <b>resets</b> every slave <b>device</b> on the bus. After that, any slave device, if present, shows that it exists with a [...] "presence" [...] pulse: it holds the bus low for at least 60 µs after the master releases the bus.|$|R
50|$|The {{ability for}} an {{electronic}} device {{to be able}} to reset itself in case of error or abnormal power loss is an important aspect of embedded system design and programming. This ability can be observed with everyday electronics such as a television, audio equipment or the electronics of a car, which are able to function as intended again even after having lost power suddenly. A sudden and strange error with a device might sometimes be fixed by removing and restoring power, making the <b>device</b> <b>reset.</b> Some <b>devices,</b> such as portable media players, very often have <b>a</b> dedicated <b>reset</b> button as they are prone to freezing or locking up. The lack of <b>a</b> proper <b>reset</b> ability could otherwise possibly render the device useless after a power loss or malfunction.|$|R
50|$|Control {{symbols are}} used to delimit packets (Start of Packet, End of Packet, Stomp), to {{acknowledge}} packets (Packet Acknowledge, Packet Not Acknowledged), <b>reset</b> (<b>Reset</b> <b>Device,</b> <b>Reset</b> Port) and to distribute events within the RapidIO system (Multicast Event Control Symbol). Control symbols are also used for flow control (Retry, Buffer Status, Virtual Output Queue Backpressure) and for error recovery.|$|R
40|$|Rats and stoats {{continue}} to {{have a major impact on}} biodiversity in New Zealand, and improved control techniques are required to avoid further extinctions. <b>A</b> <b>resetting</b> toxin delivery <b>device</b> (Spitfire) is being developed as part of a programme entitled 'Pest Control for the 21 st Century', funded by the Ministry of Business, Innovation and Employment. The Spitfire works by firing a paste containing a toxin on to the belly of stoats and rats as they pass through a tunnel. The <b>device</b> then <b>resets.</b> When the stoats and rats groom the paste from their fur, they ingest the toxin. Each Spitfire is capable of approximately 100 doses and is fitted with a counter and a delay mechanism. The first successful field trial of the stoat Spitfire was undertaken in the Blue Mountains, West Otago in late 2013. Stoat abundance was significantly reduced but technical problems meant the trigger mechanism had to be re-designed. Para-aminopropiophenone (PAPP), the toxin used for the stoat trial, is not lethal enough for rats, so 1080, Zinc phosphide, cholecalciferol, C+C (cholecalciferol + coumatetralyl) and sodium nitrite are being investigated as alternative toxins for the rat Spitfire. Field trials are planned for both stoats and rats using Spitfires in 2014 / 15...|$|R
50|$|Because I²C is {{a shared}} bus, {{there is the}} {{potential}} for any device to have a fault and hang the entire bus. For example, if any device holds the SDA or SCL line low, it prevents the master from sending START or STOP commands to reset the bus. Thus it is common for designs to include <b>a</b> <b>reset</b> signal that provides an external method of <b>resetting</b> the bus <b>devices.</b> However many devices do not have <b>a</b> dedicated <b>reset</b> pin, forcing the designer to put in circuitry to allow devices to be power-cycled if they need to be reset.|$|R
50|$|A {{cloud service}} backed up all {{personal}} data like settings, planner, notes, calendar, photos and all contacts. It was accessible and also editable {{on a web}} interface. <b>A</b> factory <b>reset</b> or new <b>device</b> was able to restore all personal data by signing in with username and password.|$|R
50|$|The {{reset button}} {{could be an}} actual button or concept. The reset button would {{typically}} kick off a soft boot, instructing the computer {{to go through the}} process of shutting down, which would clear memory and <b>reset</b> <b>devices</b> to their initialized state. Contrary to the 'Power Button', which would simply remove power immediately.|$|R
40|$|Ovonic Unified Memory (OUM) {{is based}} on {{materials}} in which the phase change (PC) occurs by the application of an electrical signal. In principle OUM devices {{should be able to}} replace all electrical memories including those with very strict limitation to the time of programming. Chalcogenide materials used in OUM devices present no fundamental limitations with respect to speed (sub nanoseconds) and to scaling (down to 50 Angstroms) and approaches have been reported to reduce programming currents to acceptable range without sacrificing the memory endurance cycle-life. The aim of this investigation is to find factors affecting programming time and involves studies of the influence of: programming current levels, phase change alloy composition and its thickness, electrode contact materials, device geometry, and temperature. Specific methods of characterizing programming speed will be described for both programming to the set (crystallization or ordering) and reset (amorphization or vitrification) states. It will be shown that programming speed to set or to <b>reset</b> <b>a</b> <b>device</b> is determined mainly by only one of electrical contacts: set speed is not as affected by the cathode contact but depends more strongly on the anode contact and that the reset speed could be changed dramatically with cathode contact (material and geometry) but is not as sensitive to the anode contact...|$|R
40|$|First-flush {{diversion}} {{is increasingly}} recognised {{as a useful}} intervention to reduce both suspended and dissolved contaminate loads in rainwater systems. Such first flush systems rely on the early rain to wash the roof before water is allowed in the store. While there is almost universal acceptance that this is beneficial, {{there is no agreement}} on just how much water is to be diverted and the <b>reset</b> of the <b>device</b> rarely considered. In a paper delivered at the 12 th IRCSA conference the authors presented a number of field measurements and derived an exponential decay constant for the first-flush phenomenon based on rainfall depth. This paper builds on these results by applying this decay constant, and a time constant for debris accumulation derived from the same data, to a water-balance model. The results show that most current first-flush devices used in the field have a poor performance; however it is possible to remove up to 85 % of incoming material while retaining 85 % of the water if the device is designed carefully. Better material removal performance is possible but only at the expense of lower water yield; similarly water yield can be improved by reducing overall material removal. The key to good performance is found to be to use <b>a</b> slow <b>device</b> <b>reset</b> combined with <b>a</b> large water diversion, though not as large as had been initially feared. A design procedure is discussed along with practical technical constraints, possibilities and currently available techniques...|$|R
5000|$|Limited error handling. Non-runtime {{errors are}} handled by {{terminating}} the application or <b>resetting</b> the <b>device.</b>|$|R
40|$|We {{describe}} a novel class of attacks called denial-of-app that allows adversaries to inhibit the future installation of attacker-selected applications on mobile phones. Adversaries can use such attacks to entrap users into installing attacker-preferred applications, for instance to generate additional revenue from advertisements on a competitive app market or {{to increase the}} rate of malware installation. Another possibility is to block anti-virus applications or security workarounds to complicate malware detection and removal. We demonstrate such an attack that works on arbitrary unmodified stock Android phones. It is even possible to block many applications from a list predefined by the attacker instead of just a single app. Even more, we propose an attack for banning applications from Google Play Store regardless of the user's phone by exploiting similar vulnerabilities in the market's app vetting process. Unblocking an application blocked by our attack requires either root privileges or <b>a</b> complete <b>device</b> <b>reset.</b> The Android security team has confirmed and fixed the vulnerability in Android 4. 4. 3 (bug 13416059) and has given consent to this publication within a responsible-disclosure process. To {{the best of our}} knowledge, the attack applies to all versions prior to Android 4. 4. 3...|$|R
5|$|When a USB {{device is}} first {{connected}} to a USB host, the USB device enumeration process is started. The enumeration starts by sending <b>a</b> <b>reset</b> signal to the USB device. The data rate of the USB device is determined during the reset signaling. After <b>reset,</b> the USB <b>device's</b> information is read by the host and the device is assigned a unique 7-bit address. If the device {{is supported by the}} host, the device drivers needed for communicating with the device are loaded and the device is set to a configured state. If the USB host is restarted, the enumeration process is repeated for all connected devices.|$|R
50|$|The first fault {{indicators}} came {{onto the}} market from Horstmann (Germany) in 1946. The E.O. Schweitzer Manufacturing Company (now {{a division of}} Schweitzer Engineering Laboratories, Inc.) introduced a product to the U.S.A in 1948. The first fault indicators were manual <b>reset</b> <b>devices.</b> Later fault indicators automatically reset on system restoration or after a set period of time. More recent fault indicators communicate their status (tripped or reset) via cell signal or radio to a central station, handheld device, or pole-mounted receiver.|$|R
50|$|If {{both teams}} are {{stalling}} <b>a</b> <b>reset</b> should occur.|$|R
50|$|<b>A</b> <b>reset</b> {{button for}} {{resetting}} the form to default values.|$|R
50|$|<b>A</b> <b>reset</b> {{character}} is echoed, and then causes a unidirectional start-up.|$|R
5000|$|POKE PEEK(8027)+256*PEEK(8028),32 → would recover {{contents}} of MEMO after <b>a</b> <b>RESET</b> ALL ...|$|R
50|$|<b>A</b> {{power-on}} <b>reset</b> (PoR) generator is a microcontroller or microprocessor peripheral {{that generates}} <b>a</b> <b>reset</b> signal when power {{is applied to}} the device. It ensures that the device starts operating in a known state.|$|R
40|$|<b>A</b> <b>reset</b> put optIOn lS slmllar to a {{standard}} put optIOn except that the exerCIse pnce lS reset equal to the stock pnce on the pre-specifled reset date If this stock pnce exceeds the anginal exerClse pnce. In thls paper we denve a valuatlOn formula for <b>a</b> <b>reset</b> put optIOn and present a range of comparatlve statlcs deslgned to hlghlzght the dlfferences between <b>a</b> <b>reset</b> put and <b>a</b> standard put We also develop a numencal technzque for valumg Amencan-style reset puts. Fmally, we apply our valuatIOn results to assess the mterest rate premIums embedded m the Geared Equity Investments offered by Macquane Bank. Keywords...|$|R
40|$|AbstractThe BDD- and SAT-based model {{checking}} and verification methods normally require an initial state. Here {{we are concerned}} with sequential hardware verification, where an initial state {{must be one of}} the reset states. In practice, <b>a</b> <b>reset</b> state is not always given by the designer, and computing <b>a</b> <b>reset</b> state of <b>a</b> circuit is a hard problem. In this paper we propose a method allowing usage of SAT-based verification methods without a need for a user-given or a computed initial state. The idea is to employ a binary encoding of 3 -valued modeling of circuits, and use the undefined state X as <b>a</b> <b>reset</b> state...|$|R
5000|$|S1 Core adds a Wishbone bridge, <b>a</b> <b>reset</b> {{controller}} and <b>a</b> basic interrupt controller; ...|$|R
40|$|AbstractWe {{show that}} if the state set Q of a {{synchronizing}} automaton A=〈Q,Σ,δ〉 admits a linear order such that for each letter a∈Σ the transformation δ(_,a) of Q preserves this order, then <b>A</b> possesses <b>a</b> <b>reset</b> word of length |Q|- 1. We also consider two natural generalizations {{of the notion of}} <b>a</b> <b>reset</b> word and provide for them results of a similar flavour...|$|R
50|$|One of {{the main}} characters. She {{possesses}} the ability to 'reset' the town of Sagrada for a maximum of three days. To do this, she must first 'save' at a specific time, after which, when she uses her Reset, the town of Sagrada {{will return to the}} saved time. <b>A</b> <b>Reset</b> can be done once per Save, and after <b>a</b> <b>Reset,</b> <b>a</b> Save can only be done 24 hours later. Her ability is not going back in time, but a literal reset; everything is reverted to its original state when the save was made. As a result, her own memories of the time between a Save and <b>a</b> <b>Reset</b> are also gone. This made her ability useless because she herself have no idea what she wants to change before committing <b>a</b> <b>Reset,</b> and everything will just repeat what happened before. The only person who can remember the events before the Reset is Kei. After meeting Kei, Haruki decided a new rule to herself for using her ability: she will completely trust Kei and only use her Reset when Kei orders her.|$|R
5000|$|LZMA state <b>resets</b> cause <b>a</b> <b>reset</b> of all LZMA state {{except the}} dictionary, and specifically: ...|$|R
50|$|A {{rock and}} roll singer who plays guitar and Kei's close friend. His ability is to send a voice he heard to a {{specific}} person, unbound by time and space and arriving exactly at the date and time intended. This ability transcends <b>a</b> <b>Reset</b> phenomena, so even if <b>a</b> <b>Reset</b> is performed, the message would still {{be sent to the}} recipient at the specified time and date.|$|R
5000|$|Kohler {{continued}} {{to pursue his}} profession as a research engineer, as a designer of industrial electronic equipment, and as a consultant and lecturer. Kohler was granted many patents for various inventions {{in the course of}} his activities. Kohler's achievement with the greatest technological impact was patent 3243753 making possible the polyswitch, <b>an</b> automatically <b>resetting</b> circuit protection <b>device</b> which shuts off a circuit when a current overload is sensed but automatically resets when the surge is over, thus avoiding blown fuses and machine stoppages ...|$|R
2500|$|... <b>reset</b> — <b>a</b> <b>reset</b> button that, when activated, {{tells the}} browser {{to restore the}} values to their initial values.|$|R
40|$|Abstract. We study several {{problems}} related to finding reset words in deterministic finite automata. In particular, we establish {{that the problem of}} deciding whether <b>a</b> shortest <b>reset</b> word has length k is complete for the complexity class DP. This result answers a question posed by Volkov. For the search problems of finding <b>a</b> shortest <b>reset</b> word and the length of <b>a</b> shortest <b>reset</b> word, we establish membership in the complexity classes FP NP and FP NP[log], respectively. Moreover, we show that both these problems are hard for FP NP[log]. Finally, we observe that computing <b>a</b> <b>reset</b> word of <b>a</b> given length is FNP-complete. ...|$|R
