84|36|Public
25|$|Although many {{personal}} computers accommodate SD cards as an <b>auxiliary</b> <b>storage</b> device through a built-in slot or a USB adaptor, SD cards {{cannot be used}} as the primary hard disk through the onboard ATA controller because none of the SD card variants support ATA signalling. This use requires a separate SD controller chip or an SD-to-CompactFlash converter. However, on computers that support bootstrapping from a USB interface, an SD card in a USB adaptor can be the primary hard disk, provided it contains an operating system that supports USB access once the bootstrap is complete.|$|E
500|$|The ships' engines {{were rated}} {{to produce a}} top speed of [...] from , though both ships {{slightly}} exceeded those figures on speed trials, with Nautilus reaching [...] and Albatross at [...] The ships were designed to carry [...] of coal, though by using <b>auxiliary</b> <b>storage</b> spaces, Nautilus could store up to [...] and Albatross could carry up to [...] This allowed the ships to cruise for [...] at a speed of [...]|$|E
2500|$|Thus, {{because of}} the [...] upper bound on heapsort's running time and {{constant}} upper bound on its <b>auxiliary</b> <b>storage,</b> embedded systems with real-time constraints or systems concerned with security often use heapsort, such as the Linux kernel.|$|E
3000|$|Strategies to {{integrate}} <b>auxiliary</b> energy <b>storage</b> units to supply intermittent loads to avoid overloading the grid [...]...|$|R
50|$|The {{lithium-ion}} battery has a charge capacity of 6.8 ampere-hours {{and is an}} <b>auxiliary</b> energy <b>storage</b> system. Power output from the {{lithium-ion battery}} is 22 kW. Battery charge is recovered from braking energy or the hydrogen fuel cell.|$|R
50|$|As Isely Field, North Field, and West Field on Tinian became operational, Kobler Field was {{increasingly}} {{used by the}} Twentieth Air Force as an <b>auxiliary</b> field for <b>storage</b> and basing of miscellaneous aircraft.|$|R
2500|$|In this table, [...] is {{the number}} of records to be sorted. The columns [...] "Average" [...] and [...] "Worst" [...] give the time {{complexity}} in each case, under the assumption that the length of each key is constant, and that therefore all comparisons, swaps, and other needed operations can proceed in constant time. [...] "Memory" [...] denotes the amount of <b>auxiliary</b> <b>storage</b> needed beyond that used by the list itself, under the same assumption. The run times and the memory requirements listed below should be understood to be inside big O notation, hence the base of the logarithms does not matter; the notation [...] means [...]|$|E
2500|$|Quicksort also {{competes with}} mergesort, another [...] sorting algorithm. Mergesort is a stable sort, unlike {{standard}} in-place quicksort and heapsort, {{and can be}} easily adapted to operate on linked lists and very large lists stored on slow-to-access media such as disk storage or network attached storage. Although quicksort can be implemented as a stable sort using linked lists, it will often suffer from poor pivot choices without random access. The main disadvantage of mergesort is that, when operating on arrays, efficient implementations require O(n) auxiliary space, whereas the variant of quicksort with in-place partitioning and tail recursion uses only [...] space. (Note that when operating on linked lists, mergesort only requires a small, constant amount of <b>auxiliary</b> <b>storage.)</b> ...|$|E
50|$|Flash {{memory has}} certain {{endurance}} {{limitations on the}} maximum number of erase cycles it can undergo, which can be as low as 100 erase cycles. In systems where Flash Memory is used as the only <b>auxiliary</b> <b>storage</b> system, implementing virtual memory compression can reduce the total quantity of data being written to <b>auxiliary</b> <b>storage,</b> improving system reliability.|$|E
40|$|AbstractWe shall {{show that}} the S(n) -tape bounded and T(n) -time bounded nondeterministic {{auxiliary}} pushdown automata can be simulated by S(n) -tape bounded deterministic auxiliary pushdown automata which are S(n) · logT(n) -stack bounded whenever S(n) is tape constructible and S(n) ⩾ log n. Hence S(n) -tape bounded nondeterministic Turing machines can be simulated by S(n) -tape bounded deterministic automata which have an <b>auxiliary</b> pushdown <b>storage</b> of length S 2 (n) ...|$|R
50|$|The {{electrons}} may {{be extracted}} from the accelerator proper and stored in an ultrahigh vacuum <b>auxiliary</b> magnetic <b>storage</b> ring where they may circle {{a large number of}} times. The magnets in the ring also need to repeatedly recompress the beam against Coulomb (space charge) forces tending to disrupt the electron bunches. The change of direction is a form of acceleration and thus the electrons emit radiation at GeV energies.|$|R
40|$|International audienceBased {{on a new}} {{numerical}} sizing code named ORIENTE (Optimization of Renewable Intermittent Energies with hydrogeN for auTonomous Electrification) under Matlab software, the aim of {{this work}} is the optimization of PV- H 2 system with the perspective to feed electricity for a few homes. This system is composed of the different following components: the renewable energy production system (PV plant), the energy storage system (a PEM electrolyzer with its <b>auxiliaries,</b> <b>storage</b> tanks for H 2, O 2 and H 2 O, and battery pack), a PEM fuel-cell and its associated converters. ORIENTE is based on a sequential running time. It computes the energy flows and the energy balance during the specific simulation time, determines the running time and the nominal power for each component, the evolution of gas volume storage) O,(H 22 and the sizing curve) V,(PH 2 PVleading to system autonomy for the predefined load. This paper presents an example of a hybrid PV-H 2 system sizing using ORIENTE {{in the case of an}} electricity supply of a few homes...|$|R
50|$|Virtual memory {{compression}} (also {{referred to}} as RAM compression and memory compression) is a memory management technique that utilizes data compression {{to reduce the size}} or number of paging requests to and from the <b>auxiliary</b> <b>storage.</b> In a virtual memory compression system, paging requests are compressed and stored in physical memory, which is usually random-access memory (RAM), or sent as compressed to <b>auxiliary</b> <b>storage</b> such as a hard disk drive (HDD) or solid-state drive (SSD). In both cases the virtual memory range whose contents has been compressed during the paging request is marked inaccessible so that attempts to access compressed pages can trigger page faults and reversal of the process (retrieval from <b>auxiliary</b> <b>storage</b> and decompression). The footprint of the data being paged is reduced by the compression process; in the first instance, the freed RAM is returned to the available physical memory pool, while the compressed portion is kept in RAM. In the second instance, the compressed data is sent to <b>auxiliary</b> <b>storage</b> but the resulting I/O operation is smaller and therefore takes less time.|$|E
5000|$|In {{order to}} {{determine}} whether a given cycle has been moved already, the simplest scheme would be to use O(MN) <b>auxiliary</b> <b>storage,</b> one bit per element, to indicate whether a given element has been moved. To use only O(M+N) or even [...] <b>auxiliary</b> <b>storage,</b> more complicated algorithms are required, and the known algorithms have a worst-case linearithmic computational cost of [...] at best, as first proved by Knuth (Fich et al., 1995; Gustavson & Swirszcz, 2007).|$|E
5000|$|... 2844 <b>Auxiliary</b> <b>Storage</b> Control - This SCU is {{a second}} 2314 SCU {{attached}} to one set of 2314 DASD allowing simultaneous access to any two of the attached DASD.|$|E
5000|$|<b>Auxiliary</b> Image Items: <b>storage</b> of {{an image}} data which {{complements}} another image item. An alpha plane or a depth map are examples for such images. This data is not displayed as such, but used in various forms to complement another image item.|$|R
40|$|FORTRAN subprograms for the {{solution}} of systems of linear algebraic equations are described, listed, and evaluated in this report. Procedures considered are direct solution, iteration, and matrix inversion. Both incore methods and those which utilize <b>auxiliary</b> data <b>storage</b> devices are considered. Some of the subroutines evaluated require the entire coefficient matrix to be in core, whereas others account for banding or sparceness of the system. General recommendations relative to equation solving are made, and {{on the basis of}} tests, specific subprograms are recommended...|$|R
40|$|A {{stored program}} {{computer}} and its application on OAO is considered. The parallel computer has a memory capacity of 16, 384 words of 18 bits each, one central processor unit, two 4096 word memory units, and one input/output unit. The I/O has no direct data connection with the CPU so that all data flow between these two units must pass through memory {{by way of the}} memory data bus. The primary functions of the onboard computer are <b>auxiliary</b> command <b>storage,</b> spacecraft monitoring and malfunction reporting, data compression and status summary, and possible performance of emergency corrective action...|$|R
50|$|The current {{school grounds}} include a two-story school {{building}} with an attached cafeteria and a gymnasium, two <b>auxiliary</b> <b>storage</b> buildings, {{and a very}} large open field that accommodates school sports as well as community recreation.|$|E
5000|$|In {{mathematics}} and theoretical computer science, a k-regular sequence is an infinite sequence of terms {{characterized by a}} finite automaton with <b>auxiliary</b> <b>storage.</b> They are a generalization of [...] k-automatic sequences to alphabets of infinite size.|$|E
5000|$|Thus, {{because of}} the [...] upper bound on heapsort's running time and {{constant}} upper bound on its <b>auxiliary</b> <b>storage,</b> embedded systems with real-time constraints or systems concerned with security often use heapsort, such as the Linux kernel.|$|E
40|$|The {{design of}} a stored program {{computer}} for spacecraft use and its application on the fourth Orbiting Astronomical Observatory (OAO) is reported. The computer is a medium scale, parallel machine with a memory capacity of 16384 words of 18 bits each. It possesses a comprehensive instruction repertoire and operates on 45 W of power (including the dc-to-dc converter). The machine operates at a 500 -kHz rate and executes an add instruction in 10 microseconds. Its primary functions on OAO C will be <b>auxiliary</b> command <b>storage,</b> spacecraft monitoring and malfunction reporting, data compression and status summary, and possible performance of emergency corrective action for certain anomalous situations...|$|R
40|$|When heat lost through ducts is {{counted for}} {{accurate}} performance assessment, solar energy supplied 56 percent of building's space heating load. Average outdoor temperature was 53 degrees F; average indoor temperature was 69 degrees F. System operating modes included heating from solar collectors, storing heat, heating from <b>storage,</b> <b>auxiliary</b> heating with oil fired furnace, summer venting, and hot water preheating...|$|R
40|$|A small {{improvement}} {{in the structure of}} the material could save the manufactory a lot of money. The free material design can be formulated as an optimization problem. However, due to its large scale, second-order methods cannot solve the free material design problem in reasonable size. We formulate the free material optimization (FMO) problem into a saddle-point form in which the inverse of the stiffness matrix A(E) in the constraint is eliminated. The size of A(E) is generally large, denoted as N by N. This is the first formulation of FMO without A(E). We apply the primal-dual subgradient method [17] to solve the restricted saddle-point formula. This is the first gradient-type method for FMO. Each iteration of our algorithm takes a total of $O(N^ 2) $ foating-point operations and an <b>auxiliary</b> vector <b>storage</b> of size O(N), compared with formulations having the inverse of A(E) which requires $O(N^ 3) $ arithmetic operations and an <b>auxiliary</b> vector <b>storage</b> of size $O(N^ 2) $. To solve the problem, we developed a closed-form solution to a semidefinite least squares problem and an efficient parameter update scheme for the gradient method, which are included in the appendix. We also approximate a solution to the bounded Lagrangian dual problem. The problem is decomposed into small problems each only having an unknown of k by k (k = 3 or 6) matrix, and can be solved in parallel. The iteration bound of our algorithm is optimal for general subgradient scheme. Finally we present promising numerical results. Comment: SIAM Journal on Optimization (accepted...|$|R
50|$|A typical {{strategy}} for in-place algorithms without <b>auxiliary</b> <b>storage</b> and without separate digit-reversal passes involves small matrix transpositions (which swap individual pairs of digits) at intermediate stages, {{which can be}} combined with the radix butterflies {{to reduce the number}} of passes over the data.|$|E
50|$|Control tables can {{reside in}} static storage, on <b>auxiliary</b> <b>storage,</b> {{such as a}} flat file or on a {{database}} or may alternatively be partially or entirely built dynamically at program initialization time from parameters (which themselves may reside in a table). For optimum efficiency, the table should be memory resident when the interpreter begins to use it.|$|E
50|$|In some situations, {{such as in}} {{embedded}} devices, <b>auxiliary</b> <b>storage</b> {{is limited}} or non-existent. In these cases, virtual memory compression can allow a virtual memory system to operate, where otherwise virtual memory {{would have to be}} disabled. This allows the system to run certain software which would otherwise be unable to operate in an environment with no virtual memory.|$|E
40|$|A tether launch system (TLS) on {{the lunar}} surface can launch 10 tonne {{payloads}} of lunar produced oxygen (LLOX) into low lunar orbit or lunar escape using existing materials and technologies. The TLS has several advantages over the quenchgun or ram accelerator. It is much lighter with a weight of only ten times the payload. It has no power storage needs. It has a small surface footprint {{and the ability to}} launch into any inclination. And, finally, it can be used as an <b>auxiliary</b> power <b>storage</b> device during long lunar nights. Using LLOX in conjunction with the tether launcher reduces Earth-launched propellant needs by seven times for piloted lunar missions and nearly six times fo...|$|R
40|$|The {{state of}} the art, criteria, and {{recommended}} practices for the theoretical and experimental analyses of discontinuity stresses and their distribution in metallic pressure vessels for space vehicles are outlined. The applicable types of pressure vessels include propellant tanks ranging from main load-carrying integral tank structure to small <b>auxiliary</b> tanks, <b>storage</b> tanks, solid propellant motor cases, high pressure gas bottles, and pressurized cabins. The major sources of discontinuity stresses are discussed, including deviations in geometry, material properties, loads, and temperature. The advantages, limitations, and disadvantages of various theoretical and experimental discontinuity analysis methods are summarized. Guides are presented for evaluating discontinuity stresses so that pressure vessel performance will not fall below acceptable levels...|$|R
40|$|In {{the field}} of {{innovative}} power sources, photovoltaic are playing an important role as new clean energy generators. The performances being dependent on instantaneous weather condition, photovoltaic sources are usually equipped with an <b>auxiliary</b> energy <b>storage</b> device. There are applications where the opportunity to couple the photovoltaic source with ultracapacitor can be taken into account. The aim of the paper is to study the performances of a hybrid system constituted by photovoltaic and ultracapacitorsources. In particular, the paper deals with {{the study of the}} ultracapacitor rate design for photovoltaic systems feedingpulsingloads. The results of the study, which can also be referred to temporary unfavourable weather conditions, have been validated by experimental data. In the final part of the paper, some considerations on economical implications about the dimensioning of a photovoltaic–ultracapacitor systems are drawn...|$|R
50|$|Although the {{abstract}} Cooley-Tukey factorization of the DFT, above, applies {{in some form}} to all implementations of the algorithm, much greater diversity exists in the techniques for ordering and accessing the data at each stage of the FFT. Of special interest {{is the problem of}} devising an in-place algorithm that overwrites its input with its output data using only O(1) <b>auxiliary</b> <b>storage.</b>|$|E
50|$|Auxiliary memory, {{also known}} as <b>auxiliary</b> <b>storage,</b> {{secondary}} storage, secondary memory or external memory, is a non-volatile memory (does not lose stored data when the device is powered down) that is not directly accessible by the CPU, {{because it is not}} accessed via the input/output channels (it is an external device). In RAM devices (as flash memory) data can be directly deleted or changed.|$|E
50|$|In {{computer}} main memory, <b>auxiliary</b> <b>storage</b> {{and computer}} buses, data redundancy is {{the existence of}} data that is additional to the actual data and permits correction of errors in stored or transmitted data. The additional data can simply be a complete copy of the actual data, or only select pieces of data that allow detection of errors and reconstruction of lost or damaged data {{up to a certain}} level.|$|E
40|$|The paper {{suggests}} {{the use of}} supercapacitors in the bridge crane AC drives application, as <b>storage</b> <b>auxiliary</b> device connected in parallel with the main power source for energy saving. A sizing procedure is proposed. The design procedure of the storage system is derived from theoretical considerations. It leads to evaluate the ratings of all devices capable of satisfying the load requirements. Numerical results are reported {{in order to show}} the feasibility of proposed technical solution and to evaluate the energy saving...|$|R
40|$|International Telemetering Conference Proceedings / September 15 - 17, 1969 / Sheraton Park Hotel, Washington, D. C. This paper {{describes}} {{the design of}} a stored program computer for spacecraft use and its application on the fourth Orbiting Astronomical Observatory (OAO-C). The computer, referred to as OBP- 2, is a medium scale, parallel machine and has a memory capacity of 16, 384 words of 18 bits each. It possesses a comprehensive instruction repertoire and operates on 45 watts of power (including the DC to DC converter). The machine operates at a 667 KHz rate and executes an add instruction in 7. 5 microseconds. The primary function of OBP- 2 on OAO-C will be <b>auxiliary</b> command <b>storage,</b> spacecraft monitoring and malfunction reporting, data compression and status summary, and possible performance of emergency corrective action for certain anomalous situations...|$|R
40|$|Power {{demands for}} heating of {{buildings}} vary a lot over {{the day and}} between seasons. These variations cause uneven supply of heat in district heating networks, which is both inefficient and costly. The buildings that {{are connected to the}} district heating system can be potentially utilized as <b>auxiliary</b> thermal <b>storages</b> to smooth out the variations in the heat supply demand. Since these effects can be achieved at the expense of thermal comfort in buildings, reliable planning tools are needed. This work presents a handy analytical model of a building connected to the district heating {{that can be used to}} estimate both the reduction of heating power demand and the discomfort that follows. The analytical analysis that gives straight forward results for a tentative building is complemented with a numerical analysis for cases with extra constraints. The analyses show promising results for this technique...|$|R
