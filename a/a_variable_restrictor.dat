2|10000|Public
40|$|This work {{investigates the}} use of a water-ammonia double-lift {{absorption}} cycle for low temperature refrigeration driven by low-grade heat, as waste-heat or solar energy. Among the various double-lift cycles, the investigation focuses on the self-adapting two-pump series cycle, using water-ammonia as working pair. At first, by means of a numerical investigation, it is verified that an air cooled unit can operate with driving temperature of 90  °C, air temperature up to 32  °C and brine temperature down to − 15  °C. Then, it is discussed how to modify an existing prototype to achieve the mentioned working conditions. The influence of the two restrictors of the refrigerant on the cycle behaviour is discussed in a qualitative manner, pointing out that the restrictor after the condenser sets the intermediate and low pressures and, consequently, the maximum allowed thermal lift. Finally, the prototype performances are experimentally assessed, confirming that the influence of the restrictor between high and intermediate pressure and pointing out that {{the use of}} a fixed restrictor prevents the full exploitation of the potential of the cycle. As a consequence, the use of <b>a</b> <b>variable</b> <b>restrictor</b> could represent an option for optimizing the appliance COP {{in a wide range of}} thermal lifts. © 2017 Elsevier Lt...|$|E
40|$|The paper {{presents}} an experimental procedure for comparing different families of IC Engine lubricating pumps {{in terms of}} total consumed energy in a NEDC driving cycle. Measures are performed on a test rig able to reproduce the oil temperature profile, the lubrication circuit permeability and its variation during the engine warm-up. The pump under test is driven by a variable speed electric motor supplying the engine velocity profile of the driving cycle. The load on the pump is generated by means of <b>a</b> <b>variable</b> <b>restrictor</b> controlled in a closed loop by a proper combination of speed, temperature, flow rate and pressure signals in order to replicate the typical permeability of the lubricating circuit. The method {{has been applied to}} a 15 cc/rev crankshaft mounted gerotor pump for a medium displacement Diesel engine; the flow-pressure characteristics of the lubricating circuit at different temperatures and the oil heating rate measured on the engine have been supplied to the test rig control system. The reference pump has been contrasted with a crankshaft mounted variable displacement vane pump with absolute pressure limiter device and an off-axis external gear pump with the same displacement and pressure setting. Experimental tests bring to evidence the advantage of the variable displacement pump during short trips with cold start, while the external gear pump prevails at the end of NEDC cycle where highest engine speeds and oil temperatures are reached...|$|E
40|$|Time {{integrated}} {{sampling of}} TO 14 compounds into stainless steel canisters was evaluated under {{a variety of}} conditions. Four different flow controllers were tested at temperatures ranging from 4 deg. C to 40 deg. C to determine how well they maintained a constant flow rate despite changes in ambient temperatures. The three flow controllers with fixed restrictors maintained a relatively constant flow rate over the temperatures tested, while the flow controller with <b>a</b> <b>variable</b> flow <b>restrictor</b> showed <b>an</b> increase in flow of 1300 % as the temperature was raised from 4 - 40 deg. C. The effect water has on recovery was also studied by sampling under dry conditions (RH= 10 %) and more normal conditions (RH= 50 %). Finally...|$|R
40|$|This project {{addresses}} {{the need for}} new solutions to correct problems in existing EWB water systems, specifically, the need to control flow rates and water pressures at selected points within a water supply system. The proposed solution is to design and implement <b>a</b> <b>variable</b> flow pressure <b>restrictor</b> (VFPR) that can be installed into the existing water systems. Traditional pressure regulators are cost prohibitive for this application, so the main point of the research is to find a simpler, less expensive alternative that still maintains functionality and reliability. The study covers the selection of suitable hardware for the purpose, design of the new VFPR, method of testing, and results of testing the selected type of restrictor. Through testing it was determined that the simple orifice restriction hardware, with interchangeable orifice sizes, would be suitable for the application. A table of orifice sizes with pressure and flow characteristics related to each was created as a guide for student engineers to use while installing this hardware in the field...|$|R
40|$|The focus {{particle}} even introduces an implicature (or a presupposition) that is {{not available}} with a corresponding sentence without even; (1 a) implies that Book A {{is unlikely to be}} read (the unlikely reading), although such an implication does not arise with John read Book A. 1 It has been argued that this is due to a scalar presupposition of even (henceforth, ScalarP) (Karttunen and Peters 1979) : assuming that even is a sentential operator, as in (1 b), even presupposes that the relevant proposition p is the least likely proposition among the alternatives in C (<b>a</b> silent <b>restrictor</b> <b>variable),</b> as in (1 c). 2, 3 The alternatives obtain by replacing the focused element with elements of the same type. For example, in (1 b), C denotes a set of propositions obtained by replacing Book A with elements of the same type...|$|R
40|$|Future {{generation}} {{gas turbine}} combustors for power production {{are expected to}} have the capability of operating on high hydrogen content fuels. To ensure the implementation of high hydrogen content (HHC) fuel in a power generation unit without negotiating with operational or emission advantages, the study of the flame stability regime and behavior of (HHC) fuel under gas turbine condition leads to the necessity of the development of an optically accessible high-pressure combustor. This dissertation first presents the design of an optically high-pressure combustor facility based on 500 kW power and 1. 5 MPa pressure which is the representative pressure of a real gas turbine. The combustion chamber is designed to accommodate multiple geometrical configurations including a non-swirl stabilized and center-body stabilized swirl flow. The combustor is made of stainless steel 410. It has four primary modular parts: outer stainless steel chamber, inner quartz chamber, front cap and end cap. It has three optically accessible windows and three instrumentation ports for a broad range of investigation techniques. Finite element analysis has performed to get the wall thickness. The test chamber is also fitted with <b>a</b> <b>variable</b> area flow <b>restrictor</b> to control the desired pressure across the combustion chamber. Cooling system is also included in the design to extract heat and avoid structural failure. The outer stainless steel chamber will be equipped with copper coiling using cooling water as a driving fluid and inner quartz chamber will be convectively cooled using nitrogen. The use of <b>a</b> <b>variable</b> throat area <b>restrictor,</b> multiple cooling systems, as well as removable modular sections and optical access will allow the combustor to be compatible to work {{in a wide range of}} operations and have the flexibility operating with variable syngas compositions. This will allow analysis of the flame stability, flow field characterization, pollutant emissions in high hydrogen content fuel under realistic gas turbine conditions. ^ The ignition and control systems of this high pressure combustor have also been developed in the present work. LabVIEW was used as the controlling interface that controls the proportional valves, and solenoiod valves. A modified spark plug was used as an ignition source. In order to ignite the main fuel-air stream, a diffusion flame was used. Functional test of the equipment, leak test and pressure testing were carried out prior to conducting the ignition experiments. The system has the capability to withstand the maximum pressure allowed by the air compressor which is 758 kPa. ^ The high-pressure combustion chamber design allows for testing in realistic gas turbine conditions. Fuels that show promise as an energy source are high-hydrogen content fuels derived from coal which have a much higher specific heat, higher diffusivity, flammability limits and higher laminar flame speed compared to other hydrocarbons. These properties induce flame flashback especially when the hydrogen content in the fuels is high. A multi-tube injector has been designed to mitigate the flashback of high hydrogen content fuel. ^ The present work studies the blowout characteristics of syngas mixtures emitted from a novel multi-tube injector. Compositions are varied for syngas from 10...|$|R
5000|$|<b>A</b> <b>variable</b> {{declaration}} defines either <b>a</b> <b>variable</b> or <b>a</b> one-dimensional array: ...|$|R
50|$|In the C {{programming}} language, <b>an</b> external <b>variable</b> is <b>a</b> <b>variable</b> defined outside any function block. On {{the other}} hand, <b>a</b> local (automatic) <b>variable</b> is <b>a</b> <b>variable</b> defined inside <b>a</b> function block.|$|R
50|$|In {{computer}} programming, <b>a</b> temporary <b>variable</b> is <b>a</b> <b>variable</b> {{with short}} lifetime, usually to hold data {{that will soon}} be discarded, or {{before it can be}} placed at a more permanent memory location. Because it is short-lived, it is usually declared as <b>a</b> local <b>variable,</b> i.e., <b>a</b> <b>variable</b> with local scope. There is no formal definition of what makes <b>a</b> <b>variable</b> temporary, but it is an often-used term in programming.|$|R
50|$|Therefore, in a formula, <b>a</b> {{dependent}} <b>variable</b> is <b>a</b> <b>variable</b> that is implicitly {{a function}} of another (or several other) variables. An independent <b>variable</b> is <b>a</b> <b>variable</b> that is not dependent.|$|R
5000|$|In any nonparametric regression, the {{conditional}} expectation of <b>a</b> <b>variable</b> [...] relative to <b>a</b> <b>variable</b> [...] may be written: ...|$|R
5000|$|The {{domain of}} <b>a</b> <b>variable</b> {{may be reduced}} during execution. Indeed, as the {{interpreter}} adds constraints to the constraint store, it performs constraint propagation to enforce a form of local consistency, and these operations may reduce the domain of variables. If the domain of <b>a</b> <b>variable</b> becomes empty, the constraint store is inconsistent, and the algorithm backtracks. If the domain of <b>a</b> <b>variable</b> becomes <b>a</b> singleton, the <b>variable</b> can be assigned the unique value in its domain. The forms of consistency typically enforced are arc consistency, hyper-arc consistency, and bound consistency. The current domain of <b>a</b> <b>variable</b> can be inspected using specific literals; for example, [...] finds out the current domain [...] of <b>a</b> <b>variable</b> [...]|$|R
5000|$|An {{expression}} {{is a constant}} (integer), <b>a</b> <b>variable,</b> <b>an</b> indexed <b>variable,</b> or <b>an</b> application of a binary operation: ...|$|R
50|$|<b>A</b> <b>variable</b> {{definition}} is <b>a</b> line that specifies a text string value for <b>a</b> <b>variable</b> {{that can be}} substituted into the text later.|$|R
5000|$|An {{assignment}} assigns <b>a</b> <b>variable</b> to <b>an</b> expression. An {{expression is}} either <b>a</b> constant, <b>a</b> <b>variable,</b> or {{application of a}} built-in n-ary operator: ...|$|R
50|$|The 4N13 1.8-liter engine uses <b>a</b> <b>Variable</b> Geometry (VG) {{turbocharger}} with <b>a</b> <b>variable</b> vane turbine, {{which provides}} optimal boost pressure control for different driving conditions. The 4N14 2.3-liter engine also uses a VG turbocharger plus <b>a</b> <b>Variable</b> Diffuser (VD) that uses both variable geometry vanes in the turbine housing and <b>a</b> compressor with <b>variable</b> vanes in the diffuser passage, further improving combustion efficiency.|$|R
5000|$|Assign <b>a</b> <b>variable</b> {{for each}} node whose voltage is unknown. If the voltage is already known, {{it is not}} {{necessary}} to assign <b>a</b> <b>variable.</b>|$|R
50|$|Single handle mixer valves produce <b>a</b> <b>variable</b> {{mixture of}} {{hot and cold}} water at <b>a</b> <b>variable</b> flow rate under control of a single handle.|$|R
5000|$|Information flow in an {{information}} theoretical context is {{the transfer of}} information from <b>a</b> <b>variable</b> [...] to <b>a</b> <b>variable</b> [...] in <b>a</b> given [...]|$|R
5000|$|A {{statement}} might assign {{an expression}} to <b>a</b> <b>variable</b> {{or use the}} value of <b>a</b> <b>variable</b> to alter the program's control flow - for example: ...|$|R
5000|$|<b>A</b> <b>variable</b> taking real values: see Function of <b>a</b> real <b>variable</b> ...|$|R
5000|$|To {{understand}} how external variables {{relate to the}} [...] keyword, {{it is necessary to}} know the difference between defining and declaring <b>a</b> <b>variable.</b> When <b>a</b> <b>variable</b> is defined, the compiler allocates memory for that variable and possibly also initializes its contents to some value. When <b>a</b> <b>variable</b> is declared, the compiler requires that the variable be defined elsewhere. The declaration informs the compiler that <b>a</b> <b>variable</b> by that name and type exists, but the compiler does not need to allocate memory for it since it is allocated elsewhere.The [...] keyword means [...] "declare without defining". In other words, it is a way to explicitly declare <b>a</b> <b>variable,</b> or to force a declaration without a definition. It is also possible to explicitly define <b>a</b> <b>variable,</b> i.e. to force a definition. It is done by assigning an initialization value to <b>a</b> <b>variable.</b> If neither the [...] keyword nor an initialization value are present, the statement can be either a declaration or a definition. It is up to the compiler to analyse the modules of the program and decide.|$|R
50|$|For <b>a</b> <b>variable,</b> such as v, its {{declaration}} {{is identified}} as V (italic capital letter), and for short, its declaration {{is identified as}} s(0). In general, a declaration of <b>a</b> <b>variable</b> can be in an outer scope (e.g., <b>a</b> global <b>variable).</b>|$|R
5000|$|<b>A</b> {{manifest}} <b>variable</b> {{reference is}} itself defined as <b>a</b> <b>variable</b> reference with ...|$|R
5000|$|... #Caption: <b>A</b> <b>variable</b> density soundtrack (left)and <b>a</b> bi-lateral <b>variable</b> area soundtrack (right) ...|$|R
5000|$|In {{object-oriented}} programming with classes, <b>an</b> instance <b>variable</b> is <b>a</b> <b>variable</b> defined in <b>a</b> class (i.e. <b>a</b> member <b>variable</b> [...] ), for which each instantiated {{object of the}} class has a separate copy, or instance. An instance variable is similar to <b>a</b> class <b>variable.</b>|$|R
50|$|Consider <b>a</b> <b>variable</b> <b>A</b> and <b>a</b> boolean <b>variable</b> S. <b>A</b> is only {{accessed}} when S {{is marked}} true. Thus, S is a semaphore for A.|$|R
50|$|In {{computer}} programming <b>a</b> singleton <b>variable</b> is <b>a</b> <b>variable</b> that {{is referred to}} only once.|$|R
5000|$|Indeterminate (<b>variable),</b> <b>a</b> {{symbol that}} {{is treated as}} <b>a</b> <b>variable</b> ...|$|R
5000|$|Most of the time, {{knowing the}} use of <b>a</b> <b>variable</b> implies knowing its type. Furthermore, if the usage of <b>a</b> <b>variable</b> is not known, it cannot be deduced from its type.|$|R
3000|$|<b>A</b> random <b>variable</b> {{that can}} assume only a finite or countably {{infinite}} number of values is known as <b>a</b> discrete random <b>variable,</b> while <b>a</b> <b>variable</b> which can assume each and every value within some interval is called <b>a</b> continuous random <b>variable.</b> The distribution function of <b>a</b> random <b>variable</b> X, denoted by [...]...|$|R
50|$|Each {{component}} contains <b>a</b> {{number of}} <b>variables,</b> {{which must be}} declared by placing <b>a</b> <b>variable</b> element inside the component. For example, a component representing a cell membrane may have <b>a</b> <b>variable</b> called V representing the potential difference (voltage) across the cell membrane.|$|R
50|$|In epidemiology, a {{risk factor}} is <b>a</b> <b>variable</b> {{associated}} with <b>an</b> increased risk of disease or infection. Sometimes, determinant is also used, being <b>a</b> <b>variable</b> associated with either increased or decreased risk.|$|R
5000|$|Where {{the term}} [...] "object variable" [...] is used above, this means <b>a</b> <b>variable</b> which is <b>an</b> element {{of an object}} (i.e. an attribute), as opposed to <b>a</b> local <b>variable</b> (exists only within a {{function}} or block) or <b>a</b> global <b>variable</b> (nonexistent in LPC [...] - [...] if someone speaks of <b>a</b> global <b>variable</b> in reference to LPC, they probably mean <b>an</b> object <b>variable).</b>|$|R
40|$|The article {{stresses}} that though some signals (empirical functions) with <b>a</b> <b>variable</b> period {{occur in the}} applied research, there is neither theory nor methods of research of such signals at present. Due to this the article is solving {{one of the main}} tasks {{on the way to the}} signals theory with <b>a</b> <b>variable</b> period development, namely a model of such signals as a function with <b>a</b> <b>variable</b> period is substantiated and some characteristics of period are considered. The analytical examples of such functions, i. e. trigonometrical functions with <b>a</b> <b>variable</b> period are given, and the formulae of their periods are derived. The received results is an important step to the development of the structural function theory with <b>a</b> <b>variable</b> period, namely the development of Fourier series theory of such functions...|$|R
5000|$|In most {{register}} allocators, {{each variable}} {{is assigned to}} either a CPU register or to main memory. The advantage of using a register is speed. Computers have {{a limited number of}} registers, so not all variables can be assigned to registers. A [...] "spilled variable" [...] is <b>a</b> <b>variable</b> in main memory rather than in a CPU register. The operation of moving <b>a</b> <b>variable</b> from <b>a</b> register to memory is called spilling, while the reverse operation of moving <b>a</b> <b>variable</b> from memory to a register is called filling. For example, <b>a</b> 32-bit <b>variable</b> spilled to memory gets 32 bits of stack space allocated and all references to the variable are then to that memory. Such <b>a</b> <b>variable</b> has <b>a</b> much slower processing speed than <b>a</b> <b>variable</b> in <b>a</b> register. When deciding which variables to spill, multiple factors are considered: execution time, code space, data space.|$|R
