7|61|Public
5000|$|Extended <b>Arithmetic</b> <b>Element</b> - Enables the {{performance}} of complex arithmetic at high speeds ...|$|E
5000|$|... system family 820 (1968-1979): The <b>arithmetic</b> <b>element</b> {{was based}} on the {{semiconductor}} base but later silicon transistors were used. It had a ball-head typwriter. The NCAG invented a personal design, so the users could choose between different computers.|$|E
50|$|Rochester {{received}} his B.S. degree {{in electrical engineering}} from the Massachusetts Institute of Technology in 1941. He stayed on at MIT, working in the Radiation Laboratory {{for three years and}} then moved to Sylvania Electric Products where he was responsible for the design and construction of radar sets and other military equipment. His group built the <b>arithmetic</b> <b>element</b> for the Whirlwind I computer at MIT.|$|E
40|$|This paper {{shows how}} to design {{efficient}} <b>arithmetic</b> <b>elements</b> out of quantum gates using "carry-save" techniques borrowed from classical computer design. This allows bit-parallel evaluation {{of all the}} <b>arithmetic</b> <b>elements</b> required for Shor's algorithm, including modular arithmetic, deferring all carry propagation {{until the end of}} the entire computation. This reduces the quantum gate delay from O(N^ 3) to O(N log N) at a cost of increasing the number of qubits required from O(N) to O(N^ 2). Comment: 12 pages, embedded figures. Corrected typos, added clarifications, improved resul...|$|R
40|$|Abstract: This paper {{shows how}} to design {{efficient}} <b>arithmetic</b> <b>elements</b> out of quantum gates using “carry-save ” techniques borrowed from classical computer design. This allows bit-parallel evaluation {{of all the}} <b>arithmetic</b> <b>elements</b> required for Shor’s algorithm, including modular arithmetic, deferring all carry propagation {{until the end of}} the entire computation. Of the recent advances in quantum algorithms, one of the most impressive to date is Shor’s algorithm for discrete logs and factorization [1], which gives an exponential speedup over classical algorithms. Vedral, Barenco and Ekert [2] have shown how to implement the necessary modular exponentiation operations in quantum gates with a numbe...|$|R
5000|$|The {{next few}} years would see the {{completing}} of APT's influential <b>Arithmetic</b> <b>Elements</b> and then the broad collaboration pioneered in the APT project was repeated in building the computer-aided design system AED (Formally called Automated Engineering Design but which Ross would sometimes call The Art of Engineering Design or [...] "ALGOL Extended for Design").|$|R
50|$|The central {{processor}} {{used in the}} CDC 6400 series contained a unified <b>arithmetic</b> <b>element</b> which performed one machine instruction at a time. Depending on instruction type, an instruction could take anywhere from a relatively fast five clock cycles (18-bit integer arithmetic) {{to as many as}} 68 clock cycles (60-bit population count). The CDC 6500 was identical to the 6400, but included two identical 6400 CPUs. Thus the CDC 6500 could nearly double the computational throughput of the machine.|$|E
5000|$|After his masters, Singer {{joined the}} Armed Forces, {{working for the}} United States Navy on mine warfare and {{countermeasures}} from 1944 until 1946. While with the Naval Ordnance Laboratory he developed an <b>arithmetic</b> <b>element</b> for an electronic digital calculator that he called an [...] "electronic brain". He was discharged in 1946 and joined the Upper Atmosphere Rocket Program at the Johns Hopkins University Applied Physics Laboratory in Silver Spring, Maryland, working there until 1950. He focused on ozone, cosmic rays, and the ionosphere, all measured using balloons and rockets launched from White Sands, New Mexico, or from ships out at sea. Rachel White Scheuering writes that for one mission to launch a rocket, he sailed with a naval operation to the Arctic, and also conducted rocket launching from ships at the equator.|$|E
40|$|New {{elliptic}} curve cryptographic processor architecture is presented {{that result in}} considerable reduction in power consumption as well as giving a range of trade-off between speed and power consumption. This is achieved by exploiting the inherent parallelism that exist in {{elliptic curve}} point addition and doubling. Further trade-off is achieved by using digit serial-parallel multipliers instead of the serial-serial multipliers used in conventional architectures. In effect, the new architecture exploits parallelism at the algorithm level {{as well as at}} the <b>arithmetic</b> <b>element</b> level. This parallelism can be exploited either to increase the speed of operation or to reduce power consumption by reducing the frequency of operation and hence the supply voltage...|$|E
40|$|Data paths are {{collections}} of <b>arithmetic</b> <b>elements,</b> buses, registers and multiplexers that usually account for roughly 80 {{percent of the}} area of a complex chip. Unfortunately, gate-level synthesis does not work well for these elements. Data-path synthesis solves this problem by keeping the design at a conceptually higher level than gate-level synthesis, thus allowing much larger designs...|$|R
40|$|Modern {{analysis}} of the finite word-length properties of DSP algorithms is typically carried out using CAD tools. The objectives of this paper are threefold: (i) to show that affine arithmetic is specially well-suited for quantization {{analysis of}} digital filters; (ii) to present a new tool based on multiple-precision affine <b>arithmetic</b> <b>elements</b> that allows fast charac-terization of the signal ranges in linear systems; and (iii) to develop an exhaustive-search algorithm that detects limit cycles and requires less computation time than existing approaches. Final comparative results confirm {{the validity of the}} limit cycles detection algorithm on second-order shift and delta-operator realizations. 1...|$|R
40|$|This paper {{documents}} the research towards {{the analysis of}} different solutions to implement a Neural Network architecture on a FPGA design by using floating point accelerators. In particular, two different implementations are investigated: a high level solution to create a neural network on a soft processor design, with different strategies for enhancing {{the performance of the}} process; a low level solution, achieved by a cascade of floating point <b>arithmetic</b> <b>elements.</b> Comparisons of the achieved performance in terms of both time consumptions and FPGA resources employed for the architectures are presented. © 2014 Advances in electrical and electronic engineering...|$|R
40|$|The RAMOS {{operating}} system {{is capable of}} handling up to 72 simultaneous tasks in an interrupt-driven environment. The minimum viable hardware configuration includes a Digital Equipment Corporation PDP- 15 computer with 16384 words of memory, extended <b>arithmetic</b> <b>element,</b> automatic priority interrupt, a 256 K-word RS 09 DECdisk, two DECtape transports, and an alphanumeric keyboard/ typer. The monitor executes major tasks by loading disk-resident modules to memory for execution; modules are written in a format that allows page-relocation by the monitor, and can be loaded into any available page. All requests for monitor service by tasks, including input/output, floating point arithmetic, request for additional memory, task initiation, etc., are implemented by privileged monitor calls (CAL). All IO device handlers are capable of queuing requests for service, allowing several tasks ''simultaneous'' use of all resources. All alphanumeric IO (including the PC 05) is completely buffered and handled by a single multiplexing routine. The floating point arithmetic software is re-entrant to all operating modules and includes matrix arithmetic functions. One of the system tasks can be a ''batch'' job, controlled by simulating an alphanumeric command terminal through cooperative functions of the disk handler and alphanumeric device software. An alphanumeric control sequence may be executed, automatically accessing disk-resident tasks in any prescribed order; a library of control sequences is maintained on bulk storage for access by the monitor. (auth...|$|E
40|$|We {{introduce}} implementations of arithmetic operators {{based on}} the binary stored-carry-or-borrow (BSCB) representation. Several BSCB <b>arithmetic</b> <b>elements,</b> including full-adder, ripple-carry adder, and carry-lookahead adder are presented, followed by detailed design of an array multiplier. In the latter design, the conventional initial AND matrix is transformed and expressed with a redundant radix- 2 representation. Each line of the resulting matrix is processed by an accumulation operator with the BSCB representation. Due to a specific property of the multiplication process, this operator is simpler than a standard full-adder cell in terms of gate count, while maintaining the same propagation latency. The entire multiplier is implemented with only XOR and AND gates, thus improving its testability and reliability. 1...|$|R
40|$|The recent {{development}} in analog computation is reviewed in this paper. Analog computation {{was used in}} many applications where power and energy efficiency is of paramount importance. It is shown that by using innovative architecture and circuit design, analog computation systems can achieve much higher energy efficiency than their digital counterparts, as {{they are able to}} exploit the computational power inherent to the devices and physics. However, these systems do suffer from some disadvantages, such as lower accuracy and speed, and designers have come up with novel approaches to overcome them. The paper provides an overview of analog computation systems, from basic components such as memory and <b>arithmetic</b> <b>elements,</b> to architecture and system design...|$|R
40|$|A full digital self-timed clock {{generation}} {{scheme is}} developed, where multiple internal clocks are self-generated for each external request. The internal clock period {{is designed to}} be the critical path delay of the internal system at all operating environments. This scheme can be applied to time-multiplexed implementations, self-timed operation, and low-power applications. I. INTRODUCTION Advanced process technologies currently available allow very high internal operating clock frequencies for pipelined <b>arithmetic</b> <b>elements.</b> However, it is difficult to improve the I/O speed unless special I/O circuit technologies, such as ECL (Emitter Coupled Logic) are employed, thus it is hard to take the speed advantages of the pipelined circuits fully. Instead, it is more feasible {{to reduce the number of}} arithmetic units by operating them in time-domain multiplexed mode or employing the bit-serial architecture[1]. A previous approach for generating the internal fast clock is to use a PLL (Phase [...] ...|$|R
25|$|The {{following}} complexity figures {{assume that}} <b>arithmetic</b> with individual <b>elements</b> has complexity O(1), {{as is the}} case with fixed-precision floating-point arithmetic or operations on a finite field.|$|R
40|$|Let K be {{a number}} field. We will let GK denote its {{absolute}} Galois group; and for each finite prime ℘ of K we will let G ℘ ⊂ GK denote a decomposition group for ℘, I ℘ ⊳ G ℘ the inertia subgroup and Frob ℘ ∈ G℘/I ℘ the <b>arithmetic</b> Frobenius <b>element.</b> These are all uniquely defined up to conjugation in GK...|$|R
30|$|In scheme 1, the PC is {{comprised}} of four cancelling-pulse generators, and therefore, four RAMs are used to store the cancelling pulse and accordingly four CORDIC cores are needed. One can see that with a single iteration, the hardware resource of scheme 1 is roughly doubled. It is obvious {{that all of the}} three schemes consume {{only a small portion of}} the resources such as flip flops (FFs) and slice LUTs. The conventional scheme 2 costs more multipliers. This is because it requires implementing the FIR filter to generate the cancelling pulses of equivalent length. For circuit integration, the multipliers are most concerned as they generally cost more power and take up larger area than other simple <b>arithmetic</b> <b>elements.</b> In this sense, the proposed PC is rather cost effective as it consumes fewer multipliers. Although the conventional scheme 1 without iteration requires even fewer multipliers, the peak-missing problem will make it unworkable as will be demonstrated in the subsequent subsections. In view of this, the proposed PC yields the lowest complexity.|$|R
40|$|Image {{interpolation}} is {{a method}} of estimating the values at unknown points using the known data points. This procedure is used in expanding and contrasting digital images. In this survey, different types of interpolation algorithm and their hardware architecture have been analyzed and compared. They are bilinear, winscale, bi-cubic, linear convolution, extended linear, piecewise linear, adaptive bilinear, first order polynomial, and edge enhanced interpolation architectures. The algorithms are implemented for different types of {{field programmable gate array}} (FPGA) and/or by different types of complementary metal oxide semiconductor (CMOS) technologies like TSMC 0. 18 and TSMC 0. 13. These interpolation algorithms are compared based on different types of optimization such as gate count, frequency, power, and memory buffer. The goal of this work is to analyze the different very large scale integration (VLSI) parameters like area, speed, and power of various implementations for image interpolation. From the survey followed by analysis, it is observed that the performance of hardware architecture of image interpolation can be improved by minimising number of line buffer memory and removing superfluous <b>arithmetic</b> <b>elements</b> on generating weighting coefficient...|$|R
40|$|Special purpose {{processing}} systems designed for specific applications can provide extremely high performance at moderate cost. One such processor is presented for executing graphics and image processing algorithms {{as the basis}} of a digital film printer. Pixels in the system contain four parallel components: RGB for full color and an alpha channel for retaining transparency information. The data path of the processor contains four <b>arithmetic</b> <b>elements</b> connected through a crossbar network to a tessellated scratchpad memory. The single instruction, multiple data stream (SIMD) processor executes instructions on four pixel components in parallel. The instruction control unit (ICU) maintains an activity stack for tracking block-structured code, using data-dependent activity flags for conditional disabling subsets of the AI~s. Nested loops and if-then-else constructs can be programmed directly, with the ICU disabling and reenabling ALUs {{on the basis of their}} individual status bits. CR Categories and Subject Descriptors: B. 2. 1 [Arithmetic and logic structures]: design styles [...] parallel; B. 3. 2 [memory structures]: design styles [...] interleaved memories; C. 1. 2 [processor architectures]: Multiple data stream architectures [...] SIMD...|$|R
50|$|The fixed keyword {{prevents}} the garbage collector from relocating this variable. The {{access to an}} array is like in C++, i.e. using pointer <b>arithmetic,</b> where individual <b>elements</b> of the array can be accessed over its indexes.|$|R
40|$|The {{pairwise}} orthogonal transform (POT) is {{an attractive}} alternative to the Kahrunen–Loève transform for spectral decorrelation in on-board multispectral and hyperspectral image compression due to its reduced complexity. This work validates that the low complexity of the POT makes it feasible for a space-qualified field-programmable gate array (FPGA) implementation. A register transfer level description of the <b>arithmetic</b> <b>elements</b> of the POT is provided {{with the aim of}} achieving a low occupancy of resources and making it possible to synthesize the design on a space-qualified RTAX 2000 S and RTAX 2000 S-DSP. In order to accomplish these goals, the operations of the POT are fine-tuned such that their implementation footprint is minimized while providing equivalent coding performance. The most computationally demanding operations are solved by means of a lookup table. An additional contribution of this paper is a bit-exact description of the mathematical equations {{that are part of the}} transform, defined in such a way that they can be solved with integer arithmetic and implementations that can be easily cross-validated. Experimental results are presented, showing that it is feasible to implement the components of the POT on the mentioned FPGA...|$|R
50|$|Since {{the opening}} session 1948-49, the college was {{affiliated}} to the University of Calcutta in English, Bengali, Sanskrit, History, Logic, Civics, Commercial Geography, Commercial <b>Arithmetic,</b> <b>Elements</b> of Book Keeping to I.A. standard and organizers were motivated to introduce I.Sc. course {{from the very}} next session. From {{the very beginning of}} the Commerce department was run in the evening in the interest of the otherwise employed students. But with the increasing tendency of the girl students to study commerce, the department was shifted from the evening to the morning. In view of the ever-increasing need and demand of the locality, Calcutta University offered affiliation in Honours Course in Bengali, English, Chemistry, History, Political Science, Mathematics, Economics and Accountancy at degree level in quick succession. But since 1985, the affiliation of the colleges of undivided Midnapore district was changed from C.U. to V.U. by the Govt. policy and affiliation in Honours course was obtained from V.U. in Physics, Zoology, Botany, Physiology, Philosophy and Sanskrit. Recently, self-financed courses in Geography, Education, Physical Education, Computer science have been introduced. The college is now more or less equipped with a good no. of faculty members, technical staff and ministerial staff. The college is governed by a well-coordinated Governing Body. Very recently the college has been accredited by NAAC with 'A' Grage (CGPA = 3.12, highest in the district).|$|R
40|$|Abstract. We {{describe}} {{two methods}} for computing with {{the elements of}} un-twisted groups of Lie type: using the Steinberg presentation and highest weight representations. We give algorithms for <b>element</b> <b>arithmetic</b> within the Stein-berg presentation. Conversion between this presentation and linear represen-tations is achieved using a new generalisation of row and column reduction. 1...|$|R
40|$|Abstract We {{propose the}} {{application}} of light field cameras and depth-selective 4 -D IIR filtering to enable video surveil-lance, leveraging the post-capture depth-selective filtering enabled by computational photography. Novel ultralow-complexity differential-form depth-selective 4 -D IIR filter algorithms and their corresponding architectures are pro-posed for processing 4 -D light fields. Practical results are presented for real-world video sequences, and a CMOS VLSI implementation of the <b>arithmetic</b> processing <b>elements</b> is syn-thesized. The architecture shows 86. 66, 78. 94 % reduction in multipliers and adders compared to direct-form structure and delivers 26 frames/s for light fields of size 16 × 16 × 128 × 128...|$|R
40|$|In {{this paper}} we {{describe}} a bit-serial pipelined implementation of an inner product processor, and related interconnections {{of a number}} of such processors on a single chip. We argue that bit-serial computational models are particularly suited for VLSI, because of relatively inexpensive communication links and <b>arithmetic</b> processing <b>elements,</b> in terms of the area occupied on silicon. Sixteen inner product processors, described here, may be easily placed on a single 40 -pin chip in today's NMOS technology with a 2 micron lambda. Similar arguments for bitserial arithmetic were used in [3]. in a description of a design of a general purpose massively parallel processor...|$|R
2500|$|To {{see that}} the square root need not be unique up to sign in a general ring, {{consider}} the ring [...] from modular <b>arithmetic.</b> Here, the <b>element</b> 1 has four distinct square roots, namely ±1 and ±3. On the other hand, the element 2 has no square root. See also the article quadratic residue for details.|$|R
40|$|Consider a {{coloring}} of { 1, 2, [...] .,n} in 3 colors, where n ≡ 0 (mod 3). If all {{the color}} classes {{have the same}} cardinality, {{then there is a}} 3 -term <b>arithmetic</b> progression whose <b>elements</b> are colored in distinct colors. This rainbow variant of van der Waerden’s theorem proves the conjecture of the second author. 1...|$|R
40|$|Consider natural numbers f 1;; ng colored {{in three}} colors. We prove that if each color appears {{on at least}} (n + 4) = 6 numbers {{then there is a}} three-term <b>arithmetic</b> {{progression}} whose <b>elements</b> are colored in distinct colors. This variation on the theme of Van der Waerden's theorem proves the conjecture of Jungic et al...|$|R
5000|$|In a ring we call {{an element}} b a square root of a iff b2 = a.To {{see that the}} square root need not be unique up to sign in a general ring, {{consider}} the ring [...] from modular <b>arithmetic.</b> Here, the <b>element</b> 1 has four distinct square roots, namely ±1 and ±3. On the other hand, the element 2 has no square root. See also the article quadratic residue for details.|$|R
5000|$|TLA+ {{is based}} on ZFC, so {{operations}} on variables involve set manipulation. The language includes set membership, union, intersection, difference, powerset, and subset operators. First-order logic operators such as , , , , , [...] are also included, as well as universal and existential quantifiers [...] and [...] Hilbert's [...] is provided as the CHOOSE operator, which uniquely selects an arbitrary set <b>element.</b> <b>Arithmetic</b> operators over reals, integers, and natural numbers {{are available from the}} standard modules.|$|R
5000|$|In 1958 Curt Schmieden and Detlef Laugwitz {{published}} an Article [...] "Eine Erweiterung der Infinitesimalrechnung" [...] - [...] "An Extension of Infinitesimal Calculus", which proposed a {{construction of a}} ring containing infinitesimals. The ring was constructed from sequences of real numbers. Two sequences were considered equivalent if they differed only in {{a finite number of}} <b>elements.</b> <b>Arithmetic</b> operations were defined elementwise. However, the ring constructed in this way contains zero divisors and thus cannot be a field.|$|R
5000|$|The enneagram {{figure is}} usually {{composed}} of three parts; a circle, an inner triangle (connecting 3-6-9) and an irregular hexagonal [...] "periodic figure" [...] (connecting 1-4-2-8-5-7). According to esoteric spiritual traditions, the circle symbolizes unity, the inner triangle symbolizes the [...] "law of three" [...] and the hexagon represents the [...] "law of seven" [...] (because 1-4-2-8-5-7-1 is the repeating decimal created by dividing one by seven in base 10 <b>arithmetic).</b> These three <b>elements</b> constitute the usual enneagram figure.|$|R
5000|$|Samuel Lewis in his 1831 A Topographical Dictionary of England {{describes}} the students as [...] "single men, eighteen {{years of age}} and upwards, producing testimonials of their piety, and being able to translate Virgil, having also some acquaintance with the Greek grammar, fractional <b>arithmetic,</b> and the <b>elements</b> of geography" [...] and the curriculum as [...] "Latin, Greek, Hebrew, Chaldee, and Syriac languages, the belles lettres, intellectual and moral philosophy, the mathematics, history, biblical criticism, the composition of sermons, theology, Hebrew antiquities, &c." ...|$|R
40|$|On Frobenius conjugacy {{class of}} some {{algebraic}} varieties over number fields On Frobenius conjugacy class of some algebraic varieties over number fields Abhijit Laskar 1 Let X be smooth projective algebraic variety {{over a number}} field F and F̄ an algebraic closure of F. The action of Gal(F ̄ /F) on the `-adic etale coho-mology groups H iet(X/F ̄,Q`), induces Galois representations ρi ` : Gal(F ̄ /F) → GL(H iet(X/F ̄,Q`)). Fix a non-archimedean valuation v on F and let Φv be an <b>arithmetic</b> Frobenius <b>element</b> at v. In this article we answer, for many algebraic varieties, classical semisimplicty and `-independence questions related to ρi`(Φv) and its conjugacy class in certain natural subgroups of GL(H iet(X/F ̄,Q`)). We deal with both the good reduction and bad reduction case. We also treat the case where ` {{is equal to the}} residual characteristic at v, by studying crystalline realization of motives...|$|R
