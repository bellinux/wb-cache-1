23|3280|Public
5000|$|Each person's {{own private}} and public keys must be mathematically related where the private key is used to decrypt a {{communication}} sent using a public key and vice versa. Some well-known <b>asymmetric</b> <b>encryption</b> <b>algorithms</b> {{are based on the}} RSA cryptosystem.|$|E
50|$|Conventional {{symmetric}} encryption algorithms use complex patterns of substitution and transpositions. For {{the best of}} these currently in use, it is not known whether there can be a cryptanalytic procedure which can reverse (or, usefully, partially reverse) these transformations without knowing the key used during encryption. <b>Asymmetric</b> <b>encryption</b> <b>algorithms</b> depend on mathematical problems that are thought to be difficult to solve, such as integer factorization and discrete logarithms. However, there is no proof that these problems are hard, and a mathematical breakthrough could make existing systems vulnerable to attack.|$|E
50|$|Due to the {{computationally}} complex {{nature of}} RSA-based <b>asymmetric</b> <b>encryption</b> <b>algorithms,</b> the time taken to encrypt large documents or files to be transmitted can be relatively long. To {{speed up the}} process of transmission, instead of applying the sender's digital signature to the large documents or files, the sender can rather hash the documents or files using a cryptographic hash function and then digitally sign the generated hash value, therefore enforcing non-repudiation. Hashing is a much faster computation to complete as opposed to using an RSA-based digital signature algorithm alone. The sender would then sign the newly generated hash value and encrypt the original documents or files with the receiver's public key. The transmission would then take place securely and with confidentiality and non-repudiation still intact. The receiver would then verify the signature and decrypt the encrypted documents or files with their private key.|$|E
5000|$|The Cramer-Shoup {{cryptosystem}} <b>asymmetric</b> <b>encryption</b> <b>algorithm</b> {{bears his}} name.|$|R
40|$|Abstract. Software {{protection}} {{is an important}} research area in computer field. Combined with the traditional <b>asymmetric</b> <b>encryption</b> <b>algorithm</b> which provides the measures of protection, computer fingerprint was employed to identify the protection object. This novel software protection method is called AEA-CF, which means <b>asymmetric</b> <b>encryption</b> <b>algorithm</b> based on computer fingerprint. The computers used AEA-CF should be running on Internet so that the authentication information {{could be provided by}} server. The experiments show that this method could protect software effectively...|$|R
3000|$|Operable (OP): {{the field}} content f is {{encrypted}} through a homomorphic or “somewhat” homomorphic <b>asymmetric</b> <b>encryption</b> <b>algorithm</b> {{by using a}} function encryptOP(key [...]...|$|R
30|$|Solving a {{computationally}} intractable problem: <b>Asymmetric</b> <b>encryption</b> <b>algorithms</b> which homomorphic properties rely on {{the difficulty}} in solving a problem in polynomial time. For example, unpadded RSA and ElGamal provide multiplicative homomorphic properties. RSA {{is based on the}} difficulty in factoring an integer [11] and ElGamal is based on the difficulty in computing a discrete logarithm in polynomial time [21]. Paillier is another asymmetric encryption algorithm based on the difficulty in factoring an integer, but its homomorphic property is additive [17].|$|E
40|$|Fault-based side channel {{cryptanalysis}} is {{very effective}} against symmetric and <b>asymmetric</b> <b>encryption</b> <b>algorithms.</b> Although straightforward hardware and time redundancy based Concurrent Error Detection (CED) architectures {{can be used}} to thwart such attacks, they entail significant overhead (either area or performance). In this paper we investigate systematic approaches to low-cost, low-latency CED for Rijndael symmetric encryption algorithm. These approaches exploit the inverse relationship that exists between Rijndael encryption and decryption at various levels and develop CED architectures that explore the trade-off between area overhead, performance penalty and error detection latency. The proposed techniques have been validated on FPGA implementations. 1...|$|E
30|$|Applications of {{asymmetric}} encryption in Blockchain systems mainly include information encryption and digital signature. In information encryption, the sender node uses the receiver node’s public key to encrypt the information, and broadcasts {{the information to}} the network; only nodes which hold the receiver’s private key can decrypt the information. In digital signature, the sender encrypts a message using its private key, and broadcasts the message to the network. The receiver decrypts the message with the sender’s public key, to verify that the message is sent by the sender. Many <b>asymmetric</b> <b>encryption</b> <b>algorithms</b> [6] are available, such as SHA 256, RIMPED 160, RSA, Elgamal, Rabin, D-H, and ECC.|$|E
40|$|Abstract—Software {{protection}} {{is an important}} research area in computer field. Combined with the traditional <b>asymmetric</b> <b>encryption</b> <b>algorithm</b> which provides the measures of protection, computer fingerprint was employed to identify the protection object. This novel software protection method is called AEA-CF, which means <b>asymmetric</b> <b>encryption</b> <b>algorithm</b> based on computer fingerprint. The computers used AEA-CF should be running on Internet so that the authentication information {{could be provided by}} server. The experiments show that this method could protect software effectively. Keywords- software protection; computer fingerprint; RSA I...|$|R
50|$|Certificate-Less Authenticated Encryption (CLAE) adds {{authentication}} to ID-based encryption. It is an <b>asymmetric</b> <b>encryption</b> <b>algorithm</b> {{that can}} exchange secrets between any two entities {{without the need}} to (centrally) administer keys.|$|R
40|$|Radio Frequency Identification (RFID) {{systems have}} become popular mostly for {{automated}} identification and supply chain applications. To implement counterfeit security, RFID- and Public Key (PK) technology are combined. RFID tags authenticate themselves by {{responding to a}} challenge of a reader/writer device. For this an <b>asymmetric</b> <b>encryption</b> <b>algorithm</b> (RSA) is implemented and executed on the tag. Thereby {{a high level of}} counterfeit security is reached. Using a private/public key pair makes this method very flexible for validation by the distributor or the customer. The <b>asymmetric</b> <b>encryption</b> <b>algorithm</b> is running on a low cost tag providing security even for products with a low value. For high level security, drugs are used as example products...|$|R
40|$|Abstract: Fault-based side channel {{cryptanalysis}} is {{very effective}} against symmetric and <b>asymmetric</b> <b>encryption</b> <b>algorithms.</b> Although straightforward hardware and time redundancy based concurrent error detection (CED) architectures {{can be used}} to thwart such attacks, they entail significant overhead (either area or performance). In this paper we investigate systematic approaches to low-cost, low-latency CED for symmetric encryption algorithms based on the inverse relationship that exists between encryption and decryption at algorithm level, round level and operation level and develop CED architectures that explore the trade-off between area overhead, performance penalty and error detection latency. The proposed techniques have been validated on FPGA implementations of AES finalist 128 -bit symmetric encryption algorithms. 1...|$|E
40|$|Abstract—Fault-based side-channel {{cryptanalysis}} is {{very effective}} against symmetric and <b>asymmetric</b> <b>encryption</b> <b>algorithms.</b> Although straightforward hardware and time redundancy-based concurrent error detection (CED) architectures {{can be used}} to thwart such attacks, they entail significant overheads (either area or performance). The authors investigate systematic approaches to low-cost low-latency CED techniques for symmetric encryption algorithms based on inverse relationships that exist between encryption and decryption at algorithm level, round level, and operation level and develop CED architectures that explore tradeoffs among area overhead, performance penalty, and fault detection latency. The proposed techniques have been validated on FPGA implementations of Advanced Encryption Standard (AES) finalist 128 -bit symmetric encryption algorithms. Index Terms—AES, CED, cryptanalysis, cryptography, fault based, RC 6, Rijndael, Serpent, side channel, symmetric encryption, Twofish...|$|E
40|$|Abstract: — In this paper, we have {{proposed}} a cryptosystem using {{state of the art}} technology. We used the minimum possible compressed speech file for encryption. Additionally we applied data compression to speech files and added further compression. Then we applied data encryption techniques to minimize security threats. We applied the symmetric and <b>asymmetric</b> <b>encryption</b> <b>algorithms</b> to the compressed speech files. This was followed by hiding these files into cover images using steganography. This camouflages the secret data and reduces chances of eavesdropping. By using compression, the capacity has been increased. However, after applying encryption, the size of the encrypted data becomes much greater than the input file size, therefore hiding it in a cover demands more capacity. We have analyzed the size of the cipher texts of the compressed speech data for further enhancement of the capacity...|$|E
30|$|One of {{the main}} {{advantages}} of HITs is their close bonds with asymmetric cryptography. In fact, HIT generation consists of obtaining a straightforward 128 -bit hash of a Host Identifier (HI), which consists of a public key generated through an <b>asymmetric</b> <b>encryption</b> <b>algorithm.</b> In particular, HIP authors propose using the SIGn-and-MAc (SIGMA) algorithm [25].|$|R
5000|$|In cryptography, the McEliece {{cryptosystem}} is an <b>asymmetric</b> <b>encryption</b> <b>algorithm</b> {{developed in}} 1978 by Robert McEliece. It {{was the first}} such scheme to use randomization in the <b>encryption</b> process. The <b>algorithm</b> has never gained much acceptance in the cryptographic community, but {{is a candidate for}} [...] "post-quantum cryptography", as it is immune to attacks using Shor's algorithm and — more generally — measuring coset states using Fourier sampling.|$|R
40|$|Abstract: Information {{security}} {{becomes much}} important in data storage and transmission. The term information security {{refers to the}} processes and methodologies which are designed and implemented to protect data from unauthorized access, use, misuse, disclosure, modification or disruption. <b>Encryption</b> <b>algorithm</b> play important roles in information security. This paper provides case study of five encryption algorithms: DES, 3 DES, Blowfish, CAST, RSA and also provides encryption and decryption data by using the RSA <b>asymmetric</b> <b>encryption</b> <b>algorithm.</b> Simulation has been conducted using C language. Experimental results are given to analyses the implementation of RSA algorithm...|$|R
40|$|The {{symmetric}} and <b>asymmetric</b> <b>encryption</b> <b>algorithms</b> {{are commonly}} used in grid software to provide necessary security. The use of symmetric encryption algorithm will significantly affect the network communication performance. In this paper, the impact of using different popular and commonly used symmetric key cryptography algorithms for encrypting data in a typical grid commuting environment is analyzed. It {{is obvious that the}} use of encryption and decryption at application layer will certainly have an impact in the application layer performance in terms of speed. In this work, we have studied its impact at network layer performance in a typical grid computing environment in the algorithms such as DES, Triple DES, AES, Blow Fish, RC 2 and RC 6. The performances are measured through simulation studies on ns 2 by simulating these algorithms in GARUDA Grid Network Topology...|$|E
40|$|Abstract − The paper {{presents}} the proposal {{of a new}} mathematical tool for LabVIEW environment – the Large Number Library. After the short introduction describing the security issue in the Distributed Measurement-Control Systems (DMCS), the most popular <b>asymmetric</b> <b>encryption</b> <b>algorithms</b> (public-key encryption algorithms) are described in order to demonstrate the need for developing such a library. The LN library was implemented in two variants: the native LabVIEW code (G language) and using external software modules (DLLs). The algorithms implemented in both alternatives have been developed basing on the Number Theory Library (NTL) – Victor Shoup’s open source library. The results of accuracy and efficiency tests for several functions implemented in both variants are shown. The developed LN library will allow {{for the creation of}} the advanced cryptographic libraries dedicated to the LabVIEW environment, enabling the development of secure communication channels in DMCS and information security of DMCS networks...|$|E
40|$|Existing <b>asymmetric</b> <b>encryption</b> <b>algorithms</b> {{require the}} storage of the secret private key. Stored keys are often {{protected}} by poorly selected user passwords that can either be guessed or obtained through brute force attacks. This is a weak link in the overall encryption system and can potentially compromise the integrity of sensitive data. Combining biometrics with cryptography {{is seen as a}} possible solution but any biometric cryptosystem must be able to overcome small variations present between different acquisitions of the same biometric in order to produce consistent keys. This paper discusses a new method which uses an entropy based feature extraction process coupled with Reed-Solomon error correcting codes that can generate deterministic bit-sequences from the output of an iterative one-way transform. The technique is evaluated using 3 D face data and is shown to reliably produce keys of suitable length for 128 -bit Advanced Encryption Standard (AES) ...|$|E
40|$|Abstract. Security of {{messaging}} middleware {{is the key}} issue to ensure the integrity of news transmission. By analyzing the defects on safety of current JMS-based {{messaging middleware}} communication model, elaborating several safety problems of messaging middleware from authentication, authorization, encapsulation and audit, this paper proposes a messaging middleware security model based on data encryption and digital signature technology, it encrypt messages with symmetric and <b>asymmetric</b> <b>encryption</b> <b>algorithm</b> and audit some safety-related events, then the security of message transmission has improved...|$|R
40|$|Abstract — In this study, {{has shown}} how to design <b>asymmetric</b> <b>encryption</b> <b>algorithm</b> based on using two {{pseudorandom}} number generators and {{the features of}} crossover and mutation operations of Genetic algorithm (GA). the roles of pseudorandom number generators, in the proposed algorithm, help to generate dynamic representation for each character and define where to apply the crossover and mutation operations in deterministic way to produce the ciphertext; The proposed <b>encryption</b> <b>algorithm</b> solves the problem of exchange and distribution of private keys over the networks by using crossover operator; The various examples {{and implementation of the}} algorithm proves that it exchanges the keys and encrypts successfully all the characters, and serves the goals of cryptography...|$|R
40|$|Abstract—This paper {{focuses on}} {{studying}} cloud storage data protection model and implementing encrypted storage of user data in double-key form. User data are encrypted with symmetric <b>encryption</b> <b>algorithm</b> and this secret key is encrypted with <b>asymmetric</b> <b>encryption</b> <b>algorithm.</b> The private key is managed {{and controlled by}} users. In this way, users guarantee the security of their own data with the sole private key. Providing effective protection for uploading and downloading of user data and good data storage and transmission support for cloud storage application through the data protection mechanism deployed at client, thus solving the biggest obstacle, i. e. security of cloud data {{in the application of}} cloud storage enterprises currently to a certain extent...|$|R
40|$|In grid design authentication, {{authorization}} and {{confidentiality of}} the communication between computers are important security requirements. Without the functionality, the integrity and confidentiality of the data processed, the grid would be at risk. There are many different tools and technologies, which are available to ensure secured grid environment. The symmetric and <b>asymmetric</b> <b>encryption</b> <b>algorithms</b> are commonly used algorithms in grid software to provide necessary security, even though symmetric encryption algorithm significantly will affect the network communication performance. The previous work relied {{on the use of}} encryption and decryption at the application layer has an impact on the application layer performance and in the network layer performance. In the proposed work, instead of using a single encryption algorithm different encryption algorithms were selected arbitrarily during processing of each packet. The performance has been measured through simulation studies on NS 2 by simulating these algorithms on GARUDA Gri...|$|E
40|$|This {{bachelor}} thesis {{focuses on}} the RSA algorithm and it's use in electronic communication. The RSA algorithm is curently {{one of the most}} widely used <b>asymmetric</b> <b>encryption</b> <b>algorithms.</b> It was first publicly described in 1977 by the mathematicians Ron Rivest, Adi Shamir, and Leonard Adleman. It's the first algorithm that is suitable for both electronic signature and public key encryption. The theoretical part explains all related concepts of cryptography. The basic operating principle of the algorithm is described in specific simplified example. It also includes a description of public key encryption and a list of institutions, which use digital signature to verify authenticity of the sender. The practical part focuses on a questionnaire survey, which investigates the awareness level of internet banking users in term of security of using internet banking and following the security policy recommended by banks. The results are analysed and evaluated at the end of the thesis...|$|E
40|$|Abstract. Deliberate {{injection}} of faults into cryptographic devices {{is an effective}} cryptanalysis technique against symmetric and <b>asymmetric</b> <b>encryption</b> <b>algorithms.</b> To protect cryptographic implementations (e. g. of the recent AES which will be our running example) against these attacks, a number of innovative countermeasures have been proposed, usually based {{on the use of}} space and time redundancies (e. g. error de-tection/correction techniques, repeated computations). In this paper, we take the next natural step in engineering studies where alternative meth-ods exist, namely, we take a comparative perspective. For this purpose, we use unified security and efficiency metrics to evaluate various recent protections against fault attacks. The comparative study reveals secu-rity weaknesses in some of the countermeasures (e. g. intentional mali-cious fault injection that are unrealistically modelled). The study also demonstrates that, if fair performance evaluations are performed, many countermeasures are not better than the naive solutions, namely dupli-cation or repetition. We finally discuss the security/efficiency tradeoffs provided by different countermeasures. ...|$|E
40|$|There {{are several}} {{symmetric}} and <b>asymmetric</b> data <b>encryption</b> <b>algorithms.</b> IDEA (International Data <b>Encryption</b> <b>Algorithm)</b> {{is one of}} the strongest secret-key block ciphers. In this article, I try to represent the existing IDEA algorithm in a different way. In the following illustration, we would see how the encryption can be expressed in a simpler way...|$|R
40|$|This article proposes an efficient, less {{communication}} rounds, three-party encrypted key exchange {{protocol to}} achieve the authentication requirement. The protocol is provided with (1) no <b>asymmetric</b> <b>encryption</b> <b>algorithm</b> which is adopted to reduce the costs (such as any public-key infrastructure); (2) using pre-shared key to prevent adversaries that masquerade as legal users after guessing attacks; (3) avoiding the variant man-in-the-middle attacks on Diffie-Hellman based protocols; (4) achieving mutual authentication. With these four features, the proposed protocol is suitable for being applied for establishing secure channels between two clients, which are supported with the same trusted server. Keywords: Three-party encrypted key exchange, secure channels, guessing attacks. 1...|$|R
50|$|The Blum-Goldwasser (BG) {{cryptosystem}} is an <b>asymmetric</b> key <b>encryption</b> <b>algorithm</b> {{proposed by}} Manuel Blum and Shafi Goldwasser in 1984. Blum-Goldwasser is a probabilistic, semantically secure cryptosystem with a constant-size ciphertext expansion. The <b>encryption</b> <b>algorithm</b> implements an XOR-based stream cipher using the Blum Blum Shub (BBS) pseudo-random number generator {{to generate the}} keystream. Decryption is accomplished by manipulating the final state of the BBS generator using the private key, {{in order to find}} the initial seed and reconstruct the keystream.|$|R
40|$|Blind {{signatures}} make anonymity {{a reality}} in digital cash systems. However, when deployed in digital cash systems such as eCash, blind signatures raise such drawbacks as bad scalability and unfair anonymity. In this thesis, efforts have been done to combine digital signatures and a mechanism called "money-exchange" found in NetCash {{to build a new}} digital cash system. In the new system, two forms of digital cash are introduced: digital notes and digital coins. "Money-exchange" is extended to permit cash exchange from one form to the other. At the side of the digital cash issuer, at least two databases are maintained to detect double-spending. The new digital cash system is secure due to its deployment of both symmetric and <b>asymmetric</b> <b>encryption</b> <b>algorithms.</b> The combination of blind signatures and the extended money-exchange mechanism offers unconditional and fair anonymity, and it makes the system more scalable with the regards to the number of clients served...|$|E
40|$|Deliberate {{injection}} of faults into cryptographic devices {{is an effective}} cryptanalysis technique against symmetric and <b>asymmetric</b> <b>encryption</b> <b>algorithms.</b> To protect cryptographic implementations (e. g. of the recent AES which will be our running example) against these attacks, a number of innovative countermeasures have been proposed, usually based {{on the use of}} space and time redundancies (e. g. error detection/correction techniques, repeated computations). In this paper, we take the next natural step in engineering studies where alternative methods exist, namely, we take a comparative perspective. For this purpose, we use unified security and efficiency metrics to evaluate various recent protections against fault attacks. The comparative study reveals security weaknesses in some of the countermeasures (e. g. intentional malicious fault injection that are unrealistically modelled). The study also demonstrates that, if fair performance evaluations are performed, many countermeasures are not better than the naive solutions, namely duplication or repetition. We finally suggest certain design improvements for some countermeasures, and further discuss security/efficiency tradeoffs...|$|E
40|$|Encryption is {{the process}} of {{transforming}} plaintext into the ciphertext where plaintext is the input to the encryption process and ciphertext is the output of the encryption process. Decryption isthe process of transforming ciphertext into the plaintext where ciphertext is the input to the decryption process and plaintext is the output of the decryption process. There are various encryption algorithms exist classified as symmetric and <b>asymmetric</b> <b>encryption</b> <b>algorithms.</b> Here, I present an algorithm for data encryption and decryption which is based on ASCII values of characters in the plaintext. This algorithm is used to encrypt data by using ASCII values of the data to be encrypted. The secret used will be modifying o another string and that string is used as a key to encrypt or decrypt the data. So, {{it can be said that}} it is a kind of symmetric encryption algorithm because it uses same key for encryption anddecryption but by slightly modifying it. This algorithm operates when the length of input and the length of key are same...|$|E
40|$|Cryptography is a {{solution}} or method of securing the data precisely to preserve confidentiality and authenticity of data. It is also able to enhance the security aspects of a data or information. The aim of the method is the confidential information which is sent via a network, can not be known or used by someone else. Cryptographic provides two aspects of information security, first is {{the protection of the}} confidential data/information, counterfeiting and undesired alteration of information. RSA <b>algorithm</b> is an <b>asymmetric</b> <b>encryption</b> <b>algorithm,</b> in other word this algorithm uses the same key for both encryption and decryption process. Transposition cipher algorithm encrypts the plain text by removing small pieces of the message around. By using a combination of the RSA algorithm and Transposition Cipher algorithm, {{it will be able to}} improve the security of the data file storage in a database...|$|R
50|$|The keys {{distributed}} by the key server are almost always provided {{as part of a}} cryptographically protected identity certificate containing not only the key but also 'entity' information about the owner of the key. The certificate is usually in a standard format, such as the OpenPGP public key format, the X.509 certificate format, or the PKCS format. Further, the key is almost always a public key for use with an <b>asymmetric</b> key <b>encryption</b> <b>algorithm.</b>|$|R
50|$|Shortly {{after joining}} GCHQ in September 1973, after {{studying}} Mathematics at Cambridge University, Clifford Cocks was told of Ellis' proof {{and that no}} one had been able {{to figure out a way}} to implement it. He went home, thought about it, and returned with the basic idea for what has become known as the RSA <b>asymmetric</b> key <b>encryption</b> <b>algorithm.</b> Because any new and potentially beneficial/harmful technique developed by GCHQ is by definition classified information, the discovery was kept secret.|$|R
