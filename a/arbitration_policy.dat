21|49|Public
50|$|From 1994-2002, Judge Block {{served as}} Senior Counsel to the Senate Judiciary Committee, {{where he worked}} {{on a number of}} {{significant}} issues including property rights legislation, punitive damages and class action court reform bills, the cost-benefit analysis regulatory reform act, tobacco policy, litigation and <b>arbitration</b> <b>policy,</b> and First Amendment, privacy and attendant constitutional issues arising out of high technology legislation and governmental programs.|$|E
50|$|Every master {{monitors}} the bus for {{start and stop}} bits and does not start a message while another master is keeping the bus busy. However, two masters may start transmission {{at about the same}} time; in this case, arbitration occurs. Slave transmit mode can also be arbitrated, when a master addresses multiple slaves, but this is less common. In contrast to protocols (such as Ethernet) that use random back-off delays before issuing a retry, I²C has a deterministic <b>arbitration</b> <b>policy.</b> Each transmitter checks the level of the data line (SDA) and compares it with the levels it expects; if they do not match, that transmitter has lost arbitration and drops out of this protocol interaction.|$|E
50|$|The First Circuit {{affirmed the}} {{decision}} of the lower court. The court had no jurisdiction to review an interlocutory order granting the employee's motion to strike the affirmative defense under the Federal Arbitration Act, 9 U.S.C.S. §§ 1-16. The court affirmed the denial of the employer's motion to stay and to compel arbitration. Enforcement of the <b>arbitration</b> <b>policy</b> was not appropriate because the e-mail did not provide minimally sufficient notice to a reasonably prudent employee of the contractual nature of the e-mailed policy and the concomitant waiver of the employee's right to access a judicial forum. The court held that the mass e-mail, which did not require an affirmative response but requested the recipient to review the materials, was not a traditional means for conveying contractually binding terms of employment and did not state directly that the policy contained a mandatory arbitration agreement that would become the employee's exclusive remedy for all claims.|$|E
40|$|In {{this article}} we {{implement}} a stochastic modeling technique for simulating the communication between processors and arbitration among buses for an embedded SoC. The stochastic models implemented with queues {{have been used to}} estimate, through simulation of different <b>arbitration</b> <b>policies,</b> the power consumption and delays, as well as estimate average or worst case scenarios that could occur with different architectures and <b>arbitration</b> <b>policies.</b> This idea could then be extended to writing probabalistic test benches to analyze the performance of different architectures as well as device and test <b>arbitration</b> <b>policies</b> which would attempt to optimize the power consumption and buffer lengths with constraints on the average delay...|$|R
40|$|Abstract. Transactional memory systems trade ease of {{programming}} with runtime performance losses in handling transactions. This paper focuses on starvation effects that {{show up in}} systems where unordered transactions are committed on a demand-driven basis. Such simple commit <b>arbitration</b> <b>policies</b> are prone to starvation. The design issues for commit <b>arbitration</b> <b>policies</b> are analyzed and novel policies that {{reduce the amount of}} wasted computation due to roll-back and, most importantly, that avoid starvation are proposed. We analyze in detail how to incorporate them in a TCC-like transactional memory protocol. The proposed schemes have no impact on the common-case performance and add quite modest complexity to the baseline protocol...|$|R
40|$|Transactional memory systems trade ease of {{programming}} with run-time performance losses in handling transactions. This paper focuses on starvation effects that {{show up in}} systems where unordered transactions are committed on a demand-driven basis. Such simple commit <b>arbitration</b> <b>policies</b> are prone to starvation. The design issues for commit <b>arbitration</b> <b>policies</b> are analyzed and novel policies that {{reduce the amount of}} wasted computation due to roll-back and, most important, that avoid starvation are proposed. We analyze in detail how to incorporate them in the transactional coherence and consistency protocol as well as a scalable version of it. The proposed schemes are shown to have no impact on the common-case performance and add quite modest complexity to the baseline protocol. Copyright (C) 2008 John Wiley & Sons, Ltd...|$|R
40|$|This study {{examines}} state <b>arbitration</b> <b>policy</b> in Georgia from its establishment as a colony until the present time. It describes early informal and nonjudicialized procedures {{such as the}} Muhlenberg arbitration in Ebenezer in 1774; initiatives of the Georgia Legislature for the arbitral resolution of disputes; the application of arbitral devices in Georgia’s tax and municipal corporation law; arbitration in Georgia’s chambers of commerce and boards of trade, and forms of public law arbitration still existing in Georgia. The survey then shifts its attention to formal and judicialized arbitration in Georgia, focusing on the rise of uncodified common law arbitration {{in the nineteenth century}} and the adoption of formal Arbitration Codes in 1856, 1978; and 1988. The study concludes with reflections on modern challenges to the viability of state <b>arbitration</b> <b>policy</b> in Georgia, especially the risk of total federal preemption of Georgia <b>arbitration</b> <b>policy</b> initiatives...|$|E
40|$|The {{enforceability}} {{of mandatory}} arbitration policies contained in employment contracts between employees and their direct employers {{remains an open}} question, even after the Supreme Court 2 ̆ 7 s 1991 decision in Gilmer v. Interstate Johnson Lane Corp. While Gilmer gave effect to a mandatory arbitration clause in a contract between a securities broker and his licensing exchange, the Court noted that the contract at issue was not an ordinary employment contract between employer and employee. The Court declined to decide whether arbitration agreements in ordinary employment contracts are per se enforceable under the Federal Arbitration Act or whether these provisions are exempt from the Act and therefore subject to closer judicial scrutiny. Sharona Hoffman argues that arbitration provisions in ordinary employment contracts are {{beyond the scope of}} the Federal Arbitration Act, a conclusion consistent with the approach of the majority of courts of appeal which have considered this issue. To demonstrate the continuing development of the law governing the enforcement of mandatory arbitration policies, the author details a recent case in which the Equal Employment Opportunity Commission challenged and successfully enjoined enforcement of a mandatory <b>arbitration</b> <b>policy.</b> The <b>arbitration</b> <b>policy</b> was vulnerable to attack because its provisions so clearly favored the employer and because pre-existing employees were forced to choose between keeping their jobs or prospectively agreeing to arbitrate nearly all disputes {{under the terms of the}} employer 2 ̆ 7 s <b>arbitration</b> <b>policy.</b> Hoffman concludes that while voluntary alternative dispute resolution schemes are enforceable, mandatory arbitration policies unilaterally imposed by employers upon employees may be voidable under both statutory law and the common law of contracts...|$|E
40|$|In packet switches, packets queue at switch {{inputs and}} contend for outputs. The {{contention}} <b>arbitration</b> <b>policy</b> directly affects switch performance. The best policy {{depends on the}} current state of the switch and current traffic patterns. This problem is hard because the state space, possible transitions, and set of actions all grow exponentially with the size of the switch. We present a reinforcement learning formulation of the problem that decomposes the value function into many small independent value functions and enables an efficient action selection. ...|$|E
5000|$|... #Subtitle level 4: Business {{influence}} on <b>arbitration</b> administrators' <b>policies</b> ...|$|R
40|$|Abstract — Design and {{analysis}} of communication subsystem is a crucial issue for System-on-Chip design, where uncertainty in communication by very deep sub micron effects cannot be neglected. This paper presents a bus architecture (BA) synthesis algorithm for designing the communication sub-system of an SoC. The methodology combines both BA space exploration as well as generation analysis of <b>arbitration</b> <b>policies</b> to guarantee a feasible solution at transaction level where optimized policy is assigned. BA synthesis includes finding the bus topology, and routing the individual buses so that various constraints, like bus length, topology complexity, potential for communication conflicts over time, are addressed. Heuristic <b>arbitration</b> <b>policies</b> as well as Markov Decision Process(MDP) based policies have been simulated over a queueing model of the architecture and compared with respect to performance metrics like queue length,time spent in buffer and power consumption. The paper presents BA synthesis results for a network processor. I...|$|R
40|$|Outstanding paper awardInternational audienceIn this paper, we {{introduce}} a Multicore Response Time Analysis (MRTA) framework. This framework is extensible to different multicore architectures, with various types and arrangements of local memory, and different <b>arbitration</b> <b>policies</b> {{for the common}} interconnects. We instantiate the framework for single level local data and instruction memories (cache or scratchpads), {{for a variety of}} memory bus <b>arbitration</b> <b>policies,</b> including: Round-Robin, FIFO, Fixed-Priority, Processor-Priority, and TDMA, and account for DRAM refreshes. The MRTA framework provides a general approach to timing verification for multicore systems that is parametric in the hardware configuration and so can be used at the architectural design stage to compare the guaranteed levels of performance that can be obtained with different hardware configurations. The MRTA framework decouples response time analysis from a reliance on context independent WCET values. Instead, the analysis formulates response times directly from the demands on different hardware resources...|$|R
40|$|American exceptionalism” {{has been}} used to {{reference}} the United States’ outlier policies in various contexts, including its love for litigation. Despite Americans’ reverence for their “day in court,” their zest for contractual freedom and efficiency has prevailed to result in U. S. courts’ strict enforcement of arbitration provisions in both business-to-business (“B 2 B”) and business-to-consumer (“B 2 C”) contracts. This is exceptional because although most of the world joins the United States in generally enforcing B 2 B arbitration under the New York Convention, many other countries refuse or strictly limit arbitration enforcement in B 2 C relationships due to concerns regarding power imbalances and public enforcement of consumer protections. The resulting clash in <b>arbitration</b> <b>policy</b> has left consumers in cross-border cases uncertain whether they must abide by arbitration clauses in an increasingly global marketplace...|$|E
40|$|The switch {{design for}} {{interconnection}} networks {{plays an important}} role in the overall performance of multiprocessors and computer networks. It is therefore crucial to study various factors in the switch design space and their influence on the system performance. In this paper we first propose a 4 -D framework for the design of input queuing switches with wormhole routing and virtual channels. Then we explore the design space to examine in detail the impact of four parameters: virtual channel allocation, intraswitch connectivity, buffer space allocation and link <b>arbitration</b> <b>policy.</b> Our simulations, performed with an execution driven simulator with ILP processors, show that the cumulative effect of the four switch enhancements ranges between 7 % and 38 %. The most important parameter proves to be VC allocation method (up to 28 % improvements in execution time). The other three bring about the same level of performance: between 1 % and 7 % depending on the application. 1 Introduction CC-NUMA m [...] ...|$|E
30|$|Software {{functions}} to read/write to the FSL channels are provided within Xilinx’s SDK environment and 32 -bit words of {{data can be}} accessed within single cycle speeds. Thus the processor running at 125 MHz can consume data from the FSL links at a bandwidth of 500 MB/s. From there, the data {{rate at which the}} data-cache-bursts write to the MPMC will be the first bandwidth funnel. The upper bound on throughput from the MicroBlaze to the MPMC is affected by several factors. From the source (MicroBlaze) side, data may not always be injected at the upper limit of 500 MB/s {{due to the fact that}} some MicroBlaze overhead cycles will be used to gather the data from multiple FSL channels. On the sink (MPMC) side, write throughput will depend on any other concurrent reads or writes occurring to the same physical DRAM (via the SATA controller) and how effectively the <b>arbitration</b> <b>policy</b> of the MPMC is executed. These complexities prohibit derivations of any practical analytical methods to infer reasonable throughput levels between the MicroBlaze and the MPMC.|$|E
40|$|Abstract Switch {{design for}} {{interconnection}} networks plays an im-portant {{role in the}} overall performance of multiprocessors and computer networks. In this paper we study the impactof one parameter in the switch design space, link arbitration. We demonstrate that link arbitration can be a de-termining factor {{in the performance of}} current networks. Moreover, we expect increased research focus on arbitra-tion techniques to become a trend in the future, as switch architectures evolve towards increasing the number of vir-tual channels and input ports. In the context of a state-of-the-art switch design we useboth synthetic workload and execution driven simulations to compare several <b>arbitration</b> <b>policies.</b> Furthermore, wedevise a new arbitration method, Look-Ahead arbitration. Under heavy traffic conditions the Look-Ahead policy pro-vides important improvements over traditional arbitration schemes without a significant increase in hardware com-plexity. Also, we propose a priority based policy that is capable of reducing the execution time of parallel appli-cations. Lastly, we enhance the <b>arbitration</b> <b>policies</b> by a supplemental mechanism, virtual channel reservation, in-tended to alleviate the hot-spot problem. 1...|$|R
40|$|Abstract—Various {{instruction}} and transaction based power estimation techniques for processor and on-chip buses {{have been proposed}} in the past. In this paper, we propose a heterogeneous power model to estimate the power utilized by complete processor based reconfigurable System-on-Chip (SoC) platform. The proposed model estimates the power consumed by the SoC platform using instruction-based model as well as transaction-based model. In addition we estimate the power consumed by various bus <b>arbitration</b> <b>policies</b> used in the on-chip communication. I...|$|R
40|$|In this paper, we {{introduce}} a multicore response time analysis (MRTA) framework, which decouples response time analysis from {{a reliance on}} context independent WCET values. Instead, the analysis formulates response times directly from the demands placed on different hardware resources. The MRTA framework is extensible to different multicore architectures, {{with a variety of}} <b>arbitration</b> <b>policies</b> for the common interconnects, and different types and arrangements of local memory. We instantiate the framework for single level local data and instruction memories (cache or scratchpads), for a variety of memory bus <b>arbitration</b> <b>policies,</b> including: Round-Robin, FIFO, Fixed-Priority, Processor-Priority, and TDMA, and account for DRAM refreshes. The MRTA framework provides a general approach to timing verification for multicore systems that is parametric in the hardware configuration and so can be used at the architectural design stage to compare the guaranteed levels of real-time performance that can be obtained with different hardware configurations. We use the framework in this way to evaluate the performance of multicore systems with a variety of different architectural components and policies. These results are then used to compose a predictable architecture, which is compared against a reference architecture designed for good average-case behaviour. This comparison shows that the predictable architecture has substantially better guaranteed real-time performance, with the precision of the analysis verified using cycle-accurate simulation...|$|R
40|$|International audiencePredictability is an {{important}} aspect in real-time and safety-critical systems, where non-functional properties – such as the timing behavior – have high impact on the system cor-rectness. As many safety-critical systems have a growing performance demand, simple, but outdated architectures are not sufficient anymore. Instead, multi-core systems {{are more and more}} popular, even in the real-time domain. To combine the performance benefits of a multi-core architecture with the required predictability, Time Division Multiple Access (TDMA) buses are often advocated. In this paper, we are interested in accesses to shared resources in such environments. Our approach uses SMT (Satisfiability Modulo Theory) to encode the semantics and execution time of the analyzed program in an environment with shared resources. We use an SMT-solver to find a solution that corresponds to the execution path with correct semantics and maximal execution time. We propose to model a shared bus with TDMA <b>arbitration</b> <b>policy.</b> Using examples, we show how the WCET estimation is enhanced by combining the semantics and the shared bus analysis in SMT...|$|E
40|$|International audienceIn {{this paper}} we {{introduce}} a response time analysis technique for Synchronous Data Flow programs mapped to multipleparallel dependent tasks {{running on a}} compute cluster of the Kalray MPPA- 256 many-core processor. The analysis we derivecomputes a set of response times and release dates that respect the constraints in the task dependency graph. We extend the Multicore Response Time Analysis (MRTA) framework by deriving a mathematicalmodel of the multi-level bus <b>arbitration</b> <b>policy</b> used by the MPPA. Further, we refine the analysis to account for therelease dates and response times of co-runners, {{and the use of}} memory banks. Further improvements to the precision ofthe analysis were achieved by splitting each task into two sequential phases, with the majority of the memory accessesin the first phase, and a small number of writes in the second phase. Our experimental evaluation focused on anavionics case study. Using measurements from the Kalray MPPA- 256 as a basis, we show that the new analysis leads toresponse times that are a factor of 4. 15 smaller for this application, than the default approach of assumingworst-case interference on each memory access...|$|E
40|$|The Federal Arbitration Act (2 ̆ 2 FAA 2 ̆ 2) of 1925 {{was created}} to ensure {{enforceability}} of agreements to arbitrate. The FAA {{is the centerpiece of}} the federal <b>arbitration</b> <b>policy</b> as construed by the Supreme Court. Section 10 (a) FAA enumerates grounds on which an arbitral award can be set aside. The central issue discussed herein is whether parties can agree by contract to allow one of the parties to initiate review of the arbitral award by a court that would otherwise have jurisdiction over those parties, or whether the court 2 ̆ 7 s powers are somehow limited to the grounds for vacatur enumerated in Section 10 (a) FAA. Put more succinctly, this article analyzes the legitimacy of judicial review of an arbitral award {{on the basis of a}} pre-dispute agreement providing that the arbitrator 2 ̆ 7 s findings of fact and/or conclusions of law (as set forth in such award) may be subjected to judicial review, and how such judicial review interacts with § 10 (a) of the Federal Arbitration Act. The principal focus of this article is on domestic and international commercial arbitration, although I briefly address certain implications for consumer arbitration...|$|E
40|$|Abstract. An {{increasing}} computational {{demand is}} placed on the image processing capacity of current and future smart cameras. SIMD processor architectures provide an efficient solution because their repetitive structure matches the data-parallel execution pattern inherent in pixel-type processing. But the lack of support for communicating pixel data over variable distances has forced designers to allocate dedicated hardware or FPGAs for compensating lens distortion and other non-linear operations. We propose a hardware extension to SIMD processors that enables dynamic communication. Using detailed area cost models and a high-level simulator we optimize the extension with regard to the number of busses, bus <b>arbitration</b> <b>policies,</b> and local instruction buffer sizes. ...|$|R
40|$|A {{scalable}} architecture {{to design}} high radix switch fabric is presented. It uses circuit techniques to re-use existing {{input and output}} data buses and switching logic for fabric configuration and supporting multiple <b>arbitration</b> <b>policies.</b> In addition, it integrates a 4 -level message-based priority arbitration for quality of service. Fine grain clock gating, tiled fabric topology and self-regenerating bit-line repeaters enable scaling the router to 8 k wires. A 64 × 64 (128 b data) switch fabric fabricated in 45 nm SOI CMOS spans 4. 06 mm 2 and achieves a throughput of 4. 5 Tb/s at 3. 4 Tb/s/W at 1. 1 V with a peak measured efficiency of 7. 4 Tb/s/W at 0. 6 V...|$|R
40|$|Abstract—On-chip {{interconnection}} networks {{simplify the}} inte-gration of complex system-on-chips. The switches {{are the basic}} building blocks of such networks and their design critically affects {{the performance of the}} whole system. The transfer of data between the inputs and the outputs of the switch is performed by the crossbar, whose active connections are decided by the arbiter. In this paper, we design scalable dynamic-priority arbiters that are merged with the crossbar’s multiplexers. The proposed RTL macros can adjust to various priority selection policies, while still following the same unified architecture. With this approach, sophisticated <b>arbitration</b> <b>policies</b> that yield significant network-throughput benefits can be implemented with negligible delay cost relative to the standard round-robin policy. I...|$|R
40|$|Embedded {{systems are}} {{increasingly}} based on multi-core platforms {{to accommodate a}} growing number of applications, some of which have real-time requirements. Resources, such as off-chip DRAM, are typically shared between the applications using memory interconnects with different arbitration polices to cater to diverse bandwidth and latency requirements. However, traditional centralized interconnects are not scalable as the number of clients increase. Similarly, current distributed interconnects either cannot satisfy the diverse requirements or have decoupled arbitration stages, resulting in larger area, power and worst-case latency. The four main contributions of this article are: 1) a Globally Arbitrated Memory Tree (GAMT) with a distributed architecture that scales well with the number of cores, 2) an RTL-level implementation that can be configured with five arbitration policies (three distinct and two as special cases), 3) the concept of mixed arbitration policies that allows the policy to be selected individually per core, and 4) a worst-case analysis for a mixed <b>arbitration</b> <b>policy</b> that combines TDM and FBSP arbitration. We compare the performance of GAMT with centralized implementations and show that it can run up to four times faster and have over 51 % and 37 % reduction in area and power consumption, respectively, for a given bandwidth. info:eu-repo/semantics/publishedVersio...|$|E
40|$|Simultaneous multithreading, where {{instructions}} from different threads share processor resources, has shown promise in delivering high throughput with little area and power overhead. We compare {{where in the}} performance energy-efficiency space alternative simple simultaneous multithreading configurations lie, leveraging standard industry tools to estimate area and power from high level hardware descriptions. We find sharing function units among threads can improve energy efficiency over duplicating the function unit set for each thread. A good choice {{for the number of}} threads sharing a function unit ensures the function unit is not overloaded. Sharing front-end pipeline logic does not improve performance or energy efficiency over either duplicating the full pipeline or just duplicating the front-end pipelines for each thread. Different arbitration policies for use of function units do not impact performance much, but they do have a large impact on the power of the core, so the simplest <b>arbitration</b> <b>policy</b> should be used to maximize energy efficiency. Operand bypassing, an obvious optimization for a pipeline which does not share function units, is not obviously better when function units are shared, improving performance at the cost of reduced energy efficiency. by Richard Stephen Uhler. Thesis (S. M.) [...] Massachusetts Institute of Technology, Dept. of Electrical Engineering and Computer Science, 2010. Includes bibliographical references (p. 78 - 80) ...|$|E
40|$|Interconnection {{networks}} {{consist of}} a set of switches in-terconnected by point-to-point links, and hosts linked to those switches through a network interface card. These net-works are becoming increasingly popular as a cost-effective alternative to parallel computers. One of the most well-known example is the Myrinet network. These networks use techniques and incorporate components that have been suc-cessfully applied to interconnection networks for parallel computers. One of these techniques is the use of cross-bar chips as the main component of switches, allowing to connect the input channel of any of their ports to the out-put channel of any of their ports for forwarding incoming packets. Of course, when several packets request the same output channel, certain criterion must be used for select-ing one of them. This criterion may affect performance in terms of latency and throughput, specially in wormhole net-works (Myrinet) where a packet occupies several resources while it is waiting for the output channel. In Myrinet, an <b>arbitration</b> <b>policy</b> based on round-robin criterion is used. However, there exist other arbitration policies that, when applied to Myrinet networks, could increase their perfor-mance. In this paper, several arbitration policies for select-ing the packet for a free output channel have been consid-ered and evaluated. We have found that strategies based on injection time and remaining distance to travel reduce the average and maximum packet latency of the current policy used in Myrinet...|$|E
40|$|In {{this paper}} we address the “rate {{analysis}} ” problem for media-processing platforms consisting of multiple processor cores connected in a pipelined fashion. More precisely, we aim at determining tight bounds on the rates at which multimedia streams can be fed into such architectures. These bounds depend on architectural constraints (e. g. the available on-chip memory, bus <b>arbitration</b> <b>policies,</b> etc.), {{as well as the}} application characteristics (e. g. application partitioning and mapping, workload rates generated by different tasks, etc.). The proposed framework for rate analysis can be used for fast design space exploration to determine how these bounds change with different architectural parameters, mapping of the application, or changing the QoS requirements associated with the input streams. ...|$|R
40|$|The {{throughput}} analysis technique {{described in}} this pa-per is intended for applications that are executed on hetero-geneous embedded multiprocessor systems. A mix of run-time <b>arbitration</b> <b>policies</b> is often applied in these systems. Backpressure prevents buffer overflow because tasks do not start before sufficient buffer space is available. We show {{that the effects of}} run-time arbitration can be included in the response time of the actors of a multi-rate dataflow model. Given this model we compute conservative estimates of the arrival times of data in the system. Fur-thermore, we show that latency constraints can be included in a multi-rate dataflow model. The analysis technique is demonstrated on a real-life car-radio application. In this application two independent streams are processed. One of these streams has a latency constraint. ...|$|R
40|$|This Note {{discusses}} current consumer <b>arbitration</b> <b>policies</b> and analyzes whether traditional arbitration {{is adequate}} to address consumer disputes {{in the new}} cross-border shopping environment. Part I discusses the importance of consumer protection and reviews the consumer arbitration regimes of the United States and the European Union. Part II discusses the criticisms of the current <b>policies</b> toward consumer <b>arbitration</b> in the United States and the European Union. Part II also highlights the unique problems of consumer dispute resolution in cross-border transactions and raises some concerns unique to dispute resolution on the Internet. Part III concludes that traditional arbitration systems are not appropriate for cross-border consumer transactions, and proposes that the most prudent solution is to leave arbitration to commercial parties involved in B 2 B transactions...|$|R
40|$|The inter-core {{interference}} {{that affects}} multicore processors highly complicates the timing analysis of embedded applications. The {{contribution of the}} execution-time penalty that software programs incur on access to hardware shared resources is hard to estimate, as it depends on both the resource <b>arbitration</b> <b>policy</b> and the quantity and activity of co-runners. An interesting vicious circle arises: the execution-time behavior of the application of interest must be known to determine its best allocation to a processor core; this decision however determines the actual set of co-runners, which in turns effects the inter-core interference suffered by the application of interest and consequently its execution-time behavior. This work presents a framework that aids the timing analysis of applications in presence of inter-core interference and addresses the cited circular dependency by providing a suite of synthetic co-runners designed to access hardware shared resources to produce fine-grained controlled interference. The framework specifically targets the Aurix Tricore family of processors designed by Infineon for the automotive domain, and includes a highly integrated toolchain to build, execute and trace applications. The toolchain includes a tailored version of Erika Enterprise, modified to exhibit time-composable behavior at run time, and the RT-Druid build environment. The paper includes {{an evaluation of the}} timing behavior of a real-world automotive application, adapted to fit the run-time target of choice and trialed under different levels of inter-core interference...|$|E
40|$|Abstract—Predictable {{arbitration}} policies, such as Time Di-vision Multiplexing (TDM) and Round-Robin (RR), {{are used}} to provide firm real-time guarantees to clients sharing a single memory resource (DRAM) between the multiple memory clients in multi-core real-time systems. Traditional centralized imple-mentations of predictable arbitration policies in a shared memory bus or interconnect are not scalable {{in terms of the}} number of clients. On the other hand, existing distributed memory intercon-nects are either globally arbitrated, which do not offer diverse service according to the heterogeneous client requirements, or locally arbitrated, which suffers from larger area, power and latency overhead. Moreover, selecting the right <b>arbitration</b> <b>policy</b> according to the diverse and dynamic client requirements in re-usable platforms requires a generic re-configurable architecture supporting different arbitration policies. The main contributions in this paper are: (1) We propose a novel generic, scalable and globally arbitrated memory tree (GSMT) architecture for distributed implementation of several predictable arbitration policies. (2) We present an RTL-level implementation of Accounting and Priority assignment (APA) logic of GSMT that can be configured with five different ar-bitration policies typically used for shared memory access in real-time systems. (3) We compare the performance of GSMT with different centralized implementations by synthesizing the designs in a 40 nm process. Our experiments show that with 64 clients GSMT can run up to four times faster than traditional architectures and have over 51 % and 37 % reduction in area and power consumption, respectively. I...|$|E
40|$|Since its {{inception}} in 1999, the World Intellectual Property Organization (WIPO) has resolved nearly 22, 000 domain-name disputes under the Uniform Domain-Name Dispute-Resolution Policy (UDRP) —a mandatory <b>arbitration</b> <b>policy</b> implemented by the Internet Corporation for Assigned Names and Numbers (ICANN). The UDRP allows the holder of a legally protectable trademark to initiate proceedings to cancel a similar domain name or have it transferred to the trademark owner. Domain-name holders, though, {{have a number of}} defenses, including that they are using their domain names in a noncommercial, fair manner. Although several empirical studies have analyzed various aspects of the UDRP, none have specifically examined this fair use defense. This study does what others have not. It analyzes the fair use defense in decisions before WIPO. Using WIPO’s online decision database, this study makes two important findings. First, respondents from the United States are more likely than those from other countries to succeed on a fair use defense. Second, arbitrators from the United States are more likely than those from other countries to find that a respondent’s use of a domain name was fair. This means that, under the UDRP, respondents from the United States enjoy greater speech protections than those from other countries, and that arbitrators from the United States are more sympathetic to speech interests than arbitrators from other countries. To improve the UDRP, I propose two revisions. First, ICANN should adopt a choice of law provision stating that the law of the respondent’s home country governs fair use disputes. Second, ICANN should implement a panel assignment provision in fair use disputes that requires arbitrators to share the nationalities of the litigants...|$|E
25|$|The Revised Treaty {{also calls}} for {{harmonized}} regimes {{in a number of}} areas: Anti-dumping and countervailing measures, Banking and securities, Commercial <b>arbitration,</b> Competition <b>policy,</b> Consumer protection, Customs, Intellectual property rights, Regulation and labelling of food and drugs, Sanitary and phytosanitary measures, Standards and technical regulations & Subsidies.|$|R
40|$|Critical Real-Time Embedded Systems require {{functional}} and timing validation {{to prove that}} they will perform their functionalities correctly and in time. For timing validation, a bound to the Worst-Case Execution Time (WCET) for each task is derived and passed as an input to the scheduling algorithm to ensure that tasks execute timely. Bounds to WCET can be derived with deterministic timing analysis (DTA) and probabilistic timing analysis (PTA), each of which relies upon certain predictability properties coming from the hardware/software platform beneath. In particular, specific hardware designs are needed for both DTA and PTA, which challenges their adoption by hardware vendors. This paper makes a step towards reconciling the hardware needs of DTA and PTA timing analyses to increase the likelihood of those hardware designs to be adopted by hardware vendors. In particular, we show how Time Division Multiple Access (TDMA), which has been {{regarded as one of the}} main DTA-compliant <b>arbitration</b> <b>policies,</b> can be used in the context of PTA and, in particular, of the industrially-friendly Measurement-Based PTA (MBPTA). We show how the execution time measurements taken as input for MBPTA need to be padded to obtain reliable and tight WCET estimates on top of TDMA-arbitrated hardware resources with no further hardware support. Our results show that TDMA delivers tighter WCET estimates than MBPTA-friendly <b>arbitration</b> <b>policies,</b> whereas MBPTA-friendly policies provide higher average performance. Thus, the best policy to choose depends on the particular needs of the end user. The research leading to these results has been funded by the EU FP 7 under grant agreement no. 611085 (PROXIMA) and 287519 (parMERASA). This work has also been partially supported by the Spanish Ministry of Economy and Competitiveness (MINECO) under grant TIN 2015 - 65316 -P and the HiPEAC Network of Excellence. Miloˇs Pani´c is funded by the Spanish Ministry of Education under the FPU grant FPU 12 / 05966. Jaume Abella has been partially supported by the MINECO under Ramon y Cajal postdoctoral fellowship number RYC- 2013 - 14717. Peer ReviewedPostprint (author's final draft...|$|R
40|$|Communication {{performance}} {{is an important}} component of overall application performance in many parallel programs. As a result, parallel machine implementations must offer efficient support for programs whose communication requirements often vary in several dimensions, including send rate, granularity of communicated data, and destination patterns. As part of our effort in designing and implementing the XYZ 1 Multicomputer we have developed two models [...] one using analytic methods and one using event-driven simulation [...] to evaluate its communication performance under a variety of workloads. We find that the system's performance depends mostly on the behavior of the endpoints, with most of the message latency due to arbitrating and transferring data to and from memory on the node I/O buses. While the raw speed of the network is a less important factor in message latency, network connectivity and <b>arbitration</b> <b>policies</b> can greatly affect the extent to which congestion at a rec [...] ...|$|R
