0|10000|Public
40|$|While the {{computational}} {{complexity of}} finding the most likely joint value assignment given full (MPE) or partial (Partial MAP) evidence is known, less {{attention has been given}} to the related problem {{of finding the}} k-th most likely <b>assignment,</b> <b>for</b> arbitrary <b>values</b> of k. Yet this problem has very relevant practical usages, for example when we are interested in a list of alternative explanations in decreasing likeliness. In this paper a hardness proof of enumerating Most Probable Explanations (MPEs) and Maximum A-Priori Probabilities (Partial MAPs) is given. We prove that finding the k-th MPE is PPP-complete, and prove that finding the k-th Partial MAP is PPP PP-complete. ...|$|R
5000|$|... {{algorithm}} MIN-CONFLICTS input: csp, a {{constraint satisfaction}} problem max_steps,the {{number of steps}} allowed before giving up current_state, an initial <b>assignment</b> of <b>values</b> <b>for</b> the variables in the csp output: a solution set of <b>values</b> <b>for</b> the variable or failure for i=1 to max_steps do if current_state is a solution of csp then return current_state var <-- a randomly chosen variable from the set of conflicted variables CONFLICTEDcsp value <-- the <b>value</b> v <b>for</b> var that minimizes CONFLICTS(var,v,current_state,csp) set var = value in current_state return failure ...|$|R
5000|$|A useful {{property}} of [...] {{is that its}} cycle covers correspond to variable <b>assignments</b> <b>for</b> [...] For a cycle cover Z of , one can say that Z induces an <b>assignment</b> of <b>values</b> <b>for</b> the variables in [...] just in case Z contains all of the external edges in s T-cycle {{and none of the}} external edges in s F-cycle for all variables [...] that the assignment makes true, and vice versa for all variables [...] that the assignment makes false. Although any given cycle cover Z need not induce an <b>assignment</b> <b>for</b> , any one that does induces exactly one assignment, and the same assignment induced depends only on the external edges of Z. The term Z is considered an incomplete cycle cover at this stage, because one talks only about its external edges, M. In the section below, one considers M-completions to show that one has a set of cycle covers corresponding to each M that have the necessary properties.|$|R
40|$|We {{discuss a}} general {{approach}} to hybridize traditional construction heuristics for combinatorial optimization problems with numerical based evolutionary algorithms. Therefore, we show how to augment a construction heuristic with real-valued parameters, called control values. An evolutionary algorithm for numerical optimization uses this enhanced heuristic to find <b>assignments</b> <b>for</b> these control <b>values,</b> {{which in turn}} enable the latter to find high quality solutions for the original combinatorial problem. Additionally to the actual optimization task, we thereby experimentally analyze the heuristic’s substeps. Furthermore, after finding a good <b>assignment</b> <b>for</b> a specific instance set, we can use it for similar yet different problem instances, without the need of an additional time-consuming run of the evolutionary algorithm. This concept {{is of particular interest}} in the context of computing efficient bounds within Branch-and-Cut algorithms. We apply our approach to a real-world problem in network optimization, and present a study on its effectiveness...|$|R
40|$|Abstract: Objects in {{object-oriented}} languages {{have often}} been treated as {{a special kind of}} entity different from other variables or constants. Similarly, their types, which are typically called classes, {{have often been}} treated differently from other types. This complicates the understanding of these concepts. The present paper proposes to see the classes as module types leading to a very natural integration of objects and classes into the framework of contemporary programming languages. The main part of the paper contains typing rules for module types <b>for</b> <b>assignment</b> and <b>for</b> <b>value</b> and variable parameters. It is shown that the rules for reference parameters in some existing languages lead to unexpected results and sometimes to undefined behavior. Furthermore, assignment involving dereferenced pointers to modules is studied {{for the first time in}} detail. The paper shows that the type compatibility rule <b>for</b> pointer <b>assignment</b> is not sufficient <b>for</b> deref <b>assignment.</b> The last part of the paper contains a comparison of the language definitions and of compilers for Borland Pascal with Objects, C++, Oberon, and Object CHILL. Key Words: Object-Oriented languages, extensible module types, parameters and paramete...|$|R
40|$|Reliable {{measurement}} of Naturally Occurring Radioactive Materials is of significance {{in order to}} comply with environmental regulations and for radiological protection purposes. This paper discusses the standardisation of three reference materials, namely sand, tuff and TiO 2 to serve as quality control materials for traceability, method validation and instrument calibration. The sample preparation, material characterization via γ, α and Inductively Coupled Plasma Mass Spectrometry (ICP-MS) and the <b>assignment</b> of <b>values</b> <b>for</b> both the 4 n (Thorium) and 4 n+ 2 (Uranium) decay series are described. JRC. G. 2 -Standards for Nuclear Safety, Security and Safeguard...|$|R
5000|$|When {{agents are}} created, the {{arguments}} to the routines they model {{and even the}} target object {{to which they are}} applied can be either closed or left open. Closed arguments and targets are given values at agent creation time. The <b>assignment</b> of <b>values</b> <b>for</b> open arguments and targets is deferred until some point after the agent is created. The routine [...] expects as an argument an agent representing a function with one open argument or target that conforms to actual generic parameter for the structure ( [...] in this example.) ...|$|R
40|$|In {{this paper}} we first present a {{uniformity}} property that characterises optimal channel <b>assignments</b> <b>for</b> networks arranged as cellular or square grids. Then, we present optimal channel <b>assignments</b> <b>for</b> cellular and square grids; these assignments exhibit a high <b>value</b> <b>for</b> Æ — {{the separation between}} channels assigned to adjacent stations. Based on empirical evidence, we conjecture that the value our assignments exhibit is an upper bound on Æ. ...|$|R
40|$|We derive an {{analogue}} of {{the quantum}} total probability rule by constructing a probability theory based on paraconsistent logic. Bayesian probability theory is constructed upon classical logic and a desiderata, that is, {{a set of}} desired properties that the theory must obey. We construct a new probability theory following the desiderata of Bayesian probability theory but replacing the classical logic by paraconsistent logic. This class of logic has been conceived to handle eventual inconsistencies or contradictions among logical propositions without leading to the trivialisation of the theory. Within this Paraconsistent bayesian probability theory {{it is possible to}} deduce a new total probability rule which depends on the probabilities assigned to the inconsistencies. Certain <b>assignments</b> of <b>values</b> <b>for</b> these probabilities lead to expressions identical to those of Quantum mechanics, in particular to the quantum total probability rule obtained via symmetric informationally complete positive- operator valued measure...|$|R
40|$|Abstract. We {{apply the}} {{distribution}} semantics for probabilistic ontologies (named DISPONTE) to the Datalog+/- language. In DISPONTE the formulas of a probabilistic ontology can be annotated with an epistemic or a statistical probability. The epistemic probability represents {{a degree of}} confidence in the formula, while the statistical probability considers the populations to which the formula is applied. The probability of a query is defined in terms of finite set of finite explanations for the query, where an explanation is a set of possibly instantiated formulas that is sufficient for entailing the query. The probability of a query is computed from the set of explanations by making them mutually exclusive. We also compare the DISPONTE approach for Datalog+/- ontologies with that of Probabilistic Datalog+/-, where an ontology is composed of a Datalog+/- theory whose formulas are associated to an <b>assignment</b> of <b>values</b> <b>for</b> the random variables of a companion Markov Logic Network. ...|$|R
40|$|Abstract. In logic {{programming}} the distribution semantics {{is one of}} the most popular approaches for dealing with uncertain information. In this paper we apply the distribution semantics to the Datalog+/- language that is grounded in {{logic programming}} and allows tractable ontology querying. In the resulting semantics, called DISPONTE, formulas of a probabilistic ontology can be annotated with an epistemic or a statistical probability. The epistemic probability represents a degree of confidence in the formula, while the statistical probability considers the populations to which the formula is applied. The probability of a query is defined in terms of finite set of finite explanations for the query. We also compare the DISPONTE approach for Datalog+/- ontologies with that of Probabilistic Datalog+/- where an ontology is composed of a Datalog+/theory whose formulas are associated to an <b>assignment</b> of <b>values</b> <b>for</b> the random variables of a companion Markov Logic Network. ...|$|R
40|$|We {{apply the}} {{distribution}} semantics for probabilistic ontologies (named DISPONTE) to the Datalog+/- language. In DISPONTE the formulas of a probabilistic ontology can be annotated with an epistemic or a statistical probability. The epistemic probability represents {{a degree of}} confidence in the formula, while the statistical probability considers the populations to which the formula is applied. The probability of a query is defined in terms of finite set of finite explanations for the query, where an explanation is a set of possibly instantiated formulas that is sufficient for entailing the query. The probability of a query is computed from the set of explanations by making them mutually exclusive. We also compare the DISPONTE approach for Datalog+/- ontologies with that of Probabilistic Datalog+/-, where an ontology is composed of a Datalog+/- theory whose formulas are associated to an <b>assignment</b> of <b>values</b> <b>for</b> the random variables of a companion Markov Logic Network...|$|R
2500|$|An <b>assignment</b> <b>for</b> {{the benefit}} of {{creditors}} is a relatively well-established common law tool and is one alternative to a bankruptcy. An <b>assignment</b> <b>for</b> {{the benefit of}} creditors is designed to save time and expense by concluding the affairs of a bankrupt company. The <b>assignment</b> <b>for</b> the benefit of creditors is a state form of bankruptcy action versus a federal form of bankruptcy action. The <b>assignment</b> <b>for</b> the benefit of creditor’s process is similar in character to a Chapter 7 bankruptcy and parallels {{some of the same}} procedures, but is not an actual [...] "bankruptcy" [...] in the form the word is used in the United States.|$|R
50|$|Project KickStart's wizard prompts {{users to}} {{identify}} phases, goals, obstacles and personnel <b>assignments</b> <b>for</b> projects {{and uses a}} calendar to produce a Gantt chart that features the project’s phases and the goals, tasks and <b>assignments</b> <b>for</b> each.|$|R
40|$|Abstract. In {{this paper}} we first present a {{uniformity}} property that characterises optimal channel <b>assignments</b> <b>for</b> networks arranged as cellular or square grids. Then, we present optimal channel <b>assignments</b> <b>for</b> cellular and square grids; these assignments exhibit a high <b>value</b> <b>for</b> δ 1 – {{the separation between}} channels assigned to adjacent stations. We prove an upper bound on δ 1 for such optimal channel assignments. This upper bound {{is greater than the}} value of δ 1 exhibited by our assignments. Based on empirical evidence, we conjecture that the value our assignments exhibit is a tight upper bound on δ 1...|$|R
2500|$|The <b>assignment</b> <b>for</b> {{the benefit}} of {{creditors}} is a common law contract between {{the board of directors}} and the assignee in which the board [...] "assigns" [...] the assets and liabilities of the company to the assignee, a third party. The <b>assignment</b> <b>for</b> {{the benefit of}} creditors contract is usually recorded the public record at a town, a city, a county or a state level. Each state will differ on recording requirements <b>for</b> the <b>assignment</b> <b>for</b> the benefit of creditors contract.|$|R
40|$|Many {{fundamental}} {{tasks in}} artificial intelligence and in combinatorial optimization can be formulated as a Constraint Satisfaction Problem (CSP). It {{is the problem}} of finding an <b>assignment</b> of <b>values</b> <b>for</b> a set of variables, each defined on a finite domain of feasible values, subject to a given collection of constraints. Each constraint is defined over a set of variables and specifies the allowed combinations of values as a collection of tuples. In general, the problem of finding a solution to a CSP is NP-complete, but in some cases it has shown to be polynomially solvable. We consider the dynamic version of some polynomially solvable constraint satisfaction problems, and present solutions that are better than recomputing everything from scratch after each update. The updates we consider are either restrictions, i. e., deletions of values from existing constraints and introduction of new constraints, or relaxations, i. e., insertions of values or deletions of constraints. © 2001 Elsevier Science B. V. All rights reserved...|$|R
40|$|AbstractMany {{fundamental}} {{tasks in}} artificial intelligence and in combinatorial optimization can be formulated as a Constraint Satisfaction Problem (CSP). It {{is the problem}} of finding an <b>assignment</b> of <b>values</b> <b>for</b> a set of variables, each defined on a finite domain of feasible values, subject to a given collection of constraints. Each constraint is defined over a set of variables and specifies the allowed combinations of values as a collection of tuples. In general, the problem of finding a solution to a CSP is NP-complete, but in some cases it has shown to be polynomially solvable. We consider the dynamic version of some polynomially solvable constraint satisfaction problems, and present solutions that are better than recomputing everything from scratch after each update. The updates we consider are either restrictions, i. e., deletions of values from existing constraints and introduction of new constraints, or relaxations, i. e., insertions of values or deletions of constraints...|$|R
40|$|We reanalyze {{the mass}} matrix model of quarks and leptons {{that gives a}} unified {{description}} of quark and lepton mass matrices with the same texture form. By investigating possible types of <b>assignment</b> <b>for</b> the texture components of the lepton mass matrix, we find that a different <b>assignment</b> <b>for</b> neutrinos than for charged leptons {{can also lead to}} consistent values of the MNSP lepton mixing matrix. We also find that the predicted <b>value</b> <b>for</b> the lepton mixing matrix element $U_{ 13 }$ of the model depends on the assignment. A proper assignment will be discriminated by future experimental data for $U_{ 13 }$. Comment: 9 page...|$|R
50|$|See Fair item <b>assignment</b> <b>for</b> {{details and}} references.|$|R
5000|$|Velocity-sensitive pads with {{chromatic}} <b>assignment</b> <b>for</b> key groups ...|$|R
3000|$|..., {{we say it}} is a {{possible}} <b>assignment.</b> <b>For</b> this <b>assignment,</b> we could achieve the delivery utility DU as P_rio(d_k)× q_Ni^dest(d_k). The goal is to seek <b>assignments</b> <b>for</b> all data chunks that the sum of DU is maximized while the constraints of FCC and individual storage capacity are satisfied.|$|R
40|$|In this paper, we {{investigate}} the channel <b>assignment</b> problem <b>for</b> networks arranged as square and cellular grids. We define the infinite d-dimensional square and cellular grids, {{and show that}} a solution <b>for</b> the channel <b>assignment</b> problem <b>for</b> the d-dimensional square (cellular) grid places an upper bound on solutions for the problem for a suitable d-dimensional cellular (square) grid. We then focus on a restriction of the problem where channel separation for all but adjacent stations is 1, and adjacent stations have to be assigned colours diering by a larger <b>value.</b> <b>For</b> networks arranged as cellular grids, in Section 4 we first present optimal <b>assignments</b> <b>for</b> each σ≥ 4, where the channel separation constraint for adjacent stations is a quadratic in σ. In these assignments, the channel separation constraint for adjacent stations is 1 for σ = 4, 5, 6. We then present optimal <b>assignments,</b> <b>for</b> all σ≥ 4, with a channel separation constraint of 2 for adjacent stations. For networks arranged as d-dimensional square grids, we present optimal <b>assignments</b> <b>for</b> σ = 3, 4 with a channel separation constraint of 2 for adjacent stations. Finally, we introduce {{the notion of a}} colouring schema for d-dimensional square grids and present an algorithm that assigns colours to the vertices of the grid satisfying the schema constraints...|$|R
5000|$|... #Caption: Gruzlewski with {{a border}} collie on <b>assignment</b> <b>for</b> Getaway ...|$|R
5000|$|King's {{committee}} <b>assignments</b> <b>for</b> the 113th United States Congress are: ...|$|R
5000|$|... the {{physical}} assignment and/or logical <b>assignment</b> <b>for</b> OMC media use ...|$|R
5000|$|... #Subtitle level 3: Committee <b>assignments</b> <b>for</b> Representative Alfred P.C. Petsch ...|$|R
5000|$|... #Subtitle level 3: Committee <b>Assignments</b> <b>for</b> the 91st General Assembly ...|$|R
50|$|Firstly, we {{truncate}} each {{clause in}} Φ to contain exactly k literals. Since each clause is a disjunction, {{this does not}} harm satisfiability, for {{if we can find}} a satisfying <b>assignment</b> <b>for</b> the truncated formula, it can easily be extended to a satisfying <b>assignment</b> <b>for</b> the original formula by reinserting the truncated literals.|$|R
50|$|Cefalo hosted NBC's pregame {{coverage}} for Game 5 of the 1987 National League Championship Series, as Marv Albert was {{away on a}} boxing <b>assignment</b> <b>for</b> NBC. Cefalo also hosted NBC's pregame show for Game 4 of the 1989 American League Championship Series as Marv Albert was away on an NFL <b>assignment</b> <b>for</b> NBC.|$|R
25|$|In 2002, Wright went to Afghanistan on <b>assignment</b> <b>for</b> Rolling Stone.|$|R
50|$|It {{is also an}} <b>assignment</b> <b>for</b> the L96 in Battlefield 3.|$|R
50|$|See also channel <b>assignments</b> <b>for</b> CB usage in the United States.|$|R
5000|$|<b>Assignments</b> <b>for</b> {{students}} choosing Task style {{might look}} something like this: ...|$|R
5000|$|... #Caption: Camp Morton, {{the final}} wartime <b>assignment</b> <b>for</b> the 43rd Indiana ...|$|R
5000|$|The pin <b>assignments</b> <b>for</b> the AC'97 and HD Audio {{connectors}} are: ...|$|R
