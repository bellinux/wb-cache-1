8|54|Public
5000|$|Many vendors allow {{discovered}} MAC addresses to be <b>authenticated</b> <b>against</b> an authentication, authorization {{and accounting}} (AAA) server and subsequently filtered.|$|E
50|$|Hole196 is a {{vulnerability}} in the WPA2 protocol that abuses {{the shared}} Group Temporal Key (GTK). It {{can be used}} to conduct man-in-the-middle and denial-of-service attacks. However, it assumes that the attacker is already <b>authenticated</b> <b>against</b> Access Point and thus in possession of the GTK.|$|E
50|$|An access token is {{generated}} by the logon service when a user logs on to the system and the credentials provided by the user are <b>authenticated</b> <b>against</b> the authentication database. The authentication database contains credential information required to construct the initial token for the logon session, including its user id, primary group id, all other groups it is part of, and other information. The token {{is attached to the}} initial process created in the user session and inherited by subsequent processes created by the initial process. Whenever such a process opens a handle to any resource which has access control enabled, Windows reconciles the data in the target object's security descriptor with the contents of the current effective access token. The result of this access check evaluation is an indication of whether any access is allowed and, if so, what operations (read, write/modify, etc.) the calling application is allowed to perform.|$|E
5000|$|CrushLDAPGroup <b>authenticates</b> <b>against</b> an LDAP servers, {{including}} Active Directory.|$|R
5000|$|If {{the user}} {{tried unsuccessfully to}} <b>authenticate</b> <b>against</b> a website, they might see: ...|$|R
5000|$|<b>Authenticate</b> <b>against</b> the database, LDAP, Active Directory, Windows NTLM, OpenID, or Windows Live ID ...|$|R
50|$|The {{concept is}} that CaseKeys {{software}} is installed {{on either the}} client PC or the mail server which allows every message - both incoming and outgoing to be intercepted and processed. Outgoing messages are processed with each instance of the protected user’s email address being encoded with a unique CaseKey. The CaseKey encoding, the message recipient, and optionally other details of the outgoing message are then recorded. In the other direction, incoming messages are scanned for any CaseKey-encoded instances of the protected user’s email address, with the recovered CaseKey codes being <b>authenticated</b> <b>against</b> the list of those previously issued. Messages found to contain valid CaseKeys are then marked as not spam to prevent spam filters from misrouting {{the message to the}} user’s junk folder. Other particulars of the original message may also be recovered and included with the delivery of the message - such as who the original message was issued to and when it was issued. It may even be used to automatically include a copy of the original message for the convenience of the protected user.|$|E
30|$|One {{can run a}} Kerberos KDC and a realm local to the cluster, create all service {{principals}} in this realm and then set up one-way cross-realm trust from this realm to the Active Directory realm. If this approach is used, {{there is no need}} to create any additional service {{principals in}} Active Directory and Active Directory principals (users) can be <b>authenticated</b> <b>against</b> Hadoop.|$|E
40|$|Taking {{into account}} the real world applications, this paper {{considers}} a vehicle routing problem with stochastic demand (VRPSD) in which the customer demand has been modelled as a stochastic variable. Considering the computational complexity {{of the problem and}} to enhance the algorithm performance, a neighbourhood search embedded adaptive ant algorithm (ns-AAA) is proposed as an improvement to the existing ant colony optimisation. The proposed metaheuristic adapts itself to maintain an adequate balance between exploitation and exploration throughout the run of the algorithm. The performance of the proposed methodology is benchmarked against a set of test instances that were generated using design of experiment (DOE) techniques. Besides, analysis of variance (ANOVA) is performed to determine the impact of various factors on the objective function value. The robustness of the proposed algorithm is <b>authenticated</b> <b>against</b> ant colony optimisation and genetic algorithm over which it always demonstrated better results thereby proving its supremacy on the concerned problem...|$|E
50|$|Another {{problem is}} that {{although}} the server tells B that A used a nonce, B doesn't know {{if this was a}} replay of an old message. Specifically, an intruder could discover an older nonce. The older nonce could be reused to <b>authenticate</b> <b>against</b> B.|$|R
50|$|PSIIF is an {{identity}} federation service, to allow civil servants and other public-sector actors to <b>authenticate</b> <b>against</b> other public sector IT systems; potentially offering Single Sign On across multiple departments and agencies, {{and on the}} G-cloud. This allows better sharing of information and services.|$|R
5000|$|As {{the name}} implies, {{identity}} federation comprises {{one or more}} systems that federate user access and allow users to log in based on <b>authenticating</b> <b>against</b> one of the system participating in the federation. This trust between several systems is often known as [...] "Circle of Trust". In this setup, one system acts as the Identity Provider (IdP) and other system(s) acts as Service Provider (SP). When a user needs to access some service controlled by SP, he/she first <b>authenticates</b> <b>against</b> the IdP. Upon successful authentication, the IdP sends a secure [...] "assertion" [...] to the Service Provider. [...] "SAML assertions, specified using a mark up language intended for describing security assertions, {{can be used by}} a verifier to make a statement to a relying party about the identity of a claimant. SAML assertions may optionally be digitally signed." ...|$|R
40|$|In {{this study}} we produce a {{continuous}} authentication scheme for mobile devices that adjusts an adaptive threshold for touchscreen interactions based on trust in passively collected sensor data. Our framework unobtrusively compares real-time sensor data of a user to historic data and adjusts a trust parameter based on the similarity. We show that the trust parameter {{can be used to}} adjust an adaptive threshold in continuous authentication schemes. The framework passively models temporal, spatial and activity scenarios using sensor data such as location, surrounding devices, wi-fi networks, ambient noise, movements, user activity, ambient light, proximity to objects and atmospheric pressure from study participants. Deviations from the models increases the level of threat the device perceives from the scenario. We also model the user touchscreen interactions. The touchscreen interactions are <b>authenticated</b> <b>against</b> a threshold that is continually adjusted based on the perceived trust. This scheme provides greater nuance between security and usability, enabling more refined decisions. We present our novel framework and threshold adjustment criteria and validate our framework on two state-of-the-art sensor datasets. Our framework more than halves the false acceptance and false rejection rates of a static threshold system...|$|E
40|$|Abstract—Cross-Site Request Forgery (CSRF) is {{an attack}} {{outlined}} in the OWASP Top 10 whereby a malicious website will send a request to a web application that a user is already <b>authenticated</b> <b>against</b> from a different website. This way an attacker can access functionality in a target web application via the victim's already authenticated browser. Targets include web applications like social media, in browser email clients, online banking, and web interfaces for network devices. As browser holds valid session information of each request, a browser is {{the first place to}} look for attack symptoms and take actions. Current client side detection methods allow performing request to a trusted website by white listed third party websites. These approaches are not effective if policies are specified incorrectly, they do not focus on all the requests and cross check of response content type. To overcome these limitations, we acquaint a client side detection mechanism for the CSRF attack. Our approach relies on concept of a unique CSRF token which tends to change for each and every request. We can do that by using a unique number generator to generate the token. Then we try to match the token in the user's session data and invalidate it when we see it as a match or no token at all. This makes the token a used once. This protects us against repeated attacks. Moreover to overcome an attacker’s attempt to circumvent form visibility checking, we compare the response content type of a suspected request wit...|$|E
5000|$|<b>Authenticate</b> users <b>against</b> {{existing}} user repositories such as LDAP and Active Directory ...|$|R
50|$|Bluetooth Mesh is a flood network. It's {{based on}} the nodes {{relaying}} the messages: every relay node that receives a network packet that <b>authenticates</b> <b>against</b> a known network key {{that is not in}} message cache, that has a TTL ≥ 2 can be retransmitted with TTL = TTL - 1.Message cache used to prevent relaying messages recently seen.|$|R
50|$|Any client {{machine with}} the correct KMS client setup keys can <b>authenticate</b> <b>against</b> any KMS server. KMS client keys are well known and {{documented}} publicly by Microsoft. KMS servers require a minimum of 25 clients to properly activate, but also stop counting additional licenses beyond 50, and automatically accept any client key once reaching the 25 client threshold.|$|R
50|$|In 2007, Devicescape {{introduced}} Devicescape Connect, a client-server {{system which}} allowed embedded devices to automatically <b>authenticate</b> <b>against</b> {{any number of}} public Wi-Fi networks. The company released a variety of consumer applications for PCs and smartphones under the Devicescape Easy Wi-Fi brand. In 2009, Devicescape consolidated its consumer offerings on easywifi.com and launched the Easy WiFi Network.|$|R
50|$|TOTP is {{an example}} of a {{hash-based}} message authentication code (HMAC). It combines a secret key with the current timestamp using a cryptographic hash function to generate a one-time password. Because network latency and out-of-sync clocks can result in the password recipient having to try a range of possible times to <b>authenticate</b> <b>against,</b> the timestamp typically increases in 30-second intervals, which thus cuts the potential search space.|$|R
5000|$|Client {{authentication}}: <b>authenticate</b> users <b>against</b> {{a variety}} of authentication sources before allowing them access to a website.|$|R
50|$|If an {{attacker}} has the hashes of a user's password, they do {{not need}} to brute-force the cleartext password; they can simply use the hash of an arbitrary user account that they have harvested and execute a side channel attack to <b>authenticate</b> <b>against</b> a remote system and impersonate that user. In other words, from an attacker's perspective, hashes are functionally equivalent to the original passwords that they were generated from.|$|R
50|$|Claims-based {{identity}} {{can greatly}} simplify the authentication process because the user doesn't {{have to sign}} in multiple times to multiple applications. A single sign in creates the token which is then used to <b>authenticate</b> <b>against</b> multiple applications, or web sites. In addition, because certain facts (claims) are packaged with the token, the user {{does not have to}} tell each individual application those facts repeatedly, for instance by answering similar questions or completing similar forms.|$|R
50|$|Common {{features}} such as multiple-domain support, aliases, catch-all and basic mailing lists are present. Users can be <b>authenticated</b> both <b>against</b> the local hMailServer user system and against an external Active Directory.|$|R
50|$|The system {{supports}} handoff, and authentication is done via the GSM SIM card as normal. However, DECT terminals need to <b>authenticate</b> themselves <b>against</b> the base station, and this added layer is implementation dependent.|$|R
5000|$|At boot time, a {{workstation}} {{that has}} been set to boot from PXE will issue a BOOTP request via the network. Once the request is received, the DHCP Server will supply an IP address to the machine, and the DNS server will point the client computer to the RIS server, which in turn will issue a disc boot image (often called the [...] "OS Chooser"). Once the OS Chooser environment has been booted, the user must <b>authenticate</b> <b>against</b> the Domain Controller, and can then select a Windows image to install. The source files for each image can be customized with 3rd party utilities such as nLite to slipstream updates and service packs, apply tweaks, perform unattended installations, and include software with the operating system.|$|R
5000|$|OpenVPN can be {{extended}} with third-party plug-ins or scripts, which can be called at defined entry points. [...] The purpose of this is often to extend OpenVPN with more advanced logging, enhanced authentication with username and passwords, dynamic firewall updates, RADIUS integration and so on. The plug-ins are dynamically loadable modules, usually written in C, while the scripts interface can execute any scripts or binaries available to OpenVPN. In the OpenVPN source code there are some examples of such plug-ins, including a PAM authentication plug-in. Several third-party plug-ins also exist to <b>authenticate</b> <b>against</b> LDAP or SQL databases such as SQLite and MySQL. There is an overview over many of these extensions in the related project wiki page for the OpenVPN community.|$|R
40|$|With broader use of IaaS science clouds the {{management}} of multiple Virtual Machine (VM) images is becoming increasingly daunting for the user. In a typical workflow, users work on a prototype VM, clone it and upload it in preparation for building a virtual cluster of identical instances. We describe and benchmark a novel VM image repository (Repoman), {{which can be used}} to clone, update, manage, store and distribute VM images to multiple clouds. Users authenticate using X. 509 grid proxy certificates to <b>authenticate</b> <b>against</b> Repoman's simple REST API. The lightweight Repoman CLI client tool has minimal python dependencies and can be installed in seconds using standard Python tools. We show that Repoman removes the burden of image management from users while simplifying the deployment of user specific virtual machines. Peer reviewed: YesNRC publication: Ye...|$|R
50|$|In 2002, Plumtree {{extended}} the Web Services Architecture of its Windows and UNIX products, to support remote components for indexing content from different repositories, federating searches to different search engines, <b>authenticating</b> users <b>against</b> different directories and profiling users’ interests and preferences from different systems, {{all with the}} same level of radical openness to application servers and programming languages.|$|R
40|$|Network administrators {{typically}} employ di erent {{methods for}} authenticating and authorizing {{the access to}} their networks. A exible and scalable network access method is needed to combat the ever increasing network ubiquity brought on by technological advancements. The IEEE 802. 1 x Port-Based Network Access is a technology that allows transparent authentication to a network. It uses EAP-methods in order to <b>authenticate</b> <b>against</b> a server. There {{are a lot of}} di erent EAP-methods to choose from, and they vary in complexity and security. This report will bring up the di erences between the most commonly used authentication methods regarding the authentication time depending on di erent delay and network load. Results showed that EAP-methods that are less complex take less time to perform authentication than their counterparts. When there is no delay, or a very small delay, this might not matter, but when the delay is higher complex EAP-methods take signi cantly longer time to perform the authentication process. This is very negative considering the nature of transparent authentication, and could lead to users becoming annoyed. A general formula for determining how long time an EAP-authentication process will take is presented...|$|R
40|$|Inter-organisational data-exchange {{is common}} in inter-organisational value-chains. Currently {{information}} providing organizations enrol users of suppliers, in order {{to enable them to}} access their services and information. This leaves some users with the issue of handling multiple credentials, introducing risks of password-reuse [Iv 04] and weak-passwords [Ne 94]. Federated identity management eases this scenario, by enabling users to <b>authenticate</b> <b>against</b> their organizations’ identity [Hü 10]. However, the costs involved in managing the underlying identity and rights lifecycle have hardly been considered. This paper addresses this gap, by using the principal-agent theory, and transaction cost theory, structuring the identity lifecycle using [BS 08] [IS 05] [IS 10], and estimating the management costs. We finally analyse the economic benefits of federated identity management in inter-organizational information exchange. We find that while process costs for executing the identity lifecycle are reduced for the information provider, by introducing federated identity management, the control costs reduce, and in one case even diminish this cost benefit. We briefly discuss our findings, and conclude that further mechanisms and research is required to reduce the efforts in auditing, in order to fully unlock the security and economic benefits of federated identity management...|$|R
40|$|The DIRAC {{framework}} for distributed computing {{has been designed}} as a flexible and modular solution that {{can be adapted to}} the requirements of any community. Users interact with DIRAC via command line, using the web portal or accessing resources via the DIRAC python API. The current DIRAC API requires users to use a python version valid for DIRAC. Some communities have developed their own software solutions for handling their specific workload, and would like to use DIRAC as their back-end to access distributed computing resources easily. Many of these solutions are not coded in python or depend on a specific python version. To solve this gap DIRAC provides a new language agnostic API that any software solution can use. This new API has been designed following the RESTful principles. Any language with libraries to issue standard HTTP queries may use it. GSI proxies can still be used to <b>authenticate</b> <b>against</b> the API services. However GSI proxies are not a widely adopted standard. The new DIRAC API also allows clients to use OAuth for delegating the user credentials to a third party solution. These delegated credentials allow the third party software to query to DIRAC on behalf of the users...|$|R
50|$|Tennant {{replied that}} the {{military}} authorities in France had standing instructions to send details of any <b>authenticated</b> atrocities committed <b>against</b> British troops, and that no official information had been received. He added that inquiries were being made, and were not yet complete.|$|R
50|$|The command sudo is related, and executes {{a command}} as another user but observes {{a set of}} {{constraints}} about which users can execute which commands as which other users (generally in a configuration file named /etc/sudoers, best editable by the command visudo). Unlike su, sudo <b>authenticates</b> users <b>against</b> their own password rather {{than that of the}} target user (to allow the delegation of specific commands to specific users on specific hosts without sharing passwords among them and while mitigating the risk of any unattended terminals).|$|R
40|$|Abstract — This work gives a {{mechanism}} for doing authentication and authorization between managed element and server from a single database using a Centralized controller which can control a multiple switches. This work allows having one or more authentication servers for the switches to <b>authenticate</b> <b>against</b> which centralizes the authentication databases, {{making it easier to}} manage switch. Moreover, switch continues to support the pre-existing local authentication which works as a fallback in case of loss of connectivity to authentication server. Command authorization on per user basis is added which makes possible to have authorization of user to execute specific commands. Old access level authorization is continued to support as well. Protocol client is added and integrated into the existing system. As a part of this this work Remote authentication is supported meaning that authentication has not to be done by each switch by its own. Authentication database is shared with each other by switches now. Therefore each switch need not to be configured individually for a specific user and password in the network which will make the process of adding/modifying users very fast as opposed to time consuming in a large switch network and it is no more a security concern also. Chances of misconfiguration and mismatch are minimized...|$|R
40|$|Abstract Secure Quick Reliable Login (SQRL) and Universal 2 nd Factor (U 2 F) are two new strong {{authentication}} protocols. They both {{operate on a}} challenge-response model and use Asymmetric key encryption. SQRL aims to replace user names and passwords because they are our identity and we cannot trust the websites to keep our personal information safe. In order to <b>authenticate</b> <b>against</b> a SQRL aware service, one has to use the SQRL application on his phone. A perk of using SQRL is that the users only need to remember a master password for the SQRL application itself rather than passwords to all the different authentication services they use. U 2 F, on the other hand, is hosted by the FIDO alliance. It has been adapted by big companies, such as Google, Visa, Yubico, etc. It requires a physical U 2 F enabled token on the client side and a U 2 F aware authentication service on the server side. After {{an evaluation of the}} two protocols, we have come to a conclusion that at this point, U 2 F is a better option than SQRL. Hence, a web application has been implemented and deployed on CERN web servers to demonstrate the functionality of U 2 F...|$|R
40|$|Abstract. We {{present a}} novel {{stealthy}} cross-platform infection attack in WiFi networks. Our attack has high impact on two-factor authentication schemes that {{make use of}} mobile phones. In particular, we apply our attack to break mTAN authentication, {{one of the most}} used scheme for online banking worldwide (Europe, US, China). We present the design and implementation of the online banking Trojan which spreads over the WiFi network from the user's PC to her mobile phone and automatically pairs these devices. When paired, the host and the mobile malware deliver to the attacker authentication secrets which allow her to successfully <b>authenticate</b> <b>against</b> the online-banking portal and perform nancial transactions {{in the name of the}} user. Our attack is stealthy compared to the known banking Trojans ZeuS/ZitMo and SpyEye/Spitmo, as it does not rely on phishing or naïve user behavior for malware spreading and pairing. Our reference implementation targets Windows PCs and Android based smartphones, although our attack is not platform speci c. To achieve cross-platform infection, we applied and adapted attack techniques such as remote code execution, privilege escalation, GOT overwriting, DLL injection and function hooking. Our attack can be implemented by knowledgeable attackers and calls for re-thinking of security measures deployed for protection of online transactions by banks. ...|$|R
