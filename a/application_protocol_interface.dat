0|4069|Public
40|$|We {{report on}} two new portals for searching MEDLINE/PubMed with {{handheld}} devices, PICO (Patient, Intervention, Comparison, Outcome) and a WAP (Wireless <b>Application</b> <b>Protocol)</b> browser <b>interface.</b> Early user evaluation and user feedback will be discussed. We also include an updated report of user evaluation of established search tools for handheld devices {{included in the}} first release...|$|R
40|$|As {{computer}} technology becomes more miniaturized and mobile, power management becomes an everincreasing concern to users wanting freedom from conventional power supplies, yet {{full access to}} data while roaming. Mobile connectivity is fully available, but at the precious price of increased energy consumption. This increased energy consumption reduces mobility, requiring frequent, undesired recharge sessions. Current power management techniques revolve around the lower layers of the protocol stack. This approach treats all applications equally and leaves the burden of choosing the best power management settings with the user. But different applications require different levels of connectivity, and thus different energy requirements. Mobile devices such as the Personal Data Assistant (PDA), PocketPC, or mobile laptop, and the applications they support, cannot afford to be treated equally. This paper explores the idea of migrating power management to a much higher level - the application layer. The key is to take {{as much information as}} possible from the applications that require connectivity and allow them to directly and dynamically control applicable power management techniques. Active Mode Power Management (AM/PM) can take advantage of today's modular languages through the use of <b>Application</b> <b>Protocol</b> <b>Interfaces</b> (APIs). This paper looks at the plausibility of such API-based power management software and provides benchmarktesting figures to substantiate its validity. Power usage data, from a mobile device equipped with an IEEE 802. 11 b wireless LAN PC card, are presented. KEYWORDS: Mobile Computing, Active Mode Power Management...|$|R
40|$|The {{trend of}} the service {{architectures}} developed in telecommunications today is {{that they should be}} open {{in the sense that they}} can communicate over the borders of different networks. Instead of each network having their own service architecture with their own applications, all networks should be able to use the same applications. 3 GPP, the organization developing specifications for the 3 G networks has specified the standard Open Service Access (OSA), as a part of the 3 G specification. OSA offers different <b>Application</b> <b>Protocol</b> <b>Interfaces</b> that enable an application that resides outside a network to use the capabilities of the network. This paper analyses the performance of an OSA gateway. It is examined how the overload control can be dealt with in a way to best satisfy the operators and the 3 'rd parties. There are some guiding principles in the specifications, but a lot of decisions have to be made by the implementors of application servers and OSA gateways. Proposals of different requirements for an OSA architecture exist such as, minimum amount of accepted calls per second and time constraint for the maximal total delay for an application. Maximal and fair throughput have to be prioritized from the 3 'rd parties view, but profit is the main interest from the operators point of view. Therefore this paper examines a priority based proposal of an overload control mechanism taking these aspects and requirements into account...|$|R
40|$|This paper {{discusses}} {{a possible}} solution {{for developing a}} virtual place for advertisement, investment and the harvesting, collecting and sharing of information concerning brownfields - now abundantly availabe land that was previously used for industrial, commercial or other uses. The novelty of the proposed solution is an automated brownfield related information integration (brownfields data integrator or brownfields broker) from various sources and its further distribution for other purposes (reuse of collected information) in a machine readable format and that meets European requirements regarding the integration of spatial information (INSPIRE directive and its related activities). This virtual place will provide services for brownfields related automated data harvesting, data update by local governments and citizens, as well as mechanisms for the reuse of this data through <b>Application</b> <b>Protocol</b> <b>Interfaces</b> and other „machine to machine “interfaces. The brownfield broker should also help to improve the ratio between developments made on brownfields and greenfields, which are currently imbalanced and statistically unknown in the European Union (EU). The beneficiaries from the brownfields data integrator will be very broad: owners, entrepreneurs (potential investors), municipalities (will be able to upload and then re-use relevant reliable, classified, updated information about brownfields and to advertise it through the application), planners, realtors (will be able to publicise the data using their web portals), financial institutions (for providing distance financial services), volunteers, scientists {{and the general public}} (for their personal interest, data creation, use, publishing and informing) ...|$|R
40|$|In this paper, {{we present}} the MPEG- 1 Audio bitstreams {{processing}} work which our research group is involved in. This work is primarily {{based on the}} processing of the encoded bitstream, and the extraction of useful audio features {{for the purposes of}} analysis and browsing. In order to prepare for the discussion of these features, the MPEG- 1 audio bitstream format is first described. The <b>Application</b> <b>Interface</b> <b>Protocol</b> (API) which we have been developing in C++ is then introduced, before completing the paper with a discussion on audio feature extraction...|$|R
40|$|Due {{to their}} wide availability, {{networks}} of workstations (NOW) are an attractive platform for parallel processing. Parallel programming environments such as Parallel Virtual Machine (PVM), and Message Passing Interface (MPI) offer the user a convenient {{way to express}} parallel computing and communication for a network of workstations. Currently, a number of MPI implementations are available that offer low (average) latency and high bandwidth environments to users by utilizing an efficient MPI library specification and high speed networks. In addition to high bandwidth and low average latency requirements, mission critical distributed applications, audio/video communications require a completely different type of service, guaranteed bandwidth and worst case delays (worst case latency) to be guaranteed by underlying protocol. The hypothesis {{presented in this paper}} is {{that it is possible to}} provide an application a low level reliable transport protocol with performance and guaranteed bandwidth as close to the hardware on which it is executing. The hypothesis is proven by designing and implementing a reliable high performance message passing <b>protocol</b> <b>interface</b> which also provides the guaranteed bandwidth to MPI and to mission critical distributed MPI <b>applications.</b> This <b>protocol</b> <b>interface</b> works with the Fiber Distributed Data Interface (FDDI) driver which has been designed and implemented for Performance Technology Inc. commercial high performance FDDI product, the Station Management Software 7. 3, and the ADI / MPICH (Argonne National Laboratory and Mississippi State University 2 ̆ 7 s free MPI implementation) ...|$|R
40|$|Context-Aware Computing is a {{paradigm}} where context-aware applications, use acquired knowledge, {{related to a}} set of environmental states and attributes, to determine and adapt the applications behavior at runtime. Presented in this paper is a context-aware architectural framework, named “Context Spaces”. The context spaces framework enables the development and research of context-aware applications by mitigating common issues associated with dynamic environments. The framework components include a conceptual model, a <b>protocol</b> <b>Application</b> Message <b>Interface</b> for space based-distributed information sharing, and a method for context sharing between spaces called context acquisition. 1...|$|R
5|$|The program employs its own {{communication}} protocol layered {{on top of}} a schema to communicate to other nodes. This communication <b>protocol</b> <b>interfaces</b> with the BEEP infrastructure, a network <b>application</b> <b>protocol</b> framework. Computers discovered by the Xgrid system, that is computers with Mac OS X's Xgrid service enabled, are automatically added to the list of available computers to use for processing tasks.|$|R
40|$|Background We {{introduce}} GASH, a new, publicly accessible {{program for}} structural alignment and superposition. Alignments are scored by the Number of Equivalent Residues (NER), a quantitative measure of structural similarity {{that can be}} applied to any structural alignment method. Multiple alignments are optimized by conjugate gradient maximization of the NER score within the genetic algorithm framework. Initial alignments are generated by the program Local ASH, and can be supplemented by alignments from any other program. Results We compare GASH to DaliLite, CE, and to our earlier program Global ASH on a difficult test set consisting of 3, 102 structure pairs, as well as a smaller set derived from the Fischer-Eisenberg set. The extent of alignment crossover, as well as the completeness of the initial set of alignments are examined. The quality of the superpositions is evaluated both by NER and by the number of aligned residues under three different RMSD cutoffs (2, 4, and 6 Å). In addition to the numerical assessment, the alignments for several biologically related structural pairs are discussed in detail. Conclusion Regardless of which criteria is used to judge the superposition accuracy, GASH achieves the best overall performance, followed by DaliLite, Global ASH, and CE. In terms of CPU usage, DaliLite CE and GASH perform similarly for query proteins under 500 residues, but for larger proteins DaliLite is faster than GASH or CE. Both an http interface and a simple object <b>application</b> <b>protocol</b> (SOAP) <b>interface</b> to the GASH program are available at [URL]...|$|R
40|$|The paper {{describes}} secure {{service-oriented architecture}} for mobile transactions. The architecture comprises components, <b>protocols,</b> <b>applications</b> and <b>interfaces</b> {{and it provides}} various security services to various mobile applications: registration, certification, authentication, and authorization of users, secure messaging at an application–level (end–to–end security), protection of data in databases, and security services for protection of its own components. The architecture is modular, integrated, extendible and scalable. The paper describes design of the architecture, the status of its current implementation, and future research and development plans. © 2011 IEEE. Personal use of this material is permitted. Permission from IEEE must be obtained for all other uses, in any current or future media, including reprinting/republishing this material for advertising or promotional purposes, creating new collective works, for resale or redistribution to servers or lists, or reuse of any copyrighted component of this work in other works. Qc 2012011...|$|R
5000|$|Port (computer networking), a <b>protocol</b> <b>interface</b> to {{the network}} ...|$|R
40|$|This {{paper is}} focused on an {{efficient}} protocol implementation based on flexible user <b>protocol</b> <b>interface</b> (UPI) configurable for different service options and protocol processing architectures. The XTPL implementation discussed in this paper is developed based on the BERKOM eXpress Transfer Protocol (XTP) Lite version for HP 9000 / 7 x Series using HP-UX 9. 0 operating system. This implementation supports the dynamical configuration of user <b>protocol</b> <b>interfaces</b> intended to provide different objectives: - optimization of the user data copy operations (use of the "single copy archtecture") - selectable QoS options for application layer framing, reliability and checksumming. Performance analyses are included to show the flexible use of user <b>protocol</b> <b>interfaces,</b> in particular the reliable single and dual copy interface, dependent on the application traffic of the connections. Keywords: User <b>Protocol</b> <b>Interface,</b> <b>Application</b> Programming Interface (API), Application Layer Framing, Single Copy [...] . ...|$|R
50|$|Examples {{of attack}} vectors include user input fields, <b>protocols,</b> <b>interfaces,</b> and services.|$|R
40|$|A {{prototype}} <b>application</b> <b>protocol</b> for ready-to-wear {{pattern making}} {{was developed for}} the communication of pattern pieces and related information between various CAD systems. The basic methodology for the <b>application</b> <b>protocol</b> isthe Standard for the Exchange ofProduct Model Data (STEP). STEP is an emerging international standard, {{the result of an}} effort to develop a mechanism for digitally representing the physical and functional characteristics of a product throughout the product’s life cycle. The STEP <b>application</b> <b>protocol</b> addresses a specific application area and contains an information model written in the conceptual modeling language EXPRESS. The experience gained through the implementation of the prototype <b>application</b> <b>protocol</b> and recommendations received from apparel researchers provided us useful input to improve the prototype <b>application</b> <b>protocol.</b> This report presents a revised version of the information model usingboth the EXPRESS language and the EXPRESS-G graphical notation. An application activity model that defines the scope and information requirements of the prototype <b>application</b> <b>protocol</b> is also presented in this report. Neither the EXPRESS-Gdiagrams nor the application activity model was shown in the original prototype <b>application</b> <b>protocol</b> report...|$|R
40|$|This chapter proposes an {{alternative}} reference architecture for <b>application</b> <b>protocols.</b> The proposed reference architecture {{consists of the}} set of possible architectures for <b>application</b> <b>protocols.</b> This set is implicitly defined by defining {{the different types of}} <b>application</b> <b>protocol</b> components and their relationships. The component types and their relationships are derived by application of the design trajectory, design methods and structuring techniques presented in the previous chapters. This chapter also identifies and characterizes some generic <b>application</b> <b>protocol</b> building blocks that can be used as components in many different <b>application</b> <b>protocol</b> architectures. The main purpose of a reference architecture is to help the designer in choosing a suitable architecture for his specific design, and to incorporate pre-defined, generic building blocks. A reference architecture should therefore either define a single architecture that is generally applicable in the design domain at hand, or a set of architectures, each appropriate in a specific sub-domain. Because of the diversity of interaction requirements of different classes of distributed applications, {{we do not believe that}} it is possible to define a single useful architecture for <b>application</b> <b>protocols.</b> Such a reference architectur...|$|R
50|$|The OIF has {{published}} numerous older <b>protocol</b> <b>interfaces</b> including a generic framer interface called CEI-P. The OIF also publishes numerous older IAs of the Network Processing Forum.|$|R
40|$|Master {{thesis is}} focused on {{classification}} of <b>application</b> <b>protocols</b> based on <b>application</b> data taken from layer L 7 of ISO/OSI model. The aim of the thesis is to suggest a classifier for SDM system (Software defined monitoring) {{so it could be}} used for links with throughput up to 100 Gb/s. At the same time it should classify with the fewest possible errors. Designed classifier consists of two parts. First part depicts encoders for encoding selected attributes. Second part deals with evaluating circuit which detects series characteristic for particular <b>application</b> <b>protocols</b> on the output from the first part. Considered attributes and series are taken from statistic analyzes of <b>application</b> <b>protocol</b> data. The classifier itself is designed so it can be implemented in FPGA and enables modification set of <b>application</b> <b>protocols</b> who intended for classification. The quality of  designed classifier is tested on real network data. The results of classification are compared with current methods used for classification of <b>application</b> <b>protocols...</b>|$|R
40|$|One of {{the most}} {{familiar}} SCADA (supervisory control and data acquisition) <b>application</b> <b>protocols</b> now is OPC <b>protocol.</b> This <b>interface</b> is supported by almost all SCADA, visualization, and process control systems. There are many research efforts tried to design and implement an approach to access an OPC DA server through the Internet. To achieve this goal they used diverse of modern IT technologies like XML, Web services, Java and AJAX. In this paper, we present a complete classification of the different approaches introduced in the literature. A comparative study is also introduced. Finally we study the feasibility of the realization of these approaches based on the real time constraints imposed {{by the nature of}} the problem. Comment: revie...|$|R
5000|$|MIL-STD-3011, Joint Range Extension <b>Application</b> <b>Protocol</b> (JREAP) ...|$|R
40|$|In {{the last}} decades, much {{effort has been}} spent on the design and {{provision}} of sophisticated communication infrastructures. The development of end-user oriented distributed system applications, leaning on top of these communication infrastructures, so far has attracted little attention. This is regrettable, since communication infrastructures can only become useful and profitable {{if they can be}} deployed {{in the context of a}} sufficient number of distributed applications. Two important factors determine the success of distributed applications: (1) the provision of high quality <b>application</b> services and <b>protocols</b> at short time scales; and (2) the availability of standards for these services and protocols that can be used for the construction of ‘open’ distributed systems. The achievement of both (1) and (2) can be supported by a suitable design methodology. A design methodology entails a systematic approach to carry out complex designs, and therefore should incorporate proper concepts that enable the effective structuring of such designs. Concepts currently used for the design and structuring of <b>application</b> <b>protocols</b> appear to be inadequate for this purpose. Also a step-wise design approach that would help to master complexity and shorten development times is currently lacking. Standards are necessary since individual users of distributed system applications prefer to be independent on any particular manufacturer or vendor when procuring products, while manufacturers prefer to have maximum implementation freedom when developing such products. An ‘open’ protocol standard defines necessary and sufficient conditions for system parts to interact, such that the system parts can be implemented independently of each other. ISO and ITU-TSS base the development and definition of protocol standards on a ‘reference model’, called the Reference Model for Open Systems Interconnection (OSIRM). This model comprises a rudimentary form of a design approach and a reference architecture that can be derived with this approach. According to the OSI-RM, the overall <b>application</b> <b>protocol</b> functionality is distributed over three hierarchical protocol layers. Each layer has been assigned a specific functionality, except the highest layer, the Application Layer, which is made responsible for all remaining protocol functions. Because the functionality of the Application Layer is not delimited it cannot, as opposed to the other layers, be covered by a single protocol standard or a fixed set of protocol standards. Several identified sets of <b>Application</b> Layer <b>protocol</b> functions are defined by separate Application Service Elements (ASEs). The appropriateness of the OSI-RM for the development and definition of <b>application</b> <b>protocol</b> standards can be criticized on a number of points: - the reference architecture defined by the OSI-RM is not flexible enough to adequately cope with the diversity of interaction requirements of distributed applications. - some design concepts are not clearly defined, thus prohibiting their effective application to structuring problems; - the relationship between high level application requirements and proposed <b>application</b> <b>protocol</b> solutions is unclear; - the development of <b>application</b> <b>protocol</b> standards generally takes a long time. This thesis aims at the development of a methodology for the design of <b>application</b> <b>protocols,</b> including <b>application</b> <b>protocol</b> standards, and so addresses the problems mentioned above. The following contributions are made to achieve this aim: - design quality criteria are proposed that can be used to guide design decisions and to evaluate designs; - OSI design decisions and design concepts with respect to <b>application</b> <b>protocols</b> are evaluated; - general-purpose, elementary design concepts are proposed; - milestones in the <b>application</b> <b>protocol</b> design process are presented; - behaviour composition and structuring techniques are developed that can be used to represent design results corresponding to the identified milestones; - design methods are proposed to support the correct performance of design steps between milestones; - a flexible reference architecture is proposed. A (potential) result of the design methodology is that layered <b>application</b> <b>protocol</b> hierarchies can be avoided if they are not required by the class of distributed applications that must be supported. This thesis is structured as follows: - Chapter 1 (Introduction) presents a global problem description for this thesis, the scope and objectives of this thesis, and the approach followed in this thesis. It further introduces some general concepts related to the design of distributed systems. - Chapter 2 (Design Quality Criteria) discusses quality criteria that can be used to guide the design of <b>application</b> <b>protocols</b> and to evaluate the quality of already designed <b>application</b> <b>protocols.</b> - Chapter 3 (OSI Upper Layer Architecture and Model: State of the Art) presents the architecture and concepts defined by the OSI-RM with respect to <b>application</b> <b>protocol</b> standards. It also contains a brief description of the most important <b>application</b> <b>protocol</b> standards that were developed in the context of the OSI-RM. - Chapter 4 (OSI Upper Layer Architecture and Model: Evaluation) evaluates the architecture and concepts defined by the OSI-RM with respect to <b>application</b> <b>protocol</b> standards. It also discusses the relation between the quality of <b>application</b> <b>protocol</b> standards and the nature of standardization, and the implementation freedom supported by protocol standards. - Chapter 5 (Design Framework) presents a general framework for the design of <b>application</b> <b>protocols.</b> It identifies elementary concepts for distributed systems design, and abstraction levels at which distributed systems and system parts can be represented. The abstraction levels are used to define an <b>application</b> <b>protocol</b> design trajectory consisting of a sequence of design steps between different milestones in the <b>application</b> <b>protocol</b> design process. - Chapter 6 (Design Model) discusses a model for the representation and manipulation of behaviours, such that it can be used in the <b>application</b> <b>protocol</b> design trajectory. The model is based on the elementary design concepts, identified in Chapter 5, and defines additional concepts and rules in order to allow the composition of behaviours. It also includes techniques for the composition of structured behaviours and requirements for behaviour decomposition and refinement. - Chapter 7 (<b>Application</b> <b>Protocol</b> Reference Architecture) proposes a flexible reference architecture for <b>application</b> <b>protocols.</b> The reference architecture is based on the design quality criteria, the design framework and the design model, and presents specific design methods for structuring <b>application</b> <b>protocols.</b> Furthermore, some generic <b>application</b> <b>protocol</b> structures are discussed, and some <b>application</b> <b>protocol</b> functions that can be used as building blocks for the support of many classes of distributed system applications are characterized. - Chapter 8 (Suggestions for Further Work) presents some suggestions for further work. - Chapter 9 (Summary of Conclusions) presents a summary of the conclusions drawn in the previous chapters...|$|R
5000|$|ISO 15118-4: Network and <b>application</b> <b>protocol</b> {{conformance}} test ...|$|R
5000|$|IFSF is {{more complex}} but more {{comprehensive}} than most proprietary protocols. The IFSF protocol has two independent layers; a device <b>application</b> <b>protocol</b> layer and a communications <b>protocol</b> layer. The <b>application</b> <b>protocol</b> is independent of the underlying communications layer. The communications protocol specification makes the link to the transport layer.|$|R
40|$|A {{synergistic}} relationship {{exists between}} Concurrent Engineering (CE) frameworks and the PDES initiative of promulgating STEP. This paper emphasizes and punctuates {{the importance of}} the STEP-CE linkage and defines further cooperative bindings. One focus of the presentation is the use of STEP <b>application</b> <b>protocols</b> to create the shared information models necessary for Concurrent Engineering(CE). After a discussion of the natural fusion of CE and PDES/STEP <b>application</b> <b>protocols,</b> the need for the extension of STEP resource models and <b>application</b> <b>protocols</b> to include information sharing capabilities for process and organization data is presented...|$|R
40|$|This chapter {{presents}} {{some suggestions}} for further work: section 1 suggests an approach for testing the proposed <b>application</b> <b>protocol</b> reference architecture in practice; section 2 discusses the notion of application service engineering and presents some items for further work in this area; section 3 presents an alternative graphical notation which should be further investigated; section 4 indicates areas where the <b>application</b> <b>protocol</b> design methodology may be useful; section 5 mentions the need to investigate the combined use of object-oriented approaches and the <b>application</b> <b>protocol</b> design methods; section 6 presents possibilities for generalized constraint-oriented composition; and section 7 mentions {{the need for further}} work in the area of specification language support. 8. 1 Elaboration and application of the reference architecture The <b>application</b> <b>protocol</b> reference architecture proposed in Chapter 7 (<b>Application</b> <b>Protocol</b> Reference Architecture) should be tested by applying it to realistic examples. One {{way to do this is}} the following: • define the building blocks characterized in Chapter 7 with the design model presented in Chapter 6 (Design Model); possibly, characterize further useful building blocks an...|$|R
5000|$|Application-Layer Host: traffic {{statistics}} by <b>application</b> <b>protocol,</b> per host ...|$|R
5000|$|... #Subtitle level 2: Coverage of STEP <b>Application</b> <b>Protocols</b> (AP) ...|$|R
5000|$|... #Subtitle level 4: CAN <b>application</b> <b>protocol</b> over EtherCAT (CoE) ...|$|R
5000|$|WAP1, Wireless <b>Application</b> <b>Protocol</b> 1, 5-layer {{stack of}} {{protocols}} ...|$|R
5000|$|Alternative {{protocols}} {{include the}} [...] Advanced Message Queuing Protocol (AMQP), [...] Streaming Text Oriented Messaging Protocol (STOMP) the IETF Constrained <b>Application</b> <b>Protocol,</b> [...] XMPP and Web <b>Application</b> Messaging <b>Protocol</b> (WAMP).|$|R
5000|$|Internet {{applications}} for smart devices through wireless <b>application</b> <b>protocol</b> (WAP) ...|$|R
5000|$|ISO/CD 15118-7: Network and <b>application</b> <b>protocol</b> {{requirements}} for wireless communication ...|$|R
50|$|In 1985, Aitech {{developed}} {{under contract}} for US TACOM, the first conduction-cooled 6U VMEbus board. Although electrically providing a compliant VMEbus <b>protocol</b> <b>interface,</b> mechanically, this board was not interchangeable {{for use in}} air-cooled lab VMEbus development chassis.|$|R
40|$|This thesis {{focuses on}} methods for fast {{recognition}} of <b>application</b> <b>protocols.</b> Fast recognition is recognition with minimal delay {{from the time}} of capturing the first data packet sent  from the source node. This thesis describes possible techniques and methods for recognition of <b>application</b> <b>protocols</b> and basic information and description of reference system for lawful interception in computer networks. Furthermore, the thesis describes analysis, design and implementation phase of a tool for fast recognition of <b>application</b> <b>protocols.</b> The conclusion of this thesis describes the results of tests performed by the tool and shows its limitations and possible extensions...|$|R
50|$|WMLC is {{apparently}} synonymous with Wireless <b>Application</b> <b>Protocol</b> Binary XML (WBXML).|$|R
5000|$|IEC 61334-4-42:1996 Data {{communication}} <b>protocols</b> - <b>Application</b> <b>protocols</b> - <b>Application</b> layer ...|$|R
5000|$|IEEE 1278.1-1995 - Standard for Distributed Interactive Simulation - <b>Application</b> <b>protocols</b> ...|$|R
