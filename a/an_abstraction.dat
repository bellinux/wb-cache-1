4286|7691|Public
5|$|The {{distinction}} between {{external and internal}} environments, however, is <b>an</b> <b>abstraction</b> parsing life and environment into units or facts that are inseparable in reality. There is an interpenetration {{of cause and effect}} between the environment and life. The laws of thermodynamics, for example, apply to ecology by means of its physical state. With an understanding of metabolic and thermodynamic principles, a complete accounting of energy and material flow can be traced through an ecosystem. In this way, the environmental and ecological relations are studied through reference to conceptually manageable and isolated material parts. After the effective environmental components are understood through reference to their causes; however, they conceptually link back together as an integrated whole, or holocoenotic system as it was once called. This is known as the dialectical approach to ecology. The dialectical approach examines the parts, but integrates the organism and the environment into a dynamic whole (or umwelt). Change in one ecological or environmental factor can concurrently affect the dynamic state of an entire ecosystem.|$|E
25|$|Poincaré complex – <b>an</b> <b>abstraction</b> of the {{singular}} chain complex of a closed, orientable manifold.|$|E
25|$|An {{element of}} Kierkegaard's {{critique}} of modernity in his socio-political work, Two Ages, is {{the mention of}} money — which he calls <b>an</b> <b>abstraction.</b> <b>An</b> <b>abstraction</b> is something that only has a reality in an ersatz reality. It is not tangible, and only has meaning within an artificial context, which ultimately serves devious and deceptive purposes. It is a figment of thought that has no concrete reality, neither now nor in the future.|$|E
50|$|The sub {{expression}} may {{be either}} <b>a</b> lambda <b>abstraction,</b> or <b>a</b> lambda <b>abstraction</b> applied to <b>a</b> parameter.|$|R
5000|$|The causal models help {{to detail}} the flow {{structure}} and understand more complex flow patterns within <b>a</b> specified <b>Abstraction</b> Hierarchy level. <b>A</b> causal <b>Abstraction</b> Hierarchy representation {{has the same}} structure as <b>a</b> functional <b>Abstraction</b> Hierarchy representation but with causal links drawn. Causal links are also known as “within the level” links. These links show how the processes and flows are connected within each level.|$|R
5000|$|For {{creating}} and interacting with objects entirely at runtime, e.g., interaction with a document object model <b>abstraction,</b> <b>a</b> specific <b>abstraction</b> API must be used.|$|R
25|$|Normal order: The leftmost, {{outermost}} redex {{is always}} reduced first. That is, whenever possible the arguments are substituted {{into the body}} of <b>an</b> <b>abstraction</b> before the arguments are reduced.|$|E
25|$|Philosophers {{have noted}} that Euler's proof is not about <b>an</b> <b>abstraction</b> or a model of reality, but {{directly}} about the real arrangement of bridges. Hence the certainty of mathematical proof can apply directly to reality.|$|E
25|$|The obvious {{advantage}} of docking simulation is that ligand flexibility is easily incorporated, whereas shape complementarity techniques must use ingenious methods to incorporate flexibility in ligands. Also, it more accurately models reality, whereas shape complimentary techniques {{are more of}} <b>an</b> <b>abstraction.</b>|$|E
5000|$|The {{hierarchy}} described before is <b>a</b> functional <b>Abstraction</b> Hierarchy representation. <b>A</b> functional <b>Abstraction</b> Hierarchy {{emphasizes the}} “means-ends” or “how/why” links of the hierarchy. These connections are direct and illustrated across the five {{levels of the}} Abstraction Hierarchy.|$|R
50|$|<b>A</b> {{database}} <b>abstraction</b> layer provides {{yet another}} functional dependency for a software system, i.e. <b>a</b> given database <b>abstraction</b> layer, like anything else, may eventually become obsolete, outmoded or unsupported.|$|R
5000|$|<b>A</b> lambda <b>abstraction</b> [...] is <b>a</b> {{definition}} of an anonymous function {{that is capable of}} taking a single input [...] and substituting it into the expression [...] It thus defines an anonymous function that takes [...] and returns [...] For example, [...] is <b>a</b> lambda <b>abstraction</b> for the function [...] using the term [...] for [...] The {{definition of}} a function with <b>a</b> lambda <b>abstraction</b> merely [...] "sets up" [...] the function but does not invoke it. The abstraction binds the variable [...] in the term [...]|$|R
25|$|Prior to version 7, Drupal had {{functions}} that performed tasks related to databases, such as SQL query cleansing, multi-site table name prefixing, and generating proper SQL queries. In particular, Drupal 6 introduced <b>an</b> <b>abstraction</b> layer that allowed programmers to create SQL queries without writing SQL.|$|E
25|$|Functors {{were first}} {{considered}} in algebraic topology, where algebraic objects (like the fundamental group) are associated to topological spaces, and algebraic homomorphisms are associated to continuous maps. Nowadays, functors are used throughout modern mathematics to relate various categories. Thus, functors are generally applicable in areas within mathematics that category theory can make <b>an</b> <b>abstraction</b> of.|$|E
25|$|Later, Jensen was an {{important}} advocate in the mainstream acceptance of the general factor of intelligence, a concept which was essentially synonymous with his Level II conceptual learning. The general factor, or g, is <b>an</b> <b>abstraction</b> that stems from the observation that scores on all forms of cognitive tests correlate positively with one another.|$|E
40|$|We {{present an}} {{algorithm}} for selecting <b>an</b> appropriate <b>abstraction</b> when learning <b>a</b> new skill. We show empirically {{that it can}} consistently select <b>an</b> appropriate <b>abstraction</b> using very little sample data, and that it significantly improves skill learning performance in a reasonably large real-valued reinforcement learning domain. ...|$|R
5000|$|<b>A</b> lambda <b>abstraction</b> {{represents}} <b>a</b> function {{without a}} name. This {{is a source}} of the inconsistency in the definition of <b>a</b> lambda <b>abstraction.</b> However lambda abstractions may be composed to represent a function with a name. In this form the inconsistency is removed. The lambda term, ...|$|R
5000|$|Squash, <b>a</b> {{compression}} <b>abstraction</b> layer supporting many codecs.|$|R
25|$|Despite {{it being}} {{recently}} invented, {{there is no}} scholarly consensus over what a religion is. Today, religion is broadly conceived as <b>an</b> <b>abstraction</b> which entails beliefs, doctrines, and sacred places even though the ancient and medieval cultures that wrote holy scriptures (e.g. Bible, Quran, etc.) did not have such conceptions or ideas in their languages, cultures, or histories.|$|E
25|$|The precise {{rules for}} alpha-conversion are not {{completely}} trivial. First, when alpha-converting <b>an</b> <b>abstraction,</b> the only variable occurrences that are renamed {{are those that are}} bound to the same abstraction. For example, an alpha-conversion of λx.λx.x could result in λy.λx.x, but it could not result in λy.λx.y. The latter has a different meaning from the original. This is analogous to the programming notion of variable shadowing.|$|E
25|$|Clearly, {{there is}} some common {{structure}} between the I/O definitions and the Maybe definitions, {{even though they are}} different in many ways. Monads are <b>an</b> <b>abstraction</b> upon the structures described above, and many similar structures, that finds and exploits the commonalities. The general monad concept includes any situation where the programmer wants to carry out a purely functional computation while a related computation is carried out on the side.|$|E
5000|$|<b>A</b> {{hardware}} <b>abstraction</b> layer allows porting {{to other}} architectures ...|$|R
40|$|A proper metric {{to enable}} {{efficient}} similarity search of process models based on <b>a</b> behavioral <b>abstraction</b> thereof. 2 lundi 5 septembre 2011 A proper metric to enable efficient similarity search of process models based on <b>a</b> behavioral <b>abstraction</b> thereof. 2 What {{can it be}} used for? lundi 5 septembre 2011 A proper metric to enable efficient similarity search of process models based on <b>a</b> behavioral <b>abstraction</b> thereof. 2 What is a proper metric? What can it be used for? lundi 5 septembre 2011 A proper metric to enable efficient similarity search of process models based on <b>a</b> behavioral <b>abstraction</b> thereof. 2 What is a proper metric? What can it be used for? How does it work? lundi 5 septembre 2011 A proper metric to enable efficient similarity search of process models based on <b>a</b> behavioral <b>abstraction</b> thereof. 2 What is a proper metric? What can it be used for? How does it work? How well does it work? lundi 5 septembre 2011 A proper metric to enable efficient similarity search of process models based on <b>a</b> behavioral <b>abstraction</b> thereof. 3 What is a proper metric? What can it be used for? How does it work? How well does it work? lundi 5 septembre 2011 Search in Process Repositories •large process model repositories require meaningful means for search •find similar models to given model •identify duplicate...|$|R
25|$|Let {{expression}} – An expression {{closely related}} to <b>a</b> lambda <b>abstraction.</b>|$|R
25|$|By {{the late}} 1980s {{there were several}} efforts {{underway}} to provide <b>an</b> <b>abstraction</b> layer for this purpose. Some of these were mainframe related, designed to allow programs running on those machines to translate between the variety of SQL's and provide a single common interface which could then be called by other mainframe or microcomputer programs. These solutions included IBM's Distributed Relational Database Architecture (DRDA) and Apple Computer's Data Access Language. Much more common, however, were systems that ran entirely on microcomputers, including a complete protocol stack that included any required networking or file translation support.|$|E
25|$|The {{meanings}} of part-of-speech affixes {{depend on the}} inherent part of speech of the root they are applied to. For example, brosi (to brush) {{is based on a}} nominal root (and therefore listed in modern dictionaries under the entry broso), whereas kombi (to comb) is based on a verbal root (and therefore listed under kombi). Change the suffix to -o, and the similar {{meanings of}} brosi and kombi diverge: broso is a brush, the name of an instrument, whereas kombo is a combing, the name of an action. That is, changing verbal kombi (to comb) to a noun simply creates the name for the action; for the name of the tool, the suffix -ilo is used, which derives words for instruments from verbal roots: kombilo (a comb). On the other hand, changing the nominal root broso (a brush) to a verb gives the action associated with that noun, brosi (to brush). For the name of the action, the suffix -ado will change a derived verb back to a noun: brosado (a brushing). Similarly, <b>an</b> <b>abstraction</b> of a nominal root (changing it to an adjective and then back to a noun) requires the suffix -eco, as in infaneco (childhood), but <b>an</b> <b>abstraction</b> of an adjectival or verbal root merely requires the nominal -o: belo (beauty). Nevertheless, redundantly affixed forms such as beleco are acceptable and widely used.|$|E
25|$|By the mid-1970s, it {{was thought}} that because Canada had a shared monarch the Oath of Citizenship should clarify for new {{citizens}} that the fealty they were offering was specifically to the monarch in her capacity as the Canadian head of state, rather than, for example, the head of state of Jamaica or of the United Kingdom. Thus, as part of an amendment to the Citizenship Act in 1977, the words Queen of Canada were inserted after the Queen's name and the oath was officially named the Canadian Citizenship Oath. This new format maintained the traditional assertion of allegiance to the monarch, but also inserted the name of the country three times in a way consistent with Canada's status as a constitutional monarchy—i.e., in a monarchy the state is personified, not treated as <b>an</b> <b>abstraction</b> or a corporation.|$|E
5000|$|A let {{expression}} may {{be expressed}} as <b>a</b> lambda <b>abstraction</b> using, ...|$|R
5000|$|<b>A</b> lambda <b>abstraction</b> has <b>a</b> lower {{precedence}} than an application, so; ...|$|R
5000|$|An {{anonymous}} lift takes <b>a</b> lambda <b>abstraction</b> (called S). For S; ...|$|R
25|$|The {{problem of}} {{mediation}} in Marxism is {{also referred to}} as the problem of determination, or namely how social actors navigate the social structures that bind them. For Marx, the primary form of mediation is labor, which forms a dialectical relationship between a worker’s body and nature. Labor thus mediates between humans and the natural world. Once labor becomes reified, or made into <b>an</b> <b>abstraction</b> that becomes a commodity, however, it becomes alienated from the worker who owns it and becomes exchangeable just like any other commodity. Once this occurs, capital becomes the mediating or determining factor, with the capitalist setting the wage rate or exchange-value of labor. The only thing the worker owns in this case, his or her labor power or ability to work, becomes the worker’s sole means of subsistence. The worker must get as much value from his or her labor as is possible on the open market in order to survive.|$|E
25|$|The Java class {{libraries}} serve three purposes {{within the}} Java platform. First, like other standard code libraries, the Java libraries provide the programmer a well-known {{set of functions}} to perform common tasks, such as maintaining lists of items or performing complex string parsing. Second, the class libraries provide an abstract interface to tasks that would normally depend heavily on the hardware and operating system. Tasks such as network access and file access are often heavily intertwined with the distinctive implementations of each platform. The java.net and java.io libraries implement <b>an</b> <b>abstraction</b> layer in native OS code, then provide a standard interface for the Java applications to perform those tasks. Finally, when some underlying platform does not support all of the features a Java application expects, the class libraries work to gracefully handle the absent components, either by emulation to provide a substitute, or at least by providing a consistent way to check {{for the presence of}} a specific feature.|$|E
25|$|The nodes of {{this network}} can {{represent}} genes, proteins, mRNAs, protein/protein complexes or cellular processes. Nodes that are depicted as lying along vertical lines {{are associated with}} the cell/environment interfaces, while the others are free-floating and can diffuse. Edges between nodes represent interactions between the nodes, that can correspond to individual molecular reactions between DNA, mRNA, miRNA, proteins or molecular processes through which the products of one gene affect those of another, though the lack of experimentally obtained information often implies that some reactions are not modeled at such a fine level of detail. These interactions can be inductive (usually represented by arrowheads or the + sign), with an increase in the concentration of one leading to an increase in the other, inhibitory (represented with filled circles, blunt arrows or the minus sign), with an increase in one leading to a decrease in the other, or dual, when depending of the circumstances the regulator can activate or inhibit the target node. The nodes can regulate themselves directly or indirectly, creating feedback loops, which form cyclic chains of dependencies in the topological network. The network structure is <b>an</b> <b>abstraction</b> of the system's molecular or chemical dynamics, describing the manifold ways in which one substance affects all the others to which it is connected. In practice, such GRNs are inferred from the biological literature on a given system and represent a distillation of the collective knowledge about a set of related biochemical reactions. To speed up the manual curation of GRNs, some recent efforts try to use text mining, curated databases, network inference from massive data, model checking and other information extraction technologies for this purpose.|$|E
5000|$|Let {{expression}} - An expression {{closely related}} to <b>a</b> lambda <b>abstraction.</b>|$|R
5000|$|Ink {{and wash}} {{painting}} calligraphy - <b>a</b> third <b>abstraction,</b> Shanghai Contrasts Gallery ...|$|R
40|$|This paper {{describes}} an approach for representing uncertain temporal information and reasoning with it, and {{has shown that}} this approach can be integrated with <b>a</b> temporal <b>abstraction</b> mechanism. Integrating indeterminacy support with <b>a</b> temporal <b>abstraction</b> mechanism is <b>a</b> novel feature of our system. The resulting system provides {{a powerful tool for}} dealing with temporal indeterminacy in clinical database...|$|R
