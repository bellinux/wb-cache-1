84|10000|Public
5000|$|The IEC 61970 {{series of}} {{standards}} {{deals with the}} <b>application</b> <b>program</b> <b>interfaces</b> for energy management systems (EMS). The series provides a set of guidelines and standards to facilitate: ...|$|E
50|$|BPM suite {{software}} provides programming interfaces (web services, <b>application</b> <b>program</b> <b>interfaces</b> (APIs)) {{which allow}} enterprise applications {{to be built}} to leverage the BPM engine. This component is often referenced as the engine of the BPM suite.|$|E
5000|$|ARINC 653 is a {{standard}} Real Time Operating System (RTOS) interface for partitioning of computer resources in the time and space domains. The standard also specifies <b>Application</b> <b>Program</b> <b>Interfaces</b> (APIs) for abstraction of the application from the underlying hardware and software.|$|E
50|$|IDAPI {{stands for}} Integrated Database <b>Application</b> <b>Program</b> <b>Interface</b> or Independent Database <b>Application</b> <b>Program</b> <b>Interface.</b> It was {{originally}} {{a component of}} the Paradox relational database management system. It is now the <b>application</b> <b>program</b> <b>interface</b> of the BDE or Borland Database Engine.|$|R
50|$|The Netscape Server <b>Application</b> <b>Programming</b> <b>Interface</b> (NSAPI) is an <b>application</b> <b>programming</b> <b>interface</b> for {{extending}} server software, typically {{web server}} software.|$|R
50|$|The Generic Security Service <b>Application</b> <b>Program</b> <b>Interface</b> (GSSAPI, also GSS-API) is an <b>application</b> <b>programming</b> <b>interface</b> for <b>programs</b> {{to access}} {{security}} services.|$|R
50|$|A user {{direct access}} {{programming}} library (or uDAPL) defines a single {{set of user}} <b>application</b> <b>program</b> <b>interfaces</b> (APIs) for all Remote direct memory access (RDMA)-capable transports. The uDAPL mission is to define a transport-independent and platform-standard set of APIs that exploit RDMA capabilities, such as those present in InfiniBand, Virtual Interface Architecture (VIA), and ROI WG of Internet Engineering Task Force (IETF).|$|E
50|$|ECHO is a {{metadata}} {{catalog of}} NASA's EOS data and a registry for related data services (e.g. reformatting, pattern recognition). ECHO's catalog {{contains more than}} 3200 data sets held at 12 EOSDIS data centers. Users can access the data and services by using general or community-tailored clients that access ECHO using a series of <b>Application</b> <b>Program</b> <b>Interfaces</b> (APIs) defined using web services.|$|E
5000|$|The Global Change Master Directory (GCMD) is a {{directory}} to Earth science data and services. The GCMD database currently holds more than 30,000 Earth science data sets and service descriptions covering {{all aspects of}} Earth and environmental sciences. One can use the search box or select from the available keywords to search for data and services.ECHO - <b>Application</b> <b>Program</b> <b>Interfaces</b> (APIs) for Search and Order ...|$|E
5000|$|In computing, Server <b>Application</b> <b>Programming</b> <b>Interface</b> (SAPI) is {{the direct}} module {{interface}} to web servers {{such as the}} Apache HTTP Server, Microsoft IIS, and Oracle iPlanet Web Server. Microsoft uses the term Internet Server <b>Application</b> <b>Programming</b> <b>Interface</b> (ISAPI), and the defunct Netscape web server used the term Netscape Server <b>Application</b> <b>Programming</b> <b>Interface</b> (NSAPI) for the same purpose. [...] In other words, SAPI is an <b>application</b> <b>programming</b> <b>interface</b> (API) provided by the web server to help other developers in extending the web server capabilities.|$|R
5000|$|A {{new edition}} of the Generic Security Services <b>Application</b> <b>Program</b> <b>Interface</b> (GSS-API) {{specification}} [...] "The Kerberos Version 5 Generic Security Service <b>Application</b> <b>Program</b> <b>Interface</b> (GSS-API) Mechanism: Version 2." [...] (RFC 4121).|$|R
30|$|<b>Application</b> <b>programming</b> <b>interface.</b>|$|R
50|$|The intra-bank part of SFMS is used {{by banks}} to take full {{advantage}} of the secure messaging facility it provides. The inter-bank messaging part {{is used by}} applications like electronic funds transfer (EFT), real time gross settlement systems (RTGS), delivery versus payments (DVP), centralized funds management systems (CFMS) and others. The SFMS provides <b>application</b> <b>program</b> <b>interfaces</b> (APIs), which can be used to integrate existing and future applications with the SFMS. Several banks have integrated it with their core or centralized banking software.|$|E
50|$|Since {{the late}} 1990s, {{software}} and systems are increasingly adopting more direct encodings of Unicode, in particular UTF-8 and UTF-16; this trend has been improved by the widespread adoption of XML, {{which provides a}} more adequate mechanism for labelling the encoding used. Recent Microsoft products and <b>application</b> <b>program</b> <b>interfaces</b> use Unicode internally, but many applications and APIs continue to use the default encoding of the computer's locale when reading and writing text data to files or standard output. Therefore, though Unicode is the accepted standard, there is still backwards compatibility with the older Windows code pages.|$|E
50|$|JDEBASE is the {{database}} middleware that provides platform-independent <b>application</b> <b>program</b> <b>interfaces</b> APIs for multi-vendor database access. These APIs {{are used in}} two ways. The first way is by JDE applications that dynamically generate platform-specific Structured QueryLanguage (SQL), depending on the data source request. The second way is as open APIs for advanced C language business function writing. JDE uses these APIs to dynamically generate platform-specific SQL statements. Thus, this middleware provides workstation-to-server and server-to-server database access. To accomplish this, both the legacy JDE OneWorld middleware {{as well as the}} newer JDE EnterpriseOne middleware incorporate database driver support for a variety of third-party database drivers including ODBC, for connection to Microsoft SQL server, OCI, for connection to Oracle database and Client Access 400 drivers for connectivity to IBM DB2.|$|E
5000|$|Generic Security Services <b>Application</b> <b>Program</b> <b>Interface</b> (GSS-API) ...|$|R
5000|$|... #Article: Generic Security Services <b>Application</b> <b>Program</b> <b>Interface</b> ...|$|R
5000|$|... #Article: Portals network <b>programming</b> <b>application</b> <b>programming</b> <b>interface</b> ...|$|R
50|$|In 1994 ACT bought Kapiti Ltd, {{who owned}} the Equation product line. The IBM AS/400 based products, Equation from Kapiti and Midas from ACT/BIS were united into the Midas Kapiti International (MKI) business. Technical and {{functional}} comparisons between Midas and Equation followed. It was no surprise that Equation had zoomed past Midas in terms of core banking functionality (payments, lending, customer management, deposits, tellering), {{but it was something}} of a shock for the Midas team to see how the Midas user interface, the flat file data base and the system architecture in general had fallen behind Equation - and by implication fallen behind other competitors. Multiple Midas catch up projects followed to retro fit basic features like product templates, customer centric banking and <b>application</b> <b>program</b> <b>interfaces</b> (API's) into the aging platform. The federated Midas data base however was considered beyond redemption and remains fragmented and poorly documented.|$|E
30|$|<b>Application</b> <b>program</b> <b>{{interface}}s</b> (API): The APIs {{are used}} to provide interface functions for advanced applications and secondary development.|$|E
30|$|SDN also assumes {{three main}} <b>Application</b> <b>Program</b> <b>Interfaces</b> (APIs): (i) Northbound API, (ii) Southbound API, and (iii) Management API. The Control plane {{provides}} the Northbound API for service providers {{to create their}} network applications.|$|E
5000|$|GSSAPI (Generic Security Services <b>Application</b> <b>Program</b> <b>Interface)</b> ...|$|R
5000|$|ISAPI Internet Server <b>Application</b> <b>Programming</b> <b>Interface</b> (Microsoft) ...|$|R
50|$|Netscape Plugin <b>Application</b> <b>Programming</b> <b>Interface</b> (NPAPI) is an <b>application</b> <b>programming</b> <b>interface</b> (API) {{that allows}} plugins (more specifically, browser extensions) to be {{developed}} for web browsers. It was first developed for Netscape browsers, starting in 1995 with Netscape Navigator 2.0, but was subsequently adopted by other browsers.|$|R
40|$|Handbook of Networking & Connectivity {{focuses on}} {{connectivity}} standards in use, including {{hardware and software}} options. The book serves {{as a guide for}} solving specific problems that arise in designing and maintaining organizational networks. The selection first tackles open systems interconnection, guide to digital communications, and implementing TCP/IP in an SNA environment. Discussions focus on elimination of the SNA backbone, routing SNA over internets, connectionless versus connection-oriented networks, internet concepts, <b>application</b> <b>program</b> <b>interfaces,</b> basic principles of layering, prot...|$|E
40|$|Crucial to the {{commercial}} exploitation of any service combining UMTS and DVB-T is the availability of standardized API’s adapted to the hybrid UMTS and DVB-T network and to the technical limitations of mobile/portable terminals. This paper describes work {{carried out in the}} European Commission Framework Program 5 (FP 5) project CONFLUENT to demonstrate the feasibility of such <b>Application</b> <b>Program</b> <b>Interfaces</b> (API’s) by enabling the reception of a Multimedia Home Platform (MHP) based application transmitted over DVB-T on five different terminals with parts of the service running on a mobile phone...|$|E
40|$|We {{developed}} geo-targeted {{social media}} <b>application</b> <b>program</b> <b>interfaces</b> (APIs) for Twitter and a web-based social media analytics and research testbed (SMART) dashboard to analyze “flu ” related tweets. During the 2013 - 14 flu season, for 10 cities with active surveillance for influenza (ILI), we correlated weekly tweeting rates and visual patterns of flu tweeting rates. To facilitate widespread use {{and testing of}} this system, we developed an interactive web-based dashboard “SMART ” that allows practitioners to monitor and visualize daily changes of flu trends and related flu news...|$|E
5000|$|<b>Application</b> <b>programming</b> <b>interfaces</b> (APIs), for devices or {{networks}} ...|$|R
5000|$|... #Subtitle level 2: <b>Application</b> <b>programming</b> <b>interface</b> and apps ...|$|R
5000|$|... #Subtitle level 3: Accessibility <b>Application</b> <b>Programming</b> <b>Interfaces</b> (APIs) ...|$|R
40|$|Abstract: Open source software, {{developed}} by volunteers, appears {{counter to the}} conventional wisdom that without ownership rights or government intervention, public goods will not be efficiently provided. But complexity makes a difference: contracts are incomplete and ownership rights do not necessarily elicit socially optimal effort. I consider three mechanisms that improve the provision of complex software: pre-packaging, <b>Application</b> <b>Program</b> <b>Interfaces</b> and Free/Open Source software (FOSS). FOSS extends the range of products available to consumers, complementing, rather than replacing, proprietary provision. Pre-packaged software addresses common uses with limited feature sets, while firms with specialized, more complex needs use FOSS...|$|E
40|$|The goal of {{this work}} is the {{development}} of a task-oriented software application that facilitates the rapid deployment of multiple robotic agents. The task solutions are created at run-time and executed by the agents in a centralized or decentralized fashion. Tasks are divided into smaller subtasks which are then assigned to the optimal number of robots using Robot Utility Based Task Assignment (RUTA) algorithm. The system deploys these robots using its <b>application</b> <b>program</b> <b>interfaces</b> (API’s) and uploads programs that are integrated with a small routine code. The embedded routine allows robots to configure solutions when decentralized approach is adopted...|$|E
40|$|The Telecommunications Management Network (TMN) {{has been}} {{developed}} as the framework to support administrations in managing telecommunications networks and services. It suggests the use of OSI Systems Management (OSI-SM) as the key technology for management information exchanges. The latter follows an object-oriented approach in terms of information specification buts leaves aspects related to the software structure of relevant applications unspecified. Distributed object technologies, such as the Common Object Request Broker Architecture (CORBA), address the use of software <b>Application</b> <b>Program</b> <b>Interfaces</b> (APIs) in addition to interoperable protocols. Their ease of use, generality and ubiquity implies {{that they might be}} also used in telecommunications management systems...|$|E
5000|$|TMAPI 2.0 Topic Maps <b>Application</b> <b>Programming</b> <b>Interface</b> (v2.0) ...|$|R
50|$|DirectSetup {{is part of}} the DirectX <b>application</b> <b>programming</b> <b>interface.</b>|$|R
5000|$|OpenStep, the {{object-oriented}} <b>application</b> <b>programming</b> <b>interface</b> {{derived from}} NeXTSTEP ...|$|R
