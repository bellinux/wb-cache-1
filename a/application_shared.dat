22|2609|Public
50|$|Following his {{creation}} of an account with photo messaging service Snapchat in late-2016, Schofield found himself {{the subject of a}} series of memes due to his unique use of the <b>application.</b> <b>Shared</b> on Facebook, the memes reached peak popularity in mid-2017. His vivacious facial expressions gained him a cult following and inspired the post-modern multimedia cultural movement informally known as Schofwave.|$|E
50|$|The {{other main}} issue was that early Macs lacked a memory {{management}} unit (MMU)s. MMUs provide key functions in modern computers; they map memory addresses from main memory to each application so the applications believe they are running in a space of their own, they provide memory protection which ensures programs cannot accidentally overwrite other program's memory, and they provide systems to move data from program-to-program, in a safe way using shared memory. Lacking the last of these—shared memory—the API was instead written so the operating system and <b>application</b> <b>shared</b> all memory, which is what allowed QD to examine the program's memory for settings like the line drawing mode or color.|$|E
50|$|This {{methodology}} of performance was then adapted and re-performed {{on a smaller}} scale with four performers instead of six. As part of the festival based in London If Not You Not Me at the HTTP Gallery in London (12 February till 20 March 2010) it furthered Abrahams' concept of employing traces from previous events. The adaptation is entitled as Huis Clois/No Exit - Jam; the four performers Antye Greie (Finland), Pascale Gustin (France), Helen Varley Jamieson (New Zealand) and Maja Kalogera (Spain/Croatia) were given the task to synchronize sound together whilst competing with the technological constraints such as time delay when transferring from peer to peer. As part of the whole exhibition in London, Abrahams used digital technologies that accessible to the general public and communicates the factors that create a 'disconnection' in amongst a live video/sound collaboration. This fragmented connection between peers in both the virtual and real words consequently generates a fragmented intimacy, frustrations of connectivity (real-time <b>application),</b> <b>shared</b> absences and the desperation to connect from a distance as well as the body's needs of relieving sensual longing in regards to corporeal reality.|$|E
40|$|Previous <b>application</b> <b>sharing</b> {{systems have}} no unified {{communication}} protocols. The well known <b>application</b> <b>sharing</b> protocols include RFB (Remote FrameBuffer), RDP (Remote Desktop Protocol) and ITU-T T. 128. A generic <b>application</b> <b>sharing</b> architecture is proposed for providing {{the capability of}} connecting various <b>application</b> <b>sharing</b> servers with the same <b>application</b> <b>sharing</b> client. A communication standard for <b>application</b> <b>sharing</b> systems is defined based on the Message-Oriented Middleware (MOM). To compare with previous <b>application</b> <b>sharing</b> systems, there are many advantages including easy to use, easy to connect, easy to integrate, higher scalability and less bandwidth consumption. (C) 2007 Elsevier B. V. All rights reserved...|$|R
40|$|We present two {{experimental}} studies examining {{the effects of}} videoconferencing and <b>application</b> <b>sharing</b> on task performance. We studied performance on a cognitive reasoning task while subjects were observed via two-way video, one-way video and <b>application</b> <b>sharing.</b> Results demonstrate that performance is impaired when subjects are observed via media compared to {{when they are not}} observed. Surprisingly, we found no significant difference in awareness of the observer's presence between the <b>application</b> <b>sharing</b> and the two-way video conditions. This is surprising because <b>application</b> <b>sharing</b> lacks visual feedback of the observer. This finding contradicts social presence theory which claims that media which provides visual feedback of others produce the greatest sense of social presence. Our data also show that media use heightens the perception of task difficulty. We extend social presence theory and argue that these social effects need to be considered in the design and deployment of video and <b>application</b> <b>sharing</b> technologies for use in the workplace...|$|R
5000|$|Collaboration with file <b>sharing,</b> <b>application</b> <b>sharing</b> and desktop sharing ...|$|R
40|$|In {{this paper}} we first discuss briefly {{the role of}} {{technology}} requirements in the acceptance of a Computer Supported Collaborative Work (CSCW) application and propose a new taxonomy for classifying CSCW applications. We then introduce handheld computers and ongoing research in Handheld CSCW (HCSCW), classifying these applications according to our new taxonomy. Before applying handheld concepts to an existing CSCW application, we examine one such <b>application,</b> <b>shared</b> windows, in some detail. Finally, we bring all of these concepts together in a new research project: PShaW (Palmtop Shared Windows) ...|$|E
30|$|In {{dedicated}} networks, {{the communication}} resources are entirely utilized for synchrophasor communication {{and no other}} application can utilize these resources. Thus, the source of delay would be the processing delay at the PMU and the propagation delay. Thus, dedicated networks {{can be used to}} realize all of the synchrophasor <b>application.</b> <b>Shared</b> networks are economical and can be rapidly deployed. The communication resources are shared by several applications which increases the end-to-end delay and reduces the reliability of the communication network. As the synchrophasor applications are mission-critical, it is desirable to use dedicated communication resources, even though it increases the overall cost of the system.|$|E
40|$|A {{challenging}} {{issue in}} today's server systems is to transparently deal with failures and application-imposed requirements for continuous operation. In this {{paper we address}} this problem in shared virtual memory (SVM) clusters at the programming abstraction layer. We design extensions to an existing SVM protocol that has been tuned for lowlatency, high-bandwidth interconnects and SMP nodes and we achieve reliability through dynamic replication of <b>application</b> <b>shared</b> data and protocol information. Our extensions allow us to tolerate single (or multiple, but not simultaneous) node failures. We implement our extensions on a stateof -the-art cluster and we evaluate the common, failure-free case. We find that, although the complexity of our protocol is substantially higher than its failure-free counterpart, {{by taking advantage of}} architectural features of modern systems our approach imposes low overhead and can be employed for transparently dealing with system failures...|$|E
5000|$|Specific <b>application</b> <b>sharing</b> {{for showing}} only {{selected}} programs with attendees ...|$|R
25|$|The {{protocol}} is {{an extension}} of the ITU-T T.128 <b>application</b> <b>sharing</b> protocol.|$|R
5000|$|Lotus Sametime Unyte Share is a no-charge, {{one-on-one}} desktop <b>application</b> <b>sharing</b> service.|$|R
40|$|Stochastic budget {{analysis}} compares diversified hog {{and grain}} operations to a specialized cash grain operation based on fixed labor resource. Benefits to diversified farms include decreased fertilizer costs due to manure <b>application,</b> <b>shared</b> machinery costs, and more stable grain price/cost assurances. As modeled manure application covers nearly all fertilizer {{requirements of the}} grain operation, greatly reducing fertilizer costs. The diversified operation is able to have dual-purpose tractors, enabling them to spread the tractor costs over more hours. Lastly, combining a grain and hog operation allows both enterprises to improve price assurance by treating the grain operation as a cost center. Grain is priced to the hogs at cost of production, thereby protecting the hog operation from volatility in the corn market. The risk reduction benefit of diversification is overshadowed when the 2002 Farm Bill {{is included in the}} analysis...|$|E
40|$|Organizations seeking {{improvements}} in their performance are increasingly exploring alternative models and approaches for providing support services; one such approach being Shared Services. Because {{of the possible}} consequential impact of Shared Services on organizations, and given that information systems (IS) is both an enabler of Shared Services (for other functional areas) {{as well as a}} promising area for Shared Services <b>application,</b> <b>Shared</b> Services is an important area for research in the IS field. Though Shared Services has been extensively adopted on the promise of economies of scale and scope, factors of Shared Services success (or failure) have received little research attention. This paper reports the distillation of success and failure factors of Shared Services from an IS perspective. Employing NVIVO and content analysis of 158 selected articles, 9 key success factors and 5 failure factors are identified, suggesting important implications for practice and further research...|$|E
40|$|Distributed sensing {{has been}} the primary {{application}} domain for sensor networks. Nevertheless, the capabilities of sensor devices {{have the potential to}} enable a new class of applications that use these devices not only for sensing, but also for actuation. We have developed a data flow management system called MicroToPSS that enables such applications using resource-constrained sensor devices. The system supports declarative specification of the data flow between components of an automation <b>application,</b> <b>shared</b> query processing, view-based distributed indexing, and data flow optimization. We describe how aggregation service can be implemented using MicroToPSS. We evaluate the system using a Berkeley Mote testbed and we extrapolate the results in a scale-up evaluation to 8100 nodes. We show that the data flow optimizer can improve the delivery rate by 50 % in a testbed factory floor automation scenario and that it can support up to 3000 queries in a scale-up scenario. 1...|$|E
5000|$|T.128 - Multipoint <b>application</b> <b>sharing</b> (was {{known as}} T.share while in draft stage) ...|$|R
40|$|The <b>application</b> <b>sharing</b> {{mechanism}} in multi-application smart cards facilitates corroborative schemes between applications in a secure and reliable manner. Traditional <b>application</b> <b>sharing</b> {{can only be}} realised if both applications are installed on the same device. In this paper, we extend the smart card firewall to include the <b>application</b> <b>sharing</b> mechanism between <b>applications</b> installed on different smart cards. We propose Platform and Application Binding Protocols that enables two smart-cards / applications to authenticate and ascertain the trustworthiness before sharing resources. Furthermore, we provide an informal analysis of the protocols along with comparison with existing protocols. Subsequently, mechanical formal analysis based on the CasperFDR, and the implementation experience is presented...|$|R
5000|$|Windows <b>applications</b> <b>sharing,</b> by {{allowing}} participants {{to see and}} collaborate on a specific application.|$|R
40|$|International audienceEmbedded {{real-time}} signal, {{image and}} control applications have very significant time constraints and thus {{require the use}} of several powerful numerical calculation units. Self-time scheduling developed from single-processor applications cannot take advantage of multiprocessor architectures : manual data transfers and synchronizations quickly become very complex, leading wasted time and potential deadlocks. We aim to develop a fast and automatic prototyping process dedicated to parallel architectures especially suited to static executives. The process is based on SynDEx CAD software that improves algorithm implementation on multiprocessor architectures by finding the best match between algorithms and architectures. This paper describes how to use SynDEx, from the high level description of an application and its functional verification to final optimized multiprocessor execution. New SynDEx kernels are depicted for automatic multi-PC and multi-DSP dedicated code generation. Finally, we demonstrate the effectiveness of the approach with a full MPEG- 4 codec <b>application</b> <b>shared</b> on PC and multi-DSP platforms...|$|E
40|$|Abstract: Community, state, {{and federal}} {{approaches}} to conventional and cumulative risk assessment (CRA) were described and compared to assess similarities and differences, and develop recommendations for a consistent CRA approach, acceptable across each level as a rigorous scientific methodology, including partnership formation and solution development as necessary practices. Community, state, and federal examples were described and then summarized {{based on their}} adherence to CRA principles of: (1) planning, scoping, and problem formulation; (2) risk analysis and ranking, and (3) risk characterization, interpretation, and management. While each <b>application</b> <b>shared</b> the common goal of protecting {{human health and the}} environment, they adopted different approaches to achieve this. For a specific project-level analysis of a particular place or instance, this may be acceptable, but to ensure long-term applicability and transferability to other projects, recommendations for developing a consistent approach to CRA are provided. This approach would draw from best practices, risk assessment and decision analysis sciences, and historical lessons learned to provide results in an understandable and accepted manner by all entities. This approach is intended to provide a common ground around which to develop CR...|$|E
40|$|Community, state, {{and federal}} {{approaches}} to conventional and cumulative risk assessment (CRA) were described and compared to assess similarities and differences, and develop recommendations for a consistent CRA approach, acceptable across each level as a rigorous scientific methodology, including partnership formation and solution development as necessary practices. Community, state, and federal examples were described and then summarized {{based on their}} adherence to CRA principles of: (1) planning, scoping, and problem formulation; (2) risk analysis and ranking, and (3) risk characterization, interpretation, and management. While each <b>application</b> <b>shared</b> the common goal of protecting {{human health and the}} environment, they adopted different approaches to achieve this. For a specific project-level analysis of a particular place or instance, this may be acceptable, but to ensure long-term applicability and transferability to other projects, recommendations for developing a consistent approach to CRA are provided. This approach would draw from best practices, risk assessment and decision analysis sciences, and historical lessons learned to provide results in an understandable and accepted manner by all entities. This approach is intended to provide a common ground around which to develop CRA methods and approaches that can be followed at all levels...|$|E
50|$|<b>Application</b> <b>sharing,</b> shared whiteboard, chat, {{and file}} {{transfer}} features use T.120 standard over TCP/IP connections.|$|R
40|$|<b>Application</b> and desktop <b>sharing</b> allows <b>sharing</b> any <b>application</b> {{with one}} or more people over the Internet. The {{participants}} receive the screen-view of the <b>shared</b> <b>application</b> from the server. Their mouse and keyboard events are delivered and regenerated at the server. <b>Application</b> and desktop <b>sharing</b> enables collaborative work, software tutoring and e-learning over the Internet. We have developed an <b>application</b> and desktop <b>sharing</b> platform called ADS which is efficient, reliable, operating system independent, scales well, supports all applications and features true <b>application</b> <b>sharing.</b> 1...|$|R
50|$|<b>Application</b> <b>sharing</b> {{has been}} {{included}} in every version of Windows live messenger since 8.1 except for 8.2.|$|R
40|$|Transient faults are {{emerging}} as a critical concern in the reliability of microprocessors. While hardware reliability techniques are often employed for transient fault tolerance, software techniques represent a more cost-effective and flexible alternative. This paper proposes a software approach to transient fault tolerance which utilizes a run-time system to automatically apply process-level redundancy (PLR). PLR creates a set of redundant processes per application process and compares the processes during run time to guarantee correct execution. Redundancy at the process level allows the operating system to freely schedule the processes across all available hardware resources (i. e. extra threads or cores). PLR is a software-centric approach to transient fault tolerance in which the focus is shifted from ensuring correct hardware execution, to ensuring correct software execution. The software-centric approach is able to ignore many benign faults which do not propagate to affect the program output. In addition, the dynamic deployment creates a very flexible fault tolerant system which transparently applies PLR without prior modifications to the <b>application,</b> <b>shared</b> libraries, or operating system. Experiments using a real PLR prototype on an SMP machine demonstrate that PLR can effectively provide transient fault tolerance with a slowdown of only 1. 26 x. 1...|$|E
40|$|Abstract: With the {{advances}} {{in a variety}} of software/hardware technologies and wireless networking, there is coming a need for ubiquitous collaboration which allows people to access information systems independent of their access device and their physical capabilities and to communicate with other people in anytime and anywhere. Current virtual conferencing systems lack support for ubiquitous collaboration. As the number of collaborators with a large number of disparate access devices increases, mechanisms for dealing with consistency in an <b>application</b> <b>shared</b> among collaborators will have to be considered in an unambiguous manner. In this paper we address issues related in building a framework for synchronous and ubiquitous collaboration. First, to make ubiquitous collaboration more promising, we briefly present a framework built on heterogeneous (wire, wireless) computing environment and a set of session protocols defined in XML to provide a generic solution for controlling sessions and participants ’ presences in collaboration. Second, to provide a solution for maintaining shared state consistency at application level, we present a floor control mechanism which coordinates activities occurred in synchronously cooperating applications being shared among collaborators. The mechanism with strict conflict avoidance and non-optimistic locking strategy allows all participants to have the same views and data at all times. Finally, we show modeling of XGSP-Floor control mechanism and formal verification to prove the correctness of the modeled control mechanism...|$|E
40|$|This {{dissertation}} {{evaluated the}} implementation of professional learning communities in a large suburban school district in North Carolina. The presence of shared and supportive leadership, shared values and vision, collective learning and <b>application,</b> <b>shared</b> personal practice, supportive conditions for relationships, and supportive conditions for structures are all attributes that were assessed to determine the degree of implementation. A quantitative and qualitative program evaluation was conducted using the CIPP evaluation model to determine the degree of implementation of professional learning communities {{and whether or not}} the implementation has had an impact on student achievement based on state end of course test results. The CIPP model of program evaluation is a systematic process to evaluate the context, input, process and product of a particular program to determine the effectiveness of the program. Teacher members of the Algebra I, English 9, and Biology professional learning communities at each of the six high schools were asked to complete the Professional Learning Communities Assessment - Revised survey. The researcher also requested to observe a sample of professional learning community meetings with these teachers {{to determine whether or not}} there is evidence that certain characteristics of the professional learning community concept exist. Interviews were conducted with each of the 6 principals, the assistant superintendent of secondary education and the facilitator of professional development...|$|E
5000|$|Although not all {{software-as-a-service}} <b>applications</b> <b>share</b> all traits, {{the characteristics}} below are common among many SaaS applications: ...|$|R
50|$|Access is {{typically}} granted {{in one of}} three ways, depending on the architecture of the <b>application</b> <b>sharing</b> software.|$|R
5000|$|The printed {{works of}} liberature, {{although}} diverse in the <b>application,</b> <b>share</b> the following variables of the traversal function: ...|$|R
40|$|International audienceWith {{the rapid}} {{development}} of cloud computing technology, cloud-based team collaboration applications are becoming popular on the Web. Among all the required features {{for a typical}} team collaboration <b>application,</b> <b>shared</b> storage for referred documents or produced artifacts by the team is a must-have one. However, existing shared storage solutions for team collaboration applications are far from satisfaction. Some of them rely on self-built storage infrastructure, which could be a big burden, especially for those small or medium vendors. With the prevalence of personal cloud storage services, such as Dropbox and Google Drive, more team collaboration applications allow users to share files from their personal cloud-storage spaces through external shared links, which can partly solve the problem. However, this method is not convenient for team collaboration, neither safe enough. This paper presents an approach to leverage third-part personal cloud-storage services to provide shared storage for team collaboration applications. Compared to existing approaches, our approach provides sophisticated mechanisms to make sure it's more convenient and safer. It brings benefits in three folds: for users, it improves the utilization of personal cloud storage space, for vendors of personal cloud storage service, it helps attract users to use their services, for vendors of team collaboration applications, it reduces the burden of developing self-built storage infrastructure. The approach has been tested in kAct, a task-based team collaboration application provided by Kingdee, and the results are promisin...|$|E
40|$|This article {{describes}} the accurateness of our application namely Self-Developed Aesthetics Measurement Application (SDA) in measuring the aesthetics aspect {{by comparing the results}} of our application and users' perceptions in measuring the aesthetics of the web page interfaces. For this research, the positions of objects, images element and texts element are defined as objects in a web page interface. Mandarin learning web pages are used in this research. These learning web pages comprised of main pages, learning pages and exercise pages, on the first author's E-portfolio web site. The objects of the web pages were manipulated in order to produce the desired aesthetic values. The six aesthetics related elements used are balance, equilibrium, symmetry, sequence, rhythm, as well as order and complexity. Results from the research showed that the ranking of the aesthetics values of the web page interfaces measured of the users were congruent with the expected perceptions of our designed Mandarin learning web page interfaces (reported also in [18]). Thus, it implies that the subjectivity of aesthetics can be measured in an objective manner. For further understanding on our effort in doing aesthetics measurement, we discussed in details the object modelling used as well as the process in developing this application. We also explained the steps on how to run our application. Additionally, the strength and the weakness of our SDA <b>application</b> <b>shared</b> in this paper suggest that there is still room for the improvement for aesthetics measurement. Comment: 10 pages, 6 figure...|$|E
40|$|Abstract — With the {{advances}} {{in a variety}} of software/hardware technologies and wireless networking, there is coming a need for ubiquitous collaboration which allows people to access information systems independent of their access device and their physical capabilities and to communicate with other people in anytime and anywhere. Also, with the maturity of evolving computing paradigms and collaborative applications, a workspace for working together is being expanded from locally collocated physical place to geographically dispersed virtual place. Current virtual conferencing systems are not suitable for building integrated collaboration systems to work together in the same collaboration session. They also lack support for ubiquitous collaboration. As the number of collaborators with a large number of disparate access devices increases, mechanisms for dealing with consistency in an <b>application</b> <b>shared</b> among collaborators will have to be considered in an unambiguous manner. In this paper we address issues related in building a framework for synchronous and ubiquitous collaboration as well as heterogeneous community collaboration. First, to make ubiquitous collaboration more promising, we briefly present a framework built on heterogeneous (wire, wireless) computing environment and a set of session protocols defined in XML to provide a generic solution for controlling sessions and participants ’ presences in collaboration, developed by Global-MMCS (Global Multimedia Collaboration System) project in Community Grids Lab (CGL) at Indiana University. Second, to provide a solution for maintaining shared state consistency at application level, we present a floor control mechanism which coordinates activities occurred in synchronously cooperating applications being shared among collaborators. The mechanism with strict conflict avoidance and non-optimistic locking strateg...|$|E
40|$|With {{advances}} in hardware and networking technologies and mass manufacturing, {{the cost of}} high end hardware had fall dramatically in recent years. However, software cost still remains high and is the dominant fraction of the overall computing budget. <b>Application</b> <b>sharing</b> is a promising solution to reduce the overall IT cost. Currently software licenses are still {{based on the number}} of copies installed. An organization can thus reduce the IT cost if the users are able to remotely access the software that is installed on certain computer servers instead of running the software on every local computer. In this paper, we propose a generic <b>application</b> <b>sharing</b> architecture for users' <b>application</b> <b>sharing</b> in a cluster of closed operating systems such as Microsoft Windows. We also propose a broker-mediated solution where we allow multiple users to access a single user software license on a time multiplex basis through a single logged in user. An <b>application</b> <b>sharing</b> tool called ShAppliT has been introduced and implemented in Microsoft Windows operating system. We evaluated their performance on CPU usage and memory consumption when a computer is hosting multiple concurrent <b>shared</b> <b>application</b> sessions. Comment: 17 page...|$|R
40|$|Online {{collaboration}} tools {{exist and}} have been used {{since the early days}} of the Internet. Asynchronous tools such as wikis and discussion boards and real-time tools such as in-stant messaging and voice conferencing have been the only viable collaboration solutions up until recently, due to the low bandwidth between participants. With the increasing bandwidth in computer networks, multimedia collaboration such as <b>application</b> <b>sharing</b> and video conferencing have become feasible. <b>Application</b> and desktop <b>sharing</b> allows <b>sharing</b> of any <b>application</b> with one or more people over the Internet. The participants receive the screen-view of the <b>shared</b> <b>application</b> from the server. Their mouse and keyboard events are delivered and regenerated at the server. <b>Application</b> and desktop <b>sharing</b> enables collabo-rative work, software tutoring, and e-learning over the Internet. I have developed a high performance <b>application</b> and desktop <b>sharing</b> system called BASS which is efficient, reliable, independent of the operating system, scales well via heterogeneous multicast, supports all applications, and features true <b>application</b> <b>sharing.</b> Most of the time an <b>application</b> <b>sharing</b> session requires audio and video conferencing to be more useful. High quality video conferencing requires a fair amount of bandwidth an...|$|R
50|$|After Winny's {{development}} stopped, a new peer-to-peer <b>application,</b> <b>Share,</b> {{was developed}} by an anonymous Japanese engineer to replace Winny.|$|R
