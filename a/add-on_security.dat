11|9|Public
50|$|Logical access {{controls}} enforce access control measures for systems, programs, processes, and information. The controls can be embedded within operating systems, applications, <b>add-on</b> <b>security</b> packages, or database and telecommunication management systems.|$|E
40|$|As {{more and}} more {{services}} come under the purview of internet, online businesses have also made a flourishing start, {{so much so that}} a bulk of the business transactions have become web- based. Web services have found their way into sectors like banking, finance, construction, airlines, marketing, and telecommunication and so on. We propose to design an <b>add-on</b> <b>security</b> model which provides interoperable security for the business services. It will be flexible enough to adapt itself to the security requirements of a specific business. This <b>add-on</b> <b>security</b> service models will increase the security levels of the business services. The model designed is evaluated after integrating the <b>add-on</b> <b>security</b> services with the business services. The fundamental approach we follow, for creating our project is Model Drive...|$|E
40|$|Simple Mail Transport Protocol is {{the most}} widely adopted {{protocol}} for e-mail delivery. However, it lacks security features for privacy, authentication of sending party, integrity of e-mail message, nonrepudiation and consistency of e-mail envelope. To make e-mail communication secure and private, e-mail servers incorporate one or more security features using <b>add-on</b> <b>security</b> protocols. The <b>add-on</b> <b>security</b> protocols provide a reasonable security but have several limitations. This paper discusses limitations of e-mail security protocols, analyzes and evaluates their effectiveness in e-mail servers. It also proposes methods to improve efficiency of e-mail servers in detecting spoofed e-mails from domains that do not follow any standard anti-spoofing protocol. Further, it presents results of studies carried out to appraise e-mail user practice; knowledge of security protocols and their confidence in e-mail system...|$|E
40|$|This {{article focuses}} {{on the use of}} {{wireless}} sensor networks for airport security, respectively using sensor networks as a replacement or <b>add-on</b> to existing <b>security</b> measures. The article describes the sensor network and its possible application to various airport objects and financial analysis of the perimeter security with wireless sensor network. </span...|$|R
40|$|This paper {{deals with}} an <b>add-on</b> for {{biometric}} <b>security</b> systems, {{especially for the}} finger-print recognition technology. This added part of such systems is the liveness detection. Our method is based on detection of optical characteristics of the finger surface (skin). The main idea is to detect the movements of papillary lines, but some another optical information could be extracted, what is outlined at the end. 1...|$|R
5000|$|Firefox {{retains the}} {{cross-platform}} {{nature of the}} original Mozilla browser, using the XUL user interface markup language. The use of XUL {{makes it possible to}} extend the browser's capabilities through the use of extensions and themes. The development and installation processes of these <b>add-ons</b> raised <b>security</b> concerns, and with the release of Firefox 0.9, the Mozilla Foundation opened a Mozilla Update website containing [...] "approved" [...] themes and extensions. The use of XUL sets Firefox apart from other browsers, including other projects based on Mozilla's Gecko layout engine and most other browsers, which use interfaces native to their respective platforms (Galeon and Epiphany use GTK+; K-Meleon uses MFC; and Camino uses Cocoa). Many of these projects started before Firefox, and probably served as inspiration.|$|R
40|$|Security {{is often}} an afterthought when {{developing}} software, and is often bolted on late in development or even during deployment or maintenance, through activities such as pene-tration testing, <b>add-on</b> <b>security</b> software and penetrate-and-patch maintenance. We believe that security needs {{to be built in}} to the software from the beginning, and that security activities need to take place throughout the software lifecy-cle. Accomplishing this effectively and efficiently requires structured approach combining a detailed understanding on what causes vulnerabilities, and how specific activities com-bine to prevent them. In this paper we introduce key elements of the approach we are taking: vulnerability cause graphs, which encode in-formation about vulnerability causes, and security activity graphs, which encode information about security activities. We discuss how these can be applied to design software de-velopment processes (or changes to processes) that eliminate software vulnerabilities...|$|E
40|$|U. S. Government {{agencies}} and major vendors are actively attempting to secure critical infrastructure networks, but those efforts depend on patching unsecure, commodity systems, installing <b>add-on</b> <b>security</b> appliances, and applying other industry “best practices ” that are ineffective against new attacks and software subversion. This has unfortunately {{led to the}} conclusion {{that it is impossible to}} secure critical infrastructure networks and even that a completely new, “alternative ” Internet is needed. These conclusions disregard known and proven techniques for building secure, high-assurance, trusted systems – techniques developed as a result of years of research and engineering experience and systematically codified in the Trusted Computer System Evaluation Criteria (TCSEC) and related documents. Those techniques have not since been improved upon or adequately replaced, not even by the more recent Common Criteria for Information Technology Security Evaluation. In this paper, we sketch how the trusted systems technology codified in the TCSEC can be applied today to create a secure infrastructure network...|$|E
40|$|Copyright © 2014 ISSR Journals. This is an {{open access}} article {{distributed}} under the Creative Commons Attribution License, which permits unrestricted use, distribution, and reproduction in any medium, provided the original work is properly cited. ABSTRACT: Cloud computing is an up-and-coming technology and shared information, resources, software and hosting to customer on a pay-as-you-use basis. The major issues in cloud computing is the data protection security and it reduce {{the growth of the}} cloud computing. The security needs during the transmission of sensitive data and critical application to shared cloud environment. For secure communication over public network data can be protected by the method of encryption. So the proposed encryption techniques for secure data transmission, SSL over RSA with magic square provide <b>add-on</b> <b>security</b> to cryptosystem. To provide the confidentiality and integrity of data-in-transmission to and from cloud providers In this paper cryptographic methods RSA are discussed and combine Magic Square algorithm with RSA when implementing on data security in cloud computing...|$|E
50|$|Despite {{dominating}} {{market share}} (attaining {{a peak of}} 80% in mid-2004), it was notorious for its security holes and outdated features. In 2004, Mozilla finalised Firefox to rival IE6, and it became highly popular and acclaimed for its <b>security,</b> <b>add-ons,</b> speed and other modern features such as tabbed browsing. Microsoft was planning to fix these issues in Internet Explorer 7 by June-August 2005, but it was delayed until an October 2006 release, over 5 years after IE6 debuted.|$|R
50|$|Recently, UVIS {{systems have}} also {{integrated}} license plate recognition (LPR) software that can identify stolen or suspect vehicles, and help security personnel monitor suspected {{changes to the}} undercarriage of a returning vehicle. UVIS providers have also developed a variety of <b>security</b> <b>add-ons</b> such as external scene cameras to help personnel better detect, deter and communicate potential threats. Many systems also feature network integration, allowing the facility to access and use data from perimeter choke points for broader applications such as resource planning.|$|R
40|$|Abstract—Network {{security}} {{has become an}} essential business requirement {{over the past few}} years. As this demand will increase even more in the future, researchers agree that security must be a key element for any novel Next Generation Internet architecture. Contrary to today’s <b>add–on</b> approach to <b>security,</b> the mechanisms must be anchored in the overall architecture and should be a major concern already during the design phase. In this article we present an approach based on the private/public–key principle for almost any locator/identifier– split architecture. We suggest to extend the mapping system to also serve as public–key infrastructure and recommend to use smart cards for the client side key management...|$|R
40|$|Process Control System (PCS) and Industrial Control System (ICS) {{security}} {{is critical to}} our national security. But {{there are a number}} of technological, economic, and educational impediments to PCS owners implementing effective security on their systems. Sandia National Laboratories has performed the research and development of the OPSAID (Open PCS Security Architecture for Interoperable Design), a project sponsored by the US Department of Energy Office of Electricity Delivery and Energy Reliability (DOE/OE), to address this issue. OPSAID is an open-source architecture for PCS/ICS security that provides a design basis for vendors to build <b>add-on</b> <b>security</b> devices for legacy systems, while providing a path forward for the development of inherently-secure PCS elements in the future. Using standardized hardware, a proof-of-concept prototype system was also developed. This report describes the improvements and capabilities that have been added to OPSAID since an initial report was released. Testing and validation of this architecture has been conducted in another project, Lemnos Interoperable Security Project, sponsored by DOE/OE and managed by the National Energy Technology Laboratory (NETL) ...|$|E
40|$|Security {{is often}} an afterthought when {{developing}} software, and is often bolted on late in development or even during deployment or maintenance, through activities such as penetration testing, <b>add-on</b> <b>security</b> software and penetrate-and-patch maintenance. We believe that security needs {{to be built in}} to the software from the beginning, and that security activities need to take place throughout the software lifecycle. Accomplishing this effectively and efficiently requires structured approach combining a detailed understanding on what causes vulnerabilities, and how to prevent them. In this paper we present a process for software security that is based on vulnerability cause graphs, a formalism we have developed for modeling the causes of software vulnerabilities. The purpose of the software security process is to evolve the software development process so that vulnerabilities are prevented. The process we present differs from most current approaches to software security in its high degree of adaptability and in its ability to evolve in step with changing threats and risks. This paper focuses on how to apply the process and the criteria that have influenced the process design. 1...|$|E
40|$|Achieving {{higher level}} of {{security}} in message transfer over networked environment and the efficiency of a cryptographic algorithm is based on its time taken for encryption / decryption {{and the way it}} produces different cipher text from a clear text. The RSA, the widely used public key algorithm and other public key algorithms may not guarantee that the cipher text is fully secured. As an alternative approach to handling ASCII characters in the cryptosystems, a vertex magic total labeling of complete graph is thought of in this work. It attempts to enhance the efficiency by providing <b>add-on</b> <b>security</b> to the cryptosystem. This approach will increase the security due to its complexity in encryption because it deals with the VMTL formation that cannot be easily traced. Here, encryption / decryption is based on numerals contained in VMTL table rather than ASCII values. This proposed work provides another layer of security to any public key algorithms such as RSA, ElGamal etc. Since, this model is acting as a wrapper to a public key algorithm; it ensures that the security is enhanced. Further, this approach is experimented in a simulated environment with 2, and 4 processor...|$|E
40|$|Abstract—We {{present the}} first Internet {{architecture}} {{designed to provide}} route control, failure isolation, and explicit trust information for end-to-end communications. SCION separates ASes into groups of independent routing sub-planes, called trust domains, which then interconnect to form complete routes. Trust domains provide natural isolation of routing failures and human misconfiguration, give endpoints strong control for both inbound and outbound traffic, provide meaningful and enforceable trust, and enable scalable routing updates with high path freshness. As a result, our architecture provides strong resilience and security properties as an intrinsic consequence of good design principles, avoiding piecemeal <b>add-on</b> protocols as <b>security</b> patches. Meanwhile, SCION only assumes that a few top-tier ISPs in the trust domain are trusted for providing reliable end-to-end communications, thus achieving a small Trusted Computing Base. Both our security analysis and evaluation results show that SCION naturally prevents numerous attacks and provides {{a high level of}} resilience, scalability, control, and isolation. I...|$|R
40|$|Summary. In {{this paper}} we discuss an {{efficient}} implementation of anonymous credentials on smart cards. In general, privacy-preserving protocols are computationally intensive and {{require the use of}} advanced cryptography. Implementing such protocols for smart cards involves a trade-off between the requirements of the protocol and the capabilities of the smart card. In this context we concentrate on the implementation of Microsoft’s U-Prove technology on the MULTOS smart card platform. Our implementation aims at making the smart card independent of any other resources, either computational or storage. In contrast, Microsoft suggests an alternative approach based on device-protected tokens which only uses the smart card as a <b>security</b> <b>add-on.</b> Given our very good performance results we argue that our approach should be considered in favour of Microsoft’s one. Furthermore we provide a brief comparison between Java Card and MULTOS which illustrates our choice to implement this technology on the latter more flexible and low-level platform rather than the former. Key words: anonymous credentials, smart cards, U-Prove, MULTOS, Java Card...|$|R
40|$|Abstract—Java Agent Development Framework (JADE) is a {{software}} framework to make easy {{the development of}} Multi-Agent applications {{in compliance with the}} Foundation for Intelligent Physical Agents (FIPA) specifications. JADE propose new infrastructure solutions to support the development of useful and convenient distributed applications. Security {{is one of the most}} important issues in implementing and deploying such applications. JADE-S <b>security</b> <b>add-ons</b> are one of the most popular security solutions in JADE platform. It provides several security services including authentication, authorization, signature and encryption services. Authorization service will give authorities to perform an action based on a set of permission objects attached to every authenticated user. This service has several drawbacks when implemented in a scalable distributed context aware applications. In this paper, an ontology-based access control model called (OJADEAC) is proposed to be applied in JADE platform by combining Semantic Web technologies with context-aware policy mechanism to overcome the shortcoming of this service. The access control model is represented by a semantic ontology, and a set of two level semantic rules representing platform and application specific policy rules. OJADEAC model is distributed, intelligent, dynamic, context-aware and use reasoning engine to infer access decisions based on ontology knowledge...|$|R
40|$|A {{body sensor}} network that {{consists}} of wearable and/or implantable biosensors {{has been an important}} front-end for collecting personal health records. It is expected that the full integration of outside-hospital personal health information and hospital electronic health records will further promote preventative health services as well as global health. However, the integration and sharing of health information is bound to bring with it security and privacy issues. With extensive development of healthcare applications, security and privacy issues are becoming increasingly important. This paper addresses the potential security risks of healthcare data in Internet-based applications and proposes a method of signal scrambling as an <b>add-on</b> <b>security</b> mechanism in the application layer for a variety of healthcare information, where a piece of tiny data is used to scramble healthcare records. The former is kept locally and the latter, along with security protection, is sent for cloud storage. The tiny data can be derived from a random number generator or even a piece of healthcare data, which makes the method more flexible. The computational complexity and security performance in terms of theoretical and experimental analysis has been investigated to demonstrate the efficiency and effectiveness of the proposed method. The proposed method is applicable to all kinds of data that require extra security protection within complex networks...|$|E
40|$|Currently, {{security}} is frequently considered late in software life cycle. It is often bolted on late in development, or even during deployment or maintenance, through {{activities such as}} <b>add-on</b> <b>security</b> software and penetration-and-patch maintenance. Even if software developers aim to incorporate security into their products {{from the beginning of}} the software life cycle, they face an exhaustive amount of ad hoc unstructured information without any practical guidance on how and why this information should be used and what the costs and benefits of using it are. This is due to a lack of structured methods. In this thesis we present a model for secure software development and implementation of a security plug-in that deploys this model in software life cycle. The model is a structured unified process, named S 3 P (Sustainable Software Security Process) and is designed to be easily adaptable to any software development process. S 3 P provides the formalism required to identify the causes of vulnerabilities and the mitigation techniques that address these causes to prevent vulnerabilities. We present a prototype of the security plug-in implemented for the OpenUP/Basic development process in Eclipse Process Framework. We also present the results of the evaluation of this plug-in. The work in this thesis is a first step towards a general framework for introducing security into the software life cycle and to support software process improvements to prevent recurrence of software vulnerabilities. Report code: LiU-Tek-Lic- 2008 : 11...|$|E

