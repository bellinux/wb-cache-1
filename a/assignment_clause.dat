2|29|Public
5000|$|... == <b>Assignment</b> <b>clause</b> == <b>Assignment</b> <b>clause</b> {{is based}} on prohibiting or {{permitting}} a complete transfer or rights under the contract to another party.|$|E
40|$|We {{show that}} {{analyzing}} voltage fluctuations known as "event-related brain potentials," or ERPs, recorded {{from the human}} scalp {{can be an effective}} way of tracking integrative processes in language on-line. This is essential if we are to choose among alternative psychological accounts of language comprehension. We briefly review the data implicating the N 400 as an index of semantic integration and describe its use in psycholinguistic research. We then introduce a cognitive neuroscience approach to normal sentence processing, which capitalizes on the ERP's fine temporal resolution as well as its potential linkage to both psychological constructs and activated brain areas. We conclude by describing several reliable ERP effects with different temporal courses, spatial extents, and hypothesized relations to comprehension skill during the reading of simple transitive sentences; these include (1) occipital potentials related to fairly low-level, early visual processing, (2) very slow frontal positive shifts related to high-level integration during construction of a mental model, and (3) various frontotemporal potentials associated with thematic role <b>assignment,</b> <b>clause</b> endings, and manipulating items that are in working memories...|$|E
50|$|It is {{possible}} for contracts of employment to contain express <b>assignment</b> <b>clauses</b> or to otherwise deal with the ownership of any intellectual property rights created by an employee.|$|R
40|$|<b>Assignment</b> <b>clauses</b> in non-retail {{commercial}} leases are as infinitely {{varied as}} {{the circumstances in which}} disputes arise. Each clause must be individually interpreted as part of the lease in which it is embedded. Whilst the assignment of a lease {{is one of the most}} commonplace transactions between lessor and lessee, the case law reveals few unifying principles. This article seeks to cautiously identify a set of principles which should be in the mind of any lawyer when a dispute relating to an assignment arises. It concludes with a short checklist of matters which must be considered by such a person to encourage the application of principles in the first instance towards a resolution of the dispute...|$|R
40|$|AbstractWe {{consider}} random instances I of a {{constraint satisfaction}} problem generalizing k-SAT: given {{a set of}} ordered k-tuples over n literals, {{and a set of}} q “bad” <b>clause</b> <b>assignments,</b> find an assignment which does not set any of the k-tuples to a bad <b>clause</b> <b>assignment.</b> We consider the case where k=Ω(logn), and study the probability of satisfiability for a random instance I formed by including every k-tuple of literals independently with probability p. Appropriate choice of the bad <b>clause</b> <b>assignments</b> results in random instances of k-SAT and not-all-equal k-SAT. A second moment method calculation yields the sharp thresholdlimn→∞Pr[Iissatisfiable]= 1 ifp⩽(1 −ε) ln 2 /qnk− 1, 0 ifp⩾(1 +ε) ln 2 /qnk− 1...|$|R
3000|$|... of HORN-SAT, {{a subset}} A of Y is gf−compatible if {{and only if}} the {{following}} truth <b>assignment</b> satisfies every <b>clause</b> in [...]...|$|R
40|$|Summarises the {{findings}} of two qualitative studies assessing the effect of ban on <b>assignment</b> (BoA) <b>clauses</b> in trade receivables financing. Reviews the law applicable to the assignment of receivables to a financier, noting uncertainty over {{the effect of a}} BoA clause. Considers whether BoAs in supply contracts adversely affect the availability of finance to small businesses and result in the use of workarounds, thereby increasing the cost of financ...|$|R
5000|$|Now, {{define a}} bad event Aj for each clause in Φ, where Aj is {{the event that}} clause j in Φ is {{unsatisfied}} by the current <b>assignment.</b> Since each <b>clause</b> contains k literals (and therefore k variables) and since all variables are sampled uniformly at random, we can bound the probability of each bad event by ...|$|R
40|$|AbstractThe {{representation}} of the set of falsifying <b>assignments</b> of <b>clauses</b> via binary patterns has been useful {{in the design of}} algorithms for solving #FAL (counting the number of falsifying assignments of conjunctive forms (CF)). Given as input a CF formula F expressed by m clauses defined over n variables, we present a deterministic algorithm for computing #FAL(F). Principally, our algorithm computes non-intersecting subsets of falsifying assignments of F until the space of falsifying assignments defined by F is covered. Due to #SAT(F) = 2 n-#FAL(F), results about #FAL can be established dually for #SAT. The time complexity of our proposals for computing #FAL(F) is established according to the number of clauses and the number of variables of F...|$|R
50|$|Every nonempty clause is logically {{equivalent}} to an implication {{of a head}} from a body, where the head is an arbitrary literal of the clause and the body is the conjunction of the negations of the other literals. That is, if a truth <b>assignment</b> causes a <b>clause</b> to be true, {{and none of the}} literals of the body satisfy the clause, then the head must also be true.|$|R
40|$|Abstract. The {{representation}} of the set of falsifying <b>assignments</b> of <b>clauses</b> via binary patterns has been useful {{in the design of}} algorithms for solving #FAL (counting the number of falsifying assignments of con-junctive forms (CF)). Given as input a CF formula F expressed by m clauses defined over n variables, we present a deterministic algorithm for computing #SAT (F). Initially, our algorithm computes non-intersecting subsets of falsifying assignments of F until the space of falsifying assign-ments defined by F is covered. Due to #SAT(F) = 2 n-#FAL(F), results about #FAL can be established dually for #SAT. The time complexity of our proposals for computing #SAT(F) is established according with the number of clauses and the number of variables of F...|$|R
50|$|Both {{algorithms}} work on formulae in Boolean {{logic that}} are in, {{or have been}} converted into, conjunctive normal form. They start by assigning a random value to each variable in the formula. If the <b>assignment</b> satisfies all <b>clauses,</b> the algorithm terminates, returning the assignment. Otherwise, a variable is flipped and the above is then repeated until all the clauses are satisfied. WalkSAT and GSAT differ in the methods used to select which variable to flip.|$|R
50|$|In any 3-coloring of the {{resulting}} graph, one may designate the three colors as being true, false, or ground, where false and ground are the colors given to the false and ground vertices (necessarily different, as these vertices are made adjacent by the construction) and true is the remaining color not used by either of these vertices. Within a variable gadget, only two colorings are possible: the vertex labeled with the variable must be colored either true or false, and the vertex labeled with the variable's negation must correspondingly be colored either false or true. In this way, valid assignments of colors to the variable gadgets correspond one-for-one with truth assignments to the variables: {{the behavior of the}} gadget with respect to coloring simulates the behavior of a variable with respect to truth assignment.Each <b>clause</b> <b>assignment</b> has a valid 3-coloring if at least one of its adjacent term vertices is colored true, and cannot be 3-colored if all of its adjacent term vertices are colored false. In this way, the clause gadget can be colored if and only if the corresponding truth <b>assignment</b> satisfies the <b>clause,</b> so again the behavior of the gadget simulates the behavior of a clause.|$|R
40|$|The large modern {{business}} corporation is frequently organized {{as a complex}} cluster of hundreds of corporate subsidiaries under the common control of a single corporate parent. Our paper provides new theory and supportive evidence that help explain this structure. We focus, in particular, on the advantages of subsidiary entities in providing the option to transfer {{some or all of}} the firm 2 ̆ 7 s contractual rights and obligations in the future. The theory not only sheds light on corporate subsidiaries, but illuminates a basic function of all types of legal entities, from partnerships to nonprofit corporations. We show that when, as is common, some of a firm’s key assets are contractual, both the firm’s owner(s) and the firm’s contractual counterparties are exposed to the risk of opportunism regarding assignment of the contracts. The owner faces opportunistic holdup by counterparties if counterparty consent is required to assign contracts in a sale of the entire firm. The firm’s counterparties, in turn, are exposed to opportunistic assignment if the owner can freely assign contracts without consent. This bilateral opportunism problem can be mitigated through bundled assignability: the owner is permitted to assign her contracts freely, but only as a bundle. The components of the bundle of contracts (which constitutes much of the firm itself) provide assurance of performance to counterparties. And free transferability, in turn, gives the owner liquidity without risk of holdup. Most importantly [...] and least appreciated in the literature and the case law [...] bundled assignability increases the owner’s incentive to make valuable investments in the firm. We explain why legal entities provide the simplest reliable means of creating bundled assignability. Further, we support our analysis with the first empirical study of <b>assignment</b> <b>clauses</b> in commercial contracts. Firms, we show, commonly provide for bundled assignability in their contracts, and they use legal entities to define the boundaries of transferable bundles. This suggests that, in practice, contracting parties are aware of the forces underlying our theory...|$|R
40|$|The large, modern {{business}} corporation is frequently organized {{as a complex}} cluster of hundreds of corporate subsidiaries under the common control of a single corporate parent. Our Article provides new theory and supportive evidence to help explain this structure. We focus, in particular on the advantages of subsidiary entities in providing the option to transfer {{some or all of}} the firm 2 ̆ 7 s contractual rights and obligations in the future. The theory not only sheds light on corporate subsidiaries but also illuminates a basic function of all types of legal entities, from partnerships to nonprofit corporations. We show that when, as is common, some of a firm 2 ̆ 7 s key assets are contractual, both the firm 2 ̆ 7 s owner(s) and its contractual counterparties are exposed to the risk of opportunism relating to the assignment of the contracts. The owner faces opportunistic holdup by counterparties if counterparty consent is required to assign contracts in a sale of the entire firm. The firm 2 ̆ 7 s counterparties, in turn, are exposed to opportunistic assignment if the owner can freely assign contracts without consent. This bilateral opportunism problem can be mitigated through bundled assignability: the owner is permitted to assign her contracts freely but only as a bundle. The components of the bundle of contracts (which constitute much of the firm itself) provide assurance of performance to counterparties. And free transferability, in turn, gives the owner liquidity without risk of holdup. Most importantly - and least appreciated in the literature and the case law - bundled assignability increases the owner 2 ̆ 7 s incentive to make valuable investments in the firm. We explain why legal entities provide the simplest, most reliable means of creating bundled assignability. Further, we support our analysis with the first empirical study of <b>assignment</b> <b>clauses</b> in commercial contracts. Firms, we show, commonly provide for bundled assignability in their contracts, and they use legal entities to define the boundaries of transferable bundles. This suggests that our theoretical model accurately captures the motivations of contracting parties in practice...|$|R
5|$|The 2-satisfiability {{problem is}} to find a truth {{assignment}} to these variables that makes the whole formula true. Such an assignment chooses whether to make each of the variables true or false, so that at least one literal to true in every clause becomes true. For the expression shown above, one possible satisfying assignment is the one that sets all seven of the variables to true. Every clause has at least one non-negated variable, so this <b>assignment</b> satisfies every <b>clause.</b> There are also 15 other ways of setting all the variables so that the formula becomes true. Therefore, the 2-satisfiability instance represented by this expression is satisfiable.|$|R
40|$|In this study, {{it will be}} {{analyzed}} that the inner clause subject is assigned with genitive case in Old Turkic, {{which is the first}} period of Turkish language. In Modern Turkish, the <b>assignment</b> of inner <b>clause</b> subject is made by the head modifier, whereas it is made by the head determiner in Dagur and Modern Uigur. According to this classification made by Miyagawa (2008), it will {{be analyzed}} in this study whether Old Turkic is a C-licensing or a D-licensing language. Furthermore, the state of the inner clause subject being assigned with genitive case in Old Turkic will be compared with genitive case assignments in Modern Turkish, Old Anatolian Turkish, and Modern Uigur...|$|R
40|$|We {{consider}} {{the question of}} the existence of variables with few occurrences in boolean conjunctive normal forms (clause-sets). Let mvd(F) for a clause-set F denote the minimal variable-degree, the minimum of the number of occurrences of variables. Our main result is an upper bound mvd(F) nM(surp(F)) must have a non-trivial autarky (so clauses can be removed satisfiability-equivalently by an <b>assignment</b> satisfying some <b>clauses</b> and not touching the other clauses). It is open whether such an autarky can be found in polynomial time. As a future application we discuss the classification of minimally unsatisfiable clause-sets depending on the deficiency. Comment: 14 pages. Revision contains more explanations, and more information regarding the sharpness of the boun...|$|R
500|$|Satisfiability, in turn, was proved NP-complete in the Cook–Levin theorem. From a given CNF formula, Karp forms a graph {{that has}} a vertex for every pair , where [...] is a {{variable}} or its negation and [...] is a clause in the formula that contains [...] Two of these vertices are connected by an edge if they represent compatible variable <b>assignments</b> for different <b>clauses.</b> That is, there is an edge from [...] to [...] whenever [...] and [...] and [...] are not each other's negations. If [...] denotes the number of clauses in the CNF formula, then the -vertex cliques in this graph represent consistent ways of assigning truth values to some of its variables {{in order to satisfy}} the formula. Therefore, the formula is satisfiable if and only if a -vertex clique exists.|$|R
40|$|Max-SAT-CC is the {{following}} optimization problem: Given a formula in CNF and a bound k, find an assignment with at most k variables being set to true that maximizes the number of satisfied clauses among all such <b>assignments.</b> If each <b>clause</b> is restricted to have at most ℓ literals, we obtain the problem Max-ℓSAT-CC. Sviridenko (Algorithmica, 30 (3) : 398 – 405, 2001) designed a (1 − e − 1) -approximation algorithm for Max-SAT-CC. This result is tight unless P = NP (Feige, J. ACM, 45 (4) : 634 – 652, 1998). Sviridenko asked if {{it is possible to}} achieve a better approximation ratio in the case of Max-ℓSAT-CC. We answer this question in the affirmative by presenting a randomized approximation algorithm whose approximation ratio is 1 −(1 − 1 ℓ) ℓ −ε. To do this, we develop a general technique for adding a cardinality constraint to certain integer programs. Our algorithm can be derandomized using pairwise independent random variables with small probability space...|$|R
40|$|Abstract. We use {{the notion}} of {{boundary}} points to study resolution proofs. Given a CNF formula F, a lit(x) -boundary point is a complete <b>assignment</b> falsifying only <b>clauses</b> of F having the same literal lit(x) of variable x. A lit(x) -boundary point mandates a resolution on variable x. Adding the resolvent of this resolution to F eliminates this boundary point. Any resolution proof has to eventually eliminate all boundary points of F. Hence one can study resolution proofs {{from the viewpoint of}} boundary point elimination. We use equivalence checking formulas to compare proofs of their unsatisfiability built by a conflict driven SAT-solver and very short proofs tailored to these formulas. We show experimentally that in contrast to proofs generated by this SAT-solver, almost every resolution of a specialized proof eliminates a boundary point. This implies that one may use the share of resolutions eliminating boundary points as a metric for proof quality. Keywords: SAT-solver, boundary points, resolution, proof quality...|$|R
40|$|I {{describe}} a real-time implementation of Ullman 's visual routine processor (VRP) theory of intermediate vision for visual search. The system performs serial self-terminating visual search and computes 2 D spatial relations of objects from live color video using low cost hardware. I present a formal {{model of a}} VRP with unbounded resources and quantify the amount of external control structure required to solve Horn clauses using the VRP. In discussing the effect of resource limitations I show that contemporary models of biological visual attention are unable to solve surprisingly simple queries. I also {{describe a}} novel logic programming system that finds satisfying variable <b>assignments</b> for Horn <b>clause</b> queries using the VRP. The system contains no internal database: all logic variables are directly grounded in the world using VRP queries. Finally, I briefly discuss experiments with natural language interpretation and motor control using the VRP. Experiments on real data are given. 1 1 In [...] ...|$|R
5000|$|Karp's NP-completeness {{proof is}} a many-one {{reduction}} from the Boolean satisfiability problem.It describes how to translate Boolean formulas in {{conjunctive normal form}} (CNF) into equivalent instances of the maximum clique problem.Satisfiability, in turn, was proved NP-complete in the Cook-Levin theorem. From a given CNF formula, Karp forms a graph that has a vertex for every pair , where [...] is a variable or its negation and [...] is a clause in the formula that contains [...] Two of these vertices are connected by an edge if they represent compatible variable <b>assignments</b> for different <b>clauses.</b> That is, there is an edge from [...] to [...] whenever [...] and [...] and [...] are not each other's negations. If [...] denotes the number of clauses in the CNF formula, then the -vertex cliques in this graph represent consistent ways of assigning truth values to some of its variables {{in order to satisfy}} the formula. Therefore, the formula is satisfiable if and only if a -vertex clique exists.|$|R
40|$|The {{purpose of}} this article is to examine the nature of {{assignment}} as it relates to contractual debts and contractual rights in general, before addressing problems presented by non-assignment <b>clauses.</b> 1 The <b>assignment</b> of things in action sits precariously between contract law and property law and non-assignment clauses cannot properly be understood without an appreciation of this hybrid character of <b>assignment.</b> 2 Non-assignment <b>clauses</b> pose the question whether and in what circumstances contractual rights are items of property. They also demand an examination of the doctrine of privity of contract and a response to the question whether one contracting party has the right unilaterally to vary the contract. Finally, non-assignment clauses set two primary values at odds with each other, namely freedom of contract and the free alienation of items of property. To a significant extent, the practical problems presented by non-assignment clauses will diminish when expected secondary legislation nullifying non-assignment clauses in the field of receivables (or book debts) comes into force, 3 but some of the leading cases do not involve receivables and the subject therefore continues to merit attention for practical as well as for theoretical reasons...|$|R
2500|$|Conversely, every median graph {{must be the}} retract of a hypercube. [...] This may be {{seen from}} the connection, {{described}} above, between median graphs and 2-satisfiability: let G be the graph of solutions to a 2-satisfiability instance; without loss of generality this instance can be formulated {{in such a way that}} no two variables are always equal or always unequal in every solution. [...] Then the space of all truth assignments to the variables of this instance forms a hypercube. [...] For each clause, formed as the disjunction of two variables or their complements, in the 2-satisfiability instance, one can form a retraction of the hypercube in which truth <b>assignments</b> violating this <b>clause</b> are mapped to truth assignments in which both variables satisfy the clause, without changing the other variables in the truth assignment. [...] The composition of the retractions formed in this way for each of the clauses gives a retraction of the hypercube onto the solution space of the instance, and therefore gives a representation of G as the retract of a hypercube. [...] In particular, median graphs are isometric subgraphs of hypercubes, and are therefore partial cubes. [...] However, not all partial cubes are median graphs; for instance, a six-vertex cycle graph is a partial cube but is not a median graph.|$|R
40|$|A truth {{assignment}} is a mapping f that assigns 0 (interpreted as “false”) or 1 (interpreted as “true”) to each variable in its domain; we shall enumerate all the variables in this domain as x 1, [...] ., xn. The complement xi of each such variable xi {{is defined by}} f(xi) = 1 − f(xi) for all truth assignments f; both xi and xi are called literals; if u = xi then u = xi. A clause {{is a set of}} (distinct) literals and a formula (in a conjunctive normal form) is a family of (not necessarily distinct) <b>clauses.</b> A truth <b>assignment</b> satisfies a <b>clause</b> if it maps at least one of its literals to 1; the assignment satisfies a formula if and only if it satisfies each of its clauses. A formula is called satisfiable if it is satisfied by at least one truth assignment; otherwise it is called unsatisfiable. The problem of recognizing satisfiable formulas is known as the satisfiability problem, or SAT for short. Solving SAT by implicit enumeration Given a formula F and a literal v in F, we let F|v denote the “residual formula ” arising from F when f(v) is set at 1 : explicitly, this formula i...|$|R
5000|$|Conversely, every median graph {{must be the}} retract of a hypercube. [...] This may be {{seen from}} the connection, {{described}} above, between median graphs and 2-satisfiability: let G be the graph of solutions to a 2-satisfiability instance; without loss of generality this instance can be formulated {{in such a way that}} no two variables are always equal or always unequal in every solution. Then the space of all truth assignments to the variables of this instance forms a hypercube. For each clause, formed as the disjunction of two variables or their complements, in the 2-satisfiability instance, one can form a retraction of the hypercube in which truth <b>assignments</b> violating this <b>clause</b> are mapped to truth assignments in which both variables satisfy the clause, without changing the other variables in the truth assignment. The composition of the retractions formed in this way for each of the clauses gives a retraction of the hypercube onto the solution space of the instance, and therefore gives a representation of G as the retract of a hypercube. In particular, median graphs are isometric subgraphs of hypercubes, and are therefore partial cubes. However, not all partial cubes are median graphs; for instance, a six-vertex cycle graph is a partial cube but is not a median graph.|$|R
40|$|We use {{the notion}} of {{boundary}} points to study resolution proofs. Given a CNF formula F, an l(x) -boundary point is a complete <b>assignment</b> falsifying only <b>clauses</b> of F having the same literal l(x) of variable x. An l(x) -boundary point p mandates a resolution on variable x. Adding the resolvent of this resolution to F eliminates p as an l(x) -boundary point. Any resolution proof has to eventually eliminate all boundary points of F. Hence one can study resolution proofs {{from the viewpoint of}} boundary point elimination. We use equivalence checking formulas to compare proofs of their unsatisfiability built by a conflict driven SAT-solver and very short proofs tailored to these formulas. We show experimentally that in contrast to proofs generated by this SAT-solver, almost every resolution of a specialized proof eliminates a boundary point. This implies that one may use the share of resolutions eliminating boundary points as a metric of proof quality. We argue that obtaining proofs with a high value of this metric requires taking into account the formula structure. We show that for any unsatisfiable CNF formula there always exists a proof consisting only of resolutions eliminating cut boundary points (which are a relaxation of {{the notion of}} boundary points). This result enables building resolution SAT-solvers that are driven by elimination of cut boundary points. This chapter is an extended version of the conference paper [9]...|$|R
40|$|Many morphologically ergative {{languages}} display asymmetries in {{the extraction}} of core arguments: while absolutive arguments (transitive objects and intransitive subjects) extract freely, ergative arguments (transitive subjects) cannot. This falls under the label “syntactic ergativity” (see, e. g. Dixon 1972, 1994; Manning 1996; Polinsky to appear(b)). These extraction asymmetries are found in many languages of the Mayan family, where in order to extract transitive subjects (for focus, questions, or relativization), a special construction known as the “Agent Focus” (AF) must be used. These AF constructions {{have been described as}} syntactically and semantically transitive because they contain two non-oblique DP arguments, but morphologically intransitive because the verb appears with only a single agreement marker and takes an intransitive status suﬃx (Aissen 1999; Stiebels 2006). In this paper we oﬀer a proposal for (i) why some morphologically ergative languages exhibit extraction asymmetries, while others do not; and (ii) how the AF construction in Q’anjob’al circumvents this problem. We adopt recent accounts which argue that ergative languages vary in the locus of absolutive case assignment (Aldridge 2004, 2008 a; Legate 2002, 2008), and propose that this variation is present within the Mayan family. Based primarily on comparative data from Q’anjob’al and Chol, we argue that the inability to extract ergative arguments does not reflect a problem with properties of the ergative subject itself, but rather reflects locality properties of absolutive case <b>assignment</b> in the <b>clause.</b> We show how the AF morpheme -on circumvents this problem in Q’anjob’al by assigning case to internal arguments...|$|R
40|$|In {{the gaming}} industry, a {{decentralized}} form of content creation leveraging {{the creativity of}} players has gained significant traction during recent years. Increasingly, players are involved in not only the consumption, but also the production of game content through various practices collectively referred to as “game modding. ” In this study, the practice of creating computer game modifications (“game mods”) is examined {{from the viewpoint of}} Finnish copyright law and, complementarily, contract law. The purpose of the study is, first of all, to analyze whether and to what extent player-made game mods may constitute original expression in which copyright subsists according to the law. In that regard, it is also considered whether the rights in game mods may be independent of the copyright in the original computer game. Secondly, this study examines the practice of acquiring rights in player-made creations through <b>assignment</b> or license <b>clauses</b> included in the standard terms associated with a computer game, i. e. the End User License Agreement (EULA). This contractual practice is, in particular, examined in light of the Finnish doctrine on standard form contracts as well as the doctrine on unfair contractual terms. Under copyright law, the products of game modding are subject to the same requirements for protection as any other subject matter. Therefore, those player contributions are protected by copyright, provided that they are original {{in the sense that they}} constitute their author’s own intellectual creation. In this light, many kinds of modding related creations such as in-game avatars and gameplay levels can reach the threshold for copyright protection. Whether or not such player contributions are protected independently of the original game or as derivative creations is a matter that needs to be determined based on the particularities of each case. On the abstract level, neither alternative can be excluded. At the same time, many innovative or valuable features of game mods fall outside the scope of copyright protection. These features include inter alia gameplay mechanics and concepts for game modes. Nonetheless, the fact that game mods are, at least to some extent, protected by copyright means that those rights need to be dealt with in the player–developer relationship. This is typically accomplished through the EULA. In that respect, Finnish law imposes both formal and material minimum requirements and limitations to how copyright can validly be transferred from players to the developer in such a context. From the viewpoint of the doctrine on standard form contracts, a standardized <b>assignment</b> or license <b>clause</b> included in a EULA is only likely to become binding on a player, if she is actually notified of the existence of the term and provided the opportunity to become acquainted with it prior to the conclusion of agreement. On the other hand, a player-to-developer copyright transfer is only unenforceable for material reasons if it is “unfair” in the meaning of Section 36 of the Contracts Act. In principle, such a transfer of copyright could be deemed unfair if it is significantly imbalanced. This might be the case in situations where the EULA sets out an exceptionally broad transfer of rights or where the player’s contributions turn out to have exceptional value. In practice, it is probable that standard terms are accepted as enforceable as long as certain minimum requirements are observed. Further, Finnish courts of law have, in practice, demonstrated a reluctance to intervene in transfers of copyright based on unfairness. Thus, it is found that, while certain requirements and limitations need to be observed, transfers of copyright executed through a EULA are likely to be generally valid under Finnish law. Conversely, this means that it may be difficult for players to challenge the transfer of copyright executed under a EULA. It is, however, unclear whether this is in practice a significant inadequacy in a player’s legal position. For instance, it is likely that some of the most “unfair” situations are addressed and resolved through other means, such as by the developer subsequently recruiting a particularly accomplished modder...|$|R

