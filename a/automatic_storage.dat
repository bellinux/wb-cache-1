151|89|Public
25|$|As in C, C++ {{supports}} {{four types}} of memory management: static storage duration objects, thread storage duration objects, <b>automatic</b> <b>storage</b> duration objects, and dynamic storage duration objects.|$|E
25|$|Lisp was {{originally}} {{created as a}} practical mathematical notation for computer programs, influenced by the notation of Alonzo Church's lambda calculus. It quickly became the favored programming language for artificial intelligence (AI) research. As {{one of the earliest}} programming languages, Lisp pioneered many ideas in computer science, including tree data structures, <b>automatic</b> <b>storage</b> management, dynamic typing, conditionals, higher-order functions, recursion, the self-hosting compiler, and the read–eval–print loop.|$|E
25|$|Better {{utilisation}} {{of space}} at TNB resulted {{in two and}} a half times more berthing space than Brani, even though TNB only has a shoreline of 850m (0.5mi). Provision was also made for recreational facilities. Automation was incorporated into the design of TNB to reduce manpower requirements, such as mechanical ramps for the loading and unloading of vehicles and an <b>automatic</b> <b>storage</b> and retrieval system. It also has a floating dock which can lift 600 tonnes and transfer a ship from sea to land to facilitate repairs and maintenance.|$|E
5000|$|... #Caption: <b>Automatic</b> {{underground}} car <b>storage</b> in Thessaloniki, Greece ...|$|R
5000|$|... #Caption: The Electronic Delay <b>Storage</b> <b>Automatic</b> Calculator in 1948 ...|$|R
25|$|The {{electronic}} delay <b>storage</b> <b>automatic</b> calculator (EDSAC) was {{an early}} British computer.|$|R
5000|$|ASM <b>Automatic</b> <b>Storage</b> Management Oracle's database-oriented {{filesystem}} ...|$|E
5000|$|... 2003: Saab {{introduces}} CargoSET; <b>automatic</b> <b>storage</b> well retr{{action for}} the convertible, a two-step tonneau action for quicker soft-top deployment ...|$|E
5000|$|... sorting systems method: no {{movement}} of the order picker(s), the products are brought to him by an automatic system (conveyor system, <b>automatic</b> <b>storage</b> ...).|$|E
5000|$|Electronic delay <b>storage</b> <b>automatic</b> {{calculator}} (EDSAC), {{an early}} British computer inspired by First Draft of a Report on the EDVAC ...|$|R
50|$|The Automated Retrieval Collection (ARC) was {{the second}} of its kind {{to be used in}} a {{university}} library. The ARC system is part of a national trend towards condensed shelving and <b>automatic</b> access <b>storage</b> systems. Books that have not been checked out in ten years are placed in the ARC.|$|R
50|$|Picking {{can be both}} manual or automated. Manual picking can be both man to goods, i.e. {{operator}} using a cart or conveyor belt, or {{goods to}} man, i.e. the operator benefiting from {{the presence of a}} mini-load ASRS, vertical or horizontal carousel or from an <b>Automatic</b> Vertical <b>Storage</b> System (AVSS). <b>Automatic</b> picking is done either with dispensers or depalletizing robots.|$|R
50|$|As in C, C++ {{supports}} {{four types}} of memory management: static storage duration objects, thread storage duration objects, <b>automatic</b> <b>storage</b> duration objects, and dynamic storage duration objects.|$|E
50|$|In {{computer}} programming, a variable-length array (VLA), {{also called}} variable-sized, runtime-sized, is an array data structure of <b>automatic</b> <b>storage</b> duration whose length is determined at run time (instead of at compile time).|$|E
50|$|A modern WMS will {{connect to}} a variety of {{communication}} technologies (radio frequency), automatic ID technologies (Bar code, RFID, etc.), mobile computers, and occasionally automated material handling (conveyors and sortation) and storage equipment (carousels, <b>automatic</b> <b>storage</b> and retrieval, etc.).|$|E
40|$|Abstract. Intelligent {{weather station}} {{system based on}} MEMS sensors is designed. The {{automatic}} meteorological system includes a MEMS temperature sensor, MEMS humidity sensor, MEMS pressure sensor, MEMS wind speed sensor and the sensor intelligent control system, etc. The intelligent control system has functions such as precise timing, multiple sensor data <b>automatic</b> acquisition, <b>storage</b> and uploading, which realizes the intelligent control of this weather station system...|$|R
50|$|EDSAC 2 was {{an early}} computer, the {{successor}} to the Electronic Delay <b>Storage</b> <b>Automatic</b> Calculator (EDSAC). It was the first computer to have a microprogrammed control unit and a bit slice hardware architecture.|$|R
40|$|Turning Angles Representation (TA) is [...] . In {{this paper}} we presentanew {{distance}} between shapes represented by TA, namely the Median distance, specially devised {{to minimize the}} effects of small variations in the shapes. Its analytical properties are discussed and experimental results are provided by comparison against those obtained by applying traditional techniques based on Euclidean distance. The Median distance has been implemented in the <b>Automatic</b> Image <b>Storage</b> and Retrieval (AISR) system, which allows storage and content-based retrieval of 2 -D images...|$|R
50|$|Kasto Maschinenbau, {{based in}} Achern-Gamshurst, Germany, specialises in sawing and storage {{technology}} of bar stock. The company manufactures metal-cutting saws, semi-automatic and <b>automatic</b> <b>storage</b> systems {{as well as}} automatic handling systems for metal bars, sheet metal and pre-cut parts.|$|E
50|$|Data {{striping}} {{is used in}} some databases, such as Sybase, and {{in certain}} RAID devices under software or hardware control, such as IBM's 9394 RAMAC Array subsystem. File systems of clusters also use striping. Oracle <b>Automatic</b> <b>Storage</b> Management allows ASM files to be either coarse or fine striped.|$|E
50|$|In 1889, Ruud {{engineered}} {{a design}} for an <b>automatic</b> <b>storage</b> tank-type {{gas water heater}} that used a bottom gas heater and temperature controlled gas-valve. He later patented the design in 1890. In October 1890, he expanded on his first water heater design, under the Fuel Gas and Manufacturing Company.|$|E
50|$|PROBADO is {{a project}} to develop of tools for the <b>automatic</b> indexing, <b>storage</b> and {{delivery}} of non-textual documents such as 3D models. Its goal is to enable academic libraries to deal with multimedia objects just as easily as with textual information. Tools include searching by intuitive drawing in 2D and 3D and delivery of results while drawing. For this initiative the TIB partnered with the Technical University of Darmstadt, the University of Bonn and the Technical University of Graz. It is funded by the DFG.|$|R
50|$|During {{this time}} Linfoot took a great {{interest}} in Claude Shannon's new field of information theory and also in computers, writing several programs for the Electronic Delay <b>Storage</b> <b>Automatic</b> Calculator at Cambridge. He also wrote two books on optics, and seems to have planned a third.|$|R
5000|$|In 1951, {{he be able}} {{to attend}} a two-week course at Cambridge University given by Dr. Maurice Wilkes, the {{developer}} of the Electronic Delay <b>Storage</b> <b>Automatic</b> Calculator (EDSAC). Gilchrist recalls that [...] "this was my first real exposure to computer programming, the problems of debugging, etc.".|$|R
50|$|Maughn's {{invention}} {{influenced the}} work of a Norwegian mechanical engineer named Edwin Ruud. The first <b>automatic,</b> <b>storage</b> tank-type gas water was invented around 1889 by Ruud after he immigrated to Pittsburgh, Pennsylvania (US). The Ruud Manufacturing Company, still in existence today, made many advancements in tank-type and tankless water heater design and operation.|$|E
5000|$|Languages such as Java and [...]NET Framework are not {{considered}} to provide variable-length arrays, because all array objects in those languages are logically allocated on the heap, and therefore do not have <b>automatic</b> <b>storage</b> duration for arrays. (Java and dotNet compilers can optimize these heap allocations to actually be on the stack where possible.) ...|$|E
5000|$|Because the C {{language}} {{does not}} specify an implicit initialization for objects of <b>automatic</b> <b>storage</b> duration, care should often {{be taken to}} ensure that the address to which [...] points is valid; this is why it is sometimes suggested that a pointer be explicitly initialized to the null pointer value, which is traditionally specified in C with the standardized macro : ...|$|E
50|$|Margaret Marrs (née Lewin; born 1929) is an English {{computer}} programmer {{who was the}} Senior Operator of the original Electronic delay <b>storage</b> <b>automatic</b> computer (EDSAC). EDSAC was an early British computer constructed at the University of Cambridge Mathematical Laboratory in England, and the second electronic digital stored-program computer to go into regular service.|$|R
40|$|We havedesigned and {{implemented}} an asynchronous data-parallel scheduler for the SML/NJ ML compiler. Using this general scheduler {{we built a}} data-parallel module that provides new operators to manipulate sequences (i. e., arrays, vectors) in parallel. Parallelization concerns such as thread creation and synchronization are hidden from the application programmer by ML's module abstraction. We nd that languages with modules, higher-order functions and <b>automatic</b> parallel <b>storage</b> management can, in this manner, seamlessly support data-parallel operators. An implementation of applications using the new sequence module on an eight-processor shared-memory machine indicates {{that in some cases}} useful speedup is possible with our approach. ...|$|R
50|$|The {{electronic}} delay <b>storage</b> <b>automatic</b> calculator (EDSAC) was {{an early}} British computer. Inspired by John von Neumann's seminal First Draft of a Report on the EDVAC, the machine was constructed by Maurice Wilkes and his team at the University of Cambridge Mathematical Laboratory in England. EDSAC was the second electronic digital stored-program computer to go into regular service.|$|R
50|$|<b>Automatic</b> <b>Storage</b> Management (ASM) {{simplifies}} {{administration of}} Oracle-related files {{by allowing the}} administrator to reference disk groups (rather than individual disks and files) which ASM manages. ASM extends the Oracle Managed Files (OMF) functionalitythat also includes striping and mirroring to provide balanced and secure storage. DBAs can use the ASM functionality in combination with existing raw and cooked file-systems, along with OMF and manually managed files.|$|E
50|$|Lisp was {{originally}} {{created as a}} practical mathematical notation for computer programs, influenced by the notation of Alonzo Church's lambda calculus. It quickly became the favored programming language for artificial intelligence (AI) research. As {{one of the earliest}} programming languages, Lisp pioneered many ideas in computer science, including tree data structures, <b>automatic</b> <b>storage</b> management, dynamic typing, conditionals, higher-order functions, recursion, the self-hosting compiler, and the read-eval-print loop.|$|E
50|$|Variables {{declared}} {{within a}} block by default have <b>automatic</b> <b>storage,</b> as do those explicitly declared with the auto or register storage class specifiers. The auto and register specifiers {{may only be}} used within functions and function argument declarations; as such, the auto specifier is always redundant. Objects declared outside of all blocks and those explicitly declared with the static storage class specifier have static storage duration. Static variables are initialized to zero by default by the compiler.|$|E
40|$|Provenance-aware storage systems (PASS) are a {{new class}} of storage system {{treating}} provenance as a first-class object, providing <b>automatic</b> collection, <b>storage,</b> and management of provenance as well as query capabilities. We developed the first PASS prototype between 2005 and 2006, targeting scientific end users. Prior to undertaking the provenance challenge, we had focused on provenance collection and storage, without much emphasis on a query model or language. The challenge forced us to (quickly) develop a query model and infrastructure implementing this model. We present a brief overview of the PASS prototype and a discussion of the evolution of the query model that we developed for the challenge...|$|R
40|$|We have {{designed}} and implemented an asynchronous data-parallel scheduler for the SML/NJ ML compiler. Using this general scheduler {{we built a}} data-parallel module that provides new operators to manipulate sequences (i. e., arrays, vectors) in parallel. Parallelization concerns such as thread creation and synchronization are hidden from the application programmer by ML 2 ̆ 7 s module abstraction. We find that languages with modules, higher-order functions and <b>automatic</b> parallel <b>storage</b> management can, in this manner, seamlessly support data-parallel operators. An implementation of applications using the new sequence module on an eight-processor shared-memory machine indicates {{that in some cases}} useful speedup is possible with our approach...|$|R
30|$|One of {{the main}} {{screening}} solutions objective of the project is the <b>automatic</b> analysis and <b>storage</b> of images coming from a screening/scanning process at various stages of the distribution process, to detect signs of damages and tampering. This paper describes the rationale of the approach we undertook and provides {{an account of the}} method we developed and implemented on a prototype scanning system.|$|R
