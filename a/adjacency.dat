7294|460|Public
5|$|Graphs and {{directed}} graphs {{can be viewed}} as a special case of the far more general notion called relational structures (defined as a set with a tuple of relations on it). Directed graphs are structures with a single binary relation (<b>adjacency)</b> on the domain (the vertex set). Under this view, homomorphisms of such structures are exactly graph homomorphisms.|$|E
25|$|A {{symmetric}} {{sparse matrix}} arises as the <b>adjacency</b> matrix of an undirected graph; {{it can be}} stored efficiently as an <b>adjacency</b> list.|$|E
25|$|The {{principal}} eigenvector is used {{to measure}} the centrality of its vertices. An example is Google's PageRank algorithm. The principal eigenvector of a modified <b>adjacency</b> matrix of the World Wide Web graph gives the page ranks as its components. This vector corresponds to the stationary distribution of the Markov chain represented by the row-normalized <b>adjacency</b> matrix; however, the <b>adjacency</b> matrix must first be modified to ensure a stationary distribution exists. The second smallest eigenvector can be used to partition the graph into clusters, via spectral clustering. Other methods are also available for clustering.|$|E
5000|$|... (i) {{breaking}} two <b>adjacencies</b> (a, b) and (c, d) {{to create}} two more <b>adjacencies,</b> (a, c) and (b,d) ...|$|R
40|$|International audienceWe {{consider}} a recently introduced dynamic programming scheme to compute parsimonious evolutionary scenarios for gene <b>adjacencies.</b> We extend this scheme to sample evolutionary scenarios {{from the whole}} solution space under the Boltzmann distribution. We apply our algorithms to a dataset of mammalian gene trees and <b>adjacencies,</b> and observe a significant reduction {{of the number of}} syntenic inconsistencies observed in the resulting ancestral gene <b>adjacencies...</b>|$|R
40|$|International audienceCONTEXT:The {{reconstruction}} of evolutionary scenarios for whole genomesin terms of genome rearrangements {{is a fundamental}} problem in evolutionaryand comparative genomics. The DeCo algorithm, recently introducedby Berard et al., computes parsimonious evolutionary scenarios forgene <b>adjacencies,</b> from pairs of reconciled gene trees. However, asfor many combinatorial optimization algorithms, there can exist manyco-optimal, or slightly sub-optimal, evolutionary scenarios thatdeserve to be considered. CONTRIBUTION:We extend the DeCo algorithmto sample evolutionary scenarios from the whole solution space underthe Boltzmann distribution, and also to compute Boltzmann probabilitiesfor specific ancestral <b>adjacencies.</b> RESULTS:We apply our algorithmsto a dataset of mammalian gene trees and <b>adjacencies,</b> and observea significant reduction {{of the number of}} syntenic conflicts observedin the resulting ancestral gene <b>adjacencies...</b>|$|R
25|$|The Lyric Centre, {{named for}} its <b>adjacency</b> to the Theater District.|$|E
25|$|Properties of a graph G {{that depend}} only on <b>adjacency</b> between edges may be {{translated}} into equivalent properties in L(G) that depend on <b>adjacency</b> between vertices. For instance, a matching in G {{is a set of}} edges no two of which are adjacent, and corresponds to a set of vertices in L(G) no two of which are adjacent, that is, an independent set.|$|E
25|$|ExStart: The ExStart {{state is}} the first step of <b>adjacency</b> of two routers.|$|E
40|$|Context The {{reconstruction}} of evolutionary scenarios for whole genomes {{in terms of}} genome rearrangements is a fundamental problem in evolutionary and comparative genomics. The DeCo algorithm, recently introduced by Bérard et al., computes parsimonious evolutionary scenarios for gene <b>adjacencies,</b> from pairs of reconciled gene trees. However, as for many combinatorial optimization algorithms, there can exist many co-optimal, or slightly sub-optimal, evolutionary scenarios that deserve to be considered. Contribution We extend the DeCo algorithm to sample evolutionary scenarios from the whole solution space under the Boltzmann distribution, and also to compute Boltzmann probabilities for specific ancestral <b>adjacencies.</b> Results We apply our algorithms to a dataset of mammalian gene trees and <b>adjacencies,</b> and observe a significant reduction {{of the number of}} syntenic conflicts observed in the resulting ancestral gene <b>adjacencies...</b>|$|R
40|$|International audienceThe {{availability}} {{of a large number}} of assembled genomes opens the way to study the evolution of syntenic character within a phylogenetic context. The DeCo algorithm, recently introduced by Bérard et al. allows the computation of parsimonious evolutionary scenarios for gene <b>adjacencies,</b> from pairs of reconciled gene trees. Following the approach pioneered by Sturmfels and Pachter, we describe how to modify the DeCo dynamic programming algorithm to identify classes of cost schemes that generates similar parsimonious evolutionary scenarios for gene <b>adjacencies,</b> as well as the robustness to changes to the cost scheme of evolutionary events of the presence or absence of specific ancestral gene <b>adjacencies.</b> We apply our method to six thousands mammalian gene families, and show that computing the robustness to changes to cost schemes provides new and interesting insights on the evolution of gene <b>adjacencies</b> and the DeCo model...|$|R
50|$|Arrange the {{vertices}} arbitrarily into a cycle, ignoring <b>adjacencies</b> in the graph.|$|R
25|$|The Aanderaa–Karp–Rosenberg {{conjecture}} concerns implicit graphs {{given as}} a set of labeled vertices with a black-box rule for determining whether any two vertices are adjacent. This definition differs from an <b>adjacency</b> labeling scheme in that the rule may be specific to a particular graph rather than being a generic rule that applies to all graphs in a family. Because of this difference, every graph has an implicit representation. For instance, the rule could be to look up the pair of vertices in a separate <b>adjacency</b> matrix. However, an algorithm that is given as input an implicit graph of this type must operate on it only through the implicit <b>adjacency</b> test, without reference to how the test is implemented.|$|E
25|$|Neighbourhoods {{may be used}} to {{represent}} graphs in computer algorithms, via the <b>adjacency</b> list and <b>adjacency</b> matrix representations. Neighbourhoods are also used in the clustering coefficient of a graph, which {{is a measure of the}} average density of its neighbourhoods. In addition, many important classes of graphs may be defined by properties of their neighbourhoods, or by symmetries that relate neighbourhoods to each other.|$|E
25|$|When {{considering}} computational problems, {{a problem}} instance is a string over an alphabet. Usually, the alphabet {{is taken to}} be the binary alphabet (i.e., the set {0,1}), and thus the strings are bitstrings. As in a real-world computer, mathematical objects other than bitstrings must be suitably encoded. For example, integers can be represented in binary notation, and graphs can be encoded directly via their <b>adjacency</b> matrices, or by encoding their <b>adjacency</b> lists in binary.|$|E
40|$|Accepted, to appearInternational audienceThe {{availability}} {{of a large number}} of assembled genomes opens the way to study the evolution of syntenic character within a phylogenetic context. The DeCo algorithm, recently introduced by Bérard et al. allows the computation of parsimonious evolutionary scenarios for gene <b>adjacencies,</b> from pairs of reconciled gene trees. Following the approach pioneered by Sturmfels and Pachter, we describe how to modify the DeCo dynamic programming algorithm to identify classes of cost schemes that generates similar parsimonious evolutionary scenarios for gene <b>adjacencies,</b> as well as the robustness to changes to the cost scheme of evolutionary events of the presence or absence of specific ancestral gene <b>adjacencies.</b> We apply our method to six thousands mammalian gene families, and show that computing the robustness to changes to cost schemes provides new and interesting insights on the evolution of gene <b>adjacencies</b> and the DeCo model...|$|R
5000|$|... {{the use of}} {{explicit}} hello packets to discover and maintain <b>adjacencies</b> between routers.|$|R
40|$|AbstractWe {{describe}} new algorithms {{for determining}} the <b>adjacencies</b> between zero-dimensional cells and those one-dimensional cells that are sections (not sectors) in cylindrical algebraic decompositions (cad). Such <b>adjacencies</b> constitute a basis for determining all other cell <b>adjacencies.</b> Our new algorithms are local, being applicable to a specified 0 D cell and the 1 D cells described by specified polynomials. Particularly efficient algorithms are given for the 0 D cells in spaces of dimensions two, three and four. Then an algorithm is given for a space of arbitrary dimension. This algorithm may on occasion report failure, but it can then be repeated with a modified isolating interval and a likelihood of success...|$|R
25|$|Due to the city's <b>adjacency</b> to Edmonton, {{all major}} Edmonton media—newspapers, television, and radio—also serve St. Albert. See Media in Edmonton.|$|E
25|$|Spectral layout methods use as {{coordinates}} the eigenvectors of {{a matrix}} {{such as the}} Laplacian derived from the <b>adjacency</b> matrix of the graph.|$|E
25|$|Representing a graph by such {{algebraic}} structures as its <b>adjacency</b> matrix and Laplacian matrix {{gives rise}} to the field of spectral graph theory.|$|E
2500|$|Lattice graph, {{the graph}} of {{horizontal}} and vertical <b>adjacencies</b> of squares on a chessboard ...|$|R
40|$|Context: The {{reconstruction}} of evolutionary scenarios for whole genomes {{in terms of}} genome rearrangements is a fundamental problem in evolutionary and comparative genomics. The DeCo algorithm, recently introduced by Bérard et al., computes parsimonious evolutionary scenarios for gene <b>adjacencies,</b> from pairs of reconciled gene trees. However, as for many combinatorial optimization algorithms, there can exist many co-optimal, or slightly sub-optimal, evolutionary scenarios that deserve to be considered. Contribution: We extend the DeCo algorithm to sample evolutionary scenarios from the whole solution space under the Boltzmann distribution, and also to compute Boltzmann probabilities for specific ancestral <b>adjacencies.</b> Results: We apply our algorithms to a dataset of mammalian gene trees and <b>adjacencies,</b> and observe a significant reduction {{of the number of}} syntenic conflicts observed in the resulting ancestral gene <b>adjacencies.</b> Background The {{reconstruction of}} the evolutionary history of geno-mic characters along a given species tree is a long-standing problem in computational biology. This problem has been well studied for several types of geno...|$|R
40|$|The {{availability}} {{of a large number}} of assembled genomes opens the way to study the evolution of syntenic character within a phylogenetic context. The DeCo algorithm, recently introduced by Bérard et al. allows the computation of parsimonious evolutionary scenarios for gene <b>adjacencies,</b> from pairs of reconciled gene trees. Following the approach pioneered by Sturmfels and Pachter, we describe how to modify the DeCo dynamic programming algorithm to identify classes of cost schemes that generates similar parsimonious evolutionary scenarios for gene <b>adjacencies,</b> as well as the robustness to changes to the cost scheme of evolutionary events of the presence or absence of specific ancestral gene <b>adjacencies.</b> We apply our method to six thousands mammalian gene families, and show that computing the robustness to changes to cost schemes provides new and interesting insights on the evolution of gene <b>adjacencies</b> and the DeCo model. Comment: Accepted, to appear in ISBRA - 11 th International Symposium on Bioinformatics Research and Applications - 2015, Jun 2015, Norfolk, Virginia, United State...|$|R
25|$|In {{broadcast}} multiple-access networks, neighbor <b>adjacency</b> {{is formed}} dynamically using multicast hello packets to 224.0.0.5. A DR and BDR are elected normally, and function normally.|$|E
25|$|Matrix {{structures}} {{include the}} incidence matrix, {{a matrix of}} 0's and 1's whose rows represent vertices and whose columns represent edges, and the <b>adjacency</b> matrix, in which both the rows and columns are indexed by vertices. In both cases a 1 indicates two adjacent objects and a 0 indicates two non-adjacent objects. The Laplacian matrix is a modified form of the <b>adjacency</b> matrix that incorporates information about the degrees of the vertices, and is useful in some calculations such as Kirchhoff's theorem {{on the number of}} spanning trees of a graph.|$|E
25|$|The kth {{power of}} a graph with n {{vertices}} and m edges may be computed in time O(mn) by performing a breadth first search starting from each vertex to determine the distances to all other vertices. Alternatively, If A is an <b>adjacency</b> matrix for the graph, modified to have nonzero entries on its main diagonal, then the nonzero entries of A'k give the <b>adjacency</b> matrix of the kth power of the graph, from which it follows that constructing kth powers may be performed in {{an amount of time}} that is within a logarithmic factor of the time for matrix multiplication.|$|E
40|$|We {{describe}} new algorithms {{for determining}} the <b>adjacencies</b> between zero-dimensional cells and those one-dimensional cells that are sections (not sectors) in cylindrical algebraic decompositions (cad). Such <b>adjacencies</b> constitute a basis for determining all other cell <b>adjacencies.</b> Our new algorithms are local, being applicable to a specified 0 D cell and the 1 D cells described by specified polynomials. Particularly efficient algorithms are given for the 0 D cells in spaces of dimensions two, three and four. Then an algorithm is given for a space of arbitrary dimension. This algorithm may on occasion report failure, but it can then be repeated with a modified isolating interval and a likelihood of success. 22 page(s...|$|R
5000|$|Because of this, modular {{partitions}} of [...] {{where each}} partition class is a module {{are of particular}} interest. Suppose [...] is a modular partition. Since the partition classes are disjoint, their <b>adjacencies</b> constitute a new graph, a quotient graph , whose vertices are the members of [...] That is, each vertex of [...] is a module of G, and the <b>adjacencies</b> of these modules are the edges of [...]|$|R
5000|$|Null adjacency: Handles packets {{destined to}} a NULL interface. Packets with FIB entries {{pointing}} to NULL <b>adjacencies</b> will normally be dropped.|$|R
25|$|Because of {{the large}} eigengap of the {{modified}} <b>adjacency</b> matrix above, {{the values of the}} PageRank eigenvector can be approximated to within a high degree of accuracy within only a few iterations.|$|E
25|$|The graphs whose <b>adjacency</b> {{matrices}} can {{be ordered}} such that, in each row and each column, the nonzeros of the matrix form a contiguous interval adjacent to the main diagonal of the matrix.|$|E
25|$|Among the {{families}} of graphs which satisfy {{the conditions of the}} conjecture and {{for which there is no}} known <b>adjacency</b> labeling scheme are the family of disk graphs and line segment intersection graphs.|$|E
40|$|Practical solid {{modeling}} systems are plagued by numerical problems {{that arise from}} using floatingpoint arithmetic. For example, polyhedral solids are often represented {{by a combination of}} geometric and combinatorial information. The geometric information might consist of explicit plane equations, with floating-point coefficients; the combinatorial information might consist of face, edge, and vertex <b>adjacencies</b> and orientations, with edges defined by face-face <b>adjacencies</b> and vertices by edge-edge <b>adjacencies.</b> Problems arise when numerical error in geometric operations causes the geometric information to become inconsistent with the combinatorial information. These problems could be avoided by using exact arithmetic instead of floating-point arithmetic. However, some operations, like rotation, increase the number of bits required to represent the plane equation coefficients. Since the execution time of exact arithmetic operators increases with the number of bits in the operands, the inc [...] ...|$|R
2500|$|Each OSPF router {{within a}} network {{communicates}} with other neighboring routers on each connecting interface {{to establish the}} states of all <b>adjacencies.</b> Every such communication sequence is a separate conversation identified by the pair of router IDs of the communicating neighbors. RFC 2328 specifies the protocol for initiating these conversations (Hello Protocol) and for establishing full <b>adjacencies</b> (Database Description Packets, Link State Request Packets). During its course, each router conversation transitions through a maximum of eight conditions defined by a state machine: ...|$|R
40|$|We {{consider}} a modified notion of planarity, {{in which two}} nations of a map are considered adjacent when they share any point of their boundaries (not necessarily an edge, as planarity requires). Such <b>adjacencies</b> define a map graph. We give an NP characterization for such graphs, and an O(n 3) -time recognition algorithm for a restricted version: given a graph, decide whether it is realized by <b>adjacencies</b> in a map without holes, in which at most four nations meet at any point...|$|R
