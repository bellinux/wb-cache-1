667|2952|Public
5000|$|... 0.10.0 {{separate}} <b>application</b> <b>context</b> allowing complete independence ...|$|E
5000|$|IEC 60870-6-1 <b>Application</b> <b>context</b> and {{organization}} of standards ...|$|E
50|$|A MAP_OPEN {{construct}} {{therefore is}} directly related to a TCAP_BEGIN with a MAP <b>application</b> <b>context,</b> a MAP_CLOSE is a TCAP_END.|$|E
50|$|The topic Net-Centric Enterprise Services {{addresses}} the <b>applications</b> <b>context</b> of the GIG.|$|R
40|$|We {{propose a}} numeric and {{symbolic}} knowledge base about sulco-gyral brain cortex anatomy implemented using web technologies. This knowledge base {{is supposed to}} be easily reusable in various <b>application</b> <b>contexts</b> such as teaching, decision support in neurosurgery and sharing of neuroimaging data for research purposes. Our analysis shows that those various <b>application</b> <b>contexts</b> call for a more formalised representation of taxonomical and mereotopological relations and for the expression of identity criteria for the symbolic concepts...|$|R
50|$|The Triune {{continuum}} {{paradigm is}} a paradigm for general system modeling published in 2002. The paradigm allows for building of rigorous conceptual frameworks employed for systems modeling in various <b>application</b> <b>contexts</b> (highly tailored {{as well as}} interdisciplinary).|$|R
5000|$|UI Frameworks: {{allows for}} the {{building}} of user interfaces adapted to the <b>application</b> <b>context</b> and the users. They include JSF/Seam, Nuxeo WebEngine, Google Web Toolkit and Eclipse RCP, among others.|$|E
50|$|According to the W3C, if two XML {{documents}} {{have the}} same canonical form, then the two documents are logically equivalent within the given <b>application</b> <b>context</b> (except for limitations regarding a few unusual cases).|$|E
5000|$|The {{dialogue}} portion carries dialogue or unidialogue control PDUs. For MAP and INAP, dialogue PDU is used which performs {{establishment and}} release of dialogues for the <b>application</b> <b>context</b> {{provided in the}} primitives. Following primitives are defined for the dialogue PDU: ...|$|E
50|$|Her current {{research}} concerns creative co-design methods in design for services, {{as well as}} the new <b>application</b> <b>contexts</b> of design approaches. Her research with design probes has inspired students and organisations to apply the approach in various projects.|$|R
50|$|Each Dictionary has a name, {{description}} and domain {{for which the}} Dictionary is intended. This service {{can be used for}} localization, mapping a set of values across <b>application</b> <b>contexts,</b> or performing any translation that fits into a tag-value paradigm.|$|R
40|$|In e-Research Infrastructures (eRIs), {{software}} {{is used in}} diverse <b>application</b> <b>contexts.</b> To support this {{software is}} often implemented generically. The usability of software is strongly context dependent. Therefore, the use of generic software in different <b>application</b> <b>contexts</b> results in varying degress of usability depending on the concrete usage scenario. This paper focuses on the challenges of implementing usability-oriented generic software. First, we provide an introduction to generic software {{in the context of}} eRIs. Next, we offer an overview of usability and appropriate considerations in the software development process. Based on this, we demonstrate discrepancies between good usability and the application of generic software in distinct contexts. Finally, we provide a first architectural concept to address the identified challenges...|$|R
50|$|In {{line with}} other GSM specifications, later phases should be fully {{backwards}} compatible with earlier phases; this {{is achieved by}} means of the Transaction Capabilities Application Part (TCAP) <b>Application</b> <b>Context</b> (AC) negotiation procedure, with each CAMEL phase is allocated its own AC version.|$|E
50|$|The SHY {{character}} {{is also being}} used in text where paragraphs have already been broken into lines, such as certain plain text files, text sent to VT100-style terminal emulators or printers, or pages represented in page description languages. This is the <b>application</b> <b>context</b> originally considered by the EBCDIC and ISO 8859-1 standards and implemented in many VT100 terminal emulators.|$|E
5000|$|A general {{model of}} {{identity}} {{can be constructed}} from a small set of axioms, for example that all identities in a given namespace are unique, or that such identities bear a specific relationship to corresponding entities in the real world. Such an axiomatic model expresses [...] "pure identity" [...] {{in the sense that}} the model is not constrained by a specific <b>application</b> <b>context.</b>|$|E
40|$|Description logics (DLs) have {{recently}} been used {{to provide access to}} large amounts of data through a high-level conceptual interface, which is of relevance in several <b>application</b> <b>contexts,</b> notably data integration and ontology-based data access. Besides the traditional reasoning services of knowledge base satisfiabilit...|$|R
40|$|The {{contribution}} concerns recurrent aporias {{about the}} relations between ‘historical’ cities and ‘contemporary design’, with brief remarks and solution trends. It also highlights {{the role of the}} socio-cultural “scenarios” of architectural designs, such as “decision makers” about evaluation options of the latters in relation to the <b>application</b> <b>contexts.</b> </p...|$|R
40|$|Generating “views” over {{reference}} ontologies {{allows them}} to be customized for use within specific <b>application</b> <b>contexts.</b> In this project we investigated the operations necessary to generate one such custom ontology view. We catalogued the involved operations {{as a first step}} in defining the requirements of a formal view definition language...|$|R
50|$|The main {{developer}} and maintainer of ScientificPython is Konrad Hinsen of Orléans University who uses it as a building block {{for his own}} research code, in particular the molecular modeling toolkit MMTK and the software nMoldyn that uses molecular dynamics trajectories to predict neutron scattering spectra. Outside this particular <b>application</b> <b>context,</b> most users are likely to prefer the package SciPy, which has seen a more dynamic evolution in the decade 2000-2010, involving several active developers.|$|E
50|$|An {{operating}} temperature is the temperature at which an electrical or mechanical device operates. The device will operate effectively within a specified temperature range which varies {{based on the}} device function and <b>application</b> <b>context,</b> and ranges from the minimum {{operating temperature}} to the maximum operating temperature (or peak operating temperature). Outside this range of safe operating temperatures the device may fail. Aerospace and military-grade devices generally operate over a broader temperature range than industrial devices; commercial-grade devices generally have the narrowest operating temperature range.|$|E
50|$|The Spring Framework has {{received}} some criticism for what some developers {{perceive to be}} an over-reliance on XML by Spring's container. Since version 3.0.0, however, developers {{have been able to}} specify all or part of an <b>application</b> <b>context</b> through annotations or Java code. Spring Boot makes heavy use of this to minimize the amount of configuration that must be written. Furthermore, the Spring Tool Suite (STS), built on top of Eclipse, provides code-completion, validation, contextual information, and graphical visualizations when editing Spring XML configuration files.|$|E
40|$|This {{demonstration}} shows two experimental digital libraries, e- Library and ARTE, {{which have}} been built by configuring appropriately the OpenDLib digital library system and then acquiring content with different approaches. Through these DLs we intend to demonstrate the capability of the OpenDLib system to be exploited in different <b>application</b> <b>contexts...</b>|$|R
50|$|In recent years, Radiant Logic has {{developed}} {{products for the}} emerging context market in enterprise software. In 2008, Radiant Logic announced {{the launch of the}} first “context server” known as the VDS Context Edition. By extracting contextual information out of <b>application</b> silos, VDS <b>Context</b> Edition enables identity integration based on multiple <b>application</b> <b>contexts</b> across diverse data sources. In 2009, Radiant Logic released a major rollout of three products built on its RadiantOne Identity & Context platform, called the virtualization suite.|$|R
40|$|We {{propose to}} extend the {{well-known}} three-cycle view for design science research (DSR) with a fourth cycle (change and impact cycle) that captures the dynamic nature of IS artifact design for volatile environments. The appropriation of in-innovative designs results in organizational changes that happen outside the new artifacts 2 ̆ 7 immediate <b>application</b> <b>contexts.</b> The intention behind introducing the fourth cycle is to integrate recent advances in the DSR discourse conceptually within the DSR cycle model. We critically review such recent advances and integrate them into an extended model. We show how this change and impact (CI) cycle adds an important facet to DSR to cope with dynamic <b>application</b> <b>contexts</b> as well as artifact-induced organizational change and the resulting need for follow-up design efforts. Iterations of the CI cycle represent the continuous design evolution required {{to keep up with}} changing organizational environments...|$|R
50|$|A {{vocabulary}} is <b>application</b> (<b>context)</b> dependent, {{and must}} be large enough so that it lets the end-user interact with the Per-C in a user-friendly manner. The encoder transforms words into fuzzy sets (FSs) and leads to a codebook - words with their associated FS models. The outputs of the encoder activate a Computing With Words (CWW) engine, whose output is one or more other FSs, which are then mapped by the decoder into a recommendation (subjective judgment) with supporting data. The recommendation {{may be in the}} form of a word, group of similar words, rank or class.|$|E
50|$|Design science {{research}} {{can be seen}} as an embodiment of three closely related cycles of activities. The relevance cycle initiates design {{science research}} with an <b>application</b> <b>context</b> that not only provides the requirements for the research as inputs but also defines acceptance criteria for the ultimate evaluation of the research results. The rigor cycle provides past knowledge to the research project to ensure its innovation. It is contingent on the researchers to thoroughly research and reference the knowledge base in order to guarantee that the designs produced are research contributions and not routine designs based upon the application of well-known processes. The central Design Cycle iterates between the core activities of building and evaluating the design artifacts and processes of the research.|$|E
50|$|In 1997 Christopher Kingdon, of Ericsson, handed in the Location Services (LCS) stage 1 {{description}} to {{the joint}} GSM group of the European Telecommunications Standards Institute (ETSI) and the American National Standards Institute (ANSI). As a result, the LCS sub-working group was created under ANSI T1P1.5. This group went on to select positioning methods and standardize Location Services (LCS), later known as Location Based Services (LBS). Nodes defined include the Gateway Mobile Location Centre (GMLC), the Serving Mobile Location Centre (SMLC) and concepts such as Mobile Originating Location Request (MO-LR), Network Induced Location Request (NI-LR) and Mobile Terminating Location Request (MT-LR). These use models were not really functional at the <b>application</b> <b>context</b> layer and needed more user-interface controls to make them ubiquitous. Those control came from Glassey's evolving models which expanded these and provided a secondary, more robust and very simple system for controlling digital objects and decision processes based on location and time.|$|E
40|$|Ontologies {{are widely}} used as a {{technique}} for representation and reuse of knowledge. This paper summarizes experiences and results of a project within ontology development, with wood-related industry as application sector. One major aspect {{of the project was}} the selection of a suitable methodology for ontology development. In a literature study existing methodologies were analyzed with respect to their suitability for small-scale <b>application</b> <b>contexts.</b> As no existing methodology was fully adequate, an improved methodology was proposed. The main intention was to reduce development time and effort {{to meet the demands of}} small-scale <b>application</b> <b>contexts.</b> The improved methodology was applied and evaluated in the project, i. e. in the development of an ontology for wood-related industry. The main conclusion is that the methodology was adequate for the project, but some aspects could be elaborated and further investigated, such as reuse of already existing ontologies...|$|R
40|$|This {{technical}} report presents a structure for a modular implementation of <b>application</b> <b>contexts</b> from the RM-OSI/ISO (Re- ference Model - Open Systems Interconnection / International Organization for Standardization) {{in which the}} TP (Transaction Processing) protocol participates. This protocol provides services to support the execution of distributed atomic transactions in the OSI environment. The structure presented influences the implementation of other <b>application</b> <b>contexts.</b> In this text it is also shown the way the upper layers protocols are being implemented in a didactic communication system called SISDI-OSI (Sistema Did'atico para o Modelo OSI [...] Didactic System for the OSI Model) in terms of process configuration and interprocess communication mechanisms. The experiences with protocol implementations for this system are then commented. 1 Introduction Defined {{as a group of}} related operations that are executed so that the ACID (Atomicity, Consistency, Isolation, Durability) prope [...] ...|$|R
40|$|The {{accurate}} 3 D {{documentation of}} architectures and heritages is getting very common and required in different <b>application</b> <b>contexts.</b> The potentialities of the image-based approach are nowadays very well-known {{but there is}} a lack of reliable, precise and flexible solutions, possibly open-source, which could be used for metric and accurate documentation or digital conservation and not only for simple visualization or web-based applications. The article presents a set of photogrammetric tools developed in order to derive accurate 3 D point clouds and orthoimages for the digitization of archaeological and architectural objects. The aim is also to distribute free solutions (software, methodologies, guidelines, best practices, etc.) based on 3 D surveying and modeling experiences, useful in different <b>application</b> <b>contexts</b> (architecture, excavations, museum collections, heritage documentation, etc.) and according to several representations needs (2 D technical documentation, 3 D reconstruction, web visualization, etc.). <br /...|$|R
50|$|Real-time {{computing}} {{is sometimes}} misunderstood to be high-performance computing, {{but this is}} not an accurate classification. For example, a massive supercomputer executing a scientific simulation may offer impressive performance, yet it is not executing a real-time computation. Conversely, once the hardware and software for an anti-lock braking system have been designed to meet its required deadlines, no further performance gains are obligatory. Furthermore, if a network server is highly loaded with network traffic, its response time may be slower but will (in most cases) still succeed before it times out (hits its deadline). Hence, such a network server would not be considered a real-time system: temporal failures (delays, time-outs, etc.) are typically small and compartmentalized (limited in effect) but are not catastrophic failures. In a real-time system, such as the FTSE 100 Index, a slow-down beyond limits would often be considered catastrophic in its <b>application</b> <b>context.</b> Therefore, the most important requirement of a real-time system is predictability and not performance.|$|E
50|$|The use of SHY {{characters}} in text {{that will be}} broken into lines by the recipient is the <b>application</b> <b>context</b> considered by the post-1999 HTML and Unicode specifications, {{as well as some}} word-processing file formats. In this context, the soft hyphen may also be called a discretionary hyphen or optional hyphen. It serves as an invisible marker used to specify a place in text where a hyphenated break is allowed without forcing a line break in an inconvenient place if the text is re-flowed. It becomes visible only after word wrapping {{at the end of a}} line. The soft hyphen's Unicode semantics and HTML implementation are in many ways similar to Unicode's zero-width space, with the exception that the soft hyphen will preserve the kerning of the characters on either side when not visible. The zero-width space, on the other hand, will not, as it is considered a visible character even if not rendered, thus having its own kerning metrics.|$|E
5000|$|According to tag length values, {{this can}} be decoded as below. [...] '--> 62|74 <- Start of Tcap begin message | '--> 48|04:00 02 00 30 <- Transaction ID | '--> 6B|1A <- Start of Dialog portion [...] | '--> 28|18 | '--> 06|07:00 11 86 05 01 01 01 [...] | '--> A0|0D | '--> 60|0B | '--> A1|09 | '--> 06|07:04 00 00 01 00 19 02 <- <b>Application</b> <b>context</b> | '--> 6C|50 <- Start of {{component}} portion | '--> A1|4E | '--> 02|01:01 <- Component Id (invoke id) | '--> 02|01:2E <- Operation Code | '--> 30|46 <- Start of parameter buffer | '--> 80|05:70 31 42 44 44 <- SM-RP-DA(BCD) | '--> 84|06:A1 70 91 92 55 55 <- SM-RP-OA(BCD) | '--> 04|35:2F 09 00 70 97 92 62 23 04 00 90 20 11 80 01 24 00 27 43 50 7A 0E A2 A3 CB 20 71 79 4E 07 B1 C3 EE 73 3D 7C 2E 83 D2 20 74 D8 5E 06 95 ED 65 39 68 5E 2E BB 01 <- SM-RP-UI ...|$|E
30|$|The {{model is}} {{characterized}} by two control levels: a metamodeling and an instantiation level. The metamodel is general and technology independent, i.e., it models different configurations of adaptable software and can be instantiated in different domains. Hence, at the instantiation level, the model may be implemented in different <b>application</b> <b>contexts</b> and refers to specific run-time environments.|$|R
40|$|We aim {{to present}} current {{trends in the}} {{theoretical}} computer science research on topics which have applications in data mining. We briefly describe data mining tasks in various <b>application</b> <b>contexts.</b> We give an overview {{of some of the}} questions and algorithmic issues that are of concern when mining huge amounts of data that do not fit in main memory. ...|$|R
5000|$|W3C forum has {{undertaken}} {{the initiative of}} standardizing the ontology representation for web-based applications. The Web Ontology Language (OWL), standardized in 2004 after maturing through XML(S), RDF(S) and DAML+OIL {{is a result of}} that effort. Ontology in OWL (and some of its predecessor languages) has been successfully used in establishing semantics of text in specific <b>application</b> <b>contexts.</b>|$|R
