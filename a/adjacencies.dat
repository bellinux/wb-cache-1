565|7082|Public
25|$|Every finite or countably {{infinite}} graph is an {{induced subgraph}} of the Rado graph, {{and can be}} found as an induced subgraph by a greedy algorithm that builds up the subgraph one vertex at a time. The Rado graph is uniquely defined, among countable graphs, by an extension property that guarantees the correctness of this algorithm: no matter which vertices have already been chosen to form part of the induced subgraph, and no matter what pattern of <b>adjacencies</b> is needed to extend the subgraph by one more vertex, there will always exist another vertex with that pattern of <b>adjacencies</b> that the greedy algorithm can choose.|$|E
25|$|To {{identify}} intramodular hub genes {{inside a}} given module, {{one can use}} two types of connectivity measures. The first, referred to as , is defined based on correlating each gene with the respective module eigengene. The second, referred to as kIN, {{is defined as a}} sum of <b>adjacencies</b> with respect to the module genes. In practice, these two measures are equivalent.|$|E
25|$|The {{city street}} facade {{can provide a}} type of {{juxtaposed}} contradiction that is essentially two-dimensional. Frank Furness' Clearing House, now demolished {{like many of his}} best works in Philadelphia, contained an array of violent pressures within a rigid frame. The half-segmental arch, blocked by the submerged tower which, in turn, bisects the facade into a near duality, and the violent <b>adjacencies</b> of rectangles, squares, lunettes, and diagonals of contrasting sizes, compose a building seemingly held up by the buildings next door: it is an almost insane short story of a castle on a city street.|$|E
40|$|The {{three most}} common graph representations, namely the <b>adjacency</b> matrix, one way <b>adjacency</b> lists and <b>adjacency</b> multilist, are {{implemented}} in PASCAL and their performance evaluated for twelve graphs typical to computer network configurations. We show that both <b>adjacency</b> multilist {{and one way}} <b>adjacency</b> lists are preferred over the <b>adjacency</b> matrix representation. Although their implementation is Slightly more complicated it out performs the latter {{by a factor of}} at least 5...|$|R
40|$|This thesis {{deals with}} the <b>adjacency</b> pairs and disjointed <b>adjacency</b> pairs. In this research, the writer {{wanted to know what}} <b>adjacency</b> pairs and disjointed <b>adjacency</b> pairs occured in "Finding Nemo". The writer used <b>Adjacency</b> Pairs theory {{explained}} by Sacks (1967) and Speech Acts theory explained by Austin and Searle as supporting theory. The writer took the conversation between Marlin and Dory in Finding Nemo?s script. The writer divided the <b>adjacency</b> pairs into two parts, that is, the well-responded <b>adjacency</b> pairs and not well-responded (disjointed) <b>adjacency</b> pairs. Because the writer only analyzed the disjointed <b>adjacency</b> pairs, she found out that there are some reasons from Dory for her not-well response (disjointed) action toward the first pair, like short term memory loss, stubbornness. Also, there are some reasons for Marlin not to respond well, like negative thinking, focuses on other thing. The writer concluded that disjointed <b>adjacency</b> pairs are still acceptable as long as it can be understand...|$|R
50|$|The other {{significant}} difference between <b>adjacency</b> lists and <b>adjacency</b> matrices is in {{the efficiency of the}} operations they perform. In an <b>adjacency</b> list, the neighbors of each vertex may be listed efficiently, in time proportional to the degree of the vertex. In an <b>adjacency</b> matrix, this operation takes time proportional to the number of vertices in the graph, which may be significantly higher than the degree. On the other hand, the <b>adjacency</b> matrix allows testing whether two vertices are adjacent to each other in constant time; the <b>adjacency</b> list is slower to support this operation.|$|R
25|$|Another {{construction}} of the Rado graph shows {{that it is an}} infinite circulant graph, with the integers as its vertices and with an edge between each two integers whose distance (the absolute value of their difference) belongs to a particular set S. For this construction to yield the Rado graph, S must have the property that <b>adjacencies</b> defined in this way have the extension property. This may be achieved by choosing S randomly, or by choosing the indicator function of S to be the concatenation of all finite binary sequences.|$|E
25|$|Hello: Hello {{messages}} {{are used as}} a form of greeting, to allow a router to discover other adjacent routers on its local links and networks. The messages establish relationships between neighboring devices (called <b>adjacencies)</b> and communicate key parameters about how OSPF is {{to be used in the}} autonomous system or area. During normal operation, routers send hello messages to their neighbors at regular intervals (the hello interval); if a router stops receiving hello messages from a neighbor, after a set period (the dead interval) the router will assume the neighbor has gone down.|$|E
25|$|In this context, a type {{is a set}} of {{variables}} together with a collection of constraints on the values of {{some or all of the}} predicates determined by those variables; a complete type is a type that constrains all of the predicates determined by its variables. In the theory of graphs, the variables represent vertices and the predicates are the <b>adjacencies</b> between vertices, so a complete type specifies whether an edge is present or absent between every pair of vertices represented by the given variables. That is, a complete type specifies the subgraph that a particular set of vertex variables induces.|$|E
50|$|The {{admission}} of powers of an <b>adjacency</b> matrix led Harary and Ross {{to note that}} a complete graph {{can be obtained from}} the square of an <b>adjacency</b> matrix of a tree. Relying on their study of clique detection, they described a class of graphs for which the <b>adjacency</b> matrix is the square of the <b>adjacency</b> matrix of a tree.|$|R
50|$|The main {{alternative}} to the <b>adjacency</b> list is the <b>adjacency</b> matrix, a matrix whose rows and columns are indexed by vertices and whose cells contain a Boolean value that indicates whether an edge is present between the vertices corresponding to the row and column of the cell. For a sparse graph (one in which most pairs of vertices are not connected by edges) an <b>adjacency</b> list is significantly more space-efficient than an <b>adjacency</b> matrix (stored as an array): the space usage of the <b>adjacency</b> list {{is proportional to the}} number of edges and vertices in the graph, while for an <b>adjacency</b> matrix stored in this way the space is proportional to the square of the number of vertices. However, it is possible to store <b>adjacency</b> matrices more space-efficiently, matching the linear space usage of an <b>adjacency</b> list, by using a hash table indexed by pairs of vertices rather than an array.|$|R
40|$|AbstractThe {{notion of}} a (1, x) <b>adjacency</b> matrix is introduced, {{together}} with methods for dealing with it. It is shown that in many instances this <b>adjacency</b> matrix is superior to the usual (0, 1) <b>adjacency</b> matrix, and will distinguish cospectral pairs, when the latter will not. In those {{cases in which the}} (1, x) <b>adjacency</b> matrix fares no better than the (0, 1) <b>adjacency</b> matrix, a good deal can be said about the matrices by which the cospectral pairs are similar...|$|R
25|$|Alternative {{conventions}} to node-link diagrams include adjacency representations such as circle packings, {{in which}} vertices {{are represented by}} disjoint regions in the plane and edges are represented by <b>adjacencies</b> between regions; intersection representations in which vertices are represented by non-disjoint geometric objects and edges are represented by their intersections; visibility representations in which vertices are represented by regions in the plane and edges are represented by regions that have an unobstructed line of sight to each other; confluent drawings, in which edges are represented as smooth curves within mathematical train tracks; fabrics, in which nodes are represented as horizontal lines and edges as vertical lines; and visualizations of the adjacency matrix of the graph.|$|E
25|$|It is {{possible}} to define a greedy coloring algorithm in which the vertices of the given graph are colored in a given sequence but in which the color chosen for each vertex {{is not necessarily the}} first available color; alternative color selection strategies have been studied within the framework of online algorithms. In the online graph-coloring problem, vertices of a graph are presented one at a time in an arbitrary order to a coloring algorithm; the algorithm must choose a color for each vertex, based only on the colors of and <b>adjacencies</b> among already-processed vertices. In this context, one measures the quality of a color selection strategy by its competitive ratio, the ratio between the number of colors it uses and the optimal number of colors for the given graph.|$|E
25|$|Although {{not every}} claw-free graph is perfect, claw-free graphs satisfy another property, related to perfection. A graph is called {{domination}} perfect {{if it has}} a minimum dominating set that is independent, and if the same property holds in all of its induced subgraphs. Claw-free graphs have this property. To see this, let D be a dominating set in a claw-free graph, and suppose that v and w are two adjacent vertices in D; then the set of vertices dominated by v but not by w must be a clique (else v would be the center of a claw). If every vertex in this clique is already dominated by at least one other member of D, then v can be removed producing a smaller independent dominating set, and otherwise v can be replaced by one of the undominated vertices in its clique producing a dominating set with fewer <b>adjacencies.</b> By repeating this replacement process one eventually reaches a dominating set no larger than D, so in particular when the starting set D is a minimum dominating set this process forms an equally small independent dominating set.|$|E
40|$|In {{this article}} we discuss a data structure, which {{combines}} advantages of two different ways for representing graphs: <b>adjacency</b> matrix and collection of <b>adjacency</b> lists. This data structure can fast add and search edges (advantages of <b>adjacency</b> matrix), use linear amount of memory, let to obtain <b>adjacency</b> list for certain vertex (advantages of collection of <b>adjacency</b> lists). Basic knowledge of linked lists and hash tables is required to understand this article. The article contains examples of implementation on Java. Comment: 7 page...|$|R
5000|$|Whereas unidimensional {{networks}} have two-dimensional <b>adjacency</b> matrices of size , in a multidimensional network with [...] dimensions, the <b>adjacency</b> matrix becomes a multilayer <b>adjacency</b> tensor, a four-dimensional matrix of size [...] By using index notation, <b>adjacency</b> matrices can be indicated by , to encode connections between nodes [...] and , whereas multilayer <b>adjacency</b> tensors are indicated by , to encode connections between node [...] in layer [...] and node [...] in layer [...] As in unidimensional matrices, directed links, signed links, and weights are all easily accommodated by this framework.|$|R
40|$|We {{consider}} the generalized notions of Cartesian and tensor productson m-uniform hypergraphs. The <b>adjacency</b> tensor is analogousto the <b>adjacency</b> matrix and two different notions of eigenvalues of theadjacency tensor on {{the products of}} hypergraphs are studied. The eigenvaluesand E-eigenvalues of the <b>adjacency</b> tensor of the Cartesian andtensor products of two hypergraphs {{in relation to the}} E-eigenvalues andeigenvalues of the <b>adjacency</b> tensor of the factors are considered...|$|R
2500|$|Lattice graph, {{the graph}} of {{horizontal}} and vertical <b>adjacencies</b> of squares on a chessboard ...|$|E
2500|$|Each OSPF router {{within a}} network {{communicates}} with other neighboring routers on each connecting interface {{to establish the}} states of all <b>adjacencies.</b> Every such communication sequence is a separate conversation identified by the pair of router IDs of the communicating neighbors. RFC 2328 specifies the protocol for initiating these conversations (Hello Protocol) and for establishing full <b>adjacencies</b> (Database Description Packets, Link State Request Packets). During its course, each router conversation transitions through a maximum of eight conditions defined by a state machine: ...|$|E
2500|$|Since , the {{weighted}} network adjacency is linearly {{related to the}} co-expression similarity on a logarithmic scale. Note that a high power [...] transforms high similarities into high <b>adjacencies,</b> while pushing low similarities towards 0. Since this soft-thresholding procedure applied to a pairwise correlation matrix leads to weighted adjacency matrix, the ensuing analysis {{is referred to as}} weighted gene co-expression network analysis.|$|E
40|$|A knot K {{is called}} Gordian {{adjacent}} to a knot L if there exists an unknotting sequence for L containing K. We provide a sufficient condition for Gordian <b>adjacency</b> of torus knots via the study of knots in the thickened torus. We also completely describe Gordian <b>adjacency</b> for torus knots of index 2 and 3 using Levine-Tristram signatures as obstructions to Gordian <b>adjacency.</b> Finally, Gordian <b>adjacency</b> for torus knots is compared {{to the notion of}} <b>adjacency</b> for plane curve singularities. Comment: 21 pages, 8 figures. Minor corrections and implementation of referee's recommendation...|$|R
30|$|Similarly, {{for target}} {{geologic}} structures {{with a large}} horizontal <b>adjacency</b> extension, we design a horizontal <b>adjacency</b> graph to distinguish them. We define each pixel of the set E satisfying this <b>adjacency</b> relationship: starting from the chosen pixel to its <b>adjacency</b> pixels in the −[*] 45 °, 0 ° and 45 ° directions, so the set E and its <b>adjacency</b> relation compose a directed graph called the horizontal <b>adjacency</b> graph (Fig.  3 b). We place each pixel of the electric imaging image I into the horizontal <b>adjacency</b> graph and perform the path opening. It can keep the low-angle fracture extended from −[*] 45 ° to 45 °, stratigraphic interfaces, stratification planes, argillaceous stripes and stress release fractures in the horizontal direction. Then, we determine the corresponding path lengths L as threshold values to separate low-angle fractures from other fractures.|$|R
5000|$|... where T is Hashimoto's edge <b>adjacency</b> operator. Hyman Bass gave a {{determinant}} formula {{involving the}} <b>adjacency</b> operator.|$|R
2500|$|In the {{mathematical}} discipline of graph theory, the line graph of an undirected graph G is another graph L(G) {{that represents the}} <b>adjacencies</b> between edges of G. The name line graph comes from a paper by [...] although both [...] and [...] used the construction before this. Other terms used for the line graph include the covering graph, the derivative, the edge-to-vertex dual, the conjugate, the representative graph, and the -obrazom, {{as well as the}} edge graph, the interchange graph, the adjoint graph, and the derived graph.|$|E
2500|$|OSPF {{supports}} complex networks {{with multiple}} routers, including backup routers, to balance traffic load on multiple {{links to other}} subnets. Neighboring routers in the same broadcast domain or {{at each end of}} a point-to-point telecommunications communicate with each other via the OSPF protocol. Routers form <b>adjacencies</b> when they have detected each other. This detection is initiated when a router identifies itself in a Hello protocol packet. Upon acknowledgment, this establishes a two-way state and the most basic relationship. The routers in an Ethernet or Frame Relay network select a Designated Router (DR) and a Backup Designated Router (BDR) which act as a hub to reduce traffic between routers. OSPF uses both unicast and multicast transmission modes to send [...] "Hello" [...] packets and link state updates.|$|E
2500|$|A {{hypergraph}} is a combinatorial structure that, like an undirected graph, has vertices and edges, but {{in which}} the edges may be arbitrary sets of vertices {{rather than having to}} have exactly two endpoints. A bipartite graph [...] may be used to model a hypergraph in which [...] is the set of vertices of the hypergraph, [...] is the set of hyperedges, and [...] contains an edge from a hypergraph vertex [...] to a hypergraph edge [...] exactly when [...] is one of the endpoints of [...] Under this correspondence, the biadjacency matrices of bipartite graphs are exactly the incidence matrices of the corresponding hypergraphs. As a special case of this correspondence between bipartite graphs and hypergraphs, any multigraph (a graph {{in which the}}re may be two or more edges between the same two vertices) may be interpreted as a hypergraph in which some hyperedges have equal sets of endpoints, and represented by a bipartite graph that does not have multiple <b>adjacencies</b> and in which the vertices {{on one side of the}} bipartition all have degree two.|$|E
3000|$|<b>Adjacency</b> matrix: We first {{simulate}} an <b>adjacency</b> matrix A∈R^n × n, using exogenously specified connection probabilities p [...]...|$|R
50|$|Properties of the <b>adjacency</b> algebra of G are {{associated}} with various spectral, <b>adjacency</b> and connectivity properties of G.|$|R
50|$|Initially, all <b>adjacency</b> {{lists are}} in level h. Over time the query {{procedure}} GETEDGELISTS moves the <b>adjacency</b> list of each node from higher numbered to lower numbered levels, until the <b>adjacency</b> list finally reaches level G1 and is removed. The pseudo code is as following.|$|R
2500|$|As a {{link state}} routing protocol, OSPF {{establishes}} and maintains neighbor relationships for exchanging routing updates with other routers. The neighbor relationship table is called an adjacency database. Two OSPF routers are neighbors {{if they are}} members of the same subnet and share the same area ID, subnet mask, timers and authentication. In essence, OSPF neighborship is a relationship between two routers that allow them to see and understand each other but nothing more. OSPF neighbors do not exchange any routing information – the only packets they exchange are Hello packets. [...] OSPF <b>adjacencies</b> are formed between selected neighbors and allow them to exchange routing information. Two routers must first be neighbors and only then, can they become adjacent. Two routers become adjacent if {{at least one of them}} is Designated Router or Backup Designated Router (on multiaccess type networks), or they are interconnected by a point-to-point or point-to-multipoint network type. For forming a neighbor relationship between, the interfaces used to form the relationship must be in the same OSPF area. While an interface may be configured to belong to multiple areas, this is generally not practiced. When configured in a second area, an interface must be configured as a secondary interface.|$|E
2500|$|DR's {{exist for}} the purpose of {{reducing}} network traffic by providing a source for routing updates. The DR maintains a complete topology table of the network and sends the updates to the other routers via multicast. All routers in a multi-access network segment will form a slave/master relationship with the DR. They will form <b>adjacencies</b> with the DR and BDR only. Every time a router sends an update, it sends it to the DR and BDR on the multicast address 224.0.0.6. The DR will then send the update out to all other routers in the area, to the multicast address 224.0.0.5. This way all the routers do not have to constantly update each other, and can rather get all their updates from a single source. [...] The use of multicasting further reduces the network load. [...] DRs and BDRs are always setup/elected on OSPF broadcast networks. [...] DR's can also be elected on NBMA (Non-Broadcast Multi-Access) networks such as Frame Relay or ATM. [...] DRs or BDRs are not elected on point-to-point links (such as a point-to-point WAN connection) because the two routers on either sides of the link must become fully adjacent and the bandwidth between them cannot be further optimized. DR and non-DR routers evolve from 2-way to full adjacency relationships by exchanging DD, Request, and Update.|$|E
2500|$|The {{neighborhood}} is roughly bounded by Columbus Avenue and the Boston neighborhood of Roxbury to the east, Ruggles Street {{to the northeast}} and the Olmsted designed Riverway/Jamaicaway, {{and the town of}} Brookline to the west. [...] The Historic District was designated by the Boston Landmarks Commission in 1985 and is roughly bounded by Smith Street, Worthington Street, Tremont Street (to the south), and Huntington Avenue (to the west). The Mission Hill {{neighborhood is}} immediately north of the Boston neighborhood of Jamaica Plain. It is served by the MBTA Green Line [...] "E" [...] Branch and the Orange Line, and is {{within walking distance of the}} Boston Museum of Fine Arts and the Gardner Museum. [...] "The Hill" [...] overlaps with about half of the Longwood Medical and Academic Area, home to 21 health care, research, and educational institutions which together provides the largest employment area in the City of Boston outside of downtown Boston. [...] Due to these <b>adjacencies,</b> the neighborhood is often struggling with institutional growth taking residential buildings and occupying storefront commercial space. [...] Recent years have seen new retail stores, restaurants, and residential development giving the neighborhood a stronger political voice and identity, as some of the educational institutions have made commitments to house all or most of their about 2000 undergraduate students in newly erected campus housing, including several new high-rise dormitories. People aged 20 to 24 account for 32% of the population currently living in Mission Hill.|$|E
40|$|In this paper, we {{show that}} the {{dimension}} of the <b>adjacency</b> poset of a planar graph is at most 8. From below, {{we show that}} there is a planar graph whose <b>adjacency</b> poset has dimension 5. We then show that the dimension of the <b>adjacency</b> poset of an outerplanar graph is at most 5. From below, we {{show that there is}} an outerplanar graph whose <b>adjacency</b> poset has dimension 4. We also show that the dimension of the <b>adjacency</b> poset of a planar bipartite graph is at most 4. This result is best possible. More generally, the dimension of the <b>adjacency</b> poset of a graph is bounded as a function of its genus and so is the dimension of the vertex-face poset of such a graph...|$|R
50|$|The <b>adjacency</b> {{matrix of}} G × H is the tensor {{product of the}} <b>adjacency</b> {{matrices}} of G and H.|$|R
30|$|In {{addition}} to the above-mentioned first-round dimensionality reduction {{of the number of}} nodes, we need {{to reduce the number of}} <b>adjacency</b> matrices, since it is difficult to compare the <b>adjacency</b> matrices of 2, 058 trading days directly. In this context, the second-round dimensionality reduction is introduced by clustering the conditional <b>adjacency</b> matrices. Specifically, we use the subspace clustering of matrices by using the low rank tensor approximation method. Once the <b>adjacency</b> matrices are sorted into a small number of groups, we build reduced-size sub-period <b>adjacency</b> matrices to summarize information on the inter-period changes of the dynamic network.|$|R
