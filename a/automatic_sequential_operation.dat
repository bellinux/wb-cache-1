0|441|Public
5000|$|... #Subtitle level 2: <b>Sequential</b> <b>operation</b> {{steps in}} aerial torpedo bombing ...|$|R
50|$|It {{features}} a 4.6 liter DOHC V8 mated to a 6-speed <b>automatic</b> <b>sequential</b> gearbox. Its rear wheels are 20 {{in with the}} rear tires being 305 mm wide. The front wheels and tires are 19 in and 275 mm, respectively.|$|R
40|$|Up to now, LCOS microdisplays {{employing}} the vertically aligned mode are only used in three-panel configurations because the liquid crystal was considered {{not fast enough}} for color <b>sequential</b> <b>operation.</b> This paper presents measurements of VAN cells using recent liquid crystal mixtures which indicate that color <b>sequential</b> <b>operation</b> is possible, both for digital driving using pulse-width modulation and for analog driving if color accuracy is not primordial...|$|R
40|$|A {{technique}} is described for the automatic insertion of fault models into VHDL gate models, using shared variables and linked lists. This procedure {{does not require}} any modification to the structural description of a circuit using these models. A method for <b>automatic</b> <b>sequential</b> fault simulation is further demonstrated...|$|R
50|$|Automatic Manual Transmission (AMT) {{is a type}} of <b>automatic</b> <b>sequential</b> manual transmission. Offered by Renault Group's Dacia {{under the}} Easy-R name it is founded on {{electro-mechanical}} rather than hydraulic technology. Easy-R automated transmission uses a traditional manual gearbox with an electronically controlled clutch and eliminates the need for a clutch pedal.|$|R
50|$|Compute kernels roughly {{correspond}} to inner loops when implementing algorithms in traditional languages (except {{there is no}} implied <b>sequential</b> <b>operation),</b> or to code passed to internal iterators.|$|R
50|$|An <b>automatic</b> <b>sequential</b> {{control system}} may trigger {{a series of}} {{mechanical}} actuators in the correct sequence to perform a task. For example, various electric and pneumatic transducers may fold and glue a cardboard box, fill it with product and then seal it in an automatic packaging machine. Programmable logic controllers are used in many cases such as this, but several alternative technologies exist.|$|R
50|$|The {{most common}} {{performance}} characteristics measured are <b>sequential</b> and random <b>operations.</b> <b>Sequential</b> <b>operations</b> access locations on the storage device in a contiguous manner and are generally associated with large data transfer sizes, e.g., 128 KB. Random operations access locations on the storage device in a non-contiguous manner and are generally associated with small data transfer sizes, e.g., 4 KB.|$|R
3000|$|... where w and z are {{functions}} of K to be defined. They {{will be determined}} {{in a way that}} optimizes the parallel and <b>sequential</b> <b>operations</b> for the given matrix structure and the number M = p [...]...|$|R
50|$|Sequential {{consistency}} {{can produce}} non-deterministic results. This {{is because the}} sequence of <b>sequential</b> <b>operations</b> between processors can be different during different runs of the program. All memory operations need {{to happen in the}} program order.|$|R
50|$|A {{production}} {{line is a}} set of <b>sequential</b> <b>operations</b> established in a factory where materials are put through a refining process to produce an end-product that is suitable for onward consumption; or components are assembled to make a finished article.|$|R
40|$|Parallelizing an {{algorithm}} {{consists of}} dividing the computation into {{a set of}} <b>sequential</b> <b>operations,</b> assigning the operations to threads, synchronizing the execution of threads, specifying the data transfer requirements between threads and mapping the threads onto processors. With current software technology, writing a parallel program executing the parallelized algorithm involves mixing sequential code with calls to a communication library such as PVM, both for communication and synchronization. This contribution introduces CAP (Computer-Aided Parallelization), a language extension to C++, from which C++/PVM programs are automatically generated. CAP allows to specify (1) the threads in a parallel program, (2) the messages exchanged between threads, and (3) the ordering of <b>sequential</b> <b>operations</b> required to complete a parallel task. All CAP <b>operations</b> (<b>sequential</b> and parallel) have a single input and a single output, and no shared variables. CAP separates completely the computation de [...] ...|$|R
40|$|A {{study of}} force and motion in {{hydraulic}} and pneumatic cylinders, involving cylinders, pumps, valves, and accumulators. Electrical, hydraulic, and pneumatic controls will be studied, {{with an emphasis on}} <b>sequential</b> <b>operation</b> of fluid devices. Both electrical and fluid schematic diagrams will be examined. I. PRE-REQUISITES/CO-REQUISITES...|$|R
5000|$|... (The {{last five}} guide words are {{applicable}} to batch or <b>sequential</b> <b>operations.)</b> Where a guide word is meaningfully applicable to a parameter e.g. NO FLOW, MORE TEMPERATURE, their combination should be recorded as a credible potential deviation (from the design intent) that requires review.|$|R
40|$|Abstract — Operational {{transformation}} (OT) is {{an established}} optimistic consistency control method in collaborative applications. This approach requires correct transformation functions. In general all OT algorithms only consider two character-based primitive operations and hardly {{two or three}} of them support string based two primitive operations, insert and delete. In our earlier paper [1] we have proposed new algorithms that consider first time in history new string operations that are update for atomic string operations in addition to primitive operations like insert and delete. In this paper we have proposed new algorithms LocalU and RemoteU for handling local and remote update operations of strings for both atomic and <b>sequential</b> <b>operations.</b> These algorithms first time in history are handling <b>sequential</b> update string <b>operations.</b> These algorithms satisfy correctness criteria like causality preservation and admissibility preservation. These algorithms are for <b>sequential</b> update <b>operations</b> but have synchronization with existing primitive operations like insert and delete also. It also handles overlapping and splitting of operations when concurrent operations are transformed. These algorithms can be applied {{in a wide range of}} practical collaborative applications. Key words: Operational transformation, transformation functions, update string <b>sequential</b> <b>operations,</b> collaborative applications...|$|R
50|$|The {{algorithmic}} {{state machine}} (ASM) method {{is a method}} for designing finite state machines. It is used to represent diagrams of digital integrated circuits. The ASM diagram is like a state diagram but less formal and thus easier to understand. An ASM chart is a method of describing the <b>sequential</b> <b>operations</b> of a digital system.|$|R
50|$|A {{molecular}} {{logic gate}} is a molecule that performs a logical operation based on one or more physical or chemical inputs and a single output. The field has advanced from simple logic systems based on a single chemical or physical input to molecules capable of combinatorial and <b>sequential</b> <b>operations</b> such as arithmetic operations i.e. moleculators and memory storage algorithms.|$|R
40|$|The {{construction}} of semi-automation and automaton which can perform <b>sequential</b> <b>operations</b> uses only the basic algebraic structure viz. free semigroups {{or to be}} more specific free monoids. Now in this paper we use in these constructions, groupoids in particular Smarandache free groupoids to study them. This study was first initiated in 2002 by W. B. Vasantha...|$|R
40|$|Various {{forms of}} assumption/commitment {{specifications}} {{have been used}} to specify and reason about the interference that comes from concurrent execution; in particular, consistent and complete proof rules relating to shared state operation specifications [...] with rely and guarantee conditions [...] have been published elsewhere. This report investigates methodological issues in the formulation of such specifications, and their way to record design decisions. This work aims at making the use of rely/guarantee conditions more tractable, both at the specification level and in the development towards code. 1 1 Introduction Formal methods based on model-oriented specifications like VDM or B are applicable to the development of <b>sequential</b> <b>operations.</b> In such approaches, state components can be common to several operations but only one operation is executed at a time. A <b>sequential</b> <b>operation</b> can then be interpreted as a binary relation on the state space and specified with pre and post condi [...] ...|$|R
5000|$|This policy {{internally}} tracks <b>sequential</b> I/O <b>operations</b> so {{they can}} be routed around the cache, with different configurable thresholds for the differentiation between random I/O and <b>sequential</b> I/O <b>operations.</b> As a result, large contiguous I/O operations are left to be performed by the origin device because such data access patterns are suitable for HDDs, and because they avoid undesirable cache invalidation.|$|R
40|$|Abstract—Speed {{and size}} are two {{important}} factors while designing the electronic system. It’s Speed of operation and flexibility to modify, measures {{the performance of}} the system operation. Microprocessor/microcontroller (MPMC) system can handle <b>sequential</b> <b>operations</b> with high flexibility and use of Complex Programmable Devices (CPLD) can handle concurrent operations with high speed in small size area. So combined features of both these systems can enhance {{the performance of the}} system. High performance Hybrid Telephone Switching System (HTSS) is designed using combination of stored program control (SPC) and VLSI technology. Call handling operations are handled by concurrent operations using CPLD and complicated <b>sequential</b> <b>operations</b> like service handling are handled by MPMC. VHDL codes are designed and tested for different call handling operations. The test benches are designed to act as MPMC for the testing of services like Do Not Disturb (DND), Call Forwarding (CF), Outgoing Bar (OGB) and STD Bar (STDB) facilities. Call handling speed of available system designed with MPMC and proposed system designed with CPLD is compared...|$|R
40|$|We {{explore a}} range of {{techniques}} that use two hands to control two independent cursors to perform operations in 3 D desktop applications. Based on research results in 2 D applications, we believe that two-handed input provides the potential for creating more efficient and more fluid interfaces, especially for tasks that are context-sensitive or that have many degrees of freedom. These tasks appear frequently in 3 D applications and are commonly broken down {{into a series of}} <b>sequential</b> <b>operations,</b> each controlling fewer degrees of freedom [...] even though this may dramatically change the character of the task. However, two-handed interaction, in theory, makes it possible to perform the same tasks using half the number of sequential steps since two previously <b>sequential</b> <b>operations</b> can be performed simultaneously. In addition, many forms of two-handed interaction may be simpler to use and to understand since they correspond to common interactions in the physical world. It is significant when ta [...] ...|$|R
25|$|In September 2005, the GS 350 (GRS191) and GS 430 (UZS190) {{went on sale}} in Japan; the GS 350 using a 3.5-liter 2GR-FSE engine with D4-S direct injection, {{while the}} GS 430 used the same 4.3-liter 3UZ-FE V8 engine used in the {{previous}} model. Sales in the US began in March 2006, with the initial lineup including the GS 300 (GRS190), featuring a ULEV certified 3.0-liter 3GR-FSE V6 engine, and the GS 430 featuring the 4.3-liter V8. All GS models at launch featured a new six-speed <b>automatic</b> <b>sequential</b> shift gearbox. An all-wheel drive system was made available in the GS 300.|$|R
40|$|The risk of {{developing}} venous thromboembolism (VTE) in urologic patients undergoing major surgery without thromboprophylaxis is high (up to 40 %). The aims were to study the acceptability rate of and overall patient satisfaction with an <b>automatic</b> <b>sequential</b> leg compression system and the short-term effectiveness of a combined VTE prevention modality. Combined mechanical and pharmacological thromboprophylaxis was highly effective, well tolerated, and safe. The device tested showed a high comfort and tolerability profile. The use of combined modalities for VTE prophylaxis is justified in patients at very high risk of VTE, such as those undergoing radical retropubic prostatectomy...|$|R
40|$|Three {{hundred and}} ninetynine Grade 4 Brisbane {{children}} {{were given a}} battery o 1 general ability and achievement tests. Means and standard deviations allowed construction of 15 point scales for a Queensland Grade 4. A correlation matrix included indices concerning subtests of general ability and achievement tests. Comparisons with original A. C. E. R. coefficients were made. The matrix was factor subtests of general ability and achievement tests. Comparisons with analysed and rotated, three factors emerging verbal, performance and computational. A canonical correlation was performed and three significant elements emerged a verbal, a computational (or integrative or <b>automatic</b> <b>sequential)</b> and a problemsolving element...|$|R
50|$|In September 2005, the GS 350 (GRS191) and GS 430 (UZS190) {{went on sale}} in Japan; the GS 350 using a 3.5-liter 2GR-FSE engine with D4-S direct injection, {{while the}} GS 430 used the same 4.3-liter 3UZ-FE V8 engine used in the {{previous}} model. Sales in the US began in March 2006, with the initial lineup including the GS 300 (GRS190), featuring a ULEV certified 3.0-liter 3GR-FSE V6 engine, and the GS 430 featuring the 4.3-liter V8. All GS models at launch featured a new six-speed <b>automatic</b> <b>sequential</b> shift gearbox. An all-wheel drive system was made available in the GS 300.|$|R
40|$|Tracey's Theorem {{has long}} been {{recognized}} as essential in generating state assignments for asynchronous sequential circuits. This paper shows that partitioning variables derived from Tracey's Theorem also has a significant impact in generating the design equations. Moreover, this theorem {{is important to the}} fundamental understanding of asynchronous <b>sequential</b> <b>operation.</b> The results of this work simplify asynchronous logic design. Moreover, detection of safe circuits is made easier...|$|R
40|$|This paper {{describes}} a lightning test facility {{designed and built}} in India for simulating the direct and indirect effects of lightning, e. g., attachment, streamering, induced voltages, structural damage etc. The design details {{as well as the}} waveforms generated by each of these generators are presented. Different combinations of <b>sequential</b> <b>operations</b> of the current generators required for direct effect testing were simulated experimentally and compared with the computed result...|$|R
40|$|Long-term global {{analysis}} of lower-dimensional {{systems can be}} performed by in a computationally efficient manner by using cell mapping methods. Scaling limitations associated with higher order systems can be addressed by using the multiple degree-of-freedom cell mapping (MDCM) method. However, the MDCM algorithm consists {{of a number of}} <b>sequential</b> <b>operations</b> which limits its ability to utilize the parallel processing capabilities of modern computers. A parallelized multiple degree-of-freedom cell mapping (PMDCM) method is introduced here to address this limitation. By restructuring the MDCM algorithm to enable parallel operations, the efficiency of the algorithm is significantly enhanced. The details of the PMDCM algorithm are presented and performance is compared to the MDCM method and baseline obtained by using the grid-of-starts method. By running the PMDCM method on a workstation with a quad-core processor and by parallelizing 100 numerical integration operations, the total computation time is decreased by 93 % from the time required of the MDCM method. Parallelizing the integration operations also reduces the error which can accumulate when by using the <b>sequential</b> <b>operations</b> of the MDCM method...|$|R
40|$|Abstract: A {{production}} {{line is a}} set of <b>sequential</b> <b>operations</b> established in a factory whereby materials are put through a refining process to produce an end-product that is suitable for onward consumption; or components are assembled to make a finished article. A {{production line}} {{is a set of}} <b>sequential</b> <b>operations</b> established in a factory whereby materials are put through a refining process to produce an end-product that is suitable for onward consumption; or components are assembled to make a finished article. In this paper I modified the already existing normal production line into what I called smart production by giving the recognition capabilities to the normal production. This recognition capability was achieved by MATLAB, camera was installed on the normal production line which was taking pictures of the incoming products, identifying the incoming product from the picture taken and then the PLC was told by MATLAB did the recognition of the incoming product where to pack the three different incoming products without mixing them, each in its own pack tray...|$|R
40|$|Agricultural biomass {{supply chain}} {{consists}} {{of a number of}} interacted <b>sequential</b> <b>operations</b> affected by various variables, such as weather conditions, machinery systems, and biomass features. These facts make the process of biomass supply chain as a complex system that requires computational tools, e. g. simulation and mathematical models, for their assessment and analysis. A biomass supply chain simulation model developed on the ExtendSim 8 simulation environment is presented in this paper. A number of <b>sequential</b> <b>operations</b> are applied in order biomass to be mowed, harvested, and transported to a biorefinery facility. Different operational scenarios regarding the travel distance between field and biorefinery facility, number of machines, and capacity of machines are analyzed showing how different parameters affect the processes within biomass supply chain in terms of time and cost. The results shown that parameters such as area of the field, travel distance, number of available machines, capacity of the machines, etc. should be taken into account in order a less time and/ or cost consuming machinery combination to be selected...|$|R
40|$|The {{unavoidable}} finite time intervals {{between the}} <b>sequential</b> <b>operations</b> needed for performing practical quantum computing can degrade {{the performance of}} quantum computers. During these delays, unwanted relative dynamical phases are produced due to the free evolution of the superposition wave-function of the qubits. In general, these "errors" modify the desired quantum interferences and thus spoil the correct results compared to the ideal standard quantum computing that do not consider the effects of delays between successive unitary operations. Here, we show that, {{in the framework of}} quantum phase estimation algorithm, these coherent phase "errors", produced by the time delays between <b>sequential</b> <b>operations,</b> can be avoided efficiently by setting up the delay times to satisfy certain matching conditions. Compared to previous schemes, the present approach provides an almost ideal quantum computing process, as it does not require any additional operation to cancel the unwanted relative phases produced during delay times. A realistic finite-time, instead of the ideal continuous-time, operational implementations of quantum order-finding and quantum counting algorithms are treated as special demonstrations of the general approach presented here...|$|R
40|$|Electron {{tomography}} {{has become}} a uniquely powerful tool for investigating the structures of individual cells, viruses, and macromolecules. Data collection is, however, time consuming and requires expensive instruments. To optimize productivity, we have incorporated one of the existing tilt-series acquisition programs, UCSF Tomo, into the well-developed automatic electron microscopy data collection package Leginon to enable fully <b>automatic,</b> <b>sequential</b> tilt-series acquisition. Here we describe how UCSF Tomo was integrated into Leginon, what users must do {{to set up a}} data collection session, how the automatic collection proceeds, how archived data about the process can be accessed and used, and how the software has been tested...|$|R
40|$|Information {{ratchets}} extract {{work from}} heat baths using low entropy information reservoirs. We {{find that the}} structure of the reservoirs affects both their performance and phase diagram. By deriving exact probabilities of recurrence in d-dimensional reservoirs we calculate the net extraction of work. Performance is characterised by two critical dimensions (i) For d 4 purely diffusive exploration is optimal. This has important consequences for computation where <b>sequential</b> <b>operations</b> constitute a 1 D path...|$|R
40|$|We {{consider}} {{a set of}} n tasks, each of them is composed {{by a set of}} <b>sequential</b> <b>operations.</b> A set of bu ers B is given : each buffer b 2 B is defined between two tasks T i ! T j, has a weight w b and is managed as a FIFO structure. Some operations from T i write data in the buffer b, other from T j get data in b...|$|R
50|$|Most CPUs are {{synchronous}} circuits, {{which means}} they employ a clock signal to pace their <b>sequential</b> <b>operations.</b> The clock signal is produced by an external oscillator circuit that generates a consistent number of pulses each second {{in the form of}} a periodic square wave. The frequency of the clock pulses determines the rate at which a CPU executes instructions and, consequently, the faster the clock, the more instructions the CPU will execute each second.|$|R
