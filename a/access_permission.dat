98|421|Public
25|$|Encapsulation is the hiding of {{information}} to ensure that data structures and operators are used as intended {{and to make the}} usage model more obvious to the developer. C++ provides the ability to define classes and functions as its primary encapsulation mechanisms. Within a class, members can be declared as either public, protected, or private to explicitly enforce encapsulation. A public member of the class is accessible to any function. A private member is accessible only to functions that are members of that class and to functions and classes explicitly granted <b>access</b> <b>permission</b> by the class ("friends"). A protected member is accessible to members of classes that inherit from the class in addition to the class itself and any friends.|$|E
2500|$|TLB updates are {{performed}} automatically by page table walking hardware. [...] PTEs include read/write <b>access</b> <b>permission</b> based on privilege, cacheability information, an NX bit, and a non-secure bit.|$|E
2500|$|Many {{significant}} rock outcrops {{exist on}} private land. Some {{people within the}} rock climbing community have been guilty of trespassing in many cases, often after land ownership transfers and previous <b>access</b> <b>permission</b> is withdrawn. In the U.S. the climbing community responded to access closures by forming the Access Fund. This is an [...] "advocacy organization that keeps U.S. climbing areas open and conserves the climbing environment. Five core programs support the mission on national and local levels: public policy, stewardship and conservation (including grants), grassroots activism, climber education and land acquisition." [...] In the U.K. the British Mountaineering Council represents climbers and their interest of public access to crags, cliffs and boulders.|$|E
40|$|The article {{describes}} the <b>access</b> <b>permissions</b> method in BlockSet methodology. The main feature of technique is universalization. On the one hand, <b>access</b> <b>permissions</b> are divided between individual users and groups with their priorities. On the other hand, access may have a different scope and can be inherited...|$|R
40|$|This paper {{presents}} a polymorphic extension to a type system that prevents {{the misuse of}} object protocols. Polymorphism allows classes to be generic in the <b>Access</b> <b>Permissions</b> in their specifications. <b>Access</b> <b>Permissions</b> describe both {{the current state of}} an object and whether or not references to the object alias. Polymorphic <b>Access</b> <b>Permissions</b> allow programmers to specify certain patterns that we have encountered in practice, for example a collection of open, unaliased files. This paper also describes an implementation of this system as a static typestate checker for the Java programmin...|$|R
50|$|Business objects <b>access</b> <b>permissions</b> {{are defined}} at the user group level.|$|R
2500|$|Some early iOS {{installs}} of Pokémon Go required {{users to}} provide the app with full access to their Google accounts, thereby allowing the app to [...] "access players' Gmail-based email, Google Drive-based files, photos and videos stored in Google Photos, and any other content within their Google accounts". The Pokémon Company and Niantic responded to the concerns, recognizing that the iOS app, at the time, [...] "... erroneously requests full <b>access</b> <b>permission</b> for the user's Google account ..." [...] However, Adam Reeve—the person who initially made claims of the security issues in a Tumblr post—later backtracked on his claim and was not [...] "100 percent sure" [...] it was valid. Dan Guido, CEO of the security company Trail of Bits, analyzed the app's programming and discovered that although the game did request full account access, this did not enable third-party usage as initially conveyed. Guido found that this did enable Niantic to access people's email addresses and phone numbers unintentionally. A subsequent iOS app update reduced the scope of access. Niantic also issued a statement assuring users that no information was collected nor was any information beyond what was necessary to use the app accessed.|$|E
50|$|<b>Access</b> <b>Permission</b> Request: local user should {{approve a}} remote access session start.|$|E
50|$|Other {{applications}} of Kuang-Chi's photonic technology involve ID recognition, <b>access</b> <b>permission</b> and product authentication.|$|E
5000|$|Violation of <b>access</b> <b>permissions</b> or {{policies}} in applications and operating systems ...|$|R
40|$|Abstract. <b>Access</b> <b>permissions</b> {{are used}} in several program {{verification}} approaches such as those based on separation logic or implicit dynamic frames to simplify framing {{and to provide a}} basis for reasoning about concurrent code. However, <b>access</b> <b>permissions</b> increase the annotation overhead because programmers need to specify for each program component which permissions it requires or provides. We present a new static analysis based on abstract interpretation to infer <b>access</b> <b>permissions</b> automatically. Our analysis computes a symbolic approximation of the permissions owned for each heap location at each program point and infers a constraint system over these symbolic permissions that reflects the permission requirements of each heap access in the program. The constraint system is solved using linear programming. Our analysis is parametric in the permission system and supports, for instance, fractional and counting permissions. Experimental results demonstrate that our analysis is fast and is able to infer almost all <b>access</b> <b>permissions</b> for our case studies. ...|$|R
50|$|It {{also allows}} users to change or revoke <b>access</b> <b>permissions</b> without sharing the {{document}} again.|$|R
50|$|The Domain {{mechanism}} {{is the heart}} of the protection mechanism. Each BD (bank descriptor) has a lock field consisting of a ring number and domain number. There is also a key field in the state of each activity. If the key matches the lock or the ring in the key is less than the ring in the lock, the activity has Special <b>Access</b> <b>Permission.</b> Otherwise, the activity has General <b>Access</b> <b>Permission.</b>|$|E
50|$|TLB updates are {{performed}} automatically by page table walking hardware. PTEs include read/write <b>access</b> <b>permission</b> based on privilege, cacheability information, an NX bit, and a non-secure bit.|$|E
5000|$|For the 1999 summer {{solstice}} English Heritage granted [...] "limited access" [...] to Stonehenge to neo-druids. This <b>access</b> <b>permission</b> was later rescinded when 200 New Age travellers broke {{on to the}} site. Twenty people were arrested.|$|E
50|$|In Unix's chmod, {{the value}} 777 grants all file <b>access</b> <b>permissions</b> to all user types.|$|R
5000|$|Sci-Mate {{allows users}} to define <b>access</b> <b>permissions,</b> but {{can be used as}} an open {{notebook}} tool.|$|R
50|$|Inspector windows show {{information}} in programs like file managers, showing file parameters like file size and <b>access</b> <b>permissions.</b>|$|R
50|$|An {{identifier}} referencing {{a variable}} {{can be used}} to access the variable in order to read out the value, or alter the value, or edit the attributes of the variable, such as <b>access</b> <b>permission,</b> locks, semaphores, etc.|$|E
5000|$|Security: DBPs {{can be used}} to {{restrict}} the operations available to the tables. The SQL GRANT statement {{can be used to}} provide execute permission for a DBP accessing the tables, even though the tables provide no <b>access</b> <b>permission.</b>|$|E
50|$|Kildary is an {{important}} site for those researching the Clan Ross. However, the castle is on private land and limited <b>access</b> <b>permission</b> must be obtained well before any visit. Mohamed Al Fayed has announced plans, August 2006, for a restaurant to be built within the castle grounds, offering produce farmed by the estate.|$|E
5000|$|<b>Access</b> <b>permissions,</b> {{refers to}} the ability to define a list of users who have access to the application.|$|R
5000|$|Administrator - {{responsible}} for managing <b>access</b> <b>permissions</b> to documents and files, usually accomplished by assigning access rights to user groups or roles.|$|R
5000|$|Provisioning {{and life}} cycle {{management}} - handles the <b>access</b> <b>permissions</b> {{of a personal}} user to shared/generic privileged accounts based on roles and policies.|$|R
5000|$|In April 2017, Google's Project Zero {{investigated}} Broadcom's SoC WiFi stack {{and found}} that it lacked [...] "all basic exploit mitigations - including stack cookies, safe unlinking and <b>access</b> <b>permission</b> protection," [...] allowing [...] "full device takeover by Wi-Fi proximity alone, requiring no user interaction." [...] Numerous smartphones, such as by Apple, Samsung and Google were affected.|$|E
50|$|LightCMS has {{the ability}} to manage {{settings}} on a page or side basis. Changing <b>access</b> <b>permission,</b> CSS content, meta data, or SSL encryption is all done over the page settings. Creation of custom templates is also supported. Designs can be loaded as templates, using the design library, or by custom designs made for the page by developers of LightCMS. Also, the platform enables to set up and build clients for each LightCMS site.|$|E
50|$|Opaque binary blob (OBB) is a {{term used}} in network {{engineering}} and computer science {{to refer to a}} sizeable piece of data, which looks like binary garbage from outside, by entities which do not know what that blob denotes or carries, but make sense to entities which have <b>access</b> <b>permission</b> and access functions to them. It is also a pejorative term for compiled code without the source code made available (see: binary blob).|$|E
50|$|LXR {{limitations}} {{are those of}} the support tools, mainly Exuberant ctags. But the primary cause of difficulties comes essentially from incorrect <b>access</b> <b>permissions</b> to files.|$|R
50|$|The BD also {{contains}} a key value and access control fields. The fields indicate whether read, write, or execute permission is granted to the instruction processor (3 bits). The Special <b>Access</b> <b>Permissions</b> (SAP) applies only to activities executing within the owning subsystem (really only those with a matching key value). The General <b>Access</b> <b>Permissions</b> (GAP) applies to everyone else and is usually zero (no access). The Exec sets a key value {{in the state of}} each activity which may be changed by gate and interrupt transitions.|$|R
40|$|Objects often define usage {{protocols}} {{that clients}} must follow {{in order for}} these objects to work properly. Aliasing makes it notoriously difficult to check whether clients and implementations are compliant with such protocols. Accordingly, existing approaches either operate globally or severely restrict aliasing. We have developed a sound modular protocol checking approach, based on typestates, that allows {{a great deal of}} flexibility in aliasing while guaranteeing the absence of protocol violations at runtime. The main technical contribution is a novel abstraction, <b>access</b> <b>permissions,</b> that combines typestate and object aliasing information. In our methodology, developers express their protocol design intent through annotations based on <b>access</b> <b>permissions.</b> Our checking approach then tracks permissions through method implementations. For each object reference the checker keeps track of the degree of possible aliasing and is appropriately conservative in reasoning about that reference. This helps developers account for object manipulations that may occur through aliases. The checking approach handles inheritance in a novel way, giving subclasses more flexibility in method overriding. Case studies on Java iterators and streams provide evidence that <b>access</b> <b>permissions</b> can model realistic protocols, and protocol checking based on <b>access</b> <b>permissions</b> can be used to reason precisely about the protocols that arise in practice...|$|R
50|$|Tumby Island {{is a low}} bedrock island located 500 m east of the {{southern}} tip of Tumby Bay (Tumby Point) in Spencer Gulf, South Australia. The island is a conservation park comprising 35 hectares. The island can be accessed on foot at low tide by traversing shallow water-covered rock flats and curving sand. Visitors should request <b>access</b> <b>permission</b> from DEWNR (Government of South Australia) before visiting and be mindful of the presence of Death adders.|$|E
5000|$|In {{computer}} security, discretionary {{access control}} (DAC) {{is a type of}} access control defined by the Trusted Computer System Evaluation Criteria [...] "as a means of restricting access to objects based on the identity of subjects and/or groups to which they belong. The controls are [...] in the sense that a subject with a certain <b>access</b> <b>permission</b> is capable of passing that permission (perhaps indirectly) on to any other subject (unless restrained by mandatory access control)".|$|E
50|$|UMA {{also does}} not use or depend on the eXtensible Access Control Markup Language (XACML) {{as a means of}} {{encoding}} user policy or requesting policy decisions. UMA does not dictate policy format, as policy evaluation is performed internally to the AS from the UMA perspective. Typically XACML would be used to implement the policies inside the AS. Its implementation is out-of-scope of UMA. The UMA protocol flows for requesting <b>access</b> <b>permission</b> have some features in common with the XACML protocol.|$|E
5000|$|CimTrak VMware ESXi Configuration Monitor {{monitors}} critical core VMware ESXi configurations such a user/host <b>access</b> <b>permissions,</b> {{active directory}} realms, network settings, integrated 3rd party tools, and advanced user configurations.|$|R
50|$|The {{maintainer}} {{takes care}} of the legal side of the project, prepares the regular project releases and does some quality management. The maintainer also grants the CVS <b>access</b> <b>permissions.</b>|$|R
50|$|A permission-driven user {{interface}} (PDUI) is a {{user interface}} {{in which the}} appearance or non-appearance of menu items or functions {{is driven by the}} <b>access</b> <b>permissions</b> granted to a user.|$|R
