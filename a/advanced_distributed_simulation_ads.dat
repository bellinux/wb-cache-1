9|3237|Public
5000|$|Modsaf (Modular Semi-Automated Forces) {{is a set}} of {{software}} modules and applications used to construct <b>Advanced</b> <b>Distributed</b> <b>Simulation</b> (<b>ADS)</b> and Computer Generated Forces (CGF) applications. ModSAF modules and applications let a single operator create and control large numbers of entities that are used for realistic training, test, and evaluation on the virtual battlefield. ModSAF contains entities that are sufficiently realistic resulting in the user not being aware that the displayed vehicles are being maneuvered by computers, rather than human crews. These entities, which include ground and air vehicles, dismounted infantry (DI), missiles, and dynamic structures, can interact {{with each other and with}} manned individual entity simulators to support training, combat development experiments, and test of evaluation studies.|$|E
40|$|ABSTRACT: Many {{issues are}} {{involved}} in the successful conduct of an <b>Advanced</b> <b>Distributed</b> <b>Simulation</b> (<b>ADS)</b> exercise undertaken over a large geographic area. One key issue {{is the extent to which}} the geographic separation between the simulation nodes creates unacceptable latencies between transmission and reception of data. Latency problems can lead to lack of fidelity in the simulated exercise which ideally requires real time response. This paper reports experiments which estimate these transmission latencies over large geographic areas. The effect of the protocol used (eg. Distributed Interactive Simulation (DIS) or Higher Level Architecture (HLA)) on the latency is also discussed. 1...|$|E
40|$|The Royal Australian Navy (RAN) {{plans to}} exploit {{advances}} in simulation technology {{to improve its}} team training {{through the use of}} <b>Advanced</b> <b>Distributed</b> <b>Simulation</b> (<b>ADS).</b> Existing shore-based human-in-the-loop training simulators will be linked to a tactical wargaming system to provide a sophisticated command team training environment. Legacy simulators are those which were never designed with the intent of interoperability. Each simulator is a selfcontained virtual world comprising many synthetic entities which must inevitably be enhanced to allow participation in combined exercises using DIS and/or HLA gateways. Missing data, coordinate transformation, filtering, model fidelity, simulation management, and communications between the systems are carefully considered. 1...|$|E
5000|$|... #Caption: Using <b>advanced</b> <b>distributed</b> <b>simulation</b> {{to support}} information, knowledge, and wisdom {{representation}} ...|$|R
50|$|Subsequent {{divisions}} {{were established}} under what became IDA's largest research center, the Studies and Analyses Center (now the Systems and Analyses Center), to provide cost analyses, computer software and engineering, strategy and force assessments, and operational test and evaluation. IDA created the Simulation Center {{in the early}} 1990s to focus on <b>advanced</b> <b>distributed</b> <b>simulation,</b> and most recently, established the Joint Advanced Warfighting Program to develop new operational concepts.|$|R
40|$|This paper {{describes}} a new VHDL simulator. Its objectoriented design {{makes it very}} flexible, both towards VHDL and the simulation algorithm and hardware. It is designed according to a strict set of design goals that were prompted partly by its future use in performance evaluation of <b>distributed</b> VHDL <b>simulation.</b> The simulator is divided in three parts with well defined interfaces. This makes the above-mentioned flexibility possible, and allows the simulator {{to be worked on}} concurrently for most of the implementation time. At the end of the implementation phase it has become clear that is possible to have a flexible, object-oriented simulator for full VHDL that can be used with the most <b>advanced</b> <b>distributed</b> <b>simulation</b> algorithms. ...|$|R
40|$|ABSTRACT: The ADF is {{adopting}} <b>Advanced</b> <b>Distributed</b> <b>Simulation</b> (<b>ADS)</b> {{technologies such}} as Distributed Interactive Simulation (DIS) and High Level Architecture (HLA) to enhance its training capability. To support this thrust, Air Operations Division has developed a testbed for experimentation in ADS. Where possible this testbed is based on Commercial-Off-the-Shelf (COTS) tools, low cost computing platforms, and locally developed visual databases. These tools include DIS/HLA toolkits, scenario generators, 2 D and 3 D viewers, data loggers, testing systems, database development systems, etc. The use {{of a network of}} cost-effective simulation computers introduces a new set of management problems compared to a centralised multiprocessor computer model. How these problems are addressed is discussed in this paper. 1...|$|E
40|$|The venerable {{problem solving}} {{technique}} of simulation {{finds itself in}} the midst of a revolution. Where once it was regarded as a "technique of last resort" for systems analysis, today simulation is widely applied to support myriad purposes, including: training, interaction, visualization, hardware testing, and decision support in real-time. <b>Advanced</b> <b>distributed</b> <b>simulation</b> (<b>ADS)</b> is the U. S. Department of Defense (DoD) nomenclature used to describe the cooperative utilization of physically distributed simulations toward a common objective. The Aggregate Level SimulationProtocol (ALSP), under the auspices of ADS, provides a mechanism for the integration of existing simulation models to support training via theater-level simulation exercises. Consisting of a collection of infrastructure software and protocols for both inter-model communication through a common interface and time advance using a conservative Chandy-Misra based algorithm, the ALSP has supported an evolving "confederation of [...] ...|$|E
40|$|The Joint Advanced Distributed Simulation Joint Test Force (JADS JTF) is {{chartered}} by the U. S. Office of the Secretary of Defense (OSD) {{to determine}} the utility of <b>advanced</b> <b>distributed</b> <b>simulation</b> (<b>ADS)</b> for both developmental and operational test and evaluation (DT&E and OT&E). The program is at its midpoint, and this paper {{is designed to provide}} a progress report on the lessons learned to date on the use of ADS intest and evaluation (T&E). The paper opens with a brief overview of ADS technology and then a short description of the JADS Joint Test and Evaluation (JT&E) program. Third, the main portion of the paper will discuss the results and lessons learned during the ADS-enhanced testing conducted throughout the first major phases of the JADS JT&E program. Fourth, the JADS study on the linking of electronic warfare (EW) test facilities, the Threat Systems Linking Architecture (TSLA) Study, is briefly described. Finally, other considerations will be offered for the T&E professional interested in whether ADS might be a suitable test tool. The material in this paper fuses material from other JADS documents prepared by many members of the JADS JTF. Readers are encouraged seek more information JADS has compiled either via the address above or their web sit...|$|E
40|$|<b>Distributed</b> <b>simulations</b> {{are mainly}} used to interoperate {{heterogeneous}} simulators or geographically distributed models. We present here RESTful-CD++, the first <b>distributed</b> <b>simulation</b> middleware based on REST (Representational State Transfer) Web-services. RESTful-CD++ middleware enables heterogeneous independent-developed simulation components to interoperate with much flexibility and simplicity. REST {{has the potential}} to <b>advance</b> <b>distributed</b> <b>simulation</b> state-of-the-art towards plug-and-play or automatic/semi-automatic interoperability. This because of its lightweight approach hides internal software implementation by using universal uniform interface and describing connectivity semantics in form of messages, usually XML. In contrast, other approaches expose functionalities in heterogeneous RPCs that often reflect internal implementation and describe semantics in form of procedure parameters. Further, REST enables simulations to mashup with Web 2. 0 applications, which makes simulation in link with any device attached to the Web dynamically at runtime. The CD++ tool is now the first simulation engine to use RESTful middleware to perform <b>distributed</b> <b>simulation</b> in large-scale. ...|$|R
40|$|<b>Advanced</b> <b>distributed</b> {{interactive}} <b>simulations</b> have stringent {{quality of}} service (QoS) requirements for throughput, latency, and scalability, as well as requirements for a flexible communication infrastructure to reduce software lifecycle costs. The CORBA Event Service provides a flexible model for asynchronous communication among distributed and collocated objects. However, the standard CORBA Event Service specification lacks important features and QoS optimizations required by <b>distributed</b> interactive <b>simulation</b> systems...|$|R
40|$|The Analysis Federate is {{a general}} purpose High Level Architecture (HLA) data collection, analysis, and {{visualization}} tool that {{was developed by the}} U. S. Army TRADOC Analysis Center in Monterey. The Analysis Federate was designed to be composable across HLA federations that use different object model abstractions in their Federation Object Models (FOM). This composability is provided by a conceptual framework that includes fourth generation development tools that automate the procedures required for a federate to subscribe, publish, and interpret federation data. Many of these automated procedures could not be used when the Analysis Federate was applied in support of the Joint <b>Advanced</b> <b>Distributed</b> <b>Simulation</b> (JADS) Joint Test Force (JTF). The functionality of these automation procedures is based on the premise tha...|$|R
40|$|Joint Advanced Distributed Simulation (JADS) is an Office of the Secretary of Defense-sponsored joint {{test force}} {{chartered}} {{to determine the}} utility of <b>advanced</b> <b>distributed</b> <b>simulation</b> (<b>ADS)</b> technology for test and evaluation (T&E) of military systems. JADS is doing this by looking at three slices of the T&E spectrum. One of those slices is the JADS Electronic Warfare (EW) Self-Protection Jammer (SPJ) Test. The EW test was the only JADS test that {{was in a position}} to look at the new Department of Defense (DoD) standard technical architecture for DoD simulations- high level architecture. The JADS EW SPJ Test uses high level architecture (HLA) federations to replicate all elements of an actual open air range (OAR) test environment and the selected EW system under test (an ALQ- 131 Block II SPJ). To determine the utility of ADS technology for EW T&E, JADS will use and evaluate the HLA as part of the SPJ three-phase test program. In developing and implementing an HLA federation for EW T&E, JADS recognized that measuring and controlling the latency imposed by diverse test faculties, simulators, communications equipment, and long-haul communications networks was a critical factor. Because of the importance to T&E, most of these latency measurements have been made in other EW test projects or communications architectures and are documented. A new element used by JADS for EW T&E is the HLA and runtim...|$|E
40|$|ABSTRACT: This paper {{describes}} an innovative <b>advanced</b> <b>distributed</b> <b>simulation</b> (<b>ADS)</b> architecture that provides improved behavioral representation of STRICOM’s Modular Semi-Automated Forces (ModSAF) entities without incorporating additional functionality within ModSAF. A significant shortcoming {{that has been}} identified by the ModSAF user community is the predictable nature of human/system performance. Currently, ModSAF entity performance does not vary or degrade {{as a function of}} battlefield conditions. In addition, as increased functionality has been placed within ModSAF, it has grown into an extremely complex development environment. The Realistic Entity AbiLity Simulation Suite (REALSS) presented here is an architecture that implements variable and degradable human/system performance for ModSAF entities by transferring the “ownership ” of the entity performance attributes to an external server. The methodology uses a Micro Saint task network crew model linked with a set of taxonomic degradation functions to predict performance. Through DIS PDUs or HLA objects, attributes and interactions,, the REALSS provides ModSAF entity performance parameters resulting from nuclear prompt radiation, blast, chemical, and biological environments for the AH 64, M 1, M 2, M 3, M 109, M 577, and T 72 vehicles. The SBCCOM/DTRA Nuclear, Chemical, Biological, and Radiological (NCBR) Simulator provides the environmental representation of nuclear events on the synthetic battlefield. A REAL Performance Server uses these environments to determine exposure and system performance for the ModSAF entities. ModSAF entities then behave in a manner on the battlefield tha...|$|E
40|$|ABSTRACT: The JADS JT&E {{program is}} an OSD {{sponsored}} Joint-Service test {{designed to determine}} how well an emerging technology- <b>Advanced</b> <b>Distributed</b> <b>Simulation</b> (<b>ADS)</b> - can support DoD test and evaluation (T&E) activities. The two-phase ADS test using an Electronic Warfare (EW) system will investigate the present utility of ADS for T&E, identify the critical constraints, concerns, and methodologies when using ADS for T&E; and identify the requirements that must be introduced in ADS systems {{if they are to}} support a more complete T&E capability in the future. The emphasis of the JADS EW test is not on evaluating the EW system performance in use as a test vehicle, rather, the emphasis of the test is on the performance of the ADS components and their relative contribution to EW systems T&E. The term ADS (which includes Distributed Interactive Simulation as a subset) is intended to support a mixture of live, virtual, and constructive entities. The ADS-oriented test approach will investigate numerous issues from the T&E perspective including distributed test control and analysis, network performance, relationships between data latencies, ADS induced data anomalies, use of the High Level Architecture (HLA), and Run Time Infrastructure (RTI). Time, cost, and complexity, as well as validity and credibility of the data are part of the evaluation. A series of tests have been designed which will support comparison of data and results obtained from open air range EW testing with two ADS-based tests...|$|E
40|$|ABSTRACT: <b>Distributed</b> Interactive <b>Simulation</b> (DIS) {{enables the}} {{interconnection}} of real-time platform level simulators {{for participation in}} simulated exercises. However, although successful, it also has deficiencies because of its broadcast technique and its restriction to real time simulation. Thus, a new High Level Architecture (HLA) has been mandated which will address these deficiencies. Whereas DIS requires compliance to a standard Protocol Data Unit set, HLA allows each federate to specify what information it will generate and what data it receives. However all participating federates must agree on which information to interchange. The Australian Defence Organisation (ADO) is moving towards <b>Advanced</b> <b>Distributed</b> <b>Simulation</b> to enhance its training capability and is gaining experience with DIS. Should the ADO consider HLA for their simulators and simulations or persist with DIS? This paper addresses these issues from an Australian perspective. 1...|$|R
40|$|Currently some Australian Defence {{personnel}} train using live assets. This may be {{prohibitively expensive}} {{and some of}} these assets have very short lifetimes before a major overhaul is required. DSTO has participated in a series of concept demonstrations showing the potential of synthetic, virtual enviroitment technologies to support such operational training. These demonstrations showed both Joint and Coalition interoperability. A <b>Distributed</b> Interactive <b>Simulation</b> (DIS), virtual environment, training system known as the Air Defence Ground Environment Simulator (ADGESIM) has been developed and deHvered. A mix of Commercial-Off-The-Shelf (COTS) products and customized, "thin client" appHcations where required, approach has been adopted. This system is now being used by Air Defence Operators and Fighter ControUers, at RAAF Williamtown, for real operational training. This paper describes some of the <b>distributed,</b> virtual, <b>simulation</b> concepts and technologies used, in DSTO's <b>Advanced</b> <b>Distributed</b> <b>Simulation</b> Laboratory at Ffehermans Bend, Melbourne, to develop this training system. RELEASE LIMITATION Approved for public release f{Qfo 3 -on^l 1 Published b...|$|R
40|$|The recent I/ITSEC 2001 Coalition Training Demonstration held {{between the}} US, Australian and Dutch Navies {{demonstrated}} a coalition training exercise using <b>Advanced</b> <b>Distributed</b> <b>Simulation</b> to simultaneously connect military training simulators in the USA, Australia and the Netherlands. Whilst {{participating in the}} setup and running of this exercise each nation used whatever tools were available {{to establish and maintain}} connectivity and interoperability. As one of the lessons learned from such a coalition exercise, this paper discusses a proposal to make available to all participating coalition nations a Common Coalition Toolset (CCT) which comprises a set of software applications used to establish and maintain connectivity and interoperability for such coalition training demonstrations and/or exercises. This paper describes a candidate CCT application- a DIS Entity State PDU Generator. This application was found to be extremely useful when setting up a multiplaye...|$|R
40|$|Tactical and {{operational}} planning for manufacturing enterprises {{are more important}} today than ever before as their supply chains span the globe. Two state-of-the-art technologies that are critical to success are Discrete Event Simulation and Advanced Planning and Scheduling. They are commonly applied in designing and executing operations at each site within the supply chain. However, as supply chains become leaner and more responsive, operational constraints and stochastic influences within the manufacturing sites and the logistics network require {{a combination of both}} technologies applied to the entire supply chain. This paper describes a novel framework for <b>advanced</b> <b>distributed</b> <b>simulation</b> with integrated APS procedures for collaborative supply chain optimization. The framework can be used for fast optimization of both planning procedures and execution policies and also provides a base for easy implementation of simulation results. A prototype of a distributed semiconductor supply chain simulation has been developed and is currently being refined...|$|R
40|$|The 1997 Houston Pre-Freshman Enrichment Program (PREP) was {{conducted}} at {{the campus of the}} University of Houston-Downtown from June 9 to July 25, 1997. Program participants were recruited from the Greater Houston Area. All participants were identified as high-achieving students with an interest in learning about the engineering and science professions. The goal of the program was to better prepare our pre-college youth prior to entering college as mathematics, science and engineering majors. The program participants were {{middle school and high school}} students from the Aldine, Alief, Channel View, Clear Creek, Cypress-Fairbanks, Fort Bend, Galena Park, Houston, Humble, Katy, Klein, North Forest, Pasadena, Private, and Spring Branch Independent School Districts. Of the 194 students starting the program, 165 students were from economically and socially disadvantage groups under-represented in the engineering and science professions, and 118 of the 194 were women. Our First Year group for 1997 composed of 96 % minority and women students. Second and Third Year students combined were 96 % minority or women. With financial support from the Center for Computational Sciences and <b>Advanced</b> <b>Distributed</b> <b>Simulation,</b> the Fourth Year Program was added to PREP this year. Twelve students completed the program (83 % minority or women) ...|$|R
40|$|Abstract — Modeling and {{simulation}} {{are traditional}} {{methods used to}} evaluate wireless network design. This paper addresses issues associated with the application of parallel discrete event <b>simulation</b> to mobile <b>ad</b> hoc networks design and analysis. The basic characteristics and major issues pertaining to ad hoc networks modeling and simulation are introduced. The focus is on wireless transmission and mobility models. Particular {{attention is paid to}} the MobASim system, a Javabased software environment for parallel and <b>distributed</b> <b>simulation</b> of mobile <b>ad</b> hoc networks. We describe the design, performance and possible applications of presented simulation software...|$|R
40|$|The {{distributed}} and the Grid Computing architectures for {{the simulation}} of massively populated wireless systems {{have recently been}} considered of interest, mainly for cost reasons. Solutions for generalized proximity detection for mobile objects is a relevant problem, with {{a big impact on}} the design and the implementation of parallel and <b>distributed</b> <b>simulations</b> of wireless mobile systems. In this paper, a set of solutions based on tailored data structures, new techniques and enhancements of the existing algorithms for generalized proximity detection are proposed and analyzed, to increase the efficiency of <b>distributed</b> <b>simulations.</b> The paper includes the analysis of computation complexity of the proposed solutions and the performance evaluation of a testbed <b>distributed</b> <b>simulation</b> of <b>ad</b> hoc network models. Recent works have shown that the performance of <b>distributed</b> <b>simulation</b> of dynamic complex systems could benefit from a runtime migration mechanism of model entities, which reduces the communication overheads. Such migration mechanisms may interfere with the generalized proximity detection implementations. The analysis performed in this paper illustrates the effects of many possible compositions of the proposed solutions, in a real testbed simulation framework...|$|R
50|$|In 1998 Carothers and Perumalla {{published}} a paper for the Principles of <b>Advanced</b> and <b>Distributed</b> <b>Simulation</b> workshop {{as part of}} their graduate studies under Richard Fujimoto, introducing technique of Reverse Computation as an alternative rollback mechanism in optimistically synchronized parallel discrete event simulations (Time Warp). In 1998, Carothers became an associate professor at Rensselaer Polytechnic Institute. Working with graduate students David Bauer and Shawn Pearce, Carothers integrated the Georgia Tech Time Warp design into Rensselaer’s Optimistic Simulation System (ROSS), which supported only reverse computation as the rollback mechanism. Carothers also constructed RC models for BitTorrent at General Electric, as well as numerous network protocols with students (BGP4, TCP Tahoe, Multicast). Carothers created a course on Parallel and <b>Distributed</b> <b>Simulation</b> in which students were required to construct RC models in ROSS.|$|R
40|$|Workshop on Principles of <b>Advanced</b> and <b>Distributed</b> <b>Simulation,</b> PADS 2005; Monterey, CA; United States; 1 June 2005 through 3 June 2005 Performance and {{scalability}} of <b>distributed</b> <b>simulations</b> depends {{primarily on}} the effectiveness of the employed data distribution management (DDM) algorithm, which aims at reducing the overall computational and messaging effort on the shared data to a necessary minimum. Existing DDM approaches, which are variations and combinations of two basic techniques, namely region-based and grid-based techniques, perform purely in the presence of load differences. We introduce the partition-based technique that allows for variable-size partitioning shared data. Based on this technique, a novel DDM algorithm is introduced that is dynamically adaptive to cluster formations in the shared data {{as well as in the}} physical location of the simulation objects. Since the re-distribution is sensitive to inter-relationships between shared data and simulation objects, a balanced constellation has the additional advantage to be of minimal messaging effort. Furthermore, dynamic system scalability is facilitated, as bottlenecks are avoided...|$|R
40|$|International Telemetering Conference Proceedings / October 28 - 31, 1996 / Town and Country Hotel and Convention Center, San Diego, CaliforniaThis paper {{discusses}} Global Positioning System (GPS) Range Applications Joint Program Office (RAJPO) {{efforts to}} foster interoperability between airborne instrumentation, virtual simulators, and constructive <b>simulations</b> using <b>Distributed</b> Interactive <b>Simulation</b> (DIS). In the past, the testing and training communities developed separate airborne instrumentation systems primarily because available technology couldn't encompass both communities' requirements. As budgets get smaller, as requirements merge, and as technology advances, the separate {{systems can be}} used interoperably and possibly merged to meet common requirements. Using DIS {{to bridge the gap}} between the RAJPO test instrumentation system and the Air Combat Maneuvering Instrumentation (ACMI) training systems provides a defacto system-level interoperable interface while giving both communities the added benefits of interaction with the modeling and simulation world. The RAJPO leads the test community in using DIS. RAJPO instrumentation has already supported training exercises such as Roving Sands 95, Warfighter 95, and Combat Synthetic Test, Training, and Assessment Range (STTAR) and major tests such as the Joint <b>Advanced</b> <b>Distributed</b> <b>Simulation</b> (JADS) Joint Test and Evaluation (JT&E) program. Future efforts may include support of Warrior Flag 97 and upgrading the Nellis No-Drop Bomb Scoring Ranges. These exercises, combining the use of DIS and RAJPO instrumentation to date, demonstrate how a single airborne system can be used successfully to support both test and training requirements. The Air Combat Training System (ACTS) Program plans to build interoperability through DIS into existing and future ACMI systems. The RAJPO is committed to fostering interoperable airborne instrumentation systems as well as interfaces to virtual and constructive systems in the modeling and simulation world. This interoperability will provide a highly realistic combat training and test synthetic environment enhancing the military's ability to train its warfighters and test its advanced weapon systems...|$|R
40|$|The Autonomous System (AS) {{topology}} of the Internet (up to 61 k ASs) {{is growing}} {{at a rate of}} about 10 % per year. The Border Gateway Protocol (BGP) starts to show its limits in terms of the number of routing table entries it can dynamically process and control. Due to the increasing routing information processing and storage, the same trend is observed for routing model simulators such as DRMSim specialized in large-scale simulations of routing models. Therefore, DRMSim needs enhancements to support the current size of the Internet topology and its evolution (up to 100 k ASs). To this end, this paper proposes a feasibility study of the extension of DRMSim so as to support the Distributed Parallel Discrete Event paradigm. We first detail the possible distribution models and their associated communication overhead. Then, we analyze this overhead by executing BGP on a partitioned topology according to different scenarios. Finally, we conclude on the feasibility of such a simulator by computing the expected additional time required by a <b>distributed</b> <b>simulation</b> of BGP compared to its sequential simulation. Comment: 26 th ACM/IEEE/SCS Workshop on Principles of <b>Advanced</b> and <b>Distributed</b> <b>Simulation</b> (2012...|$|R
40|$|The term Enterprise Simulation (ES) {{is gaining}} {{acceptance}} among simulation practitioners. It {{is coming to}} represent certain tangible attributes, and its benefits seem apparent in providing a top-down perspective in system analysis. It is envisioned as {{the next wave of}} simulation applications that may bring simulation to a higher ground of applicability in the business application arena. ES does so by promising to extend the benefits of simulation modeling and analysis as it is performed today. Linking singular instances of analytical efforts (simulation and otherwise) with limited scope in a network has the potential of delivering extraordinary value to decision-making at the corporate level. Moreover, <b>advances</b> in <b>distributed</b> <b>simulation</b> concepts and networking technology can provide the much needed push to ES by serving as enablers. This paper offers to explain the motivation behind ES, and explain its relevance to the business environment of large, complex organizations. A development framework is presented with technical and managerial issues in its implementation...|$|R
40|$|Scalable and {{efficient}} network simulation methods are {{the method of}} choice for evaluating and verifying wireless network protocols on a moderate to large scale. This need becomes obvious when simulating very large–scale wireless networks such as emerging ad hoc sensor networks in which the number of nodes can be the order of thousands or more, and with very high node density. Unfortunately, simulation of such large–scale wireless networks often requires excessively large amounts of computing resources and can be slow to complete. One approach to achieving higher performance in a large–scale network simulation {{is the use of}} parallel or <b>distributed</b> <b>simulation</b> techniques. However, the efficient <b>distributed</b> <b>simulation</b> of wireless <b>ad</b> hoc networks is still a daunting task. Therefore, we turn our attention to more traditional sequential simulation methods, and seek to reduce the overhead incurred in the Medium Access Control (MAC) state update propagation between wireless nodes. We introduce a novel method called LAMP (LAzy MAC state uPdate), that substantially reduces this overhead, with no loss of accuracy. Using our wireless network simulation tool, we compare the efficiency of the LAMP approach to the more traditional approach, and show a performance improvement of up to a factor of eight, with no loss of accuracy. ...|$|R
40|$|Abstract — Scalable and {{efficient}} network simulation methods are {{the method of}} choice for evaluating and verifying wireless network protocols on a moderate to large scale. This need becomes obvious when simulating very large–scale wireless networks such as emerging ad hoc sensor networks in which the number of nodes can be the order of thousands or more, and with very high node density. Unfortunately, simulation of such large–scale wireless networks often requires excessively large amounts of computing resources and can be slow to complete. One approach to achieving higher performance in a large–scale network simulation {{is the use of}} parallel or <b>distributed</b> <b>simulation</b> techniques. However, the efficient <b>distributed</b> <b>simulation</b> of wireless <b>ad</b> hoc networks is still a daunting task. Therefore, we turn our attention to more traditional sequential simulation methods, and seek to reduce the overhead incurred in the Medium Access Control (MAC) state update propagation between wireless nodes. We introduce a novel method called LAMP (LAzy MAC state uPdate), that substantially reduces this overhead, with no loss of accuracy. Using our wireless network simulation tool, we compare the efficiency of the LAMP approach to the more traditional approach, and show a performance improvement of up to a factor of eight, with no loss of accuracy. Index Terms — Network simulation, efficient simulation, wireless network, mobile computing, lazy MAC state update I...|$|R
40|$|An <b>ad</b> hoc <b>distributed</b> <b>simulation</b> is a {{collection}} of autonomous on-line simulations, each modeling some portion of a larger physical system, that are brought together through a mobile, wireless network to predict future states of the overall system. Unlike conventional <b>distributed</b> <b>simulations</b> that are designed in a largely top-down fashion by partitioning the physical system and mapping each element to a logical process, <b>ad</b> hoc <b>distributed</b> <b>simulations</b> are constructed bottom-up, resulting in multiple simulators modeling common, overlapping portions of the physical system. Ad hoc <b>distributed</b> <b>simulations</b> combine elements of conventional <b>distributed</b> <b>simulations</b> and replicated trials, and raise new issues concerning data distribution and synchronization. The <b>ad</b> hoc <b>simulation</b> approach is proposed, as well as an optimistic synchronization protocol designed for use in these systems. An <b>ad</b> hoc <b>distributed</b> <b>simulation</b> prototype is described that couples collections of in-vehicle simulations intended to manage a transportation network. Experimental results are presented demonstrating that this approach can be effective in predicting future system states when compared to a replicated experiment simulating the full transportation network. Finally, the issue of converting existing commercial <b>simulations</b> to the <b>ad</b> hoc <b>distributed</b> <b>simulation</b> approach is discussed, and experiences converting the widely-used VISSIM simulator for use in <b>ad</b> hoc <b>distributed</b> <b>simulation</b> environments are described. 1...|$|R
40|$|The {{possibilities}} of <b>distributed</b> <b>simulation</b> {{have been discussed}} {{for well over a}} decade, yet there is only limited evidence of its implementation, particularly within industry. The reasons for this are discussed by identifying the potential applications of <b>distributed</b> <b>simulation</b> and linking these {{to the ways in which}} simulation is practiced. The extent to which <b>distributed</b> <b>simulation</b> is a demand led or technology led innovation is discussed. A possible contradiction between <b>distributed</b> <b>simulation</b> and good modeling practice is also identified, that is, the ability to develop large/complex models against the recommendation to develop simple models. This leads to three conclusions: not everyone needs <b>distributed</b> <b>simulation,</b> <b>distributed</b> <b>simulation</b> is both demand and technology led, and the {{possibilities of}} <b>distributed</b> <b>simulation</b> are both beneficial and dangerous to modeling practice...|$|R
40|$|A goal of {{this paper}} is to explore {{different}} ways of implementing <b>distributed</b> <b>simulations.</b> <b>Distributed</b> <b>simulation</b> grew out of sequential simulation, and it is possible that the way we think about <b>distributed</b> <b>simulation</b> is unduly influenced by its sequential origins. To free ourselves from unnecessary restrictions on the way we design <b>distributed</b> <b>simulations,</b> in this paper we define the <b>distributed</b> <b>simulation</b> problem somewhat differently than in the literature. We propose the concepts of "knowledge" and "conditional knowledge", to help us obtain a general framework to reason about <b>distributed</b> <b>simulations</b> without too close a coupling with any specific implementation method. The framework appears helpful in designing new ways of <b>distributed</b> <b>simulations.</b> Empirical studies of <b>distributed</b> <b>simulations</b> report widely varying results: some studies report improvements in speed that are almost linearly proportional to the number of computers in the system, while other studies report that <b>distributed</b> <b>simulation</b> is even slower than sequential simulation. The framework proposed in this paper seems to help in explaining the wide differences observed in empirical studies. Using our framework, we attempt to suggest properties that efficient "general-purpose" <b>distributed</b> discrete-event <b>simulations</b> must have. The paper assumes little prior knowledge of the literature on simuIation or distributed systems. We hope that the paper will serve as a tutorial in addition to providing additional insight...|$|R
40|$|Abstract. The grid {{technology}} and <b>distributed</b> <b>simulation</b> functionality were firstly introduced. We proposed two approaches to integrate actual <b>distributed</b> <b>simulation</b> application into grid environment. The {{first one is}} {{to take advantage of}} {{grid technology}} to support <b>distributed</b> <b>simulation,</b> which is independent of the development of <b>distributed</b> <b>simulation.</b> The second one consists of using specific extensions of <b>distributed</b> <b>simulation</b> based on grid technology. We mainly focused on the latter and argued about integrating HLA technology into OGSA model in detail. Under the above discussion, we defined G-RTI concept, which means the Runtime Infrastructure (RTI) based on grid technology. ...|$|R
40|$|This {{viewgraph}} presentation {{reviews the}} use of simulation and modeling {{in preparation for the}} planned exploration initiatives. The Exploration Systems Mission Directorate (EMSD) Integrated Modeling and Simulation (IM&S) team strategy encompasses a wide spectrum of simulation and modeling policies and technologies. One prominent technology is <b>distributed</b> <b>simulation.</b> The <b>DIstributed</b> <b>Simulation</b> (DIS),a collaborative simulation project with international participation (US and Japan) is reviewed as an example of <b>distributed</b> <b>simulation</b> development. The <b>Distributed</b> Space Exploration <b>Simulation</b> (DSES) is another example of <b>distributed</b> <b>simulation</b> that is describe...|$|R
40|$|Coupling and {{synchronized}} {{execution of}} legacy simulation models {{is a complex}} task. Simulation experts need knowledge in the domains of <b>distributed</b> <b>simulation</b> and HLA to conduct such complex simulation projects. This is one reason for insufficient acceptance of <b>distributed</b> <b>simulation</b> in industrial areas. To {{increase the number of}} <b>distributed</b> <b>simulation</b> projects in industrial domains, a dedicated access for industrial engineers to this technology is needed. Therefore it is necessary to develop and apply support systems for <b>distributed</b> <b>simulations</b> with user-interfaces that are dedicated to factory planners and operators. The objective {{of this paper is to}} discuss the provision of <b>distributed</b> <b>simulation</b> support systems for in industrial applications in more detail...|$|R
40|$|Developing a {{sequential}} simulation {{program is}} not an easy task. Developing a <b>distributed</b> <b>simulation</b> program is harder than a sequential one because it is necessary to deal with mapping physical processes into logical processes, communication and synchronization problems and learn another simulation language/library. In literature, several simulation environments can be found but the great number are for sequential simulation, not using all the advantages of a distributed/parallel platform. This paper presents ASDA, an automatic <b>distributed</b> <b>simulation</b> environment that aims at providing several possibilities to users developing a <b>distributed</b> <b>simulation.</b> The automatic word can be understood in three diferent ways: the environment automatically generates a <b>distributed</b> <b>simulation</b> program code; the environment can automatically choose one <b>distributed</b> <b>simulation</b> approach; and the environment can automatically convert a sequential simulation program into a <b>distributed</b> <b>simulation</b> program using the MRIP (Multipl...|$|R
