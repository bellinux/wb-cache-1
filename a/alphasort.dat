3|2|Public
40|$|A new sort algorithm, called <b>AlphaSort,</b> {{demonstrates}} that commodity processors and disks can handle commercial batch workloads. Using commodity processors, memory, and arrays of SCSI disks, <b>AlphaSort</b> runs the industry-standard sort benchmark in seven seconds. This beats the best published record on a 32 -CPU 32 -disk Hypercube by 8 : 1. On another benchmark, <b>AlphaSort</b> sorted {{more than a}} gigabyte in a minute. <b>AlphaSort</b> is...|$|E
40|$|Abstract. A new sort algorithm, called <b>AlphaSort,</b> {{demonstrates}} that commodity processors and disks can handle commercial batch workloads. Using commodity processors, memory, and arrays of SCSI disks, <b>AlphaSort</b> runs the industrystandard sort benchmark in seven seconds. This beats the best published record on a 32 -CPU 32 -disk Hypercube by 8 : 1. On another benchmark, <b>AlphaSort</b> sorted {{more than a}} gigabyte in one minute. <b>AlphaSort</b> is a cache-sensitive, memoryintensive sort algorithm. We argue that modern architectures require algorithm designers to re-examine {{their use of the}} memory hierarchy. <b>AlphaSort</b> uses clustered data structures to get good cache locality, file striping to get high disk bandwidth, QuickSort to generate runs, and replacement-selection to merge the runs. It uses shared memory multiprocessors to break the sort into subsort chores. Because startup times are becoming {{a significant part of the}} total time, we propose two new benchmarks: (1) MinuteSort: how much can you sort in one minute, and (2) PennySort: how much can you sort for one penny...|$|E
40|$|Abstract A new sort algorithm, called <b>AlphaSort,</b> {{demonstrates}} that commodity processors and disks can handle commercial batch workloads. Using Alpha AXP processors, commodi ~ memory, and arrays of SCSI disks, <b>AlphaSort</b> runs the industry-standard sort benchmark in seven seconds. This beats the best published record on a 32 -cpu 32 -disk Hypercube by 8 : 1. On another benchmark, <b>AlphaSort</b> sorted {{more than a}} gigabyte in a minute. <b>AlphaSort</b> is a cache-sensitive memory-intensive sort algorithm. It uses file striping to get high disk bandwidth. It uses QuickSort to generate runs and uses replacementselection to merge the runs. It uses shared memoq multiprocessors to break the sort into subsort chores. Because startup times are becoming a sign~icant part of the total time, we propose two new benchmarks...|$|E
25|$|In {{the case}} of Portuguese naming customs, the main surname (the one used in <b>alphasorting,</b> indexing, abbreviations, and greetings), appears last.|$|R

