7|1005|Public
50|$|In traffic engineering, the {{practical}} reserve capacity (PRC) of a traffic signal junction is a commonly used measure of its <b>available</b> <b>spare</b> <b>capacity.</b>|$|E
50|$|The {{degree of}} {{saturation}} (%) is a ratio of demand to capacity on each approach to the junction, with a value of 100% meaning that demand and capacity are equal and no further traffic is able to progress through the junction. Values over 85% are typically regarded as suffering from traffic congestion, with queues of vehicles beginning to form. The term practical reserve capacity (PRC) {{is often used to}} refer to the <b>available</b> <b>spare</b> <b>capacity</b> at a junction. A negative PRC indicates that the junction is over capacity.|$|E
40|$|In prior work on {{multiprocessor}} fairness, efficient techniques with provable {{properties for}} reallocating spare processing capacity have been elusive. In this paper, we address this shortcoming by proposing a new notion of multiprocessor fairness, called quick-release fair (QRfair) scheduling, {{which is a}} derivative of Pfair scheduling that allows efficient allocation of spare capacity. Under QRfair scheduling, each task is specified by giving both a minimum and a maximum weight (i. e., processor share). The goal is to schedule each task (as the <b>available</b> <b>spare</b> <b>capacity</b> changes) {{at a rate that}} is (i) at least that implied by its minimum weight and (ii) at most that implied by its maximum weight. Our contributions are fourfold. First, we present a quick-release variant of the PD Pfair scheduling algorithm called PD. Second, we formally prove that the allocations of PD always satisfy (i) and (ii). Third, we consider the problem of defining maximum weights in a way that encourages a fair distribution of spare capacity. Fourth, we present results from extensive simulation experiments that show the efficacy of PD in allocating spare capacity...|$|E
40|$|We {{consider}} {{the problem of}} task reweighting in fairscheduled multiprocessor systems wherein each task’s processor share is specified as a weight. Task reweighting {{can be used as}} a means for consuming (or making <b>available)</b> <b>spare</b> processing <b>capacity.</b> In this paper, we propose a multiprocessor reweighting scheme that can change a task’s processor share with “minimal ” error per share change. ...|$|R
50|$|The WP was {{installed}} in April 1996 and first oil production started in June the same year. WP has 19 well slots. A central location and <b>spare</b> <b>available</b> <b>capacity</b> {{make it possible for}} the Valhall complex to also receive oil and gas from several adjacent fields.|$|R
50|$|In this {{restoration}} technique, {{no central}} controller is used, hence no up-to-date database {{of the state}} of the network is needed. In this scheme, all nodes in the network utilize local controllers that have only local information about how a particular node is connected to its neighboring nodes, <b>available</b> and <b>spare</b> <b>capacity</b> on the links used to connect to neighbors, and the state of their switching elements. When a failure occurs in any part of the network, the local controllers handle the computation and re-routing of the affected traffic. An example of an approach where this technique is utilized is the Self-Healing Networks(SHN).|$|R
40|$|Abstract — Peer-peer {{networking}} {{has recently}} {{emerged as a}} new paradigm for building distributed networked applications. In this paper we develop simple mathematical models to explore and illustrate fundamental performance issues of peerpeer file sharing systems. The modeling framework introduced and the corresponding solution method are flexible enough to accommodate different characteristics of such systems. Through the specification of model parameters, we apply our framework to three different peer-peer architectures: centralized indexing, distributed indexing with flooded queries, and distributed indexing with hash-directed queries. Using our model, we investigate the effects of system scaling, freeloaders, file popularity and availability on system performance. In particular, we observe that a system with distributed indexing and flooded queries cannot exploit the full capacity of peer-peer systems. We further show that peer-peer file sharing systems can tolerate {{a significant number of}} freeloaders without suffering much performance degradation. In many cases, freeloaders can benefit from the <b>available</b> <b>spare</b> <b>capacity</b> of peer-peer systems and increase overall system throughput. Our work shows that simple models coupled with efficient solution methods can be used to understand and answer questions related to the performance of peer-peer file sharing systems. I...|$|E
40|$|Abstract—This paper proposes novel {{resource}} sharing schemes for differentiated services (DiffServ) networks, to achieve both high resource utilization {{and quality of}} service (QoS) guarantee. Service level agreements (SLAs) are negotiated at network bound-aries and supported by path-oriented resource mapping within the network. The recently proposed SLA management scheme based on virtual partitioning (Bouillet et al., 2002) allows overloaded SLAs to exploit the spare capacity of underloaded SLAs for effi-cient resource utilization, however, at the the cost of possible SLA violation of the underloaders. In the bandwidth borrowing scheme proposed here, the dedicated bandwidth for underloaded SLAs is determined and adaptively adjusted at network boundaries according to the actual traffic load and QoS policies; the <b>available</b> <b>spare</b> <b>capacity</b> is then properly distributed to related links for lending to others. On the other hand, the traffic flows admitted with borrowed bandwidth are tagged and may be preempted later when the original bandwidth owner needs to claim back the resources. Through a detailed implementation design and extensive computer simulation results we show that, by bandwidth borrowing, both SLA compliance and high resource utilization can be achieved in various load conditions, with some side benefits such as call-level service differentiation, small admission overhead, and convenience for policy-based management. In addition, we propose a distributed bandwidth pushing scheme that can dynam-ically adjust the spare bandwidth distribution over the network. Combining bandwidth pushing with bandwidth borrowing, the resource utilization can be further improved. Index Terms—Bandwidth borrowing, DiffServ, inter-SLA re-source sharing, resource allocation, service level agreement. I...|$|E
40|$|In {{the recent}} years, new {{electronic}} procurement technologies {{have been successfully}} implemented in freight transportation marketplaces. This new type of trading between freight transportation agents requires new analytical tools {{to better understand the}} consequences of different strategies and forms of transportation capacity allocation. I studied two cases. First, a transportation market where an O-D pair is operated round-trip by multiple carriers, providing service to multiple shippers. Second, a multiple O-D pairs' market, operated by multiple carriers, providing service to multiple shippers. In both cases the shippers' demand function is elastic to the transportation service prices. The shippers contract each shipment to a single carrier following an open auction, in which the shipper selects the carrier based on the best bidding price. Carriers contracted to serve the shipments will often make empty movements to reposition their equipment. Hence, they will attempt to "generate" demand for these empty trips, in order to obtain revenue for their spare capacity. Carriers may generate demand for this capacity by offering service substantially below the market price (as low as the marginal cost of shipping). Shippers on the other hand, decide when to buy transportation services (and how much), i. e., the frequency of shipment and lot size, based on a strategy to minimize the total inventory and transportation costs. A significant reduction in the transportation tariff triggers an adjustment in the replenishment pattern of shippers, {{as a response to the}} beneficial market conditions. The new generated demand transforms shippers into bidders for the <b>available</b> <b>spare</b> <b>capacity</b> at discounted prices. This double-auction scheme allocates shipments to the otherwise unused capacity thus reducing the network's empty movements, which also reduces the average transportation cost in the network. In this paper, I show that under an EOQ policy an average discount spot price of two thirds of the market price will trigger a demand generation for transportation services in the shippers' pool. The paper presents a numerical application of the derived model, in which the double-auction scheme reduces the network average transportation tariff by at least 14 %. ...|$|E
40|$|We {{consider}} {{the problem of}} task reweighting in fair-scheduled multiprocessor systems wherein each task’s processor share is speci�ed as a weight. When a task is reweighted, a new weight is computed for it, which is then used in future scheduling. Task reweighting {{can be used as}} a means for consuming (or making <b>available)</b> <b>spare</b> processing <b>capacity.</b> The responsiveness of a reweighting scheme can be assessed by comparing its allocations to those of an ideal scheduler that can reweight tasks instantaneously. A reweighting scheme is fine-grained if any additional per-task “error ” (in comparison to an ideal allocation) caused by a reweighting event is constant. In prior work on uniprocessor notions of fairness, a number of �ne-grained reweighting schemes were proposed. However, in the multiprocessor case, prior work has failed to produce such a scheme. In this paper, we remedy this shortcoming by presenting a multiprocessor reweighting scheme that is �ne-grained. We also present an experimental evaluation of this scheme that shows that it is often much more responsive than prior (non-�ne-grained) schemes in enacting weight-change requests...|$|R
50|$|The Disaster Monitoring Constellation for International Imaging (DMCii) {{consists}} {{of a number of}} remote sensing satellites constructed by Surrey Satellite Technology Ltd (SSTL) and operated for the Algerian, Nigerian, Turkish, British and Chinese governments by DMC International Imaging. The DMC provides emergency Earth imaging for disaster relief under the International Charter for Space and Major Disasters, which the DMC formally joined in November 2005. Other DMC Earth imagery is used for a variety of civil applications by a variety of governments. <b>Spare</b> <b>available</b> imaging <b>capacity</b> is sold under contract.|$|R
40|$|We {{consider}} {{the problem of}} task reweighting in fair-scheduled multiprocessor systems wherein each task’s processor share is specified using a weight. When a task is reweighted, a new weight is computed for it that is then used in future scheduling. Task reweighting {{can be used as}} a means for consuming (or making <b>available)</b> <b>spare</b> processing <b>capacity.</b> The responsiveness of a reweighting scheme can be assessed by comparing its allocations to those of an ideal scheduler that can reweight tasks instantaneously. A reweighting scheme is fine-grained if any additional per-task “error ” (in comparison to an ideal allocation) caused by a reweighting event is constant. Similarly, a reweighting scheme is coarse-grained if the additional “error ” per reweighting event is non-constant. While fine-grained reweighting produces only a small amount of error when changing task weights, it has a worst-case time complexity of Θ(NlogN), where N is the number of tasks. If the number of tasks exceeds the number of processors, then such time complexity is larger than that of coarse-grained reweighting, which is Θ(MlogN), where M is the number of processors. In this paper, we construct two new reweighting algorithms that are hybrids of fine- and coarse-grained reweighting that have time complexity less than Θ(NlogN) and produce less error than current coarse-grained techniques. We also present an experimental evaluation of these scheme to compare their relative advantages...|$|R
30|$|Finally, Type V Server Loads simply {{represent}} <b>spare</b> <b>capacity</b> that is <b>available</b> on-demand, {{for both}} live migrations and for new VM instantiations. The amount of this <b>spare</b> <b>capacity</b> {{depends on the}} aggregate surge requirements of all applications.|$|R
40|$|Scheduling {{periodic}} {{tasks that}} allow some instances to be skipped produces <b>spare</b> <b>capacity</b> in the schedule. Only {{a fraction of}} this <b>spare</b> <b>capacity</b> is uniformly distributed and can easily be reclaimed for servicing aperiodic requests. The remaining fraction of the <b>spare</b> <b>capacity</b> is non-uniformly distributed, and no existing technique {{has been able to}} reclaim it. We present a method for improving the response times of aperiodic tasks by identifying the non-uniform holes in the schedule and adding these holes as extra capacity to the capacity queue of the CASH mechanism. The non-uniform holes can account for a significant portion of <b>spare</b> <b>capacity,</b> and reclaiming this capacity results in considerable improvements to aperiodic response times. ...|$|R
40|$|IP over wavelength-division {{multiplexing}} (WDM) {{networks have}} been identified as promising candidates to underpin future telecommunication networks and thus industrial and academic researchers have been actively investigating key issues that affect the integration of IP and optical layers. An area of prime concern is network survivability. The main challenges within this domain are: to provide survivability schemes under different failure scenarios and {{to reduce the amount of}} required <b>spare</b> <b>capacity</b> while providing the required quality of service (QoS). Due to its flexibility and simplicity, one candidate technique is pre-allocated restoration. In this paper, the performance of pre-allocated restoration mechanisms are investigated considering a distributed GMPLS-based IP/WDM mesh network under single and dual-link failure scenarios. Several issues are considered. Firstly, two proposed <b>spare</b> <b>capacity</b> allocation schemes are investigated; link partitioning and lightpath partitioning. Secondly, the paper evaluates a retrial scheme that supports the utilisation of <b>spare</b> <b>capacity.</b> Thirdly, proposed class prioritisation scheme applied to the differentiated survivability concept with pre-allocated restoration is investigated. Finally, two load-based <b>spare</b> <b>capacity</b> optimisation schemes are proposed and evaluated; local <b>spare</b> <b>capacity</b> optimisation (LSCO) and global <b>spare</b> <b>capacity</b> optimisation (GSCO) ...|$|R
40|$|In this paper, Stephen Nickell, {{member of}} the Bank's Monetary Policy Committee, {{analyses}} the extent of <b>spare</b> <b>capacity</b> in the UK economy. The {{results indicate that the}} amount of <b>spare</b> <b>capacity</b> <b>available</b> in 2004 is greater than in 1999 - 2000, not very different from that in 2001 - 03 and slightly less than in 1995 - 98. On balance, there still appears to be some <b>spare</b> <b>capacity</b> <b>available</b> in the labour market, but within firms the overall situation is tight...|$|R
30|$|Multipath {{rerouting}} [13] using <b>spare</b> <b>capacity</b> in {{the network}} can induce a capacity saving of up to 11 % in randomly generated networks, but lack of <b>spare</b> <b>capacity</b> due {{to the existence of}} multiple virtual planes on a substrate network can undermine this result in network virtualization.|$|R
40|$|It is well {{established}} that communication involves the working memory system, which becomes increasingly engaged in understanding speech as the input signal degrades. The more resources allocated to recovering a degraded input signal, the fewer resources, referred to as cognitive <b>spare</b> <b>capacity,</b> remain for higher-level processing of speech. Using simulated natural listening environments, the aims of this paper were to (1) evaluate an English version of a recently introduced auditory test to measure cognitive <b>spare</b> <b>capacity</b> that targets the updating process of the executive function, (2) investigate if the test predicts speech comprehension better than the reading span test commonly used to measure working memory capacity, and (3) determine if the test is sensitive to {{increasing the number of}} attended locations during listening. In experiment I, the cognitive <b>spare</b> <b>capacity</b> test was presented using a male and a female talker, in quiet and in spatially separated babble- and cafeteria-noises, in an audio-only and in an audio-visual mode. Data collected on 21 listeners with normal and impaired hearing confirmed that the English version of the cognitive <b>spare</b> <b>capacity</b> test is sensitive to population group, noise condition, and clarity of speech, but not presentation modality. In experiment II, performance by 27 normal-hearing listeners on a novel speech comprehension test presented in noise was significantly associated with working memory capacity, but not with cognitive <b>spare</b> <b>capacity.</b> Moreover, this group showed no significant difference in cognitive <b>spare</b> <b>capacity</b> as the number of talker locations in the test increased. There was no consistent association between the cognitive <b>spare</b> <b>capacity</b> test and the reading span test. It is recommended that future studies investigate the psychometric properties of the cognitive <b>spare</b> <b>capacity</b> test, and examine its sensitivity to the complexity of the listening environment in participants with both normal and impaired hearing...|$|R
30|$|Assume that faulty link (5, 2) is {{replaced}} by path 5 – 3 - 1. Because links (5, 3) and (3, 1) have only 5 and 7 <b>spare</b> <b>capacity</b> each, both links need, respectively, 3 and 1 more <b>spare</b> <b>capacity</b> to make the restoration possible. This example proves {{that the use of}} traffic splitting in the link restoration scheme can result in lower <b>spare</b> <b>capacity</b> requirements but {{in the context of a}} virtual network, it could be very important to reduce additional capacities added to the links to avoid disturbances due to the rerouting scheme.|$|R
30|$|Assess {{migration}} parameters: <b>spare</b> <b>capacity,</b> migration time, load reduction/correlation, etc.|$|R
40|$|Abstract — Preconfigured {{protection}} cycles (p-cycles) provide recovery {{times for}} mesh networks that {{are near the}} recovery times of SONET ring networks while providing lower spare-to-working capacity ratios. In this work, two methods of assigning p-cycles in a wavelength division multiplexing network are compared over a range of topologies with different average node degrees. The joint capacity placement (JCP) method considers the working traffic and <b>spare</b> <b>capacity</b> jointly. The <b>spare</b> <b>capacity</b> placement (SCP) method assigns traffic to the shortest paths and then assigns p-cycles using the <b>spare</b> <b>capacity.</b> The joint capacity placement method provides ~ 35 % lower spare-to-working capacity ratio than the <b>spare</b> <b>capacity</b> method with ~ 7 % increase in working capacity cost. In addition, a topology with higher average node degree provides lower spare-to-working capacity ratios because more straddling links are possible. Index Terms—network reliability, p-cycles, wavelength division multiplexing 1...|$|R
40|$|Abstract — In IP-over-WDM {{networks}} {{the logical}} topology {{consists of a}} set of lightpaths that are routed on top of the physical fiber topology. Hence a single fiber cut can lead to multiple logical link failures. We study the impact of lightpath routing on network survivability and <b>spare</b> <b>capacity</b> requirements. We show that poor routings can lead to significant increase in <b>spare</b> <b>capacity</b> requirements and develop new metrics for assessing the survivability of different lightpath routings. Finally, we use these metrics to develop joint lightpath routing and capacity assignment algorithms that significantly reduce the <b>spare</b> <b>capacity</b> requirements of IP-over-WDM networks. I...|$|R
40|$|Abstract — In {{this paper}} we {{consider}} the problem of provisioning <b>spare</b> <b>capacity</b> in two-layer backbone networks using shared backup path protection. First, two <b>spare</b> <b>capacity</b> allocation (SCA) optimization problems are formulated as integer linear programming (ILP) models for the cases of protection at the top layer against failures at the bottom layer. The first model captures failure propagation using overlay information between two layers for backup paths to meet diversity requirements. The second model improves bandwidth efficiency by moving <b>spare</b> <b>capacity</b> sharing from the top layer to the bottom layer. This exposes a tradeoff between bandwidth efficiency and extra crosslayer operation. Next, the SCA model for common pool protection is developed to allow <b>spare</b> <b>capacity</b> sharing between two layers. Our previous SCA heuristic technique, successive survivable routing (SSR) is extended for these optimization problems. Numerical results {{for a variety of}} networks indicate that the common pool protection is attractive to enhance bandwidth efficiency without loss of survivability and that the SSR heuristic quickly results in near optimal solutions. Index Terms — multi-layer network design, <b>spare</b> <b>capacity</b> allocation, resilient network design, shared risk link group. I...|$|R
40|$|Link {{failures}} in wide area networks are common. To recover from such failures, {{a number of}} methods such as SONET rings, protection cycles, and source rerouting have been investigated. Two important considerations in such approaches are the recovery time and the needed <b>spare</b> <b>capacity</b> to complete the recovery. Usually, these techniques attempt to achieve a recovery time less than 50 ms. In this paper we introduce an approach that provides link failure recovery in a hitless manner, or without any appreciable delay. This is achieved {{by means of a}} method called diversity coding. We present an algorithm for the design of an overlay network to achieve recovery from single link {{failures in}} arbitrary networks via diversity coding. This algorithm is designed to minimize <b>spare</b> <b>capacity</b> for recovery. We compare the recovery time and <b>spare</b> <b>capacity</b> performance of this algorithm against conventional techniques in terms of recovery time, <b>spare</b> <b>capacity,</b> and a joint metric called Quality of Recovery (QoR). QoR incorporates both the <b>spare</b> <b>capacity</b> percentages and worst case recovery times. Based on these results, we conclude that the proposed technique provides much shorter recovery times while achieving similar extra capacity, or better QoR performance overall...|$|R
40|$|Survivable network {{design has}} become {{increasingly}} important due {{to the need for}} reliable communication service. One of its important components is the <b>spare</b> <b>capacity</b> design. Its main purpose is to provide cost-efficient <b>spare</b> <b>capacity</b> reservation at certain survivability level in case of predicted failures. In this thesis, we study various kinds of network survivability techniques and the corresponding algorithms. Subsequently; we introduce our two pre-planned path restoration algorithms for <b>spare</b> <b>capacity</b> design in mesh-like networks. They can get higher utilization of <b>spare</b> <b>capacity</b> and reasonable reaction time. First one is a spanning tree based algorithm with backup parents, which needs much less <b>spare</b> <b>capacity</b> than the well known hierarchical tree algorithm while the restorability is slightly higher or lower. The second algorithm is a cycle tree based algorithm with backup parents and some extra cycle edges. Simulation results show that this algorithm works much better on restorability than the other two algorithms. The time complexities of the two new algorithms are: O (n 4), where n is the total number of nodes in the network. The space complexities are the same too: O (n 3...|$|R
5000|$|Does the {{operator}} have enough <b>spare</b> <b>capacity</b> {{to cope with}} emergency situations? ...|$|R
5000|$|Does the {{operator}} have enough <b>spare</b> <b>capacity</b> {{to take on}} additional tasks? ...|$|R
5000|$|... {{the machine}} {{being set up}} is a {{bottleneck}} with no <b>spare</b> <b>capacity.</b>|$|R
40|$|This paper {{presents}} the results of a comparative study of <b>spare</b> <b>capacity</b> assignment for original quasi-path restoration (OQPR), improved quasi-path restoration (IQPR), link restoration (LR), path restoration (PR) and link-disjoint path restoration (LDPR) schemes. Numerical results indicate that the restoration schemes studied can be sorted from most expensive to least expensive (<b>spare</b> <b>capacity</b> assignment cost) i...|$|R
40|$|Abstract—The {{design of}} survivable mesh based {{communication}} networks has received considerable attention in recent years. One {{task is to}} route backup paths and allocate <b>spare</b> <b>capacity</b> in the network to guarantee seamless communications services survivable {{to a set of}} failure scenarios. This is a complex multi-constraint optimization problem, called the <b>spare</b> <b>capacity</b> allocation (SCA) problem. This paper unravels the SCA problem structure using a matrix-based model, and develops a fast and efficient approximation algorithm, termed successive survivable routing (SSR). First, per-flow <b>spare</b> <b>capacity</b> sharing is captured by a spare provision matrix (SPM) method. The SPM matrix has a dimension the number of failure scenarios by the number of links. It is used by each demand to route the backup path and share <b>spare</b> <b>capacity</b> with other backup paths. Next, based on a special link metric calculated from SPM, SSR iteratively routes/updates backup paths in order to minimize the cost of total <b>spare</b> <b>capacity.</b> A backup path can be further updated {{as long as it is}} not carrying any traffic. Furthermore, the SPM method and SSR algorithm are generalized from protecting all single link failures to any arbitrary link failures such as those generated by Shared Risk Link Groups or all single node failures. Numerical results comparing several SCA algorithms show that SSR has the best trade-off between solution optimality and computation speed. Index Terms—MPLS traffic engineering, multi-commodity flow, network planning and optimization, network survivability, protection and restoration, <b>spare</b> <b>capacity</b> allocation, survivable routing. I...|$|R
40|$|The {{next-generation}} SONET metro {{network is}} evolving into a service-rich infrastructure. At {{the edge of}} such a network, multi-service provisioning platforms (MSPPs) provide efficient data mapping enabled by Generic Framing Procedure (GFP) and Virtual Concatenation (VC). The core of the network {{tends to be a}} meshed architecture equipped with Multi-Service Switches (MSSs). In the context of these emerging technologies, we propose a load-balancing <b>spare</b> <b>capacity</b> reallocation approach to improve network utilization in the next-generation SONET metro networks. Using our approach, carriers can postpone network upgrades, resulting in increased revenue with reduced capital expenditures (CAPEX). For the first time, we consider the <b>spare</b> <b>capacity</b> reallocation problem from a capacity upgrade and network planning perspective. Our approach can operate in the context of shared-path protection (with backup multiplexing) because it reallocates <b>spare</b> <b>capacity</b> without disrupting working services. Unlike previous <b>spare</b> <b>capacity</b> reallocation approaches which aim at minimizing total <b>spare</b> <b>capacity,</b> our load-balancing approach minimizes the network load vector (NLV), which is a novel metric that reflects the network load distribution. Because NLV takes into consideration both uniform and non-uniform link capacity distribution, our approach can benefit both uniform and non-uniform networks. We develop a greedy loadbalancing <b>spare</b> <b>capacity</b> reallocation (GLB-SCR) heuristic algorithm to implement this approach. Our experimental results show that GLB-SCR outperforms a previously proposed algorithm (SSR) in terms of established connection capacity and total network capacity in both uniform and non-uniform networks...|$|R
40|$|Abstract — In this paper, we {{consider}} the problem of provisioning <b>spare</b> <b>capacity</b> in multi-layer backbone networks {{in order to meet}} survivability requirements. A matrix based model is presented showing how failure propagation can be mapped across network layers. Two different multilayer <b>spare</b> <b>capacity</b> allocation optimization problems are formulated utilizing the failure propagation matrix to determine the location and amount of <b>spare</b> <b>capacity</b> in each network layer. In order to scale the models a fast and efficient approximation algorithm based on our early successive survivable routing (SSR) technique is developed. Numerical results for a variety of networks show that near optimal solutions are found by the proposed heuristic algorithm. I...|$|R
50|$|Joint Capacity Optimization - In this {{technique}} the optimization is extended {{not only to}} the <b>spare</b> <b>capacity</b> of the network but to the total capacity of the network. This includes the <b>spare</b> <b>capacity</b> and the working capacity of the network. Another difference is the routing on the working capacity is not done before the p-cycle formation. First a working route option is calculated for each source/destination pair, than from all the possible solutions found, a pair is selected along with the addition of <b>spare</b> <b>capacity</b> taken into consideration to optimize the total capacity of the network. The model for {{this technique}} can be found in 1.|$|R
5000|$|Can {{the task}} or {{equipment}} be altered {{to increase the}} amount of <b>spare</b> <b>capacity?</b> ...|$|R
40|$|This thesis work {{focuses on}} {{designing}} a survivable IP-core network with the minimal investment of <b>spare</b> <b>capacity.</b> A span-oriented <b>spare</b> <b>capacity</b> allocation (SCA) scheme is proposed to satisfy customers' availability requirements in the end-to-end (E 2 E) sense. The novelty {{of the proposed}} SCA scheme is that it meets the E 2 E availability requirements {{despite the lack of}} knowledge of E 2 E bandwidth by employing protection rings covering all links in the network. Different ring selection methods are presented and also compared from the aspect of network redundancy and LP feasibility which provide more flexibility to the design. The proposed SCA algorithm further minimizes total cost of <b>spare</b> <b>capacity</b> by incorporating partial protection within the proposed architecture. The simulation results show that it can significantly reduce the <b>spare</b> <b>capacity</b> consumption depending on the availability. The proposed SCA scheme also performs better in terms of redundancy than that of two other dominant methods available these days...|$|R
40|$|A {{telecommunication}} network is survivable if, following an arc failure, the interrupted traffic ca be redirected through the network via existing excess capactiy. The standard survivability problem consists {{in finding the}} least cost investistment in <b>spare</b> <b>capacity</b> to allow rerouting of a given base traffic. In this paper we consider the more involved problem of simultaneously designing the base traffic and the <b>spare</b> <b>capacity</b> investment. If the investment costs are linear, the problem can be formulated as a large scale structured linear program that we solve using different decomposition techniques, including the analytic center cutting plane method. The global analysis is performed under the assumption of local rerouting of the traffic, i. e., the interrupted traffic creates a local demand between the end points of the broken edge. More sophistificated {{telecommunication network}} management allows {{to break down the}} interrupted traffic into its individual demand components. We do not treat the simultaneous design of the base traffic and the <b>spare</b> <b>capacity</b> under a global rerouting strategy. We propose a two-step procedure. We determine firstthe base traffic and the <b>spare</b> <b>capacity</b> under the local rerouting strategy. We then compute the necessary <b>spare</b> <b>capacity</b> to secure the base traffic under the global rerouting strategy. Our solution technique are tested on a set of realistic problem...|$|R
