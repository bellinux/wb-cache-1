17|16|Public
50|$|An {{additional}} 256 MB chip (using a 2 Gbit DDR3 SDRAM chip in the 2013 release) is fitted, {{thought to}} be used by the <b>auxiliary</b> <b>processor.</b> An additional 32 MB (256 Mbit) flash memory chip is also fitted.|$|E
40|$|Smart cards {{have opened}} up {{possibilities}} for many exciting applications. However, one problem with conventional smart cards is that they only have very limited computational power. As a result, it takes too long for a smart card to perform a single RSA signature operation in real time applications. Server-aided RSA signature computation protocols offer feasible solutions for this problem. The basic idea is to distribute most of the computation to an <b>auxiliary</b> <b>processor</b> which is capable of performing fast multi-precision modular exponentiation. However, the smart card has to guard against the <b>auxiliary</b> <b>processor</b> since it may attempt to obtain information about the secret exponent or to obtain the smart card’s signature on a message of its own choosing by supplying the smart card with incorrect values. The only way to defeat these attacks is for the smart card to have some means of verifying the data provided by the <b>auxiliary</b> <b>processor.</b> In this paper, we propose such a secure protocol...|$|E
40|$|This work {{describes}} how grammatical evolution may {{be applied to}} the domain of automatic composition. Our goal is to test this technique as an alternate tool for automatic composition. The AP 440 <b>auxiliary</b> <b>processor</b> will be used to play music, thus we shall use a grammar that generates AP 440 melodies. Grammar evolution will use fitness functions defined from several well-known single melodies to automatically generate AP 440 compositions that are expected to sound like those compose...|$|E
50|$|This {{reduction}} in processor requirements {{comes at the}} expense of liveness; if too many main processors fail in a short time, the system must halt until the <b>auxiliary</b> <b>processors</b> can reconfigure the system. During stable periods, the <b>auxiliary</b> <b>processors</b> take no part in the protocol.|$|R
50|$|Cheap Paxos extends Basic Paxos to {{tolerate}} F failures with F+1 main <b>processors</b> and F <b>auxiliary</b> <b>processors</b> by dynamically reconfiguring after each failure.|$|R
40|$|Asynchronous {{algorithms}} {{for implementing}} a faulttolerant distributed system, {{which can make}} progress despite the failure of any F processors, require 2 F + 1 processors. Cheap Paxos, {{a variant of the}} Paxos algorithm, guarantees liveness under the additional assumption that the set of nonfaulty processors does not "jump around" too fast, but uses only F + 1 main processors that actually execute the system and F <b>auxiliary</b> <b>processors</b> that are used only to handle the failure of a main <b>processor.</b> The <b>auxiliary</b> <b>processors</b> take part in reconfiguring the system to remove the failed processor, after which they can remain idle until another main processor fails...|$|R
40|$|This {{application}} note describes how {{to implement a}} Virtex™- 4 FX PowerPC ™ 405 system with the Xilinx floating point unit (FPU) coprocessor. An FPU connected to the PowerPC <b>auxiliary</b> <b>processor</b> unit (APU) interface can accelerate software applications from anywhere between three to twenty times. The reference design provided includes a completed design created using the Xilinx Embedded Development Kit (EDK). Source code for a finite impulse response (FIR) filter is provided along with a graphics utility for display output on a Windows-based PC...|$|E
40|$|The {{design of}} an {{auxiliary}} signal processor for a multiparameter radar is described {{with emphasis on}} low cost, quick development, and minimum disruption of radar operations. The processor is based around a low-cost digital signal processor card and personal computer controller. With {{the use of such}} a concept, an <b>auxiliary</b> <b>processor</b> was implemented for the NCAR CP- 2 radar during a 1991 summer field campaign and allowed measurement of additional polarimetric parameters, namely, the differential phase and the copolar cross correlation. Sample data are presented from both the auxiliary and existing radar signal processors...|$|E
40|$|Portions {{of certain}} {{software}} applications that are implemented in software can run faster {{by moving the}} implementation into hardware. For example, in a Virtex™- 4 FX FPGA, the embedded PowerPC ™ 405 (PPC 405) processor can run software and offload computations to hardware modules in the FPGA. In such a system, a coprocessor interface known as the <b>Auxiliary</b> <b>Processor</b> Unit (APU) is used to transfer data between the processor and XtremeDSP ™ (DSP 48) slices in the FPGA. Because certain computations can be done more efficiently in software, and others in hardware, an APU-enhanced system results in a faster overall solution for many digital signal processing (DSP) applications...|$|E
40|$|Beginning with a {{variation}} of the sequencing problem in a mixed-products line (MMSP-W: Mixed-Model Sequencing Problem with Workload Minimization), we propose two new models that incorporate a set of working conditions in regard with human resources of workstations on the line. These conditions come from collective agreements and therefore must be respected by both company and labor unions. The first model takes into account the saturation limit of the workstations, and the second model also includes the activation of the operators throughout the working day. Two computational experiments were carried out using a case study of the Nissan motor plant in Barcelona with two main objectives: (1) to study the repercussions of the saturation limit on the decrease in productivity on the line and (2) to evaluate the recovery of productivity on the line via both activation of operators, while maintaining the same quality in working conditions achieved by limiting the saturation, and <b>auxiliary</b> <b>processors.</b> By results we state that saturation limitation leads an important increase of work overload, which means average economic losses of 28, 731. 8 Euros/day. However, the productivity reduction may be counteracted by the work pace factor increase, at certain moments of workday, and/or by the incorporation of <b>auxiliary</b> <b>processors</b> into the line. Postprint (author's final draft...|$|R
40|$|Postprint ESWA Volume 42, Issue 22, 1 December 2015, Pages 8896 – 8910 Beginning with a {{variation}} of the sequencing problem in a mixed-products line (MMSP-W: Mixed-Model Sequencing Problem with Workload Minimization), we propose two new models that incorporate a set of working conditions in regard with human resources of workstations on the line. These conditions come from collective agreements and therefore must be respected by both company and labor unions. The first model takes into account the saturation limit of the workstations, and the second model also includes the activation of the operators throughout the working day. Two computational experiments were carried out using a case study of the Nissan motor plant in Barcelona with two main objectives: (1) to study the repercussions of the saturation limit on the decrease in productivity on the line and (2) to evaluate the recovery of productivity on the line via both activation of operators, while maintaining the same quality in working conditions achieved by limiting the saturation, and <b>auxiliary</b> <b>processors.</b> By results we state that saturation limitation leads an important increase of work overload, which means average economic losses of 28, 731. 8 Euros/day. However, the productivity reduction may be counteracted by the work pace factor increase, at certain moments of workday, and/or by the incorporation of <b>auxiliary</b> <b>processors</b> into the line. Postprint (published version...|$|R
5000|$|The T-11, {{also known}} as DC310, is a {{microprocessor}} that implements the PDP-11 instruction set architecture (ISA) developed by Digital Equipment Corporation. The T-11 was code-named [...] "Tiny". It was developed for embedded systems {{and was the first}} single-chip microprocessor developed by DEC. It was sold openly and was used by DEC in disk controllers, <b>auxiliary</b> <b>processors</b> and in the Atari System 2 arcade game system. It operated at 2.5 MHz, used a 5 V power supply and dissipated less than 1.2 W. It contains 13,000 transistors, uses NMOS logic, and was fabricated in a NMOS process.|$|R
40|$|Platform-FPGA {{software}} applications are significantly faster when critical functions are {{moved to the}} hardware domain and a high bandwidth data transfer mechanism is used to exchange data between the hardware and software. This application note describes how C-to-HDL tools can easily create a hardware coprocessor from a critical function in the software system. These tools enable software engineers with cursory hardware knowledge to leverage the advantages of hardware-software co-design. The <b>Auxiliary</b> <b>Processor</b> Unit (APU) controller closely couples the embedded PowerPC ™ processor and the Fabric Coprocessor Module (FCM), and provides a low-latency, high-bandwidth communication path. This application note demonstrates an accelerated Mandelbrot image generation application by moving computation-intensive functions to the hardware domain and attaching it to the PowerPC processor using the Virtex™- 4 FX APU controller...|$|E
40|$|The {{main purpose}} of server-aided RSA {{signature}} computation protocols is {{to make use of}} an <b>auxiliary</b> <b>processor</b> to speed up the RSA signature computations to be performed by a device with limited processing power. However, all server-aided secret computation protocols are vulnerable to active attacks. A malicious server can manipulate the data provided to the client, and try to derive useful information about the secret exponent from the result released by the client. Most of the active attacks can be defeated if the client verifies the correctness of the final result before releasing it. In this paper, we propose a powerful active attack which can make the server-aided protocols insecure even if the client verifies the final signature. (C) 1998 Elsevier Science B. V...|$|E
40|$|This paper {{summarizes}} {{current research}} {{for increasing the}} efficiency of traffic flow at hub airports by application of four dimensional (4 D) guidance techniques. A method for generating 4 D guidance commands to control the landing time of aircraft that are not equipped with on-board 4 D guidance systems is described. In one possible implementation the commands are generated in an <b>auxiliary</b> <b>processor</b> linked to the ATC host computer and displayed on a controller's monitor {{in the form of}} profile descent advisories. Accurate time control is achieved by generating air traffic controller advisories in a ground-based algorithm that combines aerodynamic, thrust and atmospheric models with an efficient numerical integration method. The time accuracy and fuel efficiency achieved when the pilot responds to these advisories were evaluated in a piloted simulation of a transport aircraft...|$|E
40|$|Security in {{embedded}} systems is limited due to resource constraints. Security in {{embedded systems}} {{have to be}} adapted to these limitations. We provide a brief {{look at some of}} the limitations, such as the battery- and processor-gap. We also discuss some solutions to the limitations. In most systems the solutions are based on specialized cryptographic <b>auxiliary</b> <b>processors.</b> However there are other solutions that are more efficient but not as widely used. Two of the other solutions are the instruction-and data-driver approaches which requires hardware support. We also look at the impact of the faster growth rate of the Shannon-Hartley theorem compared to Moore's law. 1...|$|R
40|$|For adjoint calculations, debugging, {{interactive}} control, {{and similar}} purposes one {{may need to}} reverse the execution of a computer program. The simplest option of recording a complete execution log and then reading it backwards requires massive amounts of storage. Instead one may generate the execution log piecewise by restarting the " calculation repeatedly from suitably placed checkpoints. Our goal is to minimize the temporal and spatial complexity {{as measured by the}} number of evaluation repeats and the number of checkpoints, respectively. We present optimal checkpointing schedules for one-step and multi-step evolutions. These might arise for example as discretizations of ODEs by Euler's methods or multi-step schemes, respectively. Furthermore, we present parallel extensions, where <b>auxiliary</b> <b>processors</b> perform the repeated forward evaluations such that one processor can run backward without any interruption. For either case the length of the evolution that can be [...] ...|$|R
40|$|<b>Auxiliary</b> data <b>processor</b> does {{computations}} {{related to}} synchronization of frames of telemetry data, relieving main processor of task. Called frame-synchronization-assisting module (FSAM), sorts through {{large amounts of}} data to determine whether valid and how configured. Module connected to main processor of computer through direct-memory-access (interface) module. Examines data in computer memory to find frame-synchronizing codes...|$|R
40|$|This is the author's {{version of}} the work. It is posted here for your {{personal}} use. Not for redistribution. The definitive Version of Record was published in APL Quote Quad, [URL] of the 2002 conference on APL: array processing languages: lore, problems, and applications (Madrid) This work describes how grammatical evolution may {{be applied to the}} domain of automatic composition. Our goal is to test this technique as an alternate tool for automatic composition. The AP 440 <b>auxiliary</b> <b>processor</b> will be used to play music, thus we shall use a grammar that generates AP 440 melodies. Grammar evolution will use fitness functions defined from several well-known single melodies to automatically generate AP 440 compositions that are expected to sound like those composed by human musicians. This paper has been sponsored by the Spanish Interdepartmental Commission of Science and Technology (CICYT), project numbers TEL 1999 - 0181 and TIC 2001 - 0685 -C 02 - 1...|$|E
40|$|We present Program Demultiplexing (PD), an {{execution}} paradigm that creates concurrency in sequential programs by &quot;demultiplexing &quot; methods (functions or subroutines). Call sites of a demultiplexed method {{in the program}} are associated with handlers that allow the method {{to be separated from}} the sequential program and executed on an <b>auxiliary</b> <b>processor.</b> The demultiplexed execution of a method (and its handler) is speculative and occurs when the inputs of the method are (speculatively) available, which is typically far in advance of when the method is actually called in the sequential execution. A trigger, composed of predicates that are based on program counters and memory write addresses, launches the speculative execution of the method on another processor. Our implementation of PD is based on a full-system execution-based chip multi-processor simulator with software to generate triggers and handlers from an x 86 program binary. We evaluate eight integer benchmarks from the SPEC 2000 suite ⎯programs written in C with no explicit concurrency and/or motivation to create concurrency ⎯ and achieve a harmonic mean speedup of 1. 8 x with our implementation of PD. 1...|$|E
40|$|Malware {{residing}} in dedicated isolated hardware containing an <b>auxiliary</b> <b>processor</b> such as present in network, video, and CPU chipsets is an emerging security threat. To attack the host system, {{this kind of}} malware uses the direct memory access (DMA) functionality. By utilizing DMA, the host system can be fully compromised bypassing any kind of ker-nel level protection. Traditional anti-virus software is not capable to detect this kind of malware since the auxiliary systems are completely isolated from the host CPU. In this work we present our novel method {{that is capable of}} de-tecting this kind of malware. To understand the properties of such malware we evaluated a prototype that attacks the host via DMA. Our prototype is executed in the chipset of an x 86 architecture. We identified key properties of such malware that are crucial for our detection method. Our de-tection mechanism is based on monitoring the side effects of rogue DMA usage performed by the malware. We believe that our detection mechanism is general and {{the first step in the}} detection of malware in dedicated isolated hardware...|$|E
40|$|Abstract. As {{an answer}} to the {{forthcoming}} heterogeneous multicore and accelerator–based architectures, we have proposed some syntactic extensions to C in the form of C pragmas, based on OpenMP, that make easier for programmers to offload parts of their applications to the <b>auxiliary</b> <b>processors.</b> Offloaded tasks can be made more profitable using a simple blocking strategy. And the runtime system is used to better support computation and communication overlap, while moving data to and from accelerators. In order to prove the feasibility and usefulness of our proposal, we have considered the IBM Cell architecture. The performance of the whole system has been evaluated using HPCC STREAM Triad and several NAS benchmarks. We present their evaluation and a detailed performance breakdown at the level of parallel regions. We also classify the parallel regions according to their suitability to be exploited in accelerators. Overall, our performance is better compared to the results obtained from the IBM compiler for the Cell processor. ...|$|R
40|$|This {{documentation}} gives {{technical information}} on the adaption o f VSAPL to the TSS env ironment. VSAPL has been implemented torun as an interactive subsystem under TSS {{and serves as a}} tool for interactive problem solving in the scientific {{as well as in the}} administrative area. The TSS adapti- 0 n provides a complete implementation of VSAPL, including also the full concept of shared variables. While preserving compatibility, it was our aim to improve the performance of VSAPL by utilizing the advantages of TSS as much as possible, especially concerning the transfer of big amounts of data between external storage and virtual memory. The standard <b>auxiliary</b> <b>processors</b> for sequential I/O, for issuing commands of the underlying operating system, and for stacking VSAPL input have also been converted. Besides that, means are provided to enable the users to write their own <b>auxiliary</b> <b>processors.</b> VSAPL workspaces created under VSPC, CMS, or TSO can easily be converted to TSS format, and vice versa. Utilities to convert workspaces from APL/ 360 or APLSV have not been implemented. Support is provided for most terminals with APL character set. Insertion of character translation tables for new terminals is easy. Design considerations for this work began in 1976 when the VSAPL system emerged to be an affic ient and modular APL system with a clean intetface to all IBM operating systems except TSS. These considerations were complemented by discussions with IBM TSS Marketing and Support Group and with Yale University whose TSO adaption seemed to be a mod·el for the work to be done. The major part of tbe implementation has been completed in 1977, while special supplements concerning shared variables and performance improvements have been added in 1978 and 1979. Further maintenance will be done in close cooperation with the TSS group. The author would like to thank F. Hossfeld and H. W. Homrighausenfor continuous support of this work, D. Bar tel, D. Erwin, and K. Wolkersdorfer for useful discussions and suggestions, and Mrs. K. Baumann for assistance in generation and documentation of the system. Thanks are also due to IBM Corporation, especially to E. Mohr who assisted me in utilizing the TSS peculiarities, and to Yale University Computer Center for the readiness in providing us with {{information on the}} TSO adaption. We also appreciate the help of W. Hahne, DKFZ Heidelberg, concerning the support of the I/O cruxiliary processor and of the 3270 data analysis feature...|$|R
40|$|AbstractA {{scheme of}} an {{efficient}} general-purpose parallel computer is introduced. Its design space (i. e., {{the model for}} which parallel programs are written), is a permissive parallel RAM model of computation. The implementation space {{is presented as a}} scheme of a synchronous distributed machine which is not more involved than a sorting network followed by a merging network. An efficient translation from the design space into the implementation space is given. Suppose for some t and x there is a parallel algorithm in the design space which has depth (i. e., parallel time) O(tp) using p processors for all p⩽x. This translates to an algorithm in the implementation space with depth O(ts) for all s⩽tl where l depends on the choice of the sorting and merging networks, s is the number of ‘powerful’ processors used (processors not in the sorting or merging networks) and ƒ(s,m) <b>auxiliary</b> <b>processors,</b> where m is the size of the common memory in the design space. For a specific choice, l = log 2 s + log m and ƒ(s,m) = O(s log 2 s + m log m), comparing favorably with alternative known solutions. Since many parallel algorithms are designed {{for a wide range of}} processors our solution pays the fine for implementation where it hurts least...|$|R
40|$|This paper {{presents}} {{a method to}} estimate the impedance frequency response of a vibrating wire viscosity sensor. The method {{is based on the}} application of a multiharmonic signal to the measurement circuit, which includes the sensor. The signal is composed by the harmonics that correspond to the frequencies at which the sensor’s impedance is to be estimated. The impedance is determined using least-squares (LS) multiharmonic fitting algorithms to obtain the amplitudes and phases of the harmonics of the impedance current and voltage. The stimulus generation, measurement and estimation procedure is performed by a dedicated developed measurement system. It includes a digital signal processor (DSP) to perform all the calculations, control the programmable gain instrumentation amplifiers (PGIAs) and communicate with the analog-to-digital converters (ADCs). The PGIAs and ADCs, respectively, amplify and acquire the signals across the sensor and a reference impedance which is used to limit and sample the current flowing through the wire of the sensor. An <b>auxiliary</b> <b>processor</b> connected to a digital-to-analog converter manages the stimulus generation. The system is connected by USB to a personal computer (PC) where the measurement results can be stored, interpreted and further processed...|$|E
40|$|Embedded {{microcontrollers}} {{are becoming}} increasingly prolific, serving as the primary or <b>auxiliary</b> <b>processor</b> in products and research systems from microwaves to sensor networks. Microcontrollers represent perhaps the most severely resource-constrained embedded processors, often with {{as little as a}} few bytes of memory and a few kilobytes of code space. Language and compiler technology has so far been unable to bring the benefits of modern object-oriented languages to such processors. In this paper, I will present the design and implementation of Virgil, a lightweight objectoriented language designed with careful consideration for resource-limited domains. Virgil explicitly separates initialization time from runtime, allowing an application to build complex data structures during compilation and then run directly on the bare hardware without a virtual machine or any language runtime. This separation allows the entire program heap to be available at compile time and enables three new data-sensitive optimizations: reachable members analysis, reference compression, and ROM-ization. Experimental results demonstrate that Virgil is well suited for writing microcontroller programs, with five demonstrative applications fitting in less than 256 bytes of RAM with fewer than 50 bytes of metadata. Further results show that the optimizations presented in this paper reduced code size between 20 % and 80 % and RAM size by as much as 75 %...|$|E
40|$|In {{network address}} routing, an IP packet is routed to a {{specific}} destination based on its IP address. Frequently, {{a variant of the}} longest prefix match (LPM) algorithm is implemented. This algorithm looks up IP addresses in a routing table and finds a forwarding path for the incoming IP address based on the longest possible match from the routing table. This application note describes both hardware and software implementations of a simple LPM algorithm, consisting of a linear search of the routing table for the best match. The linear search sequentially compares each entry in the routing table to the IP address being looked up and remembers the longest matching prefix encountered. While more sophisticated algorithms can be implemented, the linear search provides a valid comparison between the various methods of storing and accessing the routing table. The storage and retrieval of the routing table data is implemented in software and hardware in four different ways: • Processor Local Bus (PLB) attached Double Data Rate (DDR) memory • PLB-attached block RAM • On-chip memory (OCM) attached block RAM • <b>Auxiliary</b> <b>Processor</b> Unit (APU) attached block RAM This application note compares the speeds of these software implementations. In addition, to accelerate the lookup, a coprocessor is implemented in the Virtex™- 4 FPGA to carry out each lookup as an APU user-defined instruction. This hardware implementation achieves a substantial improvement over the software implementations...|$|E
50|$|Where {{previous}} POWER processors use the GX++ bus {{for external}} communication, POWER8 removes {{this from the}} design and replaces it with the CAPI port (Coherent Accelerator Processor Interface) that is layered on top of PCI Express 3.0. The CAPI port is used to connect <b>auxiliary</b> specialized <b>processors</b> such as GPUs, ASICs and FPGAs. Units attached to the CAPI bus can use the same memory address space as the CPU, thereby reducing the computing path length. At the 2013 ACM/IEEE Supercomputing Conference, IBM and Nvidia announced an engineering partnership to closely couple POWER8 with Nvidia GPUs in future HPC systems, with the first of them announced as the Power Systems S824L.|$|R
40|$|On-going {{research}} aims {{to accelerate}} the runtime processing speed of the One Semi-Automated Forces (OneSAF) Computer Generated Forces (CGF) simulation by converting and migrating some of the core algorithms from the host Central Processing Unit (CPU) to an on-board <b>auxiliary</b> Graphics <b>Processor</b> Unit (GPU). In this research the GPU chip {{is regarded as a}} surrogate stream processor and appropriate algorithms are designed to map to the GPU architecture. Processing speed gains are realized both through computational capabilities of the GPU as well as through offloading of the host CPU. Technology transfer of this research into the OneSAF user baseline is a key requirement of this research. The OneSAF development program focuses on the same issues of scalability and runtime performance that will be directly affected by use of GPUs. As program architects are marshalling conventional approaches for resolving these challenges, the introduction of GPU-based solutions is being realized. This paper examines the challenges, planned approaches and benchmarked results for using GPUs to accelerate OneSAF simulation. ABOUT THE AUTHOR...|$|R
5000|$|The AN/SPS-48G program {{addresses}} {{problems of}} long-term obsolescence through a system redesign that improves the radar's reliability, maintainability, and supportability through technology improvements, open architecture (OA) design, and improved logistics processes while reducing lifecycle cost. It only affects {{the layout of}} the below-deck units. The plan is to back-fit the existing AN/SPS-48E population from 2011 through 2020, with the SPS-48G units. They will support fleet 3D air search requirements through 2050 and beyond for the ship classes that have SPS-48G. The earlier 1st and 2nd stage RF amplifiers are replaced with a solid state transmitter and the receiver, <b>processor,</b> and <b>Auxiliary</b> Detection <b>Processor,</b> formerly housed in individual equipment cabinets, are combined into a single cabinet. The number of Lowest Replaceable Units is reduced by 87%, and mean time between critical failure is improved over the AN/SPS-48E(V) by 104%. The new commercial off-the-shelf (COTS) radar processor's computing capabilities will be sustained through a planned tech-refresh program. More intuitive and interactive built-in-test and embedded maintenance and operator training makes available all radar technical, engineering, and logistics data and allows remote monitoring and distance support, while ensuring accurate and timely configuration management.|$|R
40|$|This thesis {{consists}} of three journal papers that I have been worked on during my PhD program of study. The first paper presents heuristic algorithms {{that are designed to}} be implemented and executed in parallel with an existing algorithm in order to overcome its two limitations. Computational experiments show that implementing the heuristic algorithm on one <b>auxiliary</b> <b>processor</b> in parallel with the existing algorithm on the main processor significantly improves its computational efficiency, in addition to providing a series of improving feasible upper bound solutions. In the second paper, we present two interactive models to jointly forecast PEV sales and the diurnal recharging load curve in the U. S. between 2012 and 2020. A case study is conducted for the Midwest ISO region. Compared to the sales forecasts from the literature, our results turn out to be less optimistic. Our recharging load forecast results also suggest that, if appropriately managed, the impact of PEVs on electricity load would not be overwhelming in the next decade. The third paper focuses on assessing and mitigating the potential impact of PEVs recharging load on power systems, Case study show that electricity rates with higher flexibility induces PEVs to have less impact on the power systems in terms of both generation cost and uncertainties. Also, PEV users higher recharging behavior responsiveness will improve the effectiveness of price incentives and the control ability of the power utilities under all types of TOU rates mechanisms...|$|E
40|$|The inherit {{nonlinearity}} in analogue front-ends of transmitters and receivers {{have had}} primary {{impact on the}} overall performance of the wireless communication systems, as it gives arise of substantial distortion when transmitting and processing signals with such circuits. Therefore, the nonlinear compensation (linearization) techniques become essential to suppress the distortion to an acceptable extent {{in order to ensure}} sufficient low bit error rate. Furthermore, the increasing demands on higher data rate and ubiquitous interoperability between various multi-coverage protocols are two of the most important features of the contemporary communication system. The former demand pushes the communication system to use wider bandwidth and the latter one brings up severe coexistence problems. Having fully considered the problems raised above, the work in this Ph. D. thesis carries out extensive researches on the nonlinear compensations utilizing advanced digital signal processing techniques. The motivation behind this is to push more processing tasks to the digital domain, as it can potentially cut down the bill of materials (BOM) costs paid for the off-chip devices and reduce practical implementation difficulties. The work here is carried out using three approaches: numerical analysis & computer simulations; experimental tests using commercial instruments; actual implementation with FPGA. The primary contributions for this thesis are summarized as the following three points: 1) An adaptive digital predistortion (DPD) with fast convergence rate and low complexity for multi-carrier GSM system is presented. Albeit a legacy system, the GSM, however, has a very strict requirement on the out-of-band emission, thus it represents a much more difficult hurdle for DPD application. It is successfully implemented in an FPGA without using any other <b>auxiliary</b> <b>processor.</b> A simplified multiplier-free NLMS algorithm, especially suitable for FPGA implementation, for fast adapting the LUT is proposed. Many design methodologies and practical implementation issues are discussed in details. Experimental results have shown that the DPD performed robustly when it is involved in the multichannel transmitter. 2) The next generation system (5 G) will unquestionably use wider bandwidth to support higher throughput, which poses stringent needs for using high-speed data converters. Herein the analog-to-digital converter (ADC) tends to be the most expensive single device in the whole transmitter/receiver systems. Therefore, conventional DPD utilizing high-speed ADC becomes unaffordable, especially for small base stations (micro, pico and femto). A digital predistortion technique utilizing spectral extrapolation is proposed in this thesis, wherein with band-limited feedback signal, the requirement on ADC speed can be significantly released. Experimental results have validated the feasibility of the proposed technique for coping with band-limited feedback signal. It has been shown that adequate linearization performance can be achieved even if the acquisition bandwidth is less than the original signal bandwidth. The experimental results obtained by using LTE-Advanced signal of 320 MHz bandwidth are quite satisfactory, and to the authors’ knowledge, this is the first high-performance wideband DPD ever been reported. 3) To address the predicament that mobile operators do not have enough contiguous usable bandwidth, carrier aggregation (CA) technique is developed and imported into 4 G LTE-Advanced. This pushes the utilization of concurrent dual-band transmitter/receiver, which reduces the hardware expense by using a single front-end. Compensation techniques for the respective concurrent dual-band transmitter and receiver front-ends are proposed to combat the inter-band modulation distortion, and simultaneously reduce the distortion for the both lower-side band and upper-side band signals. 電気通信大学 201...|$|E
40|$|A ”length-preserving processor“, is {{in essence}} a nondeterministic linear bounded {{automaton}} with <b>auxiliary</b> storage. Length-preserving <b>processors</b> are partitioned into classes {{according to their}} methods of handling storage, and each class is termed an “abstract family of length-preserving processors” (AFLP). The smallest AFLP, i. e. the family of linear bounded automata, and the family of context-sensitive languages defined by it are characterized as the smallest families having certain containment and closure properties. These properties motivate the definition of an “abstract family of length-preserving operations,” (AFLO), and a “closed abstract, family of languages” (closed AFL). Every AFLP computes an AFLO and each of a broad class of storage-bounded subfamilies of an AFLP computes an AFLO or a «weak” AFLO. Further, every AFLO is computed by the linear-storage-bounded subfamily of some AFLP. The language associated with an AFLO proves to be a closed AFL. Conversely, every closed AFL defines an AFLO. The notions of “principal AFLO” and “principal closed AFL” are introduced. Applications are made to writing acceptor theory...|$|R

