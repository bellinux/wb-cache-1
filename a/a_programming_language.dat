3125|10000|Public
5|$|CoffeeScript is <b>a</b> <b>programming</b> <b>language</b> that cross-compiles to JavaScript; it has Python-inspired syntax.|$|E
5|$|Swift is <b>a</b> <b>programming</b> <b>language</b> {{invented by}} Apple; {{it has some}} Python-inspired syntax.|$|E
25|$|Tree-traversal APIs {{accessible}} from <b>a</b> <b>programming</b> <b>language,</b> {{for example}} DOM.|$|E
50|$|<b>A</b> first-generation <b>programming</b> <b>language</b> (1GL) is <b>a</b> machine-level <b>programming</b> <b>language.</b>|$|R
50|$|Corpus Architect is a web {{interface}} providing corpus building and management features. <b>As</b> <b>programming</b> <b>language</b> was used Python.|$|R
5000|$|<b>A</b> <b>programming</b> <b>language's</b> {{look and}} feel is often {{conveyed}} using a [...] "Hello, world!" [...] <b>program.</b> Such <b>a</b> <b>program</b> written in Eiffel might be: ...|$|R
25|$|Stream-oriented APIs {{accessible}} from <b>a</b> <b>programming</b> <b>language,</b> {{for example}} SAX and StAX.|$|E
25|$|Go is <b>a</b> <b>programming</b> <b>language</b> by Google {{incorporating}} {{ideas from}} CSP.|$|E
25|$|Ampersand is {{the name}} of <b>a</b> <b>programming</b> <b>language,</b> which uses {{relation}} algebra to specify information systems.|$|E
5000|$|... "SAS can be {{considered}} <b>a</b> general <b>programming</b> <b>language,</b> though it serves largely as <b>a</b> database <b>programming</b> <b>language</b> and <b>a</b> language {{with a wide variety}} of specialized analytic and graphic procedures." ...|$|R
50|$|Janus is <b>an</b> {{imperative}} <b>programming</b> <b>language</b> with <b>a</b> global store (there is no stack or heap allocation). Janus is <b>a</b> reversible <b>programming</b> <b>language,</b> i.e. {{it supports}} deterministic {{forward and backward}} computation by local inversion.|$|R
50|$|This object {{system is}} turned into <b>a</b> useful <b>programming</b> <b>language</b> by {{complementing}} {{it with a}} functional language describing what each object's methods do. The methods called from the object language are closures running <b>a</b> functional <b>programming</b> <b>language.</b>|$|R
25|$|Joyce is <b>a</b> <b>programming</b> <b>language</b> {{based on}} the {{principles}} of CSP, developed by Brinch Hansen around 1989.|$|E
25|$|SuperPascal is <b>a</b> <b>programming</b> <b>language</b> also {{developed}} by Brinch Hansen, influenced by CSP and his earlier work with Joyce.|$|E
25|$|R: <b>A</b> <b>programming</b> <b>language</b> and {{software}} environment for statistical computing, data mining, and graphics. It {{is part of}} the GNU Project.|$|E
50|$|Constraint toolkits {{are a way}} for {{embedding}} constraints into <b>an</b> imperative <b>programming</b> <b>language.</b> However, {{they are}} only used as external libraries for encoding and solving problems. An approach in which constraints are integrated into <b>an</b> imperative <b>programming</b> <b>language</b> is taken in the Kaleidoscope <b>programming</b> <b>language.</b>|$|R
50|$|Several {{mechanisms}} {{have been}} proposed for event log analysis: finite state automata, Petri nets, procedural (either based on <b>an</b> imperative <b>programming</b> <b>language</b> or <b>an</b> object-oriented <b>programming</b> <b>languages),</b> <b>a</b> modification of Boyer-Moore string search algorithm, and simple temporal networks.|$|R
50|$|<b>A</b> <b>programming</b> <b>languages</b> surface form {{is known}} as its syntax. Most <b>programming</b> <b>languages</b> are purely textual; they use {{sequences}} of text including words, numbers, and punctuation, much like written natural languages. On the other hand, there are some <b>programming</b> <b>languages</b> which are more graphical in nature, using visual relationships between symbols to specify <b>a</b> <b>program.</b>|$|R
25|$|APL (named {{after the}} book <b>A</b> <b>Programming</b> <b>Language)</b> is <b>a</b> <b>programming</b> <b>language</b> {{developed}} in the 1960s by Kenneth E. Iverson. Its central datatype is the multidimensional array. It uses a large range of special graphic symbols to represent most functions and operators, leading to very concise code. It {{has been an important}} influence on the development of concept modeling, spreadsheets, functional programming, and computer math packages. It has also inspired several other programming languages. It is still used today for certain applications.|$|E
25|$|It {{combines}} database abilities with a graphical, flexible, user-modifiable interface. HyperCard {{also features}} HyperTalk, <b>a</b> <b>programming</b> <b>language</b> for manipulating {{data and the}} user interface.|$|E
25|$|The {{breakthrough}} {{that allowed}} the interactive fiction community to truly prosper, however, was the creation and distribution of two sophisticated development systems. In 1987, Michael J. Roberts released TADS, <b>a</b> <b>programming</b> <b>language</b> designed to produce works of interactive fiction. In 1993, Graham Nelson released Inform, <b>a</b> <b>programming</b> <b>language</b> and set of libraries which compiled to a Z-Code story file. Each of these systems allowed anyone with sufficient time and dedication to create a game, and caused a growth boom in the online interactive fiction community.|$|E
50|$|RPG is <b>a</b> {{high-level}} <b>programming</b> <b>language</b> (HLL) {{for business}} applications. RPG is <b>an</b> IBM proprietary <b>programming</b> <b>language</b> and its later versions are available only on IBM i- or OS/400-based systems.|$|R
50|$|The PL/P <b>programming</b> <b>language</b> (<b>an</b> acronym of <b>Programming</b> <b>Language</b> for Prime (computers)) is <b>a</b> mid-level <b>programming</b> <b>language</b> {{developed}} by Prime Computer {{to serve as}} their second primary system <b>programming</b> <b>language</b> after Fortran IV. PL/P was a subset of PL/I.|$|R
25|$|In {{computer}} science, {{control flow}} (or flow of control) is {{the order in}} which individual statements, instructions or function calls of <b>an</b> imperative <b>program</b> are executed or evaluated. The emphasis on explicit control flow distinguishes <b>an</b> imperative <b>programming</b> <b>language</b> from <b>a</b> declarative <b>programming</b> <b>language.</b>|$|R
25|$|The {{mathematical}} notation for manipulating arrays which developed into the APL programming language {{was developed by}} Iverson at Harvard University starting in 1957, and published in his <b>A</b> <b>Programming</b> <b>Language</b> in 1962.|$|E
25|$|Apache OpenOffice {{includes}} OpenOffice Basic, <b>a</b> <b>programming</b> <b>language</b> {{similar to}} Microsoft Visual Basic for Applications (VBA). Apache OpenOffice has some Microsoft VBA macro support. OpenOffice Basic {{is available in}} Writer, Calc, Draw, Impress and Base.|$|E
25|$|Flexibility. Any {{protection}} {{scheme that}} can be designed to be expressed via <b>a</b> <b>programming</b> <b>language</b> can be implemented using this method. Changes to the protection scheme (e.g. from a hierarchical system to a capability-based one) do not require new hardware.|$|E
5000|$|Curl (<b>programming</b> <b>language),</b> <b>a</b> {{declarative}} <b>programming</b> <b>language</b> for web applications ...|$|R
50|$|Program phrases are {{mapped to}} actions when {{constructing}} {{a definition of}} <b>a</b> <b>programming</b> <b>language’s</b> meaning in action semantics. The execution of <b>a</b> <b>programming</b> phrase corresponds {{to the performance of}} the action to which it maps.|$|R
40|$|This paper {{proposes a}} new pragmatic {{three-dimensional}} visual programming system " 3 D-PP" {{to solve the}} problem. 2 Programming Paradigm of " 3 D-PP" " 3 D-PP" {{is based on the}} concurrent logic <b>programming</b> <b>language</b> GHC [3] {{which is one of the}} high level declarative <b>programming</b> <b>languages.</b> <b>A</b> declarative <b>programming</b> <b>language</b> is suitable to be visualized by <b>a</b> visual <b>programming</b> system because visual programming is also declarative. <b>A</b> logic <b>programming</b> <b>language</b> is also suitable to be visualized because <b>a</b> logic <b>programming</b> <b>language</b> requires comparatively fewer number of <b>programming</b> elements than <b>a</b> procedural language. The clause of GHC is composed as follows...|$|R
25|$|In honour of his {{scientific}} contributions, the name Pascal {{has been given}} to the SI unit of pressure, to <b>a</b> <b>programming</b> <b>language,</b> and Pascal's law (an important principle of hydrostatics), and as mentioned above, Pascal's triangle and Pascal's wager still bear his name.|$|E
25|$|Masuda {{attended}} the Japan Electronics College, a technical school in Shinjuku, Tokyo, {{where he studied}} computer graphics and C, <b>a</b> <b>programming</b> <b>language</b> using a DEC Professional. His daughter Kiri was born in September 2002; he named a character in Pokémon Ruby and Sapphire after her.|$|E
25|$|Applied {{mathematics}} is largely {{concerned with the}} design and analysis of explicit procedures for calculating the exact or approximate values of various functions. Such explicit procedures are called algorithms or programs. Because an effective notation for the description of programs exhibits considerable syntactic structure, it is called <b>a</b> <b>programming</b> <b>language.</b>|$|E
25|$|The Octave <b>language</b> is <b>an</b> {{interpreted}} <b>programming</b> <b>language.</b> It is <b>a</b> structured <b>programming</b> <b>language</b> (similar to C) {{and supports}} many common C standard library functions, and also certain UNIX system calls and functions. However, {{it does not}} support passing arguments by reference.|$|R
50|$|Csound is <b>a</b> {{computer}} <b>programming</b> <b>language</b> for sound, {{also known}} as a sound compiler or <b>an</b> audio <b>programming</b> <b>language,</b> or more precisely, an audio DSL. It is called Csound because it is written in C, as opposed to some of its predecessors.|$|R
50|$|The Octave <b>language</b> is <b>an</b> {{interpreted}} <b>programming</b> <b>language.</b> It is <b>a</b> structured <b>programming</b> <b>language</b> (similar to C) {{and supports}} many common C standard library functions, and also certain UNIX system calls and functions. However, {{it does not}} support passing arguments by reference.|$|R
