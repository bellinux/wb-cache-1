0|531|Public
5000|$|Bit 3 was zero to {{indicate}} that this field, if unprotected, could accept <b>alphanumeric</b> <b>input.</b> One indicates that only numeric input was accepted, and would automatically shift to numeric for some keyboards.|$|R
40|$|The {{constantly}} {{growing amount}} of information in cars implicates {{the development of new}} strategies to cope with this {{amount of information}} for drivers. An intelligent search engine reduces the problem of distracting menu navigation in deep hierarchies and consequently increases the concentration on the primary driving task. The evaluation shows that the new search engine concept reached a very high user acceptance and the objective data proved observably acceleration in handling. Also different input strategies for selection and <b>alphanumeric</b> <b>input</b> were evaluated for using while driving. The major problem of <b>alphanumeric</b> <b>input</b> can be resolved by multimodal input devices...|$|R
5000|$|Hand held {{terminal}} with <b>input</b> <b>keyboard</b> and LCD display {{touch screen}} - Patent US D348654 S ...|$|R
50|$|POKEY {{provides}} 29 Read/Write registers controlling Sound, Paddle <b>input,</b> <b>keyboard</b> <b>input,</b> serial input/output, and interrupts. Many POKEY register addresses have dual purposes performing different {{functions as}} a Read vs a Write register. Therefore, no code should read Hardware registers expecting to retrieve the previously written value.|$|R
50|$|The Linux kernel (keyboard.c driver) {{has almost}} {{complete}} support for <b>keyboard</b> <b>input</b> (<b>keyboard</b> layouts), {{but it remains}} a bit inconsistent because it interacts badly with different character sets. Layouts are loaded by the loadkeys utility.|$|R
40|$|A {{new style}} of remote control device (RCD) that incorpo-rates a {{touchpad}} for input is described. Unistrokes created through touch {{are used to}} issue commands and select menu items presented on a television screen. The design addresses the drawbacks of traditional RCDs, such as an over-abundance of buttons {{and the lack of}} <b>alphanumeric</b> <b>input.</b> We have assembled a prototype using a Win-dows 9. 5 -based computer, an infrared card, and a touchpad. Future developments and research plans for the touchpad-based RCD are also discussed...|$|R
50|$|Alpha Dispatch {{service is}} best {{described}} as enhanced numeric paging. It is a service that consists of live operators who answer incoming calls and input the callers' messages on a computer, then transmit the message using the Telocator <b>Alphanumeric</b> <b>input</b> Protocol to the paging provider's radio towers. Alphanumeric pagers receive the messages {{in the form of}} words and numbers. Messages are sequentially numbered and archived for later reference if required to be re-sent. PageNet was one of the larger paging providers who offered this service add-on to their alphanumeric pager customers.|$|R
50|$|The Interactive Paging service {{introduced}} wireless {{users to}} such features as peer-to-peer Delivery and Read Receipts and sending faxes and {{text to speech}} messages to a telephone. It also incorporated all the features of a traditional one way paging system (Interactive voice response, Telocator <b>Alphanumeric</b> <b>input</b> Protocol, etc..) and added two way extensions to those services. The devices communicated to the internet, peer users, and the PSTN via a Gateway which also served as the store and forward mailbox for the wireless user. Interactive Paging became known as Interactive Messaging Plus(sm) when BellSouth and SBC formed Cingular Wireless.|$|R
40|$|A compact {{graphics}} terminal {{for use as}} {{the input}} to a computerized medical records system is described. The principal mode of communication between the terminal and the records system is by checklists and menu selection. However, the terminal accepts short, handwritten messages as well as conventional <b>alphanumeric</b> <b>input.</b> The terminal consists of an electronic tablet, a display, a microcomputer controller, a character generator, and a refresh memory for the display. An Intel SBC 80 / 10 microcomputer controls {{the flow of information}} and a 16 kilobyte memory stores the point-by-point array of information to be displayed. A specially designed interface continuously generates the raster display without the intervention of the microcomputer...|$|R
40|$|Increasing functionality, {{growing media}} volumes and dynamic data in today's {{in-vehicle}} information systems bear new challenges for user interaction design. Traditional hierarchical and menu-based interaction can only provide limited support while new search-based approaches are promising. In this work we assess different search techniques and search-based user interfaces. In particular we compare free search across all data items with categorized search. Our experiments with functional prototypes show that free search {{is more efficient}} {{and easier to use}} than searching within categories. Tests in a driving simulator show promising results regarding safety and workload. Means for <b>alphanumeric</b> <b>input</b> appear to be essential for an efficient and safe search interaction while driving...|$|R
40|$|In {{the last}} few decades, the {{computer}} <b>keyboards</b> <b>input</b> device has received much attention {{in the past and}} is believed by many to be a prime factor in the etiology of upper extremity musculoskeletal disorders. And wide rang of voice input systems are proposed to allow persons to operate a computer without using a keyboard or mouse. This thesis reviewed both of acoustic–only and bimodal voice recognition system and compared their recognition accuracy in simulated noisy environments. Then, the voice recognition technique is adopted in keyboard design to fulfil keyboard ergonomic demands. Finally, the value analysis was performed to evaluate the redesigned voice <b>input</b> <b>keyboards.</b> The experiment results demonstrate, compared to conventional acoustic only based speech recognition, bimodal speech recognition scheme has a much improved recognition accuracy and using the visual features allows the development of a more practical and real-time recognition system. Through the redesigned voice <b>input</b> <b>keyboard,</b> computer users can get their hand free completely and partly at their own will, by which they are away from the upper extremity musculoskeletal disorders risk and vocal strain. Validerat; 20101217 (root...|$|R
40|$|Advances {{in modern}} farming {{technology}} provide automation features that lighten the workload for operators of farming equipment. One {{of the many}} technologies incorporated in modern agricultural equipment is automated steering systems like the John Deere 2 ̆ 7 s Green-Star Auto-Trac System(TM), which is a hands-free steering system for straight-line driving applications. When using a machine that is equipped {{with one of these}} systems, the work load of the operator is lightened and enables the operator to perform other tasks while doing field work. Many people believe a tractor cab could become a mobile office in the near future with the operator using a personal computer to take care of various office tasks while working in the field. The goal of this research was to investigate the feasibility of using a computer, running standard office applications, in a moving off-road vehicle with semi autonomous controls. In separate studies commercially available input devices for pointing and <b>alphanumeric</b> <b>input</b> were evaluated to determine those best suited for performing office computer application tasks in a mobile off-road environment. The pointing and <b>alphanumeric</b> <b>input</b> devices that seemed best suited for the tested environment were combined into sensible user interfaces, and they were evaluated for usability and performance a user can expect with them. The results showed that the mouse, touch screen and the standard QWERTY <b>keyboard</b> are the <b>input</b> devices that provide the best usability. These devices showed good results in the objective performance measurements {{as well as in the}} subjective user evaluations. They are therefore well suited to be used in the tested environment. With these devices the usability and performance a user can achieve in a moving off road environment are reduced compared to those in an office environment but still satisfying to the user, which encourages the implementation of such a system in the future...|$|R
50|$|X uses a {{client-server}} model. An X server program runs on {{a computer}} with a graphical display and communicates with various client programs. The X server acts as a go-between for the user and the client programs, accepting requests on TCP port 6000 for graphical output (windows) from the client programs and displaying them to the user(display), and receiving user <b>input</b> (<b>keyboard,</b> mouse) and transmitting it to the client programs.|$|R
40|$|This {{document}} specifies an Internet standards track {{protocol for}} the Internet community, and requests discussion {{and suggestions for}} improvements. Please refer to the current edition of the "Internet Official Protocol Standards " (STD 1) for the standardization state and status of this protocol. Distribution of this memo is unlimited. Copyright Notice Copyright (C) The Internet Society (2006). The Secure Shell Protocol (SSH) is a protocol for secure remote login and other secure network services over an insecure network. This document describes a general purpose authentication method for the SSH protocol, suitable for interactive authentications where the authentication data should be entered via a <b>keyboard</b> (or equivalent <b>alphanumeric</b> <b>input</b> device). The major goal of this method is to allow the SSH client to support a whole class of authentication mechanism(s) without knowing {{the specifics of the}} actual authentication mechanism(s). 1...|$|R
50|$|Encryption {{itself was}} {{provided}} through a single half-rotor; input contacts were through slip rings, {{each of which}} connected to a single output contact on the rotor. Since both the vowels and consonants were passed through the same rotor, it had sixty contacts (the least common multiple of six and twenty); wiring ensured that {{the two groups were}} kept separate. The slip rings were connected to the <b>input</b> <b>keyboard</b> through a plugboard; again this was organized to keep the vowels and consonants separate.|$|R
50|$|This form of {{an attack}} is {{initiated}} by a bystander watching the user enter their password. This attack is present in most input schemes for authentication, but DAS schemes are especially vulnerable as the users strokes are displayed on the screen for all to see, unlike <b>alphanumeric</b> text <b>input</b> where the characters entered are not actually displayed on screen.|$|R
5000|$|Fullscreen {{interactive}} mode (<b>keyboard</b> <b>input</b> during fullscreen) ...|$|R
5000|$|Input: Touch screen, Predictive Text <b>Input,</b> sliding QWERTY <b>keyboard</b> ...|$|R
5000|$|... #Subtitle level 2: Comparison {{to other}} <b>keyboard</b> <b>input</b> systems ...|$|R
5000|$|... #Subtitle level 2: Computer <b>input</b> by {{alternative}} <b>keyboard</b> layout ...|$|R
5000|$|... #Subtitle level 3: Conventional <b>keyboard</b> <b>input</b> {{methods for}} Japanese ...|$|R
50|$|The Weston {{code for}} {{handling}} <b>input</b> devices (<b>keyboards,</b> pointers, touch screens, etc.) was split {{into its own}} separate library, called libinput, for which support was first merged in Weston 1.5.|$|R
5000|$|Customizable <b>input</b> {{keys and}} <b>keyboard</b> shortcuts for the {{different}} functions.|$|R
5000|$|<b>Input</b> devices: QWERTY <b>keyboard,</b> touchscreen, Backtrack {{navigation}} pad behind screen ...|$|R
5000|$|Provide assistive {{technologies}}. Assistive technologies (e.g. screen readers, screen magnifiers, voice <b>input,</b> adapted <b>keyboards)</b> must {{actually be}} available for the platform so that the users can effectively interface with the technology.|$|R
50|$|Note: Most {{of these}} {{platforms}} support HID-compliant keyboards, but usually only as methods for entering text. Rarely, console games support <b>input</b> from <b>keyboards</b> and mice for gameplay purposes, such as CS:GO on the PS3.|$|R
40|$|This paper {{presents}} {{results on}} a user interface model for providing universal access to mobile computing devices. The model uses a continuous speech understanding engine {{to provide access}} to a virtual keyboard and mouse through speech input. This research has been targeted towards users with permanent motor disabilities. However, these results also apply to able-bodied users with temporary, taskinduced motor disabilities, such as users performing alphanumeric data entry through a cellular phone keypad. The proposed solution might complement (or even replace) miniaturized keyboards and other physical keyboard alternatives, such as stylus-type "soft " keyboards. Since it only requires a microphone (and perhaps a speaker for feedback) which are already included in many mobile devices, it may allow such devices to shrink considerably in size, as <b>alphanumeric</b> <b>input</b> is no longer bound to a physical area. The paper describes the underlying architecture employed by the system. It presents empirical results addressing the effectiveness of this interface over alternative <b>input</b> methods for <b>alphanumeric</b> data entry. Finally, it discusses implications and future directions...|$|R
40|$|Abstract Code {{injection}} {{attacks are}} one of the most powerful and important classes of attacks on software. In these attacks, the attacker sends malicious input to a software application, where it is stored in memory. The malicious input is chosen in such a way that its representation in memory is also a valid representation of a machine code program that performs actions chosen by the attacker. The attacker then triggers a bug in the application to divert the control flow to this injected machine code. A typical action of the injected code is to launch a command interpreter shell, and hence the malicious input is often called shellcode. Attacks are usually performed against network facing applications, and such applications often perform validations or encodings on input. Hence, a typical hurdle for attackers, is that the shellcode has to pass one or more filtering methods before it is stored in the vulnerable application’s memory space. Clearly, for a code injection attack to succeed, the malicious input must survive such validations and transformations. <b>Alphanumeric</b> <b>input</b> (consisting only of letters and digits) is typically ver...|$|R
50|$|In the CLI, users had {{to learn}} an {{artificial}} means of <b>input,</b> the <b>keyboard,</b> {{and a series of}} codified inputs, that had a limited range of responses, where the syntax of those commands was strict.|$|R
50|$|Various {{types of}} <b>input</b> {{including}} mouse, <b>keyboard,</b> joystick and Wii Remote are supported.|$|R
2500|$|X uses a client–server model: an X server {{communicates}} {{with various}} client programs. The server accepts requests for graphical output (windows) and sends back user <b>input</b> (from <b>keyboard,</b> mouse, or touchscreen). The server may function as: ...|$|R
50|$|Session replay is {{the ability}} to replay a visitor's journey on a web site or within a web application. Replay can include the user's view (browser or screen output), user <b>input</b> (<b>keyboard</b> and mouse <b>inputs),</b> and logs of network events or console logs. Its main value is to help improve {{customer}} experience and to identify obstacles in conversion processes on websites. However it {{can also be used to}} study web site usability and customer behavior as well as handling customer service questions as the full customer journey with all interactions can be replayed. Some organizations even use this capability to analyse fraudulent behavior on websites.|$|R
50|$|Keyboards with {{optional}} tracing mode include HTC Touch <b>Input,</b> and Ultra <b>Keyboard</b> for Android.|$|R
40|$|Abstract—Virtual machine (VM) based logging-and-replay {{technology}} has {{attracted much attention}} for system security, fault tolerance, and debugging. However, so far {{there is not a}} replay system designed on virtual machine monitor Xen. In this paper, XenLR presents the design and implementation of a logging tool for full system replay on Xen. To reduce the design complexity, XenLR is achieved on a lightweight VM mini OS. Our preliminary work dedicates to identify architectural nondeterministic events and record them compactly. XenLR does not modify the guest OS and only need to record the external <b>inputs</b> (<b>keyboard</b> <b>input</b> and time update on mini OS). The log data are saved in the privileged domain’s file system through transmission channels. The experiments indicate that XenLR results in low time and space overhead. Overhead due to logging is imperceptible for interactive use. The log files grow at 1. 4 MByte/day, so it causes litter space consumption for today’s large capacity disk storage...|$|R
50|$|Keyboards with {{optional}} tracing mode include Gboard, HTC Touch <b>Input,</b> and Ultra <b>Keyboard</b> for Android.|$|R
5000|$|GUI {{applications}} by {{waiting for}} windows or controls and sending <b>keyboard</b> <b>input</b> or mouse clicks, ...|$|R
