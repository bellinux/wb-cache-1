804|3433|Public
25|$|Commands in the Control Language (CL) are promptable {{using the}} {{keyboard}} F4 function key, and most provide cursor-sensitive {{help to make}} specifying command parameters simpler. All command names and parameter keywords are based upon uniform standardized and mostly 3-letter abbreviations for verbs and subjects, making for easy rendering and interpretation by the <b>application</b> <b>developer,</b> as opposed to other operating systems with often cryptic or inconsistent command names for related functions or command parameter switches. For instance, the parameter keyword to apply a text description to any object to be created or changed is spelled the same way for all such commands.|$|E
25|$|The DM also {{includes}} the ability to save partially complete DSN's, with code and logic to ask the user for any missing information at runtime. For instance, a DSN can be created without a required password. When an ODBC application attempts to connect to the DBMS using this DSN, the system will pause and ask the user to provide the password before continuing. This frees the <b>application</b> <b>developer</b> from having to create this sort of code, as well as having to know which questions to ask. All of this {{is included in the}} driver and the DSNs.|$|E
25|$|Since {{the merger}} in 2003, Square Enix has {{acquired}} a number of companies, as well as creating several subsidiary companies. To strengthen its wireless market, Square Enix acquired mobile <b>application</b> <b>developer</b> UIEvolution in March 2004, though it was sold in December 2007, and the company instead founded its own Square Enix MobileStudio in January 2008 to focus on mobile products. In January 2005 Square Enix founded Square Enix China, expanding their interests in the People's Republic of China. In September of that year Square Enix bought the gaming developer and publisher Taito, renowned for their arcade hits such as Space Invaders and the Bubble Bobble series; Taito's home and portable console games divisions were merged into Square Enix itself by March 2010. In August 2008, Square Enix made plans for a similar expansion {{by way of a}} friendly takeover of video game developer Tecmo by purchasing shares at a 30 percent premium, but Tecmo rejected the proposed takeover. Instead, in February 2009, Square Enix announced a takeover deal for Eidos plc, the holding company for Eidos Interactive, the UK-based publisher of the Tomb Raider, Hitman, Deus Ex, Thief and Legacy of Kain franchises, along with its multiple subsidiary development studios which developed the games The acquisition of Eidos was completed in April 2009, and in November the publisher was merged with Square Enix's European publishing organization to form Square Enix Europe. In March 2011 Square Enix founded another mobile development studio, Hippos Lab, followed by another in 2012, Square Enix Montr√©al. A third mobile studio was founded in Indonesia in June 2013, Smileworks, but was closed in January 2015. The latest subsidiary company to be created was Shinra Technologies, a cloud gaming company, but it was only in existence from September 2014 to January 2016. In 2015, Square created a new studio known as Tokyo RPG Factory to develop what was then dubbed Project Setsuna. On February 21, 2017, the formation of new studio Studio Istolia was announced. The studio, headed by Hideo Baba, would be working on the new RPG Project Prelude Rune.|$|E
50|$|The OPC UA <b>application</b> <b>developers</b> code {{against the}} OPC UA API and {{therefore}} mainly use API documentation. Nevertheless, part 3, 4, and 5 {{may be of}} interest for <b>application</b> <b>developers.</b>|$|R
5000|$|Information {{technology}} <b>application</b> <b>developers</b> and integrators ...|$|R
50|$|The design goal of OpenSL ES {{is to give}} <b>application</b> <b>developers</b> {{access to}} {{advanced}} audio features such as 3D positional audioand MIDI playback while striving for easy application porting between manufacturers and platforms.It is developed primarily for <b>application</b> <b>developers</b> in the mobile and gaming industry.|$|R
500|$|Twitter {{acquired}} <b>application</b> <b>developer</b> Atebits on April 11, 2010. Atebits {{had developed}} the Apple Design Award-winning Twitter client Tweetie for the Mac and iPhone. The application, now called [...] "Twitter" [...] and distributed free of charge, {{is the official}} Twitter client for the iPhone, iPad and Mac.|$|E
2500|$|The Suns won {{an award}} in the Advanced Media {{category}} for a video on Suns.com during the 2007 NBA Playoffs, Raja Bell Reunion with Teammates, produced by Steven J. Koek. An Emmy was also awarded in 2008 for , the team's official online fan community. The site {{was produced by}} Suns VP of Interactive Services Jeramie McPeek and powered by technology from social media <b>application</b> <b>developer</b> KickApps. McPeek was also awarded for the writing and producing of the virtual locker room site, [...] along with Daniel Banks. [...] The Phoenix Suns also created a Twitter Central for their fans called [...]|$|E
50|$|XML Master Professional <b>Application</b> <b>Developer</b> is a {{certificate}} for professionals who {{have demonstrated the}} ability to use technology in developing applications that deal with XML data. It is based on passing the Master Basic exam and the XML Master Professional <b>Application</b> <b>Developer</b> exam.|$|E
5000|$|Aaron Williams, News <b>Applications</b> <b>Developer,</b> Center for Investigative Reporting (CIR) ...|$|R
50|$|Winner of 2008 Local Mobile <b>Applications</b> <b>Developers</b> Winner from AT&T.|$|R
40|$|To design {{effective}} exception handlers, developers must predict at {{design time}} the exceptional events {{that may occur}} at runtime, and must implement the corresponding handlers {{on the basis of}} their predictions. Designing exception handlers for component-based software systems is particularly difficult because the information required to build handlers is distributed between component and <b>application</b> <b>developers.</b> Com-ponent developers know the internal details of the components but ignore the <b>applications,</b> while <b>application</b> <b>developers</b> own the <b>applications</b> but cannot access the details required to implement handlers in components. This article addresses the problem of automatically healing the infield failures that are caused by faulty integration of OTS components. In the article, we propose a technique and a methodology to decouple the tasks of component and <b>application</b> <b>developers,</b> who will be able to share information asynchronously and independently, and communicate implicitly by developing and deploying what we call healing connectors. Component developers implement healing connectors on the basis of information about the integration problems frequently experienced by <b>application</b> <b>developers.</b> <b>Application</b> <b>developers</b> easily and safely install healing connectors in their applications without knowing the internal details of the connectors. Healing con-nectors heal failures activated by exceptions raised in the OTS components actually deployed in the system. The article defines healing connectors, introduces amethodology to develop and deploy healing connectors...|$|R
5000|$|Includes {{all of the}} {{capabilities}} of Rational <b>Application</b> <b>Developer</b> ...|$|E
5000|$|... #Subtitle level 3: XML Master Professional <b>Application</b> <b>Developer</b> Certification ...|$|E
5000|$|... #Caption: Rational <b>Application</b> <b>Developer</b> {{with the}} Java code editor open ...|$|E
5000|$|IBM COBOL <b>application</b> <b>developers</b> can now {{simultaneously}} debug their online CICS Applications.|$|R
5000|$|Modifying the {{database}} structure, as necessary, from information given by <b>application</b> <b>developers</b> ...|$|R
50|$|The SAGA API {{does not}} strive to replace Globus or similar grid {{computing}} middleware systems, {{and does not}} target middleware <b>developers,</b> but <b>application</b> <b>developers</b> with no background on grid computing. Such developers typically wish to devote their time to their own goals and minimize the time spent coding infrastructure functionality. The API insulates <b>application</b> <b>developers</b> from middleware.|$|R
5000|$|For the <b>application</b> <b>developer,</b> JAAS is a {{standard}} library that provides: ...|$|E
50|$|Joseph Scoggins - Lead <b>Application</b> <b>Developer</b> and Tri-State District Manager at To-Go Delivery.|$|E
50|$|WID {{is built}} on top of IBM Rational <b>Application</b> <b>Developer</b> V7.0 Eclipse based technology.|$|E
50|$|It {{provides}} a <b>developer</b> portal for <b>application</b> <b>developers</b> and to view published APIs. An administration portal {{allows users to}} establish policies for APIs such as self-registration, quotas, key management and security policies. An analytics engine provides role-based analytics for API owners, solution administrators and <b>application</b> <b>developers</b> in order to manage APIs and ensure service levels are being achieved.|$|R
5000|$|Tags can {{be added}} to APIs and API {{operations}} for ease of grouping by <b>application</b> <b>developers.</b> These tags are labels that can be used by <b>application</b> <b>developers</b> to organize and search for APIs in the Developer Portal. If a developer downloads the Swagger file for the API, the additional tag details are written to the tags field.|$|R
5000|$|Microsoft Visual Studio {{is making}} the Ethereum Solidity {{language}} available to <b>application</b> <b>developers.</b>|$|R
5000|$|The <b>application</b> <b>developer</b> {{does not}} need to know the {{specifics}} about a scripting language ...|$|E
5000|$|IBM Rational Software products: Rational <b>Application</b> <b>Developer,</b> Rational Software Architect, Rational Team Concert and others.|$|E
5000|$|V7.0: Released December 2006. Based on Eclipse v3.2, UML v2.1 and Rational <b>Application</b> <b>Developer</b> v7.0 ...|$|E
40|$|Abstract‚ÄîWeb APIs {{provide a}} {{systematic}} and extensible ap-proach for application-to-application interaction. A {{large number of}} mobile applications makes use of web APIs to integrate services into apps. Each Web API‚Äôs evolution pace is determined by their respective <b>developer</b> and mobile <b>application</b> <b>developers</b> are forced to accompany the API providers in their software evolution tasks. In this paper we investigate whether and how mobile <b>application</b> <b>developers</b> deal with the added distress of web APIs evolving. In particular, we studied how robust 43 high profile mobile applications are when dealing with mutated web API responses. Additionally, we interviewed three mobile <b>application</b> <b>developers</b> to better understand their choices and trade-offs regarding web API integration...|$|R
40|$|With the {{development}} of {{information and communication technologies}} and the emergence of the Internet of things, the open-platform strategy has come into the spotlight. Opening a platform allows external firms or individuals to enter the platform ecosystem without any restriction. Even though a platform connects diverse products and services, previous studies have focused on the bilateral relationship between a platform and a single group of product or service. This research investigates platform openness to multiple groups of products and services in an ecosystem simultaneously; research has especially focused on how the openness of the Android platform to both applications and devices influences <b>application</b> <b>developers</b> 2 ÃÜ 019 intention to continuously participate. First, openness to applications influences not only the participation intention of <b>application</b> <b>developers</b> directly but also the user base of the platform and competition among developers. An increased user base leads to an enhanced participation intention of developers through indirect network effects, while intense competition does not {{have a significant effect on}} intention. Second, openness to devices also influences the participation intention of <b>application</b> <b>developers</b> indirectly. Openness to devices contributes to enlargement of the user base which positively influences the intention of <b>application</b> <b>developers.</b> Openness to device also incurs coordination costs between applications and devices, which have a partially negative effect on the participation of <b>application</b> <b>developers.</b> In this paper, we propose a comprehensive model that explains the impact of platform openness on <b>application</b> <b>developers</b> in order to offer a deeper understanding of the mechanisms of platform openness...|$|R
5000|$|The QtMultimedia module {{implements}} low-level multimedia functionality. <b>Application</b> <b>developers</b> {{would normally}} use the phonon module.|$|R
50|$|The {{latest version}} of Rational <b>Application</b> <b>Developer</b> is version 9.5, which was {{released}} in September 2015.|$|E
50|$|DevRocket is {{available}} in two varieties: a Platform Developer Kit (PDK) and <b>Application</b> <b>Developer</b> Kit (ADK). The Platform Developer Kit includes {{the ability to communicate}} with a target (RSE, SSH), create and manage file systems, debugging (kgdb), and performance tuning (memory leak, memory use, system profiling). The <b>application</b> <b>developer</b> kit includes a virtual target for developing applications earlier in the development cycle, one-click edit/compile/debug, and performance tuning.|$|E
50|$|In 2006, IBM {{donated the}} Web Tools Platform (WTP) to Eclipse. WTP {{included}} tools for developing Web and Java EE applications. That year also saw release of Rational <b>Application</b> <b>Developer</b> version 7.0, with new features supporting Java Server Faces, and tools for XSD and WSDL visualization and transforms. In this release, Rational <b>Application</b> <b>Developer</b> could {{be installed in}} a single workbench with other Rational tools.|$|E
5000|$|IoT-Security - Measures performance, energy, {{and memory}} impact {{allowing}} <b>application</b> <b>developers</b> to analyze security implementations ...|$|R
5000|$|... their {{interface}} designers were not usability experts (often meaning {{they were the}} <b>application</b> <b>developers</b> themselves) ...|$|R
50|$|Windows XP {{introduces}} the Fax Service Extended COM API for <b>application</b> <b>developers</b> to incorporate fax functionality.|$|R
