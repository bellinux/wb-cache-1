6|11|Public
5000|$|... #Caption: A Shrike 5.56 with a 200-round M249 {{ammunition}} belt pouch and an Ares magazine well <b>adapter</b> <b>block</b> ...|$|E
50|$|The AV cable (SCPH-10500) is {{included}} with the PS2 and carries dual-channel (stereo) audio and composite video at 576i/50 Hz (PAL) or 480i/60 Hz (NTSC). It {{is identical to the}} composite cables available for the PlayStation and PlayStation 3. Consoles in PAL territories also come bundled with a composite/stereo SCART <b>adapter</b> <b>block</b> to facilitate connection to SCART enabled TVs. This is merely an adapter and provides no quality improvement over a direct composite connection.|$|E
50|$|An AC adapter, AC/DC adapter, or AC/DC {{converter}} {{is a type}} {{of external}} power supply, often enclosed in a case similar to an AC plug. Other common names include plug pack, plug-in adapter, <b>adapter</b> <b>block,</b> domestic mains adapter, line power adapter, wall wart, power brick, and power adapter. Adapters for battery-powered equipment may be described as chargers or rechargers (see also battery charger). AC adapters are used with electrical devices that require power but do not contain internal components to derive the required voltage and power from mains power. The internal circuitry of an external power supply is very similar to the design that would be used for a built-in or internal supply.|$|E
5000|$|In Kazuya Minekura's Wild <b>Adapter</b> manga, CalorieMate <b>blocks</b> are a {{favorite}} treat {{of the main}} character Minoru Tokito.|$|R
5000|$|Intel Corporation defined {{form factor}} and {{interconnection}} standards for notebook computer components, including [...] "Barebones" [...] (chassis and motherboard), hard disk drive, optical disk drive, LCD, battery pack, keyboard, and AC/DC <b>adapter.</b> These building <b>blocks</b> are primarily marketed to computer building companies, rather than DIY users.|$|R
40|$|Abstract: Function <b>Block</b> <b>Adapters</b> (FBAs) are new {{modeling}} elements, {{responsible for}} the connection of UML capsules and function blocks of the IEC 61131 - 3 standard. FBAs contain an interface to capsules {{as well as to}} function blocks and a description of the mapping between these interfaces. In this paper we discuss implementation issues of FBAs. While the specification of FBAs is completely platform-independent, we show that different hardware solutions force highly platform-dependent implementation models. In most cases a FBA is implemented in two programming languages- an object oriented language and a language out of IEC 61131 - 3. While object oriented programs mostly implement an event-driven execution semantic, PLC programs are executed cyclically. Especially this heterogeneous implementation environment was the motivation for developing Function <b>Block</b> <b>Adapters.</b> 1...|$|R
40|$|The next {{generation}} consumer level interactive services require reliable and constant communication for both mobile and static users. The Digital Video Broadcasting (DVB) group has exploited the rapidly increasing satellite {{technology for the}} provision of interactive services and launched a standard called Digital Video Broadcast through Return Channel Satellite (DYB-RCS). DVB-RCS relies on DVB-Satellite (DVB-S) {{for the provision of}} forward channel. The Digital Signal processing (DSP) implemented in the satellite channel <b>adapter</b> <b>block</b> of these standards use powerful channel coding and modulation techniques. The investigation is concentrated towards the Forward Error Correction (FEC) of the satellite channel <b>adapter</b> <b>block,</b> which will help in determining, how the technology copes with the varying channel conditions and user requirements(1) ...|$|E
40|$|Method for {{simulation}} of an electrical circuit by synthesis {{of a physical}} model, using Digital Wave Structures including the following steps: {{within the framework of}} digital wave structure, consider a serial an parallel <b>adapter</b> <b>block</b> with at least three ports of which one adapted; represent said electrical circuit connecting the elements together by means of a plurality of said adapter blocks; connect each <b>adapter</b> <b>block</b> to the adapted port of the previous adapter block; consider the plurality of said adapter blocks as nodes of a binary tree and said elements of said electrical circuit as leaves of said binary tree; apply an element of the aforesaid electrical circuit to the adapted port of the root node; consider, for each port, an incident wave and a reflected wave; assess the reflected wave of the element connected to the adapted port of the root; starting from the root and moving towards the lower leaves of the tree, calculate each incident wave; update the status of any dynamic elements present in the leaves...|$|E
40|$|In {{this thesis}} a novel {{measurement}} setup and thru-reflect-line (TRL) calibration kit for vector network analyser (VNA) measurements at 220 GHz to 325 GHz (WR- 03) is presented. Measurements on passive membrane circuit devices under test (DUTs) show {{improvement in the}} S-parameters compared to a waveguide integrated membrane circuit setup in previous work, especially in reducing the ripples and increasing repeatability of the measurements. VNA measurements provide a challenge when measuring on waveguide integrated membrane circuit devices at terahertz frequencies. In this setup, phase uncertainty in the measurements, due to waveguide width tolerance, is reduced by shortening the access waveguides. Because both waveguide inputs are placed in the same flange, the access waveguides can be made much shorter. However, {{in order to accommodate}} different DUT and TRL line lengths, two bends were introduced in each waveguide, and the trade-off between sharper bends or longer access waveguides effect on uncertainty, investigated. By the use of an <b>adapter</b> <b>block,</b> which puts the VNA extender outputs in the same flange, phase uncertainty due to cable flex is eliminated by locking the VNA frequency extenders in position during the entire measurement...|$|E
5000|$|A lineman's handset {{typically}} connects via {{a pair of}} test leads, not the modular connector {{found on}} most consumer telephone equipment. The test leads will feature some combination of alligator clips (to connect to bare wires), a piercing spike or [...] "bed-of-nails" [...] (for insulated wires), and something designed to fit a punch <b>block.</b> <b>Adapters</b> designed to fit other punch block types, heat coil sockets, or modular jacks may also be used.|$|R
40|$|In {{this paper}} we {{introduce}} a new UML stereotype, the Function <b>Block</b> <b>Adapter</b> (FBA), {{which is responsible for}} the connection of UML-RealTime capsules and function blocks of the IEC 61131 - 3 (standard for PLC programming languages). FBAs contain an interface to capsules as well as to function blocks and a description of the mapping between these interfaces. For this description a special FBA-language is provided. The FBA-language is easy to use both to UML-RealTime and to IEC 61131 - 3 developers, so they can unambiguously express the interface mapping. An important advantage of the FBAlanguage is the possibility to use it at an early design state of the UML-RealTime system. We explain our concept of FBAs by an application to a realistic manufacturing system. 1...|$|R
40|$|In {{this paper}} we {{introduce}} a new profile for Function <b>Block</b> <b>Adapters</b> (FBAs), which {{are responsible for the}} connection of Unified Modeling Language (UML) ports and function blocks of non-UML languages. FBAs provide interfaces to ports, to function blocks, and a description of the mapping between these interfaces. Both UML and function block developers can use a special easy-to-use FBA description language to express these interface mappings in a concise manner. Our FBA language offers the important advantage of highlevel descriptions during early phases of the UML development process. This paper proposes a mapping of FBA-semantics to standard UML-semantics. The application of FBAs to function block oriented languages like IEC 61131 - 3, IEC 61499, or Matlab/Simulink^TM is discussed by using the approach of the Model Driven Architecture...|$|R
40|$|The Unified Modeling Language (UML) is the {{standard}} design language for developing object oriented applications. It is widely used {{in the development of}} complex systems for general-purpose computers. In heterogeneous domains like mechatronics exist a lot of special-purpose programming languages, which are not always easily to map to UML concepts. For such reasons the UML provides an extension mechanism, called stereotyping. This can be used for the mapping of domain-specific languages to the UML. Our approach is to use UML within a mechatronic system for the integration of different specialized design and programming languages. As a placeholder for a system component, which is modeled by such a language, we define domain specific stereotypes. In this paper we compare advantages and drawbacks of using stereotypes by an example stereotype: the Function <b>Block</b> <b>Adapter</b> (FBA). An FBA allows the interoperability between the UML and function blocks of the IEC 61131 - 3. 1...|$|R
50|$|For example, many modem, network, and TV cards {{accept this}} configuration. Due to their thinness, most Type II {{interface}} cards feature miniature interface connectors {{on the card}} connecting to a dongle, a short cable that adapts from the card's miniature connector to an external full-size connector. Some cards instead have a lump on the end with the connectors. This is more robust and convenient than a separate <b>adapter</b> but can <b>block</b> the other slot where slots are present in a pair. Some Type II cards, most notably network interface and modem cards, have a retractable jack, which can be pushed into the card and will pop out when needed, allowing insertion of a cable from above. When use of the card is no longer needed, the jack can be pushed back into the card and locked in place, protecting it from damage. Most network cards have their jack on one side, while most modems have their jack on the other side, allowing the use of {{both at the same}} time as they do not interfere with each other. Wireless Type II cards often had a plastic shroud that jutted out from the end of the card to house the antenna.|$|R
40|$|Chromosomal {{alterations}} {{are frequent}} causes of cancer. Until now, SYK is reported {{in two different}} chromosomal translocation events generating the ITK-SYK-fusion protein in a subset of peripheral T cell lymphomas and the TEL-SYK fusion protein {{in a case of}} myelodysplastic syndrome. T lymphocyte-expressed ITK is {{the only member of the}} TEC-family of tyrosine kinases reported as a fusion partner in transforming translocations and here we have studied this fusion. The comparison of ITK-SYK with SYK revealed that related tyrosines of ITK-SYK are phosphorylated at the linker- region and at the activation-loop and that the fusion protein localizes to the plasma membrane and potently phosphorylates the adapter proteins SLP- 76 and BLNK. Moreover, membrane localization and phosphorylation of <b>adapter</b> substrates are <b>blocked</b> with PI 3 K inhibitors. SYK, on the other hand, showed phosphorylation at the linker-region, but not at the activation-loop tyrosines and failed to phosphorylate SLP- 76 or BLNK under the same conditions. Since BTK is the predominantly expressed TEC family kinase in B lymphocytes, we engineered the corresponding fusion kinase, BTK-SYK. We then investigated the role of the N-terminal region in the regulation of fusion kinases ITK-SYK, BTK-SYK and TEL-SYK. Unlike ITK-SYK, BTK-SYK showed more nuclear and cytoplasmic localization and PI 3 K inhibitors, unexpectedly, did not block its capacity to phosphorylate the adapter substrate SLP- 76. Interestingly, non-membrane-tethering PH-TH domain-mutants ITK-SYK-R 29 C and BTK-SYK-R 28 C potently phosphorylated SLP- 76. On the same ground, a TEL-SYK mutant, lacking the dimerization domain, was equally phosphorylated as the full-length fusion protein, but induced highly compromised CD 69 upregulation compared with TEL-SYK or ITK- SYK. Further investigations revealed that ITK-SYK-mediated activation of T cells was dependent on the adapter function of SYK-family kinases (SYK or ZAP- 70), but independent of their kinase activity. Moreover, SLP- 76 adapter function was not only indispensible for ITK-SYK-mediated CD 69 upregulation and IL- 2 secretion, but also for the phosphorylation of activation-loop tyrosines of SYK. Mutagenesis revealed a hierarchical phosphorylation pattern in the activation of ITK-SYK. In spite of loss of phosphorylation of the tyrosines, known to act as targets in SYK, the fusion protein potently retained phosphorylation capacity for substrate adapter proteins. Phosphorylation-independent constitutive activation was further confirmed by ITK- SYK expression in SYF cells (cells lacking SRC-family kinases), since there was no detectable phosphorylation on target tyrosines, yet the substrate SLP- 76 was potently phosphorylated. Altogether, our studies indicate that lack of auto-inhibition renders fusion kinase constitutive activation suggesting that many of the tyrosine phosphorylations known to be critical in the activation of SYK are dispensable for ITK- SYK activation...|$|R
40|$|This release {{has several}} improvements, {{addition}} of new features and bug fixes: 	Improvements in receiver design: Internal block communication has been redesigned {{to accommodate the}} addition of new signals, and now upstream and downstream communication within blocks is implemented through the GNU Radio block’s asynchronous message passing system, leading to a more scalable, more robust and cleaner design. 	Improvements in receiver design: Correlators have been rewritten {{to take full advantage}} of VOLK and VOLK_GNSSSDR, and they are of general use for any tracking block. Their API now admit an arbitrary number of correlators, spaced in an arbitrary manner, in 16 ic and 32 fc versions. 	Improvements in receiver design: <b>Block</b> <b>adapters</b> are now all managed by smart pointers, ensuring better memory management. 	Improvements in processing speed: The VOLK_GNSSSDR library has been rewritten, following current VOLK standards and adding a number of new kernels. This approach addresses both efficiency and portability. Now the library provides the key kernels for GNSS signal processing in 16 ic and 32 fc versions, including SSE 2, SSE 3, SSE 4. 1, AVX, AV 2 and NEON implementations. Please execute volk_gnsssdr_profile’'' andvolk_profile’'’ to use the fastest implementation for your host machine. 	New source block: Two_Bit_Packed_File_Signal_Source. This block takes 2 bit samples that have been packed into bytes or shorts as input and generates a byte for each sample. 	Fixes in SUPL assistance (supl. nokia. com removed). 	Improvements in acquisition: Added a non CFAR PCPS acquisition algorithm based on the estimation of the post correlation noise floor. If enabled as an option in the acquisition configuration, it allows setting more stable thresholds in the presence of non-gaussian front-end noise (which is the usual behavior of front-ends.) 	Fixes in acquisition: Fixed mismatch between the config files and the acquisition code in the specification of the IF. Fixed a bug in the length of the FFT of local codes. 	Improvements in tracking sensitivity: Added configuration option to customize the extension of the GPS L 1 CA correlation length after bit synchronization (options are: [1, 2, 4, 5, 10, 20] ms). Only available in the GPS_L 1 _CA_DLL_PLL_C_Aid_Tracking implementation. 	New tracking block introduced: GPS_L 1 _CA_DLL_PLL_C_Aid_Tracking is a GPS L 1 C/A carrier PLL and code DLL with optional carrier-aid feedback. It is available in both 32 bits gr_complex input samples and in 16 bits short int complex samples. The gr_complex version has also the capability to extend the coherent correlation period from 1 ms to 20 ms using telemetry symbol synchronization. 	Increased resolution in CN 0 estimator internal variables. 	Fixed a bug in computation of GPS L 1 C/A carrier phase observable. 	Fixed a bug in the internal state machine that was blocking the receiver after a few hours of usage. Now the receiver can work continually (tested for more than one week, no known limit). 	New tracking block introduced: GPS_L 1 _CA_DLL_PLL_Tracking_GPU is a GPS L 1 C/A carrier PLL and code DLL that uses the CUDA-compatible GPU to compute carrier wipe off and correlation operations, alleviating the CPU load. 	Obsolete/buggy blocks removed: GPS_L 1 _CA_DLL_FLL_PLL_Tracking, GPS_L 1 _CA_DLL_PLL_Optim_Tracking. 	Added a RTCM printer and TCP server in PVT blocks (still experimental). The receiver is now able to stream data in real time, serving RTCM 3. 2 messages to multiple clients. For instance, it can act as a Ntrip Source feeding a Ntrip Server, or to be used as data input in RTKLIB, obtaining Precise Point Positioning fixes in real-time. The TCP port, Station ID, and rate of MT 1019 /MT 1045 and MSM can be configured. GPS_L 1 _CA_PVT serves MT 1019 (GPS Ephemeris) and MSM 7 (MT 1077, full GPS pseudoranges, phase ranges, phase range rates and CNR - high resolution) messages, while GALILEO_E 1 _PVT serves MT 1045 (Galileo ephemeris) and MSM 7 (MT 1097, full Galileo pseudoranges, phase ranges, phase range rates and CNR - high resolution). 	Added a GeoJSON printer. Basic (least-squares) position fixes can be now also stored in this format, in addition to KML. 	Obsolete block removed: output filter. 	QA code migrated to the new asynchronous message passing system. 	Improvements in documentation: update of README. md file, addition of documentation for the VOLK_GNSSSDR library, updated links to new ICDs. 	Improvements in documentation: Satellite identification updated to current constellation status. 	Updated and cleaner console output. Now Galileo satellites have the ‘E’ identifier in their PRN number. 	Several improvements in CMake scripts allow to build GNSS-SDR in Linux Debian (Jessie, Stretch and Sid), Ubuntu (from 12. 04 to 16. 04), including amd 64, i 386, armhf and arm 64 architectures, and possibly in other GNU/Linux distributions, as well as in Mac OS X 10. 9 to 10. 11. It also works well with CMake 3. 5 (some problems solved with VOLK_GNSSSDR as a sub-project). 	The software can link either against OpenSSL or against GnuTLS with openssl extensions, whatever it is available. This allows buildings in distributions such as Fedora or ArchLinux, while being compatible with binary distribution through Debian packages. 	Fixed a number of defects detected by Coverity Scan. 	Some fixes required by Debian licensing and packaging system. 	Added a CGRAN ([URL] manifest 	Lots of code cleaning and fixes of typos and small bugs...|$|R

