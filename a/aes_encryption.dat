362|37|Public
5|$|BitLocker {{is a full}} disk {{encryption}} feature {{included with}} Windows Vista and later. It is designed to protect data by providing encryption for entire volumes. By default it uses the <b>AES</b> <b>encryption</b> algorithm in cipher block chaining (CBC) or XTS mode with a 128-bit or 256-bit key. CBC is not used over the whole disk; it is applied to each individual sector.|$|E
5|$|According to Microsoft sources, BitLocker {{does not}} contain an {{intentionally}} built-in backdoor; without a backdoor {{there is no way}} for law enforcement to have a guaranteed passage to the data on the user's drives that is provided by Microsoft. In 2006 the UK Home Office expressed concern over the lack of a backdoor and tried entering into talks with Microsoft to get one introduced, although Microsoft developer Niels Ferguson and other Microsoft spokesmen state that they will not grant the wish to have one added. Microsoft engineers have said that FBI agents also put pressure on them in numerous meetings in order to add a backdoor, although no formal, written request was ever made; Microsoft engineers eventually suggested to the FBI that agents should look for the hard-copy of the key that the BitLocker program suggests its users to make. Although the <b>AES</b> <b>encryption</b> algorithm used in BitLocker is in the public domain, its implementation in BitLocker, as well as other components of the software, are proprietary; however, the code is available for scrutiny by Microsoft partners and enterprises, subject to a non-disclosure agreement.|$|E
25|$|In addition, BES {{provides}} network security, in {{the form}} of Triple DES or, more recently, <b>AES</b> <b>encryption</b> of all data (both email and MDS traffic) that travels between the BlackBerry phone and a BlackBerry Enterprise Server.|$|E
50|$|Authenticated <b>Encryption</b> (<b>AE)</b> or Authenticated <b>Encryption</b> with Associated Data (AEAD) {{is a form}} of {{encryption}} which simultaneously provides confidentiality, integrity, {{and authenticity}} assurances on the data. These attributes are provided under a single, easy to use programming interface.|$|R
50|$|Message {{authentication}} {{is typically}} achieved by using message authentication codes (MACs), authenticated <b>encryption</b> (<b>AE)</b> or digital signatures.|$|R
40|$|Abstract. We {{describe}} a systematic framework {{for using a}} stream cipher supporting an initialisation vector (IV) to perform various tasks of authentication and authenticated encryption. These include message authentication code (MAC), authenticated <b>encryption</b> (<b>AE),</b> authenticated <b>encryption</b> with associated data (AEAD) and deterministic authenticated encryption (DAE) with associated data. Several schemes are presented and rigourously analysed. A major component of the constructions is a keyed hash function having provably low collision and differential probabilities. Methods are described to efficiently extend such hash functions to take double inputs and more generally multiple inputs. In particular, double-input hash functions are required {{for the construction of}} AEAD schemes. An important practical aspect of our work is that a designer can combine off-the-shelf stream ciphers with off-the-shelf hash functions to obtain secure primitives for MAC, AE, AEAD and DAE(AD) ...|$|R
25|$|PDFs may be {{encrypted}} so that {{a password}} is needed to view or edit the contents. PDF 2.0 defines 256-bit <b>AES</b> <b>encryption</b> as standard for PDF 2.0 files. The PDF Reference also defines ways that third parties can define their own encryption systems for PDF.|$|E
25|$|FieldShield is a CoSort {{spin-off}} {{designed to}} protect data privacy. The software protects personally identifiable information and other private data at the field or record level within database tables, files and other sources subject to data spill. Privacy functions include <b>AES</b> <b>encryption,</b> data masking, and pseudonymization. Job details can be audited from a log file in XML format.|$|E
25|$|The 256-bit AES cipher. Encryption can be enabled {{for both}} files and the 7z {{hierarchy}}. When the hierarchy is encrypted, users {{are required to}} supply a password to see the filenames contained within the archive. WinZip-developed Zip file <b>AES</b> <b>encryption</b> standard is also available in 7-Zip to encrypt ZIP archives with AES 256-bit, {{but it does not}} offer filename encryption as in 7z archives.|$|E
5000|$|The {{cryptographic}} community {{observed that}} compositing (combining) a confidentiality mode with an authenticity mode could be difficult and error prone. They therefore began to supply modes which combined confidentiality and data integrity {{into a single}} cryptographic primitive (an encryption algorithm). These combined modes {{are referred to as}} authenticated <b>encryption,</b> <b>AE</b> or [...] "authenc". Examples of AE modes are CCM (SP800-38C), GCM (SP800-38D), CWC, EAX, IAPM, and OCB.|$|R
40|$|Abstract. We {{revisit the}} problem of {{constructing}} a protocol for performing authenticated encryption with associated data (AEAD). A technique is described which combines a collision resistant hash function with a protocol for authenticated <b>encryption</b> (<b>AE).</b> The technique is both simple and generic and does not require any additional key material beyond that of the AE protocol. Concrete instantiations are shown where a 256 -bit hash function is combined with some known single-pass AE protocols employing either 128 -bit or 256 -bit block ciphers. This results in possible efficiency improvement in the processing of the header...|$|R
40|$|Authenticated <b>Encryption</b> (<b>AE)</b> is the {{cryptographic}} {{process of}} providing simultaneous confidentiality and integrity protection to messages. AE is potentially {{more efficient than}} applying a two-step process of providing confidentiality for a message by encrypting the message and in a separate pass, providing integrity protection by generating a Message Authentication Code (MAC) tag. This paper presents results on the analysis of three AE stream ciphers submitted to the recently completed eSTREAM competition. We classify the ciphers based on the methods the ciphers use to provide authenticated encryption and discuss possible methods for mounting attacks on these ciphers...|$|R
25|$|The {{electronic}} device performing the computations is synced with a clock that is running at frequencies {{on the order}} of mega-hertz (MHz) to giga-hertz (GHz). However, due to hardware pipelining, and complexity of some instructions, some operations take multiple clock cycles to complete. Therefore, it is not always necessary to sample the signal at such a high clock rate. It is often possible to get information on all or most of the operations while sampling {{on the order of}} kilo-hertz (kHz). Different devices leak information at different frequencies. For example, Intel’s Atom processor will leak keys during RSA and <b>AES</b> <b>encryption</b> at frequencies between 50MHz and 85MHz. Android version 4.4’s Bouncy Castle library implementation of ECDSA is vulnerable to key extraction side channel attacks around the 50kHz range.|$|E
2500|$|The {{encryption}} of FASTA files {{has been}} mostly addressed {{with a specific}} encryption tool: Cryfa [...] Cryfa uses <b>AES</b> <b>encryption</b> and enables to compact data besides encryption. It can also address FASTQ files.|$|E
2500|$|The {{encryption}} of FASTQ reads {{is usually}} addressed {{with a specific}} encryption tool: Cryfa (https://github.com/pratas/cryfa) [...] Cryfa uses <b>AES</b> <b>encryption</b> and enables to compact data besides encryption. It can also address FASTA files. Cryfa shuffles the data before encryption to protect against low data complexity attacks [...]|$|E
40|$|International audienceReconfiguration of FPGAs is {{becoming}} increasingly popular particularly in networking applications. In order to protect FPGA designs against attacks, secure recon guration must be performed. This paper presents e cient ASIC implementations of Authenticated <b>Encryption</b> (<b>AE)</b> algorithms, AES-CCM and AES-GCM, which {{are used in the}} static part of the FPGA in order to secure the reconfiguration process. Our focus on state of the art algorithms for efficient implementations leads to propose compact architectures to be used efficiently for FPGA bitstream security. Presented ASIC architectures were evaluated by using 90 and 130 nm technologies. Our comparison to previous work reveals that our architectures are more area-e cient...|$|R
40|$|The {{security}} of the Cipher-State (CS) mode was proposed to NIST as an authenticated <b>encryption</b> (<b>AE)</b> scheme in 2004. The usual SPRP blockcipher security for AE schemes may not guarantee its security. By constructing a special SPRP, one can easily make a key-recovery attack with a single block query. The distinguishing attacks and the forgery attacks can also be made with simpler SPRP constructions. The security flaw relies in the method for generating initial whitening values. To fix this shortcoming, we propose a modified version CS* which incorporates a new method for generating initial whitening values, while keeping the main structure of CS unchanged. As we show, CS* is secure when its underlying blockcipher is an SPRP and halves of which are unpredictable. © Springer International Publishing 2013. The {{security of}} the Cipher-State (CS) mode was proposed to NIST as an authenticated <b>encryption</b> (<b>AE)</b> scheme in 2004. The usual SPRP blockcipher security for AE schemes may not guarantee its security. By constructing a special SPRP, one can easily make a key-recovery attack with a single block query. The distinguishing attacks and the forgery attacks can also be made with simpler SPRP constructions. The security flaw relies in the method for generating initial whitening values. To fix this shortcoming, we propose a modified version CS* which incorporates a new method for generating initial whitening values, while keeping the main structure of CS unchanged. As we show, CS* is secure when its underlying blockcipher is an SPRP and halves of which are unpredictable. © Springer International Publishing 2013...|$|R
40|$|Abstract. A new {{authenticated}} <b>encryption</b> (<b>AE)</b> mode for blockcipher is presented. The {{proposed scheme}} has attractive features for fast and compact operation. It requires rate- 1 blockcipher call, {{and uses the}} encryption function of a blockcipher for both encryption and decryption. Moreover, the scheme enables one-pass, parallel operation under two-block partition. The proposed scheme thus attains similar characteristics as the seminal OCB mode, without using the inverse blockcipher. The key idea of our proposal is a novel usage of two-round Feistel permutation, where the round functions are derived from the theory of tweakable blockcipher. We also describe an instantiation of our idea using a non-invertible primitive, such as a keyed hash function...|$|R
5000|$|The Kerberos SSP {{has been}} updated to support <b>AES</b> <b>encryption.</b> The SChannel SSP also has {{stronger}} <b>AES</b> <b>encryption</b> and ECC support.|$|E
50|$|Workspot {{released}} <b>AES</b> <b>encryption</b> patches for VNC.|$|E
50|$|Optional {{features}} include <b>AES</b> <b>encryption</b> and zlib-based transparent decompression.|$|E
40|$|International audienceThis paper {{describes}} {{low cost}} solution for bitstream security by adding authentication and encryption to the reconfiguration process using Authenticated <b>Encryption</b> (<b>AE).</b> Compact ASIC architecture for AE is presented: Counter with Cipher Block Chaining-Message Authentication Code (CCM). Proposed architecture utilizes Advanced Encryption Standard (AES) in Counter mode (CTR) for encryption. For authentication, AES in Cipher Block Chaining (CBC) is used. Therefore, one architecture of AES for both encryption and authentication decreases the consumed area. In addition, using AES in 32 -bit enhances the compact architecture. Our design was evaluated {{by using a}} 90 nm CMOS standard cell library. The proposed architecture of CCM requires 0. 045 mm 2. In term of speed, CCM works with 407 Mbps. Our proposed architecture can be used efficiently for secure configuration of FPGAs...|$|R
40|$|ABSTRACT: Input Output Chaining (IOC) is an {{authenticated}} <b>encryption</b> (<b>AE)</b> {{mode that}} can be used with any block cipher. IOC main interest is that each message block is ciphered just once, as when only implementing confidentiality, while the added complexity by the accompanying integrity service is negligible. The core integrity concept in IOC is based on a novel, minimal and appealing chaining mechanism already presented by the first published IOC mode proposal [6], which so far has resisted public scrutiny. This paper upgrades some details of the former IOC specification and its security demonstration concluding that whatever resources could be spent to forge IOC integrity mechanism, assuming an ideal block cipher, the success probability of such attack will not be higher than 2 -(n- 1. 25), where n is the cipher block size...|$|R
40|$|Abstract. This paper {{proposes a}} new scheme for {{authenticated}} <b>encryption</b> (<b>AE)</b> which is typically realized as a blockcipher mode of operation. The proposed scheme has attractive features for fast and compact operation. When it is {{realized with a}} blockcipher, it requires one blockcipher call to process one input block (i. e. rate- 1), and uses the encryption function of the blockcipher for both encryption and decryption. Moreover, the scheme enables one-pass, parallel operation under two-block partition. The proposed scheme thus attains similar characteristics as the seminal OCB mode, without using the inverse blockcipher. The key idea of our proposal is a novel usage of two-round Feistel permutation, where the round functions are derived from the theory of tweakable blockcipher. We also provide basic software results, and describe some ideas on using a non-invertible primitive, such as a keyed hash function...|$|R
5000|$|Advanced Encryption Standard (<b>AES)</b> <b>Encryption</b> for Kerberos 5 (RFC 3962).|$|E
5000|$|Pidgin (software), has a plugin {{that allows}} for <b>AES</b> <b>Encryption</b> ...|$|E
5000|$|Support for 128- and 256-bit <b>AES</b> <b>encryption</b> for the Kerberos {{authentication}} protocol.|$|E
40|$|Abstract. This paper {{analyses}} the cryptography {{used in the}} Open Smart Grid Protocol (OSGP). The authenticated <b>encryption</b> (<b>AE)</b> scheme deployed by OSGP is a non-standard {{composition of}} RC 4 and a home-brewed MAC, the “OMA digest”. We present several practical key-recovery attacks against the OMA digest. The first and basic variant can achieve this with a mere 13 queries to an OMA digest oracle and negligible time complexity. A more sophisticated version breaks the OMA digest with only 4 queries and a time complexity of about 225 simple operations. A different approach only requires one arbitrary valid plaintext-tag pair, and recovers the key in an average of 144 message verification queries, or one ciphertext-tag pair and 168 ciphertext verification queries. Since the encryption key {{is derived from the}} key used by the OMA digest, our attacks break both confidentiality and authenticity of OSGP. ...|$|R
40|$|Authenticated <b>{{encryption}}</b> (<b>AE)</b> schemes are symmetric-key encryption schemes ensuring strong no-tions {{of confidentiality}} and integrity. Although various AE schemes are known, there remains significant {{interest in developing}} schemes that are more efficient, meet even stronger security notions (e. g., misuse-resistance), or satisfy certain non-cryptographic properties (e. g., being patent-free). We present an automated approach for analyzing and synthesizing blockcipher-based AE schemes, significantly extending prior work by Malozemoff et al. (CSF 2014) who synthesize encryption schemes satisfying confidentiality only. Our main insight is to restrict attention to a certain class of schemes that is expressive enough to capture several known constructions yet also admits automated reasoning about security. We use our approach to generate thousands of AE schemes with provable security guarantees, both known (e. g., variants of OCB and CCM) and new. Implementing two of these new schemes, we find their performance competitive with state-of-the-art AE schemes. ...|$|R
40|$|Abstract. Standard form of {{authenticated}} <b>encryption</b> (<b>AE)</b> {{requires the}} ciphertext to be expanded by the nonce and the authentication tag. These expansions can be problematic when messages are relatively short and communication cost is high. This paper studies {{a form of}} AE scheme whose ciphertext is only expanded by nonce, {{with the help of}} stateful receiver which also enables detection of replays. While there is a scheme having this feature, called AERO, proposed by McGrew and Foley, there is no formal treatment based on the provable security framework. We propose a provable security framework for such AE schemes, which we call MiniAE, and show several secure schemes using standard symmetric crypto primitives. Most notably, one of our schemes has a similar structure as OCB mode of operation and uses only one blockcipher call to process one input block, thus the computation cost is comparable to the nonce-based encryption-only schemes...|$|R
5000|$|Improved {{performance}} for transcendental mathematics, <b>AES</b> <b>encryption</b> (AES instruction set), and SHA-1 hashing ...|$|E
50|$|Mandatory password-protection and {{hardware-based}} 256-bit <b>AES</b> <b>encryption</b> for all files {{stored on}} the drive.|$|E
5000|$|Rabbit 5000 — 100 MHz, 802.11a/b/g Wi-Fi {{baseband}} MAC, 10/100 Ethernet MAC, <b>AES</b> <b>encryption</b> ...|$|E
40|$|AES {{has been}} the {{prominent}} block cipher since its introduction as the standard. It {{has been the}} cipher used in almost all new applications that require solid, unbreakable security with reasonable resource usage. Several versions of AES have been implemented in both hardware and software platforms {{with all kinds of}} design targets varying from high-performance to lightweight. With the widespread Internet, authenticated <b>encryption</b> (<b>AE)</b> has gained an unprecedented popularity, making AES the logical choice for AE implementations. While there already exists standardized modes that allow AES to be used for AE, more recently, special AE schemes that utilize AES in its native form (or with minimal modifications) have emerged. While these modes claim better performance and resource usage, very few implementations exist to support these claims, yet. In our work, we combine AES {{with one of the most}} recent AE ciphers, namely AEGIS, in an effort to analyse the combined performance of the two ciphers...|$|R
40|$|This paper {{presents}} {{a model for}} the generation of a MAC tag using a stream cipher. The input message is used indirectly to control segments of the keystream that form the MAC tag. Several recent proposals can be considered as instances of this general model, as they all perform message accumulation in this way. However, they use slightly different processes in the message preparation and finalisation phases. We examine the security of this model for different options and against different types of attack, and conclude that the indirect injection model can be used to generate MAC tags securely for certain combinations of options. Careful consideration is required at the design stage to avoid combinations of options that result in susceptibility to forgery attacks. Additionally, some implementations may be vulnerable to side-channel attacks if used in Authenticated <b>Encryption</b> (<b>AE)</b> algorithms. We give design recommendations to provide resistance to these attacks for proposals following this model...|$|R
40|$|Authenticated <b>encryption</b> (<b>AE)</b> is a {{symmetric}} key cryptographic scheme {{that aims to}} provide both confidentiality and data integrity. There are many AE algorithms in existence today. However, they are often far from ideal in terms of efficiency and ease of use. For this reason, there is ongoing effort to develop new AE algorithms that are secure, efficient, and easy to use. The sponge construction {{is a relatively new}} cryptographic primitive that has gained popularity since the sponge-based K ECCAK algorithm won the SHA- 3 hashing competition. The duplex construction, which is closely related to the sponge, pro- vides promising potential for secure and efficient authenticated encryption. In this paper we introduce a novel authenticated encryption algorithm based on the duplex construction that is targeted for hardware implementation. We provide explicit customization guidelines for users who desire unique authenticated encryption solutions within our security margins. Our substitution step uses 16 × 16 AES-like S-boxes which are novel because they are the largest bijective S-boxes to be used by an encryption scheme in the literature and are still efficiently implementable in both hardware and software...|$|R
