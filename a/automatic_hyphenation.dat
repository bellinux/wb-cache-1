11|1|Public
2500|$|One more {{approach}} is to [...] "pack" [...] the trie. Liang describes a space-efficient implementation of a sparse packed trie applied to <b>automatic</b> <b>hyphenation,</b> in which the descendants of each node may be interleaved in memory.|$|E
5000|$|Soft hyphen or nonbreaking hyphen (...) is {{a hidden}} {{separator}} for hyphenation {{in the places}} specified by the user, regardless of the <b>automatic</b> <b>hyphenation.</b>|$|E
5000|$|One more {{approach}} is to [...] "pack" [...] the trie. Liang describes a space-efficient implementation of a sparse packed trie applied to <b>automatic</b> <b>hyphenation,</b> in which the descendants of each node may be interleaved in memory.|$|E
5000|$|Seeber {{was also}} the {{inventor}} of the [...] "Wordwriter" [...] an IBM Selectric typewriter with a memory capable of storing 42 eighteen-character words and phrases, selected by the operator. Stored words were selected by pressing a foot pedal {{at the same time as}} striking the letter to which the word is keyed. The machine featured optional <b>automatic</b> capitalization and <b>hyphenation.</b>|$|R
5000|$|IBM {{created and}} {{inspired}} {{a family of}} typesetting languages with names that were derivatives of the word [...] "SCRIPT". Later versions of SCRIPT included advanced features, such as automatic generation of a table of contents and index, multicolumn page layout, footnotes, boxes, <b>automatic</b> <b>hyphenation</b> and spelling verification.|$|E
50|$|FullWrite also {{included}} a number of advanced layout features, such as user-adjustable kerning and <b>automatic</b> <b>hyphenation.</b> Text could be marked for inclusion in footnotes/endnotes, the table of contents or an index, {{all of which were}} automatically maintained. FullWrite also featured change bars, allowing users to track changes to the documents. Most of these features have since appeared on other high-end products, but at the time FullWrite was considerably more advanced than any competing products on the Mac, matching or beating the feature set of the high-end DOS products.|$|E
5000|$|... "A {{basic system}} — {{consisting}} of a display with a typewriter-like keyboard and a logic unit, a printer and a device to record and read diskettes capable of storing more than 100 pages of average text — cost $7,895 and leased for $275 a month." [...] The basic word-processing software was Textpack E, with simple mail merge; Textpack 2 added support for double-sided disks, networking, spellchecking, and print spooling; Textpack 4 added <b>automatic</b> <b>hyphenation,</b> columns, and more sophisticated merging; and Textpack 6 added automatic footnoting and outlining. Other options included multilingual dictionaries, graphics, and reports.|$|E
40|$|IAG Proceedings Main {{settings}} at {{a glance}} Printer: 600 dpi laser printer for text and line figures; 1200 dpi laser printer for halftones Print area: 156 x 224 mm, 2 columns each at 74 mm with 8 mm space between the columns Justified text, <b>automatic</b> <b>hyphenation</b> Font: Times for text; Helvetica for headings Type size: 10 pt for body text; line spacing 6 mm (= 18 pt...|$|E
40|$|Left- and {{right-justify}} your columns. Use {{tables and}} figures to adjust column length. On {{the last page}} of your paper, adjust the lengths of the columns {{so that they are}} equal. Use <b>automatic</b> <b>hyphenation</b> and check spelling. Digitize or paste down figures. Abstract—EPE-PEMC 2006 CD ROM proceedings will be entitled to be published in the IEEE Xplore and Engineering Index (Ei) Compendex databases. Please use official IEEE PDF eXpress software to attain IEEE Xplore-compatible PDF(s). These instructions give you basic guidelines for preparing camera-ready papers for the conference proceedings. HELPFUL HINT...|$|E
40|$|Document {{processing}} and typesetting systems frequently offer spell checking, <b>automatic</b> <b>hyphenation</b> and other functionality designed {{to assist the}} user in the writing process. There is also {{a wide range of}} tools designed to assist writers of scientific publications in creating bibliographies. Such software is however often designed with an English-speaking audience in mind. The thesis examines how the existing model of a bibliography processor can be adapted to bibliographies in other languages and bibliographies using multiple languages concurrently. This is discussed both with the bibliographic, linguistic and typographic correctness of the formatted results in mind. The thesis first gives an introduction to general bibliographic techniques and special linguistic and typographic considerations in multilingual bibliographies, then an overview of existing work and of general issues in multilingual software, in particular character sets and the use of Unicode. It then proceeds to discuss a model for representation of multilingual bibliographies in XML and techniques for transforming this information to presentation formats like TeX/LateX and DocBook XML, and, finally presents an actual implementation of a multilingual bibliography processor...|$|E
40|$|The Handbook of Natural Language Processing is {{a revised}} edition {{of an earlier}} {{handbook}} (Dale, Moisl, and Somers 2000). This second edition was prepared by Nitin Indurkhya, {{a researcher at the}} University of New South Wales, and the late text processing pioneer Fred J. Damerau of the IBM T. J. Watson Research Center (d. 27 January 2009), whose 1964 paper introduced a version of what is now known as the Damerau-Levenshtein distance, a metric of the similarity between two strings and a dynamic programming algorithm to compute it efficiently (Damerau 1964). Damerau also invented <b>automatic</b> <b>hyphenation</b> (Damerau 1970) and worked on early question-answering systems. Indurkhya, who is also affiliated with a consulting company, Data-Miner Pty Ltd., maintains a companion wiki for the book. 1 The book has three parts, totaling 26 chapters. The first part, Classical Approaches, essentially covers techniques that were known prior to the statistical revolution, that is, before natural language processing people in the mainstream embraced techniques that speech engineers were already using successfully for awhile. The second part, Empirical and Statistical Approaches, covers state-of-the-art data-driven models. ...|$|E
40|$|In {{contrast}} to English, <b>automatic</b> <b>hyphenation</b> by computer of Afrikaans words {{is a problem}} that still needs to be addressed, since errors are still often encountered in printed text. An initial step in this task is the ability to automatically syllabify words. Since new words are created continuously by joining words, it is necessary to develop an “intelligent” technique for syllabiﬁcation. As a ﬁrst phase of the research, we consider only the orthographic information of words, and disregard both syntactic and morphological information. This approach allows us to use machine-learning techniques such as artiﬁcial neural networks and decision trees that are known for their pattern recognition abilities. Both these techniques are trained with isolated patterns consisting of input patterns and corresponding outputs (or targets) that indicate whether the input pattern should be split at a certain position, or not. In the process of compiling a list of syllabiﬁed words from which to generate training data for the  syllabiﬁcation problem, irregular patterns were identiﬁed. The same letter patterns are split differently in different words and complete words that are spelled identically are split differently due to meaning. We also identiﬁed irregularities in and between  the different dictionaries that we used. We examined the inﬂuence range of letters that are involved in irregularities. For example, for their in agter-ente and vaste-rente we have to consider three letters to the left of r to be certain where the hyphen should be inserted. The inﬂuence range of the k in verstek-waarde and kleinste-kwadrate is four to the left and three to the right. In an analysis of letter patterns in Afrikaans words we found that the letter e has the highest frequency overall (16, 2 % of all letters in the word list). The frequency of words starting with s is the highest, while the frequency of words ending with e is the highest. It {{is important to note that}} the frequency of words ending with s is even higher than for words starting with s. The two and three letter patterns that occur most are er (10 % of all two letter patterns) and ing (4 % of all three letter patterns). In an analysis of syllables in Afrikaans words, we found that (as for complete words) syllables most often start with the letter s and end with e, while the frequency of syllables ending with s is almost as high as the frequency of syllables starting with s. This indicates that problems with hyphenation can be expected around the letter s. The two and three letter syllables that occur most often are -ge- and -ver-, respectively. In an attempt to decide on the window length to use to generate training data for machine-learning techniques we also analysed the length of syllables. The results show that two and three letter syllables occur most often, but that four letter syllables have the most unique instances. We also analysed a spectrum of window conﬁgurations and found that the ideal conﬁguration will have to be determined empirically. One major problem we identiﬁed in this study is that irregular syllabiﬁcation often occurs where letter patterns include the letter s. The reasons being (i) the use of the combining s when joining words, (ii) almost equal frequencies of syllables starting and ending with s and (iii) vague hyphe- nation rules for letter combinations containing s. To effectively address automatic syllabiﬁcation in Afrikaans, it is necessary to develop more sophisticated methods to handle vagueness around the letter s.   Vir Afrikaans is outomatiese rekenaarmatige woordafbreking ’n probleemwat aandag vereis, aangesien foute steeds dikwels in gedrukte teks voorkom. As eerste stap in hierdie taak is dit noodsaaklik om woorde outomaties in lettergrepe te verdeel. Aangesien nuwe woorde voortdurend geskep word deur woorde aanmekaar te skryf, werk bestaande tegnieke wat vir Engels ontwikkel is, nie goed in Afrikaans nie. Dit is nodig om ’n “intelligente” tegniek vir lettergreepverdeling te ontwikkel. As eerste benadering beskou ons slegs die ortograﬁese inligting van woorde sonder om sintaksis of morfologie in ag te neem. Dit laat ons toe om masjienleertegnieke soos kunsmatige neurale netwerke en beslissingsbome wat bekend is vir hul patroonherkenningsvermoë vir die taak te oorweeg. Hierdie tegnieke word met geïsoleerde afrigtingspare bestaande uit invoerpatrone en ooreenstemmende uitvoere (of teikens) afgerig. In hierdie artikel verskaf ons die motivering vir die studie en bespreek die proses wat gevolg is om data vir die afrigting van masjienleertegnieke te genereer. Ons bespreek ook probleemareas soos onreëlmatige woordafbreking en verskaf ’n ontleding van letterkombinasies (of letterpatrone) in woorde met en sonder lettergreepverdeling...|$|E

