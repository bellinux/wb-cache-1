312|697|Public
25|$|The Archival Cytometry Standard (ACS) {{is being}} {{developed}} to bundle data with different components describing cytometry experiments. It captures relations among data, metadata, analysis files and other components, and includes support for <b>audit</b> <b>trails,</b> versioning and digital signatures. The ACS container {{is based on the}} ZIP file format with an XML-based table of contents specifying relations among files in the container. The XML Signature W3C Recommendation has been adopted to allow for digital signatures of components within the ACS container.|$|E
25|$|The sale of Load Balancer {{left the}} company with staff and cash, but no product. Freedman had {{developed}} and marketed a 3-day UNIX security course in 1992, and had developed significant contacts within the banking, defense, and chip-making communities. These customers all had similar problems in managing large UNIX networks, specifically concerning the control and audit {{of the actions of}} the systems' administrators. The problem was that the root account used by systems administrators when reconfiguring parts of the system, was able to edit any of the <b>audit</b> <b>trails</b> created by the system. Freedman designed a new product, PowerBroker, that was similar in concept to today's sudo products, but which allowed centralized control and auditing of an entire network even down to the keystroke level, with the logs stored on a dedicated remote computer to which the system administrators typically did not have access. By vetting all access and logging through this remote machine, a secure log could be maintained. The system was ported to over 22 versions of UNIX to accommodate the newer, larger networks with hundreds or thousands of machines. Dean Huxley was responsible for most of the system-level programming on PowerBroker with Kevin Chmilar and Earle Lowe also contributing.|$|E
2500|$|These {{depend on}} the ethical {{behavior}} of people and include controls such as alerts, reminders, and education of users. Another useful form of deterrents has been <b>Audit</b> <b>Trails.</b> The system records identity, times, and circumstances of users accessing information. If system users are aware of such a record keeping system, it will discourage them from taking ethically inappropriate actions ...|$|E
30|$|An <b>audit</b> <b>trail</b> is a {{sequence}} of interleaved trails of user applications. For example, {{a sequence}} 〈 c_i:t_c_i, s_i_ 1 :t_i_ 1, c_j:t_c_j, s_j_ 1 :t_j_ 1, s_i_ 2 :t_i_ 2, d_i:t_d_id_j:t_d_j〉 is a sample <b>audit</b> <b>trail</b> from the processing of applications a_i, and a_j. In practice, SQL statements can be easily extracted from an <b>audit</b> <b>trail</b> and EXPLAIN PLAN statement {{can be used in}} the contexts of respective user schemas to transform the statements into the syntax trees of query execution plans over a set of operations of extended relational algebra. A complete information about syntax trees obtained from a database <b>audit</b> <b>trail</b> is kept in a syntax tree table.|$|R
40|$|Best {{practices}} for databases include keeping detailed <b>audit</b> <b>trail</b> {{information about the}} data. These <b>audit</b> <b>trail</b> tables vary in complexity as well as size. Generally speaking, the larger the database in tables (as well as in observations), the larger the <b>audit</b> <b>trail.</b> We have discovered that leveraging <b>audit</b> <b>trail</b> information in our automated reporting {{has been a huge}} resource saver in terms of which observations need to be reprocessed for a report. Even with minimal audit information (such as created by and modified by dates at the data table level), automation processing time can be greatly reduced by taking advantage of a new way of thinking and a few handy SAS ® functions...|$|R
30|$|For example, if a {{periodic}} pattern 〈 (T^ 2 V)∅ W, U, 1, 3, 7 〉 is valid in an <b>audit</b> <b>trail</b> A then the periodic patterns 〈 T∅ W, U, 1, 3, 7 〉 is also valid in an <b>audit</b> <b>trail</b> A.|$|R
2500|$|An {{electronic}} trial {{master file}} (eTMF) is a {{trial master file}} in electronic (digital content) format. It {{is a type of}} content management system for the pharmaceutical industry, providing a formalized means of organizing and storing documents, images, and other digital content for pharmaceutical clinical trials that may be required for compliance with government regulatory agencies. The term eTMF encompasses strategies, methods and tools used throughout the lifecycle of the clinical trial regulated content. [...] An eTMF system consists of software and hardware that facilitates the management of regulated clinical trial content. [...] Regulatory agencies have outlined the required components of eTMF systems that use electronic means to store the content of a clinical trial, requiring that they include: [...] Digital content archiving, security and access control, change controls, <b>audit</b> <b>trails,</b> and system validation.|$|E
50|$|In {{clinical}} research, server based systems call Clinical Trial Management Systems (CTMS) require <b>audit</b> <b>trails.</b> Anything regulatory or QA/QC related {{also requires}} <b>audit</b> <b>trails.</b>|$|E
5000|$|Accountability uses such system {{components}} as <b>audit</b> <b>trails</b> (records) and logs, to associate a subject with its actions. The information recorded should {{be sufficient to}} map the subject to a controlling user. <b>Audit</b> <b>trails</b> and logs are important for ...|$|E
50|$|On 4 March 2016, Election Commission of India {{announced}} that 22 assembly constituencies in West Bengal would have Voter-verified paper <b>audit</b> <b>trail</b> (VVPAT) machines attached along with EVMs. Voter-verified paper <b>audit</b> <b>trail</b> (VVPAT) machines {{were to be}} in place in more than 5,993 polling stations.|$|R
5000|$|Creation of an {{encrypted}} <b>audit</b> <b>trail</b> at {{the same}} time the electronic ballot is created in a DRE voting machine, a form of witness system. The <b>audit</b> <b>trail</b> can be accessed and compared to the electronic vote totals in the event of a dispute.|$|R
40|$|There {{is lack of}} {{awareness}} among investigators to use <b>audit</b> <b>trail</b> as a technique to document the development of research projects and to ensure credibility and continuity of research projects. Therefore {{the purpose of this}} paper is to showcase the usage of <b>audit</b> <b>trail</b> as a strategic and congruent method to reflect the rigor and credibility of conducting research for both quantitative and qualitative research. This article explains step by step guidelines using Halpern‟s modified <b>audit</b> <b>trail</b> model on two different case studies. The cases were taken from healthcare and higher education sectors. The authors hope with the provision of clear audit procedures and excerpts taken from the cases will encourage researchers to adopt <b>audit</b> <b>trail</b> as a data management strategy and evidence of research trustworthiness...|$|R
5000|$|<b>Audit</b> <b>trails</b> {{tracking}} system activity, {{so that when}} a security breach occurs, the mechanism and extent of the breach can be determined. Storing <b>audit</b> <b>trails</b> remotely, where they can only be appended to, can keep intruders from covering their tracks.|$|E
50|$|In {{addition}} to producing logs and <b>audit</b> <b>trails,</b> cloud providers {{work with their}} customers to ensure that these logs and <b>audit</b> <b>trails</b> are properly secured, maintained {{for as long as}} the customer requires, and are accessible for the purposes of forensic investigation (e.g., eDiscovery).|$|E
5000|$|The {{earliest}} preliminary IDS {{concept was}} delineated in 1980 by James Anderson at the National Security Agency {{and consisted of}} a set of tools intended to help administrators review <b>audit</b> <b>trails.</b> [...] User access logs, file access logs, and system event logs are examples of <b>audit</b> <b>trails.</b>|$|E
5000|$|Taxpayer's <b>audit</b> <b>trail</b> is {{available}} at the Revenue Authority.|$|R
5000|$|Several voter verifiable <b>audit</b> <b>trail</b> systems exist. They include: ...|$|R
5000|$|Data provenance: , , , [...] (e.g. model), [...] (<b>audit</b> <b>trail</b> of operations), , ...|$|R
5000|$|Log management: Focus on simple {{collection}} and storage of log messages and <b>audit</b> <b>trails</b> ...|$|E
5000|$|<b>Audit</b> <b>trails</b> enable IT {{managers}} or Auditors {{to recreate}} the actual transaction flow {{from the point of}} origination to its existence on an updated file. Good <b>audit</b> <b>trails</b> should be enabled to provide information on who initiated the transaction, the time of day and date of entry, the type of entry, what fields of information it contained, and what files it updated.|$|E
50|$|LSASS enforces {{the local}} {{security}} policy (checking user permissions, creating <b>audit</b> <b>trails,</b> doling out security tokens, etc.).|$|E
5000|$|... #Subtitle level 3: Creating a {{defensible}} legal hold <b>audit</b> <b>trail</b> ...|$|R
3000|$|Rule 3 (Decomposition): If a {{periodic}} pattern 〈T, U, b, p, e〉 is valid in an <b>audit</b> <b>trail</b> A with a support σ and T'[i] ⊆T[i] for all i= 1 [...]... |T| then {{a periodic}} pattern 〈T', U, b, p, e〉 is valid in an <b>audit</b> <b>trail</b> A with a support σ.|$|R
40|$|We {{present a}} {{design for a}} voting system with a modular voting {{architecture}} and an electronic <b>audit</b> <b>trail.</b> The voting system consists of am electronic ballot printer, a PC with a visual or auditory interface that prints a paper ballot and mtaintains an electronic <b>audit</b> <b>trail,</b> a ballot verification station that reads a paper ballot and either displays or “speaks ” the ballot’s selections and undervotes, and a ballot tabulation and reconciliation station that reads the ballots and tabulates the votes and reconciles them against the electronic <b>audit</b> <b>trail.</b> A prototype of this system has been built and demonstrated. 1...|$|R
50|$|In {{addition}} to using external tools for monitoring or auditing, native database audit capabilities {{are also available}} for many database platforms. The native <b>audit</b> <b>trails</b> are extracted {{on a regular basis}} and transferred to a designated security system where the database administrators do/should not have access. This ensures a certain level of segregation of duties that may provide evidence the native <b>audit</b> <b>trails</b> were not modified by authenticated administrators, and should be conducted by a security-oriented senior DBA group with read rights into production. Turning on native impacts the performance of the server. Generally, the native <b>audit</b> <b>trails</b> of databases do not provide sufficient controls to enforce separation of duties; therefore, the network and/or kernel module level host based monitoring capabilities provides a higher degree of confidence for forensics and preservation of evidence.|$|E
5000|$|By {{focusing}} on completeness {{and accuracy of}} data Bitemporal Modeling facilitates the creation of complete <b>audit</b> <b>trails</b> of data. Specifically this allows for queries which provide: ...|$|E
5000|$|Construction project {{information}} and process management (managing processes, documents, drawings, building information models, communications, workflows, <b>audit</b> <b>trails,</b> and other project information online - both mobile and web access) ...|$|E
50|$|Various {{technologies}} {{can be used}} {{to implement}} a paper <b>audit</b> <b>trail.</b>|$|R
5000|$|Compliance — {{discovering}} non-compliant {{situations and}} providing a detailed <b>audit</b> <b>trail</b> ...|$|R
50|$|Inspected {{protocol}} content can {{be stored}} in a record, called <b>Audit</b> <b>trail,</b> and could be replayed by the Audit Player tool. <b>Audit</b> <b>trail</b> {{can be used as a}} digital evidence. As the whole connection can be replayed (seen by any auditor who have access to the device) it rises some privacy problems in different countries.|$|R
5000|$|Log {{management}} (LM) comprises {{an approach}} to dealing with large volumes of computer-generated log messages (also known as audit records, <b>audit</b> <b>trails,</b> event-logs, etc.). Log Management generally covers: ...|$|E
5000|$|Intrusion Detection System (IDS) {{products}} {{are designed to}} detect network attacks in-progress and assist in post-attack forensics, while <b>audit</b> <b>trails</b> and logs serve a similar function for individual systems.|$|E
50|$|Carrying out all TNA {{activates}} {{in accordance}} with SAT principles ensures rigorous visibility in each design stage with clear <b>audit</b> <b>trails</b> from the initial Scoping Study through to the recommended solution.|$|E
30|$|For example, if the {{periodic}} patterns 〈 (T^ 2 V)∅ W, U, 1, 3, 7 〉 and 〈 (T^ 2 V)∅ W, U, 10, 3, 13 〉 are valid in an <b>audit</b> <b>trail</b> A then a periodic patterns 〈 (T^ 2 V)∅ W, U, 1, 3, 13 〉 is also valid in an <b>audit</b> <b>trail</b> A.|$|R
50|$|The {{heart of}} the {{database}} and transaction system is Integrated Recovery. “Integrated” implies the integration of all data models, the transaction file manager, the transaction scheduler, and the message queues. All activity {{in all of these}} areas is journaled (written to the <b>audit</b> <b>trail).</b> The <b>audit</b> <b>trail</b> is managed by the Exec which ensures synchronization for all users.|$|R
40|$|The use of {{workflow}} technology promises {{efficiency gains}} through the automation of manual routing, coordination and work distribution tasks. During {{the execution of}} workflows, state-changes of the workflow engine are recorded in a log file or database, the so-called <b>audit</b> <b>trail.</b> Combined with business object data, the <b>audit</b> <b>trail</b> provides exact and timely information about the operational behavior of an enterprise. In this paper we discuss the design on data warehouse applications that take advantage of workflow technology as an information source. We outline evaluation opportunities generated {{by the use of}} <b>audit</b> <b>trail</b> data and point out potential pitfalls with regard to data consistency and integrity. ...|$|R
