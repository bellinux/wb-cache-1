21|251|Public
50|$|However, in real project life, a time {{schedule}} {{needs to be}} adjusted continuously: This is when the use of specialized tools quickly brings out their advantage. These tools (see External links below) are project management tools {{in their own right}} with an emphasis on the ability to present the {{time schedule}} as time-distance diagram. Activities can be edited using project management terminology plus all drawing attributes for the activity's shape. Special features allow dependency links (with lags), complex scaling, <b>access</b> <b>conflict</b> detection, resource-dependent progress, and more. Most often, such tools provide various interfaces to other project management software, at least to import and export activity information. Complex systems (such as TimeChainage, DynaRoad, TILOS or Time Location Plus) even integrate into commonly used project management software (Primavera, Microsoft Project, Asta Powerproject).|$|E
30|$|In a {{distributed}} system, {{the consistency}} model has three core dimensions [3]: conflict definition policy, conflict handling policy {{and conflict resolution}} policy. In this context, conflict definition policy implies the different definitions proposed for data inconsistencies. Researchers {{have come up with}} different strategies of defining <b>access</b> <b>conflict</b> or inconsistency detection for different web-based applications in transactional or non-transactional context.|$|E
40|$|Part 1 : Memory: Non-Volatile, Solid State Drives, Hybrid SystemsInternational audienceNAND {{flash memory}} has gained {{widespread}} acceptance in storage systems {{because of its}} superior write/read performance, shock-resistance and low-power consumption. I/O scheduling for Solid State Drives (SSDs) has received much attention in recent years {{for its ability to}} take advantage of the rich parallelism within SSDs. However, most state-of-the-art I/O scheduling algorithms are oblivious to the increasingly significant inter-block variation introduced by the advanced technology scaling. This paper proposes a variation-aware I/O scheduler by exploiting the speed variation among blocks to minimize the <b>access</b> <b>conflict</b> latency of I/O requests. The proposed VIOS schedules I/O requests into a hierarchical-batch structured queue to preferentially exploit channel-level parallelism, followed by chip-level parallelism. Moreover, conflict write requests are allocated to faster blocks to reduce <b>access</b> <b>conflict</b> of waiting requests. Experimental results shows that VIOS reduces write latency significantly compared to state-of-the-art I/O schedulers while attaining high read efficiency...|$|E
40|$|Abstract- The {{partitioning}} {{of shared}} memory {{into a number}} of memory modules is an approach to achieve high memory bandwidth for parallel pro-cessors. Memory <b>access</b> <b>conflicts</b> can occur when several processors simultaneously request data from the same memory module. Although work has been done to improve access performance for vectors, no work has been reported to improve the access per-formance of scalars. For systems in which the pro-cessors operate in a lock-step mode, a large percen-tage of memory <b>access</b> <b>conflicts</b> can be predicted at compile-time. These conflicts can be avoided by appropriate distribution of data among the memory modules at compile-time. A long instruction word machine {{is an example of a}} system in which the functional units operate in a lock-step mode per-forming operations on data fetched in paraIle 1 from multiple memory modules. In this paper, compile-time techniques for distribution of scalars to avoid memory <b>access</b> <b>conflicts</b> are presented. Further-more, algorithms to schedule data transfers among memory modules to avoid conflicts that cannot be avoided by the distribution of values alone are developed. The techniques have been implemented as ‘part of a compiler for a reconfigurable long instruction word architecture. Results of experi-ments are presented demonstrating that a very high percentage of memory <b>access</b> <b>conflicts</b> can be avoided by scheduling a very low number of data transfers...|$|R
40|$|This paper reports our {{experiences}} gained in designing, implementing, and experimenting with technologies for improved support for cooperative {{work in our}} configuration management (CM) system. The aim of the work has been to find a set of mechanisms supporting cooperation {{in a range of}} situations, from planning and scheduling long-lasting CM activities, to resolving <b>access</b> <b>conflicts</b> between users. Although our tools are tailored for our home-grown environment, the general approach should be applicable also to other CM systems or usage domains. The emphasis of this paper is on flexible mechanisms to solve <b>access</b> <b>conflicts</b> without enforcing only one way of working...|$|R
50|$|Because of the {{interference}} {{between the different}} users, <b>access</b> <b>conflicts,</b> fading, and the change of environment in the wireless sensor networks, traditional layered approach for wired networks is not applicable to wireless networks.|$|R
40|$|In this paper, a {{systematic}} approach is proposed to develop high throughput decoder for structured (quasi-cyclic) low density parity check (LDPC) block codes. Based on {{the properties of}} quasi-cyclic LDPC codes, the two stages of belief propagation decoding algorithm could be overlapped and thus the overall decoding latency is reduced. To avoid the memory <b>access</b> <b>conflict,</b> the maximum concurrency of the two stages is explored by a novel scheduling algorithm. Consequently, the decoding throughput could be increased by almost twice assuming dual-port memory is available...|$|E
40|$|Abstract. The STL(Stereo Lithography) {{format is}} one of the data {{interface}} format is commonly used in modern manufacturing field. Using parallel-hashing structure as the auxiliary data structure, by adjusting the mapping and reference relationship between each date lists, this paper put forward the parallel topological reconstruction method based on OpenMP. By effectively improving the efficiency of processing hash function conflict and reducing the concurrent <b>access</b> <b>conflict,</b> this method completed parallel merging and topological relation reconstruction to redundant data in STL format file. The calculation examples demonstrated the effectiveness of the proposed method...|$|E
40|$|The new {{hierarchical}} N-port memory architecture features parallel read/write access {{with low}} <b>access</b> <b>conflict</b> probability from all ports, although only 1 -port memory cells are used. A simple, effective circuit is proposed for conflict handling and monitoring. In comparison with conventional implementation of all N ports in each memory cell, substantial memory area reductions between 28 % (2 ports) and 68 % (16 ports) can be realized, while access times are nearly equivalent. The architecture is a generalization {{of the previous}} {{state of the art}} and is applicable for all types of dynamic, static and non-volatile memory...|$|E
40|$|Abstract—A {{well-defined}} system-level model contains explicit parallelism {{and should}} be free from parallel <b>access</b> <b>conflicts</b> to shared variables. However, safe parallelism is difficult to achieve since risky shared variables are often hidden deep {{in the design and}} are not exposed through simulation. In this paper, we propose a new static analysis approach based on segment graphs that identifies a tight set of potential <b>access</b> <b>conflicts</b> in segments that may-happen-in-parallel (MHP). Our experimental results show that the analysis is complete, accurate and fast to reveal dangerous shared variables in several embedded application models. Compared to earlier work, our approach significantly reduces the number of false conflict reports and thus saves the designer time. I...|$|R
40|$|Abstract—A {{fundamental}} tradeoff in MAC protocol {{design for}} wireless ad hoc networks is between proactive and reactive coordination, where {{the latter is}} used to resolve <b>access</b> <b>conflicts</b> whose severity {{is determined by the}} former. In this paper, we describe Clique-Based Randomized Multiple Access (CRMA), a distributed MAC protocol for wireless ad hoc network applications. Of the many objectives in MAC design for this application, CRMA places strongest emphasis on (i) energy efficiency and (ii) reliance only on local (one-hop) connectivity information. CRMA forms collections of nodes, or cliques, separated by one hop, and provides the proactive coordination required for clique members to synchronize their wake-sleep cycles. Each clique selects a slot in the clique’s frame pseudo-randomly, so that that no proactive coordation between cliques is required. To limit potential <b>access</b> <b>conflicts,</b> CRMA can exploit bandwidth via frequency hopping or spread spectrum coding; these also provide robustness to multiple-access interference, exogenous interference, and frequency selectivity. It also allows the use of multiple or multi-channel radios to increase performance. With a slight amount of additional proactive coordination, CRMA can also employ what we call predictive conflict resolution, wherein clique members predict <b>access</b> <b>conflicts</b> and resolve them ahead of time. I...|$|R
50|$|Floor control {{allows users}} of {{networked}} multimedia applications to utilize and share {{resources such as}} remote devices, distributed data sets, telepointers, or continuous media such as video and audio without <b>access</b> <b>conflicts.</b> Floors are temporary permissions granted dynamically to collaborating users in order to mitigate race conditions and guarantee mutually exclusive resource usage.|$|R
40|$|In this paper, our memory {{architecture}} exploration {{methodology and}} CAD techniques for network protocol applications are presented. Prototype tools have been implemented, and applied {{on part of}} an industrial ATM application to show how our novel approach {{can be used to}} easily and thoroughly explore the memory organization search space at the system-level. An extended, novel method for signal to memory assignment is proposed which takes into account memory <b>access</b> <b>conflict</b> constraints. The number of conflicts is first optimized by our flow-graph balancing technique. Significant power and area savings were obtained by performing the exploration thoroughly at each of the degrees of freedom in the global search space...|$|E
40|$|Abstract—In this paper, a {{systematic}} approach is proposed to de-velop a high throughput decoder for quasi-cyclic low-density parity check (LDPC) codes, whose parity check matrix is constructed by circularly shifted identity matrices. Based on {{the properties of}} quasi-cyclic LDPC codes, the two stages of belief propagation decoding algorithm, namely, check node update and variable node update, could be overlapped and thus the overall decoding latency is reduced. To avoid the memory <b>access</b> <b>conflict,</b> the maximum concurrency of the two stages is explored by a novel scheduling algorithm. Consequently, the decoding throughput could be increased by about twice assuming dual-port memory is available. Index Terms—High throughput, low-density parity check (LDPC) codes, overlapped message passing (MP), quasi-cyclic codes. I...|$|E
40|$|The PVAC is {{effective}} for PV isolation in atrial fibrillation. Therefore, {{as shown by}} the present report it may be similarly useful for ablation of ATs originating from PVs. This technique offers some advantages over traditional methods for focal AT ablation, including safer positioning of the ablation catheter at the PV ostium rather than inside the vessel. Preselected energy delivery between neigh-bouring vein electrodes or between single electrodes and a large surface paddle creates a homogenous lesion of varying depth likely to result in long-term PV isolation. A main disadvantage is the need for a larger sheath, which may be difficult to insert and/or increase the risk during transseptal <b>access.</b> <b>Conflict</b> of interest: none declared...|$|E
40|$|In vector processors, the {{concurrent}} memory access of several vector streams causes interconflicts between the references. In a complex memory system where several memory modules are mapped in every bus {{the number of}} conflicts increases because the bus must be shared by the vector streams. In addition to the memory module <b>access</b> <b>conflicts,</b> bus <b>access</b> <b>conflicts</b> could appear, and also couplings of both conflicts. This paper proposes an access order to the vector stream elements and a mapping model of memory modules in buses that reduce the interconflicts in the steady-state. Keywords: Complex Memory System, Vector Stream, Inter-conflicts, Inter-Complex Conflicts, Stride. 1. Introduction The most common data structures in vector processors are vectors stored in consecutive positions in memory. The access patterns are regular and, sometimes, consecutive positions are accessed. The memory module reservation time is, in general, much longer than the processor cycle time. Therefore, the perf [...] ...|$|R
40|$|International audienceWireless and PLC {{standards}} {{have to cope}} with noisy channels. The advanced FEC codes like LDPC and turbo codes are the most competitive ones. Multi-standards devices (such as mobile phones with cellular and WiFi) {{are becoming more and more}} attractive but raise the issue of duplicating hardware. Trellis decoding is a good solution to mutualize material and to achieve good hroughputs on FEC multi-standard decoders. Such a technique added with natural parallelism underlines <b>access</b> memory <b>conflicts</b> on the LDPC decoding process, which decreases the decoding performance. This paper presents an optimized trellis design to avoid these <b>access</b> <b>conflicts</b> with no loss in decoding performance...|$|R
40|$|A {{compiler}} {{must take}} special care when translating and transforming a multi-threaded program: The presence of synchronization operations and the potential of <b>access</b> <b>conflicts</b> have implications on register allocation and instruction scheduling. Moreover, a compiler might want to inhibit hardware assisted instruction reordering through memory fences, to enable a strong memory model on a platform with weakly ordered memory semantics...|$|R
40|$|Abstract: Avoiding access {{conflicts}} is a {{major challenge}} {{in the design of}} multi-threaded programs. In the context of real-time systems, the absence of conflicts can be guaranteed by ensuring that no two potentially conflicting accesses are ever scheduled concurrently. In this paper, we analyze programs that carry time annotations specifying the time for executing each statement. We propose a technique for verifying that a multi-threaded program with time annotations is free of access conflicts. In particular, we generate constraints that reflect the possible schedules for executing the program and the required properties. We then invoke an SMT solver in order to verify that no execution gives rise to concurrent conflicting accesses. Otherwise, we obtain a trace that exhibits the <b>access</b> <b>conflict...</b>|$|E
40|$|Memory {{interleaving}} is a cost-efficient {{approach to}} increase bandwidth. Improving data access locality and reducing memory access conflicts are two important aspects to achieve high efficiency for interleaved memory. In this paper, we introduce a design framework that integrates these two optimizations, {{in order to}} find out minimal memory banks and channels required in the embedded system under performance restriction. Several important techniques, loop and data layout transformations for data access locality, extracting data streams, conflict cache miss reduction as well as data placement and optimally reordered access for interleaved memories, are incorporated in the design framework. Experiments show that our co-design method results in substantially less hardware requirement compared to the implementations without optimization. Keywords Interleaved memory systems, data access locality, memory <b>access</b> <b>conflict,</b> in-dimension-stride vector, extracted data stream, optimally reordered access. 1...|$|E
40|$|We {{present a}} {{parallel}} 2 D mesh connected architecture with SIMD processing elements. The design allows for real-time volume rendering {{as well as}} interactive 3 D segmentation and 3 D feature extraction. This is possible because the SIMD processing elements are programmable,a feature which also allows the use of many different rendering algorithms. We present an algorithm which, {{with the addition of}} hardware resources, provides conflict free access to volume slices along any of the three major axes. The volume <b>access</b> <b>conflict</b> has been the main reason why previous similar architectures could not perform real-time volume rendering. We present the performance of preliminary algorithms on a software simulator of the architecture design. CR Categories: C. 1. 2 [Processor Architectures]: Multiple Data Stream Architectures (Multiprocessors) [...] -Single-instructionstream, multiple-data-stream processors (SIMD); I. 3. 1 [Computer Graphics]: Hardware Architecture [...] -Graphics processors, Parallel processing [...] ...|$|E
40|$|Lazy update {{protocols}} {{have proven}} to have an undesirable behavior due to their high abortion rate in scenarios with high degree of <b>access</b> <b>conflicts.</b> In this paper, we present {{the problem of the}} abortion rate in such protocols from an statistical point of view, in order to provide an expression that predicts the probability of an object to be out of date during the execution of a transaction...|$|R
40|$|This paper {{proposes a}} {{parallel}} file system that reduces data <b>access</b> <b>conflicts</b> by enhancing {{the degree of}} flexibility in positioning the write data. This is achieved by a file updating scheme in which data is appended to the disk instead of overwriting the existing data. The following paragraphs describe the basic configuration and features of this proposed parallel file system. 2 Basic structure of the parallel secondary storage syste...|$|R
40|$|Abstract—In {{this paper}} {{we present a}} multi-grained {{parallel}} algorithm for computing betweenness centrality, which is extensively used in large-scale network analysis. Our method {{is based on a}} novel algorithmic handling of <b>access</b> <b>conflicts</b> for a CREW PRAM algorithm. We propose a proper data-processor mapping, a novel edge-numbering strategy and a new triple array data structure recording the shortest path for eliminating <b>conflicts</b> to <b>access</b> the shared memory. The algorithm requires O(n + m) space and O(n...|$|R
40|$|The {{distributed}} algorithmic {{is widely}} used in various economic and industrial fields as finance, medical, industry, telecommunication. New technologies are increasing rapidly. From now on, applications must associate two conditions: auto-execution on heterogeneous grid computers, {{on the one hand}} and on the other hand, satisfaction of the temporal and safety constraints. Hence this paper deals with performing an algorithm based on an innovative idea based on the mutual exclusion which permits to adjust the <b>access</b> <b>conflict</b> to the shared resources and to synchronize sites in a distributed system. The performed algorithm was tolerant to breakdowns. A site wanting to enter in critical section demands the permission of all sites of it set called quorum. This quorum notion assures the mutual exclusion even in the case of breakdowns. The presented algorithm was exempt of deadlock and assures the equity...|$|E
40|$|We survey {{shared memory}} {{simulations}} on distributed memory machines (DMMs), that use universal hashing {{to distribute the}} shared memory cells over the memory modules of the DMM. We measure their quality in terms of delay, time-processor efficiency, memory contention (how many requests have to be satisfied by one memory module per simulated step) and simplicity. Further we take into consideration different <b>access</b> <b>conflict</b> rules to the modules of the DMM, in particular the c-Collision rule motivated {{by the idea of}} communicating between processors and modules using an optical crossbar. It turns out that simulations with very small delay require more than one hash function. Further, simple simulations on DMMs with the c-Collision rule are only known if more than one hash function is allowed. 1 Introduction Parallel machines that communicate via a shared memory, so called parallel random access machines (PRAMs) represent the most powerful parallel computation model considered in the theor [...] ...|$|E
40|$|The {{deficiencies}} of current access control techniques {{in solving the}} problems of manufacturing process <b>access</b> <b>conflict</b> in networked manufacturing environment were analyzed. An information model of manufacturing process was con-structed, and a case XML Schema of manufacturing task model was given. Based on the characteristic analysis of the access control for the information model, an improved access control model of manufacturing process was constructed, and the access control model based on manufacture tasks, roles and time limits and the relationships among the ele-ments were defined. The implementation mechanisms for access control model were analyzed, in which the access case matching strategy based on manufacture tasks and time limits, the authorization assignment mechanism based on manufacture tasks, roles, correlation degrees and time limits, XML based access control for transaction security and integrity were included. And the two-level detection architecture of transaction conflict was designed to find the con-flicts both in application and in the database. Finally the prototype system was developed based on these principles. Feasibility and effectiveness of the method were verified by an enterprise application...|$|E
30|$|Besides {{duplication}} of BCJR-SISO decoders, this parallelism {{leads to an}} on-chip communication issue related to the interleaver. Indeed, interleaving has to be parallelized in order to extend proportionally the communication bandwidth. In consequence, the complexity of communication structure (and also communication time) increases with parallelism degree and <b>access</b> <b>conflicts</b> may occur (even if latest standards use conflict-free interleavers). The latter problem can be resolved using an interleaving mapping to avoid conflicts [8] or using a communication structure to manage conflicts on the fly [9].|$|R
40|$|International audienceRecent {{communication}} {{standards and}} storage systems uses parallel architectures for error correcting codes (LDPC or Turbocodes) to reliably transfer data between two equipments. However, parallel architectures suffer from memory <b>access</b> <b>conflicts.</b> In this paper, {{we present a}} method that finds a conflict free memory mapping for any interleaving law and any parallelism. The proposed approach always complies with the interconnection network topology the designer wants to infer. Moreover, the resulting architecture is optimized by reducing the cost of network and controller (network and memory controller) architectures...|$|R
40|$|The memory {{organization}} of vector supercomputers {{is designed to}} support {{a high rate of}} data transfer between registers and main memory. Nevertheless, there are applications for which this link {{turns out to be a}} bottleneck. It can be removed using an interface to appropriate library software or programming techniques which take architectural features into account. This report deals with the impact of memory <b>access</b> <b>conflicts</b> on the execution time of matrix calculations. For this study, two variants of matrix multiplication are considered as model problems contrasting memory access with stride one and access with stride n. The CPU time consumption of the two variants is analyzed by means of simulation. It is shown, that the results are also valid for the solution of linear equations, eigenvalue problems, and shortest-path problems if the algorithms are implemented analogously. The analysis is carried out for computers with an interleaved memory (CRAY X-MP, CRAY Y-MP, FUJITSU VP) and a hierarchical memory (IBM 3090). The results are also related to library software in order to point out the benefits a user may gain from the usage of highly optimized software. Moreover, it is demonstrated that multiple processors working in parallel on a shared memory may even increase the number of memory <b>access</b> <b>conflicts...</b>|$|R
40|$|Abstract. In Transactional Memory (TM), {{contention}} {{management is}} the process of selecting which transaction should be aborted when a data <b>access</b> <b>conflict</b> arises. In this paper, the performance of published CMs (contention managers) is re-investigated using complex benchmarks recently published in the literature. Our results redefine the CM performance hierarchy. Greedy and Priority are found to give the best performance overall. Polka is still competitive, but by no means best performing as previously published, and in some cases degrading performance by orders of magnitude. In the worst example, execution of a benchmark completes in 6. 5 seconds with Priority, yet fails to complete even after 20 minutes with Polka. Analysis of the benchmark found it aborted only 22 % of all transactions, spread consistently over the duration of its execution. More generally, all delay-based CMs, which pause a transaction for some finite duration upon conflict, are found to be unsuitable for the evaluated benchmarks with even moderate amounts of contention. This has significant implications, given that TM is primarily aimed at easing concurrent programming for mainstream software development, where applications are unlikely to be highly optimised to reduce aborts. ...|$|E
40|$|An error-comprising {{workflow}} definition might provoke {{serious problems}} to an enterprise {{especially when it}} is involved with mission critical business processes. Concurrency of workflow processes is {{known as one of}} the major sources causing such an invalid workflow process definition. So the conflicts caused by concurrent workflow processes should be considered deliberately when defining concurrent workflow processes. If we can analyze the conflicts immanent in concurrent workflow definition prior to runtime, it will be very helpful to business process designers and many other users of workflow management systems. In this paper, we propose a set-based <b>access</b> <b>conflict</b> analysis method to detect all the possible access conflicts prior to the execution of the workflow process. The method is composed of two phases. In the first phase, it generates set constraints from a structured workflow definition. In the second phase, it solves the set constraints obtained from the first phase. Using the information about potential conflicts detected by our analysis, workflow designers can prevent the serious problems that can be raised by conflicts in runtime and they can convince whether their workflow definitions are free from such conflicts or not. 2001 Published b...|$|E
40|$|Abstract—Large areas {{synthetic}} aperture radar (SAR) raw data simulation,which contains various actual systemerrors, {{is one of the}} main tasks in SAR system design and development. The growth of swath and resolution results in a significant increase in data volume as well as the simulation time. This poses a challenge for SAR raw data simulation considering system errors. For recent years, the graphics processing unit (GPU) -based scalable parallel method has been applied to raw data simulation. In this paper, we investigate time-domain SAR raw data simulation for large areas on multi-GPUs architecture, which can not only simulate raw data of large areas by task partitioning and scheduling, but also improve the efficiency of current GPU-based algorithm by <b>access</b> <b>conflict</b> opti-mization and fine-grained parallel pipeline. Experimental results show that the proposed multi-GPUs-based raw data simulation method achieves a speedup compared to the currentGPU-based method on single GPU, and a significant over speedup on 4 GPUs compared to traditional CPU-based simulation. These results verify that multi-GPUs-based time-domain method is very suitable for large data volume raw data simulation, especially for the case of wide swath and high resolution. Index Terms—Graphics processing unit (GPU), imaging simulation, parallel simulation, raw data generation, {{synthetic aperture}} radar (SAR). I...|$|E
50|$|Multiple {{instances}} of access methods can be opened on a file {{at the same}} time, each serving a single client. If a file is opened for update <b>access,</b> <b>conflicts</b> can occur when the same record is being accessed by multiple clients. To prevent such conflicts, a lock can be obtained on an entire file. Also, if a file is opened for update a lock is obtained on a record by the first client to read it and released when that client updates it. All other clients must wait for the lock's release.|$|R
25|$|The {{transitional}} government generally cooperated with international NGOs, which published several reports {{on human rights}} and humanitarian issues, and permitted them <b>access</b> to <b>conflict</b> areas. However, there were some exceptions.|$|R
3000|$|..., and Motion Compensation (MC) for decoding. An IP memory {{interface}} {{is provided}} by the architecture to achieve the integration. All IP modules are connected to the IP memory interface, which provides accelerators a straight way to exchange data between the host and memory spaces. Interrupt signals can be generated by accelerators when demanded. Moreover, to control the concurrent performance of accelerators, an IP bus arbitrator is designed and integrated in the IP memory interface, for the interface controller to allocate appropriate memory operation time for each IP module, and avoid the memory <b>access</b> <b>conflicts</b> possibly caused by heterogeneous IP operations.|$|R
