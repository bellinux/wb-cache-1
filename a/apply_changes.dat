66|2665|Public
25|$|Developing an MMOG server {{requires}} expertise with client/server architecture, network protocols, security, and database design. MMORPGs include reliable {{systems for}} a number of vital tasks. The server must be able to handle and verify a large number of connections, prevent cheating, and <b>apply</b> <b>changes</b> (bug fixes or added content) to the game. A system for recording the games data at regular intervals, without stopping the game, is also important.|$|E
25|$|Organizr is a web {{application}} for organizing photos within a Flickr account {{that can be}} accessed through the Flickr interface. It allows users to modify tags, descriptions and set groupings, and to place photos on a world map (a feature provided in conjunction with Yahoo Maps). It uses Ajax to emulate the look, feel and quick functionality of desktop-based photo-management applications, such as Google's Picasa and F-Spot. Users can select and <b>apply</b> <b>changes</b> to multiple photos at a time,as {{an alternative to the}} standard Flickr interface for editing.|$|E
2500|$|Both {{the server}} {{and the client}} {{software}} for Eve Online are developed in Stackless Python, {{a variant of the}} Python programming language. Stackless Python allows a relatively large number of players to perform tasks without the overhead of using the call stack used in the standard Python distribution. This frees the game developers from performing some routine work and allows them to <b>apply</b> <b>changes</b> to the game universe without resetting the server. [...] However, the Eve cluster is taken offline daily for database and server maintenance.|$|E
5000|$|The <b>applied</b> <b>change</b> {{in speed}} of each {{maneuver}} {{is referred to}} as delta-v (...) [...]|$|R
50|$|Delta state CRDTs (or simply Delta CRDTs) are {{optimized}} state-based CRDTs {{where only}} recently <b>applied</b> <b>changes</b> {{to a state}} are disseminated instead of the entire state.|$|R
50|$|Postprocessors sdiff and diffmk render {{side-by-side}} diff listings and <b>applied</b> <b>change</b> {{marks to}} printed documents, respectively. Both were developed elsewhere in Bell Labs in or before 1981.|$|R
5000|$|<b>Apply</b> <b>changes</b> {{in a field}} (Artist, Album...) to all {{selected}} files ...|$|E
50|$|Financial {{reporting}} aims {{to provide}} information about firms' financial performance of which the firm uses to record the past transactions and <b>apply</b> <b>changes</b> to the future financial plan.|$|E
5000|$|Real-time editing {{does not}} <b>apply</b> <b>changes</b> immediately, but applies edits and {{processing}} {{on the fly}} during playback. If, for example, part of a track is deleted, the [...] "deleted" [...] audio data is not actually removed from the track, but is hidden and will be skipped on playback.|$|E
50|$|Once the {{platform}} is deployed with the fixed design, the UC management technology holds the entire configuration centrally and so can then easily <b>apply</b> <b>change</b> control processes effortlessly.|$|R
50|$|The {{necessity}} of examining the look-aside store and <b>applying</b> <b>changes</b> for each database access of course complicates the navigational algorithms and lengthens their computation time. However, this avoids {{the need for}} an onboard compiler.|$|R
50|$|When {{any system}} at {{equilibrium}} {{is subjected to}} change in concentration, temperature, volume, or pressure, then the system readjusts itself to counteract (partially) {{the effect of the}} <b>applied</b> <b>change</b> and a new equilibrium is established.|$|R
50|$|Frumin began {{receiving}} significant {{media coverage}} and notice in his usually quiet role during the 2010 healthcare reform debate for {{the critical role}} he plays in determining {{the validity of the}} reconciliation procedure being employed to <b>apply</b> <b>changes</b> desired by the House to portions of the Patient Protection and Affordable Care Act passed by both houses.|$|E
50|$|Usually WYSIWYG editors support CSS but not XSLT, because XSLT transformations {{can be very}} complex, and {{guessing}} {{what the}} user meant when changing the end result can be impossible. The WYSIWYG editors that do support XSLT, such as Syntext Serna, will therefore <b>apply</b> <b>changes</b> directly to the original XML, while updating the view by running the XSLT for every change.|$|E
5000|$|While Biml’s {{declarative}} {{design is}} sufficient to author BI assets, BimlScript extends the language by enabling authors to embed C# or VB.NET code within Biml, similar to how ASP.NET includes [...]NET code within static HTML markup. [...] BimlScript is used to merge changes into existing Biml assets, automatically generate Biml code, and <b>apply</b> <b>changes</b> across multiple Biml files during compilation.|$|E
50|$|Partners-Colombia: is a nonprofit, nonpartisan {{organization}} based in Bogotá, Colombia that promotes the strengthening of institutions and civil society and peaceful coexistence, <b>applying</b> <b>change</b> management methodologies and conflict management, through the promotion of human rights, democracy, justice, participation, environmental protection, management and business advisory.|$|R
5000|$|Archive log files: These files, {{copies of}} the redo log files, are usually stored at {{different}} locations. They are necessary (for example) when <b>applying</b> <b>changes</b> to a standby database, or when performing recovery after a media failure. One can store identical archive logs in multiple locations.|$|R
5000|$|Easily <b>apply</b> pitch <b>changes,</b> reverberation, {{and other}} effects.|$|R
50|$|Developing an MMOG server {{requires}} expertise with client/server architecture, network protocols, security, and database design. MMORPGs include reliable {{systems for}} a number of vital tasks. The server must be able to handle and verify a large number of connections, prevent cheating, and <b>apply</b> <b>changes</b> (bug fixes or added content) to the game. A system for recording the games data at regular intervals, without stopping the game, is also important.|$|E
5000|$|Both {{the server}} {{and the client}} {{software}} for Eve Online are developed in Stackless Python, {{a variant of the}} Python programming language. Stackless Python allows a relatively large number of players to perform tasks without the overhead of using the call stack used in the standard Python distribution. This frees the game developers from performing some routine work and allows them to <b>apply</b> <b>changes</b> to the game universe without resetting the server. [...] However, the Eve cluster is taken offline daily for database and server maintenance.|$|E
50|$|Organizr is a web {{application}} for organizing photos within a Flickr account {{that can be}} accessed through the Flickr interface. It allows users to modify tags, descriptions and set groupings, and to place photos on a world map (a feature provided in conjunction with Yahoo Maps). It uses Ajax to emulate the look, feel and quick functionality of desktop-based photo-management applications, such as Google's Picasa and F-Spot. Users can select and <b>apply</b> <b>changes</b> to multiple photos at a time,as {{an alternative to the}} standard Flickr interface for editing.|$|E
50|$|The desktop tool {{automatically}} {{compares the}} desktop {{version of a}} file stored on the user's computer and the handheld version of the file. If they do not match, it <b>applies</b> <b>changes</b> made on one version to the other version, transferring the document to or from the device's memory.|$|R
40|$|Proof-reading digital {{documents}} is {{a difficult}} task, because the ink annotations made on documents do not maintain their relevance as the document <b>changes.</b> In addition, <b>applying</b> <b>changes</b> indicated by proof-reading marks to the document is tedious and error-prone. We propose Annoflow, a system for managing document annotations. Annoflow manages both free-form margin annotations and proof-reading marks, intelligently reflowing them as the document changes to maintain their relevance. It also interprets and <b>applies</b> the <b>changes</b> indicated by ANSI proof-reading marks made on the document. In this paper, we describe Annoflow as a platform for measuring the best strategies for anchoring, reflowing and applying annotations...|$|R
40|$|ERP systems offer {{enormous}} {{benefits to}} organizations in efficiency, productivity, quality management, cost reduction and decision making-speed. Implementing ERP usually involves <b>applying</b> <b>change</b> management strategies. In this paper different change management strategies for ERP implementation {{in the literature}} has been reviewed and {{a case study of}} National Prawn Saudi based Company has been presented...|$|R
50|$|Three {{introduction}} {{shows were}} aired on 26 December 2013, 28 December 2013 and 4 January 2014. On 26 December 2013, the top twelve entries that {{were selected for}} the competition were presented through commentary from the judges and interviews with the selected contestants. On 28 December 2013 and 4 January 2014, in each show six competitors performed the demo version of their respective entry live {{in front of the}} judges for the first time. On 28 December 2013, MadCraft, Clarissa featuring Josh Standing, Lauri Mikkola, Jasmin Michaela, Hanna Sky and MAKEA presented their entries. On 4 January 2014, Mikko Pohjola, Hukka ja Mama, Dennis Fagerström, Softengine, Lili Lambert and MIAU presented their entries. The live performances were filmed in November 2013 allowing the competitors to take feedback and suggestions provided from the judges and <b>apply</b> <b>changes</b> to their entries prior to the release of the final versions of their songs. The final versions of entries were presented on 1 January 2014 during a special radio broadcast on Yle Radio Suomi, hosted by Harri Hakanen and Anssi Autio.|$|E
5000|$|Checkpoint: The {{purpose of}} {{checkpointing}} {{is to provide}} a snapshot of the data within the database. A checkpoint, in general, is any identifier or other reference that identifies the state of the database at a point in time. Modifications to database pages are performed in memory and are not necessarily written to disk after every update. Therefore, periodically, the database system must perform a checkpoint to write these updates which are held in-memory to the storage disk. Writing these updates to storage disk creates a point in time in which the database system can <b>apply</b> <b>changes</b> contained in a transaction log during recovery after an unexpected shut down or crash of the database system. If a checkpoint is interrupted and a recovery is required, then the database system must start recovery from a previous successful checkpoint. Checkpointing can be either transaction-consistent or non-transaction-consistent (called also fuzzy checkpointing). Transaction-consistent checkpointing produces a persistent database image that is sufficient to recover the database to the state that was externally perceived at the moment of starting the checkpointing. A non-transaction-consistent checkpointing results in a persistent database image that is insufficient to perform a recovery of the database state. To perform the database recovery, additional information is needed, typically contained in transaction logs. Transaction consistent checkpointing refers to a consistent database, which doesn't necessarily include all the latest committed transactions, but all modifications made by transactions, that were committed at the time checkpoint creation was started, are fully present. A non-consistent transaction refers to a checkpoint which is not necessarily a consistent database, and can't be recovered to one without all log records generated for open transactions included in the checkpoint. Depending on the type of database management system implemented a checkpoint may incorporate indexes or storage pages (user data), indexes and storage pages. If no indexes are incorporated into the checkpoint, indexes must be created when the database is restored from the checkpoint image.|$|E
40|$|In this {{position}} {{paper we propose}} an approach for the flexible evolution of object oriented workflow implementations using AOP. We show how reusable aspects can <b>apply</b> <b>changes</b> (e. g. insertion of activities or control flow constructs) to OMG compliant implemented processes. Besides aspects providing different workflow auditing methods can trigger necessary alternations. In that way a cyclic workflow improvement can be realized...|$|E
40|$|Objective: To {{determine}} if <b>applying</b> <b>change</b> analysis to the narrative reports made by reviewers of hospital deaths increases {{the utility of}} this information in the systematic analysis of patient harm. Design: Qualitative analysis of causes and contributory fac-tors underlying patient harm in 52 case narratives linked to preventable deaths derived from a retrospective case record review of 1000 deaths in acute National Healt...|$|R
5000|$|Also in November 2007, Westfield <b>applied</b> to <b>change</b> the {{planning}} permission {{to include a}} hotel.|$|R
5000|$|... 2 KMJK has <b>applied</b> to <b>change</b> {{their city}} of license to North Kansas City, Missouri.|$|R
40|$|This report explores how error-correction data {{generated}} by a Reed-Solomon code {{may be used as}} a mechanism to <b>apply</b> <b>changes</b> to an existing installed codebase. Using the Reed-Solomon code to generate error-correction data for a changed or updated codebase will allow the error-correction data to be applied to an existing codebase to both validate and introduce changes or updates from some upstream source to the existing installed codebase...|$|E
40|$|We {{propose a}} {{systematic}} study of transformations of $A$-hypergeometric functions. Our {{approach is to}} <b>apply</b> <b>changes</b> of variables corresponding to automorphisms of toric rings, to Euler-type integral representations of $A$-hypergeometric functions. We show that all linear $A$-hypergeometric transformations arise from symmetries of the corresponding polytope. As an application of the techniques developed here, we show that the Appell function $F_ 4 $ does not admit {{a certain kind of}} Euler-type integral representation...|$|E
40|$|This work aims to <b>apply</b> <b>changes</b> to a {{finished}} {{structure of a}} family house. These changes shall include adding an extension to the upper floor, installment of supporting constructs necessary for the extension, the attic and the roof. The main goal of this project {{is to determine the}} costs of these works and to compare them with the actual value of the real estate and also to show the diference in it‘s value before and after the aforesaid reconstruction...|$|E
25|$|The anodic {{generated}} insulating {{oxide layer}} is destroyed if the polarity of the <b>applied</b> voltage <b>changes.</b>|$|R
50|$|In March 2013, WUIL <b>applied</b> to <b>change</b> its {{call sign}} to WKIO, {{signaling}} a format change.|$|R
40|$|The paper {{describes}} {{a problem of}} multi-agent path planning in environment with obstacles. Novel approach to multi-agent optimal path planning, using graph representation of environment models is described. When planning the path of each robot, the graph model of environment is dynamically changed for path correction and collision avoidance. New algorithm <b>applies</b> <b>changes</b> of robots' paths and speeds to avoid collisions in multi-agent environment...|$|R
