693|2080|Public
5|$|Given the {{scarcity}} of contemporaneous <b>attestations</b> for Menkauhor, modern Egyptologists consider his reign to have been perhaps {{eight or nine years}} long, as indicated by the much later historical sources.|$|E
5|$|Monumental <b>attestations</b> of Menkauhor {{are limited}} to a rock {{inscription}} at the Wadi Maghareh in Sinai, showing his titulary and a rough stele inscribed with his cartouche from Mastaba 904 at Saqqara.|$|E
5|$|Thored's {{governorship}} as ealdorman, {{based on}} charter <b>attestations,</b> cannot be securely dated before 979. He did attest royal charters {{during the reign}} of Æthelred II, the first in 979, six in 983, one in 984, three in 985, one in 988, appearing in such <b>attestations</b> for the last time in 989. It is possible that such appearances represent more than one Thored, though that is not a generally accepted theory. His definite predecessor, Oslac, was expelled from England in 975. The historian Richard Fletcher thought that Oslac's downfall may have been the result of opposing the succession of Edward the Martyr, enemy and brother of Æthelred II.|$|E
40|$|Abstract—Remote <b>attestation</b> of the trusted {{platforms}} {{is one of}} {{the most}} important aspect of trusted computing specification. The approach of attesting program from higher semantic level has been proved more trustworthy than traditional static approaches. Semantic remote <b>attestation</b> based on virtual machine is a kind of representative measures of trusted <b>attestation,</b> but there are some shortcomings in <b>attestation</b> efficiency and given applications. A new method of trusted remote <b>attestation</b> for web service is proposed based on filter mechanism, which combines property-based <b>attestation</b> with trusted virtual machine. We construct trusted <b>attestation</b> environment by the open-source TPM Emulator and IAIK jTSS on Linux, and Tomcat as Web server. The prototype of remote <b>attestation</b> for web service based on filter was validated by establishing <b>attestation</b> trusted table. The results show that the remote <b>attestation</b> policy of filter mechanism improves <b>attestation</b> efficiency. Keywords- trusted computing, remote <b>attestation,</b> web services, filter I...|$|R
40|$|One {{of the key}} {{mechanisms}} for trust establishment among different platforms is remote <b>attestation,</b> which allows a platform to vouch for its trust related characteristics to a remote challenger. In this chapter, the authors propose a new conceptual model for remote <b>attestation</b> consisting of four basic ingredients: root of trust, <b>attestation</b> objective, object measurement, and <b>attestation</b> process. With this model, they present a systematic study on the remote <b>attestation,</b> including the methodologies applied for implementing the four elements and the principles for designing an <b>attestation</b> scheme. The authors also examine existing remote <b>attestation</b> schemes in the literature by grouping them into two main types: integrity <b>attestation</b> and quality <b>attestation.</b> They discuss both the strength and the limitations of each type of scheme and explain {{how they can be}} applied in trust management in distributed environment...|$|R
40|$|Remote <b>attestation</b> was {{introduced}} in TCG specifications {{to determine whether a}} remote system is trusted to behave in a particular manner for a specific purpose; however, most of the existing approaches attest only the integrity state of a remote system and hence {{have a long way to}} go in achieving the above <b>attestation</b> objective. Behavior-based <b>attestation</b> and semantic <b>attestation</b> were recently introduced as solutions to approach the TCG <b>attestation</b> objective. In this paper, we extend behavior-based <b>attestation</b> to a model-driven remote <b>attestation</b> to prove that a remote system is trusted as defined by TCG. Our model-driven remote <b>attestation</b> verifies two compliance requirements to prove the trustworthiness of a remote system: expected behavior compliance and enforced behavior compliance...|$|R
5|$|Beyond these {{contemporary}} <b>attestations,</b> Neferhotep {{is listed}} on the 34th entry of the Karnak king list {{as well as the}} 7th column, 25th row of the Turin canon. The Turin king list credits Neferhotep with a reign of 11 years and 1 to 4 months, the second or third longest of the dynasty after Merneferre Ay (23 years) and Sobekhotep IV (912 years).|$|E
5|$|Early <b>attestations</b> of {{the name}} in Basque include Errama-itçéla, Erroumancel, later errumanzel and erremaitzela. The initial E- is the Basque {{prosthetic}} vowel, added because no Basque word may begin with an R-, and the final -a is the absolutive case suffix, used when citing a name. If this etymology is correct, it is a rare case of a native Romani name for themselves (an endonym) being borrowed by another language.|$|E
5|$|Thored {{may be the}} Thored {{who appears}} {{for the first time}} in charter <b>attestations</b> during the reign of King Edgar (95975), his {{earliest}} possible appearance being in 964, witnessing a grant of land in Kent by King Edgar to St Peter's, Ghent. This is uncertain because the authenticity of this particular charter is unclear. A charter issued by Edgar in 966, granting land in Oxfordshire to a woman named Ælfgifu, has an illegible ealdorman witness signature beginning with Þ, which may be Thored.|$|E
40|$|Remote <b>attestation</b> is a {{mechanism}} to securely and verifiably obtain information {{about the state of}} a remote computing platform. However, resource-constrained embedded devices cannot afford the required trusted hardware components, while software <b>attestation</b> is generally vulnerable to network and collusion attacks. In this paper, we present a lightweight remote <b>attestation</b> scheme that links software <b>attestation</b> to remotely identifiable hardware by means of Physically Unclonable Functions (PUFs). In contrast to existing software <b>attestation</b> schemes, our solution (1) resists collusion attacks, (2) allows the <b>attestation</b> of remote platforms, and (3) enables the detection of hardware attacks due to the tamper-evidence of PUFs...|$|R
40|$|<b>Attestation</b> is the {{activity}} of making a claim about properties of a target by supplying evidence to an appraiser. An open-ended framework for <b>attestation</b> is desirable for safe support to sensitive or highvalue activities on heterogeneous networks. We identify five central principles to guide development of <b>attestation</b> systems. We argue that (i) <b>attestation</b> {{must be able to}} deliver temporally fresh evidence; (ii) comprehensive information about the target should be accessible; (iii) the target, or its owner, should be able to constrain disclosure of information about the target; (iv) <b>attestation</b> claims should have explicit semantics to allow decisions to depend on several claims; and (v) the underlying <b>attestation</b> mechanism must be trustworthy. We propose an architecture for <b>attestation</b> that is guided by these principles, as well as an implementation that adheres to this architecture. Virtualized platforms, which are increasingly well supported on stock hardware, provide a natural basis for our <b>attestation</b> architecture. ...|$|R
40|$|Thispaperdescribesthedesignandimplementationofanewoperatingsystemauthorizationarchitecture {{to support}} {{trustworthy}} computing. Called logical <b>attestation,</b> this architecture provides a sound framework for reasoning about run time behavior of applications. Logical <b>attestation</b> {{is based on}} attributable,unforgeablestatementsaboutprogramproperties,expressedinalogic. Thesestatements aresuitableformechanicalprocessing,proofconstruction,andverification;theycanserveascredentials, support authorization based on expressive authorization policies, and enable remote principals totrustsoftwarecomponents withoutrestrictingthe localuser’s choice of binaryimplementations. We have implemented logical <b>attestation</b> in a new operating system called the Nexus. The Nexus executesnativelyonx 86 platformsequippedwithsecurecoprocessors. ItsupportsbothnativeLinux applications and uses logical <b>attestation</b> to support new trustworthy-computing applications. When deployed on a trustworthy cloud-computing stack, logical <b>attestation</b> is efficient, achieves highperformance, and can run applications that provide qualitative guarantees not possible with existing modes of <b>attestation...</b>|$|R
5|$|Two naoses housing two statues each of Neferhotep {{as well as}} a {{pedestal}} bearing Neferhotep's and Sobekhotep IV's cartouches have been found in Karnak. There are also a few <b>attestations</b> from the Faiyum region where the capital of Egypt was located at the time, in particular a statuette of the king dedicated to Sobek and Horus of Shedet, now on display in the Archaeological Museum of Bologna.|$|E
5|$|Corrector totius orientis (governor of {{the entire}} East): it is {{generally}} accepted by modern scholars that he bore this title. The corrector had an overall command of the Roman armies and authority over the Roman provincial governors in the designated region. There are no known <b>attestations</b> of the title during Odaenathus' lifetime. Evidences for the king bearing the title are two inscriptions in Palmyrene dialect; one posthumous dedication describing him as MTQNNʿ of the East (derived from the Aramaic root TQN, meaning to set in order), and the other describing his heir Vaballathus with the same title albeit using the word PNRTTʿ instead of MTQNNʿ.|$|E
5|$|In Norse mythology, Þorgerðr Hǫlgabrúðr (Thorgerdr Holgabrudr) and Irpa are divine figures. Þorgerðr and Irpa appear {{together}} in Jómsvíkinga saga, Njáls saga and Þorleifs þáttr jarlsskálds. Irpa {{does not appear}} outside of these four <b>attestations,</b> but Þorgerðr also appears in the Prose Edda book Skáldskaparmál, Færeyinga saga, and Harðar saga ok Hólmverja and is mentioned in Ketils saga hœngs. Þorgerðr Hǫlgabrúðr is particularly associated with Haakon Sigurdsson (d. 995), and, in Jómsvíkinga saga and Þorleifs þáttr jarlsskálds, she and Irpa are described as sisters. The roles of the Þorgerðr Hǫlgabrúðr and Irpa in these sources, {{and the implications of}} their names, has resulted in an amount of scholarly discourse and theory.|$|E
40|$|Abstract. <b>Attestation</b> is the {{activity}} of making a claim about properties of a target by supplying evidence to an appraiser. We identify five central principles to guide development of <b>attestation</b> systems. We argue that (i) <b>attestation</b> {{must be able to}} deliver temporally fresh evidence; (ii) comprehensive information about the target should be accessible; (iii) the target, or its owner, should be able to constrain disclosure of information about the target; (iv) <b>attestation</b> claims should have explicit semantics to allow decisions to be derived from several claims; and (v) the underlying <b>attestation</b> mechanism must be trustworthy. We propose an architecture for <b>attestation</b> guided by these principles, as well as an implementation that adheres to this architecture. Virtualized platforms, which are increasingly well supported on stock hardware, provide a natural basis for our <b>attestation</b> architecture. ...|$|R
40|$|Trusted {{computing}} <b>attestation</b> mechanism {{relies on}} hash measurements to realize remote party <b>attestation</b> in distributed systems. Property based <b>attestation</b> enables more meaningful <b>attestation</b> by abstracting low level binary values to high level security properties or functions of systems. The contribution {{of this paper}} is two fold. In {{the first part of the}} paper, we provide an analysis of the different types of property based <b>attestation</b> mechanisms that have been proposed in the recent years. We categorize these mechanisms as derivation based, delegation based and enforcement based and analyze each of them with a particular focus on their limitations. In the second part, we provide a list of challenges for property based <b>attestation.</b> We believe this to be an useful exercise to help better understand the issues that limit the practical applicability of property based <b>attestation</b> in real world systems. 8 page(s...|$|R
30|$|A more {{flexible}} extension to the binary <b>attestation</b> is property-based <b>attestation</b> (PBA): {{on a higher}} system level, <b>attestation</b> should only determine whether the system has a desired property [11 – 14]. PBA verifies the integrity of a system with regard to certain policies.|$|R
5|$|Owing to the {{scarcity}} of artefacts and inscriptions relating to Menkauhor's reign, few of his activities are known. Menkauhor sent an expedition to Sinai to exploit the mines of turquoise and copper in the Wadi Maghareh. The expedition is evidenced by a damaged rock inscription showing Menkauhor's titulary {{which is one of}} the few <b>attestations</b> dating to his lifetime. The mines of Sinai had been exploited since the Third Dynasty (2686 BC–2613 BC), and both Menkauhor's predecessor Nyuserre Ini and successor Djedkare Isesi sent expeditions to the Wadi Maghareh.|$|E
5|$|Walter was {{a witness}} on 12 of Henry's royal {{charters}}, all before 1131. He {{also was a}} witness for some royal charters issued by Henry's successor, King Stephen of England, early in Stephen's reign. One was a charter issued at Henry's funeral on 4 January 1136 and another at Stephen's court at Easter 1136. These two charter <b>attestations</b> {{show that he was}} an early supporter of Stephen in the king's seizure of the throne from Henry's daughter Matilda. These early charters from Stephen's reign are Walter's last appearances in documents during his lifetime. Also in 1136 Walter {{was in charge of the}} defense of Le Sap in Normandy against Geoffrey V of Anjou.|$|E
5|$|According to {{linguists}} like Bhadriraju Krishnamurti, Tamil, as a Dravidian language, descends from Proto-Dravidian, a Proto-language. Linguistic reconstruction {{suggests that}} Proto-Dravidian was spoken around {{the third millennium}} BC, possibly in the region around the lower Godavari river basin in peninsular India. The material {{evidence suggests that the}} speakers of Proto-Dravidian were of the culture associated with the Neolithic complexes of South India. The next phase in the reconstructed proto-history of Tamil is Proto-South Dravidian. The linguistic evidence suggests that Proto-South Dravidian was spoken around the middle of the second millennium BC, and that proto-Tamil emerged around the 3rd century BC. The earliest epigraphic <b>attestations</b> of Tamil are generally taken to have been written shortly thereafter. Among Indian languages, Tamil has the most ancient non-Sanskritised Indian literature. Scholars categorise the attested history of the language into three periods, Old Tamil (300 BC – AD 700), Middle Tamil (700–1600) and Modern Tamil (1600–present). In November 2007, an excavation at Quseir-al-Qadim revealed Egyptian pottery dating back to first century BC with ancient Tamil Brahmi inscriptions. John Guy states that Tamil was the lingua franca for early maritime traders from India.|$|E
40|$|Abstract. Remote <b>attestation</b> is the {{activity}} of making a claim about properties of a target by supplying evidence to an appraiser over a network. We identify five central principles to guide development of <b>attestation</b> systems. We argue that (i) <b>attestation</b> {{must be able to}} deliver temporally fresh evidence; (ii) comprehensive information about the target should be accessible; (iii) the target, or its owner, should be able to constrain disclosure of information about the target; (iv) <b>attestation</b> claims should have explicit semantics to allow decisions to be derived from several claims; and (v) the underlying <b>attestation</b> mechanism must be trustworthy. We illustrate how to acquire evidence from a running system, and how to transport it via protocols to remote appraisers. We propose an architecture for <b>attestation</b> guided by these principles. Virtualized platforms, which are increasingly well supported on stock hardware, provide a natural basis for our <b>attestation</b> architecture. ...|$|R
40|$|Remote <b>attestation</b> {{of system}} {{integrity}} {{is an essential}} part of trusted computing. However, current remote <b>attestation</b> techniques only provide integrity proofs of static properties of the system. To address this problem we present a novel remote dynamic <b>attestation</b> system named ReDAS (Remote Dynamic <b>Attestation</b> System) that provides integrity evidence for dynamic system properties. Such dynamic system properties represent the runtime behavior of the attested system, and enable an attester to prove its runtime integrity to a remote party. ReDAS currently provides two types of dynamic system properties for running applications: structural integrity and global data integrity. In this work, we present the challenges of remote dynamic <b>attestation,</b> provide an in-depth security analysis and introduce a first step towards providing a complete runtime dynamic <b>attestation</b> framework. Our prototype implementation and evaluation with real-world applications show that we can improve on current static <b>attestation</b> techniques with an average performance overhead of 8 %...|$|R
40|$|Abstract. Trusted Computing Platforms {{provide the}} {{functionality}} of remote <b>attestation,</b> i. e. attesting the configuration {{and status of}} a system to a remote entity. Remote <b>attestation</b> hereby proves integrity and authenticity of system environments. This is crucial for policy enforcement, {{which in turn is}} needed in many usage scenarios, e. g., DRM. However, applying remote <b>attestation</b> solely allows masquerading attacks. These attacks are possible since the concept of remote <b>attestation</b> does not provide any means for establishing secured communication channels. In this paper we describe this kind of attacks against protocols for remote <b>attestation</b> and present a protocol for preventing masquerading attacks. ...|$|R
5|$|Whether Neferhotep I usurped {{the throne}} {{at the expense}} of Sobekhotep III or {{inherited}} it, he possibly acceded to power over a fragmented Egypt. The Egyptologist Kim Ryholt believes that the Canaanite 14th Dynasty was already in existence at the time, forming an independent realm controlling at least the Eastern Nile Delta. This could explain why Neferhotep's only attestation in Lower Egypt is a single scarab seal. While this analysis is accepted by some scholars, among whom are Gae Callender, Janine Bourriau and Darrell Baker, it is rejected by others, including Manfred Bietak, Daphna Ben-Tor and James and Susan Allen, who contend that Neferhotep I reigned over the whole of Egypt. Possible vindications of this are the several <b>attestations</b> of Neferhotep found northeast of Egypt, in the Levant, in particular the stela of the Governor of Byblos Yantinu and 4 scarab seals from Canaan, indicating that he retained enough power to maintain trade relations with this region.|$|E
25|$|With the 20th-century {{discovery}} of Bronze-Age <b>attestations</b> of Indo-European (Anatolian, Mycenaean Greek), Vedic Sanskrit lost its special {{status as the}} most archaic Indo-European language known.|$|E
25|$|Huni {{is not a}} well attested pharaoh; most of the <b>attestations</b> {{only point}} {{indirectly}} to him. There are only two contemporary objects with his name.|$|E
40|$|Abstract: Remote <b>attestation</b> {{is the key}} {{technology}} of trusted computing. The existing remote <b>attestation</b> techniques lack of the trust measure of platform running state. In this paper, by the analysis and comparison of existing remote <b>attestation</b> technology, we propose a trust measure of platform running state, and a remote <b>attestation</b> program based on the trust measure results. By RO security analysis, and a simulation, we verify the security and efficiency of the program. The trust measure of platform running state is mainly based on the trust rating of the programs running on the platform, and a total trust value of the platform by an algorithm. The remote <b>attestation</b> for the trust measure of platform running state is based on K-CCA problem. In this paper, we carry out simulation experiment with different proportions of non-credible nodes and the experiment results verify the trust evaluation efficiency of the scheme on the platform. 1. Background Remote <b>attestation</b> {{is one of the}} core technologies of trusted computing and current remote <b>attestation</b> has obtained many achievements, of which the more typical one is based on binary authentication developed by TCG, becoming the basis of researching remote <b>attestation</b> [1 - 2]. Binary remote <b>attestation</b> judges the credibility of the platform by measuring the integrity of th...|$|R
40|$|Abstract. An {{increasing}} number of "smart " embedded devices are employed in our living environment nowadays. Unlike traditional computer systems, these de-vices are often physically accessible to the attackers. It is therefore almost impos-sible to guarantee that they are un-compromised, i. e., that indeed the devices are executing the intended software. In such a context, software-based <b>attestation</b> is deemed as a promising solution to validate their software integrity. It guarantees that the software running on the embedded devices are un-compromised without any hardware support. However, designing software-based <b>attestation</b> protocols are shown to be error-prone. In this work, we develop a framework for design and analysis of software-based <b>attestation</b> protocols. We first propose a generic <b>attestation</b> scheme that captures most existing software-based <b>attestation</b> proto-cols. After formalizing the security criteria for the generic scheme, we apply our analysis framework to several well-known software-based <b>attestation</b> protocols and report various potential vulnerabilities. To {{the best of our}} knowledge, this is the first practical analysis framework for software-based <b>attestation</b> protocols. ...|$|R
40|$|This article {{considers}} peculiarities, {{procedures and}} contents of works conformably to <b>attestation</b> in state metrological system of measurement laboratories that provide activities {{in a field}} of information security. An approach for design the basic documents for preparation to an <b>attestation</b> suggested and criteria of <b>attestation</b> of laboratories are described...|$|R
25|$|Fernand Benoît {{found the}} {{earliest}} <b>attestations</b> of a cult of Epona in the Danubian provinces and asserted {{that she had}} been introduced in the limes of Gaul by horsemen from the east. This suggestion has not been generally taken up.|$|E
25|$|Tenzing Norgay {{and other}} members of the Hillary {{expedition}} wore Rolex Oysters in 1953 at altitude 8,848 m on Mount Everest while there are <b>attestations</b> and speculation that Sir Edmund Hillary either carried a Smiths Deluxe or a Rolex to the summit, or both.|$|E
25|$|Priapus {{does not}} appear to have had an {{organized}} cult and was mostly worshiped in gardens or homes, though there are <b>attestations</b> of temples dedicated to the god. His sacrificial animal was the ass, but agricultural offerings (such as fruit, flowers, vegetables and fish) were also very common.|$|E
30|$|Several {{problems}} have been identified related to this protocol, and are being examined and addressed in current efforts within the TCG and elsewhere. These problems {{are related to the}} difficulty in measuring a platform configuration accurately, and comparing it against a well-known and standard configuration. In today's complex systems, composed of large numbers of interconnected heterogenous computing environments, performing an integrity measurement is almost meaningless unless there is very strict control on the hardware, operating systems and applications. These problems are driving further research activities in remote <b>attestation,</b> and well-known examples include Direct Anonymous <b>Attestation</b> [34], Semantic Remote <b>Attestation</b> [35], Property-based <b>Attestation</b> [36], and Fine Grained <b>Attestation</b> [37].|$|R
40|$|Abstract. A {{program is}} a {{compound}} of various subroutines playing different roles. In this paper, we study how to attest the execution of those mission-critical subroutines whose execution is the basis to establish trust. Our results include a new <b>attestation</b> scheme called function <b>attestation.</b> Given a function F of a program P, the proposed scheme allows for an efficient and secure <b>attestation</b> by using the debug facility of processors and building a trust chain rooted at TPM. Our scheme is lightweight and easy to deploy. It can also be easily extended to support multiple-threaded programs and data flow <b>attestation</b> with slightly more overhead. Key words: Trusted computing, remote <b>attestation,</b> mission-critical function...|$|R
40|$|In {{the process}} of {{platform}} <b>attestation,</b> a Trusted Platform Module is a performance bottleneck, which causes enormous delays if multiple simultaneously <b>attestation</b> requests arrive {{in a short period}} of time. In this paper we show how the scalability of platform <b>attestation</b> can be improved. In this context, we propose three protocols that enable fast and secure integrity reporting for servers that have to handle many <b>attestation</b> requests. We implemented all of our protocols and compared them in terms of security and performance. Our proposed protocols enable a highly frequented entity to timely answer incoming <b>attestation</b> requests. Categories and Subject Descriptors K. 6. 5 [Management of Computing and Informatio...|$|R
