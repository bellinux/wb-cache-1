7|5|Public
50|$|Ralph Homan, who {{operated}} a local store with his father, bought {{the newspaper in}} 1909. He installed a new Babcock flatbed press and brought in <b>automatic</b> <b>typesetting</b> equipment that took much of the labor out of the production.|$|E
5000|$|TJ-2 (Type Justifying Program) was {{published}} by Peter Samson in May 1963 and {{is thought to be}} the first page layout program. Although it lacks page numbering, page headers and footers, TJ-2 is the first word processor to provide a number of essential typographic alignment and <b>automatic</b> <b>typesetting</b> features: ...|$|E
50|$|As {{early as}} 1978, the {{typesetting}} system TeX due to Donald Knuth introduced resolution independence {{into the world}} of computers. The intended view can be rendered beyond the atomic resolution without any artifacts, and the <b>automatic</b> <b>typesetting</b> decisions are guaranteed to be identical on any computer up to an error less than the diameter of an atom. This pioneering system has a corresponding font system, Metafont, which provides suitable fonts of the same high standards of resolution independence.|$|E
50|$|Chahil {{was born}} in Amritsar, India on October 19, 1950 to Pritam Singh Chahil (father) and Champa Chahil (n√©e Dugal) (mother). Pritam Singh {{was a member of}} the Indian hockey {{contingent}} to the 1936 Summer Olympics in Berlin. He was a publisher, public service worker, and an educationist. He also initiated and funded the development of the first <b>automatic</b> Punjabi language <b>typesetting</b> machine. Pritam Singh is recognized for his Roman alphabet English language transliteration of the entire Sri Guru Granth Sahib.Chahil studied at The Lawrence School, Sanawar, India, earning the Indian School Certificate (administered by the University of Cambridge) in 1967. He was graduated from Punjab University, Chandigarh, India in 1971 with a Bachelor of Commerce degree. Chahil went on to earn a master's degree from the Thunderbird School of Global Management in 1976.|$|R
40|$|We {{present a}} {{probabilistic}} generarive model for timing deviations in expressive music performance. The {{structure of the}} proposed model is equivalent to a switching state space model. The switch variables correspond to discrete note locations as in a musical score. The continuous hidden variables denote the tempo. We formulate two well known music recognition problems, namely tempo tracking and automatic transcription (rhythm quantization) as filtering and maximum a posteriori (MAP) state estimation tasks. Ex- act computation of posterior features such as the MAP state is intractable in this model class, so we introduce Monte Carlo methods for integration and optimization. We compare Markov Chain Monte Carlo (MCMC) methods (such as Gibbs sampling, simulated annealing and iterative improvement) and sequential Monte Carlo methods (particle filters). Our simulation results suggest better results with sequential methods. The methods can be applied in both online and batch scenarios such as tempo tracking and transcription and are thus potentially useful {{in a number of}} music applications such as adaptive <b>automatic</b> accompaniment, score <b>typesetting</b> and music information retrieval...|$|R
40|$|Many {{aspects of}} {{computer-based}} music notation have been previously discussed. The presented thesis {{deals with the}} process of converting a textual description of music into a conventional musical score that can be either printed or viewed on a computer screen. The chosen textual music representation language is GUIDO Music Notation, an adequate, human-readable format, which has been developed since 1996. Because GUIDO Music Notation is not solely focused on score representation but rather on being able to represent all logical aspects of music, the conversion of arbitrary GUIDO descriptions into a conventional score is not necessarily an easy or straightforward task. The thesis begins by introducing the three-layered structure of GUIDO Music Notation. The most important features of GUIDO are presented and compared to other music representation languages. The thesis continues to describe how GUIDO descriptions are first converted into a suitable computer representation. Then, <b>automatic</b> musical <b>typesetting</b> algorithms work on this inner representation. The major difference to other music notation systems {{lies in the fact that}} all implemented typesetting algorithms are described as GUIDO to GUIDO transformations. Each step of the musical typesetting process adds more richness to the GUIDO description. The final description, which contains all typesetting information, is then used for viewing and printing the score. In this thesis, the implemented music notation algorithms are described, some of them in detail; especially those parts of the musical typesetting process that have similarities to text setting, namely spacing and line breaking, are presented. An improved algorithm for spacing a line of music is discussed and it is shown how the resulting spacing more closely matches the spacing of a human engraver. Additionally, a new algorithm for optimally filling pages is presented for the first time. The implemented music notation system is used within several applications including an online music notation server which is freely available on the Internet using any standard web browser...|$|R
50|$|New equipment, parts, {{and repairs}} were {{difficult}} to get, newsprint was scarce, and skilled help was difficult to find. By early 1948, the Democrat {{was able to find}} used equipment in satisfactory condition. The shop had three linotypes and <b>automatic</b> <b>typesetting</b> equipment was available. The real need for the newspaper in 1948 was a press to replace the slow-moving Babcock; this press had a separate folder, requiring hours of extra work. The choice was a Goss Comet purchased from the Celina Daily Standard, owned by the Snyder family. It printed and folded 3,000 copies per hour. It was this press that made a daily newspaper possible. The Bryan Times became the 100th daily newspaper in Ohio.|$|E
5000|$|In November 1975, R2E signed Warner & Swasey Company as the {{exclusive}} manufacturer and marketer of the Micral {{line in the}} United States and Canada. Warner & Swasey marketed its Micral-based system for industrial data processing applications such as engineering data analysis, accounting and inventory control. [...] R2E and Warner & Swasey displayed the Micral M multiple microcomputer system at the June 1976 National Computer Conference. The Micral M consists of up to eight Micral S microcomputers, {{each with its own}} local memory and sharing the common memory so the local and common memory look like one monolithic memory for each processor. The system has a distributed multiprocessor operating system R2E said was based on sharing common resources and real-time task management.Some time after the July 1976 introduction of the Zilog Z80, came the Z80-based Micral CZ. The 8080-based Micral C, an intelligent CRT terminal designed for word processing and <b>automatic</b> <b>typesetting,</b> was introduced in July 1977. [...] It has two Shugart SA400 minifloppy drives and a panel of system control and sense switches below the minifloppy drives. Business application language (BAL) and FORTRAN are supported. By October, R2E had set up an American subsidiary, R2E of America, in Minneapolis. [...] The Micral V Portable (1978) could run FORTRAN and assembler under the Sysmic operating system, or BAL. [...] The original Sysmic operating system was renamed Prologue in 1978. Interestingly, Prologue was able to perform real-time multitasking, and was a multi-user system. R2E offered CP/M for the Micral C in 1979.|$|E
40|$|The goal of {{this study}} is to develop a {{real-time}} personalized digital name card typesetting system with seamless operability across various platforms. The system includes an authentication module, a template selection module, a text typesetting and merger module, a frame selection and merger module, and a QR code generator and merger module. The system authentication module proposes a potential authentication mechanism between server and client. The template selection module entails making a choice of template from the system-integrated gallery. The text typesetting and merger module proposes the methodology of <b>automatic</b> <b>typesetting</b> that is under fixed font and size restrictions. After it is merged with the last picture, the frame selection and merger module combines one of the pictures from the frame gallery. The QR code generator and merger module is essentially a flowchart of how the QR code is generated. A personalized name card is the end product of these modules. The prototype generation shows that the system works well as a name card typesetting system. Finally, the system shows promising potential for applications to the emerging and proliferating market of smart phones...|$|E
40|$|The {{purpose of}} this paper is to give the reader a concise {{overview}} of Expressive Notation Package 2. 0 (henceforward ENP). ENP is music notation program that belongs to a family of music and sound related software packages developed at Sibelius Academy in Finland. ENP has been used in various research projects during the past several years. 1. OVERVIEW ENP [3] is a music notation program that has been developed in order to meet the requirements of computer aided composition, music analysis and virtual instrument control. ENP is intended to represent Western musical notation from 17 th century onward including 20 th century notation. ENP is not a full featured music typesetting program. It is, however, designed to produce <b>automatic,</b> reasonable musical <b>typesetting</b> according to the common practices [12]. ENP output should not generally require adjustments made by the user. There are also some other non-commercial LISP-based programs that are aimed at representing complex musical data such as Common Music Notation [13], PatchWork‚Äôs Rhythm-Editor [6] and the musical editors in OpenMusic [1]. ENP is programmed with LispWorks ANSI Common Lisp by Xanalys. LispWorks, in turn, is a Lisp implementation that is source code compatible across Windows, Linux, Mac OS X and UNIX platforms. ENP uses the OpenGL API for graphical output. OpenGL is a widely used 3 D graphics library that is fast and portable with implementations in all of the aforementioned operating systems. It is equally suitable for developing 2 D or 3 D interactive applications. At the time of writing the development version of ENP runs in Mac OS X. However, some preliminary attempts have been made to port it to Windows. Some of the key concepts behind ENP are: 1) ENP can be used to represent a wide range of notational styles. Permission to make digital or hard copies of all or part of this work for personal or classroom use is granted without fee provided that copies are not made or distributed for profit or commercial advantage and that copies bear this notice and the full citation on the first page...|$|R
40|$|Handwriting {{extraction}} is {{the skill}} of a system to get and translate comprehensible hand written input via sources such as document, photos, tough screen and other devices. The picture of the written document is used to detect written text {{by the use of}} optical scanning i. e. known as optical character recognition. Handwriting extraction basically uses optical character recognition. Conversely, an absolute hand writing extraction process that handles format and perform correct segmentation into typescript and searches for the most reasonable terms. Handwriting extraction is a process of <b>automatic</b> <b>typesetting</b> of text from a picture to letter sets that are exploitable by a system or a computer by the use of text- processing software. The information received via this method form is treated as static illustration of hand writing. Off line handwriting recognition is relatively complex due to the reason that different persons have differences in the handwriting styles. Today, Optical Character Recognition engines mainly focus on instrument printed text and Intelligent Character Recognition for hand written text. The proposed system uses the above mentioned key features with going one step further. One of the most impressive aspects of human visual processing is the ability to recognize objects despite severe degradations in image quality. The paper focuses on the recognition of impoverished handwritten documents...|$|E

