23|646|Public
5000|$|... #Article: Argus - <b>Audit</b> <b>Record</b> Generation and Utilization System ...|$|E
50|$|Second, the log {{can serve}} as an <b>audit</b> <b>record</b> for {{activity}} in a file system.|$|E
5000|$|To {{provide a}} well defined easy-to-parse <b>audit</b> <b>record</b> structure, {{as well as}} {{scalable}} and reliable storage for the logged data.|$|E
5000|$|Log {{management}} (LM) comprises {{an approach}} to dealing with large volumes of computer-generated log messages (also known as <b>audit</b> <b>records,</b> <b>audit</b> trails, event-logs, etc.). Log Management generally covers: ...|$|R
40|$|During {{forensic}} database investigations, <b>audit</b> <b>records</b> become a crucial evidential element; particularly, when certain events {{can be attributed}} to insider activity. However, traditional reactive forensic methods may not be suitable, urging the adoption of proactive approaches {{that can be used to}} ensure accountability through <b>audit</b> <b>records</b> whilst satisfying Chain of Custody (CoC) requirements for forensic purposes. In this paper, role segregation, evidence provenance, event timeliness and causality are considered as CoC requirements in order to implement a forensically ready architecture for the proactive generation, collection and preservation of database <b>audit</b> <b>records</b> that can be used as digital evidence for the investigation of insider activity. Our proposal implements triggers and stored procedures as forensic routines in order to build a vector-clockbased timeline for explaining causality in transactional events <b>recorded</b> in <b>audit</b> tables. We expect to encourage further work in the field of proactive digital forensics and forensic readiness; in particular, for justifying admissibility of <b>audit</b> <b>records</b> under CoC restrictions...|$|R
5000|$|While the Church of Scientology {{claims to}} protect the {{confidentiality}} of <b>auditing</b> <b>records,</b> the Church {{has a history of}} attacking and psychologically abusing former members using information culled from the records. For example, a December 16, 1969, a Guardian's Office order (G. O. 121669) by Mary Sue Hubbard explicitly authorized the use of <b>auditing</b> <b>records</b> for purposes of [...] "internal security." [...] Former members report having participated in combing through information obtained in auditing sessions to see if it could be used for smear campaigns against critics.|$|R
50|$|The Mercuri {{method is}} {{another name for}} a Voter Verified Paper Audit Trail—a {{modification}} to DRE (electronic) voting machines that provides for a physical (paper) <b>audit</b> <b>record</b> {{that may be used}} to verify the electronic vote count.|$|E
5000|$|Argus - the <b>Audit</b> <b>Record</b> Generation and Utilization System is {{the first}} {{implementation}} of network flow monitoring, and is an ongoing open source network flow monitor project. Started by Carter Bullard in 1984 at Georgia Tech, and developed for cyber security at Carnegie Mellon University in the early 1990s, Argus {{has been an important}} contributor to Internet cyber security technology over its 30 years. [...] http://resources.sei.cmu.edu/asset_files/Presentation/2014_017_001_90132.pdf.|$|E
5000|$|During {{the last}} few decades {{systematic}} <b>audit</b> <b>record</b> generation (also called audit event reporting) {{can only be described as}} ad hoc. Ironically, in the early days of mainframe and mini-computing with large scale, single-vendor, custom software systems from companies such as IBM and Hewlett Packard, auditing was considered a mission-critical function. Over the last thirty years, commercial off-the-shelf (COTS) software applications and components, and micro computers have gradually replaced custom software and hardware as more cost-effective business management solutions.… ...|$|E
40|$|A {{model of}} a {{real-time}} intrusion-detection expert system capable of detecting break-ins, penetrations, {{and other forms of}} computer abuse is described. The model is based on the hypothesis that security violations can be detected by monitoring a system's <b>audit</b> <b>records</b> for abnormal patterns of system usage. The model includes profiles for representing the behavior of subjects with respect to objects in terms of metrics and statistical models, and rules for acquiring knowledge about this behavior from <b>audit</b> <b>records</b> and for detecting anomalous behavior. The model is independent of any particular system, application environment, system vulnerability, or type of intrusion, thereby providing a framework for a general-purpose intrusion-detection expert system...|$|R
5000|$|FISMA (Federal Information Security Management Act of 2002). Stipulates federal {{requirements}} for managing government network systems and data. Log management guidelines include the generation, review, protection {{and retention of}} <b>audit</b> <b>records,</b> {{as well as the}} actions to be taken because of audit failure.|$|R
40|$|The {{original}} publication {{is available}} at www. springerlink. com???. Copyright Springer. [Full text {{of this article is}} not available in the UHRA]The contribution of this paper is an alternative mechanism for delegation, whereby users can share their credentials {{in such a way that}} it is difficult for the delegatee to re-use credentials of the delegator. An auditor in our protocol can link actions to individuals from the <b>audit</b> <b>records</b> but cannot forge <b>audit</b> <b>records.</b> We do not greatly restrict the choice of the delegation model semantics which can be adopted. Although the primary aim of our protocol is to provide support for anonymous delegation, it is still useful even if anonymity is not required at all, because of the ability to weaken trust assumptions...|$|R
50|$|A web-based {{software}} tool that enables easy, institution-specific modification of medication alerts using FDB MedKnowledge clinical modules based on clinician input, localized clinical experience, and other available evidence.The tool {{allows users to}} edit or turn off individual alerts, track all alert customizations and create an <b>audit</b> <b>record,</b> and view FDB updates {{in comparison with the}} user's own modifications. Users can seamlessly load the results of their modifications directly into their medication decision support system for immediate use in the workflow. The approach follows the normal update process.|$|E
50|$|This {{application}} {{is the core}} of IC+. Paper prescriptions are scanned so that the image can be retained electronically (a program called Walgreens VISION). The scanned image can then be sent to other Walgreens locations through DWB (Dynamic Workload Balancing) or POWER (Pharmacy Optimization Within Enterprise Re-Engineering) for various purposes (data entry or data review). The paper prescription is kept on file per local or state laws. In certain states, the computerized image serves as the legal copy of the prescription and the original paper hard copy becomes the Third Party <b>Audit</b> <b>Record</b> (3PAR).|$|E
50|$|In the U.S., the Harry Fox Agency, HFA, is the {{predominant}} licensor, collector and distributor for mechanical royalties, {{although there are}} several small competing organizations. For its operations, it charges about 6% as commission. HFA, like its counterparts in other countries, is a state-approved quasi-monopoly {{and is expected to}} act {{in the interests of the}} composers/songwriters - and thus obtains the right to <b>audit</b> <b>record</b> company sales. Additional third party administrators such as RightsFlow provide services to license, account and pay mechanical royalties and are growing. RightsFlow is paid by the licensees (artists, labels, distributors, online music services) and in turn does not extract a commission from the mechanical royalties paid out.|$|E
40|$|Intrusion {{detection}} is {{an essential}} component of critical infrastructure protection mechanisms. The traditional pure "knowledge engineering" process of building Intrusion Detection Systems (IDSs) is very slow, expensive, and error-prone. Current IDSs thus have limited extensibility in the face of changed or upgraded network configurations, and poor adaptability in the face of new attack methods. This thesis describes a novel framework, MADAM ID, for Mining Audit Data for Automated Models for Intrusion Detection. Classification rules are inductively learned from <b>audit</b> <b>records</b> and used as intrusion detection models. A critical requirement for the rules to be effective detection models is that an appropriate set of features need to be first constructed and included in the <b>audit</b> <b>records.</b> A key contribution of the thesis is thus in automatic "feature construction". Using MADAM ID, raw [...] ...|$|R
50|$|States {{may also}} work with {{adjacent}} states via interstate use tax agreements. These agreements allow states to exchange tax <b>audit</b> <b>records</b> from businesses that have shipped goods to {{out of state}} consumers. Reciprocal states will then use those records and send a tax bill including penalties and interest to the individual taxpayer.|$|R
5000|$|These {{codes are}} {{particularly}} important for U.S. Government financial, contracting, and <b>auditing</b> <b>records.</b> The codes are used across the entire Federal Government when ordering supplies from the supply system using MILSTRIP, FEDSTRIP, or DLMS procedures. [...] When assigned for activities outside the Department of Defense, the codes are {{often referred to as}} AACs.|$|R
30|$|Genetic {{algorithm}} for simplified {{security audit}} trials analysis (GASSATA) proposed by Me [45], {{introduced a new}} genetic algorithm for the misuse intrusion detection. This GASSATA constructed a two-dimensional matrix. First, axis of the matrix specified different attacks which had been known already. Second, the axis represents different kinds of events derived from audit trails. Therefore, this matrix actually represented the patterns of intrusions. Given an <b>audit</b> <b>record</b> being monitored which had information {{about the number of}} occurrences of every event, this method applied genetic algorithms to find the potential attacks appearing in the <b>audit</b> <b>record.</b> However, the assumption that the attacks are dependent only on events in this method restricts its generality. There are two steps involved in genetic algorithm: one was coding {{a solution to the problem}} with a string of bits and the other was finding a fitness function to test each individual of the population against evaluation criteria.|$|E
40|$|Considers International Cooperation Administration FY 58 {{foreign aid}} program proposal. Focuses on GAO {{economic}} aid program <b>audit.</b> <b>Record</b> is based on bibliographic data in CIS US Congressional Committee Hearings Index. Reuse except for individual research requires license from Congressional Information Service, Inc. Indexed in CIS US Congressional Committee Hearings Index Part VIConsiders International Cooperation Administration FY 58 {{foreign aid program}} proposal. Focuses on GAO economic aid program audit. Mode of access: Internet...|$|E
40|$|Abstract — The one of {{the most}} serious threats to {{computer}} security is the unauthorized intrusion into a computer system or network. Due to the rapid growth of the network application, new kinds of network attacks are emerging endlessly. The distributed intrusion detection systems detecting the intrusion activity spread over the network. A distributed intrusion detection system may need to deal with different <b>audit</b> <b>record</b> format. The mobile agents are captures the audit records and are best suited for remote information retrieval. The distributed intrusion detection system used mobile agents which defends a distributed collection of hosts supported by a LAN or internetwork...|$|E
50|$|OpenBSM is an {{open source}} {{implementation}} of Sun's Basic Security Module (BSM) Audit API and file format. BSM, which is a system used for auditing, describes a set of system call and library interfaces for managing <b>audit</b> <b>records</b> {{as well as a}} token stream file format that permits extensible and generalized audit trail processing.|$|R
50|$|Broome {{brought an}} {{application}} for an order permanently staying the prosecution based on section 35(3)(d) of the Constitution. It was averred that the unacceptable long delay in bringing the prosecution—the investigation was completed in 1997 and prosecution only lodged in 2004—and the loss of <b>audit</b> <b>records</b> impaired B's ability to prepare and mount a proper defence to the charges.|$|R
50|$|Most {{contemporary}} enterprise operating systems, including Microsoft Windows, Solaris, Mac OS X, and FreeBSD (via the TrustedBSD Project) support audit {{event logging}} due to requirements in the Common Criteria (and more historically, the Orange Book). Both FreeBSD and Mac OS X {{make use of}} the open source OpenBSM library and command suite to generate and process <b>audit</b> <b>records.</b>|$|R
40|$|As more {{services}} become web based {{and open to}} a larger audience, security is become a key concern. We discuss the idea of auditability of a transaction in the web application environment and how current logs may not capture minimum information required to have a complete <b>audit</b> <b>record.</b> We then propose {{a solution to this}} that involves a design as well as a tool that can be integrated into an existing web application to generate supplementary logs of database activity and user profile information with a focus on auditability of transactions. Finally we talk about results of tests that we conducted of this tool on an actual web application...|$|E
40|$|Trusted {{computing}} systems offer {{great promise}} in corporate and governmental applications. Their uptake {{has been very}} slow outside {{of the national security}} agencies for which they were developed, in part because they have been difficult and expensive to configure and use. Recent designs are easier to use, but some compliance and governance issues are unresolved. Our analysis suggests that cryptographic systems, in order to be trustworthy in corporate environments, must support an audit of their most important operations. At minimum the <b>audit</b> <b>record</b> must reveal the number of keys that have been generated, as well as the creation times and authorities of these keys. This record of cryptographic activity must be tamper-evident, and must be open to inspection by the IT staff of the corporate owners as well as by their independent auditors. Key Words: Trusted computing; Audit; Digital Rights Management. 1...|$|E
40|$|In {{this paper}} we discuss our {{research}} in developing general and systematic methods for intrusion detection. The key ideas are to use data mining techniques to discover consistent and useful patterns of system features that describe program and user behavior, and use the set of relevant system features to compute (inductively learned) classifiers that can recognize anomalies and known intrusions. Using experiments on the sendmail system call data and the network tcpdump data, we demonstrate that we can construct concise and accurate classifiers to detect anomalies. We provide an overview on two general data mining algorithms that we have implemented: the association rules algorithm and the frequent episodes algorithm. These algorithms {{can be used to}} compute the intra- and inter- <b>audit</b> <b>record</b> patterns, which are essential in describing program or user behavior. The discovered patterns can guide the audit data gathering process and facilitate feature selection. To meet the challenges of b [...] ...|$|E
50|$|Sampur {{was founded}} in 1732 by two retired soldiers, Stepan Pavlovich Pronin and Ivan Osipovich Dementyev, who were each granted ten desyatinas of land for service excellence. Sampur was first {{mentioned}} as a village in 1811 <b>Audit</b> <b>records.</b> In 1898, after a church was built, Sampur became a selo. The population currently resides around 104 people, as of June 1998.|$|R
40|$|We have {{developed}} a versatile tutor for intrusion detection on computer systems. Our tutor is intended for basic training of system administrators and security managers, analogously to an aircraft simulator: It exposes them to important but infrequent crisis situations that are good justifications for computer-assisted training simulators. Our IDTUTOR system has two parts: a simulator {{of a set of}} computer-system users that generates <b>audit</b> <b>records</b> for their activities, and an intelligent tutor that assists the student to remediate security problems apparent in the <b>audit</b> <b>records.</b> We modeled Unix systems since there is good documentation about intrusions on them and appropriate responses. The prototype of our system runs on Sun Sparcstations and is implemented in Quintus Prolog. We have used the tutor several times in our introductory Computer Security course; even with its preliminary version, posttests showed that students learned more about intrusion detection from it than from an equivalent amount of classroom lecture time...|$|R
50|$|Audit {{evidence}} is evidence obtained during a financial <b>audit</b> and <b>recorded</b> in the <b>audit</b> working papers.|$|R
40|$|A {{storage area}} network (SAN) is a {{high-speed}} and widely used special-purpose network that interconnects different kinds of storage devices with associated data servers {{on behalf of a}} larger network of users. SAN security is a specialized field dealing with issues related to the storage industry, it follows the same established principles found in all modern IT security. Therefore, it requires a continuous process of evaluating SAN environment’s current state of security against the constant changes brought about by innovations in technology and an increase in awareness concerning security issues. This paper is all about intrusion detection in {{storage area network}}, and more important, how to detect and prevent suspicious activity of an unauthorized user by maintaining an <b>audit</b> <b>record.</b> This paper proposes an approach to detect an intrusion attack by clustering (k-mean) (to identify groups of similar behaved object, i. e. malicious and non-malicious activity), classification technique (to classify all data into particular class categories) ...|$|E
40|$|An {{effective}} method for detecting computer misuse is the automatic auditing {{and analysis of}} on-line user activity. This activity {{is reflected in the}} system <b>audit</b> <b>record,</b> by changes in the vulnerability posture of the system configuration, and in other evidence found through active testing of the system. In 1989 we started developing an automatic misuse detection system for the Integrated Computing Network (ICN) at Los Alamos National Laboratory. Since 1990 this system has been operational, monitoring a variety of network systems and services. We call it the Network Anomaly Detection and Intrusion Reporter, or NADIR. During {{the last year and a}} half, we expanded NADIR to include processing of audit and activity records for the Cray UNICOS operating system. This new component is called the UNICOS Real-time NADIR, or UNICORN. UNICORN summarizes user activity and system configuration information in statistical profiles. In near real-time, it can compare current activity to historical profiles and test activity against expert rules that express our security policy and define improper or suspicious behavior. It reports suspicious behavior to security auditors and provides tools to aid in follow-up investigations. UNICORN is currently operational on four Crays in Los Alamos` main computing network, the ICN...|$|E
40|$|Abstract: Intrusion {{detection}} {{systems have}} proved to be an effective instrument for protecting computer and network resources. In addition to preventive security mechanisms (e. g. authentication, encryption, or access control) they provide an automatic detection of security violations. Some systems are able to reduce arising damage by the automatic execution of intrusion response actions. For host-based systems, the most effective detection approach is audit data analysis with signature detection methods. Because of the character of audit records, these approaches are post-mortem techniques. Thus, the success of an intrusion response activity essentially depends on the time difference between the real appearance and the detection of the particular security violation. At the Brandenburg University of Technology Cottbus we are currently working on HEIDI (High-Efficient Intrusion Detection Infrastructure), which is a new approach for solving this intrusion detection efficiency problem. HEIDI consists of modules and mechanisms, which are aimed to maximize the detection speed in distributed environments. The main types of modules are sensors for fast local <b>audit</b> <b>record</b> capturing and preprocessing, and agents for performing the detection of local and distributed attacks. Unlike any other known system, HEIDI applies a combined signature evaluation scheme with maximal local concentration of analysis functionality. This leads to a minimal need for inter-agent network traffic and delay. Additionally, for assuring a continuous operation, HEIDI uses an adaptive mechanism to compensate temporary overload situations, e. g. audit bursts. To avoid a stop of execution, the affected agents are able to delegate their analysis functionality to other agents temporarily. By combining sensors and agents, it is possible to get tailored hierarchical intrusion detection architectures for given target environments. The HEIDI prototype implementation is currently in progress...|$|E
40|$|Vols. for 1950 / 51 - 1959 / 60 {{include the}} report of <b>audit</b> of <b>records</b> of the InstituteTitle varies slightly"Letter from President, Gorgas Memorial Institute of Tropical and Preventive Medicine, inc. "Issued in the Congressional series as House documentVol. numbers irregular: v. 32 repeatedVols. for 1950 / 51 - 1959 / 60 include {{the report of}} <b>audit</b> of <b>records</b> of the InstituteMode of access: Internet...|$|R
50|$|OpenBSM {{includes}} system include files {{appropriate for}} inclusion in an operating system implementation of Audit, libbsm, an implementation of the BSM library interfaces for generating, parsing, and managing <b>audit</b> <b>records,</b> auditreduce and praudit, audit reduction and printing tools, API documentation, and sample /etc configuration files. Works in progress include extensions to the libbsm API to support easier audit trail analysis, including a pattern matching library.|$|R
5000|$|In {{a public}} records request, Harris {{discovered}} that counterfeit <b>audit</b> <b>records</b> had been provided to Black Box Voting. [...] Harris subsequently found {{some of the}} original records in the garbage at a Volusia County warehouse. Florida Fair Elections Coalition founder Susan Pynchon and Broward Election Reform Coalition founder Ellen Brodsky found more original poll tapes in the garbage behind the Volusia County elections office.|$|R
