0|10000|Public
40|$|Resource {{allocation}} involves assigning <b>the</b> <b>resources</b> to <b>the</b> <b>resource</b> users. Where <b>the</b> <b>resources</b> and <b>the</b> <b>resource</b> users do {{not change}} with time, <b>the</b> <b>resource</b> allocation problem can be solved as a scheduling problem. Where <b>the</b> <b>resources</b> and <b>the</b> <b>resource</b> users change with time then some different allocation mechanisms are needed. In this paper an environment is considered in which <b>the</b> <b>resources</b> emerge and <b>the</b> <b>resource</b> requests also emerge unpredictably as time goes. <b>The</b> <b>resources</b> emerge with different capacities {{and in the same}} way <b>the</b> <b>resource</b> requests also emerge from the users with different demands as time goes. In this dynamic environment <b>the</b> <b>resource</b> allocation performance of the first price sealed bid and the Vickrey auctions are explored and compared. The system allocation performance is measured using the number of <b>the</b> emerging <b>resource</b> provisions and <b>the</b> <b>resource</b> requests that get matched. The simulation results show that there is no performance difference between the two mechanisms apart {{from the fact that the}} Auctioneer’s earnings are higher for the first price sealed bid auction. 1...|$|R
5000|$|<b>The</b> <b>resource</b> ID, <b>the</b> offset of <b>the</b> <b>resource</b> name, <b>the</b> <b>resource</b> properties, and <b>the</b> offset of {{the data}} from the start {{position}} of <b>the</b> <b>resource</b> data is found.|$|R
50|$|The {{economic}} rent obtained is an abnormal rent, {{often referred to}} as resource rent, since it generates from a situation where <b>the</b> <b>resource</b> owner has open access to <b>the</b> <b>resource</b> for free. In other words, <b>the</b> <b>resource</b> rent is <b>the</b> <b>resource</b> royalty or resource's net price (price received from selling <b>the</b> <b>resource</b> minus costs. In this case costs are zero). <b>The</b> <b>resource</b> rent therefore equals the shadow value of <b>the</b> natural <b>resource</b> or natural capital.|$|R
5000|$|IESR {{contains}} {{information about}} <b>the</b> <b>resources</b> themselves, technical details {{about how to}} access <b>the</b> <b>resources,</b> and contact details for <b>the</b> <b>resource</b> providers.|$|R
50|$|To use SRI, {{a website}} author wishing {{to include a}} {{resource}} from a third party can specify a cryptographic hash of <b>the</b> <b>resource</b> {{in addition to the}} location of <b>the</b> <b>resource.</b> Browsers fetching <b>the</b> <b>resource</b> can then compare the hash provided by the website author with the hash computed from <b>the</b> <b>resource.</b> If <b>the</b> hashes don't match, <b>the</b> <b>resource</b> is discarded.|$|R
30|$|<b>The</b> <b>resource</b> {{management}} refers here to all <b>the</b> {{operations on}} <b>resources</b> {{once they are}} provisioned. <b>The</b> <b>resource</b> management starts with the accepting of a proposal. Then, <b>the</b> <b>resource</b> classes {{have to be prepared}} by obtaining the needed credentials and by performing any required step in order for <b>the</b> <b>resources</b> of that class to be created.|$|R
50|$|Management {{of natural}} {{resources}} involves identifying who {{has the right to}} use <b>the</b> <b>resources</b> and who does not for defining the boundaries of <b>the</b> <b>resource.</b> <b>The</b> <b>resources</b> are managed by the users according to the rules governing of when and how <b>the</b> <b>resource</b> is used depending on local condition.|$|R
50|$|When it is {{too costly}} to exclude some people from access to an {{environmental}} <b>resource,</b> <b>the</b> <b>resource</b> is either called a common property resource (when there is rivalry for <b>the</b> <b>resource,</b> such that one person's use of <b>the</b> <b>resource</b> reduces others' opportunity to use <b>the</b> <b>resource)</b> or a public good (when use of <b>the</b> <b>resource</b> is non-rivalrous). In either case of non-exclusion, market allocation {{is likely to be}} inefficient.|$|R
40|$|The {{specific}} {{features of the}} assessment of <b>the</b> <b>resource</b> potential of an enterprise are defined. It {{is based on the}} hypothesis of <b>the</b> <b>resource</b> transformation into <b>the</b> economic goods aimed at satisfaction of needs and possibility of further development; the valuation principles are formulated. The sequence of the assessment stages for <b>the</b> <b>resource</b> potential of an enterprise development is drawn out. The list of the key factors, that predetermine and control the formation and realization of <b>the</b> <b>resource</b> potential of <b>the</b> development of an enterprise, is formed. A methodical approach to the assessment of <b>the</b> <b>resource</b> potential of <b>the</b> development of an enterprise is suggested. The method is based on the model of qualitative relation of the parameters of <b>the</b> <b>resource</b> provision, <b>the</b> <b>resource</b> potential and <b>the</b> <b>resource</b> potential of <b>the</b> development of an enterprise. ...|$|R
40|$|I {{extend a}} two-country trade model with various {{resource}} management regimes developed by Brander and Taylor (1997 b) by allowing <b>the</b> relative <b>resource</b> abundance to differ between two coun-tries. I show that when differences in <b>the</b> <b>resource</b> abundance are small, <b>the</b> relative <b>resource</b> abun-dance determines trade patterns if the relative demand for <b>the</b> <b>resource</b> good is medium. Otherwise, differences in <b>the</b> <b>resource</b> management regime determine trade patterns. With large differences in <b>the</b> <b>resource</b> abundance, <b>the</b> relative <b>resource</b> abundance determines trade patterns unless the re-source abundant {{country is in}} the open-access regime and the relative demand for <b>the</b> <b>resource</b> good is high. Welfare effects of trade liberalization are also examined...|$|R
5000|$|<b>The</b> <b>resource</b> manager failed or {{lost track}} of <b>the</b> <b>resource</b> stated ...|$|R
50|$|There {{are several}} key {{concepts}} in <b>the</b> LC4MP: total <b>resources,</b> resources allocated, resources required, resources remaining, and resources available. Total <b>resources</b> refer to <b>the</b> total <b>resources</b> in <b>the</b> <b>resource</b> pool. Resources allocated refer to <b>the</b> <b>resources</b> {{that are actually}} available for a processing task. <b>The</b> <b>resource</b> allocated to a task may be equivalent to <b>the</b> total <b>resources,</b> but probably is not. <b>Resources</b> required are <b>the</b> amount of <b>resources</b> necessary to complete a task (See Total-Allocated-Required Resources.). Resources remaining refer {{to the difference between}} total resources and resources required. <b>Resources</b> available are <b>the</b> difference between <b>the</b> <b>resources</b> allocated and <b>the</b> <b>resources</b> required. Resources remaining and resources available may be the same if total resources are equivalent to resources allocated, but this is unlikely the case. See the overall picture of mental resources in information processing.|$|R
5000|$|Mutual exclusion: <b>The</b> <b>resources</b> {{involved}} must be unshareable; otherwise, {{the processes}} {{would not be}} prevented from using <b>the</b> <b>resource</b> when necessary. Only one process can use <b>the</b> <b>resource</b> at any given instant of time.|$|R
40|$|Abstract—Cloud {{computing}} {{has become}} a popular topic in many areas. It can publish various resources offered {{by a number of}} vendors as services. However, there is no valid technology to manage <b>the</b> <b>resources</b> or services. In this paper, the relations among <b>the</b> <b>resources</b> are classified into four classes: the relations among <b>the</b> <b>resources</b> having <b>the</b> same character, the relations among the variable part and invariable part of a service, the relations among <b>the</b> <b>resources</b> having <b>the</b> same interaction manner, and the relations among <b>the</b> <b>resources</b> that are incompatible but have to interoperate. Then four patterns are proposed to manage <b>the</b> <b>resources</b> in cloud. <b>The</b> motivation, condition, structure, generation and consequence are presented for each pattern. They can be used to improve the availability, scalability and reusability of <b>the</b> <b>resources</b> provided. Index Terms—Automatic resource management, Desig...|$|R
3000|$|... as <b>the</b> {{algorithm}} performs <b>resource</b> allocation {{and scheduling}} {{by considering the}} set of all <b>the</b> <b>resource</b> slots provided by all <b>the</b> <b>resources</b> in R. Note that how the capacity of <b>the</b> <b>resources,</b> as reflected by their number of resource slots, is distributed among <b>the</b> individual <b>resources</b> in <b>the</b> system does not affect performance because matchmaking and scheduling are performed on <b>the</b> <b>resource</b> slots, {{each of which has}} an equal speed of execution. As a result, system performance does not change if c [...]...|$|R
3000|$|... are <b>the</b> <b>resources</b> used by <b>the</b> RSs in {{the second}} step, and S 2 are <b>the</b> <b>resources</b> {{available}} for <b>the</b> RSs {{in the second}} step. Equation (5) checks <b>the</b> <b>resource</b> constraint for <b>the</b> Hard FFR and the Soft FFR, where C 1 are <b>the</b> <b>resources</b> available to <b>the</b> BS in the first step within a basic service time, and C 2 are <b>the</b> <b>resources</b> available to RSs in the second step within a basic service time. Therefore, <b>the</b> minimum <b>resource</b> consumption and <b>the</b> maximum number of video layers Q for all users can be determined by Equations (1) (5).|$|R
5000|$|... <b>the</b> <b>resource</b> view {{describes}} <b>the</b> <b>resources</b> {{and their}} relations to functional and control structures; and ...|$|R
40|$|<b>The</b> <b>resource</b> database. - {{introduction}} to <b>the</b> <b>resource</b> database. - <b>the</b> application default files (names and classes). - <b>the</b> <b>resource</b> manager's matching algorithm. - loading <b>the</b> <b>resource</b> database. - <b>the</b> command line options. - retrieving application <b>resource</b> from <b>the</b> database. Including user defined widgets in UIL. - steps needed in UIL. - the UIL include file. - a UIL example. - steps {{needed in the}} C code...|$|R
50|$|Both {{cases are}} {{commonly}} found, and conventions differ. Having objects that use resources indirectly {{be responsible for}} <b>the</b> <b>resource</b> (composition) provides encapsulation (one only needs the object that clients use, without separate objects for <b>the</b> <b>resources),</b> but results in considerable complexity, particularly when a resource is shared by multiple objects or objects have complex relationships. If only the object that directly uses <b>the</b> <b>resource</b> is responsible for <b>the</b> <b>resource</b> (aggregation), relationships between other objects that use <b>the</b> <b>resources</b> can be ignored, {{but there is no}} encapsulation (beyond the directly using object): <b>the</b> <b>resource</b> must be managed directly, and might not be available to the indirectly using object (if it has been released separately).|$|R
40|$|The {{state of}} <b>the</b> <b>resources</b> at a {{destination}} in Grid computing over OBS architecture (GoOBS) may change between a task’s {{selection of a}} destination and its arrival at the destination. These changes in the availability of <b>the</b> <b>resources</b> requested at <b>the</b> destination may lead to blocking of tasks, and thus increase <b>the</b> <b>resource</b> blocking rate. In this paper, we investigate <b>the</b> <b>resource</b> scheduling problem in GoOBS. Our objective is to minimize <b>the</b> <b>resource</b> blocking rate by containing {{the impact of the}} changes in the availability of <b>the</b> <b>resources</b> at a destination. We propose a non-selfish destination selection paradigm to minimize <b>the</b> <b>resource</b> blocking rate. <b>The</b> selection of a destination by a request is called non-selfish, if the selected destination has sufficient resources available to simultaneously process one or more additional requests. Extensive simulations were performed to validate the effectiveness of the heuristics based on the non-selfish destination selection paradigm. Among the proposed heuristics, the NFFD heuristic is most effective in minimizing <b>the</b> <b>resource</b> blocking rate. Compared to the best existing approach, the NFFD heuristic reduces <b>the</b> <b>resource</b> blocking rate by 21 % to 73 % in our experiments...|$|R
3000|$|..., where i is <b>the</b> type of <b>resource</b> (CPU (1), memory (2), {{bandwidth}} (3) or {{disk space}} (4) and j is <b>the</b> <b>resources</b> allocated to <b>the</b> instantiation request. <b>The</b> <b>resources</b> to be allocated to each instantiation request are identified using <b>the</b> <b>resource</b> computation selection, crossover and mutation methods described in section 5.4.|$|R
30|$|<b>The</b> <b>Resource</b> Allocation Manager (RAM) {{coordinates}} all {{the steps}} involved in <b>the</b> <b>resource</b> allocation process (i.e. negotiation, instantiation, allocation, and binding) {{and consists of}} the following components: 1) <b>The</b> <b>Resource</b> Negotiation module handles and coordinates <b>the</b> <b>resource</b> negotiation process with a given virtual layer. 2) <b>The</b> <b>Resource</b> Instantiation and Configuration module {{is responsible for the}} “slicing” of physical <b>resources.</b> It handles <b>the</b> instantiation request and enables the creation and configuration of virtual <b>resources.</b> 3) <b>The</b> Binding and Usage module maps a virtual resource to a physical one (i.e. maps resources to requests), reserves <b>the</b> allocated <b>resources,</b> and triggers <b>the</b> monitoring process for dynamic resource management purposes.|$|R
40|$|<b>The</b> <b>resources</b> in a grid are {{distributed}} in multiple autonomic domains. Hence, it’s always a time consuming process to perform <b>the</b> <b>resource</b> co-allocation in grids especially for parallel jobs {{due to the}} diversity of local domain policies and <b>the</b> dynamic <b>resource</b> workloads. Even worse, <b>the</b> <b>resource</b> competing among multiple parallel jobs may result in resource allocation deadlock. In this paper, a novel synchronized resource co-allocation model for cross-domain parallel jobs, called virtual job model (VJM), is proposed. VJM uses virtual jobs to co-reserve <b>the</b> earliest available <b>resources</b> for real parallel jobs with considering <b>the</b> local <b>resource</b> policies and <b>the</b> current <b>resource</b> availability in multiple domains. The co-reservation algorithm implemented in VJM is not only able to detect potentail deadlocks, but able to relieve <b>the</b> <b>resource</b> competing via <b>the</b> <b>resource</b> reorganization mechanism. At last, we demonstrate that VJM is able to reduce the time cost of resource co-allocation significantly via experiments...|$|R
30|$|Meanwhile, the job {{submitter}} {{asks the}} task controller {{in the task}} manager to deploy the task onto each allocated worker node through the task agent and then execute it through the task executor in the worker layer automatically. <b>The</b> <b>resource</b> monitor collects information {{about the status of}} nodes through <b>the</b> <b>resource</b> controller interacting with <b>the</b> <b>resource</b> status monitor and transfers the current status to users via <b>the</b> <b>resource</b> monitoring service in the user interface layer.|$|R
40|$|<b>The</b> <b>resource</b> based {{radical change}} from {{semiconductor}} manufacturing into the artificial plant factory is studied by understanding <b>the</b> <b>resource</b> capabilities in each industry separately. Due {{to lack of}} scientific research in <b>the</b> <b>resource</b> re-utilization process, <b>the</b> phenomenon is explored by studying the role of three different resources from a holistic view. By a qualitative research method, the motivating reasons for <b>the</b> change, <b>the</b> <b>resources</b> involved in <b>the</b> change, duration, and <b>the</b> <b>resource</b> based information were studied. The collected data are analysed under three different categories such as knowledge, infrastructure, and production technology. The identified problems were <b>the</b> unsatisfied <b>resource</b> capabilities, which have to be solved during the change process. As {{a result of the}} analysis, a framework is developed by combining all <b>the</b> three <b>resources</b> from a holistic view, in the change process. The framework is structured in three separate phases and inferred to support <b>the</b> <b>resource</b> re-utilization in <b>the</b> radical change process. ...|$|R
3000|$|Traffic parameters: <b>The</b> <b>resource</b> attempt arrivals are a Poisson process [22] {{with the}} rate λ. <b>The</b> <b>resource</b> holding time T [...]...|$|R
30|$|Resource {{provisioning}} {{is defined}} by the authors as the stage to identify <b>the</b> adequate <b>resources</b> for a particular workload based on quality of service (QoS) requirements defined by cloud consumers. This stage includes <b>the</b> discovery of <b>resources</b> and also their selection for executing a workload. The provisioning of appropriate resources to cloud workloads depends on the QoS requirements of cloud applications [21]. In this sense, the cloud consumer interacts with the cloud via a cloud portal and submits the QoS requirements of the workload after authentication. <b>The</b> <b>Resource</b> Information Centre (RIC) contains the information about all <b>the</b> <b>resources</b> in <b>the</b> <b>resource</b> pool and obtains the result based on requirement of workload as specified by user. The user requirements and the information provided by the RIC are used by <b>the</b> <b>Resource</b> Provisioning Agent (RPA) to check <b>the</b> available <b>resources.</b> After provisioning of <b>resources</b> <b>the</b> workloads are submitted to <b>the</b> <b>resource</b> scheduler. Finally, <b>the</b> Workload <b>Resource</b> Manager (WRM) sends <b>the</b> provisioning results (<b>resource</b> information) to <b>the</b> RPA, which forwards these results to the cloud user.|$|R
5000|$|Synchronous Event Demultiplexer: Uses {{an event}} loop to block on all <b>resources.</b> <b>The</b> {{demultiplexer}} sends <b>the</b> <b>resource</b> to <b>the</b> dispatcher {{when it is}} possible to start a synchronous operation on a resource without blocking (Example: a synchronous call to [...] will block if there is no data to read. The demultiplexer uses [...] on <b>the</b> <b>resource,</b> which blocks until <b>the</b> <b>resource</b> is available for reading. In this case, a synchronous call to [...] won't block, and the demultiplexer can send <b>the</b> <b>resource</b> to <b>the</b> dispatcher.) ...|$|R
30|$|They {{include the}} {{geographical}} position constraints of virtual nodes, <b>the</b> <b>resource</b> demands of virtual links, and <b>the</b> <b>resource</b> demands of virtual nodes.|$|R
30|$|The {{analysis}} revealed that the participants applied three perceptions about the node {{to decide whether to}} connect to it: self-efficacy, eligibility of <b>the</b> <b>resource,</b> and feasibility of <b>the</b> <b>resource.</b> Self-efficacy was shown to be important to the inclusion of oneself as a potential resource while eligibility and feasibility of <b>the</b> <b>resource</b> govern whether one would contact external <b>resources</b> or not. <b>The</b> data also showed that feasibility of <b>the</b> <b>resource</b> is considered as a prerequisite to its eligibility.|$|R
25|$|That <b>the</b> <b>resources</b> sold are {{perishable}} (there is a {{time limit}} to selling <b>the</b> <b>resources,</b> after which they cease to be of value).|$|R
50|$|In February 2009 the National-led {{government}} announced <b>the</b> <b>Resource</b> Management (Simplify & Streamline) Amendment Bill {{which seeks to}} improve <b>the</b> <b>resource</b> consent process.|$|R
5000|$|That <b>the</b> <b>resources</b> sold are {{perishable}} (there is a {{time limit}} to selling <b>the</b> <b>resources,</b> after which they cease to be of value).|$|R
50|$|<b>The</b> <b>resources</b> tax is a {{severance}} {{tax that}} applies to the extraction of natural <b>resources.</b> <b>The</b> amount of the tax {{is based on the}} taxable value of <b>the</b> severed <b>resource.</b> <b>The</b> tax on potash extraction is 0.5% of <b>the</b> <b>resource</b> value; molybdenum extraction is taxed at 0.125%; and all other extracted resources are taxed at 0.75%.|$|R
40|$|A {{resource}} analyzer {{selects a}} resource (e. g., document) from a grouping of <b>resources.</b> <b>The</b> grouping of <b>resources</b> {{can be any}} type of social tagging system used for information retrieval. <b>The</b> selected <b>resource</b> has an assigned uncontrolled tag and an assigned controlled tag. The controlled tag is a term derived from a controlled vocabulary of terms. Having selected <b>the</b> <b>resource</b> for analyzing, <b>the</b> <b>resource</b> analyzer identifies a first set of <b>resources</b> in <b>the</b> grouping of <b>resources</b> having also been assigned a same value as the uncontrolled tag as <b>the</b> selected <b>resource.</b> Similarly, <b>the</b> <b>resource</b> analyzer identifies {{a second set of}} <b>resources</b> in <b>the</b> grouping of <b>resources</b> having also been assigned a same value as the controlled tag. With this information, <b>the</b> <b>resource</b> analyzer then produces a comparison result indicative of a similarity between the first set of <b>resources</b> and <b>the</b> second set of resources...|$|R
40|$|This {{document}} is intended as an introductory guide to using <b>the</b> <b>Resource</b> Manager. <b>The</b> <b>Resource</b> Manager {{is a system}} that was developed to handle all the facilities associated with printing and batch processing on a large mainframe computer. <b>The</b> <b>Resource</b> Manager replaced HASP as the MTS spooling and batch execution monitor program. ...|$|R
