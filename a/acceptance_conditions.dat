148|255|Public
25|$|For each single pushdown {{automaton}} {{these two}} languages {{need to have}} no relation: they may be equal but usually {{this is not the}} case. A specification of the automaton should also include the intended mode of acceptance. Taken over all pushdown automata both <b>acceptance</b> <b>conditions</b> define the same family of languages.|$|E
50|$|<b>Acceptance</b> <b>conditions</b> may be {{infinite}} sets of omega words. However, people mostly study <b>acceptance</b> <b>conditions</b> {{that are}} finitely representable. The following lists {{a variety of}} popular <b>acceptance</b> <b>conditions.</b>|$|E
50|$|For each single pushdown {{automaton}} {{these two}} languages {{need to have}} no relation: they may be equal but usually {{this is not the}} case. A specification of the automaton should also include the intended mode of acceptance. Taken over all pushdown automata both <b>acceptance</b> <b>conditions</b> define the same family of languages.|$|E
40|$|International audienceThe Rabin {{index of}} a {{rational}} language of infinite words {{given by a}} parity automaton with n states is computable in time O(n(2) c) where c is the cardinality of the alphabet. The number of values used by a parity <b>acceptance</b> <b>condition</b> is always greater than the Rabin index and conversely, the <b>acceptance</b> <b>condition</b> of a parity automaton can always be replaced by an equivalent <b>acceptance</b> <b>condition</b> whose number of used values is exactly the Rabin index. This new <b>acceptance</b> <b>condition</b> can also be computed in time O(n(2) C) ...|$|R
40|$|AbstractWe define {{context-free}} grammars with Büchi <b>acceptance</b> <b>condition</b> generating {{languages of}} countable words. We establish several closure properties and decidability {{results for the}} class of Büchi context-free languages generated by these grammars. We also define context-free grammars with Müller <b>acceptance</b> <b>condition</b> and {{show that there is}} a language generated by a grammar with Müller <b>acceptance</b> <b>condition</b> which is not a Büchi context-free language...|$|R
5000|$|Similarly, the Rabin {{conditions}} [...] can be emulated by {{constructing the}} acceptance {{set in the}} Muller automata as all sets in [...] which satisfy , for some j. Note that this covers the case of Parity automaton too, as the Parity <b>acceptance</b> <b>condition</b> can be expressed as Rabin <b>acceptance</b> <b>condition</b> easily.|$|R
50|$|In automata theory, {{a branch}} of {{theoretical}} computer science, an ω-automaton (or stream automaton) is a variation of finite automatons that runs on infinite, rather than finite, strings as input. Since ω-automata do not stop, they {{have a variety of}} <b>acceptance</b> <b>conditions</b> rather than simply a set of accepting states.|$|E
50|$|Before {{discussing}} the list, let's make the following observation. In {{the case of}} infinitely running systems, one is often interested in whether certain behavior is repeated infinitely often. For example, if a network card receives infinitely many ping requests, then it may fail to respond {{to some of the}} requests but should respond to an infinite subset of received ping requests. This motivates the following definition: For any run ρ, let Inf(ρ) be the set of states that occur infinitely often in ρ. This notion of certain states being visited infinitely often will be helpful in defining the following <b>acceptance</b> <b>conditions.</b>|$|E
50|$|In May 2014, Wong made {{an offer}} of to acquire Techfast Holdings. The offer was {{submitted}} {{on the same day}} that Techfast held its AGM raising speculation that the offer may turn hostile. Wong had previously built a 14.45% stake in the company. TechFast noted its listing status is expected to be maintained should Wong's offer be accepted. This offer has been perceived as a takeover, an attempt by Wong to control three public-listed companies. Techfast Holdings's conditional voluntary takeover offer by Wong to acquire all the remaining shares in the company could only gather 22.48% of the share capital in Techfast with the offer tabled. The offer failed to meet the <b>acceptance</b> <b>conditions</b> within the proposed timeline.|$|E
5000|$|The Büchi <b>acceptance</b> <b>condition</b> is the {{complement}} of the co-Büchi acceptance condition: ...|$|R
5000|$|... {F1,...,Fn} is the <b>acceptance</b> <b>condition,</b> {{where for}} each 1≤i≤n, Fi ⊆ Q [...]|$|R
5000|$|A Büchi {{automaton}} is an ω-automaton A {{that uses}} the following <b>acceptance</b> <b>condition,</b> for some subset F of Q: ...|$|R
50|$|Nowadays, it's {{yet unknown}} {{the cause of}} the {{displacement}} of some Britons contingents to the north coast of Galicia and their reception by the Galician-Suevi, some authors show a possible military pact, or just an <b>acceptance</b> <b>conditions,</b> currently unknown. Organized in an important territory, introduced its own religious-Christian organization, actually bit different, and founded a bishopric itself that appears quoted in Parochiale Suevorum or Divisio Teodomiri, a document that shows the ecclesiastical organization of the kingdom of Galicia {{at the time of the}} monarchy sueva dated among 572 and 573. Its religious integration was complete, having watched his representative, - called Maeloc - to the Second Royal Council of Braga in 572.|$|E
50|$|ASTM F1577 is a Standard Test Method for Detention Locks for Swinging Doors. This {{standard}} {{was created by}} the American Standard for Testing and Materials (ASTM). ASTM International which was funded in 1898, is an international standards developing organization that develops and publishes standards {{for a wide range of}} materials, products, systems, and services. This {{standard was}} published by ASTM F33 which is a committee specializes about detention and correctional facilities. FM 33 has published 14 standards in this area. This standard deals with the equipment, procedures, and <b>acceptance</b> <b>conditions</b> for determining the normal operational performance and the performance characteristics under several conditions of locks used in swinging door assemblies into several organizations including detention and correctional institutions. Several features are not considered such as both installation and maintenance conditions.|$|E
50|$|ASTM F 1915 is a {{standard}} test method for glazing for detention facilities. This standard {{was created by the}} American Standard for Testing and Materials (ASTM). ASTM International which was funded in 1898, is an international standards developing organization that develops and publishes standards {{for a wide range of}} materials, products, systems, and services. This standard was published by ASTM F33 which is a committee specializes about detention and correctional facilities. FM 33 has published 14 standards in this area. This standard deals with the equipment, procedures, and <b>acceptance</b> <b>conditions</b> for determining the normal operational performance and the performance characteristics under several conditions of glazing for detention facilities into several organizations including detention and correctional institutions. Several features are not considered such as both installation and maintenance conditions. This test enables to help ensure that glazing used for windows and doors perform against intrusion, avoid that intruders penetrate in unauthorized access and to resist common types of vandalism into an organisation.|$|E
50|$|In automata theory, a Muller {{automaton}} {{is a type}} of an ω-automaton. The <b>acceptance</b> <b>condition</b> separates a Muller automaton {{from other}} ω-automata.The Muller automata is defined using Muller <b>acceptance</b> <b>condition,</b> i.e. the set of all states visited infinitely often must be an element of the acceptance set. Both deterministic and non-deterministic Muller automata recognize the ω-regular languages. They are named after David E. Muller an American mathematician and computer scientist, who invented them in 1963.|$|R
5000|$|A [...] is an ω-automaton A {{that uses}} the {{following}} <b>acceptance</b> <b>condition,</b> for some set Ω of pairs (Ei,Fi) of sets of states: ...|$|R
3000|$|... is the <b>acceptance</b> <b>condition.</b> A accepts exactly those runs {{in which}} {{at least one of}} the {{infinitely}} often occurring states is in F [...]...|$|R
50|$|The Kriegsakademie (War Academy) was {{originally}} {{established by the}} military {{as a kind of}} university which encouraged higher education and military training in the army. In later times it narrowed curriculum at the expense of general education subjects to more and more on the military sciences. The Kriegsakademie was open in principle to each officer, as participation was based on voluntary reporting. <b>Acceptance</b> <b>conditions</b> were based on a three-year prior service record, good health, in addition to being knowledgeable with scientific endeavors, special equipment, and skills were needed and pass the entrance exam. Before the applicant could take the required entrance exam, had to confirm with the regimental commander the character and professional competence of the aspirant. This process was also often used for social selection (good old Prussian replacement desired circles- or good old boys). In the Regiment, preparations were made for the entrance examination. As a rule, only graduates of the academy transferred to the General Staff, or could even exercise the Magisterium. Subjects were all military science, languages, and general historical and mathematical sciences.|$|E
40|$|In {{this paper}} we {{investigate}} the affect of various <b>acceptance</b> <b>conditions</b> on recogniser membrane systems without dissolution. We demonstrate that two particular <b>acceptance</b> <b>conditions</b> (one easier to program, the other easier to prove correctness) both characterise the same complexity class, NL. We also find that by restricting the <b>acceptance</b> <b>conditions</b> we obtain a characterisation of L. We obtain these results by investigating the connectivity properties of dependency graphs that model membrane system computations. ...|$|E
40|$|In {{this paper}} we revisit Safra's determinization constructions for automata on {{infinite}} words. We show how to construct deterministic automata with fewer states and, most importantly, parity <b>acceptance</b> <b>conditions.</b> Determinization {{is used in}} numerous applications, such as reasoning about tree automata, satisfiability of CTL*, and realizability and synthesis of logical specifications. The upper bounds for all these applications are reduced by using the smaller deterministic automata produced by our construction. In addition, the parity <b>acceptance</b> <b>conditions</b> allows to use more efficient algorithms (when compared to handling Rabin or Streett <b>acceptance</b> <b>conditions).</b> Comment: 21 pages. To appear in Logical Methods in Computer Science (LMCS...|$|E
5000|$|A Muller {{automaton}} is an ω-automaton A {{that uses}} the following <b>acceptance</b> <b>condition,</b> for a subset F of P(Q) (the power set of Q): ...|$|R
5000|$|A Streett {{automaton}} is an ω-automaton A {{that uses}} the following <b>acceptance</b> <b>condition,</b> for some set Ω of pairs (Ei,Fi) of sets of states: ...|$|R
5000|$|F⊆Q is the <b>acceptance</b> <b>condition.</b> A accepts exactly those runs {{in which}} {{at least one of}} the {{infinitely}} often occurring states is in F.|$|R
40|$|AbstractAlternating finite automata on ω-words are {{introduced}} {{as an extension}} of nondeterministic finite automata which process infinite sequences of symbols. The classes of ω-languages defined by alternating finite automata are investigated and characterized under four types of <b>acceptance</b> <b>conditions.</b> It is shown that for one type of acceptance condition alternation increases the power in comparison with nondeterminism and for other three <b>acceptance</b> <b>conditions</b> nondeterministic finite automata on ω-words have the same power as alternating ones...|$|E
40|$|Abstract. In every {{negotiation}} with a deadline, {{one of the}} negotiating parties has to accept an offer to avoid a break off. A break off is usually an undesirable out-come for both parties, therefore {{it is important that}} a negotiator employs a proficient mechanism to decide under which conditions to accept. When designing such con-ditions one is faced with the acceptance dilemma: accepting the current offer may be suboptimal, as better offers may still be presented. On the other hand, accepting too late may prevent an agreement from being reached, resulting in a break off with no gain for either party. Motivated by the challenges of bilateral negotiations between automated agents and by the results and insights of the automated negotiating agents competition (ANAC), we classify and compare state-of-the-art generic <b>acceptance</b> <b>conditions.</b> We focus on decoupled <b>acceptance</b> <b>conditions,</b> i. e. conditions that do not depend on the bidding strategy that is used. We performed extensive experiments to compare the performance of <b>acceptance</b> <b>conditions</b> in combination with a broad range of bidding strategies and negotiation domains. Furthermore we propose new <b>acceptance</b> <b>conditions</b> and we demonstrate that they outperform the other conditions that we study. In particular, it is shown that they outperform the standard acceptance condition of comparing the current offer with the offer the agent is ready to send out. We also provide insight in to why some conditions work better than others and investigate correlations between the properties of the negotiation environment and the efficacy of <b>acceptance</b> <b>conditions.</b> ...|$|E
40|$|Emptiness {{check is}} a key {{operation}} in the automata-theoretic approach to LTL verification. However, it is usually done on Buchi automata with a single acceptance condition. We review existing on-the-fly emptiness-check algorithms for generalized Buchi automata (i. e., with multiple <b>acceptance</b> <b>conditions)</b> and show how they compete favorably with emptiness-checks for degeneralized automata, especially in presence of weak fairness assumptions. We also introduce a new emptiness-check algorithm, some heuristics to improve existing checks, and propose algorithms to compute accepting runs {{in the case of}} multiple <b>acceptance</b> <b>conditions...</b>|$|E
40|$|We {{introduce}} a new translation from linear temporal logic (LTL) to deterministic Emerson-Lei automata, which are omega-automata with a Muller <b>acceptance</b> <b>condition</b> symbolically expressed as a Boolean formula. The richer <b>acceptance</b> <b>condition</b> structure allows the shift of complexity from the state space to the <b>acceptance</b> <b>condition.</b> Conceptually the construction is an enhanced product construction that exploits knowledge of its components {{to reduce the number}} of states. We identify two fragments of LTL, for which one can easily construct deterministic automata and show how knowledge of these components can reduce the number of states. We extend this idea to a general LTL framework, where we can use arbitrary LTL to deterministic automata translators for parts of formulas outside the mentioned fragments. Further, we show succinctness of the translation compared to existing construction. The construction is implemented in the tool Delag, which we evaluate on several benchmarks of LTL formulas and probabilistic model checking case studies. Comment: In Proceedings GandALF 2017, arXiv: 1709. 0176...|$|R
40|$|AbstractWe {{show that}} Safra's determinization ofω-automata with Streett (strong fairness) <b>acceptance</b> <b>condition</b> also gives memoryless winning {{strategies}} in infinite games, for the player whose <b>acceptance</b> <b>condition</b> is the complement of the Streett condition. Both determinization and memorylessness are essential parts of known proofs of Rabin's tree automata complementation lemma. Also, from Safra's determinization construction, {{along with its}} memoryless winning strategy extension, a single exponential complementation of Streett tree automata follows. A different single exponential construction and proof first appeared in [N. Klarlund (1992), Progress measures, immediate determinacy, and a subset construction for tree automata,in“Proceedings, 7 th IEEE Symposium on Logics in Computer Science”]...|$|R
50|$|The above {{description}} of a full machine {{can be viewed as}} a large deterministic automaton. Now, it is left to define the Muller <b>acceptance</b> <b>condition.</b> In this large automaton, we define μn to be the set of states in which the green light flashes and the red light does not flash corresponding to nth Aβ* machine. Let νn be the set of states in which the red light does not flash corresponding to nth Aβ* machine. So, Muller <b>acceptance</b> <b>condition</b> F = { S | ∃n μn ⊆ S ⊆ νn }. This finishes the construction of the desired Muller automaton. Q.E.D.|$|R
40|$|This paper investigates <b>acceptance</b> <b>conditions</b> for finite automata {{recognizing}} omega-regular languages. As a first result, we show that, {{under any}} acceptance condition {{that can be}} defined in the MSO logic, a finite automaton can recognize at most omega-regular languages. Starting from this, the paper aims at classifying <b>acceptance</b> <b>conditions</b> according to their expressive power and at finding the exact position of the classes of omega-languages they induced according to the Borel hierarchy. A new interesting acceptance condition is introduced and fully characterized. A step forward is also made {{in the understanding of}} the expressive power of (fin, =) ...|$|E
40|$|In every {{negotiation}} with a deadline, {{one of the}} negotiating parties has to accept an offer to avoid a break off. A break off is usually an undesirable outcome for both parties, therefore {{it is important that}} a negotiator employs a proficient mechanism to decide under which conditions to accept. When designing such conditions one is faced with the acceptance dilemma: accepting the current offer may be suboptimal, as better offers may still be presented. On the other hand, accepting too late may prevent an agreement from being reached, resulting in a break off with no gain for either party. Motivated by the challenges of bilateral negotiations between automated agents and by the results and insights of the automated negotiating agents competition (ANAC), we classify and compare state-of-the-art generic <b>acceptance</b> <b>conditions.</b> We focus on decoupled <b>acceptance</b> <b>conditions,</b> i. e. conditions that do not depend on the bidding strategy that is used. We performed extensive experiments to compare the performance of <b>acceptance</b> <b>conditions</b> in combination with a broad range of bidding strategies and negotiation domains. Furthermore we propose new <b>acceptance</b> <b>conditions</b> and we demonstrate that they outperform the other conditions that we study. In particular, it is shown that they outperform the standard acceptance condition of comparing the current offer with the offer the agent is ready to send out. We also provide insight in to why some conditions work better than others and investigate correlations between the properties of the negotiation environment and the efficacy of acceptance condition...|$|E
40|$|Abstract Watson-Crick!-automata are finite automata {{working with}} {{infinite}} doublestranded words, {{where the two}} strands {{relate to each other}} through a complementary relation inspired by the DNA complementarity. There are several natural possibilities to define such automata, in particular to define the acceptance condition for such infinite double-stranded words. We present here several results on the equivalence of B&quot;uchi, Rabin, Street, and Mullerlike <b>acceptance</b> <b>conditions.</b> We prove that these <b>acceptance</b> <b>conditions</b> are equivalent for nondeterministic Watson-Crick!-automata. For deterministic automata, we prove that the four conditions are equivalent for non-empty stateless automata, while the general case remains open. We also investigate the relationship between the classes of languages accepted by several types of Watson-Crick!-automata...|$|E
40|$|Abstract. In {{this paper}} we {{establish}} a lower bound hist(n) {{for the problem}} of translating a Büchi word automaton of size n into a de-terministic Rabin word automaton when both the Büchi and the Rabin condition label transitions rather than states. This lower bound exactly matches the known upper bound to this problem. The function hist(n) is in Ω((1. 64 n) n) and in o((1. 65 n) n). Our result entails a lower bound of hist(n − 1) when the input Büchi automaton has its Büchi <b>acceptance</b> <b>condition</b> labeling states (as it is usual). Those lower bounds remain when the output deterministic Rabin automaton has its Rabin <b>acceptance</b> <b>condition</b> labeling states. ...|$|R
40|$|By {{separating}} the principal acceptance mechanism from the concrete <b>acceptance</b> <b>condition</b> {{of a given}} Büchi automaton with n states,Schewe presented {{the construction of an}} equivalent deterministic Rabin transition automaton with o((1. 65 n) ^n) states via history trees, which can be simply translated to a standard Rabin automaton with o((2. 26 n) ^n) states. Apart from the inherent simplicity, Schewe's construction improved Safra's construction (which requires 12 ^nn^ 2 n states). However, the price that is paid is the use of 2 ^n- 1 Rabin pairs (instead of n in Safra's construction). Further, by introducing the later introduction record as a record tailored for ordered trees, deterministic automata with Parity <b>acceptance</b> <b>condition</b> is constructed which exactly resembles Piterman's determinization with Parity <b>acceptance</b> <b>condition</b> where the state complexity is O((n!) ^ 2) and the index complexity is 2 n. In this paper, we improve Schewe's construction to 2 ^ (n- 1) / 2 Rabin pairs with the same state complexity. Meanwhile, we give a new determinization construction of Parity automata with the state complexity being o(n^ 2 (0. 69 n√(n)) ^n) and index complexity being n. Comment: 1...|$|R
50|$|Alternation: This idea {{is quite}} similar to tree {{automaton}}, but orthogonal. The automaton may run its multiple copies on the same next read symbol. Such automata are called alternating automata. <b>Acceptance</b> <b>condition</b> must satisfy all runs of such copies to accept the input.|$|R
