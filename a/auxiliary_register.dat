13|22|Public
50|$|Note {{that the}} test for zero and test for {{negative}} jump instructions are equally valid for floating point.All these instructions clear the <b>auxiliary</b> <b>register.</b>|$|E
5000|$|The ADD, AND and XOR {{classes are}} similar, except that with these {{instructions}} {{the contents of}} the <b>auxiliary</b> <b>register</b> are combined with the source register before the MOVE part of the instruction is executed.|$|E
50|$|The {{processor}} normally manipulates 8-bit data bytes, but {{the mask}} unit {{makes it possible}} to manipulate single or multiple bits, making this a variable data-length processor. Internal data is stored in 8-bit read/write registers—R1 through R6,R9, and an <b>auxiliary</b> <b>register</b> (R0). The <b>auxiliary</b> <b>register</b> holds one of the operands used in two-operand instructions, such as ADD or AND, and a single-bit (read only) overflow register (R8) stores the carry-over bit from add operations. Two virtual write only registers IVL (R7) and IVR (R15) are used to put an address on the IV bus, and two sets of eight virtual registers (R16-R23 and R24-R31) are used to transfer data to or from the IV bus. In the latter case, the upper two bits of the register number select the left or right bank, and the lower three bits define the number of places the data is to be rotated.An 8-bit IV-bus buffer retains a copy of the last data to be transferred to or from the IV-bus. This data is used in Merge operations.|$|E
40|$|Photograph {{used for}} {{a story in the}} Oklahoma Times newspaper. Caption: "Wives {{accompanying}} their doctor husbands to OKC for the state medical convention are having busy sessions of their own at the Skirvin Hotel. Tuesday the medical <b>auxiliary</b> <b>registered</b> its members and heard lectures from national representatives. Mrs. Pat Nagle, OKC, and Mrs. M. K. Ledbetter, Tulsa, arrange the speaker's table for the luncheon. ...|$|R
40|$|This manual {{is divided}} in 6 parts (numbered from A to F) : Concepts (A), dealing at length with {{the notions of}} Motif, Type and Genre; Praxis (B), {{the core of this}} manual, a guide for the making of an index, expounded in eight parts, each of them meticulously {{organised}} into clear subheadings; <b>Auxiliary</b> <b>Registers</b> (C), a guide on how to improve the utility of an index with clear and user-friendly cross-referenced information; Sample Analyses (D) using four versions of one particular tale tale for a close analysis of the plot, from which a classification of motifs, types and genre arises; an Appendix (E), defining and giving a list of Euro-Asian-African genres, referred to above. Finally a Bibliography (F), opening with a numbered list of indices (339 items) organised by languages; a numbered bibliography on classification problems (284 items in all), organised by subjects/ themes (such as “B. Reports on the Enzyklopädie des Märchens”; “C. General problems”; “D. Discussions of the composition of repertoires”; until “P. Preliterate cultures”) and nearly 30 pages of <b>auxiliary</b> <b>registers</b> for these last two sub-headings, such as the “Level of indices” (A), which lists “those arranged according to Thompson’s Motif Index” and eight other schemes; down to {{a list of all the}} “Indices in FF Communications” (K) ...|$|R
40|$|Each Boolean {{function}} can be computed by a single-pass {{instruction sequence}} that contains only instructions to set {{and get the}} content of Boolean registers, forward jump instructions, and a termination instruction. <b>Auxiliary</b> Boolean <b>registers</b> are not necessary for this. In the current paper, we show that, {{in the case of}} the parity functions, shorter instruction sequences are possible with the use of an <b>auxiliary</b> Boolean <b>register</b> in the presence of instructions to complement the content of <b>auxiliary</b> Boolean <b>registers.</b> This result supports, in a setting where programs are instruction sequences acting on Boolean registers, a basic intuition behind the storage of auxiliary data, namely the intuition that this makes possible a reduction of the size of a program. Comment: 12 pages, the preliminaries are largely the same as the preliminaries in arXiv: 1312. 1812 [cs. PL] and some earlier papers; 13 pages, minor errors corrected; 13 pages, presentation improved; 14 pages, remarks about related work added; 14 pages, presentation improve...|$|R
5000|$|Group 5 is multiply, {{divide and}} shift instructions. Some of these use the 38-bit <b>Auxiliary</b> <b>Register</b> (AR - {{contents}} denoted by ar), {{which can be}} thought of as an extension of the accumulator at the least significant end. Multiplications and divisions regard a/ar as a signed fraction between -1 and one least significant bit less than +1. Despite the 803 Handbook saying [...] "All odd functions in Group 5 clear the AR", function 57 does not clear it.|$|E
50|$|Instructions {{and data}} {{are based on}} a 39-bit word length with binary {{representation}} in 2's complement arithmetic. The instruction set operates on a single address and single accumulator register, with an additional <b>auxiliary</b> <b>register</b> for double length integer multiply and divide. Although it is believed that the single length divide and square root instructions were only enabled in 803s destined for process control applications, the one remaining operational 803B has been found to have these instructions enabled, probably because it was used by a software house to develop real time and process control applications. An instruction is composed of a 6-bit instruction (conventionally represented in octal) and a 13 bit address. This gives 64 instructions organised as 8 groups of 8 instructions. The 13 bit memory address field gives an addressable range of 8192 words. These 19-bit instructions are packed two to a word with an additional 39th bit between them, the so-called B-line or B digit (the term is a legacy from the Ferranti Mark 1 computer, where the A-line represented the accumulator and the B-line an instruction modifier, both displayed on a Williams tube). Setting the B digit has the effect of adding the contents of the memory address of the first instruction to the second instruction at execution time, enabling indirect addressing and other run-time instruction modifications. The bit time is 6 microseconds, jumps execute in 288 microseconds and simple arithmetic instructions in 576 microseconds. Floating point operations take several milliseconds. IO is direct and there are no interrupts.|$|E
40|$|We generalize the Deutsch-Jozsa {{problem and}} present a quantum {{algorithm}} that can solve the generalized Deutsch-Jozsa problem {{by a single}} evaluation of a given function. We discuss the initialization of an <b>auxiliary</b> <b>register</b> and present a generalized Deutsch-Jozsa algorithm that requires no initialization of an <b>auxiliary</b> <b>register.</b> Comment: 5 pages, RevTe...|$|E
40|$|Older {{people in}} {{persistent}} pain: nursing and paramedical staff perceptions and pain management Background. Persistent pain {{is a common}} problem for older people. Knowledge about how nursing and paramedical staff perceive these people {{and what they do}} to relieve the pain seems scarce. Aim. To explore nursing and paramedical staff perceptions of older people in persistent pain and their day-to-day management of pain. Methods. Interviews in Swedish with 52 nursing <b>auxiliaries,</b> <b>Registered</b> Nurses, physiotherapists and occupational therapists were collected from February to May 2000. The analysis was based on their stories (n 150) about older people in persistent pain who received help in their own homes or in special accommodation. A typology of staff perceptions of pain in older people was developed. Activities to manage pain were examined using content analysis. Results. Respondents perceived the pain as real, exaggerated, trivial, care-related, endured, concealed, self-caused or inarticulate. Older people perceived as exag...|$|R
50|$|Most Japanese were {{captured}} in Soviet-occupied Manchuria (northeast China) and {{were brought to}} Soviet POW camps. Many Japanese died while they were detained in the POW camps; {{estimates of the number}} of these deaths vary from 60,000, based on deaths certified by the USSR, to 347,000 (the estimate of American historian William F. Nimmo, including 254,000 dead and 93,000 missing), based on the number of Japanese servicemen and civilian <b>auxiliaries</b> <b>registered</b> in Manchuria at the time of surrender who failed to return to Japan subsequently. Some remained in captivity until December 1956 (11 years after the war) before they were allowed to return to Japan. The wide disparity between Soviet records of death and the number of Japanese missing under Soviet occupation, as well as the whereabouts of the remains of POWs, are still grounds of political and diplomatic contention, at least on the Japanese side.|$|R
40|$|An {{asynchronous}} {{system of}} n processes prone to crashes, {{along with a}} number of shared read-write registers, is the distributed setting. We consider assigning integer numbers to processes in an exclusive manner, in the sense that no integer is assigned to two distinct processes. In the problem called Renaming, any k< n processes, which hold original names from a range [N]={ 1, [...] .,N}, contend to acquire unique integers in a smaller range [M] as new names using some r <b>auxiliary</b> shared <b>registers.</b> We develop a wait-free (k,N) -renaming solution operating in O(k (N + k N)) local steps, for M=O(k), and with r=O(k(N/k)) <b>auxiliary</b> <b>registers.</b> We develop a wait-free k-renaming algorithm operating in O(k) time, with M= 2 k- 1 and with r=O(k^ 2) registers. We develop an almost adaptive wait-free N-renaming algorithm, with N known, operating in O(^ 2 k (N + k N)) time, with M=O(k) and with r=O(n(N/n)) registers. We give a fully adaptive solution of Renaming, with neither k nor N known, having M= 8 k- k- 1 as the bound on new names, operating in O(k) steps and using O(n^ 2) registers. As regards lower bounds, we show that a wait-free solution of Renaming requires 1 +{k- 2,_ 2 rN/ 2 M} steps in the worst case. We apply renaming algorithms to obtain solutions to a problem called Store-and-Collect, which is about operations of storing and collecting under additional requirements. We consider the problem called Unbounded-Naming in which processes may repeatedly request new names, while no name can be reused once assigned, so that infinitely many integers need to be exclusively assigned as names in an execution...|$|R
40|$|Expressions {{of several}} {{capacity}} regions in quantum information theory involve an optimization over auxiliary quantum registers. Evaluating such expressions requires bounds on {{the dimension of}} the Hilbert space of these auxiliary registers, for which no non-trivial technique is known; we lack a quantum analog of the Carathéodory theorem. In this paper, we develop a new non-Carathéodory-type tool for evaluating expressions involving a single quantum <b>auxiliary</b> <b>register</b> and several classical random variables. As we show, such expressions appear in problems of entanglement-assisted Gray-Wyner and entanglement-assisted channel simulation, where {{the question of whether}} entanglement helps in these settings is related to that of evaluating expressions with a single quantum <b>auxiliary</b> <b>register.</b> To evaluate such expressions, we argue that developing a quantum analog of the Carathéodory theorem requires a better understanding of a notion which we call "quantum conditioning. " We then proceed by proving a few results about quantum conditioning, one of which is that quantum conditioning is strictly richer than the usual classical conditioning. Comment: 30 pages, title changed, structure significantly improved, results unchanged, to appear in IEEE TI...|$|E
40|$|Abstract — Command Processing Logic is command {{execution}} in spacecraft. The commands and the clock extracted from incoming signal {{are sent to}} the command processing logic. The commands are transmitted with redundancy and with encoding. Each command is transmitted four times. To detect error in commands encoding is used. The command processing logic should take care of redundancy and also should extract the correct command bit from the incoming bit stream. Ones correct command is detected the command processing logic produce an authentic pulse. With the rising edge of the authentic pulse, the commands are stored in an <b>auxiliary</b> <b>register.</b> The command processing logic also contains the logic to produce pulse commands. Command Decoding Logic the command decoder extracts the command information, the message bits and stores it in auxiliary resister which can be read using CPU. The command decoder then checks for the command bits and produce the pulse commands...|$|E
40|$|This is my {{reply to}} Zalka and Brun’s {{criticism}} of my recent paper on quantum optimization heuristics. Essentially, this criticism {{is shown to}} be utterly irrelevant. In a recent publication [1] I proposed a quantum optimization heuristic for combinatorial search problems. The basic idea is to generate a quantum superposition of search states such that the corresponding probability distribution for measurement outcomes is strongly peaked on low-cost states, in analogy to a thermal Boltzmann distribution, and to apply then standard thermodynamic reasoning, as in simulated annealing. This procedure has been criticized by Zalka and Brun [2] {{on the ground that}} the probability of measurement of any fixed states I k is small (last but one paragraph of their Comment [2]). Unfortunately, these authors have forgotten that, once the desired thermal quantum superposition has been generated (which is guarnteed by obtaining a particular outcome from the measurement of an <b>auxiliary</b> <b>register),</b> {{it is not at all}} the absolute probabilities that matter but only the relative ones. After all, nobody would discard statistical mechanic...|$|E
5000|$|The {{concept of}} a random-access machine (RAM) starts with the {{simplest}} model of all, the so-called counter machine model. Two additions move {{it away from the}} counter machine, however. The first enhances the machine with the convenience of indirect addressing; the second moves the model toward the more conventional accumulator-based computer with the addition of one or more <b>auxiliary</b> (dedicated) <b>registers,</b> the most common of which is called [...] "the accumulator".|$|R
40|$|In program algebra, {{different}} instruction {{sets for}} Boolean registers are conceivable. In previous work on instruction sequence size complexity, we chose instruction sets for Boolean registers that contain {{only a few}} of the possible instructions. In the current paper, we study instruction sequence size bounded functional completeness of instruction sets for Boolean registers. This work is among other things a requisite for making progress with proving lower bounds of non-asymptotic instruction sequence size complexity in cases where <b>auxiliary</b> Boolean <b>registers</b> may be used...|$|R
40|$|Abstract. Recently {{new types}} of {{differential}} power analysis attacks (DPA) against elliptic curve cryptosystems (ECC) and RSA systems have been introduced. Most existing countermeasures against classical DPA attacks are vulnerable to these new DPA attacks which include refined power analysis attacks (RPA), zero-value point attacks (ZPA), and doubling attacks. The new attacks are different from classical DPA in that RPA uses a special point with a zero-value coordinate, while ZPA uses <b>auxiliary</b> <b>registers</b> to locate a zero value. So, Mamiya et al proposed a new countermeasure against RPA, ZPA, classical DPA and SPA attacks using a basic random initial point. His countermeasure works well when applied to ECC, but it has some disadvantages when applied to general exponentiation algorithms (such as RSA and ElGamal) due to an inverse computation. This paper presents an efficient and improved countermeasure against the above new DPA attacks by using a random blinding concept on the message different from Mamiya’s countermeasure and show that our proposed countermeasure is secure against SPA based Yen’s power analysis which can break Coron’s simple SPA countermeasure as well as Mamiya’s one. The computational cost of the proposed scheme is very low {{when compared to the}} previous methods which rely on Coron’s simple SPA countermeasure. Moreover this scheme is a generalized countermeasure which can be applied to ECC as well as RSA system...|$|R
40|$|This paper {{deals with}} the design and {{implementation}} of the 32 -bit floating point Digital signal processor with MIPS (microcomputer with out interlocked pipeline stages). The designed DSP has 32 floating point MIPS instructions, instruction sets suitable for processing digital signals and consists of super Harvard architecture, 40 -bit ALU, 5 level pipelines, 17 -bit X 17 -bit parallel multiplier for single-cycle MAC operation, 8 addressing modes, 8 auxiliary registers, 2 <b>auxiliary</b> <b>register</b> arithmetic units, two 40 -bit accumulators and 2 address generators. The VHSIC HDL coded synthesizable RTL code of the DSP core has a complexity of 80, 670 in the two input NAND gates. We verified the functions of the DSP by a simulation with a single instruction test as the first step and then implemented the DSP with the FPGA. The test vectors have a single instruction test, combination of single instructions and algorithm applications, ADPCM vocoder and the MP 3 decoder. After FPGA verification, the DSP core carried out three test vector sets which are tested at FPGA at the 106 MHz clock rates. General Terms Digital signal processor that can execute millions of instructions per secon...|$|E
40|$|This paper proposes and evaluates a new {{microarchitecture}} for out-of-order processors {{that supports}} speculative renaming. We call speculative renaming to the speculative omission of physical register allocation {{along with the}} speculative early release of physical registers. These renaming policies may cause a register operand not {{to be kept in}} the physical register file (PRF). Thus, we add a low-ported <b>auxiliary</b> <b>register</b> file (XRF) located outside the processor core that keeps the values absent in PRF and supplies them at higher latency. To support the location of register operands being either in PRF or XRF, we use virtual registers. We consider omission and release policies directed by hardware prediction. Namely, we use a single last-use predictor that directs both speculative omission and release. We call this mechanism SR-LUP (speculative renaming based on last-use prediction). Two last-use predictor designs of incremental complexity and performance are analyzed. In a 256 -ROB, 8 -way processor with an 80 int+ 80 fp PRF, SR-LUP with an 11 -port 256 int+ 256 fp XRF, speeds up computations up to 11. 5 % and 29 % for INT and FP SPEC 2 K benchmarks, respectively. For FP benchmarks, if the PRF limits the clock frequency, a conventionally managed 128 int+ 128 fp PRF can be replaced using SR-LUP by a 64 int+ 64 fp PRF backed up with a 10 -port 224 int+ 224 fp XRF, showing 19 % IPS gain. Peer ReviewedPostprint (published version...|$|E
40|$|Due to the {{difficulty}} of constructing new quantum algorithms, frameworks that facilitate this construction are of great importance in quantum computing. These frameworks reduce the problem of coming up with a quantum algorithm to that of constructing some combinatorial object that is often much simpler to reason about. The implementation and analysis of an algorithm for the specified problem follow from the properties of this object. A number of such frameworks have been extremely successful in leading to the development of numerous quantum algorithms for a variety of problems. In this thesis, we build on two of these frameworks, the quantum walk search framework, and the span program framework, extending their algorithmic potential. The quantum walk search framework gives a generic quantum analogue to a specific type of classical algorithm based on random walks. If one can construct a classical algorithm of this form, a corresponding quantum algorithm with better complexity immediately follows. In this framework, a generic algorithm is constructed from several subroutines for which implementations must be given for each application. One of these subroutines, a checking subroutine, is run many times throughout the algorithm. This subroutine may be implemented by any quantum algorithm that satisfies the required functionality, including another quantum walk algorithm. By making a slight modification to the quantum walk framework, we can show how to nest a quantum walk algorithm in the checking subroutine of another quantum walk algorithm in a way that gives better complexity than the naive nesting. This modification allows us to reproduce a number of upper bounds previously obtained in another framework, the learning graph framework, including upper bounds for triangle finding, and more generally, subgraph finding for constant-sized subgraphs. Porting these upper bounds over to the setting of quantum walks is desirable because the algorithms achieved in the quantum walk search framework are much more explicit than those of the learning graph framework, making them easier to work with, modify, and build on, as needed. Our efficient nested checking idea has already been used to come up with new quantum algorithms for finding sub-hypergraphs. Another subroutine that is called repeatedly by the generic quantum walk search algorithm is the update subroutine. It was not clear how to use a quantum walk algorithm to perform this step, but by making another slight modification to the quantum walk search framework, we are able to show how to nest a quantum walk in the update step of another quantum walk in an efficient way. Our technique for doing this is a special case of a technique that allows the update to be implemented with garbage [...] - i. e., some unwanted data in an <b>auxiliary</b> <b>register,</b> entangled with the desired state. This technique may have other applications. Using the nested update technique, we are able to improve the best known upper bounds on the time complexity of k-distinctness. Previously the best known upper bound on the time complexity was n^k/(k+ 1), due to Ambainis. Belovs had recently improved the query complexity of k-distinctness to o(n^ 3 / 4) for all k, but since this upper bound was obtained in a framework called span programs, which only gives upper bounds on quantum query complexity, there was no known time efficient implementation of his k-distinctness algorithm. We use ideas from his construction and our nested update technique to get a quantum time upper bound for 3 -distinctness of n^ 5 / 7, matching his quantum query upper bound. We can generalize our algorithm get a time upper bound of n^(k- 1) /k for any k> 3, slightly improving on the best previous upper bound. Another framework, the span program framework, is known to be equivalent to quantum query complexity, in the sense that for any Boolean decision problem, there exists a span program construction that yields a tight upper bound on its quantum query complexity. We explore several variations of this framework. First, we slightly modify the definition of a span program so that we can show that for any (not necessarily Boolean) decision problem, there is a span program construction that yields a tight upper bound on its quantum query complexity. Previously this was only known up to logarithmic factors. We also explore several approximate versions of span programs, and show them to be equivalent. Finally, we explore the structure of span program witnesses, and use this structure to present an algorithm for evaluating span programs that is straightforward and intuitive. We also show how to evaluate approximate span programs, opening the possibility for the construction of new upper bounds using approximate span programs...|$|E
40|$|Abstract. The {{differential}} {{power analysis}} (DPA) might break {{the implementation of}} elliptic curve cryptosystem (ECC) on memory constraint devices. Goubin proposed a variant of DPA using the point (0, y), which is not randomized in Jacobian coordinates or in the isomorphic class. This point often exists in the standard curves, {{and we have to}} care this attack. In this paper, we propose the zero-value point attack as an extension of Goubin’s attack. Note that even if a point has no zero-value coordinate, the <b>auxiliary</b> <b>registers</b> might take zero-value. We investigate these zerovalue registers that cannot be randomized by the above randomization. Indeed, we have found several points P = (x, y) which cause the zerovalue registers, e. g., (1) 3 x 2 + a = 0, (2) 5 x 4 + 2 ax 2 − 4 bx + a 2 = 0, (3) P is y-coordinate self-collision point, etc. We demonstrate the standard curves that have these points. Interestingly, some conditions required for the zero-value attack depend on the explicit implementation of the addition formula — in order to resist this type of attacks, we have to care how to implement the addition formula. Finally, we note that Goubin’s attack and the proposed attack assume that the base point P can be chosen by the attacker and the secret scalar d is fixed, so that they are not applicable to ECDSA signature generation...|$|R
40|$|Abstract. Several {{experimental}} results {{ensure that the}} differential power analysis (DPA) breaks the implementation of elliptic curve cryptosystem (ECC) on memory constraint devices. In order to resist the DPA, {{the parameters of the}} underlying curve must be randomized. We usually randomize the base point in the projective coordinate, or we transform all parameters to the random isomorphic curve. However, Goubin pointed out the point (0, y) can not be randomized by these countermeasures. This point is often contained in the standard curves, and we have to care this attack. In this paper, we propose a novel attack, called the zero-value point attack. On the contrary to Goubin’s attack, we use the zero-value registers in the addition formulae. Even if a point has no zero-value coordinate, the <b>auxiliary</b> <b>registers</b> might take zero-value. We investigate these zerovalue registers that cannot be randomized by the above randomization. Indeed on elliptic curves over prime fields, we have found several points P = (x, y) which cause the zero-value registers, e. g., (1) 3 x 2 + a = 0, (2) 5 x 4 + 2 ax 2 − 4 bx + a 2 = 0, (3) P is y-coordinate self-collision point, etc. We demonstrate the standard curves that have these points. Interestingly, some conditions required for the zero-value attack depend on the explicit implementation of the addition formulae — in order to resist this type of attacks, we have to care how to assemble the multiplications and the additions in the addition formulae. Moreover, we show zero-value points for Montgomery-type method and elliptic curves over binary fields...|$|R
5000|$|The main {{altar of}} the Cathedral was {{executed}} in Rome in white Carrara marble, by architect Friedrich Schmidt and Carol Benesch, and then mounted in Bucharest by specialist Niccolo Orassi. Woodwork ceiling was apparently executed in Brasov. Mayer Company of Munich executed original Stained glass windows, destroyed in bombing of April 4, 1944, contained the eight large {{paintings of the}} apse windows with scenes {{from the life of}} Saint Joseph and the Holy Family, the seven medallions {{on the walls of the}} central nave mosaic [...] "Mother of God" [...] and two angels above the outer portal of the cathedral, as well as wood carvings of the Pulpit and the Bank for Holy Communion. Decorative painting of the Cathedral nave was executed by Georg Roder in Munich and painter Father Elsner executed decorative painting of the chapel and baptistery of the cathedral naves. Dressing the stucco colonnades, pillars and walls is the work of Italian workshop Aterio brothers. Actual stained glass was designed and executed by Natalia and Ion Brodeală couple in 1980. Large rosette above the organ, choir and the baptistery stained glass was executed in 1985 by the artist Dorin Danila. Chandeliers above the main altar and the candlestick for the Paschal candle was bought in Paris. Organ of the Cathedral is one of the best organ concert in Romania. It is operated by an electro-pneumatic system that has three keyboards, flute 3375, 54 main <b>registers</b> and 36 <b>auxiliary</b> <b>registers,</b> with extensive possibilities of combinations required concerted practice. The organ was built and installed by the company L. Wegenstein in Timisoara in 1930, replacing the organ installed in 1892 by Merklin company in Paris. Between October 2009 and April 2010 was restored by Ferdinand Stemmer its Swiss organ.|$|R
40|$|This paper {{presents}} Differential Multithreading (dMT) as {{an inexpensive}} {{way to achieve}} high throughput from a single-issue architecture. dMT switches among multiple instruction streams in response to pipeline stall conditions but saves in-flight instructions, thus squashing pipeline bubbles and ensuring maximal utilization of a single pipeline. dMT uses <b>auxiliary</b> pipeline <b>registers</b> to save the state of in-flight but stalled instructions. This squashes bubbles that would otherwise arise from data hazards, branch delays, and cache misses. This paper describes the pipeline organization necessary to support dMT, explains the advantage of shared-pipeline multithreading, and presents preliminary results which suggest that dMT can substantially increase processor utilization. 1 Introduction Microprocessors for embedded devices must typically use simple organizations, precluding the use of many techniques for exploiting instruction-level parallelism (ILP) like multiple issue, out-of- [...] ...|$|R
40|$|This article {{reports on}} a survey done among <b>registered,</b> {{enrolled}} and <b>auxiliary</b> nurses <b>registered</b> with the South African Nursing Council. The survey {{was carried out in}} the period from the end of December 1997 to the beginning of 1998. The purpose of the survey was to obtain the views of female nurses on various aspects of the workplace. The important findings were the fact that nurses liked working as part of a team and that this contributed the most to th eir job satisfaction. The item that contributed least to job satisfaction was pay. The most important problems were that they felt that they were not paid enough and that they need better benefits. The majority of nurses were however positive about their jobs and the items the highest on the list of career expectations were job satisfaction, followed by a need for recognition...|$|R
5000|$|Professor Alexander Statiev of the Canadian University of Waterloo {{writes that}} Ukrainian Auxiliary Police were the major {{perpetrator}} of the Holocaust on Soviet territories based on native origins, and those police units {{participated in the}} extermination of 150,000 Jews {{in the area of}} Volhynia alone. German historian Dieter Pohl in The Shoah in Ukraine writes that the auxiliary police was active during killing operations by the Germans already in the first phases of the German occupation. The <b>auxiliary</b> police <b>registered</b> the Jews, conducted raids and guarded ghettos, loaded convoys to execution sites and cordoned them off. Some 300 auxiliary policemen from Kiev helped organize the massacre in Babi Yar.They also took part in the massacre in Dnipropetrovsk, where the field command noted that the cooperation ran [...] "smoothly in every way". Cases where local commandants ordered murder of Jews using police force are known. In killings of Jews in Kryvy Rih the [...] "entire Ukrainian auxiliary police" [...] was put to use.|$|R
40|$|BACKGROUND: There {{is a high}} {{incidence}} of pain amongst older people. Several studies have shown that between 50 to 80 % of older people, who require domestic care or live in care homes, suffer from pain. Despite this many older people are under treated. AIM: The aim {{of this study was to}} explore what care providers perceive to be obstacles and opportunities of managing pain in older people. METHOD: A qualitative approach was used and the date was semi-structured interviews with open-ended questions. In all, there were 41 participants in the study; 23 <b>auxiliary</b> nurses, 13 <b>registered</b> nurses, 5 physiotherapists/occupational therapists. RESULT: The analyses resulted in a structure of obstacles and opportunities in dealing with pain management amongst old people. The structure include; the care providers, the elderly person, the organization and various treatment methods. CONCLUSION: To achieve alleviation of pain among older people a holistic approach based on a structure of four elements is suggested...|$|R
40|$|The {{purpose of}} this {{research}} was to identify dentist characteristics and dental office staffing patterns related to delegation of sealant applications. Results from a 1989 ma/led survey were used to characterize Michigan general dentists (N = 300) who did or did not delegate sealant applications to auxiliaries and to identify factors associated with delegation. Nearly 50 percent of respondents were applying all sealants themselves. In offices that delegated the procedure, the mean proportion of sealants being applied by dentists was 39. 9 percent. Registered dental hygienists were applying 51 percent, while registered dental assistants were applying 6. 5 percent. Delegating dentists were more knowledgeable about sealant procedures, held more favorable attitudes, treated more young patients, placed more sealants, and were better informed about the legality of delegation according to the state practice act. Logistic regression analysis found that employing a registered dental hygienist was the most significant factor associated with sealant delegation, followed by employing a registered dental assistant. Findings suggest that dental <b>auxiliaries,</b> and particularly <b>registered</b> dental assistants, are underutilized for applying sealants. Approaches to increasing delegation of sealants may include changing dentists' traditional hiring patterns, highlighting the skills of auxiliaries such as the registered dental hygienist (RDH) and the registered dental assistant (RDA), and increasing awareness of legally allowable procedures that RDHs and RDAs can perform...|$|R
25|$|In 1252–59, Möngke {{conducted}} a census of the Mongol Empire, including Iran, Afghanistan, Georgia, Armenia, Russia, Central Asia, and North China. While the census of China {{was completed in}} 1252, Novgorod in the far northwest was not counted until winter 1258–59. There was an uprising in Novgorod against Mongol rule in 1257, but Alexander Nevsky forced the city {{to submit to the}} Mongol census and taxation. The new census counted not only households but also the number of men aged 15–60 and the number of fields, livestock, vineyards, and orchards. Within the civilian register craftsmen were listed separately, while in the military <b>registers</b> <b>auxiliary</b> and regular households were distinguished. Clergy of the approved religions were separated and not counted. When the new register was completed, one copy was sent to Karakorum and one copy kept for the local administration. Möngke tried to create a fixed poll tax collected by imperial agents that could be forwarded to the needy units. Initially, the maximum rate was fixed at 10–11 gold dinars in the Middle East and 6–7 taels of silver in China. Protests from the landlord classes reduced this relatively low rate to 6–7 dinars and taels. Some officials raised the top rate on the wealthy of 500 dinars. While the reform did not lighten the tax burden, it made the payments more predictable. Even so, the census and the regressive taxation it facilitated sparked popular riots and resistance in the western districts.|$|R
40|$|The {{distributed}} {{setting of}} this paper is an asynchronous system consisting of n processes prone to crashes and a number of shared read-write registers. We consider problems regarding assigning integer values to processes in an exclusive way, in the sense that no integer is assigned to two distinct processes. In the problem of renaming, any k ≤ n processes, that hold original names from a range [N] = { 1, [...] ., N}, contend to acquire unique integers as new names in a smaller range [M] using some r shared registers. When k and N are known, our wait-free solution operates in O(log k(log N + log k log log N)) local steps, for M = O(k), and with r = O(k log N) <b>auxiliary</b> shared <b>registers.</b> Processes obtain new k names by exploring their neighbors in bipartite graphs of suitable expansion properties, with nodes representing names and processes competing for the name of each visited node. } local steps are required in the worst case to wait-free solve renaming, when k and N are known and r and M are given constraints. We give a fully adaptive solution, with neither k nor N known, having M = 8 k − lg k − 1 as a bound on the range of new names, operating in O(k) steps and using O(n 2) registers. We apply renaming algorithms to obtain solutions to the Store&Collect problem. When both k and N are known, then storing can be performed in O(log k(log N + log k log log N)) steps and collecting in O(k) steps, for r = O(k log(N/k)) registers. We consider the problem Unbounded-Naming in which processes repeatedly require new names, while no name can be reused once assigned, so that infinitely many integers need to be exclusively assigned as names. For no fixed integer i can one guarantee in a wait-free manner that i is eventually assigned to be a name, so some integers may never be used; the upper bound on the number of such unused integers is used as a measure of quality of a solution. We show that Unbounded-Naming is solvable in a non-blocking way with at most n − 1 integers never assigned as names, which is best possible, and in a wait-free manner with at most n(n − 1) values never assigned as names...|$|R
40|$|This thesis {{focuses on}} the work in primary health care {{enterprises}} within two municipals which have organised their services after new organisational models attuned to New Public Management ideologies. The organisational model, i. e. the purchaser – provider model, had features in common with tayloristic principles, including the separation between planning and execution of work, and it brought about a loss of opportunities for the employee’s flexibility. For this reason, the employee's {{control over their own}} work was focus of the study. Method The data are based on a comparative intensive case study of four organizations, i. e. enterprises that performed nursing and care services. The respondents in the study were home assistants, care workers, <b>auxiliary</b> nurses and <b>registered</b> nurses; all of which performed the work, i. e. practical assistance and primary health care services. The data was collected using participant observation, individual interviews and focus group interviews. Findings Employees often did more work than was expected by organisational standards. This work is called “hidden services” and categorised as organisational misbehaviour, since it was neither expected nor desired by the organisation. Five types of work were performed in addition to their expected work: surplus work, additional work, forbidden work, inappropriate basic work and collective work. The rationale for doing so diverged among occupations, since different occupations called upon dissimilar types of rules to legitimize their misbehaviour. Three types of rules legitimized the overriding of organisational rules, all based on distinctive work relations among employees, including employees’ work relations to clients. First, there were situational rules based on informal work relations with clients – situational work relations. Although these rules were established across all occupations in the study, situated rules were most active in long-lasting work relations between employees and clients. Second, there were collective rules, developed in consequence of employees’ social position at the workplace, bringing employees together in work teams and thereby establishing collective work relations. Collective rules included rules that modified organizational rules on how to provide service to clients, and rules that legitimized the breaking of administrative rules. Finally, professional rules, as a result of professionals’ socialisation through formal education and work relations among professionals at the workplace, provided the last distinct type of rules to legitimize organisational misbehaviour. Conclusion The thesis concludes that there are distinct work relations in the social structure of organisations that explains employees' execution of hidden services. Formal, private, collective and professional work relations are part of the social structure in organisations. These work relations generates mechanisms, i. e. norms, that modifies and legitimises the work in primary health care service...|$|R

