4|33|Public
50|$|In {{the field}} of {{computer}} animation and especially in animation editors, e.g. Maya, an FCurve is an <b>animation</b> <b>curve</b> {{with a set of}} keyframes, which are represented as points, curve segments between keys, and tangents that control how curve segments enter and exit a key. These keys are laid out on a graph that displays their position relative to zero. One can have keys that are either positive or negative values.|$|E
40|$|This paper {{presents}} a symbolic {{approach to the}} computation of blend surfaces across piecewise polynomial and rational surfaces. Curves in the parameter space of the primary surfaces can be specified as the rail curves of the blend. Several techniques which require various levels of user interaction are presented for defining the cross boundary tangent curves along the rail curves. The resulting blend is represented as a polynomial surface having tangent plane continuity with the primary surfaces to an accuracy bounded only by the machine precision. Also presented is a normalization method that approximates a unit vector field, an approach that might benefit other applications such as offset approximation and <b>animation</b> <b>curve</b> construction...|$|E
40|$|Abstract—This {{research}} work is aimed toward {{the development of}} a VR-based trainer for colon cancer removal. It enables the surgeons to interactively view and manipulate the concerned virtual organs as during a real surgery. First, we present a method for animating the small intestine and the mesentery (the tissue that connects it to the main vessels) in real-time, thus enabling user interaction through virtual surgical tools during the simulation. We present a stochastic approach for fast collision detection in highly deformable, self-colliding objects. A simple and efficient response to collisions is also introduced {{in order to reduce the}} overall animation complexity. Second, we describe a new method based on generalized cylinders for fast rendering of the intestine. An efficient curvature detection method, along with an adaptive sampling algorithm, is presented. This approach, while providing improved tessellation without the classical self-intersection problem, also allows for high-performance rendering thanks to the new 3 D skinning feature available in recent GPUs. The rendering algorithm is also designed to ensure a guaranteed frame rate. Finally, we present the quantitative results of the simulations and describe the qualitative feedback obtained from the surgeons. Index Terms—Virtual reality, physically-based modeling, <b>animation,</b> <b>curve</b> and surface representation. ...|$|E
5000|$|Keyframe {{animation}} with linear, Bézier, and TCB <b>animation</b> <b>curves.</b>|$|R
40|$|The {{need for}} {{animated}} graphical {{models of the}} human face is commonplace in the movies, video games and television industries, appearing in everything from low budget advertisements and free mobile apps, to Hollywood blockbusters costing {{hundreds of millions of}} dollars. Generative statistical models of animation attempt to address some of the drawbacks of industry standard practices such as labour intensity and creative inflexibility. This work describes one such method for transforming speech <b>animation</b> <b>curves</b> between different expressive styles. Beginning with the assumption that expressive speech animation is a mix of two components, a high-frequency speech component (the content) and a much lower-frequency expressive component (the style), we use Independent Component Analysis (ICA) to identify and manipulate these components independently of one another. Next we learn how the energy for different speaking styles is distributed in terms of the low-dimensional independent components model. Transforming the speaking style involves projecting new <b>animation</b> <b>curves</b> into the lowdimensional ICA space, redistributing the energy in the independent components, and finally reconstructing the <b>animation</b> <b>curves</b> by inverting the projection. We show that a single ICA model can be used for separating multiple expressive styles into their component parts. Subjective evaluations show that viewers can reliably identify the expressive style generated using our approach, and that they have difficulty in identifying transformed animated expressive speech from the equivalent ground-truth...|$|R
5000|$|... #Caption: <b>Animation</b> showing <b>curve</b> {{adaptation}} as {{the ratio}} [...] increases from 0 to 1 ...|$|R
50|$|Quaternion Slerps are {{commonly}} used to construct smooth <b>animation</b> <b>curves</b> by mimicking affine constructions like the de Casteljau algorithm for Bézier curves. Since the sphere is not an affine space, familiar properties of affine constructions may fail, though the constructed curves may otherwise be entirely satisfactory. For example, the de Casteljau algorithm {{may be used to}} split a curve in affine space; this does not work on a sphere.|$|R
40|$|Most 3 D {{animation}} packages use graphical representations called motion graphs {{to represent}} the variation in time of the motion parameters. Many use two-dimensional B-splines as <b>animation</b> <b>curves</b> because of their power to represent free-form curves. In this project, we investigate {{the possibility of using}} One-dimensional Non-Uniform Rational B-Spline (NURBS) curves for the interactive construction of <b>animation</b> control <b>curves.</b> One-dimensional NURBS curves present the potential of solving some problems encountered in motion graphs when two-dimensional B-splines are used. The study focuses on the properties of One-dimensional NURBS mathematical model. It also investigates the algorithms and shape modification tools devised for two-dimensional curves and their port to the One-dimensional NURBS model. It also looks at the issues related to the user interface used to interactively modify the shape of the curves...|$|R
40|$|In simple style drawings, like Comics and {{traditional}} cel <b>animation,</b> <b>curved</b> strokes are relatively important. Of course, {{the shape of}} the curve is the most important. However, subtle changes of curve width cannot be ignored. We propose a powerful method allowing subtle width changes to be applied to general 2 D curve data. The algorithm is based on curvature information of the input curve, and keeps carefully the impression of the original curvature. The resulting image expresses a pen-and-ink drawing style...|$|R
5000|$|In 3D, the <b>animation</b> <b>curves</b> of a blocked shot {{are often}} created using [...] "stepped" [...] or [...] "square" [...] tangencies, which {{provides}} no interpolation between animation poses. This allows the animator {{to see the}} poses of the animation without any strange and/or unintentional automatic interpolation. While this is sometimes problematic due to gimbal lock, seeing the poses in this way allows the animator to adjust the timing of an animation quickly, without the distraction of the software's automatic interpolation.|$|R
40|$|A {{new method}} for {{combined}} filtering and key-frame reduction of motion capture data is proposed. Filtering of motion capture data {{is necessary to}} eliminate any jitter introduced by a motion capture system. Key-frame reduction, on the other hand, allows animators to easily edit motion data by representing <b>animation</b> <b>curves</b> with a significantly smaller number of key frames. The proposed technique achieves key frame reduction and jitter removal simultaneously by fitting a Hermite curve to motion capture data using dynamic programming. Copyright © UNION Agency - Science Press...|$|R
40|$|Figure 1 : A {{result of}} our method: given a {{character}} rig {{and a set of}} keyframes for some of its parameters, our method automatically produces <b>animation</b> <b>curves</b> for the remaining parameters by solving the equations of motion in the space of deformations defined by the rig. The resulting motion is physically plausible, maintains the original artistic intent, and is easily editable. We present a method that brings the benefits of physics-based sim-ulations to traditional animation pipelines. We formulate the equa-tions of motions in the subspace of deformations defined by an animator’s rig. Our framework fits seamlessly into the workflow typically employed by artists, as our output consists of <b>animation</b> <b>curves</b> that are identical in nature to the result of manual keyfram-ing. Artists can therefore explore the full spectrum between hand-crafted animation and unrestricted physical simulation. To enhance the artist’s control, we provide a method that transforms stiffness values defined on rig parameters to a non-homogeneous distribu-tion of material parameters for the underlying FEM model. In ad-dition, we use automatically extracted high-level rig parameters to intuitively edit the results of our simulations, and also to speed up computation. To demonstrate the effectiveness of our method, we create compelling results by adding rich physical motions to coarse input animations. In the absence of artist input, we create realistic passive motion directly in rig space...|$|R
40|$|International audienceIn this paper, {{we propose}} a novel image {{indexing}} platform, so-called INVENIO (INdexing Visual ENvironment for multimedia Items and Objects). INVENIO offers to professional users both 2 D and 3 D content re-use facilities. Concerning the 2 D aspects, {{the system is}} entirely based on the ISO/MPEG- 7 normative specification. INVENIO integrates visual metadata extraction engine, annotation tools, image databases management tools, as well as appropriated, ergonomic user interfaces. In the case of 3 D graphical content, INVENIO {{makes it possible to}} exploit existing <b>animation</b> <b>curves</b> for generating new content and thus accelerating the content production proces...|$|R
40|$|Three-dimensional {{animation}} {{is an area}} in vast expansion due to, continuous {{research in}} the field has enabled an increasing number of users access to powerful tools with intuitive interfaces. We present our work-in-progress methodology by which artists can manipulate existing animation segments using intuitive characteristics instead of manually changing keyframes' values and interpolations. To achieve this goal, motion capture is used to create a database in which actors perform the same movement with different characteristics; keyframes from those movements are analyzed and used to create a transformation of <b>animation</b> <b>curves</b> that describe differences of values and times in keyframes of neutral and a movement with a specific characteristic. This transformation can be used to change a large set of keyframes, embedding a desired characteristic into the segment. To test our methodology, we used as a proof of concept a character performing a walk, represented by 59 joints with 172 degrees of freedom (DOF), and a set of 12 physical and emotional characteristics. Using our methodology we embedded a neutral walk with these desired characteristics and evaluated the results with a survey comparing our modified animations with direct motion capture movements, with partial results. With this methodology, one can decrease drastically the time needed to tweak large sets of keyframes, embedding a desired characteristic in a fashion more closely related to the artistic universe of animators than the mathematical representations of angles, translations and interpolations in <b>animation</b> <b>curves</b> commonly used in commercial softwares...|$|R
25|$|For 3D <b>animation</b> Bézier <b>curves</b> {{are often}} used to define 3D paths as well as 2D curves for {{keyframe}} interpolation.. Bézier curves are now very frequently used to control the animation easing in CSS and JavaScript.|$|R
40|$|This paper {{depicts a}} model {{which not only}} evaluates the node’s reputation, but also avoids the {{malicious}} node in the forwarding path. The simulation is performed by using the NS 2 software. This model uses the IEEE 802. 11 protocol with RTS, CTS, DATA and ACK signalling at the MAC layer. The paper models packet forwarding, passive misbehavior, active misbehavior and avoidance of malicious nodes in the route. The model also {{takes into account the}} blocking caused by the hidden node problem in wireless networks. The results achieved are both graphical {{as well as in the}} form of a network <b>animation.</b> <b>Curves</b> such as throughput and jitter are plotted to analyse the performance of the MANET...|$|R
40|$|We {{address the}} issue of {{modelling}} facial expressions for realistic 3 D avatar animation. We introduce a hierarchical decomposition of a human face into different components and model them according to their intrinsic functionalities. The parametrisation of the expressions is achieved in a two-level framework. First level accounts for the low level component facial actions and is represented by hierarchical latent variable models. The second level models the final expressions as a combinations of subcomponent information extracted from the lower level using combinatorial logic. Finally we produce continuous <b>animation</b> <b>curves</b> that are used to animate 3 D avatar in a morph-based fashion. Our approach is entirely based on 2 D information extracted from the input source. 1...|$|R
5000|$|The <b>animation</b> {{shows the}} <b>curve</b> {{adaptation}} with continuously increasing [...] fraction from 0 to 1 {{in steps of}} 0.01 (...) [...]|$|R
5000|$|... #Caption: Animation of the {{construction}} of the parallel curves : ellipse (red), evolute (astroid, blue) and <b>animation</b> of parallel <b>curves</b> in black.|$|R
40|$|This is a {{standalone}} {{interactive multimedia}} presentation (graphics, sound and dynamic <b>animations)</b> explaining <b>curves</b> and curvature for planar curves and placing these {{in a historical}} perspective. The program Osccirk (see below) is also integrated in this presentation. This program has been used during workshops organized to popularize science. status: publishe...|$|R
40|$|International audienceWith {{regard to}} {{skeletal}} character animation, {{the question on}} how {{to ensure the quality}} of transition between key frames is of crucial importance. The lack of properly defined motion ranges based on movements would leave the animator with no choice but intervene the result based on camera perspective afterwards, thus creating a lot more work for the animator to modify or clean up the <b>animation</b> <b>curves.</b> Although a number of methods have been raised in these years, such as the Linear Blending Skinning (LBS), they may still have shortcomings in some specific cases, one of which is the obvious unnatural deformation around the joint areas. The primary investigation in this paper is directed to address the problem and improve the framework of rendering in real-time environment with satisfactory skinning effect to the aforementioned scenario, with assistance of GPU computatio...|$|R
40|$|Ankara : The Department of Computer Engineering and the Institute of Engineering and Science of Bilkent University, 2007. Thesis (Master's) [...] Bilkent University, 2007. Includes bibliographical {{references}} leaves 36 - 38 Two {{new methods}} for combined filtering and key-frame reduction of motion capture data are proposed. Filtering of motion capture data {{is necessary to}} eliminate any jitter introduced by a motion capture system. Although jitter removal is needed to obtain a more realistic animation, it may result in an oversmoothed motion data {{if it is not}} done properly. Key-frame reduction, on the other hand, allows animators to easily edit motion data by representing <b>animation</b> <b>curves</b> with a significantly smaller number of key frames. One of the proposed techniques achieves key frame reduction and jitter removal simultaneously by fitting a Hermite curve to motion capture data using dynamic programming. Another method is to use curve simplification algorithms on the motion capture data until the desired reduction is reached. In this research, the results of these algorithms are evaluated and compared. Both subjective and objective results are presented. Önder, OnurM. S...|$|R
40|$|Facial {{animation}} often {{falls short}} in conveying the nuances {{present in the}} facial dynamics of humans. In this paper, we investigate the subtleties of the spatial and temporal aspects of eye blinks. Conventional methods for eye blink animation generally employ temporally and spatially symmetric sequences; however, naturally occurring blinks in humans show a pronounced asymmetry on both dimensions. We present an analysis of naturally occurring blinks that was performed by tracking data from high-speed video using Active Appearance Models. Based on this analysis, we generate a set of key-frame parameters that closely match naturally occurring blinks. We compare the perceived naturalness of blinks that are animated based on real data to those created using textbook <b>animation</b> <b>curves.</b> The eye blinks are animated on two characters, a photorealistic model and a cartoon model, to {{determine the influence of}} character style. We find that the animated blinks generated from the human data model with fully closing eyelids are consistently perceived as more natural than those created using the various types of blink dynamics proposed in animation textbooks...|$|R
40|$|Figure 1 : A set of fearless stuntmen {{are fired}} {{out of a}} cannon. The dynamic sprites {{interact}} to create a rich, stylized animation. Traditional methods for creating dynamic objects and characters from static drawings involve careful tweaking of <b>animation</b> <b>curves</b> and/or simulation parameters. Sprite sheets offer a more drawing-centric solution, {{but they do not}} encode timing information or the logic that determines how objects should transition between poses and cannot generalize outside the given drawings. We present an ap-proach for creating dynamic sprites that leverages sprite sheets while addressing these limitations. In our system, artists create a drawing, deform it to specify a small num-ber of example poses, and indicate which poses can be interpolated. To make the object move, we design a pro-cedural simulation to navigate the pose manifold in re-sponse to external or user-controlled forces. Powerful artistic control is achieved by allowing the artist to spec-ify both the pose manifold and how it is navigated, while physics is leveraged to provide timing and generality. We used our method to create sprites with a range of different dynamic properties...|$|R
40|$|We {{introduce}} a new algorithm for fitting a Catmull-Clark subdivision surface to a given shape within a prescribed tolerance, based on the method of quasi-interpolation. The fitting algorithm is fast, local and scales well since {{it does not require}} the solution of linear systems. Its convergence rate is optimal for regular meshes and our experiments show that it behaves very well for irregular meshes. We demonstrate the power and versatility of our method with examples from interactive modeling, surface fitting, and scientific visualization. CR Categories: I. 3. 5 [Computer Graphics]: Computational Geometry and Object Modeling [...] -Curve, surface, solid, and object representations Keywords: <b>Animation,</b> CAD, <b>Curves</b> & Surfaces, Geometric Modeling, Digital Geometry Processing, Subdivision Schemes, Approximation, Quasi-Interpolation, Catmull-Clark...|$|R
5000|$|Objects can be {{animated}} along curves with {{controls for}} alignment, banking, velocity, smoothness, and looping, and along surfaces with controls for alignment. Weight path-controlled <b>animation</b> between multiple <b>curves,</b> and animate the weight. Objects can be constrained to animate with other objects {{in many ways}} — including look at, orientation in different coordinate spaces, and linking {{at different points in}} time. These constraints also support animated weighting between more than one target.|$|R
40|$|Abstract — This {{research}} paper addresses {{the problem of}} generating involuntary and precise animation of quadrupeds with automatic rigging system of various character types. The technique proposed through this research {{is based on a}} two tier <b>animation</b> control <b>curve</b> with base simulation being driven through dynamic mathematical model using procedural algorithm and the top layer with a custom user controlled animation provided with intuitive Graphical User Interface (GUI). The character rig is based on forward and inverse kinematics driven through trigonometric based motion equations. The User is provided with various manipulators and attributes to control and handle the locomotion gaits of the characters and choose between various types of simulated motions from walking, running, trotting, ambling and galloping with complete custom controls to easily extend the base simulation as per requirements...|$|R
40|$|This {{research}} paper addresses {{the problem of}} generating involuntary and precise animation of quadrupeds with automatic rigging system of various character types. The technique proposed through this research {{is based on a}} two tier <b>animation</b> control <b>curve</b> with base simulation being driven through dynamic mathematical model using procedural algorithm and the top layer with a custom user controlled animation provided with intuitive Graphical User Interface (GUI). The character rig is based on forward and inverse kinematics driven through trigonometric based motion equations. The User is provided with various manipulators and attributes to control and handle the locomotion gaits of the characters and choose between various types of simulated motions from walking, running, trotting, ambling and galloping with complete custom controls to easily extend the base simulation as per requirements. Comment: 6 pages, 8 figures, Conference pape...|$|R
40|$|ABSTRACT: Computer software, {{particular}} that known as Dynamic Geometry Software, {{has the potential}} to make significant improvements in how geometry is learnt and taught. For a long period geometry teaching has been conducted with a minimal amount of equipment – such as ruler and pair of compasses. Our view is that teachers should now have at their disposal an appropriate va-riety of equipment from which to select. As with any approach to teaching, the educational use of information and communication technology as well as computer software needs to be well thought through and carefully planned. In this paper we will concentrate on WinCAG (Windows version of Computer Aided Geometry) which has been especially designed for teaching and learning geometry. With this software package both simple constructions and complicated dependencies can easily be animated. We will particular focus on some special capabilities of WinCAG. These are the map-ping module, automated <b>animations,</b> building <b>curves</b> by tracing points, rolling circles, envelopes of moving objects, subdivision curves and the object recognition from free-hand drawings...|$|R
40|$|By using MATLAB we {{demonstrate}} {{a variety of}} parametric curves of the family "Parametric Rose" (Rhodonea), characterized by four factors. The article is intended {{to encourage students to}} study the parametric curves. The values of coefficients affect the shape of the curve and its period. Changes with time one of the curve parameters makes the effect of animation. Different versions of coloring the curve increase the aesthetic impact on results. A beautiful MATLAB-program with Graphical User Interface (GUI) is suggested. It allows students to "play" with the curves on the computer screen and demonstrates amazing properties of the "Rose" parametric family depending on the values and the ratio of their coefficients. It may allow and teachers to inspire students by exploring these additional non-school materials. Students can see the beauty of mathematics and gain additional knowledge about parametric functions. From another side, the program provides an exercise example of algorithms and programming accessible for modern students. <b>Animation</b> of <b>curves</b> proposed can also serve as exercises both for mathematics and programming...|$|R
40|$|Animation {{of human}} figures is a {{fascinating}} and complex problem, and with applications in virtual reality, military training, and entertainment, {{it is also one}} with great value. One of the most important actions to support is walking. Unfortunately, continued use of scripted animation is becoming untenable: the process of creating animation data becomes a bottleneck. To address this issue, we have investigated data-driven, procedural models for the kinematic animation of human walking. We utilize a new motion data representation, the sagittal elevation angles, and describe a procedural algorithm to generate gait animation given sagittal elevation angle datasets. The use of motion data allows for realistic walking, while procedural animation yields the ability to generate different <b>animation,</b> including <b>curved</b> locomotion on uneven terrain, without requiring new motion data for each variation. We also describe our solution to the inverse motion interpolation problem. This allows our system to operate automatically, with no user interaction needed to supply necessary interpolation parameters. Finally, we also examine the problem of motion dataset generation, with the aim of reducing the reliance on motion data by allowing our system to generate it. Our system generates gait for different sized figures in real-time, and allows for curved path locomotion on uneven terrain, with flexibility for stylistic variation. ...|$|R
40|$|Reflection curves on {{surfaces}} are important tools for free-form surface interrogation. They {{are essential for}} industrial 3 D CAD/CAM systems and for rendering purposes. In this note, new approaches regarding the computation and rendering of reflection curves on {{surfaces are}} introduced. These approaches are designed to take {{the advantage of the}} graphics libraries of recent releases of commercial systems such as the OpenInventor toolkit (developed by Silicon Graphics) or Matlab (developed by The Math Works). A new relation between reflection curves and contour curves is derived; this theoretical result is used for a straightforward Matlab implementation of reflection curves. A new type of reflection curves is also generated using the OpenInventor texture and environment mapping implementations. This allows the computation, rendering, and <b>animation</b> of reflection <b>curves</b> at interactive rates, which makes it particularly useful for industrial applications...|$|R
40|$|The diploma thesis {{describes}} parametric space {{curves and}} their properties. Among them torsion and curvature are of special concern because they entirely define the curve up to translation and rotation. That {{is why we}} call them invariant properties. Differential geometry is a mathematical discipline which studies the properties of space curves. Differential geometry is in continuous development since many applications in kinematics, robotics and <b>animations</b> use rational <b>curves</b> while designing a rigid body motion. To achieve the motion we need to specify its position and orientation at a given time. Position is given as a point on the parametrized curve. On the other side the orientation is not given precisely therefore an algorithm needs to be designed to determine a natural variation of orientation. Nowadays, there are various frames in use among which a Frenet frame is the most appropriate for analyzing. Modern computer aided design systems can present a space curve only in rational form. A Frenet frame is not as suitable for practical use {{as it is a}} rotation minimizing frame that ensures the frame's minimal rotation. Results are supported by implementations of a Frenet frame and a rational minimizing frame. The latter is produced using double reflection method which yields an exact rotation minimizing frame on spherical curves. Moreover, the method gives fruitful approximation as well for general space curves...|$|R
40|$|Both the four-point and {{the uniform}} cubic B-spline {{refinement}} (i. e. subdivision) schemes {{double the number}} of vertices of a closed-loop polygonal curve j P and respectively produce sequences of vertices fk and bk. The Js refinement proposed here produces vertices vk=(1 –s) fk+sbk. Iterative applications of Js yield a family of curves parameterized by s. It includes the four-point curve (J 0), the uniform cubic B-spline (J 8 / 8), and the quintic B-spline (J 12 / 8). Iterating Js converges to a C 2 curve for 0 <s< 1, to a C 3 curve for 1 ≤s< 3 / 2, and to a C 4 curve for s= 3 / 2. J 3 / 8 tends to reduce the error between consecutive refinements and is useful to reduce popping when switching levels-of-detail in multi-resolution rendering. J 4 / 8 produces the Jarek curve, which, in 2 D, encloses a surface area that is usually very close to the area enclosed by the original control polygon 0 P. We propose model-dependent and model-independent optimizations for these parameter values. As other refinement schemes, the Js approach extends trivially to open <b>curves,</b> <b>animations,</b> and surfaces. To reduce memory requirements when evaluating the final refined <b>curve,</b> surface, or <b>animation,</b> we introduce a new evaluation technique, called Ringing. It requires a footprint of only 5 points per subdivision level for each curve and does not introduce any redundant calculations. 1. Curve refinements For simplicity, we initially focus on planar, closed loop polygonal curves. Then, we explain how to extend our result...|$|R
40|$|We use the {{visualization}} {{and animation}} capabilities of Maple throughout our courses. Animations {{are used in}} presentations in class from first year onwards. For example, animations for Newton’s method and for fixed point iteration; to illustrate how slicing is used to generate the domain for double integration; {{to show how the}} error function (for the collocation method solution of a boundary value problem) varies as the collocation points are changed. This paper shows how to provide dynamically labelled animations. We start with a simple <b>animation</b> of parameterized <b>curves</b> where the value of the parameter is displayed on each frame. Our students in their first semester of first year asked to work individually or in pairs to attempt an animation assignment. The students are required to work in a group of size 3 plus or minus 1 and choose one of the 5 problems that are given. These problems are based on parameterized curves such as those that appear when modelling drug concentration in the blood. The presentation (in the lab) and assessment of each group’s animation almost becomes a tutorial. This activity (which does not require calculus) is popular. For our second example, we’ll consider the standard calculus problem of finding the dimensions of the rectangle of maximum area that is inscribed in a triangle. Animation will be used to find the solution in a particular case. This solution can easily be shown to be the correct solution for the arbitrary case – no calculus is needed, only some simple algebra. 1 Finally, we briefly consider an advanced topic. From our third year Finite Element Methods FEM course, we briefly present an animation of the collocation method error function used to find very simply the “optimal ” collocation points (a very difficult task analytically) ...|$|R

