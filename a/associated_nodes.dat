36|1401|Public
50|$|This {{process is}} {{repeated}} for each input vector for a (usually large) {{number of cycles}} λ. The network winds up associating output nodes with groups or patterns in the input data set. If these patterns can be named, the names can {{be attached to the}} <b>associated</b> <b>nodes</b> in the trained net.|$|E
50|$|A {{retrieval}} cue {{is a type}} of {{hint that}} can be used to evoke a memory that has been stored but cannot be recalled. Retrieval cues work by selecting traces or associations in memory that contain specific content. With regards to the theory of spreading activation, retrieval cues use <b>associated</b> <b>nodes</b> to help activate a specific or target node. When no cues are available, recall is greatly reduced, leading to forgetting and possible memory errors. This is called retrieval failure, or cue-dependent forgetting.|$|E
50|$|Edit Path by Node tool: {{allows for}} the editing of single or {{multiple}} paths and or their <b>associated</b> <b>node(s).</b> There are four types of path nodes; Cusp (corner), Smooth, Symmetric and Auto-Smooth. Editing is available for the positioning of nodes and their associated handles (angle and length) for Linear and Bézier paths or Spiro curves. A path segment can also be adjusted by dragging (left click + hold). When multiple nodes are selected, they can be moved, scaled and rotated using keyboard shortcut or mouse controls. Additional nodes can be inserted into paths at arbitrary or even placements, and an effect {{can be used to}} insert nodes at predefined intervals. When nodes are deleted, the handles on remaining ones are adjusted to preserve the original shape as closely as possible.|$|E
50|$|Each node {{maintains}} a data store containing documents associated with keys, and a routing table <b>associating</b> <b>nodes</b> with records {{of their performance}} in retrieving different keys.|$|R
50|$|For every <b>node,</b> {{the value}} <b>associated</b> with that <b>node</b> is greater {{or equal to}} than the values <b>associated</b> with all <b>nodes</b> in its right subtree.|$|R
50|$|Query {{decomposition}} associates a set {{of variables}} and {{a set of}} constraints to each node of a tree; each constraint is <b>associated</b> to some <b>node,</b> and the subtree induced by the <b>nodes</b> <b>associated</b> to a given variable or constraint is connected. More precisely, for each variable, the subtree of <b>nodes</b> <b>associated</b> to this variable or with a constraint having this variable in its scope is connected. The width of a decomposition is the maximal combined number of variables and constraints <b>associated</b> with a <b>node.</b>|$|R
5000|$|Prior to version 0.28, {{the game}} was limited to typical land {{vehicles}} with wheels, but plane and boat engines have been added since. All engines allow {{for a wide range}} of customization, leaving virtually no boundaries. Vehicles are built using vertices connected by beams. Vertices (or [...] "nodes") are influenced by the stress on the beams that connect them. If a beam is too stressed, it will deform, thus altering the <b>associated</b> <b>nodes</b> position which ultimately alters the appearance and handling of a vehicle. Vehicle configurations are stored in plain text. Simple 2D skins can be made to wrap the vehicle, and can be supplemented with static mesh objects. Recent development has allowed for static meshes to be deformed according to a skeleton of nodes, much like the system in the game 1nsane. This system is known as Flexbody, and has been included since version [...]36.|$|E
5000|$|The {{connection}} densities, or neighbourhood {{densities of}} memory arrangements help distinguish which elements {{are a part}} of, or related to, the target memory. As the density of neural networks increases, the number of retrieval cues (<b>associated</b> <b>nodes)</b> also increases, which may allow for enhanced memory of the event. However, too many connections can inhibit memory in two ways. First, as described under the sub-section Spreading Activation, the total activation being spread from node 1 to connecting nodes is divided {{by the number of}} connections. With a greater number of connections, each connecting node receives less activation, which may result in too little activation for the memory cue to be brought to awareness. Connection strength, in which more strongly connected associations receive more activation than less-related associations, may also prevent specific connections from being brought to awareness due to being out-competed by the stronger associations. [...] Second, with more connections branching from various other nodes, there is a greater probability of linking associated connections of different memories together (transplant errors) so that memory errors occur and incorrect features are recalled.|$|E
30|$|Beacon-Enabled Mode: a PAN {{coordinator}} periodically generates beacon frames {{after every}} Beacon Interval (BI) {{in order to}} identify its PAN to synchronize with <b>associated</b> <b>nodes</b> and to describe the superframe structure.|$|E
30|$|A {{provenance}} trust {{score is}} calculated for every data “d” passing through this node “A”. This is calculated as minimum or {{average of the}} trust values <b>associated</b> with <b>nodes</b> in the provenance path. The provenance trust scores of all data passing through this node “A” are averaged to produce a measure of trust <b>associated</b> with <b>node</b> “A”.|$|R
50|$|Some {{of these}} methods <b>associate</b> {{constraints}} with <b>nodes</b> of the tree, and define width {{taking into account the}} number of constraints <b>associated</b> with <b>nodes.</b> This may reduce the width of some problems. For example, a decomposition in which ten variables are <b>associated</b> with each <b>node</b> has width ten; however, if each of these sets of ten variables is the scope of a constraint, each <b>node</b> can be <b>associated</b> that constraint instead, resulting in width one.|$|R
2500|$|... is {{an action}} {{partition}} <b>associating</b> each <b>node</b> [...] {{to a single}} action , fulfilling: ...|$|R
30|$|It is {{noteworthy}} that as the value of k increases, the network finds sufficient redundant links to maintain the prescribed requirements on the connectivity. Complying with the results obtained for the k-Neighbor protocol, our protocol also requires no further stretch in transmission range for higher value of k. Since, the solution for distance measurement error {{take into account the}} farthest neighbor in the list, the backbone nodes and their <b>associated</b> <b>nodes</b> relationship remains intact. Once again the proposed ANTC protocol exhibits better performance to accommodate distance measurement error at comparatively much smaller cost.|$|E
30|$|The {{proposed}} relay for RM node {{is capable}} {{to support the}} retransmission for a few devices and thus should be placed (if possible) where it can establish the best connection to all <b>associated</b> <b>nodes.</b> In most applications, it is predetermined where the sensor nodes have to be placed, e.g. where temperatures or accelerations have to be measured from moving or rotating machine parts. So only {{the positions of the}} relay nodes are subject to optimization. Optimization criteria are minimizing loss of data packets and energy consumption in the devicea.|$|E
3000|$|The {{long lasting}} {{deployment}} of {{systems such as}} cloud services create a need for maintenance {{and management of the}} application during the operations phase. Such maintenance may include, e.g., applying system security updates across all <b>associated</b> <b>nodes.</b> For small scale systems this can be done manually, but the process is time consuming and error-prone. The rapid and automated elasticity of cloud services further limits the feasibility of manual system management as instances of VMs may be added or removed automatically during any period of the day. Configuration management is a well established concept for managing distributed systems during runtime, not just specific to the field of cloud computing. Aiello et al. [12] defines configuration management as: [...]...|$|E
50|$|Amputation (penectomy)—a partial or {{total removal}} of the penis, and {{possibly}} the <b>associated</b> lymph <b>nodes.</b>|$|R
40|$|A key {{aspect of}} a {{wireless}} sensor network {{is its ability to}} self-organize and maintain connectivity. Medium Access Control (MAC) protocol manages network self-configuration, which includes establishing a personal area network (PAN), finding a network to associate or disassociate with, and synchronizing if required. Currently, there is limited research that addresses the network initialization phase. This paper provides a performance evaluation of the 802. 15. 4 MAC during device association and synchronization with the PAN coordinator. Our results show the impact of beacon interval and the number of <b>associating</b> <b>nodes</b> in terms of association time delay and energy consumption in stationary wireless sensor networks. Results illustrate that energy consumption and association time increase with increasing number of <b>nodes</b> <b>associating</b> with a coordinator. Moreover, short beacon intervals consume more energy due to the frequency of beacon frames that nodes have to keep track of to maintain synchronization. However, short beacon intervals reduce the time required for the <b>nodes</b> to <b>associate,</b> in contrast to longer beacon intervals that are undesirable for real time and mobile applications. Furthermore, for longer beacon intervals, BO= 12 to BO= 14, there is an abrupt increase in energy consumption as the number of <b>associating</b> <b>nodes</b> increase, even for as few as as four nodes...|$|R
30|$|While the interpolant of the {{resulting}} finite element contains both a rotational and a translational component, the degrees of freedom at the nodes—in the simplified variant that we describe in this work—only include rotations and dilatations (i.e. radial displacements {{with respect to a}} given center). Dilatational and rotational degrees of freedom determine the local dilatation and rotation in a neighborhood of the <b>associated</b> <b>node,</b> respectively, while the position of the node itself remains unchanged. The translational component on the interior of the interpolant thus arises from the impact of rotations and dilatations <b>associated</b> with different <b>nodes</b> belonging to the same finite element, as well as their interaction.|$|R
40|$|International audienceAn {{approach}} {{based on}} overlay networking {{can lead to}} a novel P 2 P Service Platform (PSP) that Operators can fruitfully use to compete with Web Companies. The merits and the strengths of the approach are highlighted respect to the de-perimeterization of services. Critical points of overlay networking are tackled by the integration of technologies like autonomic, virtualization, cognition and negotiation frameworks. These enhancements make the PSP proposition reliable, effective and viable. The PSP is able to support the Inner Circle concept: i. e., the ability to integrate infrastructural and permanent resources with more temporary and dynamic <b>associated</b> <b>nodes.</b> Eventually some usage scenarios are discussed for showing how a PSP and the Inner Circle concept can support and nourish new ecosystems of services...|$|E
40|$|We {{present a}} hybrid {{framework}} for physics-based simulation of fracture and debris clouds. Previous methods mainly consider bulk fractures. However, in many situations, small fractured pieces and debris are visually important. Our framework takes a hybrid approach that integrates both tetrahedron-based finite element and particlebased meshfree methods. The simulation {{starts with a}} tetrahedral mesh. When the damage of elements reaches a damage failure threshold, the <b>associated</b> <b>nodes</b> are converted into mass-based particles. Molecular dynamics is used to model particle motion and interaction with other particles and the remaining elements. In rendering, we propose an algorithm of dynamically extracting a polygonal boundary surface for the damaged elements and particles. Our framework is simple, accurate, and efficient. It avoids the remeshing and stability problems of pure mesh-based techniques and pure meshfree methods and offers high visual realism...|$|E
40|$|We {{propose a}} {{hierarchical}} algorithm for approximating shortest paths between all pairs of nodes in a large-scale network. The algorithm begins by extracting a high-level subnetwork of relatively long links (and their <b>associated</b> <b>nodes)</b> where routing decisions are most crucial. This high-level network partitions the shorter links and their nodes into {{a set of}} lower-level subnetworks. By fixing gateways within the high-level network for entering and exiting these subnetworks, a computational savings is achieved {{at the expense of}} optimality. We explore the magnitude of these tradeoffs between computational savings and associated errors both analytically and empirically with a case study of the Southeast Michigan traffic network. An orderof-magnitude drop in computation times was achieved with an on-line route guidance simulation, at the expense of less than 6 % increase in expected trip times...|$|E
40|$|We {{introduce}} a network design game where {{the objective of}} the players is to design the interconnections between the nodes of two different networks $G_ 1 $ and $G_ 2 $ in order to maximize certain local utility functions. In this setting, each player is <b>associated</b> with a <b>node</b> in $G_ 1 $ and has functional dependencies on certain nodes in $G_ 2 $. We use a distance-based utility for the players in which the goal of each player is to purchase a set of edges (incident to its <b>associated</b> <b>node)</b> such that the sum of the distances between its <b>associated</b> <b>node</b> and the nodes it depends on in $G_ 2 $ is minimized. We consider a heterogeneous set of players (i. e., players have their own costs and benefits for constructing edges). We show that finding a best response of a player in this game is NP-hard. Despite this, we characterize some properties of the best response actions which are helpful in determining a Nash equilibrium for certain instances of this game. In particular, we prove existence of pure Nash equilibria in this game when $G_ 2 $ contains a star subgraph, and provide an algorithm that outputs such an equilibrium for any set of players. Finally, we show that the price of anarchy in this game can be arbitrarily large...|$|R
40|$|ABSTRACT-Wireless sensor {{networks}} {{consist of}} hundreds {{to thousands of}} low power multi functioning sensor nodes. It operates in an unattended environment with limited computational and sensing capabilities. A wireless sensor network is constructed based on a cluster tree. Isolated node with {{the maximum number of}} neighbor isolated nodes that launch the cluster generation process. Therefore, the total amount of cluster heads is minimizing. In the cluster tree creation algorithm, the cluster tree architecture is projected and it minimizes the entire number of nodes included in a cluster tree hence, the routing cost is reduced. In the cluster tree repair algorithm, while a cluster head or a cluster <b>associate</b> <b>node</b> fails or move out of communication range of router, a new cluster head or cluster <b>associate</b> <b>node</b> is elected to maintain the cluster tree topology. The cluster tree repair algorithm doesn’t consider the non uniform node distribution. In order to elect cluster heads with higher energy, the parameter of cluster head competition in EADC and EADUC is based on the ratio between the average residual energy of neighbor nodes and the residual energy of the node itself. The aim is to improve load balance among cluster heads, energy consumption and improve the network life time significantly among uniform and non uniform node distribution...|$|R
5000|$|NYT spawns two child nodes: 254 and 255, {{both with}} weight 0. Increase weight for root and 255. Code for [...] "a", <b>associated</b> with <b>node</b> 255, is 1.|$|R
40|$|This {{thesis is}} a study of {{harmonic}} maps of trivalent trees into Euclidean space. The existence of such maps is established, and uniqueness is shown to hold {{up to a certain}} isotopy condition. Moreover, within its particular isotopy class, each harmonic map is shown to be a local minimum for the energy functional. A harmonic map of a trivalent tree is determined by its <b>associated</b> <b>nodes.</b> Collectively, these nodes are a function of the lengths of the parameter spaces of the paths which comprise the map. It is shown that this node function can be continuously extended to certain parts of the boundary of its domain; these parts of the boundary are closely related to the geometry of the trivalent tree which serves as the domain of the given harmonic map...|$|E
40|$|To {{precisely}} {{locate the}} grounded fault area in distribution network with DG, a new grounded fault area location algorithm based on three-phase impedance model and fault features in distribution network with DG is proposed in this paper. This method establishes three-phase impedance model if the distribution network with DG, analyzes and extracts the fault characteristics {{on the basis}} of the three phase impedance model of distribution network with DG. According to the characteristic of the feature value in the fault point, this method traverses all the nodes and gets the fault <b>associated</b> <b>nodes.</b> The method proposed in this paper was tested in a sixty nodal distribution system with six DGs, the result of the method verifies that the method can precisely locate the grounded fault area in distribution network with DG.    </p...|$|E
40|$|AbstractIn recent years, {{the use of}} Autonomous Underwater Vehicle (AUV) along a {{constrained}} path {{can improve}} the data delivery ratio and maximize the energy efficiency in Underwater Wireless Sensor Networks (UWSNs). However, constant speed of AUV leads to limited communication to collect data packet from nodes deployed randomly in large scalable network. Moreover, the excessive number of <b>associated</b> <b>nodes</b> with Gateway Node (GN) causes to quick depletion of its energy, thus lead to hot spot problem. This poses prominent challenges in jointly improving the throughput with minimum energy consumption. To address these issues, we presented a novel scalable data gathering scheme called Scalable and Efficient Data Gathering SEDG routing protocol, that increases the packet delivery ratio as well as conserves limited energy by optimal assignment of member nodes with GN. Moreover, the variable sojourn interval of AUV decreases the packet drop ratio and hence, maximize the throughput of network...|$|E
3000|$|... [...]. This update rule is {{inspired}} by Equation 12, but it is obtained by approximating each partial derivative Equation 14 by a sum that is restricted to a subset N(i) of <b>nodes</b> <b>associated</b> with each <b>node</b> i. The set N(i) defines two different versions of distributed implementation: [...]...|$|R
5000|$|Attribute Nodes {{immediately}} {{follow the}} Namespace Nodes of the element {{with which they}} are associated. If there are no Namespace <b>Nodes</b> <b>associated</b> with a given element, then the Attribute <b>Nodes</b> <b>associated</b> with that element immediately follow the element. The relative order of Attribute Nodes is stable but implementation-dependent.|$|R
30|$|Conceptually, {{the stream}} {{execution}} model includes two layers: a runtime system (RTS) and an execution layer. At the RTS layer, each stream is {{represented as a}} FIFO buffer for storing messages and each node of the stream program is transformed into one task. A task is an iterating process that reads messages from its input streams, performs the <b>associated</b> <b>node’s</b> computations, and writes output messages to its output streams. The role of the RTS is to enforce the semantic of stream programs, i.e. make sure that each task reads from and writes to appropriate streams.|$|R
30|$|This paper {{proposes a}} node {{importance}} evaluation approach in {{wireless sensor network}} based on energy field model which evaluates the node importance by analyzing the data transmission status among <b>associated</b> <b>nodes</b> at the network layer in the wireless sensor network. Inspired by the field theory in physics, the approach studies the changes of node influence in wireless sensor network {{from the perspective of}} energy field. Besides, the network topology may change due to the added nodes for improving detection precision in practical application. That is to say, some nodes with higher importance may become less important after the change. Therefore, this approach gives full consideration to the dynamic change of nodes in importance evaluation. The advantage of the proposed approach is that the node importance is evaluated without affecting the physical structure of the network itself, which can well reflect the change of the node importance in the process of dynamic change and reduces the workload of node importance evaluation process.|$|E
40|$|A mobile ad hoc {{network is}} an infrastructure-less network where the nodes {{are free to}} move {{independently}} in any direction. The nodes have limited power and their set of neighbours, both uplink and downlink, change with time due to the inherent dynamism of the nodes. When multiple message forwarding requests arrive at one particular node, it needs to arrange them within its queue according to a suitable scheduling algorithm that is energy efficient as well as concerned about the relative velocity of the <b>associated</b> <b>nodes.</b> The present article proposes one such scheduling algorithm DEV-NS (Delay-efficient Energy and Velocity Conscious Nonpreemptive Scheduler) that instructs each node to assign weights to its uplink neighbours at regular intervals. Message forwarding request from the uplink neighbour with highest weight is served first. Simulation results clearly establish the fact that among all the state-of-the-art scheduling algorithms, DEV-NS produces much better result in terms of end-to-end delay, message cost, network throughput and connectivity ratio...|$|E
30|$|One very {{interesting}} {{aspect of this}} approach is that it computes a second network, the network of overlapping layers (hereafter referred as the “layer network”, see Fig.  12, right), for which the entanglement measures may be computed. The visualization of this multiplex network gives interesting insights on how the layers are behaving together in the multiplex network. We use a publicly released online visualization tool 4 (Detangler (Renoust et al. 2015)). It offers interaction in the multiplex network allowing to identify groups of particular nodes and their associated layers — {{as well as the other}} way around, particular groups of layers with their <b>associated</b> <b>nodes</b> (Renoust et al. 2015). Detangler also offers to study many other aspects of the multiplex network by changing metrics, taking weights into account, and measuring global cohesion of groups of publications (Renoust et al. 2014). For the sake of simplicity, we will only look at the exploration of the layers in association with citing articles as it already brings insights.|$|E
5000|$|Active/passive — Provides a fully {{redundant}} {{instance of}} each node, {{which is only}} brought online when its <b>associated</b> primary <b>node</b> fails. This configuration typically requires the most extra hardware.|$|R
25|$|A {{degenerate}} (or pathological) tree {{is where}} each parent node {{has only one}} <b>associated</b> child <b>node.</b> This means that performance-wise, the tree will behave like a linked list data structure.|$|R
40|$|Abstract: Problem statement: A {{wireless}} {{sensor network}} is usually deployed in a harsh geographical area to gather data that can be delivered to the remotely located base station. Sensor nodes have irreplaceable energy source, limited computational capability and limited memory. It {{is a challenge to}} maximize the use of energy of these sensor nodes to extend the network lifetime. Approach: This study proposes a Rank-Based Data Gathering Algorithm for {{wireless sensor network}}s. Sensor nodes were randomly distributed in a network field of different sizes. For every round of data communication, the algorithm steps were as follows: A set of sensor nodes or vertices were given a random rank between 0 and 1. A link formed between any two nodes if they were within each other’s transmission range. If a sensor node had the highest rank among its neighbors, then it considered an <b>associate</b> <b>node,</b> else it falls into the leaf <b>node.</b> Next, the <b>associate</b> <b>nodes</b> form a complete graph among them and later form a Rooted Directed Tree (RDT) after an implementation of Kruskal’s Minimum Spanning Tree algorithm and the Breadth First Search algorithm. Finally, a model that takes into account the energy when deciding what type of node a sensor was implemented. Results and Conclusion: After recording the simulation results, it is concluded that the RBDG yields a better outcome in terms of lifetime and delay per round for TDMA than other popular data gathering algorithms...|$|R
