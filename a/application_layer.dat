3405|1509|Public
5|$|Above the {{transport}} layer, {{there are certain}} protocols that are sometimes used and loosely fit in the session and presentation layers, most notably the Secure Sockets Layer (SSL) and Transport Layer Security (TLS) protocols. These protocols ensure that data transferred between two parties remains completely confidential. Finally, at the <b>application</b> <b>layer,</b> are many of the protocols Internet users would be familiar with such as HTTP (web browsing), POP3 (e-mail), FTP (file transfer), IRC (Internet chat), BitTorrent (file sharing) and XMPP (instant messaging).|$|E
5|$|In the mid-1980s, several sets of {{communication}} protocols emerged {{to fill the}} gaps between the data-link layer and the <b>application</b> <b>layer</b> of the OSI reference model. These included Appletalk, IPX, and NetBIOS with the dominant protocol set during the early 1990s being IPX due to its popularity with MS-DOS users. TCP/IP existed at this point, but it was typically only used by large government and research facilities.|$|E
25|$|In the OSI model, the {{definition}} of its <b>application</b> <b>layer</b> is narrower in scope. The OSI model defines the <b>application</b> <b>layer</b> as being the user interface. The OSI <b>application</b> <b>layer</b> is responsible for displaying data and images to the user in a human-recognizable format and to interface with the presentation layer below it.|$|E
5000|$|Apache Sling - OSGi-based <b>applications</b> <b>layer</b> for JCR content {{repositories}} ...|$|R
5000|$|... #Subtitle level 3: Abstraction of <b>application</b> <b>layers</b> {{as applied}} to {{automated}} testing ...|$|R
5000|$|Database virtualization, the {{decoupling}} of {{the database}} layer, which lies between the storage and <b>application</b> <b>layers</b> within the <b>application</b> stack over all.|$|R
25|$|Bluetooth mesh {{networking}} – Specification providing a {{mesh networking}} variant to Bluetooth low energy (BLE) with {{increased number of}} nodes and standardized <b>application</b> <b>layer</b> (Models).|$|E
25|$|The <b>application</b> <b>layer</b> in the TCP/IP {{model is}} often {{compared}} as {{equivalent to a}} combination of the fifth (Session), sixth (Presentation), and the seventh (Application) layers of the Open Systems Interconnection (OSI) model.|$|E
25|$|The {{three top}} layers in the OSI model, i.e. the <b>application</b> <b>layer,</b> the {{presentation}} layer and the session layer, are not distinguished separately in the TCP/IP model which only has an <b>application</b> <b>layer</b> above the transport layer. While some pure OSI protocol applications, such as X.400, also combined them, {{there is no}} requirement that a TCP/IP protocol stack must impose monolithic architecture above the transport layer. For example, the NFS application protocol runs over the eXternal Data Representation (XDR) presentation protocol, which, in turn, runs over a protocol called Remote Procedure Call (RPC). RPC provides reliable record transmission, so it can safely use the best-effort UDP transport.|$|E
5000|$|IPv6 {{brokenness}} is now {{generally regarded}} as a solved problem for almost all practical purposes, following improvements at both the transport and <b>application</b> <b>layers.</b>|$|R
50|$|GraphDB has a modular {{structure}} consisting of 4 <b>application</b> <b>layers.</b> The storage engines {{act as the}} interface to different storage media. The GraphFS serializes and deserializes database objects (nodes and edges) and operates the available storage engines. The actual graph-oriented database logic {{as well as all}} functionalities specific to the database are implemented in the GraphDB. The GraphDS provides the interface for using the database. The interfaces between the <b>application</b> <b>layers</b> are generic, which makes it possible to update components separately.|$|R
5000|$|The model {{according}} to Ted Williams (2000) is [...] "multi-level, spanning conceptual, generic and <b>applications</b> <b>layers.</b> The generic and <b>applications</b> <b>layers</b> all also stratified and composed of micro theories spanning, for example, activities, time, resources, constraints, etc. At the generic level. Critical to the TOVE effort is enabling the easy instantiation {{of the model}} for a particular enterprise TOVE models will be automatically created as a by product of the enterprise design function". At {{the turn of the}} millennium TOVE has been used to model a computer manufacturer and an aerospace engineering firm.|$|R
25|$|An <b>application</b> <b>layer</b> DDoS {{attack is}} done mainly for {{specific}} targeted purposes, including disrupting transactions {{and access to}} databases. It requires less resources and often accompanies network layer attacks. An attack is disguised to look like legitimate traffic, except it targets specific application packets. The attack on the <b>application</b> <b>layer</b> can disrupt services such as the retrieval of information or search function as well as web browser function, email services and photo applications. In order to be deemed a distributed denial of service attack, more than around 3–5 nodes on different networks should be used; using fewer than 3–5 nodes qualifies as a Denial-of-service attack and not a DDoS.|$|E
25|$|<b>Application</b> <b>layer</b> {{protocols}} generally {{treat the}} transport layer (and lower) protocols as black boxes which provide a stable network connection across which to communicate, although the applications are usually aware of key {{qualities of the}} transport layer connection such as the end point IP addresses and port numbers. <b>Application</b> <b>layer</b> protocols are often associated with particular client-server applications, and common services have well-known port numbers reserved by the Internet Assigned Numbers Authority (IANA). For example, the HyperText Transfer Protocol uses server port 80 and Telnet uses server port 23. Clients connecting to a service usually use ephemeral ports, i.e., port numbers assigned only {{for the duration of}} the transaction at random or from a specific range configured in the application.|$|E
25|$|Application programmers are {{typically}} concerned only with interfaces in the <b>application</b> <b>layer</b> and often {{also in the}} transport layer, while the layers below are services provided by the TCP/IP stack in the operating system. Most IP implementations are accessible to programmers through sockets and APIs.|$|E
50|$|In September 2012, {{the company}} {{released}} a performance management tool called TraceView, after acquiring Tracelytics. According to AppNeta, this service provides Web application performance management across different <b>application</b> <b>layers</b> and environments.|$|R
30|$|ADDA {{approaches}} use network-wide {{application information}} to optimise {{the manner in}} which information is collected and routed across the network. These efforts focus upon the network and <b>application</b> <b>layers</b> of the communication stack.|$|R
5000|$|Windows's <b>application</b> {{compatibility}} <b>layers</b> (<b>Application</b> Compatibility Toolkit) {{to attempt}} to run poorly written applications, or those written for earlier versions of the platform.|$|R
25|$|A slow read attack sends {{legitimate}} <b>application</b> <b>layer</b> requests, but reads responses very slowly, thus {{trying to}} exhaust the server's connection pool. It {{is achieved by}} advertising {{a very small number}} for the TCP Receive Window size, {{and at the same time}} emptying clients' TCP receive buffer slowly, which causes a very low data flow rate.|$|E
25|$|The {{transport}} layer and lower-level layers are unconcerned with {{the specifics of}} <b>application</b> <b>layer</b> protocols. Routers and switches do not typically examine the encapsulated traffic, rather they just provide a conduit for it. However, some firewall and bandwidth throttling applications must interpret application data. An example is the Resource Reservation Protocol (RSVP). It is also sometimes necessary for network address translator (NAT) traversal to consider the application payload.|$|E
25|$|Goodput or data {{transfer}} rate refers to the achieved average net bit rate that is delivered to the <b>application</b> <b>layer,</b> exclusive of all protocol overhead, data packets retransmissions, etc. For example, {{in the case of}} file transfer, the goodput corresponds to the achieved file transfer rate. The file transfer rate in bit/s can be calculated as the file size (in bytes) divided by the file transfer time (in seconds) and multiplied by eight.|$|E
50|$|The <b>applications</b> <b>layer</b> is {{responsible}} for providing the integrated ability to assess, plan, and execute network-centric mission operations using a common interface. It consists of 10 software packages known as Battle Command applications. The combined capabilities of the Battle Command software packages enable full interaction among the FCS (BCTs), and provide the ability to understand the battle situation first. Understanding first {{is the ability to}} see the patterns, understand the enemy’s concept of operations, his scheme of maneuver, and then exploit his decisive points and vulnerabilities. The <b>applications</b> <b>layer</b> provides the ability for cross Battlefield Functional Area (BFA) problem solving and decision aiding capability for all brigades and below echelons.|$|R
50|$|Ambari {{evolved as}} a {{solution}} to the problems faced by the developers in handling the huge Hadoop clusters. As Hadoop started to increase its scalability, more and more <b>application</b> <b>layers</b> covered its architecture making it bulky and unmanageable.|$|R
50|$|SAE J1708 {{makes up}} the {{physical}} and data link layers while SAE J1587 {{makes up the}} transport and <b>application</b> <b>layers</b> {{with respect to the}} OSI model. SAE J1587 is used in conjunction with SAE J1708 for automobile communication.|$|R
25|$|In {{order to}} meet the case of {{application}} level DDoS attacks against cloud-based applications, approaches may be based on an <b>application</b> <b>layer</b> analysis, to indicate whether an incoming traffic bulk is legitimate or not and thus enable the triggering of elasticity decisions without the economical implications of a DDoS attack. These approaches mainly rely on an identified path of value inside the application and monitor the macroscopic progress of the requests in this path, towards the final generation of profit, through markers denoted as Key Completion Indicators.|$|E
25|$|The Internet {{protocol}} suite provides end-to-end data communication specifying how data should be packetized, addressed, transmitted, routed, and received. This functionality is organized into four abstraction layers which classify all related protocols {{according to the}} scope of networking involved. From lowest to highest, the layers are the link layer, containing communication methods for data that remains within a single network segment (link); the internet layer, providing internetworking between independent networks; the transport layer handling host-to-host communication; and the <b>application</b> <b>layer,</b> which provides process-to-process data exchange for applications.|$|E
25|$|Building {{on top of}} the Internet {{of things}}, the web of things is an {{architecture}} for the <b>application</b> <b>layer</b> of the Internet of things looking at the convergence of data from IoT devices into Web applications to create innovative use-cases. In order to program and control the flow of information in the Internet of things, a predicted architectural direction is being called BPM Everywhere which is a blending of traditional process management with process mining and special capabilities to automate the control of large numbers of coordinated devices.|$|E
50|$|A {{software-defined}} storage technology, EtherCloud enabled provisioning and automation of storage, {{as well as}} REST APIs for {{integration into}} OpenStack and the network, server, virtualization and <b>application</b> <b>layers.</b> Coraid also supported VMware ESXi environments through the custom and self-supported driver.|$|R
40|$|Abstract—this paper {{presented}} a survey analysis subjected on network bandwidth management from published papers referred in IEEE Explorer database {{in three years}} from 2009 to 2011. Network Bandwidth Management is discussed in today’s issues for computer engineering applications and systems. Detailed comparison is presented between published papers to look further in the IP based network critical research area for network bandwidth management. Important information such as the network focus area, a few modeling in the IP Based Network and filtering or scheduling used in the network <b>applications</b> <b>layer</b> is presented. Many researches on bandwidth management {{have been done in}} the broad network area but fewer are done in IP Based network specifically at the <b>applications</b> network <b>layer.</b> A few researches has contributed new scheme or enhanced modeling but still the issue of bandwidth management still arise at the <b>applications</b> network <b>layer.</b> This survey is taken as a basic research towards implementations of network bandwidth management technique, new framework model and scheduling scheme or algorithm in an IP Based network which will focus in a control bandwidth mechanism in prioritizing the network traffic the <b>applications</b> <b>layer...</b>|$|R
50|$|For example, Microsoft Windows' Winsock, and Unix's Berkeley sockets and System V Transport Layer Interface, are {{interfaces}} between <b>applications</b> (<b>layer</b> 5 and above) and {{the transport}} (layer 4). NDIS and ODI are interfaces between the media (layer 2) {{and the network}} protocol (layer 3).|$|R
25|$|The <b>application</b> <b>layer</b> is {{the scope}} within which {{applications}} create user data and communicate this data to other applications on another {{or the same}} host. The applications, or processes, {{make use of the}} services provided by the underlying, lower layers, especially the Transport Layer which provides reliable or unreliable pipes to other processes. The communications partners are characterized by the application architecture, such as the client-server model and peer-to-peer networking. This is the layer in which all higher level protocols, such as SMTP, FTP, SSH, HTTP, operate. Processes are addressed via ports which essentially represent services.|$|E
25|$|For example, {{the session}} and {{presentation}} {{layers of the}} OSI suite {{are considered to be}} included to the <b>application</b> <b>layer</b> of the TCP/IP suite. The functionality of the session layer can be found in protocols like HTTP and SMTP and is more evident in protocols like Telnet and the Session Initiation Protocol (SIP). Session layer functionality is also realized with the port numbering of the TCP and UDP protocols, which cover the transport layer in the TCP/IP suite. Functions of the presentation layer are realized in the TCP/IP applications with the MIME standard in data exchange.|$|E
25|$|This type {{of attack}} {{involves}} massive network layer DDoS attacks through to focused <b>application</b> <b>layer</b> (HTTP) floods, followed by repeated (at varying intervals) SQLi and XSS attacks. Typically, the perpetrators can simultaneously use from 2 to 5 attack vectors involving {{up to several}} {{tens of millions of}} requests per second, often accompanied by large SYN floods that can not only attack the victim but also any service provider implementing any sort of managed DDoS mitigation capability. These attacks can persist for several weeks- the longest continuous period noted so far lasted 38 days. This APDoS attack involved approximately 50+ petabits (50,000+ terabits) of malicious traffic.|$|E
5000|$|The {{presentation}} layer {{may provide the}} following services to the application layer: a request {{for the establishment of}} a session, data transfer, negotiation of the syntax to be used between the <b>application</b> <b>layers,</b> any necessary syntax transformations, formatting and special purpose transformations (e.g. data compression and data encryption).|$|R
40|$|Abstract- In this paper, {{we propose}} a {{complete}} framework dealing with {{power line communication}} (PLC) technique over power distribution networks including both medium and low voltage networks. We focus on both physical and <b>application</b> <b>layers</b> {{in order to show}} that fast backhauls can be used. The enhancement of the performances is also discussed...|$|R
50|$|In {{terms of}} ISO OSI model, MaGIC can use {{physical}} and link layer (MAC/LLC) based on 100 Mbit Fast Ethernet signalling specified in IEEE 802.3/IEEE 802.3af and IEEE 802.2, however MaGIC implements proprietary network and <b>application</b> <b>layers</b> {{which can be}} used with different physical layers such as Gigabit Ethernet or optical media.|$|R
