39|36|Public
5000|$|Read (...) [...] A {{single line}} that when <b>active</b> (<b>logic</b> zero) {{indicates}} {{the device is}} being read by the CPU.|$|E
5000|$|Memory fan modern {{computer}} memory can generate enough heat that active cooling may be necessary, {{usually in the}} form of small fans positioned above the memory chips. This applies especially when the memory is overclocked or overvolted, or when the memory modules include <b>active</b> <b>logic,</b> such as when a system uses Fully Buffered DIMMs (FB-DIMMs).|$|E
50|$|Digital logic {{implemented}} by active elements {{is characterized by}} signal restoration. True and false or 1 and 0 are represented by two specific voltage levels. If the inputs to a digital logic gate is close to their respective levels, the output will be closer or exactly equal to its desired level. <b>Active</b> <b>logic</b> gates may be integrated in large numbers because each gate tends to remove noise at its input. Diode logic gates are {{implemented by}} passive elements; so, they have two restoration problems.|$|E
40|$|Reasoning {{with limited}} {{computational}} resources (such as time or memory) {{is an important}} problem, in particular in cognitive embedded systems. Classical logic is usually considered inappropriate for this purpose as no guarantees regarding deadlines can be made. One {{of the more interesting}} approaches to address this problem is built around the concept of <b>active</b> <b>logics.</b> Although {{a step in the right}} direction, <b>active</b> <b>logics</b> still do not offer the ultimate solution...|$|R
40|$|Reasoning {{with limited}} {{computational}} resources (such as time or memory) {{is an important}} problem, in particular in cognitive embedded systems. Classical logic is usually considered inappropriate for this purpose as no guarantees regarding deadlines can be made. One {{of the more interesting}} approaches to address this problem is built around the concept of <b>active</b> <b>logics.</b> Although {{a step in the right}} direction, <b>active</b> <b>logics</b> still do not offer the ultimate solution. Our work is based on the assumption that Labeled Deductive Systems offer appropriate metamathematical methodology to study the problem. As a first step, we have shown that the LDS-based approach is strictly more expressive than <b>active</b> <b>logics.</b> We have also implemented a prototype automatic theorem prover for LDS-based systems...|$|R
40|$|Reasoning {{with limited}} {{computational}} resources (such as time or memory) {{is an important}} problem, in particular in knowledge-intensive embedded systems. Classical logic is usually considered inappropriate for this purpose as no guarantees regarding deadlines can be made. One {{of the more interesting}} approaches to address this problem is built around the concept of <b>active</b> <b>logics.</b> Although {{a step in the right}} direction, <b>active</b> <b>logics</b> are just a preliminary attempt towards nding an acceptable solution. Our work is based on the assumption that Labeled Deductive Sys-tems oer appropriate metamathematical methodology to study the problem. As a rst step, we have reformulated a pair of <b>active</b> <b>logics</b> systems, namely the memory model and its formalized simplication, the step logic, as Labeled Deductive Systems. This paper presents our motivation behind this project, followed by an overview of the investigations on meta-reasoning relevant to this work, and introduces in some reasonable detail the MM system...|$|R
50|$|In {{computer}} architecture,A {{control bus}} {{is part of}} the system bus, used by CPUs for communicating with other devices within the computer. While the address bus carries the information about the device with which the CPU is communicating and the data bus carries the actual data being processed, the control bus carries commands from the CPU and returns status signals from the devices. For example, if the data is being read or written to the device the appropriate line (read or write) will be <b>active</b> (<b>logic</b> one).|$|E
40|$|The {{problem of}} nding a {{suitable}} formal approach to describe on-going reasoning {{process has been}} open since {{the very beginning of}} AI. In this paper we argue that <b>active</b> <b>logic</b> might be a formalism useful in this context. <b>Active</b> <b>logic</b> is rst introduced, then we analyse resource limitations that constrain the space of possible practical realisations of such reasoners. Finally some steps towards creating a practical <b>active</b> <b>logic</b> reasoner are presented. ...|$|E
40|$|The current paper details a {{restricted}} semantics for <b>active</b> <b>logic,</b> a time-sensitive, contradictiontolerant logical reasoning formalism. Central to <b>active</b> <b>logic</b> are special rules controlling the inheritance of beliefs in general, {{and beliefs about}} the current time in particular, very tight controls on what {{can be derived from}} direct contradictions (P &¬P), and mechanisms allowing an agent to represent and reason about its own beliefs and past reasoning. Using these ideas, we introduce a new definition of model and of logical consequence, as well as a new definition of soundness such that, when reasoning with consistent premises, all classically sound rules are sound for <b>active</b> <b>logic.</b> However, not everything that is classically sound remains sound in our sense, for by classical definitions, all rules with contradictory premises are vacuously sound, whereas in <b>active</b> <b>logic</b> not everything follows from a contradiction. ...|$|E
40|$|Using {{a simple}} {{example of a}} dialog with an implicature that arises part way through and then is later retracted, we discuss how Gricean maxims and nonmonotonicity may {{relate to each other}} and to a {{computational}} treatment of implicature. In effect we seek to track reasoning along Gricean lines over time. We present our own computational approach to this, giving an implementation in the formalism of <b>active</b> <b>logics...</b>|$|R
40|$|Dialog {{proceeds}} over time, {{during which}} inferred beliefs {{come and go}} in the listener. Yet this temporal aspect of dialog and belief is typically ignored in theoretical treatments of dialog. Using a simple example of a dialog with an implicature that arises partway through and then is later retracted, we discuss how Gricean maxims and nonmonotonicity may {{relate to each other}} and to a computational treatment of implicature. In effect we seek to track reasoning along Gricean lines over time. We present our own computational approach to this, giving an implementation in the formalism of <b>active</b> <b>logics.</b> (Also cross-referenced as UMIACS-TR- 96 - 42...|$|R
40|$|We {{argue that}} meta-dialog and meta-reasoning, {{far from being}} of only {{occasional}} use, are {{the very essence of}} conversation and communication between agents. We give four paradigm examples of massive use of meta-dialog where only limited base dialog may be present, and use these to bolster our claim of centrality for meta-dialog. We further illustrate this with related work in <b>active</b> <b>logics.</b> We argue moreover {{that there may be a}} core set of meta-dialog principles that is in some sense complete. If we are right, then implementing such a set would be of considerable interest. We give examples of existing computer programs that converse inadequately according to our guidelines. (Also cross-referenced as UMIACS-TR- 96 - 41...|$|R
40|$|In {{this paper}} we present our {{implementation}} {{of a system of}} <b>active</b> <b>logic</b> that processes natural language discourses. We focus on problems that involve presupposition and the associated well [...] known problems of the projection of presupposition. We discuss Heim's largely successful theory of presupposition and point out certain limitations. We then use these observations to build our discourse processor based on <b>active</b> <b>logic.</b> Our main contributions are the handling of problems that go beyond the scope of Heim's theory, especially discourses the involve cancellation of presupposition. Ongoing work suggests that conversational implicature and the cancellation of implicature can also be treated by our methods. Keywords: presupposition, discourse, context, accommodation, <b>active</b> <b>logic,</b> implicature. ...|$|E
40|$|AbstractFor {{some time}} we have been developing, and have had {{significant}} practical success with, a time-sensitive, contradiction-tolerant logical reasoning engine called the <b>active</b> <b>logic</b> machine (ALMA). The current paper details a semantics for a general version of the underlying logical formalism, <b>active</b> <b>logic.</b> Central to <b>active</b> <b>logic</b> are special rules controlling the inheritance of beliefs in general (and of beliefs about the current time in particular), very tight controls on what {{can be derived from}} direct contradictions (P&¬P), and mechanisms allowing an agent to represent and reason about its own beliefs and past reasoning. Furthermore, inspired by the notion that until an agent notices that a set of beliefs is contradictory, that set seems consistent (and the agent therefore reasons with {{it as if it were}} consistent), we introduce an “apperception function” that represents an agent's limited awareness of its own beliefs, and serves to modify inconsistent belief sets so as to yield consistent sets. Using these ideas, we introduce a new definition of logical consequence in the context of <b>active</b> <b>logic,</b> as well as a new definition of soundness such that, when reasoning with consistent premises, all classically sound rules remain sound in our new sense. However, not everything that is classically sound remains sound in our sense, for by classical definitions, all rules with contradictory premises are vacuously sound, whereas in <b>active</b> <b>logic</b> not everything follows from a contradiction...|$|E
40|$|This paper {{describes}} {{features of}} the <b>active</b> <b>logic</b> formalism {{as a tool for}} implementing mixed initiative intelligent systems. A framework is provided for assessing systems as "mixed-initiative", which is used to explore the relevant features both in the <b>active</b> <b>logic</b> formalism and associated implementations based upon and using that formalism. Active logics were developed as a means of combining the best of two worlds [...] inference and reactivity [...] without giving up much of either. This requires a special evolvingduring -inference model of time. Active logics are able to react to incoming information (including dialogue utterances by a collaborative partner) while reasoning is ongoing, blending new inputs into its inferences without having to start up a new theorem-proving effort. An implementation of <b>active</b> <b>logic</b> is described, which also includes special features for reasoning about and performing actions. This implementation is also used as the backbone of a dialogue system. 1 Introduc [...] ...|$|E
40|$|Passive {{shielding}} {{has been}} used to reduce capacitive coupling effects of adjacent bus lines by inserting passive ground or power lines (shields) between the bus lines. Active shielding is another shielding technique, in which the shield is allowed to switch depending on the switching pattern of its adjacent bus lines. This paper formally derives the optimal <b>active</b> shielding <b>logic</b> function for minimum power dissipation. It is also shown that this optimal active shielding architecture depends on the ratio of coupling to ground capacitance (γ = Cc/Cg). Optimal active shielding is shown to provide up to 25 % reduction in bus power dissipation compared to conventional passive shielding. A sub-optimal active shielding architecture with simpler hardware is also proposed. Simulation results show that using the sub-optimal shielding architecture leads to less than 6 % bus power penalty compared to the optimal <b>active</b> shielding <b>logic</b> circuit. 1...|$|R
40|$|We {{argue that}} meta-dialog and meta-reasoning, {{far from being}} of only {{occasional}} use, are {{the very essence of}} conversation and communication between agents. We give four paradigm examples of massive use of meta-dialog where only limited object dialog may be present, and use these to bolster our claim of centrality for meta-dialog. We further illustrate this with related work in <b>active</b> <b>logics.</b> We argue moreover This research has been supported in part by grants from the National Science Foundation and the Army Research Office. We thank Betsy Klipple, Tom Nelson, Clare Voss, and John Gurney for helpful discussion. y Institute for Advanced Computer Studies, University of Maryland. 1 {{that there may be a}} core set of meta-dialog principles that is in some sense complete, and that may correspond to the human ability to engage in "free-ranging" conversation. If we are right, then implementing such a set would be of considerable interest. We give examples of existing computer programs that converse inadequately according to our guidelines. ...|$|R
40|$|This work {{presents}} the first truly non-intrusive structural concurrent test approach, {{with the objective}} of testing partially and dynamically reconfigurable SRAM-based FPGAs without disturbing their operation. This is accomplished by using a new methodology to carry out the replication of <b>active</b> Configurable <b>Logic</b> Blocks (CLBs), i. e. CLBs that are part of an implemented function that is actually being used by the system, releasing it to be tested {{in a way that is}} completely transparent to the system...|$|R
40|$|As more {{information}} becomes {{available on the}} World Wide Web (there are currently over 4 billion pages covering most areas of human endeavor), it becomes more difficult to provide effective search tools for information access. Today, people access web information through two main kinds of search interfaces: Browsers (clicking and following hyperlinks) and Query Engines (queries {{in the form of}} a set of keywords showing the topic of interest). The first process is tentative and time consuming and the second may not satisfy the user because of many inaccurate and irrelevant results. Better support is needed for expressing one's information need and returning high quality search results by web search tools. There appears to be a need for systems that do reasoning under uncertainty and are flexible enough to recover from the contradictions, inconsistencies, and irregularities that such reasoning involves. <b>Active</b> <b>Logic</b> is a formalism that has been developed with real-world applications and their challenges in mind. Motivating its design is the thought that one of the factors that supports the flexibility of human reasoning is that it takes place step-wise, in time. <b>Active</b> <b>Logic</b> is one of a family of inference engines (step-logics) that explicitly reason in time, and incorporate a history of their reasoning as they run. This characteristic makes <b>Active</b> <b>Logic</b> systems more flexible than traditional AI systems and therefore more suitable for commonsense, real-world reasoning. In this report we mainly will survey recent advances in machine learning and crawling problems related to the web. We will review the continuum of supervised to semi-supervised to unsupervised learning problems, highlight the specific challenges which distinguish information retrieval in the hypertext domain and will summarize the key areas of recent and ongoing research. We will concentrate on topic-specific search engines, focused crawling, and finally will propose an Information Integration Environment, based on the <b>Active</b> <b>Logic</b> framework. Keywords: Web Information Retrieval, Web Crawling, Focused Crawling, Machine Learning, <b>Active</b> <b>Logic</b> (Also UMIACS-TR- 2001 - 69...|$|E
40|$|Abstract—Agents {{situated}} in dynamic environments have limited time to deliberate before performing their actions. Cautious agents that deliberate {{for too long}} may miss deadlines to accomplish tasks whereas bold agents that deliberate for too little time may behave rashly or miss opportunities. There are several approaches discussed in the literature that rely on meta-level mechanisms to monitor and control the deliberation time. These approaches seem to follow {{the view that the}} meta-level mechanism is an external component not constrained by the same resource limitations as the underlying agent’s deliberation mechanism. In this paper, we present an approach to resource bounded metacognition wherein an agent monitors and controls its deliberation and metacognition within the uniform framework of <b>Active</b> <b>Logic.</b> Keywords-metacognition; deliberation; reasoning; <b>active</b> <b>logic</b> I...|$|E
40|$|We {{present an}} {{approach}} toward {{design of a}} rational agent, integrating aspects of theoretical reasoning, practical reasoning, and reasoning about and executing plans. The approach uses <b>Active</b> <b>Logic,</b> which combines reactivity and logical inference, taking resource bounds into account, and providing mechanisms for handling contradiction. We augment this logic with a formalization of practical reasoning and plan execution, which also makes uses of contradiction handling abilities to cope with plan failure. We conclude {{with a description of}} a preliminary implementation and plans for embedding that within a dialogue system. 1 Introduction In this paper, we present an approach toward design of a rational agent, integrating aspects of theoretical reasoning, practical reasoning, and reasoning about and executing plans. The approach, based on <b>Active</b> <b>Logic</b> [Elgot-Drapkin and Perlis, 1990], couples a view of belief as resulting explicitly from inference (or observation), with a [...] ...|$|E
40|$|This paper {{presents}} a new control technique for vibration reduction based on modal approach and named Dependent Modal Space Control (DMSC). It is an <b>active</b> control <b>logic</b> that allows to assign the closed loop poles {{and the corresponding}} mode shapes of a system in a discrete number of degree of freedom depending {{on the amount of}} the sensors and actuators available. In order to perform the eigenstructure assignment, modal sensors and actuators are necessary unless both control and observation spillover are minimized. © 2013 IEEE...|$|R
50|$|Abductive {{reasoning}} {{is the process}} of deriving the most likely explanations of the known facts. An abductive logic should not be monotonic because the most likely explanations are not necessarily correct. For example, the most likely explanation for seeing wet grass is that it rained; however, this explanation has to be retracted when learning that the real cause of the grass being wet was a sprinkler. Since the old explanation (it rained) is retracted because of the addition of a piece of knowledge (a sprinkler was <b>active),</b> any <b>logic</b> that models explanations is non-monotonic.|$|R
40|$|<b>Active</b> {{stabilization}} <b>logic</b> is synthesized {{to hold a}} feed at {{the focus}} of a spacecraft antenna dish. The feed support structure is modeled as a tetrahedron made up of flexible bars and connected to the dish by six short legs containing force actuators. Using the symmetry of the structure, the model can be decomposed into four uncoupled subsystems: pitch/forward motions with four degrees of freedom (DOF) and two controls; roll/lateral motions with four DOF and two controls; vertical motions with three DOF and one control; and yaw motion with one DOF and one control. This greatly simplifies the synthesis of control logic...|$|R
40|$|Commonsense {{reasoning}} {{has proven}} exceedingly difficult both to model and to implement in artificial reasoning systems. This paper discusses {{some of the}} features of human reasoning that may account for this difficulty, surveys a number of reasoning systems and formalisms, and offers an outline of <b>active</b> <b>logic,</b> a non-classical paraconsistent logic that may be of some use in implementing commonsense reasoning...|$|E
40|$|Introduction Reasoning in {{a complex}} and dynamic world {{requires}} considerable flexibility {{on the part of}} the reasoner; flexibility to apply [...] in the right circumstances [...] the right tools (e. g. probabilities, defaults, metareasoning, belief revision, contradiction-resolution, and so on). A formalism that has been developed with this purpose in mind is that of <b>active</b> <b>logic.</b> An <b>active</b> <b>logic</b> is one that combines inference rules with a constantly evolving measure of time (a `now') that itself can be referenced in those rules. As an example, from Now(5) [the time is now 5] one infers Now(6) since the fact that an inference has taken place implies that time (at least one `time-step') has passed. From this feature come others, most notably: ffl Ignorance-assessment amounts to a lookup at time t, of what was known prior to t. ffl Contradictory information can (sometimes) be detected and used to curtail nonsensical inferences as well as to initiate re...|$|E
40|$|This paper formulates a {{stepping}} theory formalism with {{two kinds of}} negation dealing {{with one of the}} areas of <b>Active</b> <b>Logic,</b> a new kind of logic aimed at performing practical tasks in real time knowledge-based AI systems. In addition to the standard logical negation, the proposed formalism uses the so-called subjective negation interpreted as inability to arrive at some conclusion through reasoning by a current time. The semantics of the proposed formalism is defined as an~argumentation structure...|$|E
40|$|In general active {{vibration}} control intrinsically implies a fatigue damage reduction. Anyway, this assumption {{is not always}} verified. In these cases {{it is possible to}} deeper investigate the fatigue phenomena on smart flexible structures and their reduction from a control point of view. In this article, to identify the problem main parameters, a simplified interpretation of fatigue damage is given using the frequency analysis framework. Then, the <b>active</b> control <b>logic</b> is defined as an optimization problem with a quadratic functional taking into account the previously cited parameters. Finally, because of non-linearity of fatigue phenomenon, an adaptive approach is applied and a numerical/experimental validation is carried out. © 2013 SPIE...|$|R
40|$|This poster {{presents}} the first truly non-intrusive structural concurrent test approach, aimed to test partial and dynamically reconfigurable SRAM-based FPGAs without disturbing its operation. This {{is accomplished by}} using a new methodology {{to carry out the}} replication of <b>active</b> Configurable <b>Logic</b> Blocks (CLBs), i. e. CLBs that are part of an implemented function that is actually being used by the system, releasing it to be tested {{in a way that is}} completely transparent to the system. 1 : Introduction♦ Many of the trends that make newer FPGAs more appealing and affordable also make them less reliable. Larger dies and the use of smaller sub-micron scales in its manufacturing increase the probability of lifetim...|$|R
40|$|The {{effects of}} {{actuator}} and sensor locations on transfer function zeros are investigated, using uniform bars and beams as generic models of flexible space structures. It is shown how finite element codes {{may be used}} directly to calculate transfer function zeros. The impulse response predicted by finite-dimensional models is compared with the exact impulse response predicted by the infinite dimensional models. It is shown that some flexible structures behave {{as if there were}} a direct transmission between actuator and sensor (equal numbers of zeros and poles in the transfer function). Finally, natural damping models for a vibrating beam are investigated since natural damping has a strong influence on the appropriate <b>active</b> control <b>logic</b> for a flexible structure...|$|R
40|$|This paper {{presents}} {{an investigation of}} rational agents that have limited computational resources and intentionally interact with their environments. We present an example logical formalism, based on <b>Active</b> <b>Logic</b> and Situation Calculus, that can be employed {{in order to satisfy}} the requirements arising due to being situated in a dynamic universe. We analyse how such agents can combine, in a time-aware fashion, inductive learning from experience and deductive reasoning using domain knowledge. In particular, we consider how partial plans are created and reasoned about, focusing on what new information can be provided as a result of action execution. ...|$|E
40|$|In {{this study}} we want to propose an <b>active</b> <b>logic</b> that, continuously, optimizes the {{configuration}} of the propeller and motor speed taking into account changes in resistance and wake. The working principle of the control system is based on the measurement of the torque absorbed by the pro-peller and the engine speed, to obtain the actual thrust and advance speed coefficients. Based on these data, the controller identifies {{the configuration of the}} propeller for the best performance of the entire propulsion chain, from engine to propeller. Moreover, in addition to torque and speed limits of the en-gine, the control system chooses pitch angle taking into consideration the propeller’s cavitation...|$|E
40|$|Institute for Computing Systems ArchitectureAt present {{there are}} two main {{paradigms}} for computation : interpretation of a data stream representing a program by a processing unit (software) and an interconnection of <b>active</b> <b>logic</b> elements (hardware). While both systems can (given reasonable definitions) be shown to be equivalent in terms of which functions they can compute they have radically different properties : hardware can potentially provide a much higher performance implementation of a single simple algorithm whereas software can implement a wide variety of extremely complex algorithms. here we will consider a third paradigm for computation - configurable hardware in which the interconnection between the <b>active</b> <b>logic</b> elements is dependant on a control store. This paradigm can potentially offer many of the performance advantages of hardware white retaining much of the flexibility of software. This thesis examines the general properties of configurable systems and examples of previous designs in order to develop a new cellular-array architecture called Configurable Array Logic (CAL). The implementation of the architecture a related statically-programmed system, the Configurable Logic Array (CLA) in VLSI are discussed. The potential of the CAL system for implementation using Wafer Scale Integration is considered. The CAD system which would be required to allow algorithms expressed in normal programming languages to be implemented on the cellular architecture is discussed and the tools developed {{during the course of the}} project are covered. Four example designs using the system are presented : a digital stopwatch, a Data Encryption Standard (DES) encryptor, a unit to compute the 3 - 4 distance transform (which is used in image pattern matching) and a sketch of a system using configurable logic to implement cellular-automation models for fluid-flow simulations. Finally, methods of extending the Configurable Logic architecture to allow more complex computations to be performed and other directions for further research are discussed...|$|E
50|$|New {{available}} {{safety features}} include a Forward Collision Mitigation system, a Lane departure warning system, a driver knee airbag to reduce leg injury in a crash, and adaptive cruise control. In addition, the Outlander has standard driver and passenger front airbags, front side torso airbags along with curtain airbags, ABS with EBD, Traction Control <b>Logic,</b> <b>Active</b> Stability Control, Hill Start Assist, and a brake pedal that recedes to prevent leg injury in a crash.|$|R
40|$|This paper {{introduces}} a potential application of construction systems seen in biological systems to overcome various shortcomings in human architecture. Unlike human constructions, some social insects can produce habitable structures with simple rules without predetermined blueprints or central leaders {{to gain more}} adaptability. <b>Active</b> application of <b>logics</b> from self-organizing systems can possibly enhance our conventional centralized methods by designing artificial distributed systems. A conceptual case study is presented that involves a notion of the collective construction...|$|R
40|$|The {{increasing}} use of reconfigurable computing platforms, employing SRAM-based FPGAs, opens {{exciting new}} possibilities since they enable the reutilization of same hardware resources to implement speed-critical computational tasks, without interrupting system operation. Nevertheless, larger dies {{and the use of}} smaller submicron scales in the manufacturing of this new kind of FPGAs increase the probability of lifetime operation failures, requiring new test / fault tolerance methods capable of assuring the reliability of the system. Structural concurrent test procedures become particularly important in this context, since it is now possible to replicate and release for test internal FPGA resources, concurrently with ¿ but not affecting ¿ system operation. A new dynamic replication process of <b>active</b> Configurable <b>Logic</b> Blocks (CLBs) is presented in this paper, which enables the implementation of a truly non-intrusive structural component test approach. The experimental results presented prove the effectiveness of this solution...|$|R
