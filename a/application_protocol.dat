767|2581|Public
5|$|The program employs its own {{communication}} protocol layered {{on top of}} a schema to communicate to other nodes. This {{communication protocol}} interfaces with the BEEP infrastructure, a network <b>application</b> <b>protocol</b> framework. Computers discovered by the Xgrid system, that is computers with Mac OS X's Xgrid service enabled, are automatically added to the list of available computers to use for processing tasks.|$|E
25|$|From the <b>application</b> <b>protocol</b> {{point of}} view, TLS {{belongs to a}} lower layer, {{although}} the TCP/IP model is too coarse to show it. This means that the TLS handshake is usually (except in the STARTTLS case) performed before the <b>application</b> <b>protocol</b> can start. In the name-based virtual server feature being provided by the application layer, all co-hosted virtual servers share the same certificate because the server has to select and send a certificate immediately after the ClientHello message. This {{is a big problem}} in hosting environments because it means either sharing the same certificate among all customers or using a different IP address for each of them.|$|E
25|$|If all virtual servers {{belong to}} the same domain, a {{wildcard}} certificate can be used. Besides the loose host name selection that might be a problem or not, there is no common agreement about how to match wildcard certificates. Different rules are applied depending on the <b>application</b> <b>protocol</b> or software used.|$|E
40|$|A {{synergistic}} relationship {{exists between}} Concurrent Engineering (CE) frameworks and the PDES initiative of promulgating STEP. This paper emphasizes and punctuates {{the importance of}} the STEP-CE linkage and defines further cooperative bindings. One focus of the presentation is the use of STEP <b>application</b> <b>protocols</b> to create the shared information models necessary for Concurrent Engineering(CE). After a discussion of the natural fusion of CE and PDES/STEP <b>application</b> <b>protocols,</b> the need for the extension of STEP resource models and <b>application</b> <b>protocols</b> to include information sharing capabilities for process and organization data is presented...|$|R
5000|$|... #Subtitle level 2: Coverage of STEP <b>Application</b> <b>Protocols</b> (AP) ...|$|R
40|$|This thesis {{focuses on}} methods for fast {{recognition}} of <b>application</b> <b>protocols.</b> Fast recognition is recognition with minimal delay {{from the time}} of capturing the first data packet sent  from the source node. This thesis describes possible techniques and methods for recognition of <b>application</b> <b>protocols</b> and basic information and description of reference system for lawful interception in computer networks. Furthermore, the thesis describes analysis, design and implementation phase of a tool for fast recognition of <b>application</b> <b>protocols.</b> The conclusion of this thesis describes the results of tests performed by the tool and shows its limitations and possible extensions...|$|R
25|$|The {{three top}} layers in the OSI model, i.e. the {{application}} layer, the presentation layer and the session layer, are not distinguished separately in the TCP/IP model which only has an application layer above the transport layer. While some pure OSI protocol applications, such as X.400, also combined them, {{there is no}} requirement that a TCP/IP protocol stack must impose monolithic architecture above the transport layer. For example, the NFS <b>application</b> <b>protocol</b> runs over the eXternal Data Representation (XDR) presentation protocol, which, in turn, runs over a protocol called Remote Procedure Call (RPC). RPC provides reliable record transmission, so it can safely use the best-effort UDP transport.|$|E
2500|$|Windows Search also {{registers}} a search-ms <b>application</b> <b>protocol,</b> {{which can}} be used to represent searches as URIs. The search parameters and filters are encoded in the URI using AQS or its natural language counterpart, NQS. When [...] invokes the URI, Windows Search (which is the default registered handler for the protocol) launches the Search Explorer with the results of the search. In Windows Vista SP1 or later, third-party handlers can also register themselves as the <b>application</b> <b>protocol</b> handler, so that searches can be performed using any search engine which the user has set as default, and not just Windows Search.|$|E
2500|$|Application phase: at this point, the [...] "handshake" [...] is {{complete}} and the <b>application</b> <b>protocol</b> is enabled, with content type of 23. Application messages exchanged between client and server {{will also be}} encrypted exactly like in their Finished message.|$|E
5000|$|IEC 61334-4-42:1996 Data {{communication}} <b>protocols</b> - <b>Application</b> <b>protocols</b> - <b>Application</b> layer ...|$|R
5000|$|IEEE 1278.1-1995 - Standard for Distributed Interactive Simulation - <b>Application</b> <b>protocols</b> ...|$|R
40|$|Abstract—Delay-tolerant Networking (DTN) enables com-munication in sparse mobile ad-hoc {{networks}} and other challenged environments where traditional networking fails and new routing and <b>application</b> <b>protocols</b> are required. Past experience with DTN routing and <b>application</b> <b>protocols</b> {{has shown that}} their performance is highly dependent on the underlying mobility and node characteristics. Evaluating DTN protocols across many scenarios requires suitable simulation tools. This paper presents the Opportunistic Networking Environment (ONE) simulator specifically de-signed for evaluating DTN routing and <b>application</b> <b>protocols.</b> It allows users to create scenarios based upon different synthetic movement models and real-world traces and offers a framework for implementing routing and <b>application</b> <b>protocols</b> (already including six well-known routing pro-tocols). Interactive visualization and post-processing tools support evaluating experiments and an emulation mode allows the ONE simulator {{to become part of}} a real-world DTN testbed. We examine a range of published simulation studies which demonstrate the simulator’s flexible support for DTN protocol evaluation...|$|R
2500|$|A smartSD {{memory card}} is a microSD card with an {{internal}} [...] "secure element" [...] {{that allows the}} transfer of ISO 7816 <b>Application</b> <b>Protocol</b> Data Unit commands to, for example, JavaCard applets running on the internal secure element through the SD bus.|$|E
2500|$|G.hn—A {{standard}} {{developed by}} ITU-T and promoted by [...] for high-speed (up to 1 Gbit/s) local area networks over existing home wiring (coaxial cables, {{power lines and}} phone lines). G.hn defines an <b>Application</b> <b>Protocol</b> Convergence (APC) layer that accepts Ethernet frames and encapsulates them into G.hn MSDUs.|$|E
2500|$|Application phase: at this point, the [...] "handshake" [...] is {{complete}} and the <b>application</b> <b>protocol</b> is enabled, with content type of 23. Application messages exchanged between client and server {{will also be}} authenticated and optionally encrypted exactly like in their Finished message. Otherwise, the content type will return 25 and the client will not authenticate.|$|E
5000|$|IEC 61334-4-41:1996 Data {{communication}} <b>protocols</b> - <b>Application</b> <b>protocols</b> - Distribution line {{message specification}} ...|$|R
5000|$|IEEE 1278.1A-1998 - Standard for Distributed Interactive Simulation - <b>Application</b> <b>protocols</b> Errata (May 1998) ...|$|R
5000|$|STANAG 3011: Joint Range Extension <b>Applications</b> <b>Protocol</b> (JREAP), a Tactical Data Link (TDL) {{protocol}} ...|$|R
2500|$|The Internet {{of things}} {{requires}} huge scalability {{in the network}} space to handle the surge of devices. IETF 6LoWPAN {{would be used to}} connect devices to IP networks. With billions of devices being added to the Internet space, IPv6 will {{play a major role in}} handling the network layer scalability. IETF's Constrained <b>Application</b> <b>Protocol,</b> ZeroMQ, and MQTT would provide lightweight data transport. [...] "MQ" [...] in [...] "MQTT" [...] came from IBM's MQ Series message queuing product line.|$|E
2500|$|Access to Wikipedia from {{mobile phones}} was {{possible}} {{as early as}} 2004, through the Wireless <b>Application</b> <b>Protocol</b> (WAP), via the Wapedia service. In June 2007 Wikipedia launched , an official website for wireless devices. In 2009 a newer mobile service was officially released, located at , which caters to more advanced mobile devices such as the iPhone, Android-based devices or WebOS-based devices. Several other methods of mobile access to Wikipedia have emerged. Many devices and applications optimize or enhance the display of Wikipedia content for mobile devices, while some also incorporate additional features such as use of Wikipedia metadata (See [...] ), such as geoinformation.|$|E
5000|$|MIL-STD-3011, Joint Range Extension <b>Application</b> <b>Protocol</b> (JREAP) ...|$|E
5000|$|Version 1 - Standard for Distributed Interactive Simulation - <b>Application</b> <b>Protocols,</b> Version 1.0 Draft (1992) ...|$|R
5000|$|Joint Range Extension <b>Applications</b> <b>Protocol</b> (JREAP), allows {{transmission}} of M-Series and J-Series messages over long-distance networks.|$|R
40|$|This {{thesis is}} focused on {{identification}} of <b>application</b> <b>protocols</b> with emphasizing the speed of their recognition and following possibility of hardware implementation. Nowadays tools are not suitable for fast identification of <b>application</b> <b>protocols</b> in current network monitoring devices, because the decision is not provided for the first packets of network flow. Therefore this thesis propose new model for fast and reliable identification of <b>application</b> <b>protocols.</b> The model was implemented and tested on HTTP, SIP, SMTP and DNS protocols and results were compared to regular expressions and nDPI and libprotoident libraries. For all these protocols, the proposed model has comparable accuracy to other methods, but also provides fast result based on the first packets of the flow...|$|R
5000|$|ISO 15118-4: Network and <b>application</b> <b>protocol</b> {{conformance}} test ...|$|E
5000|$|IFSF is {{more complex}} but more {{comprehensive}} than most proprietary protocols. The IFSF protocol has two independent layers; a device <b>application</b> <b>protocol</b> layer and a communications protocol layer. The <b>application</b> <b>protocol</b> is independent of the underlying communications layer. The communications protocol specification makes the link to the transport layer.|$|E
5000|$|Application-Layer Host: traffic {{statistics}} by <b>application</b> <b>protocol,</b> per host ...|$|E
5000|$|Version 3 - Standard for Distributed Interactive Simulation - <b>Application</b> <b>Protocols,</b> Version 2.0 Third Draft (May 1993) ...|$|R
5000|$|Version 4 - Standard for Distributed Interactive Simulation - <b>Application</b> <b>Protocols,</b> Version 2.0 Fourth Draft (March 1994) ...|$|R
5000|$|BEEP defines 5 {{message types}} to allow {{most of the}} <b>application</b> <b>protocols</b> {{patterns}} needed. They are the following: ...|$|R
5000|$|... #Subtitle level 4: CAN <b>application</b> <b>protocol</b> over EtherCAT (CoE) ...|$|E
5000|$|WAP1, Wireless <b>Application</b> <b>Protocol</b> 1, 5-layer {{stack of}} {{protocols}} ...|$|E
5000|$|Internet {{applications}} for smart devices through wireless <b>application</b> <b>protocol</b> (WAP) ...|$|E
50|$|Anyone can run an OpenAutonomy server or {{extend the}} {{capabilities}} of existing servers and applications by defining their own <b>application</b> <b>protocols.</b>|$|R
5000|$|... 242 (Managed model based 3D engineering) - the {{merging of}} the two leading STEP <b>application</b> <b>protocols,</b> AP 203 and AP 214.|$|R
50|$|OSI <b>application</b> <b>protocols</b> such as X.400 and X.500 use the {{services}} provided by ROSE. The ROSE protocol itself is defined using the notation of ASN.1.|$|R
