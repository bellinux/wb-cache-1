11|46|Public
50|$|An <b>{{application}}</b> <b>identifier</b> (AID) is used {{to address}} an application in the card. An AID consists of a registered application provider identifier (RID) of five bytes, which is issued by the ISO/IEC 7816-5 registration authority. This {{is followed by a}} proprietary <b>application</b> <b>identifier</b> extension (PIX), which enables the application provider to differentiate among the different applications offered. The AID is printed on all EMV cardholder receipts.|$|E
5000|$|The FNCx {{codes are}} used for special purposes. FNC1 at the {{beginning}} of a bar code indicates a GS1-128 bar code which begins with a 2- 3- or 4-digit <b>application</b> <b>identifier</b> assigned by the Uniform Code Council, which explains the following digits. For example, <b>application</b> <b>identifier</b> 421 indicates that an ISO 3166-1 numeric country code and ship-to postal code follows. Thus, the U.S. ZIP code for the White House would generally be printed as [...] "(421) 840 20500", but would actually be coded as [...] "" ...|$|E
50|$|According to its abstract, ISO/IEC 7816-5 defines {{how to use}} an <b>application</b> <b>identifier</b> to {{ascertain}} the presence of and/or perform the retrieval of an application in a card.|$|E
40|$|This {{standard}} {{provides a}} comprehensive dictionary of MH 10 /SC 8 Data Identifiers and GS 1 <b>Application</b> <b>Identifiers,</b> {{provides for the}} assignment of new Data Identifiers, as required, and provides a document detailing the correlation, or mapping, of Data <b>Identifiers</b> to <b>Application</b> <b>Identifiers,</b> where a correlation exists...|$|R
5000|$|ISO/IEC 15418:2009—Symbol Data Format Semantics (GS1 <b>Application</b> <b>Identifiers</b> and ASC MH10 Data Identifiers and maintenance) ...|$|R
5000|$|ISO/IEC 7816-5:2004 {{shows how}} {{to grant the}} {{uniqueness}} of <b>application</b> <b>identifiers</b> through the international registration of {{a part of this}} identifier, and defines ...|$|R
5000|$|It is {{possible}} to encode several pieces of data in one barcode. For example, a product serial number (<b>application</b> <b>identifier</b> code 21), production date (code 11), and expiration date (code 17) together would look something like this: ...|$|E
50|$|A Diameter Application {{is not a}} {{software}} application but is a protocol based on the Diameter base protocol defined in RFC 6733 (Obsoletes: RFC 3588). Each application is defined by an <b>application</b> <b>identifier</b> and can add new command codes and/or new mandatory AVPs (Attribute-Value Pair). Adding a new optional AVP {{does not require a}} new application.|$|E
50|$|Each node is {{assigned}} a unique nodeID uniformly distributed {{in a large}} identifier space. Tapestry uses SHA-1 to produce a 160-bit identifier space represented by a 40 digit hex key.Application specific endpoints GUIDs are similarly assigned unique identifiers. NodeIDs and GUIDs are roughly evenly distributed in the overlay network with each node storing several different IDs. From experiments it is shown that Tapestry efficiency increases with network size, so multiple applications sharing the same overlay network increases efficiency. To differentiate between applications a unique <b>application</b> <b>identifier</b> is used.Tapestry uses best-effort to publish and route objects.|$|E
5000|$|The GS1-128 {{standard}} is an application standard within the Code 128 barcode. It identifies data with <b>Application</b> <b>Identifiers</b> (AI). Without spaces below, a simple SSCC (Serial Shipping Container Code) barcode would look something like this: [...] FNC1 00 12345678 0000000001 ...|$|R
50|$|GS1-128 is an {{application}} standard of the GS1 implementation using the Code 128 barcode specification. The former correct name was UCC/EAN-128. Other no longer used names have included UCC-128 and EAN-128. GS1-128 uses {{a series of}} <b>Application</b> <b>Identifiers</b> to include additional data such as best before dates, batch numbers, quantities, weights and many other attributes needed by the user.|$|R
50|$|In {{order to}} address these {{problems}} GS1 {{came up with a}} new solution for coupon barcodes. Instead of using a UPC barcode with an Extended UCC/EAN part, it decided to use a single GS1 DataBar Expanded Stacked (formerly RSS Expanded Stacked) bar code. This bar code can hold up to 74 numeric digits or 41 alphanumeric characters, and can be encoded with multiple coupon-specific <b>Application</b> <b>Identifiers</b> such as expiration date, serial number, etc.|$|R
50|$|NSAPI is {{also used}} {{as part of the}} Tunnel Identifier between GPRS Support Nodes (GSNs). The user {{identity}} (International Mobile Subscriber Identity (IMSI)) and the <b>application</b> <b>identifier</b> (NSAPI) are integrated into the Tunnel Identifier (GTPv0) (TID) or Tunnel Endpoint Identifier (GTPv1) (TEID) that uniquely identifies the subscriber’s sublink between the GSNs (SGSN and GGSN). The SGSN inserts the NSAPI along with the SGSN address in the “Create PDP Context Request.” One PDP context may have several (secondary) PDP contexts and NSAPI. The NSAPI is an integer value within the PDP context header.|$|E
50|$|In {{addition}} to encoding <b>Application</b> <b>Identifier</b> (01) GTIN, GS1 DataBar Expanded and GS1 DataBar Expanded Stacked can encode additional GS1 Application Identifiers such as sell-by date, weight, and lot number. Each symbol has {{a capacity of}} up to 74 characters. These attributes can help in controlling shrinkage, optimizing product replenishment, and improving the traceability of a product {{at the point of}} sale. They are seeing increased use in manufacturers' coupons. Starting June 2011 GS1 Databar use is mandated for coupons and the use of UPC-A must be discontinued.|$|E
40|$|This note {{discusses}} a verification in PVS of the AID (<b>Application</b> <b>Identifier)</b> {{class from}} JavaCard's API. The properties that are verified are formulated {{in the interface}} specification language JML. This language {{is also used to}} express the properties that are assumed about the native methods from the Util class that are used in the AID class...|$|E
30|$|These {{messages}} {{contain the}} sender node’s related information: its <b>identifier,</b> its supported <b>application</b> <b>identifiers,</b> {{the time required}} for this information to expire, and its resource availability (e.g., CPU, bandwidth). Upon receiving this information, a neighbour node calculates, with its own judgement, the global rate of the announcer node. This judgement, as described before, consists of associating weights with the measured availability of every single resource. The proximity level between the announcer node and its neighbour is also taken into account.|$|R
50|$|IUID is {{physically}} marked on tangible items or assets using a two-dimensional (2D) Data Matrix symbol {{with the data}} formatted in accordance with specified standards. The encoded data is identified {{by the use of}} data <b>identifiers,</b> <b>application</b> <b>identifiers</b> or text element identifiers. The choice of which identifier to use is based upon normal industry practices of the organization assigning the serialization. The formatted data is called a Unique Item Identifier (UII). The Data Matrix symbol is a machine-readable representation of the UII.|$|R
5000|$|... the {{application}} is therefore started as this way, the <b>application</b> knows its <b>identifier</b> ...|$|R
40|$|Abstract—Mobility is a {{requirement}} not appropriately ad-dressed by the original design of the Internet since an IP address has two fundamentally different tasks. It specifies a network location (for routing) and serves as an <b>application</b> <b>identifier.</b> A plethora of suggestions {{have been made to}} overcome this, e. g., Mobile IP and HIP. Yet, each of the proposed solutions has drawbacks such as requiring fundamental changes to the Internet architecture or relying on triangular routing. We propose the Seamless Internet Mobility System (SIMS) for enabling seamless IP network layer mobility. Our goals are (1) to enable mobility even for users that do not have a permanent IP address and therefore cannot rely on a Mobile IP home agent; (2) to impose no overhead for applications initiating network traffic in the current network; (3) to preserve sessions that started in any previously visited network location; (4) to be robust, scalable, and easily deployable in the current Internet; (5) address the economics of roaming between different administrative domains. The key ideas are to allow any new connection to use the current IP address and {{to take advantage of the}} heavy-tailed nature of connections. This implies that after a network change only a small number of connections need to be retained. I...|$|E
5000|$|GIFas an <b>Application</b> Extension with <b>identifier</b> [...] "XMP Data" [...] and {{authentication}} code [...] "XMP" ...|$|R
40|$|Abstract Background Combining {{multiple}} databases with disjunctive or {{additional information}} on the same person is occurring increasingly throughout research. If unique identification numbers for these individuals are not available, probabilistic record linkage {{is used for the}} identification of matching record pairs. In many <b>applications,</b> <b>identifiers</b> have to be encrypted due to privacy concerns. Methods A new protocol for privacy-preserving record linkage with encrypted identifiers allowing for errors in identifiers has been developed. The protocol is based on Bloom filters on q -grams of identifiers. Results Tests on simulated and actual databases yield linkage results comparable to non-encrypted identifiers and superior to results from phonetic encodings. Conclusion We proposed a protocol for privacy-preserving record linkage with encrypted identifiers allowing for errors in identifiers. Since the protocol can be easily enhanced and has a low computational burden, the protocol might be useful for many applications requiring privacy-preserving record linkage. </p...|$|R
40|$|Abstract — Naming and {{addressing}} are important issues for Next Generation Internet (NGI). In this paper, we discuss a new Mobility and Multihoming supporting Identifier Locator Split Architecture (MILSA). There are three main contributions of our solution. First, we separate trust relationships (realms) from connectivity (zones). A hierarchical identifier {{system for the}} realms and a Realm Zone Bridging Server (RZBS) infrastructure that performs the bridging function is introduced. Second, we separate the signaling and data plane functions to improve the performance and support mobility. Third, to provide transparency to the upper layer <b>applications,</b> <b>identifier</b> locator split happens in network layer. A Hierarchical URI-like Identifier (HUI) {{is used by the}} upper layers and is mapped to a locators set by HUI Mapping Sublayer (HMS) through interaction with RZBS infrastructure. Further scenarios description and analysis show the benefits of this scheme for routing scalability, mobility and multihoming...|$|R
5000|$|In XML <b>applications,</b> {{fragment}} <b>identifiers</b> in {{a certain}} syntax can be XPointers; for example, the fragment identifier in the URI [...] refers to all XML elements named [...] "Rube" [...] in the document identified by the URI [...] An XPointer processor, given that URI, would obtain {{a representation of the}} document (such as by requesting it from the Internet) and would return a representation of the document's [...] "Rube" [...] elements.|$|R
50|$|Digital {{identity}} fundamentally requires digital identifiers—strings or tokens {{that are}} unique {{within a given}} scope (globally or locally within a specific domain, community, directory, <b>application,</b> etc.). <b>Identifiers</b> are the key used by the parties to an identification relationship {{to agree on the}} entity being represented. Identifiers may be classified as omnidirectional and unidirectional. Omnidirectional identifiers are intended to be public and easily discoverable, while unidirectional identifiers are intended to be private and used only {{in the context of a}} specific identity relationship.|$|R
50|$|Each {{managed object}} has an {{immutable}} Value {{such as a}} key block that contains a cryptographic key. They also contain mutable Attributes {{which can be used}} to store meta data about the keys. Some attributes are derived directly from the Value, such as the cryptographic algorithm and length of a key. Other attributes are defined in the specification for the management of objects such as the <b>Application</b> Specific <b>Identifier</b> which is usually derived from tape identification data. Additional identifiers can be defined by the server or client as need by the application.|$|R
50|$|The Finds <b>Identifier</b> <b>application</b> was {{proposed}} to help {{members of the}} general public classify archaeological objects. The user would be presented with a set of questions, like the material of the object, dimensions, allowing the application to retrieve matching objects from reference collections and present an image of the objects and a description to the user so he/she can further narrow down the classification.|$|R
40|$|Many Internet and Web <b>applications</b> use session <b>identifiers.</b> Too often, {{developers}} of those applications make the bad assumption {{that all is}} well because session identifiers are only known to authorized users. However, in many cases, session identifiers can leak out or be guessed, sometimes trivially. If presenting an identifier is the only authorization an application requires, it can represent an easily exploited vulnerability. Although these vulnerabilities are old and well-known, some recent examples of problems arising from them show that developers must remain on guard against them...|$|R
40|$|Maximizing the {{objectives}} {{to be achieved}} within agro-tourist farm units, it is possible by establish a specific order of priorities (turnover, profit and revenue, revenue and profit for the farm {{and the need to}} diversify its activities). In order to maximize any business in general and the agro-tourist in particular, must take into account the uniqueness of brands. The moment of creating a strong brand is when the product obtained by traditional technology is given a special meaning by <b>application</b> of an <b>identifier</b> element that distinguishes it from competing products. </p...|$|R
40|$|Abstract. Ubiquitous ID is {{a general}} purpose {{framework}} for implement-ing context-aware ubiquitous computing <b>applications,</b> where <b>identifiers</b> (called ucode numbers) and their relations are maintained {{in a large scale}} distributed database called UCRDB. Since we have to maintain a huge amount of data in UCRDB, it is sometimes desirable to delegate some subqueries to the “legacy ” text-base search engines. In this paper, we pro-pose a new query language construct for UCRDB (but can be applied to any other similar technologies such as RDF databases) that enables such a dynamic linking. Using this approach, context of the real world and legacy contents exist in the digital space can be seamlessly combined, and we can view UCRDB and legacy search engines as a single hybrid database so that no programming to “hard-wire ” existing services is re-quired. Furthermore, in our system, configurations of dynamic linking are described as a rule base stored in UCRDB itself, thus the resulting system is very simple but highly flexible and extensible. ...|$|R
40|$|In this paper, a rapid {{resynchronization}} method using intent logs {{is suggested}} for replication In-memory databases supporting mobile communication <b>applications.</b> Both the <b>identifiers</b> of unsynchronized segments and the identifiers {{of the slaves}} who have missed the updates in the segments are recorded in the intent logs. When receiving a resynchronization request from a slave, the master will scan the intent logs to find the unsynchronized segments for the salve, and then send the segments gotten directly from its memory to the slave. The performance results shown the intent logs method can reduce resynchronization time than methods using transaction logs. 1...|$|R
40|$|This {{article has}} been {{accepted}} for publication in a future issue of this journal, but has not been fully edited. Content may change prior to final publication. Abstract:  The use of embedded secret information such as keys for cryptographic <b>applications,</b> unique <b>identifiers</b> for authentication, and activation of on-chip features is becoming increasingly commonplace in ASICs and FPGAs. The generation of these secret bitstrings using physical unclonable functions, or PUFs, offers distinct advantages over conventional, e. g., EPROM-based methods, in several ways, including eliminating the need to store the bitstring into, and the cost of, a specialized non-volatile memory, and {{increasing the number of}} random bits. This paper presents a new PUF called the Hardware-Embedded Delay PUF, or HELP. HELP leverages the natural variations that occur in the path delays of a core macro on a chip to create a unique, stable, and random bitstring of virtually any length. We evaluate several quality statistical metrics of HELP on 29 FPGA boards across a temperature range of 0 to 70 °C, and propose an error-avoiding scheme that provides high probability against bit flips...|$|R
40|$|The use of {{tracking}} settings in smartphones facilitates {{the provision of}} tailored services to users by allowing service providers access to unique identifiers stored on the smartphones. In this paper, we investigate the `tracking of' settings on the Blackberry 10 and Windows Phone 8 platforms. To determine if they work as claimed, {{we set up a}} test bed suitable for both operating systems to capture traffic between the smartphone and external servers. We dynamically execute a set of similar Blackberry 10 and Windows Phone 8 applications, downloaded from their respective official markets. Our results indicate that even if users turn {{of tracking}} settings in their smartphones, some <b>applications</b> leak unique <b>identifiers</b> without their knowledge...|$|R
30|$|The MDR-received {{data format}} {{conforms}} to the space packet (CCSDS) regulation as the upper layer protocol of the SpaceWire/RMAP (CCSDS 2012). When the MDR receives the data packet, it reads the <b>application</b> process <b>identifier</b> (APID) included in the space packet primary header and the category that is the MDR save destination area, and checks whether the corresponding area for the category exists. When there is a corresponding category, the received data is registered in a queue that is prepared for each category. The MDR creates the table that correlates the satellite time written in the received data with the physical address {{in which it is}} to be saved on the Flash-ROM, such that the time search function of the saved data in the MDR can be performed. The new “time search function” in the MDR was developed to facilitate access to the stored data. The time tag information is stored in the secondary header of the received space packet. This time the tag information is recorded in the data, not as the receipt time by the MDR, but as the time of data generation by each instrument.|$|R
40|$|UriGraph is a Web site {{structure}} model that specifies identity, identifier, position {{and composition of}} each resource constituting the Web site. This paper presents the <b>application</b> of resources <b>identifier</b> model (a subset of UriGraph) to Uniform Resource Identifier (URI) design. The URI technology {{is essential to the}} Web, and exposure of URIs to the user makes it a major - although often overlooked - part of the Web user interface. The process of assigning specific URIs to resources on the Web site and thinking up rules for mapping URI subspaces to classes of resources has become known as the URI design. The paper lists requirements and gives recommendations for URI design in general, and for multilingual Web sites in particular. A case study illustrates the proposed approach...|$|R
40|$|Databases often inaccurately {{identify}} entities of interest. Two operations, consolidation {{and link}} formation, which complement the usual machine learning techniques that use similarity-based clustering to discover classifications, are proposed as essential components of KDD systems for certain <b>applications.</b> Consolidation relates <b>identifiers</b> {{present in a}} database {{to a set of}} real world entities (RWE's) which are not uniquely identified in the database. Consolidation may also be viewed as a transformation of representation from the identifiers present in the original database to the RWE's. Link formation constructs structured relationships between consolidated RWE's through identifiers and events explicitly represented in the database. An operational knowledge discovery system which identifies potential money laundering in a database of large cash transactions implements consolidation and link formation. Consolidation and link formation are easily implemented as index creation in relatio [...] ...|$|R
40|$|The CCSDS Recommendations on Telemetry and Telecommand {{are used}} by many space {{projects}} around the world because they specify efficient, flexible methods for communications between ground systems and onboard instruments. They specify a method for addressing onboard instruments and subsystems, which uses {{the combination of the}} Spacecraft Identifier (SCID) and the <b>Application</b> Process <b>Identifier</b> (APID). Onboard instruments and subsystems can be identified with the combination of these identifiers uniquely if each spacecraft is operated independently of other spacecraft. In a constellation of space elements, however, the communications method of the CCSDS Recommendations does not work, and capabilities for internetworking must be introduced. This paper proposes a simple method for space internetworking, which is based on the methods used by the current space projects. The proposed method uses the technique of Packet encapsulation. Packets to be relayed by a relay element are transmitted between the ground and the relay element encapsulated in Packets for the relay element. This method does not require development of a new protocol at all. It can be implemented by just adding a component that encapsulates and decapsulates Packets to current systems, and components developed for current space projects can be reused without any modification. This method can also be used for constellations with several hops and several elements without any modification to the basic concept. I...|$|R
