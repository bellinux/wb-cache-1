816|2056|Public
5|$|A URL is a URI that, in {{addition}} to identifying a web resource, specifies the means of acting upon or obtaining the representation of it, i.e. specifying both its primary <b>access</b> <b>mechanism</b> and network location. For example, the URL http://example.org/wiki/Main_Page refers to a resource identified as /wiki/Main_Page whose representation, {{in the form of}} HTML and related code, is obtainable via the Hypertext Transfer Protocol (http:) from a network host whose domain name is example.org.|$|E
5000|$|The {{complexity}} of a monolithic application is only shifted into the network, but persists: [...] You can move it about but it's still there! Robert Annett: Where is the complexity? [...] Also, an application {{made up of}} any number of microservices has to access its respective ecosystem which may have unnecessary complexity. This kind of complexity can be reduced by standardizing the <b>access</b> <b>mechanism.</b> The Web as a system standardized the <b>access</b> <b>mechanism</b> by retaining the same <b>access</b> <b>mechanism</b> between browser and application resource over the last 20 years. Using the number of Web pages indexed by Google it grew from 26 million pages in 1998 to around 60 trillion individual pages by 2015 without the need to change its <b>access</b> <b>mechanism.</b> The Web itself is an example that the complexity inherent in traditional monolithic software systems can be overcome.|$|E
5000|$|Supports system {{configurations}} using the CSMA/CD <b>access</b> <b>mechanism</b> defined with baseband signaling.|$|E
40|$|Multicore {{architectures}} {{have established}} {{themselves as the}} new generation of computer architectures. As part of the one core to many cores evolution, memory <b>access</b> <b>mechanisms</b> have advanced rapidly. Several new memory <b>access</b> <b>mechanisms</b> have been implemented in many modern commodity multicore architectures. By specifying how processing cores access shared memory, memory <b>access</b> <b>mechanisms</b> directly influence the synchronization capabilities of multicore architectures. Therefore, it is crucial to investigate the synchronization power of these new memory <b>access</b> <b>mechanisms.</b> This paper investigates the synchronization power of coalesced memory accesses, a family of memory <b>access</b> <b>mechanisms</b> introduced in recent large multicore architectures such as the Compute Unified Device Architecture (CUDA). We first define three memory access models to capture the fundamental features of the new memory <b>access</b> <b>mechanisms.</b> Subsequently, we prove the exact synchronization power of these models in terms of their consensus numbers. These tight results show that the coalesced memory <b>access</b> <b>mechanisms</b> can facilitate strong synchronization between the threads of multicore architectures, without the need of synchronization primitives other than reads and writes. In the case of the contemporary CUDA processors, our results imply that the coalesced memory <b>access</b> <b>mechanisms</b> have consensus numbers up to 64...|$|R
40|$|Abstract—Multicore {{architectures}} {{have established}} {{themselves as the}} new generation of computer architectures. As part of the one core to many cores evolution, memory <b>access</b> <b>mechanisms</b> have advanced rapidly. Several new memory <b>access</b> <b>mechanisms</b> have been implemented in many modern commodity multicore architectures. By specifying how processing cores access shared memory, memory <b>access</b> <b>mechanisms</b> directly influence the synchronization capabilities of multicore architectures. Therefore, it is crucial to investigate the synchronization power of these new memory <b>access</b> <b>mechanisms.</b> This paper investigates the synchronization power of coalesced memory accesses, a family of memory <b>access</b> <b>mechanisms</b> introduced in recent large multicore architectures such as the Compute Unified Device Architecture (CUDA). We first define three memory access models to capture the fundamental features of the new memory <b>access</b> <b>mechanisms.</b> Subsequently, we prove the exact synchronization power of these models in terms of their consensus numbers. These tight results show that the coalesced memory <b>access</b> <b>mechanisms</b> can facilitate strong synchronization between the threads of multicore architectures, without the need of synchronization primitives other than reads and writes. In the case of the contemporary CUDA processors, our results imply that the coalesced memory <b>access</b> <b>mechanisms</b> have consensus numbers up to sixty four. Index Terms—Memory access models, consensus, multicore architectures, inter-process synchronization. I...|$|R
30|$|Due to the {{classical}} wireless nature of cognitive radio, existing channel <b>access</b> <b>mechanisms</b> (e.g. random, time slotted and hybrid, a combination of random and time slotted) could be applied. The classification of CR MAC protocols based on different channel <b>access</b> <b>mechanisms</b> is further described below.|$|R
5000|$|PSPACE (with {{restricted}} oracle <b>access</b> <b>mechanism)</b> is also self-low, {{and this}} can be established by exactly the same argument.|$|E
50|$|The IBM 350 Disk Storage Unit {{consisted}} of the magnetic disk memory unit with an <b>access</b> <b>mechanism,</b> the controls for the <b>access</b> <b>mechanism,</b> and a small air compressor. Assembled with covers, the 350 apparatus was 60 inches (1.52 m) long, 68 inches (1.73 m) high and 29 inches (0.74 m) deep. It was configured with 50 magnetic disks containing 50,000 sectors, each of which held 100 six-bit alphanumeric characters, for a capacity of 5 million six-bit characters.|$|E
50|$|One unique {{feature of}} the Adaptation Fund is its direct <b>access</b> <b>mechanism,</b> which enables {{accredited}} national implementing entities (NIEs) and regional implementing agencies (RIEs) in developing countries to directly access climate adaptation financing.|$|E
40|$|Much of the {{programming}} done today requires data access. With {{large amounts of}} data being maintained in databases, <b>access</b> <b>mechanisms</b> that allow manipulation of this data are vital. Visual Basic is a popular programming package because of its user-friendly interface and data access features. Two popular data <b>access</b> <b>mechanisms</b> are data bound controls with data access objects, and remote data controls with remote data objects. The main difference between these methods are that data bound controls ar...|$|R
40|$|Ecosystem {{services}} are supplied by nature but, by definition, are received by people. Ecosystem service assessments, intended {{to influence the}} decisions people make regarding their interactions with nature, {{need to understand how}} people benefit from different ecosystem services. A critical question is therefore, What determines the distribution of ecosystem service benefits between different sections of society? Here, we use an entitlements approach to examine how people perceive ecosystem service benefits across 28 coral reef fishing communities in four countries. In doing so, we quantitatively show that bundles of benefits are mediated by key <b>access</b> <b>mechanisms</b> (e. g., rights-based, economic, knowledge, social, and institutional). We find that specific <b>access</b> <b>mechanisms</b> influence which ecosystem services people prioritize. Social, institutional, and knowledge mechanisms are associated with the largest number and diversity of benefits. However, local context strongly determines whether specific <b>access</b> <b>mechanisms</b> enable or constrain benefits. Local ecological knowledge enabled people to prioritize a habitat benefit in Kenya, but constrained people from prioritizing the same benefit in Madagascar. Ecosystem service assessments, and their resultant policies, need to include the broad suite of <b>access</b> <b>mechanisms</b> that enable different people to benefit from a supply of ecosystem services...|$|R
5000|$|OpenLink Software ships JDBC Drivers for {{a variety}} of databases, {{including}} Bridges to other data <b>access</b> <b>mechanisms</b> (e.g., ODBC, JDBC) which can provide more functionality than the targeted mechanism ...|$|R
50|$|In 1992, the Major BBS was {{selected}} by the National Library of Medicine as the <b>access</b> <b>mechanism</b> for the Grateful Med medical journal system, just prior to universal access via the World Wide Web.|$|E
50|$|These are unicast and {{broadcast}} channels {{that do not}} have analogs in ISDN. These channels are used almost exclusively for radio resource management. The AGCH and RACH together form the medium <b>access</b> <b>mechanism</b> for Um.|$|E
5000|$|Orrick advised U-Shin, one of Asia’s largest {{producers}} of automotive access mechanisms, in its multijurisdiction acquisition of Valeo’s <b>Access</b> <b>Mechanism</b> Business. The acquisition involved 12 plants in eight jurisdictions including Asia, Europe and South America.|$|E
50|$|Files are {{protected}} by the usual security <b>access</b> <b>mechanisms</b> such as public or private, or a file may have a guard file where the owner can specify complex security rules.|$|R
40|$|Abstract — We {{investigate}} {{the problem of}} efficient resource control for elastic traffic over the EDCA (Enhanced Distributed Channel Access) and HCCA (Hybrid Coordination Function-HCF- Controlled Channel <b>Access)</b> <b>mechanisms</b> of IEEE 802. 11 e. Our approach considers an economic modelling framework based on congestion pricing that captures how various factors, such as the probability of attempting to transmit a frame, the transmission opportunity (TXOP), and the physical layer transmission rate, contribute to congestion. Additionally, we consider the joint control of the EDCA and HCCA mechanisms, which allows us to determine the optimal sharing of the wireless channel between the two <b>access</b> <b>mechanisms.</b> I...|$|R
40|$|International audienceHigh Performance Fortran {{and other}} similar {{languages}} have been designed {{as a means to}} express portable data parallel programs for distributed memory machines. As data distribution is a key-feature for exploiting the parallelism of applications, a crucial point for HPF compilers is their ability to manage efficiently distributed arrays. We present in this paper an innovative method to allocate local blocks and temporaries for received values and to manage the associated <b>access</b> <b>mechanisms.</b> The performance of these <b>access</b> <b>mechanisms</b> is measured and experimental results on the use of this array management within an existing compiler are shown...|$|R
50|$|In the 1980s, {{voice mail}} systems with IVR-like {{features}} were {{recognized as an}} <b>access</b> <b>mechanism</b> to corporate information for mobile employees, before the explosion of cell phones {{and the proliferation of}} PCs. E-mail also began to grow in popularity, and as early as 1985, e-mail reading features were made available for certain voicemail.|$|E
50|$|A URL is a URI that, in {{addition}} to identifying a web resource, specifies the means of acting upon or obtaining the representation of it, i.e. specifying both its primary <b>access</b> <b>mechanism</b> and network location. For example, the URL '''' refers to a resource identified as '''' whose representation, {{in the form of}} HTML and related code, is obtainable via the Hypertext Transfer Protocol (http:) from a network host whose domain name is ''''.|$|E
5000|$|Access {{transparency}} - Local {{and remote}} system entities must remain indistinguishable when viewed through the user interface. The distributed operating system maintains this perception through {{the exposure of}} a single <b>access</b> <b>mechanism</b> for a system entity, regardless of that entity being local or remote to the user. Transparency dictates that any differences in methods of accessing any particular system entity—either local or remote—must be both invisible to, and undetectable by the user.|$|E
50|$|TSCH {{can be seen}} as a {{combination}} of Time division multiple access and Frequency-division multiple <b>access</b> <b>mechanisms</b> as it uses diversity in time and frequency to provide reliability to the upper network layers.|$|R
40|$|This paper {{investigates the}} {{synchronization}} power of coalesced memory accesses, {{a family of}} memory <b>access</b> <b>mechanisms</b> introduced in recent large multicore architectures like the CUDA graphics processors. We first design three memory access models to capture the fundamental features of the new memory <b>access</b> <b>mechanisms.</b> Subsequently, we prove the exact synchronization power of these models {{in terms of their}} consensus numbers. These tight results show that the coalesced memory <b>access</b> <b>mechanisms</b> can facilitate strong synchronization between the threads of multicore processors, without the need of synchronization primitives other than reads and writes. Moreover, based on the intrinsic features of recent GPU architectures, we construct strong synchronization objects like wait-free and t-resilient read-modify-write objects for a general model of recent GPU architectures without strong hardware synchronization primitives like test-and-set and compare-and-swap. Accesses to the wait-free objects have time complexity O(N), where N is the number of processes. Our result demonstrates {{that it is possible to}} construct waitfree synchronization mechanisms for GPUs without the need of strong synchronization primitives in hardware and that wait-free programming is possible for GPUs...|$|R
30|$|The CSMA medium <b>access</b> <b>mechanisms</b> {{that are}} {{implemented}} by different communication protocols differ {{on how the}} waiting time intervals before transmitting are evaluated, either after sensing the medium idle, or before re-transmitting after a collision.|$|R
50|$|CAC layer {{provides}} hierarchical independence with Elimination-Yield Non-Preemptive Multiple <b>Access</b> <b>mechanism</b> (EY-NPMA). EY-NPMA codes priority {{choices and}} other functions into one variable length radio pulse preceding the packet data. EY-NPMA enables the network to function with few collisions {{even though there}} would be a large number of users. Multimedia applications work in HiperLAN because of EY-NPMA priority mechanism. MAC layer defines protocols for routing, security and power saving and provides naturally data transfer to the upper layers.|$|E
50|$|Databases are {{essential}} for bioinformatics research and applications. Many databases exist, covering various information types: for example, DNA and protein sequences, molecular structures, phenotypes and biodiversity. Databases may contain empirical data (obtained directly from experiments), predicted data (obtained from analysis), or, most commonly, both. They may be specific to a particular organism, pathway or molecule of interest. Alternatively, they can incorporate data compiled from multiple other databases. These databases vary in their format, <b>access</b> <b>mechanism,</b> and whether they are public or not.|$|E
50|$|Visual SourceSafe's {{stability}} is criticised {{due to the}} way Visual SourceSafe uses a direct, file-based <b>access</b> <b>mechanism</b> that allows any client to modify a file in the repository after locking it. If a client machine crashes {{in the middle of}} updating a file, it can corrupt that file. Many users of Visual SourceSafe mitigate this risk by making use of a utility provided by Visual SourceSafe that checks the database for corruption and, when able, corrects errors that it finds.|$|E
40|$|As {{computer}} technologies become pervasive, {{the need}} for <b>access</b> control <b>mechanisms</b> grow. The purpose of an access control is to limit the operations that a computer system user can perform. Thus, access control ensures to prevent an activity {{which can lead to}} a security breach. For the success of Semantic Web, that allows machines to share and reuse the information by using formal semantics for machines to communicate with other machines, <b>access</b> control <b>mechanisms</b> are needed. <b>Access</b> control <b>mechanism</b> indicates certain constraints which must be achieved by the user before performing an operation to provide a secure Semantic Web. In this work, unlike traditional <b>access</b> control <b>mechanisms,</b> an &quot;Ontology Based <b>Access</b> Control&quot; <b>mechanism</b> has been developed by using Semantic Web based policies. In this mechanism, ontologies are used to model the access control knowledge and domain knowledge is used to create policy ontologies...|$|R
50|$|Access to {{information}} is {{established by the}} Constitution, and individual <b>access</b> <b>mechanisms</b> are detailed by a 1999 amendment to the Administrative Procedure Code. Access can be restricted for information concerning national security, criminal investigations, as well as privacy concerns.|$|R
3000|$|Dynamic {{spectrum}} access techniques using cognitive radios face several {{challenges to}} offer spectrum sensing, learning, decision and monitoring capabilities, {{as well as}} the cognitive channel <b>access</b> <b>mechanisms</b> to avoid channel access conflicts between themselves and with the primary spectrum users. By monitoring and learning about the current radio spectrum utilization patterns, the decision logic in cognitive radios {{can take advantage of the}} vacant [...] "spectrum holes" [...] [18] in different locations and during time periods and opportunistically tune their transceivers into these spectrum holes to communicate with each other [19]. Therefore, the channel <b>access</b> <b>mechanisms</b> are opportunistic in nature, and pose significant system requirements to the cognitive radios due to their radio spectrum agility.|$|R
50|$|Nearline {{tape and}} optical storage has the {{advantage}} of relatively longer lifespans compared to spinning hard drives, simply due to the storage media being idle and usually stored in protected dust-free enclosures when not in use. In a robotic tape loading system, the tape drive used for accessing data experiences the most wear and may need occasional replacement, but the tapes themselves can last for years to decades. If there are sealable access doors between the <b>access</b> <b>mechanism</b> and the media, it is possible for the idle media storage enclosure to survive fire, floods, lightning strikes, and other disasters.|$|E
5000|$|A {{major concern}} was that cable {{operators}} were not motivated to provide efficient security access mechanisms to equipment competitors. To address this, the FCC directed that by January 1, 2005, that cable operators must use the same separable access device available to third-parties and they were banned from providing equipment with an integrated security <b>access</b> <b>mechanism.</b> This rule is usually {{referred to as the}} [...] "integration ban", and was unsuccessfully challenged in the courts and petitions to the FCC by the cable operators. The deadline was shifted forward twice until it went into effect on July 1, 2007. The ban on integrated security ended in December 2015.|$|E
5000|$|The second {{method was}} created for PCI Express. It is called Enhanced Configuration <b>Access</b> <b>Mechanism</b> (ECAM). It extends device's {{configuration}} space to 4k, with the bottom 256 bytes overlapping the original (legacy) configuration space in PCI. The section of the addressable space is [...] "stolen" [...] so that the accesses from the CPU don't go to memory but rather reach a given device in the PCI Express fabric. During system initialization, firmware determines the base address for this “stolen” address region and communicates it to the root complex and to the operating system. This communication method is implementation-specific, and not defined in the PCI Express specification.|$|E
40|$|Abstract. Existing {{architectures}} for wide-area {{high-performance computing}} often suffer from their inefficient <b>access</b> <b>mechanisms.</b> Especially {{due to the}} chal-lenge of ubiquitous computing, flexible access to those infrastructures is needed. Different possibilities to fulfil these requirements are discussed in this paper. Starting with the Hypercomputer as a Java-based architecture for wide-area high-performance computing, <b>access</b> <b>mechanisms</b> for web computing as well as mobile computing are presented. With the Home@Globe system, interactive applications on distributed servers can be run using a web browser. Also, using the Kertasarie VM, resource constrained client devices can {{be integrated into the}} system. The successful integration of these four mechanisms is explained by means of an application scenario from the field of agricultural science...|$|R
40|$|Grids combine {{computing}} power from distributed computing sites, {{most of which}} fall under different administrative domains. These domains provide resources to their users {{in the form of}} data archives, computer cycles, networks etc. The security implications of authorizing and authenticating users and making resources available to untrusted applications are enormous. These factors provide impetus to research in security and <b>access</b> <b>mechanisms</b> such that they are based on the existing standards but are geared to tend to the grid environments. This paper discusses the security architecture required for grids and looks at some of the secure <b>access</b> <b>mechanisms,</b> the most popular being the GSI (Grid Security Infrastructure) and its extensions Kerberos Credentials and MyProxy (online credential repository). 1...|$|R
5000|$|The IBM Storage Control Unit {{evolved into}} a Director and Controller, the latter {{typically}} packaged and labelled as an [...] "A-unit" [...] (or A-Box") with the controller {{and at least one}} DASD physically in an A-unit. The term [...] "A-unit" [...] (or [...] "A-Box") was not initially used, instead units containing the controller and DASDs were given product type numbers, specifically 3333 for the A-unit containing 3330 DASD and 3333-11 for the A-unit containing two double capacity 3330-11 DASDs. The use of the suffixes [...] "A" [...] and [...] "B" [...] in the model number to designate an A-unit and B-units began with the 3340 DASD with the 3340 Model A2 and 3340 B2, respectively. This practice of using the digits of a suffix to a DASD Model number to represent the type of unit and the number of DASD in the unit continued for all subsequent CKD DASD, for example, the 3380 Model A4 has one controller and four <b>access</b> <b>mechanisms</b> in one unit, the 3380 Model AA4 has two controllers and four <b>access</b> <b>mechanisms</b> in one unit while the 3380 Model B4 has four <b>access</b> <b>mechanisms.</b>|$|R
