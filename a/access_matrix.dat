72|150|Public
25|$|The Discretionary Security Property {{states that}} use of an <b>access</b> <b>matrix</b> to specify the {{discretionary}} access control.|$|E
5000|$|Access Computer was {{the common}} {{name for the}} <b>Access</b> <b>Matrix,</b> a {{transportable}} personal computer introduced in 1982 by a United States computer company, <b>Access</b> <b>Matrix</b> Corp (AM CORP on FCC documentation). The company was shortly renamed Actrix Computer Corp after trademark disputes, {{and the name of}} the computer line was changed to Actrix ...|$|E
50|$|The <b>access</b> <b>matrix</b> model, first {{introduced}} in 1971, is a generalized description of operating system protection mechanisms.|$|E
40|$|Access {{control is}} an {{important}} protection mechanism for information systems. An <b>access</b> control <b>matrix</b> grants subjects privileges to objects. Today, <b>access</b> control <b>matrices</b> are static, they rarely change during time. This paper shows how to make <b>access</b> control <b>matrices</b> dynamic by means of workflows. Access rights are granted {{according to the state}} of the workflow. By this practice the risk of data misuse is decreased which is proven through an equation given in the paper. The concept of workflow is defined by Petri nets which offer a solid mathematical foundation and are well suited to represent discrete models like workflows. Keywords: access control, workflow, Petri net 1...|$|R
40|$|Abstract: Virtual {{rooms and}} common {{information}} spaces {{are being used}} more and more frequently. In addition to internet-based solutions, ad-hoc InfoSpaces have been proposed. Their security has not been sufficiently investigated. This paper proposes a new protocol for peer-to-peer data exchange with support for access control for operations in the virtual rooms. Access rights for operations are kept in <b>access</b> control <b>matrices</b> and the security layer allows only operations from clients which are marked asallowed in the <b>access</b> control <b>matrix.</b> The protocol {{is based on the}} idea ofhiding the identity of all peer-to-peer participants. Thus this protocol offers anonymity and full peer-to-peer support using asymmetric cryptography to distribute the <b>access</b> control <b>matrices.</b> This works without any central authority. ...|$|R
25|$|Those {{that support}} {{efficient}} <b>access</b> and <b>matrix</b> operations, such as CSR (Compressed Sparse Row) or CSC (Compressed Sparse Column).|$|R
5000|$|The Discretionary Security Property {{states that}} use of an <b>access</b> <b>matrix</b> to specify the {{discretionary}} access control.|$|E
5000|$|The HRU model {{defines a}} {{protection}} system {{consisting of a}} set of generic rights R and a set of commands C. An instantaneous description of the system is called a configuration and is defined as a tuple [...] of current subjects , current objects [...] and an <b>access</b> <b>matrix</b> [...] Since the subjects are required {{to be part of the}} objects, the <b>access</b> <b>matrix</b> contains one row for each subject and one column for each subject and object. An entry for subject [...] and object [...] is a subset of the generic rights [...]|$|E
50|$|Examples {{of models}} with {{protection}} and security separation include: <b>access</b> <b>matrix,</b> UCLA Data Secure Unix, take-grant and filter. Such separation is {{not found in}} models like: high-water mark, Bell-LaPadula (original and revisited), information flow, strong dependency and constraints.|$|E
3000|$|... -optimal {{algorithm}} {{is one that}} requires <b>access</b> of <b>matrix</b> elements which are spaced by a minimum distance of N/p [...]...|$|R
5000|$|In 1990, the Time-based Inductive Machine (TIM) did anomaly {{detection}} using inductive learning of sequential user patterns in Common Lisp on a VAX 3500 computer. [...] The Network Security Monitor (NSM) performed masking on <b>access</b> <b>matrices</b> for {{anomaly detection}} on a Sun-3/50 workstation. [...] The Information Security Officer's Assistant (ISOA) was a 1990 prototype that considered {{a variety of}} strategies including statistics, a profile checker, and an expert system. [...] ComputerWatch at AT&T Bell Labs used statistics and rules for audit data reduction and intrusion detection.|$|R
50|$|In GBAC a query {{language}} {{is used to}} define agents having certain characteristics or abilities. The following table shows the usage of the {{query language}} {{in the context of}} an <b>access</b> control <b>matrix.</b>|$|R
50|$|In {{computer}} science, an Access Control Matrix or <b>Access</b> <b>Matrix</b> is an abstract, formal security {{model of}} protection state in computer systems, {{that characterizes the}} rights of each subject with respect to every object in the system. It was first introduced by Butler W. Lampson in 1971.|$|E
50|$|The Actrix computer, {{released}} in 1984 by Actrix Computer Corporation, was a Zilog Z80-based transportable personal computer running CP/M-80 V2.2. It was initially released as the Access Computer, made by <b>Access</b> <b>Matrix</b> Computer Corporation, but both {{the company and}} its product changed names after trademark disputes.|$|E
5000|$|... "By {{decoupling}} {{the right}} to access information from {{the right to}} disseminate it, the flow model goes beyond the <b>access</b> <b>matrix</b> model {{in its ability to}} specify secure information flow. A practical system needs both access and flow control to satisfy all security requirements."— D. Denning, 1976 ...|$|E
50|$|An <b>Access</b> Control <b>Matrix</b> {{should be}} thought of only as an {{abstract}} model of permissions at a given point in time; a literal implementation {{of it as a}} two-dimensional array would have excessive memory requirements. Capability-based security and access control lists are categories of concrete access control mechanisms whose static permissions can be modeled using Access Control Matrices. Although these two mechanisms have sometimes been presented (for example in Butler Lampson's Protection paper) as simply row-based and column-based implementations of the <b>Access</b> Control <b>Matrix,</b> this view has been criticized as drawing a misleading equivalence between systems that {{does not take into account}} dynamic behaviour.|$|R
50|$|The {{model is}} based on the <b>Access</b> Control <b>Matrix</b> model where rows {{correspond}} to subjects and columns correspond to objects and subjects, each element contains a set of rights between subject i and object j or between subject i and subject k.|$|R
50|$|Practically, type {{enforcement}} evaluates a set {{of rules}} from the source security context of a subject, against {{a set of}} rules from the target security context of the object. A clearance decision occurs depending on the TE <b>access</b> description (<b>matrix).</b> Then, DAC or other access control mechanisms (MLS / MCS, …) apply.|$|R
5000|$|Harrison, Ruzzo and Ullman {{discussed}} {{whether there}} is an algorithm that takes an arbitrary initial configuration and answers the following question: is there an arbitrary sequence of commands that adds a generic right into a cell of the <b>access</b> <b>matrix</b> where it has not been in the initial configuration? ...|$|E
5000|$|Although {{not truly}} {{portable}} the all-in-one design did allow for quick setup and shut-down. It was rugged and although weighing 15 kg, it was reasonably {{easy to transport}} in a car or in an aircraft's coat- locker. The <b>Access</b> <b>Matrix</b> had option of a padded cloth bag with shoulder-strap or a heavier-duty leather/cloth bound protective case with carry handle and shoulder-strap.|$|E
50|$|Using type enforcement, users may (as in Microsoft Active Directory) {{or may not}} (as in SELinux) be {{associated}} with a Kerberos realm, although the original type enforcement model implies so. It is always necessary to define a TE <b>access</b> <b>matrix</b> containing rules about clearance granted to a given security context, or subject's rights over objects according to an authorization scheme.|$|E
40|$|Abstract. Reflective Database Access Control (RDBAC) is a {{model in}} which a {{database}} privilege is expressed as a database query itself, {{rather than as a}} static privilege in an <b>access</b> control <b>matrix.</b> RDBAC aids the management of database access controls by improving the expressiveness of policies. The Transaction Datalog language provides a powerful syntax and semantics for expressing RDBAC policies, however there is no efficient implementation of this language for practical database systems. We demonstrate a strategy for compiling policies in Transaction Datalog into standard SQL views that enforce the policies, including overcoming significant differences in semantics between the languages in handling side-effects and evaluation order. We also report the results of evaluating the performance of these views compared to policies enforced by <b>access</b> control <b>matrices.</b> This implementation demonstrates the practical feasibility of RDBAC, and suggests a rich field of further research. ...|$|R
40|$|Most {{standard}} textbook {{approaches to}} solving systems of linear equations or diagonalizing matrices {{are described as}} “direct ” methods, and they typically require a fixed number of mathematical operations which depends on {{the dimensions of the}} problem. These methods generally require <b>access</b> to <b>matrix</b> elements in random order, which poses serious difficulties for the very larg...|$|R
40|$|In this article, {{we discuss}} the {{performance}} modeling and optimization of Sparse Matrix-Vector Multiplication (SpMV) on NVIDIA GPUs using CUDA. SpMV has a very low computation-data ratio and its performance is mainly bound by the memory bandwidth. We propose optimization of SpMV based on ELLPACK from two aspects: (1) enhanced performance for the dense vector by reducing cache misses, and (2) reduce <b>accessed</b> <b>matrix</b> data by index reduction. With matrix bandwidth reduction techniques, both cache usage enhancement and index compression can be enabled. For GPU with better cache support, we propose differentiated memory access scheme to avoid contamination of caches by matrix data. Performance evaluation shows that the combined speedups of proposed optimizations for GT- 200 are 16 % (single-precision) and 12. 6 % (double-precision) for GT- 200 GPU, and 19 % (single-precision) and 15 % (double-precision) for GF- 100 GPU. Delft Institute of Applied MathematicsElectrical Engineering, Mathematics and Computer Scienc...|$|R
50|$|An <b>access</b> <b>matrix</b> can be envisioned as a {{rectangular}} array of cells, with one row per subject and one column per object. The entry {{in a cell}} - that is, the entry for a particular subject-object pair - indicates the access mode that the subject is permitted to exercise on the object. Each column is equivalent to an access control list for the object; and each row is equivalent to an access profile for the subject.|$|E
5000|$|Apparently {{the system}} was popular with journalists who could use the inbuilt [...] "OFFLINE" [...] type-writer mode to create and print simple ad hoc single-page {{documents}} ready for immediate faxing to HQ from their hotel lobby. Another option was to combine the word processing and telecommunications features to create a document using the word processing software and immediately upload the document directly to either an online services such as Compuserve or indeed to another 'waiting' <b>Access</b> <b>Matrix</b> at their head office.|$|E
5000|$|<b>Access</b> <b>Matrix</b> came bundled with MBASIC, CBASIC, the Perfect-series office software, Personal Pearl {{database}} and Fancy Font markup/formatting system. Custom-written software included a disk format/verify/duplication utility (DISKU.COM) that worked {{with both the}} internal A:/B: drives as well as optional external 8" [...] disks (C:/D: and E:/F:). A custom-written Telecommunications utility (TELCOMU.COM) offered dialup address book, basic terminal emulation, XMODEM/Modem7 file transfer and other features for connection to BBS and other online systems or to operate as a drone to receive files uploaded from other computers.|$|E
30|$|Mining of {{security}} or authorization policies {{based on an}} available static <b>access</b> control <b>matrix</b> has been within the focus of research for some time (e.g. [18, 36]) especially since standards like ABAC [37] are heavily dependent on this construct, like this aim to extend these techniques by enhancing the input data and the characterizations of output data using contextual information.|$|R
50|$|Because it {{does not}} define the {{granularity}} of protection mechanisms, the <b>Access</b> Control <b>Matrix</b> {{can be used as}} a model of the static access permissions in any type of access control system. It does not model the rules by which permissions can change in any particular system, and therefore only gives an incomplete description of the system's access control security policy.|$|R
40|$|The {{condition}} number of a diagonally scaled matrix, for appropriately chosen scaling matrices, is often {{less than that}} of the original. Equilibration scales a matrix so that the scaled matrix's row and column norms are equal. Scaling can be approximate. We develop approximate equilibration algorithms for nonsymmetric and symmetric matrices having signed elements that <b>access</b> a <b>matrix</b> only by matrix-vector products...|$|R
50|$|The {{primitive}} requests can {{modify the}} <b>access</b> <b>matrix</b> by adding or removing access rights {{for a pair}} of subjects and objects and by adding or removing subjects or objects. Creation of a subject or object requires the subject or object not to exist in the current configuration, while deletion of a subject or object requires it to have existed prior to deletion. In a complex command, a sequence of operations is executed only as a whole. A failing operation in a sequence makes the whole sequence fail, a form of database transaction.|$|E
50|$|The voice {{switching}} fabric plan {{was similar to}} that of the earlier 5XB switch in being bidirectional and in using the call-back principle. The largest full <b>access</b> <b>matrix</b> switches in the system, however, were 8x8 rather than 10x10 or 20x16. Thus they required eight stages rather than four to achieve large enough junctor groups in a large office. Crosspoints being more expensive in the new system but switches cheaper, system cost was minimized with fewer crosspoints organized into more switches. The fabric was divided into Line Networks and Trunk Networks of four stages, and partially folded to allow connecting line-to-line or trunk-to-trunk without exceeding eight stages of switching.|$|E
50|$|The {{original}} type enforcement model {{stated that}} labels should {{be attached to}} subject and object: a “domain label” for a subject and a “type label ” for an object. This implementation mechanism was improved by the FLASK architecture, substituting complex structures and implicit relationship. Also, the original TE <b>access</b> <b>matrix</b> was extended to others structures: lattice-based, history-based, environment-based, policy logic… This {{is a matter of}} implementation of TE by the various operating systems. In SELinux, TE implementation does not internally distinguish TE-domain from TE-types. It should be considered a weakness of TE original model to specify detailed implementation aspects such as labels and matrix, especially using the terms “domain” and “types” which have other, more generic, widely accepted meanings.|$|E
40|$|AbstractThis work {{proposes a}} {{procedure}} {{to implement a}} Data Access Policy to ensure the protection of privacy rights of students’ records within higher educational systems. First it reviews the general legal constraints applicable to higher Institutional Data management. Second it reviews the principles of a Coordinated Model. The procedure {{is based on an}} <b>Access</b> Right <b>Matrix</b> that assigns data access privileges to Data Users. The first purpose is to handle the common and regular access by rightful users to data needed in their daily routine job through operational interface. The main purpose of the procedure is to handle ad-hoc requests that come from outside the university or from some services which do not have formal access to the data. Data <b>access</b> right <b>matrix</b> is used to grant or reject ad hoc requests based on the following criteria: the degree of sensitivity of the data requested, the number of records requested the purpose of the usage, and finally the privileges and trustworthiness of the requester...|$|R
40|$|This paper {{deals with}} the problem of {{aligning}} data and computations when mapping affine loop nests onto Distributed Memory Parallel Computers (DMPCs). We formulate the problem by introducing a new graph, the access graph, to model affine communications (with rectangular <b>access</b> <b>matrices)</b> more adequately than with the previously introduced tool, the communication graph. We show that maximizing the number of local communications in the access graph is a NPcomplete problem in the strong sense and we present several heuristics based upon the access graph for mapping affine loop nests onto DMPCs. 1 Introduction This paper {{deals with the}} problem of mapping affine loop nests onto Distributed Memory Parallel Computers (DMPCs). Because the communication is very expensive in DMPCs, how to distribute data arrays and computations to processors is a key factor to performance. The computations described in this paper are general non-perfect loop nests (or multiple loop nests) with uniform or affine [...] ...|$|R
50|$|The {{program is}} also {{extensible}} {{to a considerable}} degree via muParser and Python scripting language, which allows adding the arbitrary user-defined functions with <b>access</b> to graphs, <b>matrices</b> and data tables.|$|R
