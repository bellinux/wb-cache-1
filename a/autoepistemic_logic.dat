219|19|Public
25|$|The {{meaning of}} {{negation}} in logic programs {{is closely related}} to two theories of nonmonotonic reasoning— <b>autoepistemic</b> <b>logic</b> and default logic. The discovery of these relationships was a key step towards the invention of the stable model semantics.|$|E
2500|$|The syntax of <b>autoepistemic</b> <b>logic</b> uses a modal {{operator}} {{that allows}} us to distinguish between what is true and what is believed. Michael Gelfond [...] proposed to read [...] in the body of a rule as [...] " [...] is not believed", and to understand a rule with negation as the corresponding formula of <b>autoepistemic</b> <b>logic.</b> The stable model semantics, in its basic form, {{can be viewed as a}} reformulation of this idea that avoids explicit references to <b>autoepistemic</b> <b>logic.</b>|$|E
50|$|The <b>autoepistemic</b> <b>logic</b> is {{a formal}} logic for the {{representation}} and reasoning {{of knowledge about}} knowledge. While propositional logic can only express facts, <b>autoepistemic</b> <b>logic</b> can express knowledge and {{lack of knowledge about}} facts.|$|E
40|$|Abstract. We {{show how}} the pure logic of GK can be {{embedded}} into disjunctive logic programming. The translation we present is polyno-mial, but not modular, and introduces new variables. The result can then be used to compute the extension/expansion semantics of de-fault and <b>autoepistemic</b> <b>logics</b> using disjunctive ASP solvers. ...|$|R
40|$|The goal of {{this note}} {{is to provide a}} {{background}} and references for the invited lecture presented at Computer Science Logic 2006. We briefly discuss motivations that led to the emergence of nonmonotonic logics and introduce two major nonmonotonic formalisms, default and <b>autoepistemic</b> <b>logics.</b> We then point out to algebraic principles behind the two logics and present an abstract algebraic theory that unifies them and provides an effective framework to study properties of nonmonotonic reasoning. We conclude with comments on other major research directions in nonmonotonic logics...|$|R
40|$|Current {{research}} on non-monotonic reasoning shows growing interest on implementation details, so {{the need for}} concrete calculi formalizing non-monotonic logics is clearly recognized. On the other hand, {{there is also an}} increased number of works combining intuitionistic logic with various kinds of non-monotonic formalisms. As a case in point, intuitionistic versions of both default and <b>autoepistemic</b> <b>logics</b> have been proposed, and tight connections between intuitionistic logic and logic programs (or deductive databases) using hypothetical inferences have been established. In this paper, we present a sequent calculus for default reasoning in the style of Bonatti with intuitionistic logic as the underlying logical structure. In contrast to other proposals, Bonatti's technique allows a very simple and intuitive specification of the calculus, making it an ideal tool for implementation purposes. 1 Introduction Non-monotonic reasoning techniques are an important cornerstone towards formalizin [...] ...|$|R
5000|$|The syntax of <b>autoepistemic</b> <b>logic</b> uses a modal {{operator}} {{that allows}} us to distinguish between what is true and what is believed. Michael Gelfond 1987 proposed to read [...] in the body of a rule as [...] " [...] is not believed", and to understand a rule with negation as the corresponding formula of <b>autoepistemic</b> <b>logic.</b> The stable model semantics, in its basic form, {{can be viewed as a}} reformulation of this idea that avoids explicit references to <b>autoepistemic</b> <b>logic.</b>|$|E
50|$|Uncertain {{inference}} generalizes {{the notions}} of <b>autoepistemic</b> <b>logic,</b> where truth values are either known or unknown, and when known, they are true or false.|$|E
5000|$|In {{terms of}} {{possible}} world semantics, {{an expansion of}} [...] consists of an S5 model of [...] in which the possible worlds consist only of worlds where [...] is true. possible worlds need not contain all such consistent worlds; this corresponds {{to the fact that}} modal propositions are assigned truth values before checking derivability of the ordinary propositions. Thus, <b>autoepistemic</b> <b>logic</b> extends S5; the extension is proper, since [...] and [...] are tautologies of <b>autoepistemic</b> <b>logic,</b> but not of S5.|$|E
40|$|Nonmonotonic {{logic is}} a well {{developed}} research area gathering the logical formalisms that handle commonsense reasoning. One of the central issue in the area {{is to establish a}} notion of nonmonotonic provability, which is usually characterized via some modal logic. In [MST 93] a clear paradigm has been proposed that classifies modal monotonic logics, augmented with the "negation by failure " to prove rule. It turns out {{that it is not the}} only one. In this paper we propose different paradigms for formalizing the notion of nonmonotonic provability. We present a fixed point construction allowing the interpretation of the necessity modal operator as a nonmonotonic provability operator analogously to that used in the modal logic of provability for Peano Arithmetic. We show that it faithfully interprets both default and <b>autoepistemic</b> <b>logics</b> and we highlight its connections with the standard fixed point construction `a la McDermott and Doyle. This new paradigm provides a different perspective [...] ...|$|R
40|$|The {{main goal}} {{of this paper is}} to {{establish}} a nonmonotonic epistemic logic EB with two modalities [...] provability and belief [...] capable of expressing and comparing a variety of known semantics for extended logic programs, and clarify their meaning. In particular we present here, for the first time, embeddings into epistemic logic of logic programs extended with a second kind of negation under the well [...] founded semantics, and contrast them to the recent embeddings into <b>autoepistemic</b> <b>logics</b> of such programs under stable models based semantics. Because of the newly established relationship between our epistemic logic EB and extended program semantics, the former benefits from the procedures and implementations of the latter, and can be applied to at least the same class of AI problems that the latter can. Moreover, one issue of epistemic logic introduced here, belief revision, can profit from adapting techniques employed by the latter for contradiction removal. Furthermore, the language [...] ...|$|R
40|$|A non-first-order {{extension}} of description logics (DL) which {{is able to}} both formalize the nonmonotonic features of knowledge representation (KR) systems, {{and to provide a}} computational characterization of reasoning in such a setting, is defined. The minimal knowledge paradigm is investigated in relation to nonmonotonic modal logics and logic programming. In relation, ground nonmonotonic modal <b>logic</b> formalisms and <b>autoepistemic</b> description <b>logics</b> are studied in detail...|$|R
50|$|The stable model {{semantics}}, {{which is}} used to give a semantics to logic programming with negation as failure, {{can be seen as a}} simplified form of <b>autoepistemic</b> <b>logic.</b>|$|E
5000|$|In <b>autoepistemic</b> <b>logic,</b> which {{rejects the}} law of {{excluded}} middle, predicates may be true, false, or simply unknown; i.e. a given collection of facts may be insufficient to determine the truth or falsehood of a predicate.|$|E
50|$|The {{meaning of}} {{negation}} in logic programs {{is closely related}} to two theories of nonmonotonic reasoning — <b>autoepistemic</b> <b>logic</b> and default logic. The discovery of these relationships was a key step towards the invention of the stable model semantics.|$|E
5000|$|U. Junker and K. Konolige (1990). Computing the {{extensions}} of <b>autoepistemic</b> and default <b>logics</b> with a truth maintenance system. In Proceedings of the Eighth National Conference on Artificial Intelligence (AAAI'90), pages 278-283. MIT Press.|$|R
40|$|We present <b>Autoepistemic</b> Description <b>Logics</b> (ADLs), {{in which}} the {{language}} of Description Logics is augmented with modal operators interpreted according to the nonmonotonic logic MKNF. We provide decision procedures for query answering in two very expressive ADLs. We show their representational features by addressing defaults, integrity constraints, role and concept closure. Hence, ADLs provide a formal characterization {{of a wide variety}} of nonmonotonic features commonly available in frame-based systems and needed in the development of practical applications. ...|$|R
40|$|Abstract. The open world {{assumption}} makes OWL principally {{suitable to}} handle incomplete knowledge in Semantic Web scenarios, however, some scenarios desire closed world reasoning. <b>Autoepistemic</b> description <b>logics</b> allow to realise closed world reasoning in open world settings through epistemic operators. An extension of OWL by epistemic operators therefore allows for non-monotonic features known from closed world systems, such as default rules, integrity constraints or epistemic querying. These features can be beneficially applied in Semantic Web scenarios, where OWL lacks expressiveness. ...|$|R
5000|$|The syntax of <b>autoepistemic</b> <b>logic</b> extends that of {{propositional logic}} by a modal {{operator}} [...] indicating knowledge: if [...] is a formula, [...] indicates that [...] is known. As a result, [...] indicates that [...] is known and [...] indicates that [...] is not known.|$|E
50|$|PLN {{begins with}} a term logic foundation, and then adds on {{elements}} of probabilistic and combinatory logic, {{as well as some}} aspects of predicate logic and <b>autoepistemic</b> <b>logic,</b> to form a complete inference system, tailored for easy integration with software components embodying other (not explicitly logical) aspects of intelligence.|$|E
50|$|Translations {{exist or}} not {{depending}} on which conditions are imposed. Translations from propositional default logic to classical propositional logic cannot always generate a polynomially sized propositional theory, unless the polynomial hierarchy collapses. Translations to <b>autoepistemic</b> <b>logic</b> exist or not depending on whether modularity {{or the use of}} the same alphabet is required.|$|E
40|$|<b>Autoepistemic</b> (AE) <b>logic</b> is {{a formal}} system character-izing agents that have {{complete}} introspective {{access to their}} own beliefs. AE logic relies on a fixed point defini-tion that has two significant parts. The first part {{is a set of}} assumptions or hypotheses about the contents of the fixed point. The second part is a set of reflection prin-ciples that link sentences with statements about their provability. We characterize a family of ideal AE rea-soners in terms of the minimal hypotheses that they can make, and the weakest and strongest reflection prin-ciples that they can have, while still maintaining the interpretation of AE logic as self-belief. These results can help in analyzing metatheoretic systems in logic programming...|$|R
40|$|Mobile robots {{generally}} have only incomplete knowledge about their world. This knowledge is augmented through sensing actions. There {{have been several}} approaches in reasoning about actions that deal with sensing and knowledge. One important approach, which has been successfully realized on a robotic soccer team, is based on <b>autoepistemic</b> description <b>logics.</b> In this paper, we present a probabilistic generalization of this approach and define a formal semantics through probabilistic transitions between epistemic states. We then present the language PK-PDDL for reasoning about actions with sensing, knowledge, and probabilities, which is given a formal semantics in the above description logic. Furthermore, we formulate the problem of conditional planning under probabilistic uncertainty in this framework, and give an algorithm for optimally solving it, {{which is based on}} a reduction to reasoning in description logics...|$|R
40|$|We present <b>Autoepistemic</b> Description <b>Logics</b> (ADLs), {{in which}} the {{language}} of Description Logics is augmented with modal operators interpreted according to the nonmonotonic logic MKNF. We provide decision procedures for query answering in two very expressive ADLs. We show their representational features by addressing defaults, integrity constraints, role and concept closure. Hence, ADLs provide a formal characterization {{of a wide variety}} of nonmonotonic features commonly available in frame-based systems and needed in the development of practical applications. 1 Introduction Description Logics (DL) have been studied in the past years to provide a formal characterization of frame-based systems. However, while the fragment of first-order logic which characterizes the most popular constructs of these languages has been clearly identified (see for example [Woods & Schmolze, 1992]), there is not yet consensus on the features of framebased systems that cannot be formalized in a classical fi [...] ...|$|R
50|$|If a logic {{includes}} formulae {{that mean}} that something is not known, this logic should not be monotonic. Indeed, learning something that was previously not known leads to {{the removal of the}} formula specifying that this piece of knowledge is not known. This second change (a removal caused by an addition) violates the condition of monotonicity. A logic for reasoning about knowledge is the <b>autoepistemic</b> <b>logic.</b>|$|E
50|$|PLN {{represents}} truth {{values as}} intervals, but with different semantics than in Imprecise Probability Theory. In {{addition to the}} interpretation of truth in a probabilistic fashion, a truth value in PLN also has an associated amount of certainty. This generalizes the notion of truth values used in <b>autoepistemic</b> <b>logic,</b> where truth values are either known or unknown, and when known, are either true or false.|$|E
50|$|Proof-theoretic {{formalization}} of a {{non-monotonic logic}} begins with adoption of certain non-monotonic rules of inference, and then prescribes {{contexts in which}} these non-monotonic rules may be applied in admissible deductions. This typically is accomplished by means of fixed-point equations that relate the sets of premises and the sets of their non-monotonic conclusions. Defaults logics and <b>autoepistemic</b> <b>logic</b> {{are the most common}} examples of non-monotonic logics that have been formalized that way.|$|E
40|$|Abstract. We {{focus on}} the aspect of sensing in {{reasoning}} about actions under qualitative and probabilistic uncertainty. We first define the action language E for reasoning about actions with sensing, which has a semantic foundation on the <b>autoepistemic</b> description <b>logic</b> ALCKNF, and which is given a formal semantics {{in a system of}} deterministic transitions between epistemic states. As an important feature, the main computational tasks in E can be done in linear and polynomial time. We then introduce the action language E+ for reasoning about actions with sensing under qualitative and probabilistic uncertainty, which is an extension of E by actions with nondeterministic and probabilistic effects, and which is given a formal semantics in a system of deterministic, nondeterministic, and probabilistic transitions between epistemic states. We also define the notion of a belief graph, which represents the belief state of an agent after a sequence of deterministic, nondeterministic, and probabilistic actions, and which compactly represents a set of unnormalized probability distributions. Using belief graphs, we then introduce the notion of a conditional plan and its goodness for reasoning about actions under qualitative and probabilistic uncertainty. We formulate the problems of optimal and threshold conditional planning under qualitative and probabilistic uncertainty, and show that they are both uncomputable in general. We then give two algorithms for conditional planning i...|$|R
40|$|We {{focus on}} the aspect of sensing in {{reasoning}} about actions under qualitative and probabilistic uncertainty. We first define the action language E for reasoning about actions with sensing, which has a semantics based on the <b>autoepistemic</b> description <b>logic</b> ALCK NF, and which is given a formal semantics via a system of deterministic transitions between epistemic states. As an important feature, the main computational tasks in E {{can be done in}} linear and quadratic time. We then introduce the action language E+ for reasoning about actions with sensing under qualitative and probabilistic uncertainty, which is an extension of E by actions with nondeterministic and probabilistic effects, and which is given a formal semantics in a system of deterministic, nondeterministic, and probabilistic transitions between epistemic states. We also define the notion of a belief graph, which represents the belief state of an agent after a sequence of deterministic, nondeterministic, and probabilistic actions, and which compactly represents a set of unnormalized probability distributions. Using belief graphs, we then introduce the notion of a conditional plan and its goodness for reasoning about actions under qualitative and probabilistic uncertainty. We formulate the problems of optimal and threshold conditional planning under qualitative and probabilistic uncertainty, and show that they are both uncomputable in general. We then give two algorithms for conditional planning in our framework. The first one is always sound, and it is also complete for the special case in which the relevant transitions between epistemic states are cycle-free. The second algorithm is a sound and complete {{solution to the problem of}} finite-horizon conditional planning in our framework. Under suitable assumptions, it computes every optimal finite-horizon conditional plan in polynomial time. We also describe an application of our formalism in a robotic-soccer scenario, which underlines its usefulness in realistic applications. © 2009 ACM...|$|R
40|$|We {{propose a}} new {{definition}} of Representation theorem for many-valued modal logics, {{based on a}} complete latice of algebraic truth values, and define the stronger relationship between algebraic models of a given logic L and relational structures used to define the Kripke possible-world semantics for L. Such a new framework offers clear semantics for the satisfaction algebraic relation, based on many-valued models of a logic L, avoiding the necessity to define a designated subset of logic values for a satisfaction relation, often difficult to determine for many-valued logic, especially for bilattice based logic. We define the subclass of many-valued modal logics based on distributive lattices which have compact autoreferential cannonical representation. The significant member of this subclass is the paraconsistent fuzzy logic extended by new logic values {{in order to deal}} with incomplete and inconsistent information also. The Kripke-style semantics for this subclass of modal logics have as set of possible worlds the joint-irriducible subset of the carrier set of manyvalued algebras. Such a new theory is applied for the case of <b>autoepistemic</b> intuitionistic many-valued <b>logic</b> based on Belnap’s 4 -valued bilattice as minimal extension of classic logic used to manage incomplete and inconsistent information also. ...|$|R
5000|$|The {{completion}} semantics justifies {{interpreting the}} result [...] of a NAF inference as the classical negation [...] of [...] However, Michael Gelfond 1987 {{showed that it}} is also possible to interpret [...] literally as [...] " [...] can not be shown", [...] " [...] is not known" [...] or [...] " [...] is not believed", as in <b>autoepistemic</b> <b>logic.</b> The autoepistemic interpretation was developed further by Gelfond and Lifschitz 1988 and is the basis of answer set programming.|$|E
5000|$|The formula [...] has {{therefore}} two expansions, one {{in which}} [...] is not known and {{one in which}} [...] is known. The second one has been regarded as unintuitive, as the initial assumption that [...] is true is the only reason why [...] is true, which confirms the assumption. In other words, this is a self-supporting assumption. A logic allowing such a self-support of beliefs is called not strongly grounded to differentiate them from strongly grounded logics, in which self-support is not possible. Strongly grounded variants of <b>autoepistemic</b> <b>logic</b> exist.|$|E
50|$|Many modern logic systems {{replace the}} law of {{excluded}} middle {{with the concept of}} negation as failure. Instead of a proposition either being true or false, a proposition is either true or not able to be proven true. These two dichotomies only differ in logical systems that are not complete. The principle of negation as failure is used as a foundation for <b>autoepistemic</b> <b>logic,</b> and is widely used in logic programming. In these systems, the programmer is free to assert {{the law of}} excluded middle as a true fact, but it is not built-in a priori into these systems.|$|E
40|$|We {{propose a}} new {{definition}} of the representation theorem for many-valued logics, with modal operators as well, and define the stronger relationship between algebraic models of a given logic and relational struc-tures used to define the Kripke possible-world semantics for it. Such a new framework offers a new semantics for many-valued logics based on the truth-invariance entailment. Consequently, it is substantially different from current definitions based on a matrix with a des-ignated subset of logic values, used for the satisfaction relation, often difficult to fix. In the case when the many-valued modal logics {{are based on the}} set of truth-values that are complete distributive lattices we obtain a compact autoreferential Kripke-style canonical repre-sentation. The Kripke-style semantics for this subclass of modal logics have the joint-irreducible subset of the carrier set of many-valued algebras as set of possible worlds. A significant member of this subclass is the paraconsistent fuzzy logic extended by new logic values in order to also deal with incomplete and inconsistent information. This new theory is applied for the case of <b>autoepistemic</b> intuitionistic many-valued <b>logic,</b> based on Belnap’s 4 -valued bilattice, as a minimal extension of classical logic used to manage incomplete and incon-sistent information as well. ...|$|R
40|$|After {{historical}} introduction, {{the bulk}} of the thesis concerns the study of a declarative semantics for logic programs. The main original contributions are:. WFSX (Well-Founded Semantics with explicit negation), a new semantics for logic programs with explicit negation (i. e. extended logic program); which compares favorably in its properties with other extant semantics.. A generic characterization schema that facilitates comparisons among a diversity of semantics of extended logic programs, including WFSX.. An autoepistemic and a default logic corresponding to WFSX, which solve existing problems of the classical approaches to <b>autoepistemic</b> and default <b>logics,</b> and clarify the meaning of explicit negation in logic programs.. A framework for defining a spectrum of semantics of extended logic programs based on the abduction of negative hypotheses. This framework allows for the characterization of different levels of skepticism/credulity, consensuality, and argumentation.. O-semantics, a semantics that adds more CWA hypotheses to WFSX. The techniques used for doing so also applicable to the well founded semantics of normal programs.. By introducing explicit negation into a logic programs contradiction may appear. I present two approaches for dealing with contradiction, and show their equivalence. One of the approaches avoiding contradiction, and is based on restrictions in the adoption of abductive hypotheses. The other approach consists in removing contradiction, and is based in a transformation of contradictory programs into non contradictory ones, guided by the reasons for contradictionAvailable from Fundacao para a Ciencia e a Tecnologia, Servico de Informacao e Documentacao, Av. D. Carlos I, 126, 1200 Lisboa / FCT - Fundação para o Ciência e a TecnologiaSIGLEPTPortuga...|$|R
40|$|After a {{historical}} introduction, {{the bulk of}} the thesis concerns the study of a declarative semantics for logic programs. The main original contributions are: WFSX (well founded semantics with explicit negation), a new semantics for logic programs with explicit negation (i. e. extended logic programs), which compares favourably in its properties with other extant semantics. A generic characterization schema that facilitates comparisons among a diversity of semantics of extended logic programs, including WFSX. An autoepistemic and a default logic corresponding to WFSX, which solve existing problems of the classical approaches to <b>autoepistemic</b> and default <b>logics,</b> and clarify the meaning of explicit negation in logic programs. A framework for defining a spectrum of semantics of extended logic programs based on the abduction of negative hypotheses. This framework allows for the characterization of different levels of scepticism credulity, consensuality, and argumentation. One of the semantics of abduction coincides with WFSX. O semantics, a semantics that uniquely adds more CWA hypotheses to WFSX. The techniques used for doing so are applicable as well to the well-founded semantics of normal logic programs. By introducing explicit negation into logic programs contradiction may appear. I present two approaches for dealing with contradiction, and show their equivalence. One of the approaches consists in avoiding contradiction, and show their equivalence. One of the approaches consists in avoiding contradiction, and is based on restrictions in the adoption of adductive hypotheses. The other approach consists in removing contradiction, and is based in a transformation of contradictory programs into non contradictory ones, guided by the reasons for contradictionAvailable from Fundacao para a Ciencia e a Tecnologia, Servico de Informacao e Documentacao, Av. D. Carlos I, 126, 1249 - 074 Lisboa, Portugal / FCT - Fundação para o Ciência e a TecnologiaSIGLEPTPortuga...|$|R
