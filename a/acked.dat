24|2241|Public
50|$|A problem {{occurs with}} New Reno {{when there are}} no packet losses but instead, packets are reordered by more than 3 packet {{sequence}} numbers. When this happens, New Reno mistakenly enters fast recovery, but when the reordered packet is delivered, ACK sequence-number progress occurs and from there until the end of fast recovery, every bit of sequence-number progress produces a duplicate and needless retransmission that is immediately <b>ACKed.</b>|$|E
50|$|The Three-phase commit {{protocol}} eliminates {{this problem}} by introducing the Prepared to commit state. If the coordinator fails before sending preCommit messages, the cohort will unanimously agree that the operation was aborted. The coordinator will not send out a doCommit message until all cohort members have <b>ACKed</b> that they are Prepared to commit. This eliminates the possibility that any cohort member actually completed the transaction before all cohort members {{were aware of the}} decision to do so (an ambiguity that necessitated indefinite blocking in the Two-phase commit protocol).|$|E
50|$|TCP New Reno, {{defined by}} RFC 6582 (which obsoletes {{previous}} definitions in RFC 3782 and RFC 2582), improves retransmission during the fast-recovery phase of TCP Reno. During fast recovery, for every duplicate ACK that {{is returned to}} TCP New Reno, a new unsent packet {{from the end of}} the congestion window is sent, to keep the transmit window full. For every ACK that makes partial progress in the sequence space, the sender assumes that the ACK points to a new hole, and the next packet beyond the <b>ACKed</b> sequence number is sent.|$|E
50|$|Kou <b>ack</b> <b>ack</b> <b>ack,</b> kou <b>ack</b> <b>ack</b> <b>ack,</b> :kou <b>ack</b> <b>ack</b> <b>ack</b> <b>ack</b> kaa.|$|R
30|$|DOMCT {{requires}} {{a more sophisticated}} <b>ACK</b> processing mechanism in the unicast transmission. Even though two frames are delivered successfully, their <b>ACKs</b> can be collided at APs. We avoid <b>ACK</b> collisions by serialized scheduling <b>ACK</b> frames. For example, AP 2 knows the <b>ACK</b> transmission time of AP 1 by using the MAC header information of AP 1 ’s frame. AP 2 avoids overlapping of its own <b>ACK</b> and AP 1 ’s <b>ACK</b> by delaying its <b>ACK</b> transmission {{until the end of}} <b>ACK</b> transmission to AP 1. Note that our simulation results demonstrate that DOMCT operates well even without <b>ACK</b> serializing, since <b>ACKs</b> are typically transmitted at the basic data rate and the frame length is relatively short. Another possible solution is the piggybacking of SINR reports in the data frames to reduce the adverse effects of <b>ACK</b> collision. Besides <b>ACK</b> collisions, data and <b>ACK</b> frames can collide also. We can avoid this problem making the concurrent transmission completes {{at the same time the}} first data transmission finishes.|$|R
30|$|Additional {{information}} {{should be used to}} differentiate the packets with the same timestamp. The variations in cumulative <b>ACK</b> number and SACK blocks may be a solution. For example, the increase in the cumulative <b>ACK</b> number correctly determines which packet generates this <b>ACK.</b> In the case of a duplicated <b>ACK,</b> the change in SACK blocks also provides information on the increase in the cumulative <b>ACK.</b> Therefore, we need to remember a few of the consecutive incoming <b>ACKs</b> to trace the change in <b>acking.</b> Combining the differences with the timestamp, the packet corresponding to an incoming <b>ACK</b> can be determined.|$|R
50|$|Protocol {{spoofing}} addresses {{this problem}} by having the local modem generate a false ACK message {{as soon as the}} packet is completely sent to the modem. This causes the local host computer to immediately send another packet, and so on. The data for multiple packets is held in an internal buffer while the modem is sending it to the remote machine. This allows the packets to be sent continually, greatly improving channel efficiency. However, this also requires the link between the two systems to be error free, as the modem has already <b>ACKed</b> the packets even before they have been sent. This was normally addressed by using a modem-level error correction protocol, like Microcom Networking Protocols.|$|E
5000|$|Whenever {{a packet}} is sent, the sender sets a timer {{that is a}} {{conservative}} estimate of when that packet will be <b>acked.</b> If the sender does not receive an ack by then, it transmits that packet again. The timer is reset every time the sender receives an acknowledgement. This means that the retransmit timer fires only when the sender has received no acknowledgement for a long time. Typically the timer value is set to [...] where [...] is the clock granularity. Further, in case a retransmit timer has fired and still no acknowledgement is received, the next timer is set to twice the previous value (up to a certain threshold). Among other things, this helps defend against a man-in-the-middle denial of service attack that tries to fool the sender into making so many retransmissions that the receiver is overwhelmed.|$|E
50|$|When {{used as the}} {{protocol}} for the delivery of subdivided messages it works somewhat differently. In non-continuous channels where messages may be variable in length, standard ARQ or Hybrid ARQ protocols may treat the message as a single unit. Alternately selective retransmission may be employed {{in conjunction with the}} basic ARQ mechanism where the message is first subdivided into sub-blocks (typically of fixed length) in a process called packet segmentation. The original variable length message is thus represented as a concatenation of a variable number of sub-blocks. While in standard ARQ the message as a whole is either acknowledged (<b>ACKed)</b> or negatively acknowledged (NAKed), in ARQ with selective transmission the ACK response would additionally carry a bit flag indicating the identity of each sub-block successfully received. In ARQ with selective retransmission of sub-divided messages each retransmission diminishes in length, needing to only contain the sub-blocks that were linked.|$|E
30|$|Note that a {{negative}} <b>ACK</b> (NACK) architecture is possible if the broadcast 802.11 mode is used. If NACKs are used, the overhead of <b>ACK</b> messages {{can be reduced}} significantly in practical scenarios (95 % reduction is possible). Even with the <b>ACK</b> architecture though, <b>ACK</b> messaging is reduced {{due to the lack}} of unnecessary overhearing <b>ACKs.</b>|$|R
5000|$|The Rebel - Pre-Pub EP//Year Of Birds - Blocker For Coinslot EP, (<b>Ack!</b> <b>Ack!</b> <b>Ack!</b> Records, split twelve inch, 2012) ...|$|R
5000|$|Number of gap <b>ACK</b> blocks : Indicates {{the number}} of gap <b>ACK</b> block start and gap <b>ACK</b> block end pairs included.|$|R
40|$|This paper compares Reno, New-Reno and Selective Acknowledgements (SACK), {{the three}} most common TCP {{implementations}} today in (future) optical burst switched (OBS) networks. In general, SACK, which considers multiple Triple Duplicated <b>ACKed</b> (TD) losses in one round, is found to perform best in OBS networks, while New-Reno, which improves Reno in packet switched networks by fast retransmission in responding to partial ACKs, may however perform worse than Reno...|$|E
40|$|Abstract — In both TCP and SCTP, {{selectively}} <b>acked</b> (SACKed) out-of-order data is implicitly renegable; that is, {{the receiver}} can later discard SACKed data. The possibility of reneging forces the transport sender to maintain copies of SACKed {{data in the}} send buffer until they are cumulatively <b>acked.</b> In this paper, we investigate the situation where all out-of-order data is non-renegable, such as when the data has been delivered to the application, or when the receiver simply never reneges. Using simulations, we show that SACKs result in inevitable send buffer wastage, which increases as frequency of loss events and loss recovery durations increase. We introduce a fundamentally new ack mechanism, Non-Renegable Selective Acknowledgments (NR-SACKs), for SCTP. Using NR-SACKs, an SCTP receiver can explicitly identify some or all out-of-order data as being non-renegable, allowing the sender to free up send buffer sooner than if the data were only SACKed. Simulation comparisons show that NR-SACKs enable efficient utilization of a transport sender’s memory. Further investigations show that NR-SACKs also improve throughput in Concurrent Multipath Transfer (CMT) [4]...|$|E
30|$|Upon {{arrival of}} a normal or {{duplicated}} ACK, TCP sequentially compared the cumulative ACK number with the bytes of the already sent SKBs in WAITLIST. The SKBs having bytes less than or equivalent to the cumulative ACK number {{were considered to be}} successfully arrived. If the bytes of an SKB did not belong to the cumulative ACK number, SACK blocks were used to ack the SKB. If the bytes of the SKB were less than the largest byte in the SACK blocks and were not <b>acked,</b> the dupCnt in the SKB increased by one. If the dupCnt reached three, the SKB was marked as LOST. WAITLIST scanning stopped until the next SKB reached the value pointed by sk_send_head. The recognition of a lost packet triggered the congestion control as described in Section 2.2.|$|E
40|$|Activated Cdc 42 kinases (<b>Acks)</b> are {{evolutionarily}} conserved non-receptor tyrosine kinases. Activating somatic mutations {{and increased}} <b>ACK</b> 1 protein levels {{have been found}} in many types of human cancers and correlate with a poor prognosis. <b>ACK</b> 1 is activated by epidermal growth factor (EGF) receptor signaling and functions to regulate EGF receptor turnover. <b>ACK</b> 1 has additionally been found to propagate downstream signals through the phosphorylation of cancer relevant substrates. Using Drosophila as a model organism, we have determined that Drosophila <b>Ack</b> possesses potent anti-apoptotic activity that is dependent on <b>Ack</b> kinase activity and is further activated by EGF receptor/Ras signaling. <b>Ack</b> anti-apoptotic signaling does not function through enhancement of EGF stimulated MAP kinase signaling, suggesting that it must function through phosphorylation of some unknown effector. We isolated several putative Drosophila <b>Ack</b> interacting proteins, many being orthologs of previously identified human <b>ACK</b> 1 interacting proteins. Two of these interacting proteins, Drk and yorkie, were found to influence <b>Ack</b> signaling. Drk is the Drosophila homolog of GRB 2, which is required to couple <b>ACK</b> 1 binding to receptor tyrosine kinases. Drk knockdown blocks <b>Ack</b> survival activity, suggesting that <b>Ack</b> localization is important for its pro-survival activity. Yorkie is a transcriptional co-activator that is downstream of the Salvador-Hippo-Warts pathway and promotes transcription of proliferative and anti-apoptotic genes. We find that yorkie and <b>Ack</b> synergistically interact to produce tissue overgrowth and that yorkie loss of function interferes with <b>Ack</b> anti-apoptotic signaling. Our result...|$|R
30|$|In a TCP session, the {{delivery}} of out-of-order packets can happen in either direction, i.e. it can happen with data packets or <b>ACK</b> packets. The sender detects out-of-order delivery of <b>ACK</b> packets from the <b>ACK</b> sequence number, since every new <b>ACK</b> sequence number must be greater than the previous one if the <b>ACKs</b> are received in correct order. However, two duplicate <b>ACKs</b> have the same contents. Therefore, additional information is required to detect out-of-order delivery. In this regard, it is proposed to add a one byte TCP option to the TCP-ACK header called an <b>ACK</b> duplication sequence number (ADSN). The initial value of the ADSN will be zero with each <b>ACK,</b> while sending a duplicate <b>ACK</b> for the same sequence number will trigger an increment in the ADSN number.|$|R
30|$|TCP-DDA [39] is {{a simple}} {{receiver}} modification introduced by Altman and Jiménez. In this approach, the authors investigated the impact of producing delayed <b>ACKs</b> {{for more than two}} received packets on TCP performance in multi-hop wireless networks. They proposed a limited dynamic delayed <b>ACK</b> scheme, in which the receiver begins delaying one <b>ACK</b> (sending one <b>ACK</b> for two in order packets received) and keeps increasing until four based on the sequence number of the acknowledged packet. For instance, when the delayed <b>ACK</b> is set to four, the receiver may send a single <b>ACK</b> for packet (Pi) implying that packets (Pi- 1), (Pi- 2) and (Pi- 3) have also been successfully received, without sending separate <b>ACKs</b> for each. The receiver keeps delaying four <b>ACKs</b> except at session start-up it decreases the delayed <b>ACK</b> to one again.|$|R
30|$|Note that w {{means the}} {{congestion}} window {{size in the}} current transmission path and s is Maximum Segment Size (MSS). The quotient of these two parameters represents the sequence of segment which was sent in previous round trip time. The parameter m determines how much previous RTT {{should be taken into}} consideration. It is usually set to one to get the fast response. The main difference of average jitter ratio between original and redefinition is the parameter n which denotes the TSN of latest <b>acked</b> packet. Refering to Section 3.1. 1, we can continue recording and updating the jitter ratio after the loss events occurred by using SACK. It means that we still can monitor the latest network condition. But original jitter ratio of TCP would not be updated until the retransmission is a success. Hence, we can get useful jitter ratio in time and make correct loss differentiation in JSCTP.|$|E
40|$|When I/O {{saturation}} {{occurred between}} network adapter and PCI-X bus, MAC(Media Access Controller) � � can generate PAUSE packet to switch direct connected. LFN routers have large size packet buffer on each port. If the buffer cannot happen overflow, this flow control effects for � � backpressure from receiver side. This backpressure makes {{a little bit}} of bigger RTT. This bigger RTT <b>ACKed</b> packet stops growing the inflight packet window. This TCP stream can sustain high throughput almost the maximum rate of sender/receiver connection. This behavior observed on pseudo network result. B. experiment results We measured the data transfer rate from memory to memory, using Iperf 2. 0. 2. We mainly compare 1500 bytes standard frame and 9198 bytes of jumbo frame, which is the maximum MTU of the Foundry MG 8. Other parameters are memory size for TCP window, socket buffer size for application, and TXQUEUE length. These have default value for suitable for 1 Gbps network adaptor...|$|E
40|$|Abstract—Mobile cyberphysical {{systems have}} {{received}} considerable attention {{over the last}} decade, as communication, computing and control come together on a common platform. Understanding the complex interactions that govern the behavior of large complex cyberphysical systems {{is not an easy}} task. The goal {{of this paper is to}} address this challenge in the particular context of multimedia delivery over an autonomous aerial vehicle (AAV) network. Bandwidth requirements and stringent delay constraints of real-time video streaming, paired with limitations on computational complexity and power consumptions imposed by the underlying implementation platform, make cross-layer and cross-domain co-design approaches a necessity. In this paper, we propose a novel, low-complexity rate-distortion optimized (RDO) protocol specifically targeted at video streaming over mobile embedded networks. We test the performance of our RDO algorithm on simulation models developed for aerial mobility of multiple wirelessly communicating AAVs. Results show that our optimized streaming leads to 47 % and 39 % less video distortion with very little computational overhead compared to regular <b>ACKed</b> and non-ACKed transmission, respectively...|$|E
5000|$|Following Guggenheim's {{death in}} January 1971, <b>Ack</b> <b>Ack</b> was {{sold by the}} executors of Guggenheim's estate. The horse won the San Carlos Handicap {{less than a week}} before Guggenheim died. New owner E. E. [...] "Buddy" [...] Fogelson, husband of actress Greer Garson, bought <b>Ack</b> <b>Ack</b> for $500,000. In 1971, <b>Ack</b> <b>Ack</b> won seven of eight races and {{finished}} second in the other start. He won his final race, the Hollywood Gold Cup, in which he carried 134 pounds.|$|R
40|$|<b>Ack</b> 1 is a nonreceptor {{tyrosine}} kinase that participates in tumorigenesis, cell survival, and migration. Relatively {{little is known}} about the mechanisms that regulate <b>Ack</b> 1 activity. Recently, four somatic missense mutations of <b>Ack</b> 1 were identified in cancer tissue samples, but the effects on <b>Ack</b> 1 activity, and function have not been described. These mutations occur in the N-terminal region, the C-lobe of the kinase domain, and the SH 3 domain. Here, we show that the cancer-associated mutations increase <b>Ack</b> 1 autophosphorylation in mammalian cells without affecting localization and increase <b>Ack</b> 1 activity in immune complex kinase assays. The cancer-associated mutations potentiate the ability of <b>Ack</b> 1 to promote proliferation and migration, suggesting that point mutation is a mechanism for <b>Ack</b> 1 deregulation. We propose that the C-terminal Mig 6 homology region (MHR) (residues 802 – 990) participates in inhibitory intramolecular interactions. The isolated kinase domain of <b>Ack</b> 1 interacts directly with the MHR, and the cancer-associated E 346 K mutation prevents binding. Likewise, mutation of a key hydrophobic residue in the MHR (Phe 820) prevents the MHR-kinase interaction, activates <b>Ack</b> 1, and increases cell migration. Thus, the cancer-associated mutation E 346 K appears to destabilize an autoinhibited conformation of <b>Ack</b> 1, leading to constitutively high <b>Ack</b> 1 activity...|$|R
40|$|Ack/Ack 1 is a nonreceptor protein {{tyrosine}} kinase that comprises a {{tyrosine kinase}} core, an SH 3 domain, a Cdc 42 -binding region, a Ralt homology region, and a proline-rich region. Here we describe a detailed {{characterization of the}} <b>Ack</b> protein {{as well as the}} chromosomal localization of human <b>Ack</b> (chromosome 3 q 29) and the primary structure of murine <b>Ack.</b> We demonstrate that <b>Ack</b> is ubiquitously expressed, with highest expression seen in thymus, spleen, and brain. Activation of integrins by cell adhesion on fibronectin leads to strong tyrosine phosphorylation and activation of <b>Ack.</b> Upon cell stimulation with EGF or PDGF, <b>Ack</b> is tyrosine-phosphorylated and recruited to activated EGF or PDGF receptors, respectively. A pool of endogenous <b>Ack</b> molecules is constitutively tyrosine-phosphorylated, even in starved cells. Moreover, tyrosine-phosphorylated <b>Ack</b> forms a stable complex with the adapter protein Nck via its SH 2 domain. Finally, we have characterized a membrane-targeting sterile α motif-like domain in the amino terminus of <b>Ack.</b> Using several <b>Ack</b> mutants, we show that the amino-terminal and CRIB domains are necessary for <b>Ack</b> autophosphorylation, whereas the SH 3 domain appears to have an autoinhibitory role. These experiments suggest a functional role for <b>Ack</b> as an early transducer of multiple extracellular stimuli...|$|R
40|$|Micro-bursts from TCP flows are investigated. The chiprate is {{introduced}} {{and used to}} quantify the short-term bitrate of TCP flows. This paper examines packets with chiprates above the 90 th percentile. The examination is performed over time scales ranging from 244 µs to 125 ms. Two issues are addressed, the impact and {{the causes of the}} micro-bursts. It is found that the packets with high chiprate experience an elevated probability of burst losses. For example, the probability of a burst loss is up to 10 times larger for packets sent in micro-bursts. Furthermore, in some settings, these packets experience higher loss rate in general. It is also found that micro-bursts cause an increase in queuing delay. The causes of these micro-bursts are investigated. One finding is that at short-time scales, ACK clocking, which should reduce micro-bursts, is not functioning correctly. For example, in some cases, most of the packets contained in micro-bursts are <b>ACKed</b> at a rate that is {{less than half of the}} data rate. ...|$|E
30|$|When a {{duplicate}} ACK is received, {{the sender}} checks FirstUnsacked and HighSACK {{to investigate whether}} it is due to congestion. If FirstUnsacked is equal to HighACK, {{it means that the}} FirstUnsacked segment was reordered or dropped due to congestion (we assume that an ACK acknowledges the sequence number or the first byte of the expected data). (HighACK is defined as the sequence number of the highest byte of data that has been cumulatively <b>ACKed</b> at a given point in [34].) Otherwise, if FirstUnsacked is less than HighSACK, it means that the FirstUnsacked segment was reordered or dropped due to congestion while waiting for a new ACK for the segment retransmitted by an ELN. If the segment of HighACK is already SACKed, it means that the segment was dropped in the receiver queue. Therefore, the segment needs to be transmitted again. If the counter of received duplicate ACKs becomes three, the sender triggers the congestion recovery algorithms of fast retransmit and recovery. In fast retransmit phase, the sender retransmits the FirstUnsacked segment. The other operations of ESACK are equal to SACK. Therefore, if there is no wireless loss, ESACK behaves just like SACK.|$|E
40|$|Wireless {{local area}} {{networks}} {{have been designed}} for wireless communication. Frames are acknowledged (<b>ACKed)</b> after a short and predefined MAC idle time. The MAC idle time varies with i) the physical distance between stations, caused by the delay of wireless signal propagation, and ii) the time to detect the ACK at the local station, which varies with the signal strength of the incoming ACK. We present CAESAR, CArriEr Sense-bAsed Ranging, that combines time of flight and signal-to-noise ratio measurements to calculate the distance between two stations. CAESAR measures the distance by estimating the MAC idle time in a data/ACK communication at a 44 MHz clock resolution and the ACK detection time on a per-frame basis. CAESAR is a software-based solution that is entirely implemented at the transmitter and it requires no protocol modifications and only a limited calibration in links with multi-path propagation. We implement CAESAR on commodity hardware and conduct extensive experiments both in controlled network conditions and dynamic radio environments. Our measurements confirm {{the accuracy of the}} solution and show the capability to track the distance to WLAN smartphones at pedestrian speeds. 1...|$|E
40|$|Cdc 42 -associated {{tyrosine}} kinase 1 (<b>ACK</b> 1) {{is a specific}} down-stream effector of Cdc 42, a Rho family small G-protein. Previous {{studies have shown that}} <b>ACK</b> 1 interacts with clathrin heavy chain and is involved in clathrin-coated vesicle endocytosis. Here we report that <b>ACK</b> 1 interacted with epidermal growth factor receptor (EGFR) upon EGF stimulation via a region at carboxy terminus that is highly homologous to Gene- 33 /Mig- 6 /RALT. The interaction of <b>ACK</b> 1 with EGFR was dependent on the kinase activity or tyrosine phosphorylation of EGFR. Immunofluorescent staining using anti-EGFR and GFP-ACK 1 indicates that <b>ACK</b> 1 was colocalized with EGFR on EEA- 1 positive vesicles upon EGF stimulation. Suppression of the expression of <b>ACK</b> 1 by ACK-RNAi inhibited ligand-induced degradation of EGFR upon EGF stimulation, suggesting that <b>ACK</b> 1 {{plays an important role in}} regulation of EGFR degradation in cells. Furthermore, we identified <b>ACK</b> 1 as an ubiquitin-binding protein. Through an ubiquitin-association (Uba) domain at the carboxy terminus, <b>ACK</b> 1 binds to both poly- and mono-ubiquitin. Overexpression of the Uba domain-deletion mutant of <b>ACK</b> 1 blocked the ligand-dependent degradation of EGFR, suggesting that <b>ACK</b> 1 regulates EGFR degradation via its Uba domain. Taken together, our studies suggest that <b>ACK</b> 1 senses signal of EGF and regulates ligand-induced degradation of EGFR...|$|R
40|$|Abstract — <b>ACK</b> {{thinning}} {{refers to}} the technique to discard or reduce TCP acknowledgements (<b>ACKs)</b> {{for the purpose of}} diverting scarce bandwidth to TCP data traffic. Delayed <b>ACK</b> and <b>ACK</b> filtering fall into the category. It has been shown that under some circumstances the technique is effective to boost the TCP throughput on wireless links, in particular the IEEE 802. 11 wireless LAN (WLAN). In this paper, however, we show that <b>ACK</b> thinning backfires under congestion due to its cross-layer impact on the 802. 11 MAC dynamics. With the <b>ACK</b> filtering example, we demonstrate the phenomenon and analyze the cause. Based on the analysis, we show how the IEEE 802. 11 contention window size control solves the problem. Although only the <b>ACK</b> filtering and Delayed <b>ACK</b> are considered in this paper, any other techniques to save on TCP <b>ACK</b> bandwidth usage share the same fundamental issues. I...|$|R
30|$|TCP-ADA {{states that}} the best option is to {{generate}} <b>ACK</b> after one cwnd. The problem with TCP-ADA is that, if there is <b>ACK</b> loss, then generating another <b>ACK</b> after receiving another cwnd will lead to retransmission timeout. TCP-DAA also generates <b>ACK</b> after four packets if the channel condition is good, {{but in the case}} of a packet loss it has a mechanism to generate <b>ACK</b> after two packets to avoid unnecessary delay. TCP-DCA is based on TCP-DAA, but its novelty is to delay <b>ACK</b> on the basis of hop counts.|$|R
40|$|Monoclonal {{antibodies}} 35 S and 55 S, specific for herpes implex virus type 1 (HSV- 1) glycoproteins gB and gD respectively, {{were found}} to react with infected cell membranes but not cell-free virions. This indicates that the spectrum of viral determinants detectable on the infected cell surface is not identical to that detectable on the virion envelope. The monoclonal antibody 35 S could promote recovery from ocular HSV- 1 infection in mice. Thus, antibody reactive with infective cell-specific determinants can {{play a significant role}} in host resistance to HSV- 1 infection. Recent studies have demonstrated that passive transfer of monoclonal antibodies pecific for the major herpes simplex virus (HSV- 1) -encoded glycoproteins (gB, gC, gD and gE) can effectively protect recipient mice against lethal HSV infection (Dix et al., 1981;Balachandran et al., 1982; Rector et al., 1982). An additional observation was that monoclonal antibodies that completely <b>acked</b> detectable virus-neutralizing activity in vitro could nevertheless be protective in vivo. The explanation as to how non-neutralizing antibody mediates its protective ffect remains unresolved. One possibility is that monoclonal antibodies did in fact neutralize virus infectivity in vivo with the help of serum components or immunologically reactive cells no...|$|E
40|$|Acknowledgements (SACK), {{the three}} most common TCP {{implementations}} today in (future) optical burst switched (OBS) networks. In general, SACK, which considers multiple Triple Duplicated <b>ACKed</b> (TD) losses in one round, is found to perform best in OBS networks, while New-Reno, which improves Reno in packet switched networks by fast retransmission in responding to partial ACKs, may however perform worse than Reno. All three TCP implementations react to a Time Out (TO) loss {{in the same way}} (i. e, using Slow Start). In OBS networks, where a burst may contain all packets from one round, and a burst loss occurs mainly due to contention instead of buffer overflow, such a TO event may no longer imply heavy congestion, or in other words, it may be a false TO or FTO. Such FTOs, which may be common in OBS networks especially for fast TCP flows, can significantly degrade the performance of all existing TCP implementations. Accordingly, we also propose a new TCP implementation called Burst TCP (BTCP) which can detect FTOs and react properly, and as a result, improve over the existing TCP implementations significantly. I...|$|E
40|$|We {{characterize}} an inefficiency in {{the current}} specification of SCTP’s congestion control, which degrades performance (more than necessary to be “TCP-friendly”) when there are multiple packet losses in a single window. We present an SCTP variant, called New-Reno SCTP, which introduces three modifications. First, a Fast Recovery mechanism, {{similar to that of}} New-Reno TCP, is included to avoid multiple congestion window (cwnd) reductions in a single round-trip time. Second, we introduce a new policy which restricts the cwnd from being increased during Fast Recovery, thus ensuring that the newly introduced Fast Recovery mechanism maintains conservative behavior. Third, we modify SCTP’s HTNA (Highest TSN Newly <b>Acked)</b> algorithm to ensure that Fast Retransmits are not unnecessarily delayed. We show that New-Reno SCTP performs better, and still conforms to AIMD principles. Also, we compare these two variants of SCTP with New-Reno TCP and SACK TCP under five different loss scenarios. Our results show that New-Reno SCTP performs significantly better than New-Reno TCP, maintains conservative behavior similar to SACK TCP, and is as robust as SACK TCP to multiple losses in a window. Prepared through collaborative participation in the Communications and Networks Consortium sponsored b...|$|E
30|$|The first {{optimization}} of {{this nature}} has been introduced through the standard TCP with delayed <b>ACK</b> option in (RFC 1122 [14], RFC 2581 [40]). With the standard delayed <b>ACK</b> option, TCP can generate one <b>ACK</b> upon receiving two in-order data packets (Figure 4 b). It has been reported through extensive simulations [41, 42] that TCP variants like Reno, New Reno, SACK and Vegas perform better by employing the delayed <b>ACKs</b> {{in the case of}} throughput, bandwidth and energy consumption. However, in 802.11 networks, the interference problem between <b>ACK</b> and data packets may still persist and the benefit of standard TCP with delayed <b>ACK</b> can be further improved. (Figure 4 c) shows the case of delaying <b>ACK</b> for more than two packets. In fact, lowering the number of <b>ACKs</b> may improve TCP performance, however, the large cumulative <b>ACKs</b> will induce packet loss due to retransmission time out at the sender side of TCP. To address this problem, numerous enhancements and optimizations have been proposed to reduce traffic overhead caused by generating more <b>ACKs</b> than necessary.|$|R
40|$|Activated Cdc 42 kinase (<b>Ack)</b> is a non-receptor {{tyrosine}} kinase that is regulated by Cdc 42 and implicated in various developmental processes. Mammalian <b>Ack</b> {{has been shown}} to be essential for the growth of Ras transformed cells. Activated Ras has been identified in over a third of human cancers, thus we investigated <b>Ack</b> 2 ̆ 7 s influence on survival to determine if <b>Ack</b> can serve as a therapeutic target to treat cancers with deregulated Ras. We have identified a novel role for <b>Ack</b> in the regulation of programmed cell death in Drosophila melanogaster. Genetic interaction studies using the fly eye demonstrate that <b>Ack</b> influences the death-inducing activity of Head Involution Defective (hid). Using the hid induced small eye phenotype as a baseline, we determined that <b>Ack</b> influences cell survival through an uncharacterized pathway. This pathway is dependent on <b>Ack</b> kinase activity, functions with the adaptor proteins Drk as well as the transcriptional co-activator Yorkie and is independent of epidermal growth factor receptor signaling. We have also identified a genetic interaction between <b>Ack</b> and Ras in flies. Overexpressing Ras causes lethality within an <b>Ack</b> null background and <b>Ack</b> is activated by RasGTP or by downstream MAP kinase pathway components. Overall, our data suggest that <b>Ack</b> promotes cell survival through a novel pathway that has potential therapeutic value for the treatment of cancers containing deregulated Ras...|$|R
40|$|<b>ACK</b> (activated Cdc 42 -associated {{tyrosine}} kinase) (also Tnk 2) is an ubiquitin-binding {{protein and}} {{plays an important}} role in ligand-induced and ubiquitination-mediated degradation of epidermal growth factor receptor (EGFR). Here we report that <b>ACK</b> is ubiquitinated by HECT E 3 ubiquitin ligase Nedd 4 - 1 and degraded along with EGFR in response to EGF stimulation. <b>ACK</b> interacts with Nedd 4 - 1 through a conserved PPXY WW-binding motif. The WW 3 domain in Nedd 4 - 1 is critical for binding to <b>ACK.</b> Although <b>ACK</b> binds to both Nedd 4 - 1 and Nedd 4 - 2 (also Nedd 4 L), Nedd 4 - 1 is the E 3 ubiquitin ligase for ubiquitination of <b>ACK</b> in cells. Interestingly, deletion of the sterile alpha motif (SAM) domain at the N terminus dramatically reduced the ubiquitination of <b>ACK</b> by Nedd 4 - 1, while deletion of the Uba domain dramatically enhanced the ubiquitination. Use of proteasomal and lysosomal inhibitors demonstrated that EGF-induced <b>ACK</b> degradation is processed by lysosomes, not proteasomes. RNA interference (RNAi) knockdown of Nedd 4 - 1, not Nedd 4 - 2, inhibited degradation of both EGFR and <b>ACK,</b> and overexpression of <b>ACK</b> mutants that are deficient in either binding to or ubiquitination by Nedd 4 - 1 blocked EGF-induced degradation of EGFR. Our findings suggest an essential role of Nedd 4 - 1 in regulation of EGFR degradation through interaction with and ubiquitination of <b>ACK.</b> Activated Cdc 42 -associated tyrosine kinase (<b>ACK)</b> (also Tnk 2) is a member of the type VIII tyrosine kinase family. Activation of <b>ACK,</b> including both <b>ACK</b> 1 and <b>ACK</b> 2, occurs in response to signaling of epidermal growth factor receptor (EGFR), platelet-derived growth factor (PDGF) receptor, in-sulin receptor, Gas- 6 receptor (Mer), M 3 muscarinic receptor...|$|R
