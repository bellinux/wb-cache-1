61|405|Public
50|$|Zanardi {{was fitted}} with two {{prosthetic}} limbs and began an ambitious rehabilitation program. Dissatisfied with {{the limitations of}} legs available commercially, Zanardi designed and built his own custom legs, {{to allow him to}} compare the weight and stiffness of various feet in order to find the ones most suitable for racing. In 2002, CART honoured Zanardi by giving him the privilege of waving the checkered flag in Toronto, Canada. In 2003, Zanardi was racing again, with the aid of hand-operated brake and <b>accelerator</b> <b>controls.</b> He ceremonially drove thirteen laps at the Lausitzring, having crashed 13 laps before the end in 2001. He lapped fast enough that had he been qualifying for the race that weekend, he would have been fifth. It persuaded him that a race return was something to pursue.|$|E
40|$|At the ISAC {{radioactive}} beam facility, the superconducting Linac {{was commissioned}} and several experimental beam lines were added. The paper will describe the {{additions to the}} EPICS based control system, issues with integration of third party systems as well as integration of <b>accelerator</b> <b>controls</b> with experiment controls...|$|E
40|$|Appropriate {{hardware}} and software network protocols are surveyed for accelerator control environments. <b>Accelerator</b> <b>controls</b> network topologies are discussed {{with respect to the}} following criteria: vertical versus horizontal and distributed versus centralized. Decision-making considerations are provided for accelerator network architecture specification. Current trends and implementations at Fermilab are discussed. I...|$|E
40|$|A {{feasibility}} {{study of the}} Digital Signal Processor (DSP) is now under going at KEK 12 GeV proton synchrotron(PS). The DSP is expected as a new stand alone processor in the <b>accelerator</b> <b>control</b> because of its remarkable progress in the processing speed and outstanding forms of technology. Some applications of the DSP in the <b>accelerator</b> <b>control</b> system were already reported in ICALEPCSâ€™ 97. We try to use the DSP in a beam feedback system and examine its reliability and flexibility in the <b>accelerator</b> <b>control.</b> ...|$|R
40|$|AbstractIn {{order to}} {{regulate}} the fuel injection quantity for the non electronic-controlled engine {{during the process of}} automatic shift, independent <b>accelerator</b> auxiliary <b>control</b> device need to be designed. The <b>accelerator</b> <b>control</b> device should not only meet servo requirements in normal driving but also regulate the fuel injection quantity automatically in the process of automatic shift. This paper mainly describes the design of Electric hydraulic <b>Accelerator</b> <b>control</b> device, and the experiments show that the device can meet servo requirements and regulate the fuel injection quantity automatically...|$|R
40|$|Electronics Division, BARC, {{has been}} working in the area of control systems for medium and high energy accelerators for more than a decade. During this period, <b>Accelerator</b> <b>control</b> systems for FOTIA (Folded Tandem Ion Accelerator) at BARC and for the Industrial Accelerator at BRIT were built. The <b>Accelerator</b> <b>Control</b> System for the LINAC is the most recent development. Also, a large number of CAMAC units were {{developed}} in-house for use in Data Acquisition Systems and <b>Accelerator</b> <b>Control</b> Systems. Additionally, a number of RF systems like Resonator Controller, RF Power Amplifiers, RF System for Dynamic Phase Generation, etc. were developed during the IXth plan term. The LINAC Control System has been developed for the control and operation of th...|$|R
40|$|Nodal is {{a popular}} {{interpreter}} language for <b>accelerator</b> <b>controls</b> {{since the beginning of}} the 70 's. Nodal has been rewritten in the C language to be easily portable to the different computer platforms which are in use in today's <b>accelerator</b> <b>controls.</b> The paper describes the major features of this new version of Nodal, the major software packages which are available through this implementation, the platforms on which it is currently running, and some relevant performances. The paper presents the major domains of usage of Nodal and its capability for these classes of applications. The experience gained during the rejuvenation project of the CERN accelerator control systems is presented. The benefit of this use is discussed, in particular with a view to the prevailing strong constraints in personnel and money resources...|$|E
40|$|The Windows 2000 {{configuration}} {{project was}} launched {{to set up}} the operational consoles, accounts, deployment procedures and packages of <b>accelerator</b> <b>controls</b> software on the new Windows 2000 operational consoles in the SPS Accelerator Control Room, the SPS surface buildings and the SPS experimental zones, in an automatic and reproducible manner. The configuration of the operational console environment is achieved by a combination of Windows profile settings for the Operations user account and group policy settings applied to security groups. A major restriction for all operational consoles (being located either in the CERN Accelerator Control Rooms or in one of the SPS surface buildings), is the fact that only a small set of users are allowed to perform actions in a restricted domain, in order to ensure secure access to the <b>Accelerator</b> <b>Controls</b> application software...|$|E
40|$|The PS/SL Middleware {{project was}} {{launched}} in November 1998 to provide a modern middleware communication infrastructure for the CERN <b>accelerator</b> <b>controls.</b> The management plan for this project stipulates that the project will be partitioned in three phases with the first phase (planned to finish end of January 2000) devoted mainly {{to the study of}} technology, requirement captur...|$|E
40|$|We {{describe}} some of {{the challenges}} of particle <b>accelerator</b> <b>control,</b> highlight recent advances in neural network techniques, discuss some promising avenues for incorporating neural networks into particle <b>accelerator</b> <b>control</b> systems, and describe a neural network-based control system that is being developed for resonance control of an RF electron gun at the Fermilab Accelerator Science and Technology (FAST) facility, including initial experimental results from a benchmark controller. Comment: 21 p...|$|R
40|$|The {{aim of this}} {{document}} is to give a general overview of {{the implementation of the}} CPS <b>Accelerator</b> Complex <b>Control</b> System {{as a part of the}} D 067 project. Within the framework of this project, the main reasons for the collaboration between PS and SL Divisions, which allowed the common design of the <b>accelerator</b> <b>control</b> system, will be reiterated. A description of the basic concepts and constraints, m ain parts, operator interface and applications, exploitation and future evolution of the CPS realisation of this common <b>accelerator</b> <b>control</b> system is given. A chronological list of references (main ly of conference presentations) completes the report...|$|R
40|$|Increasingly less expensive, more reliable, {{state of}} the art, {{standard}} PC components, with the now stable operating system Linux, provide a solid base for a port of the <b>Accelerator</b> <b>Control</b> Front-End. The poster shows odds and evens of the project in all it's phases, from the analysis, through the implementation and testing, to the integration into the <b>Accelerator</b> <b>Control</b> operation. To better judge {{the results of the}} project, we provide the comparison against the existing Real-time Unix platform. ...|$|R
40|$|In October 2000, {{the third}} PCaPAC (PCs and Particle <b>Accelerator</b> <b>Controls)</b> {{workshop}} {{took place at}} DESY. This paper presents {{a summary of the}} workshop. The workshop reviewed existing and new PC-based accelerator control systems, from small-scale to large-scale installations. It demonstrated convincingly the advantage of modern, commercial mass-market products used for <b>accelerator</b> <b>controls.</b> Disadvantages of these technologies were reported as well. Large-scale PC systems inherently bring administrative concerns into the picture. In this vein, special emphasis was given to system administration for distributed systems. A major topic of the workshop was the integration of different control system approaches as well as the integration of different platforms within the same control system. In particular, PC-based concepts offer the simple opportunity to interface to commercial SCADA systems. In addition, large emphasis was given to the presentation of future developments including the next network trends to data exchange via SOAP and XML. Comment: ICALEPCS 2001 TUBT 00...|$|E
40|$|It {{is a big}} {{challenge}} to smoothly upgrade the control system of a large operational accelerator such as the LHC without causing unnecessary downtime. We have identified backward compatibility as a key measure to achieve this, because a backward compatible component can be easily upgraded. This document describes the work the CERN <b>Accelerator</b> <b>Controls</b> group does to provide methods and tools supporting backward compatibility...|$|E
40|$|This paper {{describes}} {{the implementation of}} the supervision system for the LHC Prototype Full-Cell also known as String 2. The supervision application is based on a commercial package targeted to industrial controls, but because of the complexity and the specifics of such a system, integration with custom components is necessary in order to merge the industrial requirements with the specificity of the <b>accelerator</b> <b>controls...</b>|$|E
40|$|<b>Accelerator</b> <b>control</b> system {{applications}} at Berkeley Lab's Advanced Light Source (ALS) {{are typically}} deployed on operator consoles running Microsoft Windows 2000 and utilize EPICS[2] channel access for data access. In {{an effort to}} accommodate {{the wide variety of}} Windows based development tools and developers with little experience in network programming, ActiveX controls have been deployed on the operator stations. Use of ActiveX controls for use in the <b>accelerator</b> <b>control</b> environment has been presented previously[1]. Here we report on some of our experiences with the use and development of these controls...|$|R
40|$|A {{control system}} for a 150 MeV FFAG {{accelerator}} com-plex in KURRI has been developed and served for actual commissioning of this accelerator complex with high relia-bility. This control system has been developed using simple and versatile tools such as PLCs, LabVIEW for MMI/DAQ systems, MySQL and Apache, and {{this can be a}} good ex-ample for small institutes without specialists on <b>accelerator</b> <b>control.</b> The design and development of our control system are reviewed from the perspective of developers without specialized experience on <b>accelerator</b> <b>control.</b> Also, the current status and applications of this control system are introduced...|$|R
40|$|Accelerators {{have played}} an {{important}} role in basic and applied research. Control systems are the backbone of the accelerator facilities. The Linux operating system has a very bright future in the area of embedded applications for anything from Internet appliances to dedicated control systems. The power, reliability, flexibility, scalability of Linux, and communications protocols have established Linux as an increasingly popular software platform for a vast array of projects and products. Embedded Linux systems are cheaper solutions for various applications in <b>accelerator</b> <b>control</b> system. The architecture of the embedded Linux system used for the <b>accelerator</b> <b>control</b> application will be presented in this report...|$|R
40|$|Developing <b>accelerator</b> <b>controls</b> {{software}} is a challenging task requiring {{not only a}} thorough knowledge of the different aspects of particle accelerator operations, but also application of good development practices and robust project management tools. Thus, there was a demand for a complete environment for both developing and deploying <b>accelerator</b> <b>controls</b> software, {{as well as the}} tools to manage the projects. As an outcome, a versatile development process was formulated, covering the controls software life cycle from the inception phase up to the release and deployment of the deliverables. In addition, a development environment was created providing management tools that: standardize the common infrastructure for all the concerned projects; help to organize work within project teams; ease the process of versioning and releasing; and provide an easy integration of the test procedures and quality assurance reports. Change management and issue tracking are integrated with the development process and supported by the dedicated tools. This approach was successfully applied for all the new controls software for LEIR, SPS, LHC, injection lines and CNGS extraction...|$|E
40|$|Inspired by {{the success}} of the {{software}} improvement process for Java projects, in place since several years in the CERN <b>accelerator</b> <b>Controls</b> group, it was agreed in 2011 to apply the same principles to the C/C++ software developed in the group, an initiative we call the Software Improvement Process for C/C++ software (SIP 4 C/C++). This paper will present the SIP 4 C/C++ initiative in more detail, summarizing our experience and the future plans...|$|E
40|$|We {{report on}} updates to the <b>{{accelerator}}</b> <b>controls</b> for the Neutralized Drift Compression Experiment II, a pulsed induction-type accelerator for heavy ions. The control infrastructure {{is built around}} a LabVIEW interface combined with an Apache Cassandra backend for data archiving. Recent upgrades added the storing and retrieving of device settings into the database, as well as ZeroMQ as a message broker that replaces LabVIEW's shared variables. Converting to ZeroMQ also allows easy access via other programming languages, such as Python...|$|E
40|$|Vista Control Systems, Inc. has {{developed}} a portable system for intelligent <b>accelerator</b> <b>control.</b> The design is general in scope and is thus configurable {{to a wide range}} of <b>accelerator</b> facilities and <b>control</b> problems. The control system employs a multi-layer organization in which knowledge-based decision making is used to dynamically configure lower level optimization and control algorithms...|$|R
40|$|In the {{framework}} of a future unique <b>accelerator</b> <b>control</b> structure for the LHC era, the convergence of the PS and SL systems was relaunched in 1997. The present study was triggered by a directive from the SL and PS Divisions to investigate and propose concrete actions. The two systems are compared in the areas of server architecture, networking capabilities including performance and flexibility, support for generic, re-configurable applications, and general purpose operator interfaces. Additional sub-systems covered by this report include the timing system software, error reporting, and the alarm sub-system. Areas where duplication of effort exists are noted, as are areas where each system could profit from the strengths of the other system. Additionally, areas are pointed out where features are missing from both systems as compared to other state- of-the-art <b>accelerator</b> <b>control</b> systems. A set of specific recommendations is proposed leading in the direction of future integration of these two systems. features are missing from both systems as compared to other state- of-the-art <b>accelerator</b> <b>control</b> systems. A set of specific recommendations is proposed leading in the direction of future integratio...|$|R
40|$|Component Oriented <b>Accelerator</b> <b>Control</b> Kernel (COACK) [1][2], {{originally}} designed for <b>controlling</b> <b>accelerator</b> complex, {{has been adopted}} for a new central control system for a complexes of more than 20 beamline interlock systems, installed at the 2. 5 -GeV electron storage ring of the Photon Factory. We have described {{the details of the}} entire system, emphasizing the hardware with which the new system was actually developed with COACK. ...|$|R
40|$|In October 1996 {{the first}} ever {{international}} workshop devoted to PCs and Particle <b>Accelerator</b> <b>Controls</b> was held at DESY. One major impetus for holding this workshop at DESY was the on-going work in converting the control systems for HERA and its pre-accelerators to PC-dominated systems. Thus in this report we present both a synopsis of the workshop, dealing with PC control systems in general, and a status report of the HERA control system in particular. In what follows, this will appear as two distinct reports. PCAPA...|$|E
40|$|Availability {{modeling}} {{of the proposed}} International Linear Collider (ILC) predicts unacceptably low uptime with current electronics systems designs. High Availability (HA) analysis is {{being used as a}} guideline for all major machine systems including sources, utilities, cryogenics, magnets, power supplies, instrumentation and controls. R&D teams are seeking to achieve total machine high availability with nominal impact on system cost. The focus of this paper is the investigation of commercial standard HA architectures and packaging for <b>Accelerator</b> <b>Controls</b> and Instrumentation. Application of HA design principles to power systems and detector instrumentation are also discussed. I...|$|E
40|$|This {{thesis is}} about general methods {{for the design}} of {{efficient}} controls, with the application of the state diagnostic of the booster Bodo at the Dortmunder Electron Test Accelerator facility DELTA. Hardware for the booster diagnostic were developed. Data aquisition software as well as graphical user interfaces for the data visualisation were designed and programmed. General rules for efficient <b>accelerator</b> <b>controls</b> were explained by the implementation of the control interfaces. Finally measurements of the dynamical optical properies of the booster - using the developed tools - are shown...|$|E
40|$|Concept of Virtual {{accelerator}} {{is introduced}} to develop beam control application {{programs in the}} KEKB acceler-ator control system. A virtual accelerator is a computer process which simulates behavior of a beam in an accel-erator and responds to the <b>accelerator</b> <b>control</b> program un-der development in a same way as an actual accelerator do. Users of the virtual accelerator can test their control algo-rithm and user interface without affecting {{the operation of the}} accelerator. EPICS(Experimental Physics and Industrial Control System) jointly developed by LANL and APS/ANL will be used as a base of KEKB <b>accelerator</b> <b>control</b> system. In the EPICS based control system, a device is represented as a collection of records in a EPICS runtime database...|$|R
40|$|In Fermilab's <b>accelerator</b> <b>control</b> system, {{multicast}} communication wasn't properly {{incorporated into}} ACNET's transport layer, nor in its programming API. We present some recent work that makes multicasts naturally {{fit in the}} ACNET network environment. We also show how these additions provide high-availability for ACNET services...|$|R
40|$|Presenter First (PF) uses {{a variant}} of Model View Presenter design pattern to add {{implementation}} flexibilityand to improve testability of complex event-driven applications. It has been introduced {{in the context of}} GUI applications, but can easily be adapted to server applications. This paper describes how Presenter Firstmethodology is used to develop a device server for the Programmable Logic Controls (PLC) of the EuropeanXFEL undulator systems, which are Windows PCs running PLC software from Beckhoff. The server implements a ZeroMQ message interface to the PLC allowing the DOOCS <b>accelerator</b> <b>control</b> system of the European XFEL to exchange data with the PLC by sending messages over the network. Our challenge is to develop a well-tested device server with a flexible architecture that allows integrating the server into other <b>accelerator</b> <b>control</b> systems like EPICS...|$|R
40|$|Database data change {{notification}} (DCN) is {{a commonly}} used feature. Not all database management systems (DBMS) provide an explicit DCN mechanism. Even for those DBMS's which support DCN (such as Oracle and MS SQL server), some server side and/or client side programming {{may be required}} to make the DCN system work. This makes the setup of DCN between database server and interested clients tedious and time consuming. In accelerator control systems, there are many well established software client/server architectures (such as CDEV, EPICS, and ADO) {{that can be used to}} implement data reflection servers that transfer data asynchronously to any client using the standard SET/GET API. This paper describes a method for using such a data reflection server to set up asynchronous DCN (ADCN) between a DBMS and clients. This method works well for all DBMS systems which provide database trigger functionality. Asynchronous data change notification (ADCN) between database server and clients can be realized by combining the use of a database trigger mechanism, which is supported by major DBMS systems, with server processes that use client/server software architectures that are familiar in the <b>accelerator</b> <b>controls</b> community (such as EPICS, CDEV or ADO). This approach makes the ADCN system easy to set up and integrate into an <b>accelerator</b> <b>controls</b> system. Several ADCN systems have been set up and used in the RHIC-AGS controls system...|$|E
40|$|A new Target Imaging System (TIS) {{has been}} {{installed}} to directly measure {{the size and}} position of the proton beam on the Spallation Neutron Source (SNS) mercury target. The proton beam, hitting a luminescent coating on the target nose, produces light that is transferred using a radiation-tolerant optical system to an image acquisition system integrated with the <b>accelerator</b> <b>controls</b> network. This paper describes the software that acquires and analyzes the image, how the system has been integrated with the SNS control system, and compares the TIS results with the indirect methods of calculating the peak densities of the proton beam...|$|E
40|$|The new {{cryogenics}} {{controls for}} LHC (UNICOS) are implemented {{in an open}} architecture based on SCADA and PLC industrial components, with Ethernet as Fieldnetwork. Its development was outsourced to industry and since mid- 2001 several applications have been produced and delivered for refrigerators in the accelerator and experiment domains. This has allowed to validate detailed performance requirements in terms of communication and distributed architecture. The second phase of this project will involve its integration with the LHC <b>accelerator</b> <b>controls,</b> both at the information exchange level (alarms, data logging) and at the device configuration level. This phase {{takes advantage of the}} integrated design a...|$|E
40|$|Compare the {{commercial}} RTOS software package with free software, our choice of system design is primarily {{based on current}} application situations in China. The authors have some application experiences of LynxOS, VRTX, pSOS, VXWARK and also some free software, we hope our discussion will give some hints on which system to choose in future control system for the coming several accelerator projects in China. uC/OS and MCX 11 is actually a free real-time kernel which has recently been applied in control systems of various areas. And we have found some use of it in <b>accelerator</b> <b>control</b> subsystem because of its exiguity, availability and transparency. The structure of a free RTOS kernel, some basic ideas of real-time system, together with application of the kernels into <b>accelerator</b> <b>control</b> subsystems, is described in the paper...|$|R
40|$|SAD (Structured Accelerator Design) is a {{modeling}} program {{developed and}} {{widely used in}} KEK. The rejuvenated TRISTAN control system uses SAD {{as an integral part}} of the system. The main program of the rejuvenated control system, which has a graphical user interface based on X-window system on a UNIX work station, uses SAD for optics calculation, beam orbit correction and orbit bump calculation. Optics data and orbit data are stored in the format which can be directly read by SAD, so that accelerator physicists can use these data for off-line analysis using SAD. A beam-based alignment method and an automated luminosity optimization program have also been developed and tested in TRISTAN using the rejuvenated TRISTAN control system and SAD. Integration of SAD with the KEKB <b>accelerator</b> <b>control</b> system will be also discussed. I. Rejuvenated TRISTAN <b>accelerator</b> <b>control</b> system The main TRISTAN control system has been used for more than ten years [1]. It becomes difficult to maintain this system and to get parts for repair. It also became difficult to fulfill the increasing demands on the <b>accelerator</b> <b>control</b> system because of limited CPU power and of limited storage space in the main TRISTAN control system. The rejuvenation of the TRISTAN control system was planned as a solution [2]. The rejuvenated control system became available in 1993 and has gradually evolved since then. The rejuvenated TRIS...|$|R
40|$|The <b>accelerator</b> <b>control</b> system (RCS) {{has been}} {{implemented}} using telephone relays. A control signal is encoded in CCR and transmitted to a selected sector {{by means of}} looped cable pairs. The sector is selected (seized) by a long haul pair routed directly from CCR to each sector. Each sector can be controlled fro...|$|R
