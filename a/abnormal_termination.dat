53|28|Public
25|$|A TLS (logout) {{truncation}} attack blocks a victim's account logout requests so {{that the}} user unknowingly remains logged into a web service. When the request to sign out is sent, the attacker injects an unencrypted TCP FIN message (no more data from sender) to close the connection. The server therefore doesn't receive the logout request and is unaware of the <b>abnormal</b> <b>termination.</b>|$|E
25|$|A quench is an <b>abnormal</b> <b>termination</b> of magnet {{operation}} {{that occurs when}} part of the superconducting coil enters the normal (resistive) state. This can occur because the field inside the magnet is too large, {{the rate of change}} of field is too large (causing eddy currents and resultant heating in the copper support matrix), or a combination of the two.|$|E
5000|$|Terminate (core dump) — <b>Abnormal</b> <b>termination</b> of the process. Additionally, implementation-defined <b>abnormal</b> <b>termination</b> actions, such as {{creation}} of a core file, may occur.|$|E
50|$|Once the {{communication}} is established between the server and client, {{a sequence of}} messages might be exchanged to complete a given device management task. OMA DM does provide for alerts, which are messages that can occur out of sequence, and can be initiated by either server or client. Such alerts are used to handle errors, <b>abnormal</b> <b>terminations</b> etc.|$|R
5000|$|M-ABORT - Terminates the {{association}} {{in the case}} of an <b>abnormal</b> connection <b>termination</b> ...|$|R
40|$|International audienceIn {{this paper}} we {{investigate}} {{the concept of}} designing user-centric transaction protocols towards achieving dependable coordination in AmI environments. As a proof-of-concept, we propose a protocol {{that takes into account}} the schedules of roaming users that move from one AmI environment to another, to avoid <b>abnormal</b> <b>terminations</b> of transactions when the users leave an environment for short, only to return later. We compare the proposed schedule-aware protocol against a schedule-agnostic one. Our findings show that the use of user-centric information in such situations is quite beneficial...|$|R
5000|$|Terminate — <b>Abnormal</b> <b>termination</b> of the process. The {{process is}} {{terminated}} {{with all the}} consequences of _exit (...) except that the status made available to wait (...) and waitpid (...) indicates <b>abnormal</b> <b>termination</b> by the specified signal.|$|E
50|$|The default {{action on}} POSIX-compliant systems is an <b>abnormal</b> <b>termination.</b>|$|E
50|$|An AbEnd (also {{abnormal}} end or abend) is an <b>abnormal</b> <b>termination</b> of software, or a program crash.|$|E
50|$|One {{problem with}} the {{handling}} logic behind the ON statement {{was that it would}} only be invoked for program faults, not for program terminations having other causes. Over time, the need for guaranteed handling of <b>abnormal</b> <b>terminations</b> grew. In particular, a mechanism was needed to allow programs to invoke plug-ins written by customers or third parties without any risk should the plug-in behave badly. In addition to general plug-in mechanisms, the new form of dynamic library linkage (Connection Libraries) allows programs to import and export functions and data, and hence one program runs code supplied by another.|$|R
50|$|Resource leaks are {{generally}} due to programming errors: resources {{that have been}} acquired must be released, but since release often happens substantially after acquisition, and many things may occur in the meantime (e.g., an exception being thrown or <b>abnormal</b> program <b>termination)</b> {{it is easy for}} release to be missed.|$|R
40|$|We {{propose a}} new {{approach}} for reacting {{to a wide variety}} of software failures, ranging from remotely exploitable vulnerabilities to more mundane bugs that cause <b>abnormal</b> program <b>termination</b> (e. g., illegal memory dereference). Our emphasis is in creating "self-healing" software that can protect itself against a recurring fault until a more comprehensive fix is applied...|$|R
5000|$|If {{the attempt}} to open the file [...] fails, the {{containing}} program will terminate with an error message and an exit status indicating <b>abnormal</b> <b>termination..</b>|$|E
50|$|This {{algorithm}} has a bug, namely a {{bounds checking}} error: if no elephants are found, the programmer will continue northwards {{and end up}} in the Mediterranean sea, causing <b>abnormal</b> <b>termination</b> by drowning.|$|E
5000|$|The role also {{includes}} maintaining records and logging events, listing each backup that is run, each machine malfunction and program <b>abnormal</b> <b>termination.</b> Operators assist system administrators and programmers in testing and debugging of new systems and programs {{prior to their}} becoming production environments.|$|E
40|$|Operating {{systems are}} the {{software}} that makes the hardware usable. Hardware provides “raw computing power. ” Operating system makes the computing power conveniently available to users, by managing the hardware carefully to achieve good performance. Operating systems {{can also be considered}} to be managers of the resources. An operating system determines which computer resources will be utilized for solving which problem and the order in which they will be used. In general, an operating system has three principal types of functions. i. Allocation and assignment of system resources such as input/output devices, software, central processing unit, etc. ii. Scheduling: This function coordinates resources and jobs and follows certain given priority. iii. Monitoring: This function monitors and keeps track of the activities in the computer system. It maintains logs of job operation, notifies end-users or computer operators of any <b>abnormal</b> <b>terminations</b> or error conditions. Thi...|$|R
40|$|We {{propose a}} {{reactive}} approach for handling {{a wide variety}} of software failures, ranging from remotely exploitable vulnerabilities to more mundane bugs that cause <b>abnormal</b> program <b>termination</b> (e. g., illegal memory dereference) or other recognizable bad behavior (e. g., computational denial of service). Our emphasis is in creating "self-healing" software that can protect itself against a recurring fault until a more comprehensive fix is applied...|$|R
40|$|The {{description}} of an Isothermal Thermogravimetric Analysis (TGA) Data Acquisition System is presented. The system consists of {{software and hardware}} to perform {{a wide variety of}} TGA experiments. The software is written in ANSI C using Borland's Turbo C++. The hardware consists of a 486 / 25 MHz machine with a Capital Equipment Corp. IEEE 488 interface card. The interface is to a Hewlett Packard 3497 A data acquisition system using two analog input cards and a digital actuator card. The system provides for 16 TGA rigs with weight and temperature measurements from each rig. Data collection is conducted in three phases. Acquisition is done at a rapid rate during initial startup, at a slower rate during extended data collection periods, and finally at a fast rate during shutdown. Parameters controlling the rate and duration of each phase are user programmable. Furnace control (raising and lowering) is also programmable. Provision is made for automatic restart in the event of power failure or other <b>abnormal</b> <b>terminations.</b> Initial trial runs were conducted to show system stability...|$|R
50|$|Switchover is {{the manual}} switch from one {{system to a}} {{redundant}} or standby computer server, system, or network upon the failure or <b>abnormal</b> <b>termination</b> of the previously active server, system, or network, or to perform system maintenance, such as installing patches, and upgrading software or hardware.|$|E
5000|$|... where f denotes an {{operation}} and x denotes {{a reference to}} some object. At execution time, however, a reference can be void (or null). In such cases, the call above will be a void call, leading to a run-time exception, often resulting in <b>abnormal</b> <b>termination</b> of the program.|$|E
50|$|The default {{action for}} a {{segmentation}} fault or bus error is <b>abnormal</b> <b>termination</b> {{of the process}} that triggered it. A core file may be generated to aid debugging, and other platform-dependent actions may also be performed. For example, Linux systems using the grsecurity patch may log SIGSEGV signals in order to monitor for possible intrusion attempts using buffer overflows.|$|E
40|$|AbstractWe wish to {{understand}} how the trajectories of the twenty pharyngeal neurons of C. elegans are established. In this study we focused on the two bilateral M 2 pharyngeal motorneurons, which each have their cell body located in the posterior bulb and send one axon through the isthmus and into the metacorpus. We used a GFP reporter to visualize these neurons in cell-autonomous and cell-non-autonomous axon guidance mutant backgrounds, as well as other mutant classes. Our main findings are: 1) Mutants with impaired growth cone functions, such as unc- 6, unc- 51, unc- 73 and sax- 3, often exhibit <b>abnormal</b> <b>terminations</b> and inappropriate trajectories at the distal ends of the M 2 axons, i. e. within the metacorpus; and 2) Growth cone function mutants never exhibit abnormalities in the proximal part of the M 2 neuron trajectories, i. e. between the cell body and the metacorpus. Our results suggest that the proximal and distal trajectories are established using distinct mechanisms, including a growth cone-independent process to establish the proximal trajectory. We isolated five novel mutants in a screen for worms exhibiting abnormal morphology of the M 2 neurons. These mutants define a new gene class designated mnm (M neuron morphology abnormal) ...|$|R
40|$|Project Report Submitted in partial {{fulfillment}} of the requirements for the degree of Bachelor of EXTC Engineering. Operation and Maintenance System(OMS) has being {{an integral part of}} the Radio Access Network (RAN) pertaining to 3 G telecommunication standard plays a vital role in managing the network. The systematic approach helps to uncover several defects related to system software release upgrade & back out, <b>abnormal</b> process <b>terminations,</b> shared memory violation and unusual process size growth. These diagnosis results have been evaluated through simulation studies and are compared with defined benchmarks of the field trial data in order to ensure overall performance stability, high quality and robustness of the OMS system...|$|R
40|$|Abstract—In {{studying}} multidisciplinary {{design optimization}} method for non-hierarchic system, Multidisciplinary Object Compatibility Design Optimization method based on simulated annealing algorithm is presented. In order {{to coordinate the}} independent optimization of subsystems, the compatibility constraint in system level and compatibility objective in subsystem work together. As optimization process continued, the coupling relationship between system level and different subsystems is gradually improved by state accepting function which is embedded in compatibility constraint. In this way, <b>abnormal</b> program <b>termination</b> and premature convergence will be avoided and ideal global optimal solution will be achieved effectually. Then the method {{is used in the}} optimization design of TR-B triple-redundancy transmission system. The multidisciplinary object compatibility design optimization model is established and the comprehensive optimal solution is obtained which meets the matching relationship of gear teeth, strength requirement and dynamic requirement, etc...|$|R
50|$|A quench is an <b>abnormal</b> <b>termination</b> of magnet {{operation}} {{that occurs when}} part of the superconducting coil enters the normal (resistive) state. This can occur because the field inside the magnet is too large, {{the rate of change}} of field is too large (causing eddy currents and resultant heating in the copper support matrix), or a combination of the two.|$|E
50|$|A TLS (logout) {{truncation}} attack blocks a victim's account logout requests so {{that the}} user unknowingly remains logged into a web service. When the request to sign out is sent, the attacker injects an unencrypted TCP FIN message (no more data from sender) to close the connection. The server therefore doesn't receive the logout request and is unaware of the <b>abnormal</b> <b>termination.</b>|$|E
50|$|In {{computing}} {{and related}} {{technologies such as}} networking, failover is switching to a redundant or standby computer server, system, hardware component or network upon the failure or <b>abnormal</b> <b>termination</b> of the previously active application, server, system, hardware component, or network. Failover and switchover are essentially the same operation, except that failover is automatic and usually operates without warning, while switchover requires human intervention.|$|E
40|$|The {{integration}} of several codes to simulate physical processes or {{components of a}} nuclear energy facility facilitates 	large-scale, detailed simulation. However, integrated simulations require several weeks or months of CPU time. 	We developed a fault-tolerant method for cooperative execution of codes, which avoids unscheduled outage of computers 	or networks. The method deals with <b>abnormal</b> job <b>terminations</b> on supercomputers and file transfer errors. If a 	computer causes an unexpected outage, the method attempts to submit the simulation task to an alternative computer. 	The method also detects transfer errors by comparing the size of files before and after transfer. The relationship between 	jobs and file transfers is connected by the fault-tolerant method, which allows us to decide the execution order 	of codes by definition of file flow. This enables the operation on integrated simulations where codes are executed sequentially 	or concurrently...|$|R
40|$|When {{designing}} a workflow schema, the workflow designer must often explicitly deal with exceptional situations, such as <b>abnormal</b> process <b>termination</b> or suspension of task execution. This paper {{shows how the}} designer can be supported by tools allowing him to capture exceptional behavior within a workflow schema, by reusing an available set of pre-configured exceptions skeletons. Exceptions are expressed by means of triggers, to be executed {{on the top of}} an active database environment. In particular, the paper deals with the handling of typical workflow exceptional situations which are modeled as generic exception skeletons to be included in a new workflow schema by simply specializing or instantiating them. Such skeletons, called patterns, are stored in a catalog; the paper describes the catalog structure and its management tools constituting an integrated environment for pattern-based exception design and reuse. Copyright c fl 1999 Elsevier Science Ltd Key words: Workflows, Ex [...] ...|$|R
40|$|We {{propose a}} new {{approach}} for reacting {{to a wide variety}} of software failures, ranging from remotely exploitable vulnerabilities to more mundane bugs that cause <b>abnormal</b> program <b>termination</b> (e. g., illegal memory dereference). Our emphasis is in creating “self-healing ” software that can protect itself against a recurring fault until a more comprehensive fix is applied. Our system consists of a set of sensors that monitor applications for various types of failure and an instruction-level emulator that is invoked for selected parts of a program’s code. This emulator allows us to predict recurrences of faults and recover execution to a safe control flow. Using the emulator for small pieces of code, as directed by the sensors, allows us to minimize the performance impact on the immunized application. We describe the overall system architecture, highlighting a prototype implementation for the x 86 platform. We discuss a virtual emulator, which uses existing and new processor features to improve performance. ...|$|R
5000|$|... "(Section) 15 of the Constitution was not framed {{with the}} object of meeting {{numerous}} instances of irregular Senate elections, but of providing for possible but rare contingencies of the <b>abnormal</b> <b>termination</b> of the service of senators; so rare that departures from the fundamental principles of representation through popular election would be really inappreciable because infrequent and possibly of short duration".|$|E
5000|$|RUN FDname I/Ounits option ... PAR=parameters RERUN ECHO | NOECHO [...] I/Ounits option ... PAR=parameters DEBUG FDname I/Ounits option ... PAR=parameters SDS sds-command LOAD FDname I/Ounits option ... PAR=parameters START AT [...] I/Ounits option ... RESTART AT [...] I/Ounits option ... UNLOAD CLS=clsname ALTER {{location}} value ..... DISPLAY format location OUTPUT=FDname DUMP format OUTPUT=FDname IF RUNRC condition integer, MTS-command ERRORDUMP (obsolete command, causes {{an automatic}} dump {{in batch mode}} following <b>abnormal</b> <b>termination</b> of a user program) ...|$|E
50|$|On {{the other}} hand, {{the quality of}} service which a single circuit is {{designed}} or conditioned to provide, e.g. voice grade or program grade is called the quality of service. Quality criteria for such circuits may include equalization for amplitude over a specified band of frequencies, {{or in the case}} of digital data transported via analogue circuits, may include equalization for phase. Criteria for mobile quality of service in cellular telephone circuits include the probability of <b>abnormal</b> <b>termination</b> of the call.|$|E
30|$|The {{test bed}} was {{configured}} {{to appear as}} an e-commerce website, a payment processor, and an “Internet” to ferret communication between e-commerce site and payment processor, and customers and malcontents to the e-commerce site. Participants were tasked {{with the role of}} network and security operations and were responsible for maintaining the operation of the e-commerce site. They were confronted with two types of events that interfered with customers assessing the website. The first event type, which manifested several times during the scenario, was a fault in the order-processing system that triggered the <b>abnormal</b> execution <b>termination</b> of the the order system. The second event was a Denial-of-Service (DoS) that originated from the payment processor partner. While a partner attacking appears exceptional, there have been cases in which attackers have exploited partner relationships and used compromised partners as stepping stones to further their compromise towards reaching their goals. The DoS attack consumed large quantities of resources, slowing customer access. Both events appear, at least at first glance, to be similar.|$|R
40|$|A clinico-pathological and EM {{study of}} a Thai boy with hypomelanosis of Ito, one of the neurocuta-neous syndromes, is reported. At birth, typical skin {{hypopigmentation}} on the trunk and a hypopigmented streak on the left lower extremity were noted. Associated cutaneous pathology shows a decrease of melanin granules within basal and malpighian keratinocytes. Ultrastructural studies highlight a normal appearance for basal and malpighian keratinocytes, but a lack of melanosomes in the malpighian cells. Melanosomes are also dramatically reduced in the basal keratinocytes, which appear small, single or clustered and surrounded by a membrane. Melanocytic degeneration has been observed and dendritic melanocytes contained various stages of nonmelanised (stage II), partially melanised premelanosome (stage III) and rarely stage 4 melano-somes. The authors observed {{an increase in the}} number of Langerhans cell which have not previously been described. There were unmyelinated axon of nerve containing melanosomes at the dermoepidermal junction. The significance of these findings will be worthwhile to note that <b>abnormal</b> nerve <b>termination</b> in close rela-tionship with basal keratinocyte, degenerated melanocyte, premelanosomes and langerhans cell are impor-tant in explaining the pathogenesis of Hypomelanosis of Ito...|$|R
40|$|Critical system {{designers}} {{are turning to}} off-the-shelf operating system (OS) software to reduce costs and time-to-market. Unfortunately, general-purpose OSes do not always respond to exceptional conditions robustly, either accepting exceptional values without complaint, or suffering <b>abnormal</b> task <b>termination.</b> Even though direct measurement is impractical, this paper uses a multi-version comparison technique to reveal a 6 % to 19 % normalized rate at which exceptional parameter values cause no error report in commercial POSIX OS implementations. Additionally, 168 functions across 13 OSes are compared to reveal common mode robustness failures. While the best single OS has a 12. 6 % robustness failure rate for system calls, 3. 8 % of failures are common across all 13 OSes examined. However, combining C library calls with system calls increases these rates to 29. 5 % for the best single OS and 17. 0 % for common mode failures. These results suggest that OS implementations are not completely diverse, and the C library functions are both less diverse and less robust than system calls...|$|R
