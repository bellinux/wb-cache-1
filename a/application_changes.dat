126|2206|Public
25|$|Akonadi {{is a new}} PIM {{framework}} for KDE 4. Akonadi is a unification of previously separate KDE PIM components. In the past each application would have its own method for storing information and handling data. Akonadi itself functions as a server that provides data and search functions to PIM applications. It is also able to update the status of contacts. So if one <b>application</b> <b>changes</b> information about a contact, all other applications are immediately informed of the change.|$|E
5000|$|... {{and some}} other {{component}} may differ as the <b>application</b> <b>changes.</b>|$|E
5000|$|When an <b>application</b> <b>changes</b> mode (e.g. to a test mode) or user; ...|$|E
5000|$|Signatures {{must be kept}} up to date, as the <b>applications</b> <b>change</b> very {{frequently}} ...|$|R
5000|$|Facebook {{always on}} <b>application,</b> <b>change</b> your status and easily access your profile, friends, inbox, pokes and more.|$|R
50|$|Clarified and {{formulated}} {{a common}} set of procedures for all water-rights <b>applications,</b> <b>changes</b> of waterrights, exchanges, augmentation plans, abjections to applications.|$|R
50|$|Software {{that is not}} {{currently}} being used gradually becomes unusable as {{the remainder of the}} <b>application</b> <b>changes.</b> Changes in user requirements and the software environment also contribute to the deterioration.|$|E
50|$|Daniel Molkentin, Cornelius Schumacher and Don Sanders then {{formed the}} core Kontact team. The KMail and {{container}} <b>application</b> <b>changes</b> were imported into the KDE source repository, and Kontact was released {{as part of}} KDE 3.2.|$|E
50|$|This way of {{modeling}} allows {{the addition of}} standard classes and standard relation types as data (instances), which makes the data model flexible and prevents data model changes when {{the scope of the}} <b>application</b> <b>changes.</b>|$|E
5000|$|... 1999 - On August 13, 1999, Quest Software went public. The {{company also}} entered the <b>application</b> <b>change</b> {{management}} market by acquiring Stat.|$|R
50|$|In June 2014, Deloitte and Panaya {{announced}} {{an agreement to}} provide Oracle E-business Suite customers the ability {{to reduce the cost}} and risk of <b>application</b> <b>change</b> projects.|$|R
50|$|Application service {{automation}} is {{the field}} where the operations needed to deploy and service data center applications are automated {{in order to}} centrally and accurately control <b>application</b> <b>change.</b>|$|R
50|$|Blueworks Live use {{its main}} page to inform users {{about all the}} changes {{occurring}} to company processes, where the user is involved (private), or about information regarding useful and news about wider BPM communities. This involves blogs, tutorials or <b>application</b> <b>changes</b> and updates.|$|E
50|$|When {{writing an}} {{application}} that uses GConf, one should never directly poll the database. Instead, one should attach a callback {{to a given}} key, thus using a Model-view-controller paradigm. Each time an <b>application</b> <b>changes</b> the value bound to a specific key, the notification callbacks will be invoked.|$|E
5000|$|The {{network has}} no notion of {{application}} names, {{and has to}} {{use a combination of}} the interface address and transport layer port number to identify different applications. In other words, the network uses information on where an application is located to identify which application this is. Every time the <b>application</b> <b>changes</b> its point of attachment, it seems different to the network, greatly complicating multi-homing, mobility, and security.|$|E
50|$|In August 2007, RoweBots, {{a former}} partner of SCG and ISI, open sourced their pSOS+ {{compatible}} version called Reliant. It {{is available to}} all that wish to upgrade without <b>applications</b> <b>changes.</b>|$|R
50|$|In May 2004, Aldon {{announced}} new {{brand names}} for its product suite, {{as well as}} the newly shortened company name. The changes were designed to support Aldon’s objective to penetrate the growing comprehensive, enterprise-wide, multi-platform <b>application</b> <b>change</b> management solutions.|$|R
50|$|On August 3, 2015, Radio Waterloo Inc., {{submitted}} an <b>application</b> to <b>change</b> CKMS-FM's frequency from 100.3 MHz to 102.7 MHz.The CRTC approved Radio Waterloo's <b>application</b> to <b>change</b> CKMS-FM's frequency from 100.3 MHz to 102.7 MHz on November 10, 2016.|$|R
50|$|The {{usage of}} account {{aggregation}} has several drawbacks. First of all {{it requires that}} a SAP portal user has to maintain a user id and password for each application that is using account aggregation. If the password in one backend <b>application</b> <b>changes</b> the SAP portal user has to maintain the stored credentials too. Though account aggregation {{can be used as}} an option where no other solution might work it causes a significant administrative overhead.|$|E
50|$|Akonadi {{is a new}} PIM {{framework}} for KDE 4. Akonadi is a unification of previously separate KDE PIM components. In the past each application would have its own method for storing information and handling data. Akonadi itself functions as a server that provides data and search functions to PIM applications. It is also able to update the status of contacts. So if one <b>application</b> <b>changes</b> information about a contact, all other applications are immediately informed of the change.|$|E
50|$|Datical DB {{is used by}} DBAs, Release Managers, DevOps teams, Application Owners, Architects, and Developers {{involved}} in the Application Release process. It manages Database Schema changes together with application code in a programmatic fashion that eliminates errors and delays and enables rapid Agile releases. Datical DB builds upon the Liquibase Data Model Approach for managing data structure specific content across application versions as they advance from Development to Test to Production environments. Datical previews the impact of Schema changes in any environment before deployment thus mitigating risk and resulting in smoother and faster <b>application</b> <b>changes.</b>|$|E
5000|$|System control {{techniques}} {{allows the}} user to send commands to an <b>application,</b> <b>change</b> the interaction mode or modify a parameter. The command sender always includes the selection of an element from a set. System control techniques can be categorized into four groups: ...|$|R
40|$|When smart objects {{participate}} in context-aware <b>applications,</b> <b>changes</b> in their real-world environment {{can have a}} significant impact on underlying networking structures. This paper presents a communication platform for smart objects that takes an object's current realworld context into account and adapts networking structures accordingly...|$|R
50|$|Starting {{with these}} lines, the toys {{started to look}} more like how the {{characters}} looked in the television series instead of the original storybooks. Their stylized Rescue Bot symbol and many paint <b>applications</b> <b>changed</b> to an Energon blue color and their rescue tools were now all translucent light Energon blue.|$|R
50|$|Traktor {{was first}} {{released}} in 2000 and {{has gone through}} several major <b>application</b> <b>changes.</b> The initial versions of Traktor were Traktor Studio and Traktor DJ, with Traktor Studio being more full featured (and expensive). In 2002, Traktor DJ Studio 2 was released, which offered several new features including scratch macros. It also expanded its looping, MIDI, and cue point functionality. In 2003, Traktor DJ Studio 2.5 was released. This new version expanded the time stretching functionality, added Open Sound Control (OSC) support, and gave the user limited ability to customize {{the look of the}} interface.|$|E
5000|$|... Exadata was {{available}} in the Oracle Cloud as a subscription service, also known simply as the [...] "Exadata Service". Databases deployed in this service include all the features and options of Oracle Database Enterprise Edition. Similarly, all Exadata features and capabilities are included in this service. Oracle databases in the Exadata Service are 100% compatible with databases deployed on-premises, which enables customers to transition to the Cloud with no <b>application</b> <b>changes.</b> Oracle Corporation manages this service - including hardware, network, Linux software and Exadata software -, while customers have complete ownership of their databases.|$|E
50|$|Pointcut {{languages}} impacts important software properties like evolvability and comprehensibility, in {{a negative}} way. There might be a possibility {{where there is a}} need to perform refactoring to define a correct aspect, which in general should not happen since refactoring is to make code cleaner. It is also not scalable when there are multiple aspects to be applied on the same code and each aspect requiring a different refactoring. In general every aspect will be tightly coupled with an application’s structure as the pointcuts explicitly contain a method’s signature. So when an <b>application</b> <b>changes</b> the pointcut needs to be changed as well. This is quite problematic for a developer.|$|E
40|$|Computing {{is full of}} {{situations}} where transforming a data format into a different format is essential to “bridge the gap ” between technology layers and ensure sharing of information among software <b>applications.</b> <b>Changes</b> in data types call for corresponding changes in data values. Moreover, to yield model interoperability, bidirectional transformations capable of translating between models are required...|$|R
40|$|This is the author’s {{version of}} a work that was {{accepted}} for publication in Topology and its <b>Applications.</b> <b>Changes</b> resulting from the publishing process, such as peer review, editing, corrections, structural formatting, and other quality control mechanisms may not be reflected in this document. Changes may {{have been made to}} this work since it was submitted for publication. ...|$|R
5000|$|Fixing {{an error}} in {{application}} database or {{an error in}} a recent <b>application</b> database <b>change</b> ...|$|R
50|$|The current {{design of}} Pin Multiplexing in {{hardware}} level raises security questions. For example, assume that an application uses a particular peripheral controller connected to a pin with a particular multiplexing setup. At one point another application (second <b>application)</b> <b>changes</b> the multiplexing setup of the pin used by the first application. Once the pin is multiplexed, the physical connection to the first peripheral controller gets disconnected. However, {{since there is no}} interrupt at the hardware level, the OS will assume that the first peripheral controller is still available. Thus, the OS will continue to carry out the write and read operations requested by the application without any error.|$|E
5000|$|The Shipdex™ Protocol is developed, maintained, and {{promoted}} by the Shipdex Co. Ltd (CY), a nonprofit organization whose purpose is to standardize the electronic exchange of technical data in the shipping industry. The Shipdex™ Protocol is maintained by the Shipdex™ Protocol Maintenance Group (SPMG) which obtains agreements from the founding members prior to <b>application</b> <b>changes.</b> The SPMG considers change proposals issued by Shipdex Registered Members at each meeting and may ratify them for incorporation in the Protocol. Any queries or proposals relating to changes to the Protocol are addressed to the Technical Manager of the SPMG using the online [...] "Change Proposal Form" [...] (CPF) at www.shipdex.com.|$|E
50|$|In {{computer}} programming, {{suppose we}} have a data item A whose value depends on data item B, i.e., the value of A must be changed after the value of B changes and before the value of A becomes necessary. Active updating is updating A immediately after B changes, while passive updating or lazy updating (lazy evaluation) is updating A immediately before its value is fetched. And example of this distinction is, e.g., {{in the implementation of}} GUI applications: the list of submenu items may depend {{on the state of the}} application; this list may be updated either as soon as the state of the <b>application</b> <b>changes</b> ("active") or only when the menu is invoked ("passive").|$|E
5000|$|... the {{selection}} of theory-based intervention methods and practical <b>applications</b> to <b>change</b> (determinants of) health-related behavior; ...|$|R
40|$|This paper {{presents}} a security analysis of an agent mediated application {{in an open}} distributed environment. We use {{a case study of}} a booktrading application that we implemented using AgentScape and JADE agent platforms. The paper analyzes whether security requirements, threats and countermeasures for an agent mediated <b>application</b> <b>change</b> when implemented on different types of agent platforms and presents countermeasures to generic and application specific threats. 1...|$|R
40|$|NOTICE: this is {{the authors}} version of a work that was {{accepted}} for publication in Physica A: Statistical Mechanics and its <b>Applications.</b> <b>Changes</b> resulting from the publishing process, such as peer review, editing, corrections, structural formatting, and other quality control mechanisms may not be reflected in this document. Changes may {{have been made to}} this work since it was submitted for publication. A definitive version was subsequently published in Physica A...|$|R
