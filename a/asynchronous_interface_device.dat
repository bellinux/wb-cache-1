0|2794|Public
5000|$|Depending on the manufacturer, {{different}} {{terms are}} used to identify devices that perform the UART functions. Intel called their 8251 device a [...] "Programmable Communication Interface". MOS Technology 6551 was known under the name [...] "Asynchronous Communications Interface Adapter" [...] (ACIA). The term [...] "Serial Communications Interface" [...] (SCI) was first used at Motorola around 1975 to refer to their start-stop <b>asynchronous</b> serial <b>interface</b> <b>device,</b> which others were calling a UART. Zilog manufactured a number of Serial Communication Controllers or SCCs.|$|R
5000|$|... with <b>asynchronous</b> <b>interface,</b> {{such as the}} {{ubiquitous}} 28-pin 8K × 8 and 32K × 8 chips (often but not always named {{something along the lines}} of 6264 and 62C256 respectively), as well as similar products up to 16 Mbit per chip ...|$|R
40|$|Practical safety-critical {{distributed}} systems must integrate safety critical and non-critical {{data in a}} common platform. Safety critical systems almost always consist of isochronous components that have synchronous or <b>asynchronous</b> <b>interface</b> with other components. Many of these systems also support a mix of synchronous and <b>asynchronous</b> <b>interfaces.</b> This report presents {{a study on the}} modeling and analysis of asynchronous, synchronous, and mixed synchronous/asynchronous systems. We build on the SAE Architecture Analysis and Design Language (AADL) to capture architectures for analysis. We present preliminary work targeted to capture mixed low- and high-criticality data, as well as real-time properties in a common Model of Computation (MoC). An abstract, but representative, test specimen system was created as the system to be modeled...|$|R
40|$|A simple, task-oriented {{notation}} {{for describing}} user actions in <b>asynchronous</b> user <b>interfaces</b> is introduced. This User Action Notation (UAN) allows the easy association of actions with feedback and system state changes {{as part of}} a set of <b>asynchronous</b> <b>interface</b> design techniques, by avoiding the verbosity and potential vagueness of prose. Use within an actual design and implementation project showed the UAN to be expressive, concise, and highly readable because of its simplicity. The task-and user-oriented techniques are naturally asynchronous and a good match for object-oriented implementation. Levels of abstraction are readily applied to allow definition of primitive tasks for sharing and reusability and to allow hiding of details for chunking. The UAN provides a critical articulation point, bridging the gap between the task viewpoint of the behavioral domain and the event-driven nature of the object-oriented implementational domain. The potential for UAN task description analysis may address some of the difficulties in developing <b>asynchronous</b> <b>interfaces...</b>|$|R
5000|$|... #Caption: W65C51S <b>Asynchronous</b> Communications <b>Interface</b> Adapter (ACIA) ...|$|R
5000|$|Physical <b>Interface</b> <b>device</b> Electromagnetic Compatibility (EMC) ...|$|R
50|$|In computing, the USB human <b>interface</b> <b>device</b> class (USB HID class) {{is a part}} of the USB {{specification}} {{for computer}} peripherals: it specifies a device class (a type of computer hardware) for human <b>interface</b> <b>devices</b> such as keyboards, mice, game controllers and alphanumeric display devices.|$|R
5000|$|The modern {{demarcation}} {{point is the}} network <b>interface</b> <b>device</b> (NID) or intelligent network <b>interface</b> <b>device</b> (INID) {{also known as a}} [...] "smartjack". [...] The NID is the telco's property. The NID may be outdoors (typically, mounted on the building exterior in a weatherproof box) or indoors.|$|R
40|$|This paper {{describes}} {{the design and}} implementation of a home network system using UPnP middleware and an embedded <b>interface</b> <b>device.</b> The developed home network system comprises a home server program, appliance emulators; (e. g., for l'K refrigerator, and air-conditioner), and an embedded <b>interface</b> <b>device</b> for networked home appliances...|$|R
40|$|This paper {{describes}} {{software architecture}} for integration of <b>interface</b> <b>devices.</b> <b>Interface</b> <b>devices,</b> such as haptic interface, are implemented in various configurations. In most cases, software of virtual environment is tightly connected to control program of those interfaces. This {{problem is a}} hazard for development of advanced applications. This paper proposes a modular software architecture called IOA (Interaction-oriented Architecture), which supports various types of <b>interface</b> <b>devices.</b> Sensors and displays are easily reconfigured by exchanging modular software. The IOA also supports tools for content development. Implementation of IOA is exemplified through audio haptics and networked haptics...|$|R
5000|$|CTIA/GTIA is a {{television}} <b>interface</b> <b>device</b> {{with the following}} features: ...|$|R
5000|$|Network <b>interface</b> <b>device,</b> a {{demarcation}} {{point for a}} telephone network ...|$|R
40|$|VLSI {{systems are}} often {{constructed}} from {{a multitude of}} independently clocked synchronous IP blocks. Unfortunately, while a synchronous design style may produce efficient block level implementations it does little to support their composition. The addition of <b>asynchronous</b> <b>interfaces</b> to each synchronous block {{is one way to}} simplify and strengthen their integration. <b>Asynchronous</b> <b>interfaces</b> allow blocks to be composed without the need to consider synchronisation failure rates, permit data-driven operation and provide greater freedom when designing on-chip buses and networks. This paper surveys the significant body of published work in this area. We highlight similarities between schemes that are often concealed by differences in specification or circuit style. We also present new local clock implementations and provide solutions to mitigate the effect of clock-tree insertion delays. The ultimate goal of this work is to permit multi-clock synchronous systems to be composed simply, robustly and efficiently. ...|$|R
5000|$|... 8551 [...] - [...] ACIA <b>Asynchronous</b> Communications <b>Interface</b> Adapter, HMOS-II {{variant of}} the 6551 ...|$|R
5000|$|Development of nano-electronic and nano-fluidic {{systems to}} <b>interface</b> <b>devices</b> {{to the outside}} world ...|$|R
5000|$|... #Caption: A {{wireless}} network <b>interface</b> <b>device</b> with a USB interface and internal antenna ...|$|R
40|$|MCS+ is a {{generalization}} of hierarchical message sequence charts (hMCSs) having [...] . In this paper, we shall illustrate the applications of MSC+ to the specification of reactive systems through {{the example of}} an Automatic Teller Machine (ATM). We shall bring out the additional advantage {{of the possibility of}} integrating <b>asynchronous</b> <b>interface</b> requirements in the realization of prototypes from MSC+ specifications...|$|R
50|$|GTCO Corporation is a {{corporation}} producing <b>interface</b> <b>devices</b> including digitizers, graphics tablets and audience response systems.|$|R
5000|$|... #Caption: Left: A 66 block; {{center and}} right: Cabinets {{containing}} Smartjack network <b>interface</b> <b>devices</b> for T-1 circuits.|$|R
40|$|A wireless-optical <b>interface</b> <b>device</b> for {{converting}} a received {{wireless signal}} to a corresponding optical signal for transferring digital {{information from the}} wireless domain to the optical domain. The <b>interface</b> <b>device</b> includes an oscillator (e. g. a negative differential resistance oscillator such as a resonant tunnelling diode) capable of synchronisation with the wireless signal, and an optical output device (e. g. semiconductor laser) controllable by an output of the oscillator to provide the corresponding optical signal. The oscillator and the optical output device may be integrated on the same semiconductor chip. Also disclosed is a corresponding wireless-optical <b>interface</b> <b>device</b> for converting a received optical signal to a corresponding wireless signal for transferring digital information from the optical domain to the wireless domain...|$|R
40|$|Chronically implantable {{wireless}} neural <b>interface</b> <b>devices</b> require biocompatible {{and stable}} {{high density integration}} of several components such as sensing elements, data processors, communication, and power supply coils. Biocompatible integration technology has been developed for Utah Electrode Array (UEA) based implantable neural <b>interface</b> <b>devices.</b> These <b>interface</b> <b>devices</b> comprise: silicon based UEA as sensing element; data processing integrated circuit; surface mounted devices (SMD); inductive power supply and communication coil made of Au and polyimide. Biocompatible materials {{are used in the}} flipchip bonding of the components to form a stacked hybrid assembly. In the final step of the device fabrication, the assembled device is coated with SiC and ParyleneC to provide insulating, hermitic, and biocompatible encapsulation. The encapsulation is etched on the sensing tips of the electrodes...|$|R
40|$|Camera guided {{teleoperation}} {{has long}} been the preferred mode for controlling remote robots with other modes such as asynchronous control only used when unavoidable. Because controlling multiple robots places additional demands on the operator we hypothesized that removing the forced pace for reviewing camera video might reduce workload and improve performance. In an earlier experiment participants operated four teams performing a simulated urban search and rescue (USAR) task using a conventional streaming video plus map interface or an experimental interface without streaming video but with the ability to store panoramic images on the map to be viewed at leisure. Search performance was somewhat better using the conventional interface; however, ancillary measures suggested that the <b>asynchronous</b> <b>interface</b> succeeded in reducing temporal demands for switching between robots. This raised the possibility that the <b>asynchronous</b> <b>interface</b> might perform better if teams were larger. In this experiment we evaluate the usefulness of asynchronous video for teams of 4, 8, or 12 robots. As in our earlier study we found a slight advantage in accuracy in marking victim locations for streaming video but overall performance was very similar...|$|R
40|$|We {{present an}} {{automated}} design approach that leverages the commonly available digital design tools {{in order to}} rapidly synthesize <b>asynchronous</b> event-based <b>interface</b> circuits from behavioral VHDL code. As part of the proposed design approach, we describe a verification methodology that is able to reveal early in the design process potential timing failures in the generated circuits. Due to the fast design cycle, the approach presented allows designers to quickly explore different architectures for asynchronous circuits and compare them using quantitative metrics based for example on power consumption or silicon area. We validated the proposed design method by synthesizing <b>asynchronous</b> <b>interface</b> circuits for a neuromorphic multi-neuron architecture, and fabricating the VLSI device. We present data from silicon that demonstrates the correct operation of the automatically generated circuits...|$|R
5000|$|Performance. The path {{taken by}} data from disk to network. Proper <b>asynchronous</b> zero-copy <b>interfaces</b> {{would make this}} {{available}} from user-space.|$|R
40|$|MSC is a {{generalization}} of hierarchical message sequence charts (hMSCs) having {{the capability to}} specify preemptive features such as watchdogs, generalized coregion and forbidden scenarios. In this paper, we shall illustrate the applications of MSC to the specification of reactive systems through the example of an Automatic Teller Machine (ATM). We shall bring out the additional advantage {{of the possibility of}} integrating <b>asynchronous</b> <b>interface</b> requirements in the realization of prototypes from MSC specifications...|$|R
50|$|In telecommunications, an {{acoustic}} coupler is an <b>interface</b> <b>device</b> for coupling electrical signals by acoustical means—usually {{into and out}} of a telephone instrument.|$|R
50|$|The 2N3904 is used very {{frequently}} in hobby electronics projects, including home-made ham radios, code-practice oscillators {{and as an}} <b>interfacing</b> <b>device</b> for microcontrollers.|$|R
5000|$|USB Human <b>Interface</b> <b>Device</b> Class: Generic {{support for}} 5-button mice is also {{included}} as standard and installing IntelliPoint allows reassigning the programmable buttons.|$|R
40|$|A single chip {{application}} specific {{integrated circuit}} (ASIC) {{which provides a}} flexible, modular interface between a subsystem and a standard system bus. The ASIC includes a microcontroller/microprocessor, a serial interface for connection to the bus, and a variety of communications <b>interface</b> <b>devices</b> available for coupling to the subsystem. A three-bus architecture, utilizing arbitration, provides connectivity within the ASIC and between the ASIC and the subsystem. The communication <b>interface</b> <b>devices</b> include UART (serial), parallel, analog, and external <b>device</b> <b>interface</b> utilizing bus connections paired with device select signals. A low power (sleep) mode is provided as is a processor disable option...|$|R
5000|$|A human <b>interface</b> <b>device</b> or HID {{is a type}} of {{computer}} device usually used by humans and takes input and gives output to humans.|$|R
40|$|The {{aim of this}} master’s {{thesis is}} a design and a {{realization}} of an <b>interface</b> <b>device</b> for various aircraft buses. The work shows the issue of Aircraft <b>Interface</b> <b>Device</b> and describes the most used types of avionics buses. It deals with the theoretical design of the PCI/ 104 –Express module and is using modularity for maximum configurability of the device. The work also brings the selection of appropriate components and their use in design. The last part describes a firmware architecture...|$|R
40|$|A user <b>interface</b> <b>device</b> with {{actuated}} buttons is described. In an embodiment, {{the user}} <b>interface</b> <b>device</b> comprises {{two or more}} buttons and {{the motion of the}} buttons is controlled by actuators under software control such that their motion is inter-related. The position or motion of the buttons may provide a user with feedback about the current state of a software program they are using or provide them with enhanced user input functionality. In another embodiment, the ability to move the buttons is used to reconfigure the user interface buttons and this may be performed dynamically, based on {{the current state of the}} software program, or may be performed dependent upon the software program being used. The user <b>interface</b> <b>device</b> may be a peripheral device, such as a mouse or keyboard, or may be integrated within a computing device such as a games device...|$|R
40|$|Contents 1 Introduction 1 2 A Little Simple Math 2 2. 1 Propositional Logic.................................. 2 2. 2 Sets.......................................... 4 2. 3 Predicate Logic.................................... 4 3 Specifying a Simple Clock 6 3. 1 Behaviors....................................... 6 3. 2 An Hour Clock.................................... 6 3. 3 A Closer Look at the Hour-Clock Specification.................. 8 3. 4 The Hour-Clock Specification in TLA +....................... 8 3. 5 Another Way to Specify the Hour Clock...................... 10 4 An <b>Asynchronous</b> <b>Interface</b> 11 4. 1 The First Specification.............................. ...|$|R
40|$|Abstract. Solvers for {{propositional logic}} formulas, so called SAT solvers, {{are used in}} many {{practical}} applications. As multi-core and multi-processor hard-ware has become widely available, parallelizations of such solvers are actively researched. Such research typically ignores the incremental problem specifica-tion feature that modern SAT solvers possess. This feature is, however, crucial {{for many of the}} real-life applications of SAT solvers. Such applications include formal verification, equivalence checking, and typical artificial intelligence tasks such as scheduling, planning and reasoning. We have developed a multi-core SAT solver called Tarmo, which provides an in-terface that is compatible with conventional incremental solvers. It enables sub-stantial performance improvements for many applications, without requiring code modifications. We present the <b>asynchronous</b> <b>interface,</b> a natural extension to the conventional solver interface that allows the construction of efficient application specific parallelizations. Through the <b>asynchronous</b> <b>interface</b> multiple problems can be given to the solver simultaneously. This enables conceptually simple but efficient parallelization of the solving process. Moreover, an asynchronous solver is easier to run in parallel with other independent tasks, simplifying the con-struction of so called coarse grained parallelizations. We provide an extensive experimental evaluation to illustrate the performance of the proposed techniques. ...|$|R
40|$|In this work, an {{asynchronous}} multi-sensor micro {{control unit}} (MCU) core is proposed for wireless {{body sensor networks}} (WBSNs). It consists of <b>asynchronous</b> <b>interfaces,</b> a power management unit, a multi-sensor controller, a data encoder (DE), and an error correct coder (ECC). To improve the system performance and expansion abilities, the <b>asynchronous</b> <b>interface</b> is created for handshaking different clock domains between ADC and RF with MCU. To increase the use time of the WBSN system, a power management technique is developed for reducing power consumption. In addition, the multi-sensor controller is designed for detecting various biomedical signals. To prevent loss error from wireless transmission, use of an error correct coding technique is important in biomedical applications. The data encoder is added for lossless compression of various biomedical signals with a compression ratio of almost three. This design is successfully tested on a FPGA board. The VLSI architecture of this work contains 2. 68 -K gate counts and consumes power 496 -μW at 133 -MHz processing rate by using TSMC 0. 13 -μm CMOS process. Compared with the previous techniques, this work offers higher performance, more functions, and lower hardware cost than other micro controller designs...|$|R
50|$|In January 2006, 2Wire {{introduced}} the HomePortal intelligent Network <b>Interface</b> <b>Device</b> (iNID), an outdoor broadband residential gateway that supports VDSL2 and fiber to the premises (FTTP) connections.|$|R
