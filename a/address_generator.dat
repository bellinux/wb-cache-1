89|47|Public
50|$|The Agnus is the <b>Address</b> <b>Generator</b> Chip. Its main function, in chip area, is the RAM <b>Address</b> <b>Generator</b> and Register Address Encoder which handles all DMA addresses. The 8361 Agnus {{is made up}} of {{approximately}} 21000 transistors and contains DMA Channel Controllers. According to Jay Miner, original Agnus was fabricated in 5 µm manufacturing process like all OCS chipset. The Blitter and Copper are also contained here.|$|E
5000|$|Latency: The {{physical}} address {{is available from}} the MMU some time, perhaps a few cycles, after the virtual address {{is available from the}} <b>address</b> <b>generator.</b>|$|E
5000|$|GPU chipset: 3× Namco 02xx GFX Shifter (16-bit video shifter), 2× Namco 03xx Playfield Data Buffer, Namco 04xx Sprite <b>Address</b> <b>Generator,</b> Namco 09xx Sprite RAM Buffer ...|$|E
30|$|Fix the <b>address</b> <b>generators</b> complexity, by {{assuming}} {{the data are}} read from memory 4 samples by 4 samples.|$|R
40|$|In {{this paper}} we present our power {{exploration}} methodology for data dominated video applications. This formalized methodology {{is based on}} the observation that for this type of applications the power consumption is dominated by the memory architecture. Hence, the first exploration stage should be {{to come up with an}} optimized memory organisation. Other important observations are that the power consumption of the <b>address</b> <b>generators</b> is of the same magnitude as that of the data-paths and that the <b>address</b> <b>generators</b> are better optimized using specialized techniques. ...|$|R
40|$|This paper {{introduces}} the MoM- 3 (Map oriented Machine 3) architecture as an accelerator for applications {{with a large}} amount of 32 -bit arithmetic. The data manipulations in the inner loop of the application can be configured as a complex hardware operator into special fieldprogrammable devices. Several complex <b>address</b> <b>generators</b> are programmed to implement the control structures of the algorithm, so that data is accessed completely under hardware control, without requiring memory cycles for address computations. The MoM- 3 supports pipelining on statement and expression level. The compiler takes C as input language and produces the configuration code for the field-programmable devices and the <b>address</b> <b>generators</b> without further user interaction. Acceleration factors in the range of 12 to 62 have been obtained, compared to a high-end Sun SPARC workstation. 1...|$|R
50|$|The <b>address</b> <b>generator</b> {{supplied}} {{read and}} write addresses to a real time video memory, which {{can be thought of}} as evolution into the most flexible form of gating the address bits together to produce the video. While the video frame buffer is now present in every computer's graphics card, it has not carried forward a number of features of the early video synths. The <b>address</b> <b>generator</b> counts in a fixed rectangular pattern from the upper left hand corner of the screen, across each line, to the bottom. This discarded a whole technology of modifying the image by variations in the {{read and write}} addressing sequence provided by the hardware address generators as the image passed through the memory. Today, address based distortions are more often accomplished by blitter operations moving data in the memory, rather than changes in video hardware addressing patterns.|$|E
50|$|A type of Mac malware {{active in}} August 2013, Bitvanity posed as a vanity wallet <b>address</b> <b>generator</b> and stole {{addresses}} and private keys from other bitcoin client software. A different trojan for macOS, called CoinThief {{was reported in}} February 2014 {{to be responsible for}} multiple bitcoin thefts. The software was hidden in versions of some cryptocurrency apps on Download.com and MacUpdate.|$|E
50|$|IBM {{military}} division in Gaithersburg MD {{was interested in}} a new image exploitation system, and so Datacube developed a third generation exploitation system for them. This powerful system used an extremely high bandwidth image memory and an <b>address</b> <b>generator</b> by Erich Whitney, capable of 7x7 spatial transformation matrices, all calculated with double precision floats. A powerful new display system, XI was developed to display the results.|$|E
30|$|For lower {{computation}} cycle counts, Higher radix algorithm {{should be}} used. In practice, the radix- 2 algorithm throughput requires {{four times the}} number of cycles than the radix- 4 algorithm and radix- 4 algorithm requires four {{times the number of}} cycles of the radix- 8 algorithm. On the other hand, higher radix implementations have big butterflies thus they consume higher power and need more complex <b>address</b> <b>generators</b> to handle data flow.|$|R
50|$|Execution begins during stage nine. There are six {{execution}} units, two for integer, two for {{loads and}} stores, and two for floating-point. The two integer execution units are designated EXA and EXB. Both have an {{arithmetic logic unit}} (ALU) and a shift unit, but only EXA has multiply and divide units. Loads and stores are executed by two <b>address</b> <b>generators</b> (AGs) designated AGA and AGB. These are simple ALUs used to calculate virtual addresses.|$|R
50|$|The integer {{register}} file {{has nine}} read ports and four write ports. Four read ports supply operands {{to the two}} integer execution units (the branch unit was considered part of an integer unit). Another four read ports supply operands to the two <b>address</b> <b>generators.</b> Four ports are needed, rather than two, because of the base(register) + index(register) address style added in the MIPS IV ISA. The R8000 issues at most one integer store per cycle, and one final read port delivers the integer store data.|$|R
50|$|Integer {{functional}} units {{consisted of}} two integer units, a shift unit, a multiply-divide unit, and two <b>address</b> <b>generator</b> units. Multiply and divide instructions are executed in the multiply-divide unit, which is not pipelined. As a result, the latency for a multiply instruction is four cycles for 32-bit operands and six cycles for 64-bit. The latency for a divide instruction depends {{on the number of}} significant digits in the result and thus it varies from 21 to 73 cycles.|$|E
5000|$|The Motorola 6845 (commonly MC6845) is a video <b>address</b> <b>generator</b> first {{introduced}} by Motorola and used among {{others in the}} Videx VideoTerm display cards for the Apple II computers, in the MDA, HGC and CGA video adapters for the IBM PC, and in the Amstrad CPC and BBC Micro. Its functionality was duplicated and extended by custom circuits in the EGA and VGA PC video adapters. It {{is related to the}} later 6545 manufactured by MOS Technology (Commodore Semiconductor Group) and Rockwell (in two variations) and was cloned as the Hitachi HD46505 which was used in many Japanese computers from Sony, Sharp, Panasonic and Casio, and later was used in Videx's UltraTerm card).|$|E
5000|$|The Motorola 6845 (MC6845) is a video <b>address</b> <b>generator</b> first {{introduced}} by Motorola {{and used for}} the Amstrad CPC, and the BBC Micro. It was later used for almost all the early video adapters for the PC, such as the MDA, CGA and EGA adapters. The MDA and CGA use an actual Motorola chip, while the EGA has a custom IBM chipset of five LSI chips; one of those chips includes IBMs reimplementation of the CRTC, which operates like an MC6845 but differs in a few register addresses and functions {{so it is not}} 100% compatible. In all later VGA compatible adapters the function of the 6845 is still reproduced inside the video chip, so in a sense all current IBM PC compatible PCs still incorporate the logic of the 6845 CRTC.|$|E
40|$|This paper {{considers}} {{the design and}} implementation of an FPGA-based configurable co-processor for general-purpose computers. Topics include the selection of suitable FPGAs {{as well as their}} interconnection. Various architectures are considered, one of which is examined in detail. It is based on the concepts of providing complex <b>address</b> <b>generators</b> separate from the data path and the availability of multiple concurrently accessible memory banks. The hardware and software interfaces to the host and operating system are outlined before a practical implementation and problems suitable for implementation on the proposed co-processor are discussed...|$|R
40|$|In {{high-throughput}} real-time media processing systems, {{the communication}} between processing units is typically specified as multi-dimensional arrays. However, the imple-mentation of such applications is mostly FIFO-based. Map-ping array communication onto a FIFO-based implementa-tion requires complex <b>address</b> <b>generators</b> if the arrays have multiple dimensions. In this paper, {{we present a}} method for mapping array communication onto an efficient micro-computer architecture implementation based on FIFO com-munication via shared memory. A good hardware/software partitioning for the address generation is proposed. Fur-thermore, a complete design flow from specification to im-plementation is described. We illustrate this method with a design case: the communication of video frames between the frontend and the compressor in an MPEG encoder. 1...|$|R
40|$|This paper {{discusses}} about {{implementation of}} image steganographic system on Field Programmable Gate Array {{and the information}} hiding techniques in various images that are stored in the reconfigurable hardware and external memory. As a spatial domain steganography approach, Linear Feedback Shift Register (LFSR) method {{has been used in}} stego architecture to hide the information in the image. The LFSRs are utilized in this approach as <b>address</b> <b>generators.</b> Different LFSR arrangements using different polynomial expressions have been implemented at the hardware level for hiding the secret data. Altera Cyclone II FPGA has been used to implement stego architecture. Synthesis report, Total time taken for hiding information at hardware level, Performance of reconfigurable hardware unde...|$|R
50|$|Video synthesizers {{moved from}} analog to the {{precision}} control of digital. The first digital effects {{as exemplified by}} Stephen Beck's Video Weavings used digital oscillators optionally linked to horizontal, vertical, or frame resets to generate timing ramps. These ramps could be gated to create the video image itself and were responsible for its underlying geometric texture. Schier and Vasulka advanced {{the state of the}} art from address counters to programmable (microcodable) AMD Am2901 bit slice based address generators. On the data path, they used 74S181 arithmetic and logic units, previously thought of as a component for doing arithmetic instructions in minicomputers, to process real time video signals, creating new signals representing the sum, difference, AND, XOR, and so on, of two input signals. These two elements, the <b>address</b> <b>generator,</b> and the video data pipeline, recur as core features of digital video architecture.|$|E
5000|$|VGA is {{referred}} to as an [...] "Array" [...] instead of an [...] "adapter" [...] because it was implemented from the start as a single chipan application-specific integrated circuit (ASIC) which replaced both the Motorola 6845 video <b>address</b> <b>generator</b> as well as dozens of discrete logic chips that covered the full-length ISA boards of the MDA, CGA, and EGA. Its single-chip implementation allowed the VGA to be placed directly on a PC′s motherboard with a minimum of difficulty, since it only required video memory, timing crystals and an external RAMDAC. As a result, the first IBM PS/2 models were equipped with VGA on the motherboard, in contrast to all of the [...] "family one" [...] IBM PC desktop modelsthe PC, PC/XT, and PC ATwhich required a display adapter installed in a slot in order to connect a monitor.|$|E
50|$|The SPARC64 V fetches up {{to eight}} {{instructions}} from the instruction cache during the first stage and places them into a 48-entry instruction buffer. In the next stage, four instructions are taken from this buffer, decoded and issued to the appropriate reserve stations. The SPARC64 V has six reserve stations, two that serve the integer units, one for the address generators, two for the floating-point units, and one for branch instructions. Each integer, <b>address</b> <b>generator</b> and floating-point unit has an eight-entry reserve station. Each reserve station can dispatch an instruction to its execution unit. Which instruction is dispatched firstly depends on operand availability and then its age. Older instructions are given higher priority than newer ones. The reserve stations can dispatch instructions speculatively (speculative dispatch). That is, instructions can be dispatched to the execution units even when their operands are not yet available but will be when execution begins. During stage six, up to six instructions are dispatched.|$|E
40|$|The {{concept of}} a SOC {{platform}} architecture introduces the {{concept of a}} communication infrastructure. In the transaction-level a finite set of architecture components (memories, arithmetic units, <b>address</b> <b>generators,</b> caches, etc) communicate among each other over shared resources (buses). Until recently, modeling architectures required pin-level hardware descriptions, typically coded in RTL. Great effort is required to design and verify the models, and simulation at this level of detail is tediously slow. Transaction level modeling is the solution. Transaction level models (TLMs) effectively create an executable platform model that simulates orders of magnitude faster than a RTL model. In this paper, we present a SystemC 2. 0 TLM of the AMBA architecture developed by ARM, oriented to SOC platform architectures...|$|R
5000|$|What is {{regarded}} as the Blackfin [...] "core" [...] is contextually dependent. For some applications, the DSP features are central. Blackfin has two 16-bit hardware MACs, two 40-bit ALUs, and a 40-bit barrel shifter. This allows the processor to execute up to three instructions per clock cycle, depending on the level of optimization performed by the compiler or programmer. Two nested zero-overhead loops and four circular buffer DAGs (data <b>address</b> <b>generators)</b> are designed to assist in writing efficient code requiring fewer instructions. Other applications utilize the RISC features, which include memory protection, different operating modes (user, kernel), single-cycle opcodes, data and instruction caches, and instructions for bit test, byte, word, or integer accesses and a variety of on-chip peripherals.|$|R
40|$|This paper {{introduces}} the MoM- 3 as a reconfigurable accelerator for high performance computing {{at a moderate}} price. By using a new machine paradigm to trigger the operations in the MoM- 3, this accelerator is especially suited to scientific algorithms, where the hardware structure can be configured to match {{the structure of the}} algorithm. The MoM- 3 efficiently uses reconfigurable logic devices to provide a fine-grain parallelism, and multiple <b>address</b> <b>generators</b> to have the complete memory bandwidth free for data transfers (instead of fetching address computing instructions). Speed-up factors up to 82, compared to state-of-the-art workstations, are demonstrated by means of an Ising spin system simulation example. Adding the MoM- 3 as an accelerator allows to achieve supercomputer performance from a low-cost workstation. 1...|$|R
3000|$|... can run freely. FIFO {{control signals}} ensure that an <b>address</b> <b>generator</b> is paused {{in time to}} prevent it from {{overflowing}} the FIFO. The <b>address</b> <b>generator</b> for [...]...|$|E
30|$|The {{following}} sections describe our solution for a programmable channel interleaver architecture featuring a programmable vector <b>address</b> <b>generator</b> and a multibank memory with conflict resolution. First the top-level architecture is described, {{followed by a}} more {{detailed description of the}} vector <b>address</b> <b>generator</b> and the multibank memory.|$|E
40|$|Memory Built-In Self-Test (MBIST) {{has become}} a {{standard}} engineering practice. Its excellence is mainly determined by its fault detection capacity {{in relationship to the}} area overhead. In the world of MBIST, memory accesses have to be applied at-speed, using Back-to-Back memory cycles. Systems require large, high speed memories, while current technology exhibits a large spread in implementation parameters, resulting in speed-related faults. Their detection is mandatory in today’s industry and requires non-linear algorithms such as Gal Pat, Gal Row and Gal Column, and a special <b>Address</b> <b>Generator.</b> The MBIST <b>Address</b> <b>Generator</b> is mainly responsible for the fault detection capability, and has an important contribution to the area overhead. The <b>Address</b> <b>Generator</b> is a key MBIST component. In order to detect speed-related faults, the <b>Address</b> <b>Generator</b> has to generate a large set of address sequences, with Back-to-Back cycles and the appropriate address transitions. This paper analyzes the properties and performance aspects of several <b>Address</b> <b>Generator.</b> In addition, a novel very systematic, high speed, low-power and low-overhead implementation is presented which is based on an Up-counter and a set of multiplexors. </p...|$|E
40|$|The thesis work is {{conducted}} in the division of computer engineering at thedepartment of electrical engineering in Linköping University. During the thesiswork, a configurable Direct Memory Access (DMA) controller was designed andimplemented. The DMA controller runs at 200 MHz under 65 nm digital CMOS technology. The estimated gate count is 26595. The DMA controller has two <b>address</b> <b>generators</b> and can provide two clocksources. It can thus handle data read and write simultaneously. There are 16 channels built in the DMA controller, the data width can be 16 -bit, 32 -bit and 64 -bit. The DMA controller supports 2 D data access by configuring its intelligentlinking table. The DMA is designed for advanced DSP applications and it is notdedicated for cache which has a fixed priority...|$|R
40|$|The ADSP- 216 x Family {{processors}} are single-chip microcomputers␣ optimized ␣ for ␣ digital ␣ signal ␣ processing ␣ (DSP) {{and other}} high speed numeric processing applications. The ADSP- 216 x processors are all built upon a common core with ADSP- 2100. Each processor combines the core DSP architecture—computation units, data <b>address</b> <b>generators</b> and program sequencer—with {{features such as}} ␣ on-chip program ROM and data memory RAM, a programmable timer and two serial ports. The ADSP- 2165 /ADSP- 2166 also adds program memory and power-down mode. This data sheet describes the following ADSP- 216 x Family processors: ADSP- 2161 /ADSP- 2162 / ADSP- 2163 /ADSP- 2164 ADSP- 2165 /ADSP- 2166 Custom ROM-programmed DSPs: ROM-programmed ADSP- 216 x processors with power-down and larger on-chip memories (12 K Progra...|$|R
40|$|Memory {{is one of}} {{the basic}} {{computer}} components that is intensively accessed. Therefore, it {{is more likely to be}} affected by manufacturing faults rather than other componentsin the System on Chip (SoC). Memory Built-in Self Test (MBIST) is the most commonly used to test embedded memories. Although many algorithms were developed for MBIST, only few of these techniques focus on reducing the test power which plays an important role in evaluating the effectiveness of the test. This paper deals with reducing the switching activity in the address bus when testing SRAM of personal devices. The MBIST architecture was programmed using VHDL and then five <b>address</b> <b>generators</b> were simulated using Xilinx ISE tools and compared with each others in terms of their switching activity which is proportional tothe test power...|$|R
40|$|Multimedia {{applications}} {{are characterized by}} {{a large number of}} data accesses and complex array index manipulations. The built-in address decoder in the RAM memory model commonly used by most memory synthesis tools, unnecessarily restricts the freedom of <b>address</b> <b>generator</b> synthesis. Therefore a memory model in which the address decoder is decoupled from the memory cell array is proposed. In order to demonstrate the benefits and limitations of this alternative memory model, synthesis results for a Shift Register based <b>Address</b> <b>Generator</b> that does not require address decoding are compared to those for a counter-based <b>address</b> <b>generator</b> that requires address decoding. Results show that delay can be nearly halved at the expense of increased area...|$|E
40|$|Abstract — This paper {{presents}} multiple LUT cascade {{to realize}} an <b>address</b> <b>generator</b> that produces unique addresses ranging from 1 to k for k distinct input vectors. We implemented six kinds of address generators using multiple LUT cascades, Xilinx’s CAM (Xilinx IP core), and an <b>address</b> <b>generator</b> using registers and gates on Xilinx Spartan- 3 FPGAs. One of our implementations has 76 % more throughput, 29. 5 times more throughput/slice, and 1. 35 times more throughput/memory than Xilinx’s CAM. I...|$|E
40|$|Wireless {{communication}} {{is one of}} the most vibrant research areas in the communication field today. WLAN and WiMAX are emerging standards for wireless broadband communication system. OFDM is multiplexing technique used in above standards as it reduces inter symbol interference and multipath fading over wireless channel. Standards mentioned above can be implemented efficiently in FPGA. Interleaver plays a vital role in improving the performance of FEC codes in terms of Bit Error Rate over wireless channel. The complete Interleaver has been divided into two sub modules; <b>address</b> <b>generator</b> and interleaved memory. The proposed work presents that a modification in the FSM of <b>address</b> <b>generator</b> for WiMAX Interleaver provides a considerable improvement in terms of logic cells and slice flip flops used. Moreover using this modified <b>address</b> <b>generator</b> an efficient multimode WiMAX Interleaver has been implemented using VHDL. The simulation results and circuit parameters are also presented...|$|E
50|$|The COMX {{used the}} RCA CDP1869 and CDP1870 Video Interface System (VIS), {{consisting}} of the CDP1869 <b>address</b> and sound <b>generator</b> and the CDP1870 colour video generator.|$|R
40|$|Abstract [...] A CMOS PWM imager which realizes block {{summation}} and 2 D {{projection of}} a thresholded image, {{in addition to}} rowparallel PWM readout with gray scale, is reported. An imager including 56 x 56 pixels, an <b>address</b> signal <b>generator,</b> and a signal processing circuit is fabricated in a 6 mm x 6 mm chip with a 0. 8 µm CMOS technology. I...|$|R
30|$|Memory {{is divided}} into two 286 word dual-port banks (24 -bit). Memory size is {{dominated}} by the maximum supported correlation length of 256 in addition to the free space needed to store any internal outputs. The choice of the maximum correlation length was based on the required performance in 802.16 e and 3 GPP-LTE release 8. Inputs to the memory system is connected to a Memory Input Generator in Figure 3, which is controlled by the instruction decoder. Memory could accept inputs from the external ports, Register File 2, main CU output or the memory itself in a MOV operation. Memory controller handles the write operations and prevent any racing conditions. The two banks are running on the same operating frequency of the core unit. No special addressing modes are required, and hence, <b>address</b> <b>generators</b> are basically counters. Time sharing between different tasks running on the processor allowed further optimization in the memory system by increasing the memory reuse option.|$|R
