93|62|Public
50|$|In 2002 Kelman became {{involved}} in the railway sector and launched SIGNET, an <b>automatic</b> <b>reconfiguration</b> system for the power supplied to the rail signalling network.|$|E
50|$|Such {{solutions}} {{may apply}} concepts of RTLS and WPAN, wireless LAN or DECT, with results in proprietary terms of floor plans or room numbers. Local systems degrade as {{distance from the}} locality increases. Applications include the <b>automatic</b> <b>reconfiguration</b> of a computing device to suit the location {{in which it is}} currently being used.|$|E
50|$|Many {{providers}} offer {{commercial or}} free Dynamic DNS service for this scenario. The <b>automatic</b> <b>reconfiguration</b> is generally {{implemented in the}} user's router or computer, which runs software to update the DDNS service. The communication between the user's equipment and the provider is not standardized, although a few standard web-based methods of updating have emerged over time.|$|E
40|$|Ubiquitous {{computing}} environment includes wireless networks, autonomic networked systems and devices with heterogeneous standards and protocols for different contexts and situations. Autonomic networked systems require mechanisms for <b>automatic</b> on-the-fly <b>reconfigurations</b> in their protocol stacks {{to be able}} to operate in different situations and contexts. <b>Automatic</b> <b>reconfigurations</b> allow the system to continue its normal operation without any need for human intervention. Since every protocol in a protocol stack has at least one peer protocol in another system, a dynamic reconfiguration of a protocol may raise the need for a reconfiguration in the peer stack. Depending on the reconfiguration type, the reconfiguration maybe carried out in a single or in both peer systems. For an assured dynamic (run-time) reconfiguration of a protocol, the execution of the protocol component is stopped in a safe state, a new protocol is initialized, and stacks switch to the new protocol at the same time. This paper proposes a protocol stack framework to support <b>automatic</b> and assured <b>reconfigurations</b> of protocol components. Our evaluation and performance measurement show the feasibility of <b>automatic</b> <b>reconfigurations</b> and an acceptable level of transparency in dynamic reconfigurations...|$|R
40|$|The paper {{deals with}} Reconfigurable Uniprocessor Real-Time Systems to be classically {{implemented}} by different tasks that we suppose independent, synchronous and periodic. Two forms of <b>automatic</b> <b>reconfigurations</b> {{are assumed to}} be applied at run-time: Addition-Remove of tasks or just modifications of their temporal parameters: WCET and/or Periods. We define an Intelligent Agent that automatically checks the system’s feasibility after any reconfiguration scenario to verify if all tasks meet the required deadlines. It provides otherwise for users new temporal parameters of tasks when deadlines are violated. The tool RT − Reconfiguration is developed to support the useful agent’s services. ...|$|R
40|$|Generally speaking, the {{virtualization}} technique allows {{to maximize}} the exploitation of available physical resources by abstracting from them a set of virtual resources that users independently own. This paper proposes to apply the virtualization technique to the built space. For this, we present a case study called on-demand room, where the same physical resources (space, furniture, appliances and networks) are dynamically and transparently reallocated to different apartments. Thanks to implicit interaction and <b>automatic</b> <b>reconfigurations,</b> inhabitants have the impression of owning a bigger surface than the physically available one. We present a demonstrator of on-demand room that was realized leveraging a large-scale immersive virtual reality platform and provide some perspectives for the generalization of the virtualization approach...|$|R
50|$|Location {{awareness}} enables {{new applications}} for ubiquitous computing systems and mobile phones. Such applications include the <b>automatic</b> <b>reconfiguration</b> of a computing device {{to suit the}} location {{in which it is}} currently being used (examples include ControlPlane and Locamatic), or publishing a user's location to appropriate members of a social network, and allowing retailers to publish special offers to potential customers who are near to the retailers. Allegedly, individuals gain self confidence with confirmation of current whereabouts.|$|E
40|$|Autonet is a switch-based {{local area}} network using 100 Mbit/s {{full-duplex}} point-to-point links. Crossbar switches are interconnected to other switches and to host controllers in an arbitrary pattern. Switch hardware uses the destination address in each packet to determine the proper outgoing link for {{the next step in}} the path from source to destination. Autonet automatically recalculates these forwarding paths in response to failures and additions of network components. This <b>automatic</b> <b>reconfiguration</b> allows the network to continue normal operation without need of human intervention. Reconfiguration occurs quickly enough that higher-level protocols are not disrupted. This paper describes the fault monitoring and topology acquisition mechanisms that are central to <b>automatic</b> <b>reconfiguration</b> in Autonet...|$|E
40|$|Methods of <b>automatic</b> <b>reconfiguration</b> for data-flow {{systems with}} {{different}} instruction generation environment configuration are proposed. Possibility to fix errors caused by computation unit failure without additional instruction use at hardware level is shown. Computation process is active {{until there is}} at least one operable computation unit. ???????????? ?????? ?????????????? ?????????????? ????????? ?????????????? ?????? ? ????????? ???????????? ???? ???????????? ??????. ???????? ??????????? ??????????? ??????, ????????? ??????? ?????????????? ???????, ?? ?????????? ?????? ??? ??????????????? ??????? ??????. ??????? ?????????? ????????????, ???? ? ??????? ???????? ???? ?? ???? ??????????????? ?????????????? ??????...|$|E
40|$|This {{research}} work deals with Reconfigurable Uniprocessor embedded Real-Time Systems to be classically implemented by different OS tasks that we suppose independent, synchronous and periodic {{in order to}} meet functional and temporal properties described in user requirements. We define in the book chapter two forms of <b>automatic</b> <b>reconfigurations</b> which are assumed to be applied at run-time: Addition-Remove of tasks or just modifications of their temporal parameters: WCET and/or Periods. We define a new semantic of the reconfiguration where a crucial criterion to consider is the automatic improvement of the system's feasibility at run-time by using an Intelligent Agent that automatically checks the system's feasibility after any reconfiguration scenario to verify if all tasks meet the required deadlines. Indeed, if a reconfiguration scenario is applied at run-time, then the Intelligent Agent provides otherwise for users to remove some tasks, to change temporal parameters of tasks that violate corresponding constraints by new ones, changing the system‟s execution model to be assumed as only one task that should support all required functionalities or to take a hybrid real-time scheduling approach that combines the rate monotonic scheduling algorithm RM and the Earliest Deadline First scheduling algorithm EDF. To handle all possible reconfiguration solutions, we propose an agentbased architecture that applies <b>automatic</b> <b>reconfigurations</b> in order to re-obtain the system‟s feasibility and to satisfy user requirements. Therefore, we developed the tool RT-Reconfiguration to support these contributions that we apply on the running example system and we apply the Real-Time Simulator, Cheddar to check the whole system behavior and to evaluate the performance of the algorithm (detailed descriptions are available at the website...|$|R
40|$|Intelligent Virtual Environments {{integrate}} AI techniques with 3 D real-time environments. As such, {{they can}} support interactive problem solving, provided the underlying AI techniques can produce solutions within {{a time frame}} matching that of user interaction. In this paper, we describe an intelligent virtual environment based on Constraint Logic Programming (CLP), integrated in a real-time 3 D graphic environment. We have developed an event-based approach through which user interaction can be converted in real-time into appropriate solver queries which are then translated back into <b>automatic</b> <b>reconfigurations</b> of the Virtual Environment (VE). Additionally, this framework supports the interactive exploration of the solution space in which alternative solutions (configurations) can be found. We demonstrate the system behaviour on a configuration example. This example illustrates how solutions can be interactively refined by the user through direct manipulation of objects in the VE and how the interactive search of alternative solutions in the VE is supported by these type of systems...|$|R
40|$|In this {{doctoral}} dissertation, {{the author}} presents the theoretical foundation, {{the analysis and}} design of analog and RF circuits, the chip level implementation, and the experimental validation pertaining to a new radio frequency integrated circuit (RFIC) power amplifier (PA) architecture that is intended for wireless portable transceivers. A method called Gated Envelope Feedback is proposed to allow the <b>automatic</b> hardware <b>reconfiguration</b> of a stand-alone RFIC PA in multiple states for power efficiency improvement purposes. The method uses self-operating and fully integrated circuitry comprising RF power detection, switching and sequential logic, and RF envelope feedback {{in conjunction with a}} hardware gating function for triggering and activating current reduction mechanisms {{as a function of the}} transmitted RF power level. Because of the critical role that RFIC PA components occupy in modern wireless transceivers, and given the major impact that these components have on the overall RF performances and energy consumption in wireless transceivers, very significant benefits stem from the underlying innovations. The method has been validated through the successful design of a 1. 88 GHz COMA RFIC PA with <b>automatic</b> hardware <b>reconfiguration</b> capability, using an industry renowned state-of-the-art GaAs HBT semiconductor process developed and owned by Skyworks Solutions, Inc., USA. The circuit techniques that have enabled the successful and full on-chip embodiment of the technique are analyzed in details. The IC implementation is discussed, and experimental results showing significant current reduction upon <b>automatic</b> hardware <b>reconfiguration,</b> gain regulation performances, and compliance with the stringent linearity requirements for COMA transmission demonstrate that the gated envelope feedback method is a viable and promising approach to <b>automatic</b> hardware <b>reconfiguration</b> of RFIC PA's for current reduction purposes. Moreover, in regard to on-chip integration of advanced PA control functions, it is demonstrated that the method is better positioning GaAs HBT technologies, which are known to offer very competitive RF performances but inherently have limited integration capabilities. Finally, an analytical approach for the evaluation of inter-modulation distortion (IMD) in envelope feedback architectures is introduced, and the proposed design equations and methodology for IMD analysis may prove very helpful for theoretical analyses, for simulation tasks, and for experimental work...|$|R
40|$|The {{possible}} implementation {{was considered}} and {{the analysis of}} fault tolerant characteristics was performed for the stream computing system implemented by the technology system-on-chip. It is shown that application of the method of <b>automatic</b> <b>reconfiguration</b> allows to recovery the system {{by the failure of}} computational modules without significantly increase of the computation time...|$|E
40|$|Design of {{gracefully}} degrading systems, where functionality {{is gradually}} reduced {{in the face}} of faults, has traditionally been a very difficult and error-prone task. General approaches to graceful degradation are typically limited to re-implementation of the system for a number of pre-designated fallback configurations. We describe an architecture-based approach to gracefully degrading systems based upon Product Family Architectures (PFAs) combined with <b>automatic</b> <b>reconfiguration...</b>|$|E
40|$|Part 4 : Self-organizing Manufacturing SystemsInternational audienceCompanies are {{nowadays}} {{placed in}} very complex and dynamic environments, making their competitiveness mandatory. This competitiveness {{can also be}} achieved through the reconfiguration of systems’ network. In this paper, high level of self-organization of service-oriented multi-agent systems is explored, aiming to achieve more trustworthy and <b>automatic</b> <b>reconfiguration</b> processes, in dynamic and open environments. The correct self-organization model directly impacts the success of agents’ behaviours to actively change or create new appropriate services dynamically. This paper advocates on the influence, in a distributed and cooperative way, of risk management, similarities and incentives {{to work together in}} order to speed up the self-organization agent’s network. By leveraging the SOA and MAS benefits it is possible to reduce time, effort and money. Based on identified benefits and needs, several research leads for my thesis plan are here proposed towards the realization of self-organization capabilities aiming to accomplish more trustworthy and <b>automatic</b> <b>reconfiguration</b> processes, in volatile and open environments...|$|E
40|$|This paper {{describes}} {{the use of}} Bluetooth and Java-Based technologies in developing a multi-player mobile game in ubiquitous computing, which strongly depends on <b>automatic</b> contextual <b>reconfiguration</b> and context-triggered actions. Our investigation focuses on an extended form of ubiquitous computing which game software developers utilize to develop games for players. We have developed an experimental ubiquitous computing application that provides context-aware services to game server and game players in a mobile distributed computing system. Obviously, contextual services provide useful information in a context-aware system. However, designing a context-aware game is still a daunting task and much theoretical and practical research {{remains to be done}} to reach the ubiquitous computing era. In this paper, we present the overall architecture and discuss, in detail, the implementation steps taken to create a Bluetooth and Java based context-aware game. We develop a multi-player game server and prepare the client and server codes in ubiquitous computing, providing adaptive routines to handle connection information requests, logging and context formatting and delivery for <b>automatic</b> contextual <b>reconfiguration</b> and context-triggered actions...|$|R
40|$|Models {{can help}} {{software}} engineers to reason about design-time decisions before implementing a system. This paper focuses on models {{that deal with}} non-functional prop-erties, such as reliability and performance. To build such models, one must rely on numerical estimates of various pa-rameters provided by domain experts or extracted by other similar systems. Unfortunately, estimates are seldom cor-rect. In addition, in dynamic environments, the value of pa-rameters may change over time. We discuss an approach that addresses these issues by keeping models alive at run time and feeding a Bayesian estimator with data collected from the running system, which produces updated param-eters. The updated model provides an increasingly bet-ter representation of the system. By analyzing the updated model at run time, {{it is possible to}} detect or predict if a de-sired property is, or will be, violated by the running imple-mentation. Requirement violations may trigger <b>automatic</b> <b>reconfigurations</b> or recovery actions aimed at guarantee-ing the desired goals. We illustrate a working framework supporting our methodology and apply it to an example in which a Web service orchestrated composition is modeled through a Discrete Time Markov Chain. Numerical simula-tions show the effectiveness of the approach. 1...|$|R
30|$|Microgrids with an {{increased}} penetration of renewable energy resources and conventional generation units [70] are proliferating. Their advanced technologies and automation schemes, such as <b>automatic</b> network <b>reconfiguration,</b> distribution automation, a high penetration of renewable energy resources, and smart grid features, bring about new challenges to their modeling. In contrast, classical power system modeling (i.e., portions of the national grid), has traditionally been an aggregation of conventional technologies that could be modeled using existing models from the program libraries of various simulation tools.|$|R
40|$|Fuzzy Logic {{has proved}} to be a very {{powerful}} technique in the discipline of system control. A Fuzzy Logic Controller is defined by a collection of fuzzy if-then rules and a set of membership functions characterizing the linguistic terms associated with the inputs and output of the Fuzzy Controller. This paper discusses the use of a Evolvable Hardware (EHW) platform in the synthesis of analog electronic circuits for Fuzzy Logic Controllers. The EHW analog platform is a Field Programmable Analog Array (FPAA). FPAAs constitute the state of the art in the technology of reconfigurable platforms. These devices will become the building blocks of a forthcoming class of hardware, with the important features of selfadaptation and self-repairing, through <b>automatic</b> <b>reconfiguration.</b> <b>Automatic</b> <b>reconfiguration</b> of FPAAs has be driven by Evolutionary Computation techniques such as Genetic Algorithms. In this article we propose the implementation of Fuzzy Logic Controllers, based on building blocks, developed on an FPAA, and present an intrinsic evolution example of a building block: a simple membership function. 1...|$|E
40|$|The multi-Agent system {{designed}} based on <b>automatic</b> <b>reconfiguration</b> principles was programmed {{as a set}} of AgentSpeak codes in which work and cooperate inside a common simulated distribution grid environment. Creating the application meant programming the agents on the one side, including the actions logic control to be executed relying on the environment changes, {{and on the other side}} the environment itself. That stated, the environment notion was solely based on the chosen distribution grid concept and explored according to the proposed problematic...|$|E
40|$|Design of {{gracefully}} degrading systems, where functionality {{is gradually}} reduced {{in the face}} of faults, has traditionally been a very difficult and error-prone task. General approaches to graceful degradation are typically limited to re-implementation of the system for a number of pre-designated fallback configurations. We describe an architecture-based approach to gracefully degrading systems based upon Product Family Architectures (PFAs) combined with <b>automatic</b> <b>reconfiguration.</b> A PFA is a region of a system design space populated by different, but related, products sharing similar architectures and components. Each system instance within a PFA yields a distinct price/performance point, and represents a different model in the product family. The unifying mechanism that joins PFAs and gracefully degrading systems is <b>automatic</b> <b>reconfiguration</b> – {{in the face of}} a fault, the system reconfigures to a different PFA configuration point that optimizes the functionality available with the remaining resources. In this process, the system sheds some of the non-critical functions that make up such a large percentage of modern embedded systems. System designers can also exploit a reconfiguration mechanism to provide graceful upgrade and unique logistical benefits. The RoSES (Robust Self-configuring Embedded Systems) project employs such a reconfiguration approach, seeking to create a revolutionary means to build self-customizing, distributed, embedded control systems...|$|E
40|$|Allocating {{resources}} {{in a web}} server cluster is usually performed nowadays by a cluster administrator. However, due to {{the dynamics of the}} Internet as far as the use of resources is concerned, such task may be considered critical and inefficient if accomplished manually. This paper presents an architecture that performs an <b>automatic</b> dynamic <b>reconfiguration</b> using a multi agent system. The conception, specification and implementation of the architecture are presented. Moreover, several experimental results prove the efficiency and the interest of the proposal. 1...|$|R
40|$|In {{this paper}} we {{address the issue of}} {{automating}} systems management. Currently, any changes made in the configuration settings of the IT infrastructure in an enterprise are performed manually. To enable <b>automatic</b> system <b>reconfiguration</b> we propose the use of Web Service-enabled enterprise registries in combination with Web Service-based processes. Web Service-based processes define complex sequences of tasks and thus could implement complex reconfiguration rules. We call these composite Web services "systems management rules". Creating systems management rules can be automated using templates...|$|R
40|$|Current grid-aware {{applications}} are implemented {{on top of}} low-level libraries by developers who are experts on grid middleware architecture. This approach can hardly support the additional complexity of QoS control in real applications. We discuss a novel approach used in the ASSIST programming environment to implement/guarantee user provided QoS contracts in a transparent and effective way. Our approach {{is based on the}} implementation of <b>automatic</b> run-time <b>reconfiguration</b> of ASSIST application executions triggered by mismatch between the user provided QoS contract and the actual performance values achieved...|$|R
40|$|Abstract — The <b>automatic</b> <b>reconfiguration</b> of {{electric}} shipboard power systems {{is an important}} step toward improved fightthrough and self-healing capabilities of all-electric naval warships. The authors have presented a distributed algorithm for autonomous reconfiguration within an energy management framework using an agent based approach. In the previous work, a blackboard architecture was used as globally shared memory structure for detection of algorithm termination. This paper presents alternative schemes for the detection of global properties, and specifically, detection of algorithm termination. Keywords—autonomous agent-based reconfiguration, distributed algorithms, shipboard electric power distribution systems, termination detection I...|$|E
40|$|Current Wireless Sensor Networks (WSN) use fixed layered architectures, {{that can}} be {{modified}} only at compile time. Using a non-layered architecture, which allows dynamic loading of modules and <b>automatic</b> <b>reconfiguration</b> {{to adapt to the}} surrounding environment was believed to be too resource consuming to be employed. We have created a so-called data centric architecture and developed a new operating system (DCOS), to support it. As we will show in this paper, the new architecture and operating system are good candidates for WSNs, allowing flexibility in the configuration and exploitation of the sensor network...|$|E
40|$|Technical {{systems are}} {{becoming}} more and more complex due to increasing demands, nevertheless they have to be of high reliability and good maintenability. This is especially true for multi process computer systems. Availability and reliability cannot be reached by means of perfection, fault-tolerance has to be added. With the RDC-Process Computer System a fault-tolerant system is presented, which allows full performance of all computer components (with different tasks) being in the normal state and with high system availability by means of dynamical functional redundancy, fault diagnosis (error detection and error location) and <b>automatic</b> <b>reconfiguration...</b>|$|E
40|$|The {{increasing}} use {{of large}} embedded memories in Systems-on-Chips requires <b>automatic</b> memory <b>reconfiguration</b> to avoid the need for external accessibility. In this work, effective diagnostic memory tests of linear order O(N) are proposed that enable memory reconfiguration, and their diagnostic capabilities are analyzed. In particular, these tests allow single-cell faults to be distinguished from multiplecell faults, such as coupling faults. In contrast to conventional O(N) tests, all cells involved in a fault are detected and localized, which allows complete reconfiguration using minimal-area BIST hardware that compares favorably with other BIST designs...|$|R
40|$|This {{research}} work deals with Reconfigurable Uniprocessor embedded Real-Time Systems to be classically implemented by different OS tasks that we suppose independent, asynchronous and periodic {{in order to}} meet functional and temporal properties described in user requirements. We define in the book chapter a schedulability algorithm for preemptable, asynchronous and periodic reconfigurable task systems with arbitrary relative deadlines, scheduled on a uniprocessor by an optimal scheduling algorithm based on the EDF principles and on the dynamic reconfiguration. Two forms of <b>automatic</b> <b>reconfigurations</b> which are assumed to be applied at run-time: Addition-Remove of tasks or just modifications of their temporal parameters: WCET and/or Periods. Nevertheless, when such a scenario is applied to save the system at the occurrence of hardwaresoftware faults, or to improve its performance, some real-time properties can be violated. We define a new semantic of the reconfiguration where a crucial criterion to consider is the automatic improvement of the system's feasibility at run-time by using an Intelligent Agent that automatically checks the system's feasibility after any reconfiguration scenario to verify if all tasks meet the required deadlines. Indeed, if a reconfiguration scenario is applied at run-time, then the Intelligent Agent dynamically provides otherwise precious technical solutions for users to remove some tasks according to predefined heuristic (based on soft or hard task), or b...|$|R
40|$|Recent {{trends in}} mobile and {{ubiquitous}} computing have created new requirements for <b>automatic</b> configuration and <b>reconfiguration</b> of network devices. Furthermore, the exploding deployment of networked digital devices in diverse “real world ” environments — including “hostile ” environments such as homes — {{has increased the}} need to simplify network administration for all networks. I...|$|R
40|$|Abstract — As home {{networks}} {{become more}} complex and dynamic, {{it is crucial to}} support seamless interoperability through <b>automatic</b> <b>reconfiguration</b> and robustness through the efficient handling of faults. This paper presents an adaptive middleware that provides an adaptive autonomic configuration for the heterogeneous home networks and an autonomous fault management that includes fault diagnosis and recovery from unexpected faults such as device plug-outs, network link failures, service failures, and other such incidents. The proposed adaptive middleware is based on the universal middleware bridge (UMB) to guarantee interoperability and robustness in the middleware layer appropriate to heterogeneous home networks. 1...|$|E
40|$|Wireless sensor {{networks}} dynamic runtime configuration Abstract — Current Wireless Sensor Networks (WSN) use fixed layered architectures, {{that can}} be modified only at compile time. Using a non-layered architecture, which allows dynamic loading of modules and <b>automatic</b> <b>reconfiguration</b> {{to adapt to the}} surrounding environment was believed to be too resource consuming to be employed. We have created a so-called data centric architecture and developed a new operating system (DCOS), to support it. As we will show in this paper, the new architecture and operating system are good candidates for WSNs, allowing flexibility in the configuration and exploitation of the sensor network...|$|E
40|$|Mixed {{reality is}} one of the most {{important}} techniques to achieve the vision of ubiquitous computing. Tradi-tional middleware for mixed reality provide high level ab-straction to hide complex algorithms for analyzing video images, but applications programmers still need to take into account distribution and <b>automatic</b> <b>reconfiguration</b> when developing mixed reality applications for ubiquitous computing. Our middleware infrastructure hides all the complex-ities to build mixed reality applications for ubiquitous computing. Therefore, the development does not require advanced skills for ubiquitous computing. The paper de-scribes the design and implementation of our infrastruc-ture, and presents some scenarios and the current status showing its effectiveness. ...|$|E
30|$|Another {{motivation}} for WAP at the distribution level is {{its role as}} an enabler for adaptive control, e.g. <b>automatic</b> network <b>reconfiguration</b> that reduces the frequency and length of customer interruptions, manages circuit loading, and limits the fault level [57]. Adaptive control of the distribution network is becoming increasingly necessary to reduce barriers to DG, make best use of the installed DG and through this help to deliver a low carbon future. This adaptive control and other measures form part of a move toward the creation of active distribution networks [64] and existing protection is not compatible with many of these adaptive control measures [57].|$|R
40|$|Computing environments of {{the future}} should enable mobile users to take full {{advantage}} of the computing capabilities available at each location, while allowing them to focus on their real tasks, rather than being distracted by dealing with the configuration and reconfiguration of computer systems to support those tasks. The Aura infrastructure performs <b>automatic</b> configuration and <b>reconfiguration</b> of Ubicomp environments, according to the user's task and intent...|$|R
30|$|Zheng and Lyu. ([2010 a]) propose an {{adaptive}} fault tolerance strategy for <b>automatic</b> system <b>reconfiguration</b> at runtime {{based on the}} subjective user requirements and objective QoS information of the target Web services. Users are encouraged to contribute their individually-obtained QoS information of the target Web services by employing user-participation and collaboration. In this way, this solution is able to collect a large quantity of QoS data from the users located in different geographical locations under various network conditions. This data is used to objectively evaluate the target Web services. This solution supports various software fault tolerance techniques and adjusts the optimal fault tolerance strategy based on the overall QoS information and the individually recorded QoS information of the variant services.|$|R
