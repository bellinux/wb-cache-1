0|5887|Public
30|$|The hydride {{electrodes}} {{were prepared}} by mixing 0.3  g alloy powder (200 mesh) with 1.2  g carbonyl nickel powder. The mixture was then cold-pressed under a pressure of 20  MPa into a pallet of 15  mm {{in diameter and}} 1  mm in thickness. The prepared pellet, together with a Ni strip soldered on the surface, was inserted into folded current collector Ni foam, and the rims of the wrapped pellet were firmly spot-welded to keep the electrochemical contact well between the pellet, Ni strip, and Ni foam. The electrodes were immersed in 6  M KOH solution for 24  h to keep wet thoroughly before the tests. Electrochemical measurements were performed at 303  K in a standard three-electrode open cell consisting of a working electrode (hydride electrode), a sintered Ni(OH) 2 /NiOOH counter electrode with excess capacity, and a Hg/HgO reference electrode immersed in 6  M KOH electrolyte. The emphasis of these measurements was on the electrochemical properties of the working electrode, and thus, the discharge capacity of the counter electrode {{was designed to be}} much higher than that of the hydride electrode. Electrochemical tests were carried out on DC- 5 <b>automatic</b> battery <b>testing</b> <b>instrument.</b> Each electrode was charged at 100  mA g− 1 for 5  h followed by a 15  min break, and then discharged at 60  mA g− 1 to a cut-off cell voltage of −[*] 0.5  V versus the Hg/HgO reference electrode.|$|R
5000|$|<b>Automatic</b> <b>test</b> {{equipment}} or automated test equipment (ATE) is any apparatus that performs tests on a device, {{known as the}} device under test (DUT), equipment under test (EUT) or unit under test (UUT), using automation to quickly perform measurements and evaluate the test results. An ATE can be a simple computer-controlled digital multimeter, or a complicated system containing dozens of complex <b>test</b> <b>instruments</b> (real or simulated electronic test equipment) capable of automatically testing and diagnosing faults in sophisticated electronic packaged parts or on wafer testing, including system on chips and integrated circuits.|$|R
40|$|Abstract: This paper {{introduces}} foreign airborne guiding ammunition <b>automatic</b> <b>testing</b> equipment development {{history and}} current situation, analyzed our Army airborne guiding ammunition <b>automatic</b> <b>testing</b> equipment development and existing problems, putting forward my Army Airborne guiding ammunition testing equipment development proposal. Foreign airborne guiding ammunition <b>automatic</b> <b>testing</b> equipment development The {{first generation of}} professional <b>automatic</b> <b>testing</b> equipment. Special type weapon equipment system is the early <b>automatic</b> <b>testing</b> equipment, {{some parts of the}} system still is used. This kind system is from the artificial <b>testing</b> to <b>automatic</b> <b>testing</b> an important step., it is superior to manual testing in the test function, performance, efficiency. The main disadvantages is single function, low standardization degree. The Second generation <b>instrument</b> block type <b>automatic</b> <b>testing</b> equipment. The second generation <b>automatic</b> <b>testing</b> equipment build up system based on standard interface bus, This system is convenient to set up, building characteristics make change, increase or decrease in testing contents become very flexible, equipment resources reuse. The main disadvantage is low bus transfer rate, it is difficult to form the basis for the bus speed, large data throughput automati...|$|R
40|$|Abstract − Methods {{enabling}} {{a determination}} of errors εI and δI for a high transformation ratio difference between a standard and <b>tested</b> <b>instrument</b> current transformers (ICT) are described in this article. A widespread method uses an <b>automatic</b> transformer <b>test</b> set for the measurement of a difference between a standard and tested ICT. A method transforming secondary currents to voltages and an indirect method using error measurement from magnetizing current are also described...|$|R
40|$|<b>Automatic</b> <b>test</b> case {{generation}} {{is a process}} that starts with text based functional requirements which are converted to a formal system requirements model. Once the formal system requirements model is created the <b>automatic</b> <b>test</b> case generation software creates a set of test scenarios that will verify that the requirements are all met. The <b>automatic</b> <b>test</b> case generation software accomplishes the conversion in a four step process: create base scenarios, identify unverified requirements, enhance scenarios to cover all requirements and allow black box testing, and then combine the scenarios into a single scenario tree. The <b>automatic</b> <b>test</b> case generation system outputs a set of scenarios by walking the final scenario tree. This dissertation expands on <b>automatic</b> <b>test</b> case generation for embedded systems in two major ways. The first is to extend functional <b>automatic</b> <b>test</b> case generation to allow for time based requirements as first class objects. The second is to use the <b>automatic</b> <b>test</b> case generation system to enable system partitioning decisions. The addition of time based requirements to the <b>automatic</b> <b>test</b> case generation system allows more complex systems to be developed. By providing a partitioning recommendation based on the test cases generated from the system requirements, the scope and capabilities of a single designer can be expanded to more complex systems. The resulting upgrades to the theory of <b>automatic</b> <b>test</b> case generation could be applied to the existing tools or incorporated in modern UML/SysML based design tools...|$|R
50|$|<b>Automatic</b> <b>test</b> equipment.|$|R
40|$|Abstract—To <b>automatic</b> <b>test</b> the {{function}} {{and performance of}} an airborne radar, changeable test adapter is adopted to implement the hardware and software design of the <b>automatic</b> <b>test</b> set of the antenna, transceiver and indicator of the radar based on AT 89 C 52. Problems such as t {{the different types of}} interfaces, the various kinds of signals and the test of microwave signal are solved successfully and the objectives of resource sharing and <b>automatic</b> <b>test</b> are realized. The test software is designed by modular structure, {{and with the help of}} <b>automatic</b> <b>test</b> set hardware, the required test items of the radar system are experimented and the test process control succeeded. Experiment results show that the <b>automatic</b> <b>test</b> set performs steadily and the results meet the requirements of the airborne radar. The set has the advantages of intelligent, manageable and reducing artificial errors. It provides effectiv...|$|R
40|$|Abstract. By {{analyzing}} the current problems in equipment <b>automatic</b> <b>test</b> system, {{we describe the}} concept, the basic working principle and advantages of service-oriented architecture (SOA), then introduce the web service architecture and the standards of establishing service-oriented architecture. The architecture model of <b>automatic</b> <b>test</b> system on SOA-based equipment was designed, and was used to realize the unified description of equipment <b>automatic</b> <b>test</b> (including fault diagnosis) information. This effectively improves the equipment's capability in performance detection and maintenance support...|$|R
40|$|We {{report on}} the <b>automatic</b> <b>testing</b> of the control {{software}} of the Oosterschelde kering, a storm surge barrier. The <b>automatic</b> <b>testing</b> includes <b>automatic</b> <b>test</b> case derivation and <b>automatic</b> <b>test</b> execution. This project is a joint effort of CMG and the computer science group "Formal Methods and Tools" {{at the university of}} Twente. We introduce the way we currently test at the Formal Methods and Tools group. The main topic is how we extended this current test process in a pragmatic way to add initial support to perform timed testing. An evaluation of this extension will be presented. We conclude with plans for continuation of the Côte de Resyste project; timed testing {{plays a major role in}} them...|$|R
40|$|The {{traditional}} Automatic Test Equipment (ATE) {{systems are}} insufficient {{to cope with}} the challenges of testing more and more complex avionics systems. In this study, we propose a general method for module <b>automatic</b> <b>testing</b> in the avionics test platform based on PXI bus. We apply virtual instrument technology to realize the <b>automatic</b> <b>testing</b> and the fault reporting of signal performance. Taking the avionics bus ARINC 429 as an example, we introduce the architecture of <b>automatic</b> <b>test</b> system as well as the implementation of algorithms in Lab VIEW. The comprehensive experiments show the proposed method can effectively accomplish the <b>automatic</b> <b>testing</b> and fault reporting of signal performance. It greatly improves the generality and reliability of ATE in avionics systems...|$|R
40|$|Abstract. Following {{the test}} work is {{difficult}} and complex in the modern radar maintenance support, the <b>automatic</b> <b>testing</b> of radar board {{is necessary for the}} radar maintenance man. A <b>automatic</b> <b>test</b> system of radar board based on virtual instrument technology is discussed. The system used PXI bus technology and Labview program language. The design of <b>automatic</b> <b>testing</b> system is given, its hardware solution and software solution is designed. And finally the reliability and expansibility of system design is discussed at last...|$|R
40|$|Abstract. <b>Automatic</b> <b>testing</b> is very {{important}} for agile software development. There are some testing tasks can be finished by automatic tools, but most of them can not meet the actual needs of enterprises which is the direct reason of building an agile <b>automatic</b> <b>testing</b> framework named as Agilework. The structure, operation principle and building steps of the Agilework are descripted in details. The Agilework is a scalable framework which has high efficiency and flexibility. It can meet the requirements of the <b>automatic</b> <b>testing</b> in agile software development...|$|R
40|$|Aurouerrc TESTING oF ELECTRoNIC DEVICES {{is one of}} {{the fastest}} growing areas of {{electronic}} instrumentation. It is the way an increasing amount of our testing is done every day, and it is the way most of our testing will be done in the future. At present, however, most of the testing of electronic components, sub-assemblies, modules, and systems is still done manually. Many companies are just now installing or considering installing their first <b>automatic</b> <b>test</b> systems. While most people involved in electronic testing have read about or seen examples of <b>automatic</b> <b>test</b> systems, many may not be aware of the fundamentals involved in all <b>automatic</b> <b>testing.</b> Fig. 1, HP Model 9500 A is a typical computer-controlled, modular, multipurpose test system. lt stimulates the unit under test and measures its responses, then processes and records the data. Stimuli available are dc, Iow-frequency ac (to 100 kHz), and high-trequency ac (to 500 MHz). This article and the others in this issue will discuss the fundamentals of <b>automatic</b> <b>testing,</b> its advantages, the equipment used, how programming is done, how to choose or build a system, and what HP <b>automatic</b> <b>test</b> systems are currently being used. <b>Automatic</b> Versus Manual <b>Testing</b> <b>Automatic</b> <b>testing</b> of electronic and electrical devices requires the same functional elements as manual testing. These are: I Stimulation of the unit under test r Measurement of the unit's responses r Switchin...|$|R
40|$|Software is an {{important}} component of Large Information Weapon (LIW). We propose a data-driven distributed <b>automatic</b> <b>testing</b> framework, which is based on the analysis of LIW testing requirements, and it supports the whole process of distributed software test. The main components of the framework consist of distributed test designing environment, execution and control environment and test results show environment. We present a set of GUI scripting language specification for <b>automatic</b> <b>testing,</b> the script language with object-oriented features. Unlike the previous GUI <b>automatic</b> <b>testing</b> scripting language, this specification records the information of the node where the test cases will be running. As an application of the framework, we develop an <b>automatic</b> <b>testing</b> system (DMATS). DMATS has been put into practices in XXX-business electronic system, and it is proved the feasibility of the framework...|$|R
50|$|<b>Automatic</b> <b>test</b> pattern {{generation}} {{is a term}} of art in electronic design automation for the <b>automatic</b> generation of <b>test</b> vectors for electronic circuits.|$|R
5000|$|<b>Automatic</b> <b>test</b> {{execution}} and evaluation (assessment) in a Test campaign ...|$|R
5000|$|Teradyne's {{principal}} {{competitors in}} the <b>automatic</b> <b>test</b> equipment business are: ...|$|R
5000|$|... 1967: Europe's first <b>automatic</b> <b>test</b> {{system for}} {{integrated}} circuits (IC).|$|R
40|$|This {{research}} {{tried to}} improve the <b>test</b> <b>instrument</b> at advanced calculus 2. The objectives {{of this research was}} to <b>test</b> <b>instrument</b> the valid and good based on problem solving. This research uses 4 -D development model of Thiagarajan (1974) which consists of four stages: define, design, develop, and disseminate. This research only ended up at the stage of develop. Test validity processed by test proporsion, whereas testing of result analyzable by validity, and reliability. Product of the research show (1) the <b>test</b> <b>instrument</b> developed was proved to be valid by the validator with the following averaged scores 3, 05 and 3, 18 from the maximal averaged score 4, (2) the analysis of experiment producted <b>test</b> <b>instrument</b> which validity and reliability. Based on the overall findings from this research we can conclude that the <b>test</b> <b>instrument</b> were proved to be valid, and good. Key words : <b>test</b> <b>instrument,</b> problem solving, 4 -...|$|R
40|$|Since {{the early}} days of {{software}} <b>testing,</b> <b>automatic</b> <b>test</b> generation has been suggested as a way of allowing tests to be created at a lower cost. However, industrially useful and applicable tools for <b>automatic</b> <b>test</b> generation are still scarce. As a consequence, the evidence regarding the applicability or feasibility of <b>automatic</b> <b>test</b> generation in industrial practice is limited. This is especially problematic if we consider the use of <b>automatic</b> <b>test</b> generation for industrial safety-critical control systems, such as are found in power plants, airplanes, or trains. In this thesis, we improve the current state of <b>automatic</b> <b>test</b> generation by developing a technique based on model-checking that works with IEC 61131 - 3 industrial control software. We show how <b>automatic</b> <b>test</b> generation for IEC 61131 - 3 programs, containing both functional and timing information, can be solved as a model checking problem for both code and mutation coverage criteria.   The developed technique has been implemented in the CompleteTest tool. To evaluate the potential application of our technique, we present several studies where the tool is applied to industrial control software. Results show that CompleteTest is viable for use in industrial practice; it is efficient in terms of the time required to generate tests that satisfy both code and mutation coverage and scales well for most of the industrial programs considered. However, our results also show that there are still challenges {{associated with the use of}} <b>automatic</b> <b>test</b> generation. In particular, we found that while automatically generated tests, based on code coverage, can exercise the logic of the software as well as tests written manually, and can do so in a fraction of the time, they do not show better fault detection compared to manually created tests. Specifically, it seems that manually created tests are able to detect more faults of certain types (i. e, logical replacement, negation insertion and timer replacement) than automatically generated tests. To tackle this issue, we propose an approach for improving fault detection by using mutation coverage as a test criterion. We implemented this approach in the CompleteTest tool and used it to evaluate <b>automatic</b> <b>test</b> generation based on mutation testing. While the resulting tests were more effective than <b>automatic</b> <b>tests</b> generated based on code coverage, in terms of fault detection, they still were not better than manually created tests. In summary, our results highlight the need for improving the goals used by <b>automatic</b> <b>test</b> generation tools. Specifically, fault detection scores could be increased by considering some new mutation operators as well as higher-order mutations. Our thesis suggests that automatically generated test suites are significantly less costly in terms of testing time than manually created test suites. One conclusion, strongly supported by the results of this thesis, is that <b>automatic</b> <b>test</b> generation is efficient but currently not quite as effective as manual testing. This is a significant progress that needs to be further studied; we need to consider the implications and the extent to which <b>automatic</b> <b>test</b> generation can be used in the development of reliable safety-critical systems...|$|R
40|$|Abstract- Software testing plays a {{vital role}} in {{software}} development life cycle. An approach of testing which takes place at design phase can remove errors in the system and improvise the developed project. <b>Automatic</b> <b>test</b> case generation can be used for testing software or real time applications. Many evolutionary algorithms are used for generating test case automatically. This paper represent review of approach of <b>automatic</b> <b>test</b> case generation by analyzing the dynamic behaviour of UML diagram which takes place at design phase of SWDLC by using evolutionary algorithm multi objective genetic algorithm. Single objective genetic algorithm has been already used for <b>automatic</b> <b>testing...</b>|$|R
5000|$|<b>Automatic</b> <b>test</b> generation: A {{use case}} driven {{approach}} IEEE Trans on Software Engineering, 2006 ...|$|R
50|$|Sometimes <b>automatic</b> <b>test</b> pattern {{generation}} {{is used to}} help design the series of tests.|$|R
40|$|The {{approach}} {{suggested by}} a team engaged in augmentation of simulated circuit validation by <b>automatic</b> <b>testing</b> is explained with reference to a functional model and three automatic demonstration software packages: a tautology demonstrator, a Boyer & Moore theorem prover, and an OBJ 3 rewriting-rule-based system. The performances and fields of application of these tools for <b>automatic</b> <b>testing</b> of digital systems are assessed...|$|R
5000|$|Data {{that will}} be {{utilized}} for the design, development, and utilization of <b>automatic</b> <b>test</b> equipment(ATE) ...|$|R
40|$|Testing {{of large}} scale {{integrated}} logic circuits is considered from the point-of-view of <b>automatic</b> <b>test</b> pattern generation. A logic simulator based approach for <b>automatic</b> <b>test</b> pattern generation is taken and is described. The logic {{model and the}} timing model used in the simulator are also described. Two methods are presented for generating test patterns from {{the output of the}} simulator. Recommendations for future study are also presented...|$|R
40|$|Abstract. It is {{indispensable}} and effective to utilize <b>automatic</b> software <b>test</b> method {{to verify the}} steady operations and stable performance of scanning procedures for CT’s system. Directing at the problems which are encountered during {{the progress of the}} <b>automatic</b> <b>test</b> program development, In this paper, we discuss how to deal with such problems as “windows blocking”, ”identify control”, ”one click start up ” to make sure the manual <b>automatic</b> <b>test</b> code explored via the Coded UI is useful and robust. It is the final targets too realize the stable operations of multiple CT scanning procedures...|$|R
40|$|Conformance {{testing of}} {{graphics}} systems {{is a very}} complex and exhausting task. Years of practice with the GKS testing tools have shown a need for the <b>automatic</b> <b>testing</b> of visual output. Indeed, with regard to graphics systems which are more precisely specified than GKS like the Computer Graphics Interface (CGI), conformance testing is not manageable to all unless a major part can be automated. This paper discusses different strategies for the <b>automatic</b> <b>testing</b> of pictorial effect. It concentrates on the definition of lines and describes a strategy to answer the question put in the title by the <b>testing</b> system. Finally, <b>automatic</b> <b>testing</b> of simple graphical operations such as segment highlighting and visibility is discussed...|$|R
40|$|This master’s thesis {{deals with}} the design and {{implementation}} of part of <b>test</b> environment for <b>automatic</b> <b>testing</b> of electronic control unit in the production. The electronic control unit is manufactured by UNIS, a. s. and {{is used as a}} control and power electronics for the hydraulic unit. The theoretical part of the thesis {{deals with the}} development and <b>automatic</b> <b>testing</b> of electronics in the field of aerospace engineering. The practical part describes the proposed <b>automatic</b> <b>test</b> environment and implementation of testing software using hardware and software products by National Instruments. The main platforms used for software development are LabVIEW and TestStand. Created test environment is finally verified by testing several control units...|$|R
40|$|Abstract. To <b>automatic</b> <b>test</b> the {{function}} {{and performance of}} an airborne radar, changeable test adapter is adopted to implement the hardware and software design of the <b>automatic</b> <b>test</b> set of the antenna, transceiver and indicator of the radar based on AT 89 C 52. Problems such as t {{the different types of}} interfaces, the various kinds of signals and the test of microwave signal are solved successfully and the objectives of resource sharing and <b>automatic</b> <b>test</b> are realized. The test software is designed by modular structure, {{and with the help of}} <b>automatic</b> <b>test</b> set hardware, the required test items of the radar system are experimented and the test process control succeeded. Experiment results show that the <b>automatic</b> <b>test</b> set performs steadily and the results meet the requirements of the airborne radar. The set has the advantages of intelligent, manageable and reducing artificial errors. It provides effective guarantees for radar’s maintenance, fault diagnosis and fault detection, and has a wide application prospect with low cost. Introduction (Heading 1) The airborne radar on the equipment of certain airplane consists of antenna, transceiver extension and display device. It is mainly used to detect the target of the airplane which is in the front air and on the ground, and show the relative distance and position and some other parameters of the goal t...|$|R
50|$|Indra is {{organized}} around three business areas: information technologies, simulation & <b>automatic</b> <b>test</b> equipment, and defense electronic equipment.|$|R
5000|$|<b>Automatic</b> <b>test</b> pattern generation, ATPG - generates pattern-data to {{systematically}} exercise as many logic-gates, and other components, as possible.|$|R
5000|$|... #Caption: A Functional Test Fixture is {{a complex}} device to {{interface}} the DUT to the <b>automatic</b> <b>test</b> equipment (ATE) ...|$|R
40|$|Objective: Trials often may report several similar {{outcomes}} {{measured on}} different <b>test</b> <b>instruments.</b> We explored {{a method for}} synthesising treatment effect information both within and between trials and for “mapping ” ratios between the treatment effects on <b>test</b> <b>instruments</b> in a connected network. Standardise...|$|R
40|$|This {{research}} {{aimed to}} develop valid and appropriate <b>test</b> <b>instruments</b> to measura phonetical aspects of students 2 ̆ 7 mathaematical representation and communication in material about area and circumference of a circle. This research utilised formative research and development. The subjects {{of this study are}} tehe eight (VIII) grade students of SMP 9 Pontianak, during 2016 / 2017 academic year. There were 37 participants. The research found thet: (1) needs analusis found thar the teacher require to have <b>test</b> <b>instruments</b> that are suitable eith KTSP (education unit curriculum) due to differences between the old and <b>test</b> <b>instruments</b> that are being developed; (2) the validity of the <b>test</b> <b>instruments</b> about phonetical aspect of mathematic representation and communication of the aforementioned topic was 70...|$|R
40|$|In {{this paper}} {{we are giving}} an {{overview}} of <b>automatic</b> <b>test</b> data generation. The basic objective {{of this paper is}} to acquire the basic concepts related to automated test data generation research. The different implementation techniques are described with their relative merits and demerits. The future challenges and problems of test data generation are explained. Finally we describe the area where more focus is required for making <b>automatic</b> <b>test</b> data generation more effective in industry...|$|R
