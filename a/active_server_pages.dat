153|632|Public
25|$|IIS 3.0, {{which was}} {{included}} with Service Pack 2 of Windows NT 4.0, introduced the <b>Active</b> <b>Server</b> <b>Pages</b> dynamic scripting environment.|$|E
25|$|Visual InterDev: Visual InterDev {{was used}} to create web {{applications}} using Microsoft <b>Active</b> <b>Server</b> <b>Pages</b> (ASP) technologies. It supports code completion and includes database server management tools. It has been replaced with Microsoft Visual Web Developer.|$|E
25|$|The botnet propagates {{itself in}} a {{somewhat}} unusual way, as it actively searches and infects vulnerable websites running <b>Active</b> <b>Server</b> <b>Pages.</b> Once it finds a potential target the botnet performs a SQL Injections on the website, inserting an IFrame which redirects the user visiting the site to a site hosting Malware.|$|E
40|$|Abstract. The design {{quality of}} auto {{steering}} hydraulic rotating valve directly affects driving security, operating stability and ride comfort. <b>Active</b> <b>server</b> <b>page</b> (ASP) technology is {{applied in the}} study of working principal of auto steering hydraulic valve, calculation method of web-based design and parameterization design for parts. An collaborative design platform in network environment is built. The collaborative design of auto hydraulic Steering valve based on network is realized through some key technologies of safety technology in network design, database technology, graphical viewing technology, and COM technology...|$|R
40|$|ABSTRACT 1 - In {{recent years}} the World Wide Web has {{transformed}} into a dynamic, interactive medium, exposing a proliferation of on-line services that distribute large quantities of multimedia. This has increased {{awareness of the need}} to select an appropriate Web programming technology when creating Web-based services. This paper compares three dynamic Web programming technologies {{from the point of view}} of performance in multimedia distribution. In particular, this paper examines Sun Microsystem’s Java <b>Server</b> <b>Pages</b> (JSP), Microsoft’s <b>Active</b> <b>Server</b> <b>Page’s</b> (ASP) and the more recent ASP. NET. The comparison is based on testing applications that distribute multiple images from an Oracle 9 i database to Web-enabled clients. Previous research conducted by Oracle indicates that JSP and the underlying Java platform outperform ASP. The results in this paper, however, do not agree with Oracle’s statement as JSP tends to be marginally slower than ASP...|$|R
40|$|International audienceWith {{the rapid}} {{development}} of internet technology and protected cultivation in China, it is impending {{to implement a}} web-based information service system to spread professional agricultural knowledge. In this study, a 3 -layer architecture web-based information service platform (ISP) for protected crop pests was developed using HTML, JavaScript and <b>active</b> <b>server</b> <b>page</b> (ASP). The platform included the information management module, the aided diagnosis module, the module of instructions for pest control, the technology BBS module, the system management module and the relative references module. Two logical algorithms, namely, identification key method and fuzzy diagnostic method, were designed for aided diagnosis of protected crop pests. The ISP could provide a technological platform for decision makers, agricultural technique extension workers and farmers. It is favorable to the effective management of protected crop pests...|$|R
25|$|Microsoft first {{released}} Visual Studio (codenamed Boston, for {{the city}} of the same name, thus beginning the VS codenames related to places) in 1997, bundling many of its programming tools together for the first time. Visual Studio 97 came in two editions: Visual Studio Professional and Visual Studio Enterprise, the professional edition has three CDs, and the enterprise on four CDs. It included Visual J++ 1.1 for Java programming and introduced Visual InterDev for creating dynamically generated web sites using <b>Active</b> <b>Server</b> <b>Pages.</b> There was a single companion CD that contained the Microsoft Developer Network library.|$|E
2500|$|It {{was first}} {{released}} in January 2002 with version 1.0 of the [...]NET Framework, {{and is the}} successor to Microsoft's <b>Active</b> <b>Server</b> <b>Pages</b> (ASP) technology. ASP.NET is built on the Common Language Runtime (CLR), allowing programmers to write ASP.NET code using any supported [...]NET language. The ASP.NET SOAP extension framework allows ASP.NET components to process SOAP messages.|$|E
2500|$|Programming {{languages}} such as Perl, Ruby, C, and Java support template processing either natively, {{or through}} add-on libraries and modules. JavaServer Pages (JSP), PHP, and <b>Active</b> <b>Server</b> <b>Pages</b> (ASP with VBScript, JScript or other languages) are examples, themselves, of web template engines. [...] These technologies are typically used in server-side templating systems, {{but could be}} adapted for use on a [...] "edge-side" [...] proxy or for static page generation.|$|E
40|$|In {{the process}} of {{textbook}} management of universities, the flow of storage, collection and check of textbook is quite complicated and daily management flow and system also seriously constrains {{the efficiency of the}} management process. Thus, in order to combine the information management model and the traditional management model, it is necessary to set up a textbook information management system with the platform of information technology. This article mainly introduces how to employ the B/S system structure, use the <b>Active</b> <b>Server</b> <b>Page</b> (ASP) technology, set up textbook information management system of universities by taking SQL SERVER 2000 as the background database, set up a variety of functional modules according to different roles in the textbook management, enable textbook management to employ the networked management model and realize high efficiency of textbook information management. </p...|$|R
40|$|This final {{project is}} mainly about; {{creating}} a portal for CERD (Career and Employer Relation Department) {{by using the}} web programming language know as ASP (<b>Active</b> <b>Server</b> <b>Page),</b> Microsoft Access as the database management system and IIS (Internet Information Service) as the server. The main objective {{of this research is}} to design a system with the concept of portal. It enables CERD to provide online service for it clients and it operation could be done through the internet. The most significance things to design this portal are to create jobseekers registration, job advertisement and employer registration through the networking system. The SDLC method is used in order to design this portal as for the convenient the structured approached has been choose to design a user interface in a simple, user friendly and consistent...|$|R
40|$|Angiogenesis is the {{formation}} of new capillaries sprouting from pre-existing vessels. Angiogenesis occurs {{in a variety of}} normal physiological and pathological conditions and is regulated by a balance of stimulatory and inhibitory angiogenic factors. The control of this balance may fail and result in {{the formation}} of a pathologic capillary network during the development of many diseases. Therefore, we developed the angiogenesis database (AngioDB), which can provide a signaling network of angiogenesis-related biomolecules in human. Each record of AngioDB consisted of 12 fields and was developed by using a relational database management system. For the retrieval of data, <b>Active</b> <b>Server</b> <b>Page</b> (ASP) technology was integrated in this system. Users can access the database by a query or imagemap browsing program. The retrieving system also provides a list of angiogenesis-related molecules classified by three categories, and the database has an external link to NCBI databases. AngioDB is available via the Internet at [URL]...|$|R
2500|$|MDAC 1.0 {{was first}} {{released}} in August 1996. According to Microsoft, [...] "MDAC 1.0 existed more as concept than a coordinated, stand-alone setup program." [...] The MDAC 1.0 stack consisted of ODBC 3.0, OLE DB 1.1, ADO 1.0, and the Advanced Data Connector (ADC) 1.0 [...] {{which according to}} Microsoft was the precursor to the Remote Data Service of MDAC 1.5. It also included ODBC drivers for Access/Jet, SQL Server and Oracle databases. MDAC 1.0 was released via several mechanisms: the Advanced Data Connector shipped with Internet Information Server (IIS) 3.0 and as a downloadable cab file; OLE DB 1.1 and ADO 1.0 shipped with the OLE DB 1.1 SDK, which came with Visual Studio 97 and was also downloadable. MDAC 1.0 came with <b>Active</b> <b>Server</b> <b>Pages,</b> that itself came in IIS 3.0, and also came with Visual InterDev 1.0.|$|E
50|$|ColdFusion and <b>Active</b> <b>Server</b> <b>Pages</b> are {{examples}} of contemporary technologies that also implemented this model.|$|E
5000|$|ASP+, the {{successor}} to <b>Active</b> <b>Server</b> <b>Pages</b> was announced; this was renamed ASP.NET {{later in the year}} ...|$|E
40|$|How to use system {{analysis}} methods {{to identify the}} hazards in the industrialized process, working environment, and production management for complex industrial processes, such as thermal power plants, {{is one of the}} challenges in the systems engineering. A mathematical system safety assessment model is proposed for thermal power plants in this paper by integrating fuzzy analytical hierarchy process, set pair analysis, and system functionality analysis. In the basis of those, the key factors influencing the thermal power plant safety are analyzed. The influence factors are determined based on fuzzy analytical hierarchy process. The connection degree among the factors is obtained by set pair analysis. The system safety preponderant function is constructed through system functionality analysis for inherence properties and nonlinear influence. The decision analysis system is developed by using <b>active</b> <b>server</b> <b>page</b> technology, web resource integration, and cross-platform capabilities for applications to the industrialized process. The availability of proposed safety assessment approach is verified by using an actual thermal power plant, which has improved the enforceability and predictability in enterprise safety assessment...|$|R
40|$|Hardware and {{software}} co-design {{is one of}} the most effective ways to embed the same system into a complex platform. Using cloud computing, results could be shared among users more efficiently. We will be applying these techniques to create the Weapon Impact Scoring System (WISS), a real-time training system for calculating target practicing performance. The vision of this paper is to study how software and hardware co-design and cloud computing can connect different components into the system and provide hardware controls. The application has to keep track of stages with different components, and transfer data between each component. Also this system includes interactive web pages which monitors changes in the data returned by the hardware. This application is developed using the Microsoft <b>Active</b> <b>Server</b> <b>Page.</b> Net (ASP. Net) framework with C# as the programming language. Microsoft SQL Server 10 is used as the database. Other supported languages include Java Script and Active X for the interactive web page on the client side. Also to improve security, different encryption methods are used...|$|R
40|$|Objective: To {{investigate}} faculty perceptions about: departmental {{support for}} career activities; promotion and advancement, departmental and division decision-making processes; and professional climate at the Johns Hopkins School of Medicine (SoM), and possible differences in these perceptions {{between men and}} women. Survey Methodology: A faculty online survey comprising 38 questions {{was developed by the}} Committee on Faculty Development and Gender at the School of Medicine with support from the Johns Hopkins Biostatistics Center. Microsoft <b>Active</b> <b>Server</b> <b>Page</b> (ASP) software was used to create the web-based survey. Response data were stored using Microsoft SQL database software. The survey asked questions on: general demographics; perceptions about departmental support for career activities; issues related to promotion, advancement, and termination; conflicts arising between work and family life; and general questions about the overall professional climate. A copy of the survey is given in Appendix 1. Prior to sending the survey out via e-mail, a list of fulltime faculty in the School of Medicine was obtained from the SoM registrar’s office. This listing included 1742 faculty members, 1197 males and 545 females. It contained rank, department and gender, but not email addresses. Fulltim...|$|R
50|$|Other common {{server-side}} programming {{languages are}} JavaServer Pages (JSP), <b>Active</b> <b>Server</b> <b>Pages</b> (ASP), Perl, PHP, Python, Ruby, ColdFusion, and others.|$|E
5000|$|IIS 3.0, {{which was}} {{included}} with Service Pack 2 of Windows NT 4.0, introduced the <b>Active</b> <b>Server</b> <b>Pages</b> dynamic scripting environment.|$|E
50|$|<b>Active</b> <b>Server</b> <b>Pages</b> (ASP), later {{known as}} Classic ASP or ASP Classic, is Microsoft's first {{server-side}} script engine for dynamically generated web pages.|$|E
40|$|One of {{the central}} and key {{components}} to make the E-Commerce a success is high performance and highly reliable web server architectures. Extensive research has been sparked aiming at improving web server performance. Fundamental {{to the goal of}} improving web server performance is a solid understanding of behavior and performance of web servers. However, very little research is found on evaluating web server performance based on realistic workload representing E-Commerce applications which are usually exemplified by a large amount of CGI (Common Gateway Interface), ASP (<b>Active</b> <b>Server</b> <b>Page),</b> or Servlet (Java Server-side interface) calls. This paper presents a performance study under the workload with a mixture of static web page requests, CGI requests, Servlet requests, and database queries. System throughputs and user response times are measured for five different server architectures consisting of PCs that run both a web server program and a database. We observed that performance behaviors of the web server architectures considered under this mixed workload are quite different from that under static page workload and sometimes counter-intuitive. Our performance results suggest that there is a large room for potential performance improvement for web servers. 1...|$|R
40|$|Approved {{for public}} release; {{distribution}} is unlimitedIn recent years, declining budgets, limitations on {{military personnel and}} decreases in training areas have reduced the opportunity to conduct live military training. For these reasons, Distance Learning Systems are available for providing an almost realistic training platform for enlisted staff and officers. This thesis has two main objectives: The first {{is the development of}} a data model that {{can be used as a}} central information repository for an unlimited number of authenticated users. The Distance Training System (DTS) application was developed using a hierarchical approach. The DTS is a Content Management System (CMS) appropriate for users desiring the benefit of accessing the contents of a database. The other objective is the exploration of the interaction between application server technologies such as the JSP with a Web development tool such as Dreamweaver MX 2004. This work focuses on the convenience of developing a fast and accurate web application product using HTML as long as it results in a correct and clean data model. Other server technologies are also used as references, such as <b>Active</b> <b>Server</b> <b>Page</b> (ASP), Coldfusion and PHP, which along with Java Servlet Pages (JSP), are the leading technologies in web database development for processing user events. Major, Hellenic Arm...|$|R
40|$|This report {{describes}} {{the design and}} implementation issues of a book bag shopping system for the CINDI virtual library. There {{are a number of}} book bag systems, most of which are developed using Cgi/Perl, Java, <b>Active</b> <b>Server</b> <b>Page</b> (ASP) and ColdFusion. In the design and implementation of the CINDI book bag system, we use the PHP as a scripting language, MySQL as a database server, and Apache as a Web server under Debian Linux. This system environment can meet the requirements of the CINDI virtual library. It is a good combination for developing the CINDI book bag system. For introduction and easy understanding of the book bag system, the shopping bag system of the online Chapters. ca bookstore is reviewed. Some important issues for book bag system are discussed, like maintaining persistent information on the stateless web, user authentication, security, and the principles of web GUI design. What we applied in the system is also stated. The components of the book bag system and its implementation are given. Some screens of the GUI interface pages and some related code are also presented. Finally, the integration of the book bag system in CINDI virtual library system and further works for the system are depicted...|$|R
50|$|In 1995, full {{integrated}} server/language development environments first {{emerged and}} new web-specific languages were introduced, such as ColdFusion, PHP, and <b>Active</b> <b>Server</b> <b>Pages.</b>|$|E
50|$|In {{the early}} days Microsoft Access was the tool of choice. When the {{internet}} came into prominence in the late 90's Glazier began to build system using <b>Active</b> <b>Server</b> <b>Pages.</b>|$|E
50|$|In 2003, FogBugz was {{originally}} written in classic <b>Active</b> <b>Server</b> <b>Pages</b> and VBScript. In order {{to run on}} both Microsoft Windows and Linux, Fog Creek developed an ASP to PHP compiler called Thistle.|$|E
40|$|Wireless Application Protocol (WAP) {{technology}} uses mediums like Mobile, {{and other}} wireless devices. It bridges {{the gap between}} the mobile world and the Internet as well as corporate intranet. One of the most significant advantages of Internet access from mobile rather than PCs is the ability to instantly identify users geographic location. Application of WAP technology in health care services by the proposed project requires availability of WAP service provided by the Mobile service provider (Mobitel). Non-existence of this technology led the proposed system to be implemented on simulation technique of M 3 Gate software in place of WAP Gateway. The system is implemented using Wireless Mark up Language (WML) to enable wireless access to information based on WAP application. Wireless access to WML files is made possible with the <b>Active</b> <b>Server</b> <b>Page</b> (ASP). This functionality of dynamic pages provide the ability to turn regular web pages into web application and provides a degree of interaction that can occur between the client (Mobile users) and server. The WAP emulator works on Windows-Servers operating systems. The system required some modifications for Internet Information Services (IIS) to make Windows 2000 server suitable to work with WAP technology to interact with the database of the proposed application. IV To conclude, this research based on simulation method is thought to meet the pre-determined objectives despite the lack of WAP service in Sudan...|$|R
40|$|This thesis {{presents}} and develops {{efficient and effective}} methodologies for optimal hydraulic fracture design and fracture performance evaluation. These methods incorporate algorithms that simultaneously optimize all of the treatment parameters while accounting for required constraints. Damage effects, such as closure stress, gel damage and non-Darcy flow, are also considered in the optimal design and evaluation algorithms. Two user-friendly program modules, which are <b>active</b> <b>server</b> <b>page</b> (ASP) based, were developed to implement {{the utility of the}} methodologies. Case analysis was executed to demonstrate the workflow of the two modules. Finally, to validate the results from the two modules, results were compared to those from a 3 D simulation program. The main contributions of this work are: An optimal fracture design methodology called unified fracture design (UFD) is presented and damage effects are considered in the optimal design calculation. As a by-product of UFD, a fracture evaluation methodology is proposed to conduct well stimulation performance evaluation. The approach is based on calculating and comparing the actual dimensionless productivity index of fractured wells with the benchmark which has been developed for optimized production. To implement the fracture design and evaluation methods, two web ASP based user interfaces were developed; one is called Frac Design (Screening), and the other is Frac Evaluation. Both modules are built to hold the following features. o Friendly web ASP based user interface o Minimum user input o Proppant type and mesh size selection o Damage effects consideration options o Convenient on-line help...|$|R
40|$|The Automated Computer Access Request (AutoCAR) {{system is}} a Web-based account {{provisioning}} application that replaces the time-consuming paper-based computer-access request process at Johnson Space Center (JSC). Auto- CAR combines rules-based and role-based functionality in one application to provide a centralized system that is easily and widely accessible. The system features a work-flow engine that facilitates request routing, a user registration directory containing contact information and user metadata, an access request submission and tracking process, and a system administrator account management component. This provides full, end-to-end disposition approval chain accountability from the moment a request is submitted. By blending both rules-based and rolebased functionality, AutoCAR has the flexibility to route requests based on a user s nationality, JSC affiliation status, and other export-control requirements, while ensuring a user s request is addressed by either a primary or backup approver. All user accounts that are tracked in AutoCAR are recorded and mapped to the native operating system schema on the target platform where user accounts reside. This allows for future extensibility for supporting creation, deletion, and account management directly on the target platforms by way of AutoCAR. The system s directory-based lookup and day-today change analysis of directory information determines personnel moves, deletions, and additions, and automatically notifies a user via e-mail to revalidate his/her account access {{as a result of}} such changes. AutoCAR is a Microsoft classic <b>active</b> <b>server</b> <b>page</b> (ASP) application hosted on a Microsoft Internet Information Server (IIS) ...|$|R
5000|$|The {{development}} and widespread deployment of web-oriented scripting languages and frameworks, such as PHP and <b>Active</b> <b>Server</b> <b>Pages,</b> and database-backed Content Management Systems such as WordPress, provided much richer options for maintaining navigation.|$|E
50|$|Visual InterDev: Visual InterDev {{was used}} to create web {{applications}} using Microsoft <b>Active</b> <b>Server</b> <b>Pages</b> (ASP) technologies. It supports code completion and includes database server management tools. It has been replaced with Microsoft Visual Web Developer.|$|E
50|$|Microsoft Visual InterDev, part of Microsoft Visual Studio 97 and 6.0, is an IDE used {{to create}} web {{applications}} using Microsoft <b>Active</b> <b>Server</b> <b>Pages</b> (ASP) technologies. It has code completion, database server management tools, and an integrated debugger.|$|E
40|$|Adequate {{testing is}} {{essential}} to guarantee {{the quality of a}} software system and satisfy the user requirements. In today’s environment, web-based applications become critical to a company’s success. Therefore to ensure the web-based application works correctly, the application’s part must be thoroughly tested with appropriate testing technique. A systematic procedure in developing set of test cases is needed to ensure the quality of the application. Thus, this study is conducted to construct test cases using Design Class Diagram (DCD) criteria and study the suitability of this criterion in testing the web-based application class diagram. The DCD criteria contain three (3) criterions which are, Association End Multiplicity (AEM), Generalization (GN) and Class Attributes (CA). UML for Web Application Extension (WAE) was adapted in designing the web-based application class diagram. In order to test a web-based application, a web-based Hotel Reservation System (W-HReS) was developed using <b>Active</b> <b>Server</b> <b>Page</b> (ASP) technology. The application consists of five use cases, which are Make Registration, Make Reservation, Search for Room Availability, Login and Cancel Reservation. A set of test cases derived for DCD criteria has been constructed to test the application. The findings suggest that DCD criteria, in total, are not appropriate for testing web-based application. This {{is due to the fact}} that AEM cannot be used to represent all relationships in WAE class diagram. In addition, since there is no generalization association in WAE class diagram, GN cannot be used to test the diagram. However CA seems to be appropriate to test the diagram since all criteria are apparent and well-defined in the diagram...|$|R
40|$|Student {{progression}} {{through an}} academic year is often full of {{questions regarding the}} relative level of achievement in continuous appraisal compared with end-of-year exams. In-course assessment marks are distributed to students during the year but many students {{do not know how}} their performance in the in-course assessment affects the score required to pass the year. In line with future curriculum developments that will allow students to include or exclude in-course assessment marks in their final examination score, we have developed an innovative new system to enable students to not only view their continuous assessment marks for the entire year on the web, but also to see how these marks contribute to their final exam grades. This will indicate how many marks must be potentially attained in their final exam to pass. Areas of weakness are clearly visible and the effect these weaknesses have on the overall outcome will be shown. The student-led appraisal of marks (SLAM) system is currently being used for the 2 nd year Medical Neuroscience course. Students can view their marks for timed essays, spot tests, tutorial attendance and practical assessments on-line. Using an <b>active</b> <b>server</b> <b>page</b> interface to a relational database backend running on Internet Information Services, students log in to the system using their email address and candidate number. In-course assessment marks are added to the database as they are released, allowing a cumulative total of marks to be viewed throughout the year. By the time the students are revising for their end-of-year exams their grade record for the whole year is available on-line. The weightings of these in-course assessment marks are taken into account when the system calculates what percentage the student must score in their final exam to attain a pass, merit or distinction. Assessment titles are displayed along with the maximum mark attainable as well as the marks that the student has obtained for each one. When these marks are passed through the calculation algorithm the percentages that must be achieved in the final exam are shown for the different grade levels. Individual assessment marks may be de-selected, meaning that they are not included in the grade calculations. The effect of including each unit in the final assessment can be seen. Over 900 'hits' on the system have been made by 2 nd year medical students (350 students), indicating multiple repeat visitors. Although this system is currently running on an informative basis at the moment, it is hoped that in the future, students will actively use this system to determine which in-course assessment marks to include or exclude before final examinations are taken and to register these preferences on-line...|$|R
5000|$|Python <b>Server</b> <b>Pages</b> (PSP) {{is a name}} used {{by several}} {{different}} implementations of server-side script engines for creating dynamically-generated web pages by embedding Python in HTML. For example, an implementation of Python <b>Server</b> <b>Pages</b> was released with mod_python 3.1 in 2004.Spyce, which also claims the phrase [...] "Python Server Pages", was first released in 2002.The Webware for Python suite also contains an implementation of Python <b>Server</b> <b>Pages</b> released as early as 2000.An earlier tool with a similar function also called Python <b>Server</b> <b>Pages</b> but based on Java and JPython was first released in 1999.|$|R
